using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using System.Threading;
using Assets.Scripts.Utils;
using B4TGames.MenuObjects;
using B4TGames.MenuObjects.Lobby;
using B4TGames.Multiplayer;
using B4TGames.RollerCoasters;
using B4TGames.RollerCoasters.TargetShooting;
using Battlehub.RTHandles;
using Battlehub.SplineEditor;
using Battlehub.UIControls;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using Digger.NativeCollections;
using Digger.TerrainCutters;
using Dreamteck.Splines;
using EasyRoads3Dv3;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Photon.Realtime;
using Pico.Platform;
using Pico.Platform.Models;
using TMPro;
using TerrainSlicingKit.PlayModeUtilities;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.XR.CoreUtils;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.DualShock;
using UnityEngine.InputSystem.XR;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.SpatialTracking;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using UnitySA.Utility;
using VLB;
using YawVR;
using ZenFulcrum.Track;
using ch.sycoforge.Decal;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000003")]
public class README : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Text;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1A4D2F4", Offset = "0x1A4D2F4", VA = "0x1A4D2F4")]
	public README()
	{
	}
}
[Serializable]
[Token(Token = "0x2000004")]
public class EasyColliderRotateDuplicate
{
	[Token(Token = "0x2000005")]
	public enum ROTATE_AXIS
	{
		[Token(Token = "0x400000D")]
		X,
		[Token(Token = "0x400000E")]
		Y,
		[Token(Token = "0x400000F")]
		Z
	}

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ROTATE_AXIS axis;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NumberOfDuplications;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartRotation;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndRotation;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pivot;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject attachTo;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1A4D34C", Offset = "0x1A4D34C", VA = "0x1A4D34C")]
	public EasyColliderRotateDuplicate()
	{
	}
}
[Token(Token = "0x2000006")]
public class ERVegetationStudio : ScriptableObject
{
	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1A4D364", Offset = "0x1A4D364", VA = "0x1A4D364")]
	public static bool VegetationStudio()
	{
		return default(bool);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1A4D36C", Offset = "0x1A4D36C", VA = "0x1A4D36C")]
	public static bool VegetationStudioPro()
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1A4D374", Offset = "0x1A4D374", VA = "0x1A4D374")]
	public static void CreateVegetationMaskLine(GameObject go, float grassPerimeter, float plantPerimeter, float treePerimeter, float objectPerimeter, float largeObjectPerimeter)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1A4D378", Offset = "0x1A4D378", VA = "0x1A4D378")]
	public static void UpdateVegetationMaskLine(GameObject go, ERVSData[] vsData, float grassPerimeter, float plantPerimeter, float treePerimeter, float objectPerimeter, float largeObjectPerimeter)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1A4D37C", Offset = "0x1A4D37C", VA = "0x1A4D37C")]
	public static void UpdateHeightmap(Bounds bounds)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1A4D380", Offset = "0x1A4D380", VA = "0x1A4D380")]
	public static void RemoveVegetationMaskLine(GameObject go)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1A4D384", Offset = "0x1A4D384", VA = "0x1A4D384")]
	public static void CreateBiomeArea(GameObject go, float distance, float blendDistance, float noise)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1A4D388", Offset = "0x1A4D388", VA = "0x1A4D388")]
	public static void UpdateBiomeArea(GameObject go, ERVSData[] vsData, float distance, float blendDistance, float noise)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1A4D38C", Offset = "0x1A4D38C", VA = "0x1A4D38C")]
	public static void RemoveBiomeArea(GameObject go)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1A4D390", Offset = "0x1A4D390", VA = "0x1A4D390")]
	public ERVegetationStudio()
	{
	}
}
[Token(Token = "0x2000007")]
public class runtimeScript : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ERRoadNetwork roadNetwork;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ERRoad road;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject go;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currentElement;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distance;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1A4D398", Offset = "0x1A4D398", VA = "0x1A4D398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1A4D6C0", Offset = "0x1A4D6C0", VA = "0x1A4D6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1A4D7A8", Offset = "0x1A4D7A8", VA = "0x1A4D7A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1A4D838", Offset = "0x1A4D838", VA = "0x1A4D838")]
	public runtimeScript()
	{
	}
}
[Token(Token = "0x2000008")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1A4D848", Offset = "0x1A4D848", VA = "0x1A4D848")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1A4D854", Offset = "0x1A4D854", VA = "0x1A4D854")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1A4D96C", Offset = "0x1A4D96C", VA = "0x1A4D96C")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000009")]
public class CFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x17000004")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0x1A4E964", Offset = "0x1A4E964", VA = "0x1A4E964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000005")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0x1A4E9AC", Offset = "0x1A4E9AC", VA = "0x1A4E9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x1A4E670", Offset = "0x1A4E670", VA = "0x1A4E670")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x1A4E7E8", Offset = "0x1A4E7E8", VA = "0x1A4E7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x1A4E7EC", Offset = "0x1A4E7EC", VA = "0x1A4E7EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x1A4E96C", Offset = "0x1A4E96C", VA = "0x1A4E96C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[Space]
	public Image slowMoBtn;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space]
	public Text EffectLabel;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1A4D97C", Offset = "0x1A4D97C", VA = "0x1A4D97C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1A4DD60", Offset = "0x1A4DD60", VA = "0x1A4DD60")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1A4E3C4", Offset = "0x1A4E3C4", VA = "0x1A4E3C4")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1A4E484", Offset = "0x1A4E484", VA = "0x1A4E484")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1A4E554", Offset = "0x1A4E554", VA = "0x1A4E554")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1A4E5F4", Offset = "0x1A4E5F4", VA = "0x1A4E5F4")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1A4E5F8", Offset = "0x1A4E5F8", VA = "0x1A4E5F8")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1A4DC34", Offset = "0x1A4DC34", VA = "0x1A4DC34")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1A4E19C", Offset = "0x1A4E19C", VA = "0x1A4E19C")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1A4E5FC", Offset = "0x1A4E5FC", VA = "0x1A4E5FC")]
	[IteratorStateMachine(typeof(<CheckForDeletedParticles>d__25))]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1A4E004", Offset = "0x1A4E004", VA = "0x1A4E004")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1A4E038", Offset = "0x1A4E038", VA = "0x1A4E038")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1A4E06C", Offset = "0x1A4E06C", VA = "0x1A4E06C")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1A4E698", Offset = "0x1A4E698", VA = "0x1A4E698")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200000C")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1A4E9B4", Offset = "0x1A4E9B4", VA = "0x1A4E9B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1A4EA3C", Offset = "0x1A4EA3C", VA = "0x1A4EA3C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200000D")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1A4EA54", Offset = "0x1A4EA54", VA = "0x1A4EA54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1A4EB98", Offset = "0x1A4EB98", VA = "0x1A4EB98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1A4EC74", Offset = "0x1A4EC74", VA = "0x1A4EC74")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200000E")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1A4ED10", Offset = "0x1A4ED10", VA = "0x1A4ED10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1A4EE4C", Offset = "0x1A4EE4C", VA = "0x1A4EE4C")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200000F")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1A4EEA8", Offset = "0x1A4EEA8", VA = "0x1A4EEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1A4EF48", Offset = "0x1A4EF48", VA = "0x1A4EF48")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x1A4EFB8", Offset = "0x1A4EFB8", VA = "0x1A4EFB8")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000010")]
[RequireComponent(typeof(ParticleSystem))]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000011")]
	[CompilerGenerated]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x17000006")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0x1A4F2B0", Offset = "0x1A4F2B0", VA = "0x1A4F2B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000007")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0x1A4F2F8", Offset = "0x1A4F2F8", VA = "0x1A4F2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x1A4F0F4", Offset = "0x1A4F0F4", VA = "0x1A4F0F4")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0x1A4F124", Offset = "0x1A4F124", VA = "0x1A4F124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0x1A4F128", Offset = "0x1A4F128", VA = "0x1A4F128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x1A4F2B8", Offset = "0x1A4F2B8", VA = "0x1A4F2B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1A4F034", Offset = "0x1A4F034", VA = "0x1A4F034")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1A4F080", Offset = "0x1A4F080", VA = "0x1A4F080")]
	[IteratorStateMachine(typeof(<CheckIfAlive>d__2))]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1A4F11C", Offset = "0x1A4F11C", VA = "0x1A4F11C")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000012")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1A4F300", Offset = "0x1A4F300", VA = "0x1A4F300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1A4F368", Offset = "0x1A4F368", VA = "0x1A4F368")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000013")]
[RequireComponent(typeof(Light))]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1A4F378", Offset = "0x1A4F378", VA = "0x1A4F378")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1A4F3D8", Offset = "0x1A4F3D8", VA = "0x1A4F3D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1A4F3EC", Offset = "0x1A4F3EC", VA = "0x1A4F3EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1A4F49C", Offset = "0x1A4F49C", VA = "0x1A4F49C")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000014")]
[RequireComponent(typeof(Light))]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1A4F4AC", Offset = "0x1A4F4AC", VA = "0x1A4F4AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1A4F50C", Offset = "0x1A4F50C", VA = "0x1A4F50C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1A4F588", Offset = "0x1A4F588", VA = "0x1A4F588")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1A4F6EC", Offset = "0x1A4F6EC", VA = "0x1A4F6EC")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000015")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1A4F6FC", Offset = "0x1A4F6FC", VA = "0x1A4F6FC")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x2000016")]
public class MoveMe : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool forwarding;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delta;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1A4F704", Offset = "0x1A4F704", VA = "0x1A4F704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1A4F708", Offset = "0x1A4F708", VA = "0x1A4F708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1A4F7B0", Offset = "0x1A4F7B0", VA = "0x1A4F7B0")]
	public MoveMe()
	{
	}
}
[Token(Token = "0x2000017")]
public class RotateMe : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 center_to_ratate;

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1A4F7C0", Offset = "0x1A4F7C0", VA = "0x1A4F7C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1A4F968", Offset = "0x1A4F968", VA = "0x1A4F968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1A4FAB4", Offset = "0x1A4FAB4", VA = "0x1A4FAB4")]
	public RotateMe()
	{
	}
}
[Token(Token = "0x2000018")]
public class Nl_DragObject : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera Cam;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rigidboy;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distanceZ;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isTaken;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 offset;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 dir;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1A4FABC", Offset = "0x1A4FABC", VA = "0x1A4FABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1A4FB24", Offset = "0x1A4FB24", VA = "0x1A4FB24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1A4FDDC", Offset = "0x1A4FDDC", VA = "0x1A4FDDC")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1A5000C", Offset = "0x1A5000C", VA = "0x1A5000C")]
	public Nl_DragObject()
	{
	}
}
[Token(Token = "0x2000019")]
[RequireComponent(typeof(EasyDecal))]
public class CandidateFilter : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ExclusiveReceiver;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EasyDecal decal;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1A50014", Offset = "0x1A50014", VA = "0x1A50014")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1A50160", Offset = "0x1A50160", VA = "0x1A50160")]
	private void bp_OnCandidatesProcessed(List<Collider> colliders)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1A50470", Offset = "0x1A50470", VA = "0x1A50470")]
	public CandidateFilter()
	{
	}
}
[Token(Token = "0x200001A")]
[RequireComponent(typeof(EasyDecal))]
public class DecalPreProcessor : MonoBehaviour
{
	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1A50478", Offset = "0x1A50478", VA = "0x1A50478")]
	private void Awake()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1A504EC", Offset = "0x1A504EC", VA = "0x1A504EC")]
	public DecalPreProcessor()
	{
	}
}
[Token(Token = "0x200001B")]
public class InfoBubble : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WobbleAxis;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WobbleFrequency;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WobbleAmplitude;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TrackTarget;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startOffsetTarget;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1A504F4", Offset = "0x1A504F4", VA = "0x1A504F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1A5055C", Offset = "0x1A5055C", VA = "0x1A5055C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1A50628", Offset = "0x1A50628", VA = "0x1A50628")]
	public InfoBubble()
	{
	}
}
[Token(Token = "0x200001C")]
public class RuntimeDecalCombiner
{
	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1A50694", Offset = "0x1A50694", VA = "0x1A50694")]
	public static List<GameObject> Combine(IList<EasyDecal> decals)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1A50B64", Offset = "0x1A50B64", VA = "0x1A50B64")]
	private static List<GameObject> Combine(Dictionary<DecalTextureAtlas, List<EasyDecal>> mappings)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1A51114", Offset = "0x1A51114", VA = "0x1A51114")]
	private static GameObject Combine(IList<EasyDecal> decals, DecalTextureAtlas atlas)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1A516A0", Offset = "0x1A516A0", VA = "0x1A516A0")]
	public RuntimeDecalCombiner()
	{
	}
}
[Token(Token = "0x200001D")]
public class SimpleMove : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AngularSpeed;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1A516A8", Offset = "0x1A516A8", VA = "0x1A516A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1A51898", Offset = "0x1A51898", VA = "0x1A51898")]
	public SimpleMove()
	{
	}
}
[Token(Token = "0x200001E")]
public class SparksExecutioner : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lifetime;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1A518A8", Offset = "0x1A518A8", VA = "0x1A518A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1A518F8", Offset = "0x1A518F8", VA = "0x1A518F8")]
	private void Kill()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1A51964", Offset = "0x1A51964", VA = "0x1A51964")]
	public SparksExecutioner()
	{
	}
}
[Token(Token = "0x200001F")]
[ExecuteInEditMode]
public class FenceLayout : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum EditMode
	{
		[Token(Token = "0x4000076")]
		None,
		[Token(Token = "0x4000077")]
		Add,
		[Token(Token = "0x4000078")]
		Delete
	}

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> FencePoints;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] FencePrefabs;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PostPrefab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 FenceEndOffset;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FenceRotation;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float FenceLength;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 FenceScale;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool CompleteLoop;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool ObjectMode;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 PositionVariation;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector2 RotationVariation;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 ScaleVariation;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool UseShear;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool UseRaycast;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float RaycastOffsetMax;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float RaycastOffsetMin;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int LayerMask;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private EditMode m_currentEditMode;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_mousePos;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1A51974", Offset = "0x1A51974", VA = "0x1A51974")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1A522F8", Offset = "0x1A522F8", VA = "0x1A522F8")]
	public void SetEditMode(EditMode mode, Vector3 mousePos)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1A51DB0", Offset = "0x1A51DB0", VA = "0x1A51DB0")]
	public int GetAddPointIdx()
	{
		return default(int);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1A51CB4", Offset = "0x1A51CB4", VA = "0x1A51CB4")]
	public int GetDeletePointIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1A52308", Offset = "0x1A52308", VA = "0x1A52308")]
	public FenceLayout()
	{
	}
}
[Token(Token = "0x2000021")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToReset;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1A523FC", Offset = "0x1A523FC", VA = "0x1A523FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1A5242C", Offset = "0x1A5242C", VA = "0x1A5242C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1A52524", Offset = "0x1A52524", VA = "0x1A52524")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x2000022")]
public class RemoveDemoMessage : MonoBehaviour
{
	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1A52534", Offset = "0x1A52534", VA = "0x1A52534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1A525A0", Offset = "0x1A525A0", VA = "0x1A525A0")]
	public RemoveDemoMessage()
	{
	}
}
[Token(Token = "0x2000023")]
[RequireComponent(typeof(Collider))]
public class Respawner : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform location;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1A525A8", Offset = "0x1A525A8", VA = "0x1A525A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1A52610", Offset = "0x1A52610", VA = "0x1A52610")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1A526AC", Offset = "0x1A526AC", VA = "0x1A526AC")]
	public Respawner()
	{
	}
}
[Token(Token = "0x2000024")]
public class TrainPassing : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <OnTriggerExit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider c;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrainPassing <>4__this;

		[Token(Token = "0x17000008")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000080")]
			[Address(RVA = "0x1A52A24", Offset = "0x1A52A24", VA = "0x1A52A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000009")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0x1A52A6C", Offset = "0x1A52A6C", VA = "0x1A52A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007D")]
		[Address(RVA = "0x1A528B0", Offset = "0x1A528B0", VA = "0x1A528B0")]
		[DebuggerHidden]
		public <OnTriggerExit>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0x1A528E0", Offset = "0x1A528E0", VA = "0x1A528E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0x1A528E4", Offset = "0x1A528E4", VA = "0x1A528E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x1A52A2C", Offset = "0x1A52A2C", VA = "0x1A52A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject train;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource mainAudio;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float audioVolume;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject passingTrainPrefab;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1A526B4", Offset = "0x1A526B4", VA = "0x1A526B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1A526DC", Offset = "0x1A526DC", VA = "0x1A526DC")]
	private void OnTriggerStay(Collider o)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1A52820", Offset = "0x1A52820", VA = "0x1A52820")]
	[IteratorStateMachine(typeof(<OnTriggerExit>d__6))]
	private IEnumerator OnTriggerExit(Collider c)
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1A528D8", Offset = "0x1A528D8", VA = "0x1A528D8")]
	public TrainPassing()
	{
	}
}
[Token(Token = "0x2000026")]
[RequireComponent(typeof(Camera))]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shakeAmount;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 originalPos;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1A52A74", Offset = "0x1A52A74", VA = "0x1A52A74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1A52AA4", Offset = "0x1A52AA4", VA = "0x1A52AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1A52B14", Offset = "0x1A52B14", VA = "0x1A52B14")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x2000027")]
public class Gate : MonoBehaviour
{
	[Token(Token = "0x2000028")]
	[CompilerGenerated]
	private sealed class <openGate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gate <>4__this;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0x1A52F04", Offset = "0x1A52F04", VA = "0x1A52F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0x1A52F4C", Offset = "0x1A52F4C", VA = "0x1A52F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1A52D68", Offset = "0x1A52D68", VA = "0x1A52D68")]
		[DebuggerHidden]
		public <openGate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x1A52D98", Offset = "0x1A52D98", VA = "0x1A52D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0x1A52D9C", Offset = "0x1A52D9C", VA = "0x1A52D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x1A52F0C", Offset = "0x1A52F0C", VA = "0x1A52F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip gateSound;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] gates;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider[] boxColliders;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1A52B28", Offset = "0x1A52B28", VA = "0x1A52B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1A52CD4", Offset = "0x1A52CD4", VA = "0x1A52CD4")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1A52CF4", Offset = "0x1A52CF4", VA = "0x1A52CF4")]
	[IteratorStateMachine(typeof(<openGate>d__5))]
	private IEnumerator openGate()
	{
		return null;
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1A52D90", Offset = "0x1A52D90", VA = "0x1A52D90")]
	public Gate()
	{
	}
}
[Token(Token = "0x2000029")]
public class LeftDoor : MonoBehaviour
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 targetValue;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1A52F54", Offset = "0x1A52F54", VA = "0x1A52F54")]
	public void SetDoorVector(float amt)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1A52FD4", Offset = "0x1A52FD4", VA = "0x1A52FD4")]
	public LeftDoor()
	{
	}
}
[Token(Token = "0x200002A")]
[RequireComponent(typeof(BoxCollider))]
public class ParkedRailcar_Interaction : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	[CompilerGenerated]
	private sealed class <snapDoorsInState>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkedRailcar_Interaction <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009F")]
			[Address(RVA = "0x1A53A14", Offset = "0x1A53A14", VA = "0x1A53A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0x1A53A5C", Offset = "0x1A53A5C", VA = "0x1A53A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0x1A536E8", Offset = "0x1A536E8", VA = "0x1A536E8")]
		[DebuggerHidden]
		public <snapDoorsInState>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0x1A53894", Offset = "0x1A53894", VA = "0x1A53894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0x1A53898", Offset = "0x1A53898", VA = "0x1A53898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1A53A1C", Offset = "0x1A53A1C", VA = "0x1A53A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] railCars;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font font;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RightDoor[] rightDoors;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeftDoor[] leftDoors;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool opened;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isMoving;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip doorSlideOpen;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip doorSlideClose;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 playerPosition;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool inZone;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1A52FDC", Offset = "0x1A52FDC", VA = "0x1A52FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1A531B8", Offset = "0x1A531B8", VA = "0x1A531B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1A53378", Offset = "0x1A53378", VA = "0x1A53378")]
	private void SetDoorVector(bool toOpen)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1A534FC", Offset = "0x1A534FC", VA = "0x1A534FC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1A53684", Offset = "0x1A53684", VA = "0x1A53684")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1A531C8", Offset = "0x1A531C8", VA = "0x1A531C8")]
	private void MoveDoors()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1A53658", Offset = "0x1A53658", VA = "0x1A53658")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1A535E4", Offset = "0x1A535E4", VA = "0x1A535E4")]
	[IteratorStateMachine(typeof(<snapDoorsInState>d__18))]
	private IEnumerator snapDoorsInState()
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1A53710", Offset = "0x1A53710", VA = "0x1A53710")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1A53880", Offset = "0x1A53880", VA = "0x1A53880")]
	public ParkedRailcar_Interaction()
	{
	}
}
[Token(Token = "0x200002C")]
public class RightDoor : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 targetValue;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1A5347C", Offset = "0x1A5347C", VA = "0x1A5347C")]
	public void SetDoorVector(float amt)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1A53A64", Offset = "0x1A53A64", VA = "0x1A53A64")]
	public RightDoor()
	{
	}
}
[Token(Token = "0x200002D")]
public class ServiceDoor : MonoBehaviour
{
	[Token(Token = "0x200002E")]
	[CompilerGenerated]
	private sealed class <moveDoor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServiceDoor <>4__this;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion target;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AC")]
			[Address(RVA = "0x1A54294", Offset = "0x1A54294", VA = "0x1A54294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AE")]
			[Address(RVA = "0x1A542DC", Offset = "0x1A542DC", VA = "0x1A542DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x1A53EB8", Offset = "0x1A53EB8", VA = "0x1A53EB8")]
		[DebuggerHidden]
		public <moveDoor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1A540E8", Offset = "0x1A540E8", VA = "0x1A540E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1A540EC", Offset = "0x1A540EC", VA = "0x1A540EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x1A5429C", Offset = "0x1A5429C", VA = "0x1A5429C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float doorOpenAngle;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float doorClosedAngle;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip openSound;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip closeSound;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion doorOpen;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion doorClosed;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Font font;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool doorStatus;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool playerInRange;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform player;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1A53A6C", Offset = "0x1A53A6C", VA = "0x1A53A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1A53C20", Offset = "0x1A53C20", VA = "0x1A53C20")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1A53E1C", Offset = "0x1A53E1C", VA = "0x1A53E1C")]
	[IteratorStateMachine(typeof(<moveDoor>d__13))]
	private IEnumerator moveDoor(Quaternion target)
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1A53EE0", Offset = "0x1A53EE0", VA = "0x1A53EE0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1A54074", Offset = "0x1A54074", VA = "0x1A54074")]
	public ServiceDoor()
	{
	}
}
[Token(Token = "0x200002F")]
public class TicketMachine : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip ticketing;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font font;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool inZone;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1A542E4", Offset = "0x1A542E4", VA = "0x1A542E4")]
	private void OnTriggerStay(Collider o)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1A5438C", Offset = "0x1A5438C", VA = "0x1A5438C")]
	private void OnTriggerExit()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1A54394", Offset = "0x1A54394", VA = "0x1A54394")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1A54504", Offset = "0x1A54504", VA = "0x1A54504")]
	public TicketMachine()
	{
	}
}
[Token(Token = "0x2000030")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x2000031")]
	[CompilerGenerated]
	private sealed class <InsideTrainAnnouncement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Timer <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000BA")]
			[Address(RVA = "0x1A54ACC", Offset = "0x1A54ACC", VA = "0x1A54ACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0x1A54B14", Offset = "0x1A54B14", VA = "0x1A54B14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x1A5498C", Offset = "0x1A5498C", VA = "0x1A5498C")]
		[DebuggerHidden]
		public <InsideTrainAnnouncement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x1A549C4", Offset = "0x1A549C4", VA = "0x1A549C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x1A549C8", Offset = "0x1A549C8", VA = "0x1A549C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x1A54AD4", Offset = "0x1A54AD4", VA = "0x1A54AD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image bar;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Train1 train;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool starting;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isSet;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1A5450C", Offset = "0x1A5450C", VA = "0x1A5450C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1A545E8", Offset = "0x1A545E8", VA = "0x1A545E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1A548B8", Offset = "0x1A548B8", VA = "0x1A548B8")]
	[IteratorStateMachine(typeof(<InsideTrainAnnouncement>d__8))]
	private IEnumerator InsideTrainAnnouncement()
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1A549B4", Offset = "0x1A549B4", VA = "0x1A549B4")]
	public Timer()
	{
	}
}
[Token(Token = "0x2000032")]
public class Train1 : MonoBehaviour
{
	[Token(Token = "0x2000033")]
	[CompilerGenerated]
	private sealed class <LaunchTrain>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float s;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CD")]
			[Address(RVA = "0x1A5543C", Offset = "0x1A5543C", VA = "0x1A5543C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0x1A55484", Offset = "0x1A55484", VA = "0x1A55484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1A54E5C", Offset = "0x1A54E5C", VA = "0x1A54E5C")]
		[DebuggerHidden]
		public <LaunchTrain>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x1A55270", Offset = "0x1A55270", VA = "0x1A55270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1A55274", Offset = "0x1A55274", VA = "0x1A55274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x1A55444", Offset = "0x1A55444", VA = "0x1A55444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[CompilerGenerated]
	private sealed class <leaveStation>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0x1A55748", Offset = "0x1A55748", VA = "0x1A55748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D5")]
			[Address(RVA = "0x1A55790", Offset = "0x1A55790", VA = "0x1A55790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x1A54F9C", Offset = "0x1A54F9C", VA = "0x1A54F9C")]
		[DebuggerHidden]
		public <leaveStation>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x1A5548C", Offset = "0x1A5548C", VA = "0x1A5548C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x1A55490", Offset = "0x1A55490", VA = "0x1A55490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x1A55750", Offset = "0x1A55750", VA = "0x1A55750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[CompilerGenerated]
	private sealed class <Depart>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D9")]
			[Address(RVA = "0x1A559C8", Offset = "0x1A559C8", VA = "0x1A559C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DB")]
			[Address(RVA = "0x1A55A10", Offset = "0x1A55A10", VA = "0x1A55A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1A54FC4", Offset = "0x1A54FC4", VA = "0x1A54FC4")]
		[DebuggerHidden]
		public <Depart>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1A55798", Offset = "0x1A55798", VA = "0x1A55798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1A5579C", Offset = "0x1A5579C", VA = "0x1A5579C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x1A559D0", Offset = "0x1A559D0", VA = "0x1A559D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000036")]
	[CompilerGenerated]
	private sealed class <RestartLevel>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DF")]
			[Address(RVA = "0x1A55B00", Offset = "0x1A55B00", VA = "0x1A55B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0x1A55B48", Offset = "0x1A55B48", VA = "0x1A55B48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1A5504C", Offset = "0x1A5504C", VA = "0x1A5504C")]
		[DebuggerHidden]
		public <RestartLevel>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1A55A18", Offset = "0x1A55A18", VA = "0x1A55A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1A55A1C", Offset = "0x1A55A1C", VA = "0x1A55A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1A55B08", Offset = "0x1A55B08", VA = "0x1A55B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000037")]
	[CompilerGenerated]
	private sealed class <DisableTrain>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train1 <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E5")]
			[Address(RVA = "0x1A55D20", Offset = "0x1A55D20", VA = "0x1A55D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E7")]
			[Address(RVA = "0x1A55D68", Offset = "0x1A55D68", VA = "0x1A55D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1A550E8", Offset = "0x1A550E8", VA = "0x1A550E8")]
		[DebuggerHidden]
		public <DisableTrain>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1A55B50", Offset = "0x1A55B50", VA = "0x1A55B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1A55B54", Offset = "0x1A55B54", VA = "0x1A55B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1A55D28", Offset = "0x1A55D28", VA = "0x1A55D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource mainPASystem;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip trainArriving;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip ambient;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip announcement;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip leaving;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool trainStopped;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Light[] lights;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform startPos;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool playerInside;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource current;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator anim;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TrainDoors td;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1A54B1C", Offset = "0x1A54B1C", VA = "0x1A54B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1A5492C", Offset = "0x1A5492C", VA = "0x1A5492C")]
	public void TrainDepart()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1A54894", Offset = "0x1A54894", VA = "0x1A54894")]
	public void TrainLaunch()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1A54DD8", Offset = "0x1A54DD8", VA = "0x1A54DD8")]
	[IteratorStateMachine(typeof(<LaunchTrain>d__15))]
	private IEnumerator LaunchTrain(float s)
	{
		return null;
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1A54E84", Offset = "0x1A54E84", VA = "0x1A54E84")]
	private void OnTriggerEnter(Collider o)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1A54F24", Offset = "0x1A54F24", VA = "0x1A54F24")]
	private void OnTriggerExit(Collider o)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1A54A7C", Offset = "0x1A54A7C", VA = "0x1A54A7C")]
	public void MakeAnnouncementInsideTrain()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1A54CF0", Offset = "0x1A54CF0", VA = "0x1A54CF0")]
	[IteratorStateMachine(typeof(<leaveStation>d__19))]
	private IEnumerator leaveStation()
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1A54D64", Offset = "0x1A54D64", VA = "0x1A54D64")]
	[IteratorStateMachine(typeof(<Depart>d__20))]
	private IEnumerator Depart()
	{
		return null;
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1A54FEC", Offset = "0x1A54FEC", VA = "0x1A54FEC")]
	[IteratorStateMachine(typeof(<RestartLevel>d__21))]
	private IEnumerator RestartLevel()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1A55074", Offset = "0x1A55074", VA = "0x1A55074")]
	[IteratorStateMachine(typeof(<DisableTrain>d__22))]
	private IEnumerator DisableTrain()
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1A55110", Offset = "0x1A55110", VA = "0x1A55110")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1A55268", Offset = "0x1A55268", VA = "0x1A55268")]
	public Train1()
	{
	}
}
[Token(Token = "0x2000038")]
public class TrainDoors : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private sealed class <SnapDoorsOpen>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrainDoors <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0x1A56248", Offset = "0x1A56248", VA = "0x1A56248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F4")]
			[Address(RVA = "0x1A56290", Offset = "0x1A56290", VA = "0x1A56290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1A56168", Offset = "0x1A56168", VA = "0x1A56168")]
		[DebuggerHidden]
		public <SnapDoorsOpen>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1A56198", Offset = "0x1A56198", VA = "0x1A56198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1A5619C", Offset = "0x1A5619C", VA = "0x1A5619C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1A56250", Offset = "0x1A56250", VA = "0x1A56250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RightDoor[] rightDoors;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LeftDoor[] leftDoors;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool doorsMoving;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1A55D70", Offset = "0x1A55D70", VA = "0x1A55D70")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1A55E00", Offset = "0x1A55E00", VA = "0x1A55E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1A55FB0", Offset = "0x1A55FB0", VA = "0x1A55FB0")]
	private void OpenDoors()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1A5559C", Offset = "0x1A5559C", VA = "0x1A5559C")]
	public void CloseDoors()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1A55668", Offset = "0x1A55668", VA = "0x1A55668")]
	public void SecureDoors()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1A560F4", Offset = "0x1A560F4", VA = "0x1A560F4")]
	[IteratorStateMachine(typeof(<SnapDoorsOpen>d__8))]
	private IEnumerator SnapDoorsOpen()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1A56190", Offset = "0x1A56190", VA = "0x1A56190")]
	public TrainDoors()
	{
	}
}
[Token(Token = "0x200003A")]
public class Train_PA : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip announcement;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ambient;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1A56298", Offset = "0x1A56298", VA = "0x1A56298")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1A56328", Offset = "0x1A56328", VA = "0x1A56328")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1A5636C", Offset = "0x1A5636C", VA = "0x1A5636C")]
	public Train_PA()
	{
	}
}
[Token(Token = "0x200003B")]
public class VendingMachine : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sodaPrefab;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip vendingMachine;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Font font;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inZone;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1A56374", Offset = "0x1A56374", VA = "0x1A56374")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1A56478", Offset = "0x1A56478", VA = "0x1A56478")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1A565D8", Offset = "0x1A565D8", VA = "0x1A565D8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1A5663C", Offset = "0x1A5663C", VA = "0x1A5663C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1A567AC", Offset = "0x1A567AC", VA = "0x1A567AC")]
	public VendingMachine()
	{
	}
}
[Token(Token = "0x200003C")]
public class ChainSaw_Controller : MonoBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Layers")]
	[Space(10f)]
	private LayerMask layerMask_Cutting;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Chain")]
	[Space(10f)]
	[SerializeField]
	private float chain_speed;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(10f)]
	[SerializeField]
	[Header("Audio")]
	private AudioClip clip_start;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip clip_cut;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip clip_idle;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip clip_end;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource a_source;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem ps_sparks;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem ps_smoke;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer rend_chain;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider_Assistant coll_assist;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform tr_rayPoint;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tr_rayPointEnd;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RaycastHit rhit;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float rDistance;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 uvOffset;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float uvSpeedX;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Collider> collider_list;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool is_cutting;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool is_ready;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1A567B4", Offset = "0x1A567B4", VA = "0x1A567B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1A56FCC", Offset = "0x1A56FCC", VA = "0x1A56FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1A57108", Offset = "0x1A57108", VA = "0x1A57108")]
	private void OnTriggerEnterEvent(Collider coll)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1A571DC", Offset = "0x1A571DC", VA = "0x1A571DC")]
	private void OnTriggerStayEvent(Collider coll)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1A57520", Offset = "0x1A57520", VA = "0x1A57520")]
	private void OnTriggerExitEvent(Collider coll)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1A57310", Offset = "0x1A57310", VA = "0x1A57310")]
	private void Start_Cutting()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1A57420", Offset = "0x1A57420", VA = "0x1A57420")]
	private void End_Cutting()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1A575DC", Offset = "0x1A575DC", VA = "0x1A575DC")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1A576A4", Offset = "0x1A576A4", VA = "0x1A576A4")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1A577B0", Offset = "0x1A577B0", VA = "0x1A577B0")]
	public ChainSaw_Controller()
	{
	}
}
[Token(Token = "0x200003D")]
public class Collider_Assistant : MonoBehaviour
{
	[Token(Token = "0x200003E")]
	public delegate void TriggerDelegate(Collider coll);

	[Token(Token = "0x200003F")]
	public delegate void CollisionDelegate(Collision coll);

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider this_collider;

	[Token(Token = "0x14000001")]
	public event TriggerDelegate OnTrigEnter
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1A56E94", Offset = "0x1A56E94", VA = "0x1A56E94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x1A57818", Offset = "0x1A57818", VA = "0x1A57818")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event TriggerDelegate OnTrigStay
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x1A56DF8", Offset = "0x1A56DF8", VA = "0x1A56DF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1A578B4", Offset = "0x1A578B4", VA = "0x1A578B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event TriggerDelegate OnTrigExit
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0x1A56F30", Offset = "0x1A56F30", VA = "0x1A56F30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x1A57950", Offset = "0x1A57950", VA = "0x1A57950")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event CollisionDelegate OnCollEnter
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1A57A40", Offset = "0x1A57A40", VA = "0x1A57A40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000112")]
		[Address(RVA = "0x1A57ADC", Offset = "0x1A57ADC", VA = "0x1A57ADC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event CollisionDelegate OnCollStay
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x1A57B78", Offset = "0x1A57B78", VA = "0x1A57B78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x1A57C14", Offset = "0x1A57C14", VA = "0x1A57C14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event CollisionDelegate OnCollExit
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x1A57CB0", Offset = "0x1A57CB0", VA = "0x1A57CB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x1A57D4C", Offset = "0x1A57D4C", VA = "0x1A57D4C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1A577C0", Offset = "0x1A577C0", VA = "0x1A577C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1A579EC", Offset = "0x1A579EC", VA = "0x1A579EC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1A57A08", Offset = "0x1A57A08", VA = "0x1A57A08")]
	private void OnTriggerStay(Collider coll)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1A57A24", Offset = "0x1A57A24", VA = "0x1A57A24")]
	private void OnTriggerExit(Collider coll)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1A57DE8", Offset = "0x1A57DE8", VA = "0x1A57DE8")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1A57E04", Offset = "0x1A57E04", VA = "0x1A57E04")]
	private void OnCollisionStay(Collision coll)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1A57E20", Offset = "0x1A57E20", VA = "0x1A57E20")]
	private void OnCollisionExit(Collision coll)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1A57E3C", Offset = "0x1A57E3C", VA = "0x1A57E3C")]
	public void Enable_Collider(bool b)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1A57E5C", Offset = "0x1A57E5C", VA = "0x1A57E5C")]
	public void Trigger_Switch(bool b)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1A57E7C", Offset = "0x1A57E7C", VA = "0x1A57E7C")]
	public Collider_Assistant()
	{
	}
}
[Token(Token = "0x2000040")]
public class Bird : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int animCount;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedX;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedY;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedZ;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float amplitudeX;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float amplitudeY;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float amplitudeZ;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canChangeAnim;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float angleX;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float angleY;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float angleZ;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1A58040", Offset = "0x1A58040", VA = "0x1A58040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1A581BC", Offset = "0x1A581BC", VA = "0x1A581BC")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1A58150", Offset = "0x1A58150", VA = "0x1A58150")]
	private Vector3 GetNewPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1A58580", Offset = "0x1A58580", VA = "0x1A58580")]
	public Bird()
	{
	}
}
[Token(Token = "0x2000041")]
public class Swarm : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bird;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int birdsCount;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float swarmRadius;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float birdsDistance;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float amplitude;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float angle;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1A58590", Offset = "0x1A58590", VA = "0x1A58590")]
	private void Start()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1A587DC", Offset = "0x1A587DC", VA = "0x1A587DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1A587A4", Offset = "0x1A587A4", VA = "0x1A587A4")]
	private Vector3 GetNewPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1A58938", Offset = "0x1A58938", VA = "0x1A58938")]
	public Swarm()
	{
	}
}
[Token(Token = "0x2000042")]
public class SwarmCenter : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1A58940", Offset = "0x1A58940", VA = "0x1A58940")]
	private void Start()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1A58988", Offset = "0x1A58988", VA = "0x1A58988")]
	private void Update()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1A589D4", Offset = "0x1A589D4", VA = "0x1A589D4")]
	public SwarmCenter()
	{
	}
}
[Token(Token = "0x2000043")]
public class Rotateobject : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1A589DC", Offset = "0x1A589DC", VA = "0x1A589DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1A58A24", Offset = "0x1A58A24", VA = "0x1A58A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1A58A70", Offset = "0x1A58A70", VA = "0x1A58A70")]
	public Rotateobject()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class TerrainRand : MonoBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int count;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float randomRotationX;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomRotationY;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float randomRotationZ;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1A58A78", Offset = "0x1A58A78", VA = "0x1A58A78")]
	public TerrainRand()
	{
	}
}
[Token(Token = "0x2000045")]
public class FlickeringLight : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light flickeringLight;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] smoothing;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1A58A88", Offset = "0x1A58A88", VA = "0x1A58A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1A58AD8", Offset = "0x1A58AD8", VA = "0x1A58AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1A58BC0", Offset = "0x1A58BC0", VA = "0x1A58BC0")]
	public FlickeringLight()
	{
	}
}
[Token(Token = "0x2000046")]
public class OrbitCamera : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speedMod;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 point;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1A58C24", Offset = "0x1A58C24", VA = "0x1A58C24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1A58C78", Offset = "0x1A58C78", VA = "0x1A58C78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1A58CF4", Offset = "0x1A58CF4", VA = "0x1A58CF4")]
	public OrbitCamera()
	{
	}
}
[Token(Token = "0x2000047")]
public class textureOffset : MonoBehaviour
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offsetSpeed;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string propertyName;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material myMat;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1A58D08", Offset = "0x1A58D08", VA = "0x1A58D08")]
	private void Start()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1A58D7C", Offset = "0x1A58D7C", VA = "0x1A58D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1A58DE4", Offset = "0x1A58DE4", VA = "0x1A58DE4")]
	public textureOffset()
	{
	}
}
[Token(Token = "0x2000048")]
public class animSpeed : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float s;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string clipName;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1A58E48", Offset = "0x1A58E48", VA = "0x1A58E48")]
	private void Start()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1A58EC0", Offset = "0x1A58EC0", VA = "0x1A58EC0")]
	public animSpeed()
	{
	}
}
[Token(Token = "0x2000049")]
public class flashLight : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light fL;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1A58F24", Offset = "0x1A58F24", VA = "0x1A58F24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1A58F8C", Offset = "0x1A58F8C", VA = "0x1A58F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1A59038", Offset = "0x1A59038", VA = "0x1A59038")]
	public flashLight()
	{
	}
}
[Token(Token = "0x200004A")]
public class footsteps : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource a;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController controller;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float footstepTime;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1A59040", Offset = "0x1A59040", VA = "0x1A59040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1A590A8", Offset = "0x1A590A8", VA = "0x1A590A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1A5919C", Offset = "0x1A5919C", VA = "0x1A5919C")]
	public footsteps()
	{
	}
}
[Token(Token = "0x200004B")]
public class CamMouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float x;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float y;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float dist;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool locked;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xSpeed;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ySpeed;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distSpeed;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float yMinLimit;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float yMaxLimit;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distMinLimit;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float distMaxLimit;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float orbitDamping;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float distDamping;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1A591AC", Offset = "0x1A591AC", VA = "0x1A591AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1A59208", Offset = "0x1A59208", VA = "0x1A59208")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1A591E0", Offset = "0x1A591E0", VA = "0x1A591E0")]
	private void ChangeCursor()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1A592D4", Offset = "0x1A592D4", VA = "0x1A592D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1A59318", Offset = "0x1A59318", VA = "0x1A59318")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1A595F4", Offset = "0x1A595F4", VA = "0x1A595F4")]
	private float ClampAngle(float a, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1A5967C", Offset = "0x1A5967C", VA = "0x1A5967C")]
	public CamMouseOrbit()
	{
	}
}
[Token(Token = "0x200004C")]
[AddComponentMenu("Camera-Control/Mouse Look")]
public class MouseLookAdvanced : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sensitivityX;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityY;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumX;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumX;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minimumY;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maximumY;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float smoothSpeed;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float verticalAcceleration;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationX;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float smoothRotationX;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationY;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float smoothRotationY;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 vMousePos;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float Speed;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1A596A4", Offset = "0x1A596A4", VA = "0x1A596A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1A5972C", Offset = "0x1A5972C", VA = "0x1A5972C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1A59B54", Offset = "0x1A59B54", VA = "0x1A59B54")]
	public MouseLookAdvanced()
	{
	}
}
[Token(Token = "0x200004D")]
public class AudiencePath : WalkPath
{
	[Token(Token = "0x200004E")]
	public enum Angle
	{
		[Token(Token = "0x4000146")]
		zero,
		[Token(Token = "0x4000147")]
		minus90,
		[Token(Token = "0x4000148")]
		plus90
	}

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	[Tooltip("Type of rotation / Вариант поворота")]
	private Angle angle;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[Tooltip("Rotation of people / Поворот человека")]
	[Range(-180f, 180f)]
	private float peopleRotation;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	[SerializeField]
	[Tooltip("Look for target / Слежение за таргетом")]
	private bool looking;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Target / Цель")]
	[HideInInspector]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	[Tooltip("Speed rotation (smooth) / Скорость поворота (смягчение)")]
	[SerializeField]
	private float damping;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1A59B84", Offset = "0x1A59B84", VA = "0x1A59B84", Slot = "6")]
	public override void DrawCurved(bool withDraw)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1A5A580", Offset = "0x1A5A580", VA = "0x1A5A580", Slot = "5")]
	public override void SpawnPeople()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1A5B6F4", Offset = "0x1A5B6F4", VA = "0x1A5B6F4")]
	public AudiencePath()
	{
	}
}
[Serializable]
[Token(Token = "0x200004F")]
public class MovePath : MonoBehaviour
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Vector3 startPos;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public Vector3 finishPos;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public int w;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int targetPoint;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public int targetPointsTotal;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public string animName;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public float walkSpeed;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	public float runSpeed;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public bool loop;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	public bool forward;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public GameObject walkPath;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float randXFinish;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float randZFinish;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Set your animation speed / Установить свою скорость анимации?")]
	[SerializeField]
	private bool _overrideDefaultAnimationMultiplier;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Speed animation walking / Скорость анимации ходьбы")]
	[SerializeField]
	private float _customWalkAnimationMultiplier;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Tooltip("Running animation speed / Скорость анимации бега")]
	private float _customRunAnimationMultiplier;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1A5B8B8", Offset = "0x1A5B8B8", VA = "0x1A5B8B8")]
	public void InitializeAnimation(bool overrideAnimation, float walk, float run)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1A5B5C4", Offset = "0x1A5B5C4", VA = "0x1A5B5C4")]
	public void MyStart(int _w, int _i, string anim, bool _loop, bool _forward, float _walkSpeed, float _runSpeed)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1A5B94C", Offset = "0x1A5B94C", VA = "0x1A5B94C")]
	public void SetLookPosition()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1A5B9B0", Offset = "0x1A5B9B0", VA = "0x1A5B9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1A5BAEC", Offset = "0x1A5BAEC", VA = "0x1A5BAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1A5C458", Offset = "0x1A5C458", VA = "0x1A5C458")]
	public MovePath()
	{
	}
}
[Token(Token = "0x2000050")]
public class NewPath : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> points;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointLenght;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 mousePos;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string pathName;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool errors;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool exit;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject par;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	public PathType PathType;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1A5C468", Offset = "0x1A5C468", VA = "0x1A5C468")]
	public List<Vector3> PointsGet()
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1A5C470", Offset = "0x1A5C470", VA = "0x1A5C470")]
	public void PointSet(int index, Vector3 pos)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1A5C794", Offset = "0x1A5C794", VA = "0x1A5C794")]
	public NewPath()
	{
	}
}
[Token(Token = "0x2000051")]
public enum PathType
{
	[Token(Token = "0x4000162")]
	PeoplePath,
	[Token(Token = "0x4000163")]
	AudiencePath
}
[Token(Token = "0x2000052")]
public class PeopleWalkPath : WalkPath
{
	[Token(Token = "0x2000053")]
	public enum EnumMove
	{
		[Token(Token = "0x400016D")]
		Walk,
		[Token(Token = "0x400016E")]
		Run
	}

	[Token(Token = "0x2000054")]
	public enum EnumDir
	{
		[Token(Token = "0x4000170")]
		Forward,
		[Token(Token = "0x4000171")]
		Backward,
		[Token(Token = "0x4000172")]
		HugLeft,
		[Token(Token = "0x4000173")]
		HugRight,
		[Token(Token = "0x4000174")]
		WeaveLeft,
		[Token(Token = "0x4000175")]
		WeaveRight
	}

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	[Tooltip("Type of movement / Тип движения")]
	[SerializeField]
	private EnumMove _moveType;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("Direction of movement / Направление движения. Левостороннее, правостороннее, итд.")]
	[SerializeField]
	private EnumDir direction;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	[Tooltip("Speed of walk / Скорость ходьбы")]
	[HideInInspector]
	private float walkSpeed;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Tooltip("Speed of run / Скорость бега")]
	[HideInInspector]
	[SerializeField]
	private float runSpeed;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public bool isWalk;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	[Tooltip("Set your animation speed? / Установить свою скорость анимации?")]
	[HideInInspector]
	[SerializeField]
	private bool _overrideDefaultAnimationMultiplier;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	[SerializeField]
	[Tooltip("Speed animation of walking / Скорость анимации ходьбы")]
	private float _customWalkAnimationMultiplier;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	[SerializeField]
	[Tooltip("Running animation speed / Скорость анимации бега")]
	private float _customRunAnimationMultiplier;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1A5C81C", Offset = "0x1A5C81C", VA = "0x1A5C81C", Slot = "6")]
	public override void DrawCurved(bool withDraw)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1A5D4A8", Offset = "0x1A5D4A8", VA = "0x1A5D4A8", Slot = "4")]
	public override void SpawnOnePeople(int w, bool forward, float walkSpeed, float runSpeed)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1A5D8C0", Offset = "0x1A5D8C0", VA = "0x1A5D8C0", Slot = "5")]
	public override void SpawnPeople()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1A5E598", Offset = "0x1A5E598", VA = "0x1A5E598")]
	public PeopleWalkPath()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class WalkPath : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Objects of motion / Объекты движения")]
	public GameObject[] peoplePrefabs;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Number of paths / Количество путей")]
	public int numberOfWays;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Space between paths / Пространство между путями")]
	public float lineSpacing;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0.01f, 0.5f)]
	[Tooltip("Density of movement of objects / Плотность движения объектов")]
	public float Density;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Distance between objects / Дистанция между объектами")]
	[Range(1f, 10f)]
	public float _minimalObjectLength;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Make the path closed in the ring / Сделать путь замкнутым в кольцо")]
	public bool loopPath;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float[] _distances;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<Vector3> pathPoint;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<GameObject> pathPointTransform;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Vector3[,] points;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<Vector3> CalcPoint;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int[] pointLength;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool disableLineDraw;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool[] _forward;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public GameObject par;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public PathType pathType;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("Radius of the sphere-scraper [m] / Радиус сферы-стёрки [м]")]
	[Range(0.1f, 25f)]
	public float eraseRadius;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("The minimum distance from the cursor to the line at which you can add a new point to the path [m] / Минимальное расстояние от курсора до линии, при котором можно добавить новую точку в путь [м]")]
	[Range(0.5f, 10f)]
	public float addPointDistance;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Tooltip("Adjust the spawn of cars to the nearest surface. This option will be useful if there are bridges in the scene / Регулировка спавна людей к ближайшей поверхности. Этот параметор будет полезен, если в сцене есть мосты.")]
	public float highToSpawn;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Offset from the line along the X axis / Смещение от линии по оси X")]
	[Range(0f, 5f)]
	public float randXPos;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Offset from the line along the Z axis / Смещение от линии по оси Z")]
	[Range(0f, 5f)]
	public float randZPos;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool newPointCreation;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool oldPointDeleting;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public Vector3 mousePosition;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int deletePointIndex;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int firstPointIndex;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int secondPointIndex;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1A5B8F8", Offset = "0x1A5B8F8", VA = "0x1A5B8F8")]
	public Vector3 getNextPoint(int w, int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1A5C408", Offset = "0x1A5C408", VA = "0x1A5C408")]
	public Vector3 getStartPoint(int w)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1A5B8C8", Offset = "0x1A5B8C8", VA = "0x1A5B8C8")]
	public int getPointsTotal(int w)
	{
		return default(int);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1A5E5BC", Offset = "0x1A5E5BC", VA = "0x1A5E5BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1A5E5CC", Offset = "0x1A5E5CC", VA = "0x1A5E5CC", Slot = "4")]
	public virtual void SpawnOnePeople(int w, bool forward, float walkSpeed, float runSpeed)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1A5E5D0", Offset = "0x1A5E5D0", VA = "0x1A5E5D0", Slot = "5")]
	public virtual void SpawnPeople()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1A5E5D4", Offset = "0x1A5E5D4", VA = "0x1A5E5D4", Slot = "6")]
	public virtual void DrawCurved(bool withDraw)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1A5B428", Offset = "0x1A5B428", VA = "0x1A5B428")]
	protected Vector3 GetRoutePosition(Vector3[] pointArray, float distance, int pointCount, bool loopPath)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1A5B54C", Offset = "0x1A5B54C", VA = "0x1A5B54C")]
	protected int GetRoutePoint(float distance, int wayIndex, int pointCount, bool forward, bool loopPath)
	{
		return default(int);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1A5E5D8", Offset = "0x1A5E5D8", VA = "0x1A5E5D8")]
	private bool PointWithSphereCollision(Vector3 colisionSpherePosition, Vector3 pointPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1A5E688", Offset = "0x1A5E688", VA = "0x1A5E688")]
	private bool PointWithLineCollision(Vector3 lineStartPosition, Vector3 lineEndPosition, Vector3 pointPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1A5E6C0", Offset = "0x1A5E6C0", VA = "0x1A5E6C0")]
	private float Distance(Vector3 lineStartPosition, Vector3 lineEndPosition, Vector3 pointPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1A5E7D8", Offset = "0x1A5E7D8", VA = "0x1A5E7D8")]
	public void AddPoint()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1A5EA54", Offset = "0x1A5EA54", VA = "0x1A5EA54")]
	public void DeletePoint()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1A5B708", Offset = "0x1A5B708", VA = "0x1A5B708")]
	public WalkPath()
	{
	}
}
[Token(Token = "0x2000056")]
public class PeopleController : MonoBehaviour
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float timer;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string[] animNames;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float damping;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1A5EB44", Offset = "0x1A5EB44", VA = "0x1A5EB44")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1A5EB48", Offset = "0x1A5EB48", VA = "0x1A5EB48")]
	private void Tick()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1A5EC44", Offset = "0x1A5EC44", VA = "0x1A5EC44")]
	public void SetTarget(Vector3 _target)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1A5ECA8", Offset = "0x1A5ECA8", VA = "0x1A5ECA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1A5EBB4", Offset = "0x1A5EBB4", VA = "0x1A5EBB4")]
	public void SetAnimClip(string animName)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1A5EE58", Offset = "0x1A5EE58", VA = "0x1A5EE58")]
	public PeopleController()
	{
	}
}
[Token(Token = "0x2000057")]
public class PopulationSystemManager : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject planePrefab;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject circlePrefab;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointPrefab;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isConcert;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[HideInInspector]
	public bool isStreet;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Vector3 mousePos;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x19FC0E8", Offset = "0x19FC0E8", VA = "0x19FC0E8")]
	public void Concert(Vector3 pos)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x19FC4A4", Offset = "0x19FC4A4", VA = "0x19FC4A4")]
	public void Street(Vector3 pos)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x19FC860", Offset = "0x19FC860", VA = "0x19FC860")]
	public PopulationSystemManager()
	{
	}
}
[Token(Token = "0x2000058")]
public class StandingPeopleConcert : MonoBehaviour
{
	[Token(Token = "0x2000059")]
	public enum TestEnum
	{
		[Token(Token = "0x40001AC")]
		Rectangle,
		[Token(Token = "0x40001AD")]
		Circle
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject planePrefab;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject circlePrefab;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject surface;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector2 planeSize;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("People prefabs / Префабы людей")]
	public GameObject[] peoplePrefabs;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	private List<Vector3> spawnPoints;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public GameObject target;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int peopleCount;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool isCircle;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float circleDiametr;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool showSurface;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("Type of surface / Тип поверхности")]
	public TestEnum SurfaceType;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject par;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool looking;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float damping;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public float highToSpawn;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x19FC868", Offset = "0x19FC868", VA = "0x19FC868")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x19FC21C", Offset = "0x19FC21C", VA = "0x19FC21C")]
	public void SpawnRectangleSurface()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x19FC8BC", Offset = "0x19FC8BC", VA = "0x19FC8BC")]
	public void SpawnCircleSurface()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x19FCB44", Offset = "0x19FCB44", VA = "0x19FCB44")]
	public void RemoveButton()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x19FCBD4", Offset = "0x19FCBD4", VA = "0x19FCBD4")]
	public void PopulateButton()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x19FCCD8", Offset = "0x19FCCD8", VA = "0x19FCCD8")]
	private void SpawnPeople(int _peopleCount)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x19FD550", Offset = "0x19FD550", VA = "0x19FD550")]
	private Vector3 RandomRectanglePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x19FD6C4", Offset = "0x19FD6C4", VA = "0x19FD6C4")]
	private Vector3 RandomCirclePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x19FD880", Offset = "0x19FD880", VA = "0x19FD880")]
	private bool IsRandomPositionFree(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x19FD7EC", Offset = "0x19FD7EC", VA = "0x19FD7EC")]
	private Vector2 GetRealPlaneSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x19FD9B0", Offset = "0x19FD9B0", VA = "0x19FD9B0")]
	private Vector2 GetRealPeopleModelSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x19FDA5C", Offset = "0x19FDA5C", VA = "0x19FDA5C")]
	public StandingPeopleConcert()
	{
	}
}
[Token(Token = "0x200005A")]
public class StandingPeopleStreet : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	public enum TestEnum
	{
		[Token(Token = "0x40001BC")]
		Rectangle,
		[Token(Token = "0x40001BD")]
		Circle
	}

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject planePrefab;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject circlePrefab;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject surface;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector2 planeSize;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("People prefabs / Префабы людей")]
	public GameObject[] peoplePrefabs;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<Vector3> spawnPoints;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int peopleCount;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool isCircle;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float circleDiametr;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool showSurface;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Type of surface / Тип поверхности")]
	public TestEnum SurfaceType;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public GameObject par;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float highToSpawn;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x19FDB3C", Offset = "0x19FDB3C", VA = "0x19FDB3C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x19FC5D8", Offset = "0x19FC5D8", VA = "0x19FC5D8")]
	public void SpawnRectangleSurface()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x19FDB90", Offset = "0x19FDB90", VA = "0x19FDB90")]
	public void SpawnCircleSurface()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x19FDE18", Offset = "0x19FDE18", VA = "0x19FDE18")]
	public void RemoveButton()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x19FDEAC", Offset = "0x19FDEAC", VA = "0x19FDEAC")]
	public void PopulateButton()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x19FDFB0", Offset = "0x19FDFB0", VA = "0x19FDFB0")]
	private void SpawnPeople(int _peopleCount)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1A001DC", Offset = "0x1A001DC", VA = "0x1A001DC")]
	private Vector3 RandomRectanglePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1A003A8", Offset = "0x1A003A8", VA = "0x1A003A8")]
	private Vector3 RandomCirclePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1A005B0", Offset = "0x1A005B0", VA = "0x1A005B0")]
	private bool IsRandomPositionFree(Vector3 pos, Vector3 helpPoint1, Vector3 helpPoint2)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1A00B98", Offset = "0x1A00B98", VA = "0x1A00B98")]
	private Vector2 GetRealPlaneSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1A00C2C", Offset = "0x1A00C2C", VA = "0x1A00C2C")]
	private Vector2 GetRealPeopleModelSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1A00CD8", Offset = "0x1A00CD8", VA = "0x1A00CD8")]
	public StandingPeopleStreet()
	{
	}
}
[Token(Token = "0x200005C")]
public static class CommonUtils
{
	[Token(Token = "0x600018F")]
	[Address(RVA = "0x19FD328", Offset = "0x19FD328", VA = "0x19FD328")]
	public static int[] GetRandomPrefabIndexes(int numRequired, ref GameObject[] peoplePrefabs)
	{
		return null;
	}
}
[Token(Token = "0x200005D")]
public static class ShfuffleExtension
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly System.Random RandomGenerator;

	[Token(Token = "0x6000190")]
	public static void Shuffle<T>(this IList<T> shuffleList)
	{
	}
}
[Token(Token = "0x200005E")]
public class GameobjectOptimize : MonoBehaviour
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameobjectToDisable;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DistanceFromObject;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VisibilityDistance;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float Distance;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject MainCamera;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1A00E34", Offset = "0x1A00E34", VA = "0x1A00E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1A00F7C", Offset = "0x1A00F7C", VA = "0x1A00F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1A010B4", Offset = "0x1A010B4", VA = "0x1A010B4")]
	public GameobjectOptimize()
	{
	}
}
[Token(Token = "0x200005F")]
[AddComponentMenu("Image Effects/Blur")]
[ExecuteInEditMode]
public class BlurEffect : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int iterations;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float blurSpread;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader blurShader;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material m_Material;

	[Token(Token = "0x1700001E")]
	protected Material material
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x1A010BC", Offset = "0x1A010BC", VA = "0x1A010BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1A011C4", Offset = "0x1A011C4", VA = "0x1A011C4")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1A01270", Offset = "0x1A01270", VA = "0x1A01270")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1A01320", Offset = "0x1A01320", VA = "0x1A01320")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1A01430", Offset = "0x1A01430", VA = "0x1A01430")]
	private void DownSample4x(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1A0152C", Offset = "0x1A0152C", VA = "0x1A0152C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1A016D8", Offset = "0x1A016D8", VA = "0x1A016D8")]
	public BlurEffect()
	{
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Color Correction (Ramp)")]
public class ColorCorrectionEffect : ImageEffectBase
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture textureRamp;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1A016F0", Offset = "0x1A016F0", VA = "0x1A016F0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1A01878", Offset = "0x1A01878", VA = "0x1A01878")]
	public ColorCorrectionEffect()
	{
	}
}
[Token(Token = "0x2000061")]
[AddComponentMenu("Image Effects/Contrast Stretch")]
[ExecuteInEditMode]
public class ContrastStretchEffect : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float adaptationSpeed;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float limitMinimum;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float limitMaximum;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture[] adaptRenderTex;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curAdaptIndex;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader shaderLum;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_materialLum;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shaderReduce;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m_materialReduce;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader shaderAdapt;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_materialAdapt;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader shaderApply;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material m_materialApply;

	[Token(Token = "0x1700001F")]
	protected Material materialLum
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1A01888", Offset = "0x1A01888", VA = "0x1A01888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	protected Material materialReduce
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x1A0195C", Offset = "0x1A0195C", VA = "0x1A0195C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	protected Material materialAdapt
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1A01A30", Offset = "0x1A01A30", VA = "0x1A01A30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	protected Material materialApply
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x1A01B04", Offset = "0x1A01B04", VA = "0x1A01B04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1A01BD8", Offset = "0x1A01BD8", VA = "0x1A01BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1A01C5C", Offset = "0x1A01C5C", VA = "0x1A01C5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1A01DA8", Offset = "0x1A01DA8", VA = "0x1A01DA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1A01F84", Offset = "0x1A01F84", VA = "0x1A01F84")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1A021C4", Offset = "0x1A021C4", VA = "0x1A021C4")]
	private void CalculateAdaptation(Texture curTexture)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1A02344", Offset = "0x1A02344", VA = "0x1A02344")]
	public ContrastStretchEffect()
	{
	}
}
[Token(Token = "0x2000062")]
[AddComponentMenu("Image Effects/Edge Detection (Color)")]
[ExecuteInEditMode]
public class EdgeDetectEffect : ImageEffectBase
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float threshold;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1A023C0", Offset = "0x1A023C0", VA = "0x1A023C0")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1A02478", Offset = "0x1A02478", VA = "0x1A02478")]
	public EdgeDetectEffect()
	{
	}
}
[Token(Token = "0x2000063")]
[AddComponentMenu("Image Effects/Glow")]
[ExecuteInEditMode]
[RequireComponent(typeof(Camera))]
public class GlowEffect : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float glowIntensity;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int blurIterations;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blurSpread;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color glowTint;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader compositeShader;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_CompositeMaterial;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader blurShader;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m_BlurMaterial;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader downsampleShader;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_DownsampleMaterial;

	[Token(Token = "0x17000023")]
	protected Material compositeMaterial
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x1A0248C", Offset = "0x1A0248C", VA = "0x1A0248C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	protected Material blurMaterial
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1A02560", Offset = "0x1A02560", VA = "0x1A02560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	protected Material downsampleMaterial
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1A02634", Offset = "0x1A02634", VA = "0x1A02634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1A02708", Offset = "0x1A02708", VA = "0x1A02708")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1A0281C", Offset = "0x1A0281C", VA = "0x1A0281C")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1A02980", Offset = "0x1A02980", VA = "0x1A02980")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1A02A90", Offset = "0x1A02A90", VA = "0x1A02A90")]
	private void DownSample4x(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1A02B38", Offset = "0x1A02B38", VA = "0x1A02B38")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1A02D98", Offset = "0x1A02D98", VA = "0x1A02D98")]
	public void BlitGlow(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1A02E50", Offset = "0x1A02E50", VA = "0x1A02E50")]
	public GlowEffect()
	{
	}
}
[Token(Token = "0x2000064")]
[AddComponentMenu("Image Effects/Grayscale")]
[ExecuteInEditMode]
public class GrayscaleEffect : ImageEffectBase
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture textureRamp;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rampOffset;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1A02E74", Offset = "0x1A02E74", VA = "0x1A02E74")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1A02F58", Offset = "0x1A02F58", VA = "0x1A02F58")]
	public GrayscaleEffect()
	{
	}
}
[Token(Token = "0x2000065")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("")]
public class ImageEffectBase : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material m_Material;

	[Token(Token = "0x17000026")]
	protected Material material
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x1A017A4", Offset = "0x1A017A4", VA = "0x1A017A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1A02F60", Offset = "0x1A02F60", VA = "0x1A02F60", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1A03000", Offset = "0x1A03000", VA = "0x1A03000", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1A01880", Offset = "0x1A01880", VA = "0x1A01880")]
	public ImageEffectBase()
	{
	}
}
[Token(Token = "0x2000066")]
[AddComponentMenu("")]
public class ImageEffects
{
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1A0308C", Offset = "0x1A0308C", VA = "0x1A0308C")]
	public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1A032FC", Offset = "0x1A032FC", VA = "0x1A032FC")]
	[Obsolete("Use Graphics.Blit(source,dest) instead")]
	public static void Blit(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1A03364", Offset = "0x1A03364", VA = "0x1A03364")]
	[Obsolete("Use Graphics.Blit(source, destination, material) instead")]
	public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1A033D4", Offset = "0x1A033D4", VA = "0x1A033D4")]
	public ImageEffects()
	{
	}
}
[Token(Token = "0x2000067")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Motion Blur (Color Accumulation)")]
public class MotionBlur : ImageEffectBase
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float blurAmount;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool extraBlur;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture accumTexture;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1A033DC", Offset = "0x1A033DC", VA = "0x1A033DC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1A03410", Offset = "0x1A03410", VA = "0x1A03410", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1A03474", Offset = "0x1A03474", VA = "0x1A03474")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1A037BC", Offset = "0x1A037BC", VA = "0x1A037BC")]
	public MotionBlur()
	{
	}
}
[Token(Token = "0x2000068")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Image Effects/Noise")]
[ExecuteInEditMode]
public class NoiseEffect : MonoBehaviour
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool monochrome;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool rgbFallback;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grainIntensityMin;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float grainIntensityMax;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float grainSize;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scratchIntensityMin;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scratchIntensityMax;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scratchFPS;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scratchJitter;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture grainTexture;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture scratchTexture;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shaderRGB;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader shaderYUV;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_MaterialRGB;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_MaterialYUV;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float scratchTimeLeft;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float scratchX;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float scratchY;

	[Token(Token = "0x17000027")]
	protected Material material
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1A038FC", Offset = "0x1A038FC", VA = "0x1A038FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1A037D0", Offset = "0x1A037D0", VA = "0x1A037D0")]
	protected void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1A03A64", Offset = "0x1A03A64", VA = "0x1A03A64")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1A03B34", Offset = "0x1A03B34", VA = "0x1A03B34")]
	private void SanitizeParameters()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1A03BD8", Offset = "0x1A03BD8", VA = "0x1A03BD8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1A03F00", Offset = "0x1A03F00", VA = "0x1A03F00")]
	public NoiseEffect()
	{
	}
}
[Token(Token = "0x2000069")]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Sepia Tone")]
public class SepiaToneEffect : ImageEffectBase
{
	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1A03F34", Offset = "0x1A03F34", VA = "0x1A03F34")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1A03FB4", Offset = "0x1A03FB4", VA = "0x1A03FB4")]
	public SepiaToneEffect()
	{
	}
}
[Token(Token = "0x200006A")]
[RequireComponent(typeof(Camera))]
[AddComponentMenu("Image Effects/Screen Space Ambient Occlusion")]
[ExecuteInEditMode]
public class SSAOEffect : MonoBehaviour
{
	[Token(Token = "0x200006B")]
	public enum SSAOSamples
	{
		[Token(Token = "0x4000206")]
		Low,
		[Token(Token = "0x4000207")]
		Medium,
		[Token(Token = "0x4000208")]
		High
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_Radius;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SSAOSamples m_SampleCount;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_OcclusionIntensity;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_Blur;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_Downsampling;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_OcclusionAttenuation;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_MinZ;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader m_SSAOShader;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_SSAOMaterial;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_RandomTexture;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_Supported;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1A03FBC", Offset = "0x1A03FBC", VA = "0x1A03FBC")]
	private static Material CreateMaterial(Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1A04068", Offset = "0x1A04068", VA = "0x1A04068")]
	private static void DestroyMaterial(Material mat)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1A040EC", Offset = "0x1A040EC", VA = "0x1A040EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1A040F4", Offset = "0x1A040F4", VA = "0x1A040F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1A04294", Offset = "0x1A04294", VA = "0x1A04294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1A041BC", Offset = "0x1A041BC", VA = "0x1A041BC")]
	private void CreateMaterials()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1A04300", Offset = "0x1A04300", VA = "0x1A04300")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1A048D4", Offset = "0x1A048D4", VA = "0x1A048D4")]
	public SSAOEffect()
	{
	}
}
[Token(Token = "0x200006C")]
[AddComponentMenu("Image Effects/Twirl")]
[ExecuteInEditMode]
public class TwirlEffect : ImageEffectBase
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 radius;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 center;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1A04908", Offset = "0x1A04908", VA = "0x1A04908")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1A04940", Offset = "0x1A04940", VA = "0x1A04940")]
	public TwirlEffect()
	{
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
[AddComponentMenu("Image Effects/Vortex")]
public class VortexEffect : ImageEffectBase
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 radius;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angle;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 center;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1A04968", Offset = "0x1A04968", VA = "0x1A04968")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1A049A0", Offset = "0x1A049A0", VA = "0x1A049A0")]
	public VortexEffect()
	{
	}
}
[Token(Token = "0x200006E")]
[ExecuteInEditMode]
public class WaterSimple : MonoBehaviour
{
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1A049C8", Offset = "0x1A049C8", VA = "0x1A049C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1A04D28", Offset = "0x1A04D28", VA = "0x1A04D28")]
	public WaterSimple()
	{
	}
}
[Token(Token = "0x200006F")]
public class CameraFacing : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	public enum Axis
	{
		[Token(Token = "0x4000213")]
		up,
		[Token(Token = "0x4000214")]
		down,
		[Token(Token = "0x4000215")]
		left,
		[Token(Token = "0x4000216")]
		right,
		[Token(Token = "0x4000217")]
		forward,
		[Token(Token = "0x4000218")]
		back
	}

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject referenceCamera;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverseFace;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis axis;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1A04D30", Offset = "0x1A04D30", VA = "0x1A04D30")]
	public Vector3 GetAxis(Axis refAxis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1A04EE8", Offset = "0x1A04EE8", VA = "0x1A04EE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1A04F84", Offset = "0x1A04F84", VA = "0x1A04F84")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1A0515C", Offset = "0x1A0515C", VA = "0x1A0515C")]
	public CameraFacing()
	{
	}
}
[Token(Token = "0x2000071")]
[RequireComponent(typeof(SphereCollider))]
[RequireComponent(typeof(Rigidbody))]
public class CameraRainFX : MonoBehaviour
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rainPlain;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxAlpha;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minAlpha;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource rainSound;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxSoundVol;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minSoundVol;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string tagName;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string shaderColorPropName;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fadeTime;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lookUpAngle;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform cam;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float t;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isInTrigger;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool setOn;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool setOff;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1A05164", Offset = "0x1A05164", VA = "0x1A05164")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1A05468", Offset = "0x1A05468", VA = "0x1A05468")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1A054A4", Offset = "0x1A054A4", VA = "0x1A054A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1A05220", Offset = "0x1A05220", VA = "0x1A05220")]
	private void FadeAlpha(float alpha, float volume)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1A054DC", Offset = "0x1A054DC", VA = "0x1A054DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1A057DC", Offset = "0x1A057DC", VA = "0x1A057DC")]
	public CameraRainFX()
	{
	}
}
[Token(Token = "0x2000072")]
public class LightningEmitter : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	[CompilerGenerated]
	private sealed class <Timer>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightningEmitter <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0x1A05CF8", Offset = "0x1A05CF8", VA = "0x1A05CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0x1A05D40", Offset = "0x1A05D40", VA = "0x1A05D40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1A05960", Offset = "0x1A05960", VA = "0x1A05960")]
		[DebuggerHidden]
		public <Timer>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1A05A98", Offset = "0x1A05A98", VA = "0x1A05A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1A05A9C", Offset = "0x1A05A9C", VA = "0x1A05A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1A05D00", Offset = "0x1A05D00", VA = "0x1A05D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minSec;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxSec;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rdmDist;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float killTime;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> prefabs;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isReady;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1A05880", Offset = "0x1A05880", VA = "0x1A05880")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1A058EC", Offset = "0x1A058EC", VA = "0x1A058EC")]
	[IteratorStateMachine(typeof(<Timer>d__7))]
	private IEnumerator Timer()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1A05988", Offset = "0x1A05988", VA = "0x1A05988")]
	private void Holder()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1A059FC", Offset = "0x1A059FC", VA = "0x1A059FC")]
	public LightningEmitter()
	{
	}
}
[Token(Token = "0x2000074")]
public class CCNeonFlash : MonoBehaviour
{
	[Token(Token = "0x2000075")]
	public enum SwitchMode
	{
		[Token(Token = "0x400023B")]
		simple,
		[Token(Token = "0x400023C")]
		multi,
		[Token(Token = "0x400023D")]
		broken
	}

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ColorUsage(true, true)]
	public Color MaxBright;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float SwitchTime;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchMode SwitchModes;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MatId;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mode;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int count;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _Material;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1A05D48", Offset = "0x1A05D48", VA = "0x1A05D48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1A05DC0", Offset = "0x1A05DC0", VA = "0x1A05DC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1A05E98", Offset = "0x1A05E98", VA = "0x1A05E98")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1A05E9C", Offset = "0x1A05E9C", VA = "0x1A05E9C")]
	private void ColorSwitch()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1A06054", Offset = "0x1A06054", VA = "0x1A06054")]
	public CCNeonFlash()
	{
	}
}
[Token(Token = "0x2000076")]
public class CCTvMovie : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ColorUsage(true, true)]
	public Color MaxBright;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsReverse;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Speed;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MatId;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture[] Frames;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int i;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _Material;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1A06070", Offset = "0x1A06070", VA = "0x1A06070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1A060E8", Offset = "0x1A060E8", VA = "0x1A060E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1A062BC", Offset = "0x1A062BC", VA = "0x1A062BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1A0637C", Offset = "0x1A0637C", VA = "0x1A0637C")]
	public CCTvMovie()
	{
	}
}
[Token(Token = "0x2000077")]
[RequireComponent(typeof(CharacterController))]
public class FPCharacter : MonoBehaviour
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedfast;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _speedfast;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterController _charController;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1A06390", Offset = "0x1A06390", VA = "0x1A06390")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1A063E8", Offset = "0x1A063E8", VA = "0x1A063E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1A06554", Offset = "0x1A06554", VA = "0x1A06554")]
	public FPCharacter()
	{
	}
}
[Token(Token = "0x2000078")]
public class FPMouseLook : MonoBehaviour
{
	[Token(Token = "0x2000079")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000251")]
		MouseXAndY,
		[Token(Token = "0x4000252")]
		MouseX,
		[Token(Token = "0x4000253")]
		MouseY
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityHor;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityVert;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumVert;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumVert;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _rotationX;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1A06574", Offset = "0x1A06574", VA = "0x1A06574")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1A06634", Offset = "0x1A06634", VA = "0x1A06634")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1A067F8", Offset = "0x1A067F8", VA = "0x1A067F8")]
	public FPMouseLook()
	{
	}
}
[Token(Token = "0x200007A")]
public class HCRotater : MonoBehaviour
{
	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool x;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool y;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool z;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Rotate;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1A0680C", Offset = "0x1A0680C", VA = "0x1A0680C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1A06810", Offset = "0x1A06810", VA = "0x1A06810")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1A069A8", Offset = "0x1A069A8", VA = "0x1A069A8")]
	public HCRotater()
	{
	}
}
[Token(Token = "0x200007B")]
public class HCWave : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FrontWave;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SideWave;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float scatter;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1A069B0", Offset = "0x1A069B0", VA = "0x1A069B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1A06A28", Offset = "0x1A06A28", VA = "0x1A06A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1A06A4C", Offset = "0x1A06A4C", VA = "0x1A06A4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1A06B28", Offset = "0x1A06B28", VA = "0x1A06B28")]
	public HCWave()
	{
	}
}
[Token(Token = "0x200007C")]
public class HCTraffic : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	[CompilerGenerated]
	private sealed class <SpawnInterval>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rTime;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HCTraffic <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020B")]
			[Address(RVA = "0x1A07648", Offset = "0x1A07648", VA = "0x1A07648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0x1A07690", Offset = "0x1A07690", VA = "0x1A07690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1A06EFC", Offset = "0x1A06EFC", VA = "0x1A06EFC")]
		[DebuggerHidden]
		public <SpawnInterval>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1A07234", Offset = "0x1A07234", VA = "0x1A07234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1A07238", Offset = "0x1A07238", VA = "0x1A07238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1A07650", Offset = "0x1A07650", VA = "0x1A07650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("maximum cars in whole scene:")]
	[Header("--------")]
	[Header("done.")]
	[Header("6. add HCVehicle.cs script to your vehicles;")]
	[Header("5. adjust params on HCTraffic.cs;")]
	[Header("4. add vehicles prefabs to script;")]
	[Header("3. add children GO's - car traffic spawn points;")]
	[Header("2. add HCTraffic.cs on it;")]
	[Header("Usage:")]
	[Header("1. make new GameObject;")]
	public int MaxVehicleCount;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("spawn frequency (min time):")]
	public float MinSpawnInterval;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("spawn frequency (max time):")]
	public float MaxSpawnInterval;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("car start position scatter:")]
	public float MaxStartScatter;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("cars variety:")]
	public GameObject[] Vehicle;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("speed variety for cars line:")]
	public float CarLineSpeedVarMin;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float CarLineSpeedVarMax;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public int VehicleCount;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform[] SpawnPoints;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool locked;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] CarSpeedVariations;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject VehicleContainer;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1A06B3C", Offset = "0x1A06B3C", VA = "0x1A06B3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1A06CD4", Offset = "0x1A06CD4", VA = "0x1A06CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1A06EF8", Offset = "0x1A06EF8", VA = "0x1A06EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1A06E74", Offset = "0x1A06E74", VA = "0x1A06E74")]
	[IteratorStateMachine(typeof(<SpawnInterval>d__15))]
	private IEnumerator SpawnInterval(float rTime)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1A06F24", Offset = "0x1A06F24", VA = "0x1A06F24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1A07204", Offset = "0x1A07204", VA = "0x1A07204")]
	public HCTraffic()
	{
	}
}
[Token(Token = "0x200007E")]
public class HCVehicle : MonoBehaviour
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("speed movement:")]
	public float CarSpeed;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("distance: start - destroy")]
	public float CarLife;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public HCTraffic _HCTrafficLinked;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 StartPosition;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1A07698", Offset = "0x1A07698", VA = "0x1A07698")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1A076C8", Offset = "0x1A076C8", VA = "0x1A076C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1A07870", Offset = "0x1A07870", VA = "0x1A07870")]
	private bool FastDistance(Vector3 Self, Vector3 Target, float Radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1A07918", Offset = "0x1A07918", VA = "0x1A07918")]
	public HCVehicle()
	{
	}
}
[Token(Token = "0x200007F")]
public class App : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	[CompilerGenerated]
	private sealed class <InstantiateFlock>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public App <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0x1A08080", Offset = "0x1A08080", VA = "0x1A08080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0x1A080C8", Offset = "0x1A080C8", VA = "0x1A080C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1A07C8C", Offset = "0x1A07C8C", VA = "0x1A07C8C")]
		[DebuggerHidden]
		public <InstantiateFlock>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1A07D68", Offset = "0x1A07D68", VA = "0x1A07D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x1A07D6C", Offset = "0x1A07D6C", VA = "0x1A07D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1A08088", Offset = "0x1A08088", VA = "0x1A08088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Entity templatePrefab;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shoalBounds;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float separationWeight;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float alignmentWeight;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cohesionWeight;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool moveShoal;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Entity> theFlock;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static App instance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numberOfEntities;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int fishCount;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float speedCoefficient;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float maxSpeed;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject finalPositionObject;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 finalPosition;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 direction;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1A0792C", Offset = "0x1A0792C", VA = "0x1A0792C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1A07B44", Offset = "0x1A07B44", VA = "0x1A07B44")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1A07AD0", Offset = "0x1A07AD0", VA = "0x1A07AD0")]
	[IteratorStateMachine(typeof(<InstantiateFlock>d__17))]
	private IEnumerator InstantiateFlock()
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1A07CB4", Offset = "0x1A07CB4", VA = "0x1A07CB4")]
	public App()
	{
	}
}
[Token(Token = "0x2000081")]
public class Entity : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mRadiusSquared;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mID;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shoalBounds;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private App app;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 velocity;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxVelocity;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool turning;

	[Token(Token = "0x1700002E")]
	public GameObject ShoalBounds
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1A0912C", Offset = "0x1A0912C", VA = "0x1A0912C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002F")]
	public int ID
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1A0913C", Offset = "0x1A0913C", VA = "0x1A0913C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1A080D0", Offset = "0x1A080D0", VA = "0x1A080D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1A08204", Offset = "0x1A08204", VA = "0x1A08204")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1A0899C", Offset = "0x1A0899C", VA = "0x1A0899C")]
	private void Reposition()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1A08F9C", Offset = "0x1A08F9C", VA = "0x1A08F9C")]
	private bool IsLookingAtObject(Transform looker, Vector3 targetPos, float FOVAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1A09124", Offset = "0x1A09124", VA = "0x1A09124")]
	public void SetID(int ID)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1A09134", Offset = "0x1A09134", VA = "0x1A09134")]
	public void SetShoalBounds(GameObject cube)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1A08418", Offset = "0x1A08418", VA = "0x1A08418")]
	private Vector3 FlockingBehaviour()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1A09144", Offset = "0x1A09144", VA = "0x1A09144")]
	public Entity()
	{
	}
}
[Token(Token = "0x2000082")]
public class FreeMovementMotor : MonoBehaviour
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 movementDirection;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 movementTarget;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 facingDirection;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float walkingSpeed;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float walkingSnappyness;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float turningSmoothing;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1A0915C", Offset = "0x1A0915C", VA = "0x1A0915C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1A09894", Offset = "0x1A09894", VA = "0x1A09894")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1A09A90", Offset = "0x1A09A90", VA = "0x1A09A90")]
	private void OnCollisionEnter(Collision theCollision)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1A09B80", Offset = "0x1A09B80", VA = "0x1A09B80")]
	private void OnCollisionExit(Collision theCollision)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1A09564", Offset = "0x1A09564", VA = "0x1A09564")]
	private static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1A09C74", Offset = "0x1A09C74", VA = "0x1A09C74")]
	public FreeMovementMotor()
	{
	}
}
[Token(Token = "0x2000083")]
public class optimizeShoal : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Entity parentEntity;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1A09C94", Offset = "0x1A09C94", VA = "0x1A09C94")]
	private void Start()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1A09D14", Offset = "0x1A09D14", VA = "0x1A09D14")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1A09D34", Offset = "0x1A09D34", VA = "0x1A09D34")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1A09D54", Offset = "0x1A09D54", VA = "0x1A09D54")]
	public optimizeShoal()
	{
	}
}
[Token(Token = "0x2000084")]
public class PlayerMoveController : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FreeMovementMotor motor;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform character;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cursorPrefab;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject player;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraSmoothing;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float cameraPreview;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cursorPlaneHeight;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cursorFacingCamera;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float cursorSmallerWithDistance;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float cursorSmallerWhenClose;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Plane playerMovementPlane;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_IsSwimming;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool m_IsUnderwater;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool m_IsJumping;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject waterBody;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1A09D5C", Offset = "0x1A09D5C", VA = "0x1A09D5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1A09F28", Offset = "0x1A09F28", VA = "0x1A09F28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1A09F2C", Offset = "0x1A09F2C", VA = "0x1A09F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1A0A15C", Offset = "0x1A0A15C", VA = "0x1A0A15C")]
	public static Vector3 PlaneRayIntersection(Plane plane, Ray ray)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1A0A1B4", Offset = "0x1A0A1B4", VA = "0x1A0A1B4")]
	public void inWater()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1A0A1C0", Offset = "0x1A0A1C0", VA = "0x1A0A1C0")]
	public void outOfWater()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1A0A1C8", Offset = "0x1A0A1C8", VA = "0x1A0A1C8")]
	public void underWater()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1A0A1D4", Offset = "0x1A0A1D4", VA = "0x1A0A1D4")]
	public void aboveWater()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1A0A1DC", Offset = "0x1A0A1DC", VA = "0x1A0A1DC")]
	public PlayerMoveController()
	{
	}
}
[Token(Token = "0x2000085")]
public class SubmergedEffect : MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject waterBody;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject waterBodyUnder;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color underWaterColor;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float underWaterVisiblity;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool aboveWaterFogMode;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color aboveWaterColor;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float aboveWaterVisiblity;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject WaterParticles;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject Player;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool checkedIfAboveWater;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waterHeight;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource m_AudioSource;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource m_JumpInWaterAudioSource;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource m_JumpOutOfWaterAudioSource;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1A0A1F8", Offset = "0x1A0A1F8", VA = "0x1A0A1F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1A0A450", Offset = "0x1A0A450", VA = "0x1A0A450")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1A0A414", Offset = "0x1A0A414", VA = "0x1A0A414")]
	private void AssignAboveWaterSettings()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1A0A4E8", Offset = "0x1A0A4E8", VA = "0x1A0A4E8")]
	private void ApplyAboveWaterSettings()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1A0A73C", Offset = "0x1A0A73C", VA = "0x1A0A73C")]
	private void ApplyUnderWaterSettings()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1A0A618", Offset = "0x1A0A618", VA = "0x1A0A618")]
	private void ToggleFlares(bool state)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A0A8B0", Offset = "0x1A0A8B0", VA = "0x1A0A8B0")]
	private void PlayUnderWaterSound()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1A0A85C", Offset = "0x1A0A85C", VA = "0x1A0A85C")]
	private void StopUnderWaterSound()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1A0A894", Offset = "0x1A0A894", VA = "0x1A0A894")]
	private void PlayEnterSplashSound()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1A0A878", Offset = "0x1A0A878", VA = "0x1A0A878")]
	private void PlayExitSplashSound()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1A0A8CC", Offset = "0x1A0A8CC", VA = "0x1A0A8CC")]
	public SubmergedEffect()
	{
	}
}
[Token(Token = "0x2000086")]
public class Water : MonoBehaviour
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 waveSource1;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waveFrequency;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waveHeight;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveLength;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool edgeBlend;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool forceFlatShading;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh mesh;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] verts;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1A0A8D4", Offset = "0x1A0A8D4", VA = "0x1A0A8D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1A0A954", Offset = "0x1A0A954", VA = "0x1A0A954")]
	private MeshFilter makeMeshLowPoly(MeshFilter mf)
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1A0AAF0", Offset = "0x1A0AAF0", VA = "0x1A0AAF0")]
	private void setEdgeBlend()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1A0ABE4", Offset = "0x1A0ABE4", VA = "0x1A0ABE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1A0ABFC", Offset = "0x1A0ABFC", VA = "0x1A0ABFC")]
	private void CalcWave()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1A0ADD0", Offset = "0x1A0ADD0", VA = "0x1A0ADD0")]
	public Water()
	{
	}
}
[Token(Token = "0x2000087")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
internal class WaterFog : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool supportHDRTextures;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool supportDX11;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	protected bool isSupported;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Apply distance-based fog?")]
	public bool distanceFog;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Exclude far plane pixels from distance-based fog? (Skybox or clear color)")]
	public bool excludeFarPixels;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Distance fog is based on radial distance from camera when checked")]
	public bool useRadialDistance;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Apply height-based fog?")]
	public bool heightFog;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Fog top Y coordinate")]
	public float height;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.001f, 10f)]
	public float heightDensity;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Push fog away from the camera by this amount")]
	public float startDistance;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader fogShader;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material fogMaterial;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material> createdMaterials;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1A0AE00", Offset = "0x1A0AE00", VA = "0x1A0AE00")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1A0B27C", Offset = "0x1A0B27C", VA = "0x1A0B27C")]
	protected Material CreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1A0B4B4", Offset = "0x1A0B4B4", VA = "0x1A0B4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1A0B4C0", Offset = "0x1A0B4C0", VA = "0x1A0B4C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1A0B4C4", Offset = "0x1A0B4C4", VA = "0x1A0B4C4")]
	private void RemoveCreatedMaterials()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1A0B5A4", Offset = "0x1A0B5A4", VA = "0x1A0B5A4")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1A0B6A4", Offset = "0x1A0B6A4", VA = "0x1A0B6A4", Slot = "4")]
	public virtual bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1A0B7C4", Offset = "0x1A0B7C4", VA = "0x1A0B7C4")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1A0B5AC", Offset = "0x1A0B5AC", VA = "0x1A0B5AC")]
	protected bool CheckSupport(bool needDepth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1A0B7D0", Offset = "0x1A0B7D0", VA = "0x1A0B7D0")]
	protected bool CheckSupport(bool needDepth, bool needHdr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1A0B828", Offset = "0x1A0B828", VA = "0x1A0B828")]
	public bool Dx11Support()
	{
		return default(bool);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1A0B70C", Offset = "0x1A0B70C", VA = "0x1A0B70C")]
	protected void ReportAutoDisable()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1A0B830", Offset = "0x1A0B830", VA = "0x1A0B830")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1A0B25C", Offset = "0x1A0B25C", VA = "0x1A0B25C")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1A0BAB4", Offset = "0x1A0BAB4", VA = "0x1A0BAB4")]
	protected void DrawBorder(RenderTexture dest, Material material)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1A0BE2C", Offset = "0x1A0BE2C", VA = "0x1A0BE2C")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1A0C750", Offset = "0x1A0C750", VA = "0x1A0C750")]
	private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1A0C8B0", Offset = "0x1A0C8B0", VA = "0x1A0C8B0")]
	public WaterFog()
	{
	}
}
[Token(Token = "0x2000088")]
public class WaterParticles : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxParticles;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float range;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distanceMove;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minParticleSize;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxParticleSize;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float sizeMultiplier;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float minParticleSpeed;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxParticleSpeed;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speedMultiplier;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool fadeParticles;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float distanceFade;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _distanceToMove;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _distanceToFade;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _Transform;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1A0C95C", Offset = "0x1A0C95C", VA = "0x1A0C95C")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1A0CB2C", Offset = "0x1A0CB2C", VA = "0x1A0CB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1A0D328", Offset = "0x1A0D328", VA = "0x1A0D328")]
	public WaterParticles()
	{
	}
}
[Token(Token = "0x2000089")]
public class WowCamera : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float targetHeight;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offsetFromWall;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDistance;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistance;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedDistance;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rotationDampening;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public LayerMask collisionLayers;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float correctedDistance;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1A0D364", Offset = "0x1A0D364", VA = "0x1A0D364")]
	private void Start()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1A0D454", Offset = "0x1A0D454", VA = "0x1A0D454")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1A0DA8C", Offset = "0x1A0DA8C", VA = "0x1A0DA8C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1A0DAC8", Offset = "0x1A0DAC8", VA = "0x1A0DAC8")]
	public WowCamera()
	{
	}
}
[Token(Token = "0x200008A")]
[RequireComponent(typeof(Animator))]
public class BlinkingCtrl : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <blink>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlinkingCtrl <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0x1A0DDD4", Offset = "0x1A0DDD4", VA = "0x1A0DDD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0x1A0DE1C", Offset = "0x1A0DE1C", VA = "0x1A0DE1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1A0DC0C", Offset = "0x1A0DC0C", VA = "0x1A0DC0C")]
		[DebuggerHidden]
		public <blink>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1A0DC48", Offset = "0x1A0DC48", VA = "0x1A0DC48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1A0DC4C", Offset = "0x1A0DC4C", VA = "0x1A0DC4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x1A0DDDC", Offset = "0x1A0DDDC", VA = "0x1A0DDDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int from;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int to;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1A0DB24", Offset = "0x1A0DB24", VA = "0x1A0DB24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1A0DC08", Offset = "0x1A0DC08", VA = "0x1A0DC08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1A0DB94", Offset = "0x1A0DB94", VA = "0x1A0DB94")]
	[IteratorStateMachine(typeof(<blink>d__5))]
	private IEnumerator blink()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1A0DC34", Offset = "0x1A0DC34", VA = "0x1A0DC34")]
	public BlinkingCtrl()
	{
	}
}
[Token(Token = "0x200008C")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string currentName;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1A0DE24", Offset = "0x1A0DE24", VA = "0x1A0DE24")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1A0DF4C", Offset = "0x1A0DF4C", VA = "0x1A0DF4C")]
	public static string GetCurrent()
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1A0DF94", Offset = "0x1A0DF94", VA = "0x1A0DF94")]
	public static void SetCurrent(string newCurrentName)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1A0DFEC", Offset = "0x1A0DFEC", VA = "0x1A0DFEC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200008D")]
public class OrbitCamera2 : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxOffsetDistance;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float orbitSpeed;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float panSpeed;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float zoomSpeed;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetOffset;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startPos;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 goTo;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion startRot;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer rendd;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool setReset;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool autoReset;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float turnSpeed;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Slider mainSlider;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool state;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool curTabb;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1A0DFF4", Offset = "0x1A0DFF4", VA = "0x1A0DFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1A0E134", Offset = "0x1A0E134", VA = "0x1A0E134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1A0EDA8", Offset = "0x1A0EDA8", VA = "0x1A0EDA8")]
	public void changeState(bool activ)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1A0EDB4", Offset = "0x1A0EDB4", VA = "0x1A0EDB4")]
	public void setAutoRes(bool activ)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1A0EDC0", Offset = "0x1A0EDC0", VA = "0x1A0EDC0")]
	public void turnSpeedf(float speed)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1A0E7AC", Offset = "0x1A0E7AC", VA = "0x1A0E7AC")]
	public void TurnTable()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1A0EE68", Offset = "0x1A0EE68", VA = "0x1A0EE68")]
	public void ResetCamPos()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1A0F020", Offset = "0x1A0F020", VA = "0x1A0F020")]
	public static void SetNewResetCamPos(bool asd)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1A0F06C", Offset = "0x1A0F06C", VA = "0x1A0F06C")]
	public void SetNewResetCamPos2(bool asd)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1A0E944", Offset = "0x1A0E944", VA = "0x1A0E944")]
	public void NewResetCamPos()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1A0E154", Offset = "0x1A0E154", VA = "0x1A0E154")]
	public void MoveCam()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1A0F0B8", Offset = "0x1A0F0B8", VA = "0x1A0F0B8")]
	public OrbitCamera2()
	{
	}
}
[Token(Token = "0x200008E")]
public class SpawnAlien : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject current;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string currentAlienName;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool state;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Toggle touchToggle;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1A2CE68", Offset = "0x1A2CE68", VA = "0x1A2CE68")]
	private void SelectAlien(string name)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1A2D0CC", Offset = "0x1A2D0CC", VA = "0x1A2D0CC")]
	public void OnTogglePushed(bool WireOn)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1A2D510", Offset = "0x1A2D510", VA = "0x1A2D510")]
	public SpawnAlien()
	{
	}
}
[Token(Token = "0x200008F")]
public class colorSwitch : MonoBehaviour
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture t1;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture t2;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture t3;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject target;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int i;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1A2D518", Offset = "0x1A2D518", VA = "0x1A2D518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1A2D524", Offset = "0x1A2D524", VA = "0x1A2D524")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1A2D630", Offset = "0x1A2D630", VA = "0x1A2D630")]
	public colorSwitch()
	{
	}
}
[Token(Token = "0x2000090")]
[ExecuteInEditMode]
public class FixedRotation : MonoBehaviour
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationAmount;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1A2D638", Offset = "0x1A2D638", VA = "0x1A2D638")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1A2D664", Offset = "0x1A2D664", VA = "0x1A2D664")]
	public FixedRotation()
	{
	}
}
[Token(Token = "0x2000091")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 2f)]
	[Header("Trees Settings")]
	public float AOIntensity;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 2f)]
	public float TranslucencyIntensity;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TranslucencyDistance;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(20f)]
	public bool EnableTintColor;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TintToggle;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0.001f, 10f)]
	public float TintNoiseTile;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0.001f, 10f)]
	public float TintNoiseContrast;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1A2D674", Offset = "0x1A2D674", VA = "0x1A2D674")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1A2D6EC", Offset = "0x1A2D6EC", VA = "0x1A2D6EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1A2D840", Offset = "0x1A2D840", VA = "0x1A2D840")]
	public AGGlobalSettings()
	{
	}
}
[Token(Token = "0x2000092")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnow : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Wind")]
	public bool EnableGlobalWind;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float WindGrassAmplitude;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float WindGrassSpeed;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 3f)]
	public float WindGrassScale;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float WindGrassStiffness;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Tint Color")]
	public bool EnableTintColor;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float TintToggle;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0.001f, 10f)]
	public float TintNoiseTile;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0.001f, 10f)]
	public float TintNoiseContrast;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	[Header("Global Snow for Props")]
	public float SnowPropsIntensity;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Range(0f, 1f)]
	public float SnowPropsOffset;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Range(0f, 1f)]
	public float SnowPropsContrast;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Global Snow Height")]
	public float SnowMinimumHeight;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 30f)]
	public float SnowFadeHeight;

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1A2D864", Offset = "0x1A2D864", VA = "0x1A2D864")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1A2D8DC", Offset = "0x1A2D8DC", VA = "0x1A2D8DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1A2DB90", Offset = "0x1A2DB90", VA = "0x1A2DB90")]
	public AGGlobalSnow()
	{
	}
}
[Token(Token = "0x2000093")]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
[DisallowMultipleComponent]
public class AGGlobalSnowGrass : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Header("Global Snow for Grass")]
	public float SnowGrassIntensity;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowGrassOffset;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowGrassContrast;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1A2DBCC", Offset = "0x1A2DBCC", VA = "0x1A2DBCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1A2DC44", Offset = "0x1A2DC44", VA = "0x1A2DC44")]
	private void Update()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1A2DCE0", Offset = "0x1A2DCE0", VA = "0x1A2DCE0")]
	public AGGlobalSnowGrass()
	{
	}
}
[Token(Token = "0x2000094")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnowHeight : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Snow Height")]
	public float SnowMinimumHeight;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 30f)]
	public float SnowFadeHeight;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1A2DCF8", Offset = "0x1A2DCF8", VA = "0x1A2DCF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1A2DD70", Offset = "0x1A2DD70", VA = "0x1A2DD70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1A2DDE8", Offset = "0x1A2DDE8", VA = "0x1A2DDE8")]
	public AGGlobalSnowHeight()
	{
	}
}
[Token(Token = "0x2000095")]
[RequireComponent(typeof(MeshRenderer))]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AGGlobalSnowProps : MonoBehaviour
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Header("Global Snow for Props")]
	public float SnowPropsIntensity;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowPropsOffset;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowPropsContrast;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1A2DDFC", Offset = "0x1A2DDFC", VA = "0x1A2DDFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1A2DE74", Offset = "0x1A2DE74", VA = "0x1A2DE74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1A2DF10", Offset = "0x1A2DF10", VA = "0x1A2DF10")]
	public AGGlobalSnowProps()
	{
	}
}
[Token(Token = "0x2000096")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnowTree : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global Snow for Trees")]
	[Range(0f, 1f)]
	public float SnowTreeIntensity;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float SnowTreeOffset;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float SnowTreeContrast;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float SnowTreeArrowDirection;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1A2DF28", Offset = "0x1A2DF28", VA = "0x1A2DF28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1A2DFA0", Offset = "0x1A2DFA0", VA = "0x1A2DFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1A2E068", Offset = "0x1A2E068", VA = "0x1A2E068")]
	public AGGlobalSnowTree()
	{
	}
}
[Token(Token = "0x2000097")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalWind : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableGlobalWind;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float WindTreeAmplitude;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 10f)]
	public float WindTreeSpeed;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 3f)]
	public float WindTreeScale;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float WindTreeStiffness;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(20f)]
	[Range(0f, 1f)]
	public float WindGrassAmplitude;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 10f)]
	public float WindGrassSpeed;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 3f)]
	public float WindGrassScale;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float WindGrassStiffness;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1A2E078", Offset = "0x1A2E078", VA = "0x1A2E078")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1A2E0F0", Offset = "0x1A2E0F0", VA = "0x1A2E0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1A2E2E0", Offset = "0x1A2E2E0", VA = "0x1A2E2E0")]
	public AGGlobalWind()
	{
	}
}
[Token(Token = "0x2000098")]
public class FlickerLight : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	[CompilerGenerated]
	private sealed class <Timer>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlickerLight <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0x1A2E924", Offset = "0x1A2E924", VA = "0x1A2E924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A3")]
			[Address(RVA = "0x1A2E96C", Offset = "0x1A2E96C", VA = "0x1A2E96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1A2E62C", Offset = "0x1A2E62C", VA = "0x1A2E62C")]
		[DebuggerHidden]
		public <Timer>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1A2E69C", Offset = "0x1A2E69C", VA = "0x1A2E69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1A2E6A0", Offset = "0x1A2E6A0", VA = "0x1A2E6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1A2E92C", Offset = "0x1A2E92C", VA = "0x1A2E92C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lampSpeed;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intens_Speed;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool timung;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minIntens;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxIntens;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool loopEnd;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float range_Speed;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minRange;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxRange;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color col_Main;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float col_Speed;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color col_Blend1;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color col_Blend2;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color refCol;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float intens;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float randomIntens;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float range;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float randomRange;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject lamp;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1A2E304", Offset = "0x1A2E304", VA = "0x1A2E304")]
	private void Start()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1A2E454", Offset = "0x1A2E454", VA = "0x1A2E454")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1A2E3E0", Offset = "0x1A2E3E0", VA = "0x1A2E3E0")]
	[IteratorStateMachine(typeof(<Timer>d__21))]
	private IEnumerator Timer()
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1A2E654", Offset = "0x1A2E654", VA = "0x1A2E654")]
	public FlickerLight()
	{
	}
}
[Token(Token = "0x200009A")]
[ExecuteInEditMode]
public class BRDFLookupTexture : MonoBehaviour
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float diffuseIntensity;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color keyColor;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color fillColor;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color backColor;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float wrapAround;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float metalic;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float specularIntensity;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float specularShininess;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float translucency;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color translucentColor;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int lookupTextureWidth;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int lookupTextureHeight;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fastPreview;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture2D lookupTexture;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1A2E974", Offset = "0x1A2E974", VA = "0x1A2E974")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1A2E9F4", Offset = "0x1A2E9F4", VA = "0x1A2E9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1A2EA0C", Offset = "0x1A2EA0C", VA = "0x1A2EA0C")]
	private static Color ColorRGB(int r, int g, int b)
	{
		return default(Color);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1A2EA34", Offset = "0x1A2EA34", VA = "0x1A2EA34")]
	private void CheckConsistency()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1A2EABC", Offset = "0x1A2EABC", VA = "0x1A2EABC")]
	private Color PixelFunc(float ndotl, float ndoth)
	{
		return default(Color);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1A2EDA8", Offset = "0x1A2EDA8", VA = "0x1A2EDA8")]
	private void TextureFunc(Texture2D tex)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1A2EEA0", Offset = "0x1A2EEA0", VA = "0x1A2EEA0")]
	private void GenerateLookupTexture(int width, int height)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1A2F028", Offset = "0x1A2F028", VA = "0x1A2F028")]
	public void Preview()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1A2E9EC", Offset = "0x1A2E9EC", VA = "0x1A2E9EC")]
	public void Bake()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1A2F034", Offset = "0x1A2F034", VA = "0x1A2F034")]
	public BRDFLookupTexture()
	{
	}
}
[Token(Token = "0x200009B")]
public class ControlFire : MonoBehaviour
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FireParticlesRoot;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("All audio sources that must be activated at the time of burning")]
	public AudioSource audioSource;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("How long the start of burning will last")]
	public float StartBurnning;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("How long will the burning last")]
	public float Burning;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("How long the burning will fade")]
	public float StopBurning;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Array of audio that must be activated at the time of burning.")]
	public Light[] lights;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] EmissionPS;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] lightsRandomIntense;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timer;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float count;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool cleanCount;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool activateParticle;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1A2F094", Offset = "0x1A2F094", VA = "0x1A2F094")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1A2F124", Offset = "0x1A2F124", VA = "0x1A2F124")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1A2F318", Offset = "0x1A2F318", VA = "0x1A2F318")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1A2F5D8", Offset = "0x1A2F5D8", VA = "0x1A2F5D8")]
	private void ChangeParticleEmission(float timer)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1A2F5DC", Offset = "0x1A2F5DC", VA = "0x1A2F5DC")]
	private void ControlLight(int whatToDo, float timer)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1A2F8D8", Offset = "0x1A2F8D8", VA = "0x1A2F8D8")]
	public ControlFire()
	{
	}
}
[Token(Token = "0x200009C")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1A2F8FC", Offset = "0x1A2F8FC", VA = "0x1A2F8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1A2F908", Offset = "0x1A2F908", VA = "0x1A2F908")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1A2F938", Offset = "0x1A2F938", VA = "0x1A2F938")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1A2F9AC", Offset = "0x1A2F9AC", VA = "0x1A2F9AC")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1A2F9D8", Offset = "0x1A2F9D8", VA = "0x1A2F9D8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1A2FA10", Offset = "0x1A2FA10", VA = "0x1A2FA10")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1A2FEA8", Offset = "0x1A2FEA8", VA = "0x1A2FEA8")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x200009D")]
public class ScrollingUVs : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1A2FEC8", Offset = "0x1A2FEC8", VA = "0x1A2FEC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1A2FFA4", Offset = "0x1A2FFA4", VA = "0x1A2FFA4")]
	public ScrollingUVs()
	{
	}
}
[Token(Token = "0x200009E")]
[DisallowMultipleComponent]
public class DBK_ColorThemeSelect : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int iColorTheme;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public int iOrnamentTheme;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer renderer_r;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int ornamentRow;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ornamentColumn;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1A30040", Offset = "0x1A30040", VA = "0x1A30040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1A30044", Offset = "0x1A30044", VA = "0x1A30044")]
	private void ApplyProperties()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1A3022C", Offset = "0x1A3022C", VA = "0x1A3022C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1A301A4", Offset = "0x1A301A4", VA = "0x1A301A4")]
	private int ReturnOrnamentRow(int index)
	{
		return default(int);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1A30214", Offset = "0x1A30214", VA = "0x1A30214")]
	private int ReturnOrnamentColumn(int index)
	{
		return default(int);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1A30230", Offset = "0x1A30230", VA = "0x1A30230")]
	public DBK_ColorThemeSelect()
	{
	}
}
[Token(Token = "0x200009F")]
[ExecuteInEditMode]
public class Windy : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Parameters")]
	[Tooltip("Wind Speed in Kilometers per hour")]
	public float WindSpeed;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 2f)]
	[Tooltip("Wind Turbulence in percentage of wind Speed")]
	public float Turbulence;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Texture used for wind turbulence")]
	[Header("Noise Parameters")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for bending trees")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for leaf shivering")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Gust Parameters")]
	[Tooltip("Texture used for wind gusts")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Size of one world tiling patch of the Gust Texture, for leaf shivering")]
	public float GustWorldSize;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Wind Gust Speed in Kilometers per hour")]
	public float GustSpeed;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Wind Gust Influence on trees")]
	public float GustScale;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1A30240", Offset = "0x1A30240", VA = "0x1A30240")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1A30404", Offset = "0x1A30404", VA = "0x1A30404")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1A30408", Offset = "0x1A30408", VA = "0x1A30408")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1A30244", Offset = "0x1A30244", VA = "0x1A30244")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1A3040C", Offset = "0x1A3040C", VA = "0x1A3040C")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1A30510", Offset = "0x1A30510", VA = "0x1A30510")]
	public Windy()
	{
	}
}
[Token(Token = "0x20000A0")]
public class trigger_Branch_snowdrift : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <DeleteSnowdrift>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public trigger_Branch_snowdrift <>4__this;

		[Token(Token = "0x17000034")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0x1A30848", Offset = "0x1A30848", VA = "0x1A30848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x1A30890", Offset = "0x1A30890", VA = "0x1A30890", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x1A3072C", Offset = "0x1A3072C", VA = "0x1A3072C")]
		[DebuggerHidden]
		public <DeleteSnowdrift>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1A3075C", Offset = "0x1A3075C", VA = "0x1A3075C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1A30760", Offset = "0x1A30760", VA = "0x1A30760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1A30850", Offset = "0x1A30850", VA = "0x1A30850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject goParticleSnow;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1A30544", Offset = "0x1A30544", VA = "0x1A30544")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1A306B8", Offset = "0x1A306B8", VA = "0x1A306B8")]
	[IteratorStateMachine(typeof(<DeleteSnowdrift>d__2))]
	public IEnumerator DeleteSnowdrift()
	{
		return null;
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1A30754", Offset = "0x1A30754", VA = "0x1A30754")]
	public trigger_Branch_snowdrift()
	{
	}
}
[Token(Token = "0x20000A2")]
public class FlyCamera : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XSensitivity;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float YSensitivity;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinimumX;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaximumX;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 m_MoveDir;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_WalkSpeed;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 m_Input;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera m_Camera;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_OriginalCameraPosition;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1A30898", Offset = "0x1A30898", VA = "0x1A30898")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1A30910", Offset = "0x1A30910", VA = "0x1A30910")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1A30974", Offset = "0x1A30974", VA = "0x1A30974")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1A309EC", Offset = "0x1A309EC", VA = "0x1A309EC")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1A309FC", Offset = "0x1A309FC", VA = "0x1A309FC")]
	private void GetInput(out float speed)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1A30B50", Offset = "0x1A30B50", VA = "0x1A30B50")]
	private void UpdateCameraPosition(float speed)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1A30B98", Offset = "0x1A30B98", VA = "0x1A30B98")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1A30CC8", Offset = "0x1A30CC8", VA = "0x1A30CC8")]
	public void LookRotation()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1A30F3C", Offset = "0x1A30F3C", VA = "0x1A30F3C")]
	public FlyCamera()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LargeScreenShot : MonoBehaviour
{
	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private sealed class <take>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0x1A31328", Offset = "0x1A31328", VA = "0x1A31328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x1A31370", Offset = "0x1A31370", VA = "0x1A31370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1A3124C", Offset = "0x1A3124C", VA = "0x1A3124C")]
		[DebuggerHidden]
		public <take>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1A31288", Offset = "0x1A31288", VA = "0x1A31288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1A3128C", Offset = "0x1A3128C", VA = "0x1A3128C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x1A31330", Offset = "0x1A31330", VA = "0x1A31330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D ScreenShot;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture rt;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int res;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int res2;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1A30FBC", Offset = "0x1A30FBC", VA = "0x1A30FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1A310B0", Offset = "0x1A310B0", VA = "0x1A310B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1A311EC", Offset = "0x1A311EC", VA = "0x1A311EC")]
	[IteratorStateMachine(typeof(<take>d__6))]
	private IEnumerator take()
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1A31274", Offset = "0x1A31274", VA = "0x1A31274")]
	public LargeScreenShot()
	{
	}
}
[Token(Token = "0x20000A5")]
public class LightFlickerSpark : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Light m_light;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material m_emissiveMaterial;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_normalFliclerTime;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_isFlickering;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_flickerDuration;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource m_audioSource;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color m_originalEmmisionColor;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentTimer;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float durationTimer;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color m_offColor;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_isLightOn;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1A31378", Offset = "0x1A31378", VA = "0x1A31378")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1A3140C", Offset = "0x1A3140C", VA = "0x1A3140C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1A3162C", Offset = "0x1A3162C", VA = "0x1A3162C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1A31688", Offset = "0x1A31688", VA = "0x1A31688")]
	public LightFlickerSpark()
	{
	}
}
[Token(Token = "0x20000A6")]
public class RainDrop : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rippleEffect;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1A316A4", Offset = "0x1A316A4", VA = "0x1A316A4")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1A31864", Offset = "0x1A31864", VA = "0x1A31864")]
	public RainDrop()
	{
	}
}
[Token(Token = "0x20000A7")]
public class LocalRotator : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxAngle;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve Curve;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LoopLength;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Offset;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Axis;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion startRotation;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float elapsedTime;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1A318EC", Offset = "0x1A318EC", VA = "0x1A318EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1A31924", Offset = "0x1A31924", VA = "0x1A31924")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1A31930", Offset = "0x1A31930", VA = "0x1A31930")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1A31AAC", Offset = "0x1A31AAC", VA = "0x1A31AAC")]
	public LocalRotator()
	{
	}
}
[Token(Token = "0x20000A8")]
[ExecuteInEditMode]
public class MeshRendererOrder : MonoBehaviour
{
	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Order;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1A31B14", Offset = "0x1A31B14", VA = "0x1A31B14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1A31B70", Offset = "0x1A31B70", VA = "0x1A31B70")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1A31BCC", Offset = "0x1A31BCC", VA = "0x1A31BCC")]
	public MeshRendererOrder()
	{
	}
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Parameters")]
	[Tooltip("Wind Speed in Kilometers per hour")]
	public float WindSpeed;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Wind Turbulence in percentage of wind Speed")]
	[Range(0f, 2f)]
	public float Turbulence;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Noise Parameters")]
	[Tooltip("Texture used for wind turbulence")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for bending trees")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Size of one world tiling patch of the Noise Texture, for leaf shivering")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Gust Parameters")]
	[Tooltip("Texture used for wind gusts")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Size of one world tiling patch of the Gust Texture, for leaf shivering")]
	public float GustWorldSize;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Wind Gust Speed in Kilometers per hour")]
	public float GustSpeed;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Wind Gust Influence on trees")]
	public float GustScale;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1A31BD4", Offset = "0x1A31BD4", VA = "0x1A31BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1A31D98", Offset = "0x1A31D98", VA = "0x1A31D98")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1A31D9C", Offset = "0x1A31D9C", VA = "0x1A31D9C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1A31BD8", Offset = "0x1A31BD8", VA = "0x1A31BD8")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1A31DA0", Offset = "0x1A31DA0", VA = "0x1A31DA0")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1A31EA4", Offset = "0x1A31EA4", VA = "0x1A31EA4")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x20000AA")]
[RequireComponent(typeof(MeshFilter))]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toolbarInt;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> points;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmooth;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideLakeRender;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float uvScale;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool receiveShadows;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentSplatMap;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float distanceClearFoliage;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int secondSplatMap;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int cliffSplatMap;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float cliffAngle;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float cliffBlend;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cliffAngleOutside;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float cliffBlendOutside;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool noiseCarve;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float noiseSizeX;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float noiseSizeZ;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool noisePaint;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maximumTriangleSize;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float traingleDensity;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float height;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool lockHeight;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float yOffset;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float trianglesGenerated;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float vertsGenerated;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Mesh currentMesh;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshFilter meshfilter;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool showVertexColors;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool showFlowMap;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool overrideFlowMap;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float automaticFlowMapScale;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool noiseflowMap;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool drawOnMesh;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color drawColor;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool drawColorR;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool drawColorG;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool drawColorB;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool drawColorA;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool drawOnMultiple;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float opacity;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float drawSize;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material oldMaterial;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float floatSpeed;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float flowSpeed;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float flowDirection;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float closeDistanceSimulation;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int angleSimulation;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float checkDistanceSimulation;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool removeFirstPointSimulation;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LakePolygonCarveData lakePolygonCarveData;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public LakePolygonCarveData lakePolygonPaintData;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public LakePolygonCarveData lakePolygonClearData;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<GameObject> meshGOs;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1A31ED8", Offset = "0x1A31ED8", VA = "0x1A31ED8")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1A31FB0", Offset = "0x1A31FB0", VA = "0x1A31FB0")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1A321FC", Offset = "0x1A321FC", VA = "0x1A321FC")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1A3227C", Offset = "0x1A3227C", VA = "0x1A3227C")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1A322F8", Offset = "0x1A322F8", VA = "0x1A322F8")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1A32364", Offset = "0x1A32364", VA = "0x1A32364")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1A32500", Offset = "0x1A32500", VA = "0x1A32500")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1A33DB4", Offset = "0x1A33DB4", VA = "0x1A33DB4")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1A33ACC", Offset = "0x1A33ACC", VA = "0x1A33ACC")]
	private void CalculateCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1A33F80", Offset = "0x1A33F80", VA = "0x1A33F80")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1A33FFC", Offset = "0x1A33FFC", VA = "0x1A33FFC")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1A33D2C", Offset = "0x1A33D2C", VA = "0x1A33D2C")]
	public float DistancePointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd, out Vector2 pointProject)
	{
		return default(float);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1A34104", Offset = "0x1A34104", VA = "0x1A34104")]
	public Vector2 ProjectPointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1A341E0", Offset = "0x1A341E0", VA = "0x1A341E0")]
	public void TerrainCarve(bool terrainShow = false)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1A36028", Offset = "0x1A36028", VA = "0x1A36028")]
	public void TerrainPaint(bool terrainShow = false)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1A37CA8", Offset = "0x1A37CA8", VA = "0x1A37CA8")]
	public void TerrainClearTrees(bool details = true)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1A39000", Offset = "0x1A39000", VA = "0x1A39000")]
	public void Simulation()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1A39C9C", Offset = "0x1A39C9C", VA = "0x1A39C9C")]
	public static bool AreLinesIntersecting(Vector3 l1_p1, Vector3 l1_p2, Vector3 l2_p1, Vector3 l2_p2, bool shouldIncludeEndPoints = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1A35F5C", Offset = "0x1A35F5C", VA = "0x1A35F5C")]
	public static float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(float);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1A39D70", Offset = "0x1A39D70", VA = "0x1A39D70")]
	public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1A39E94", Offset = "0x1A39E94", VA = "0x1A39E94")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x20000AB")]
public class LakePolygonCarveData
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distSmooth;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minX;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minZ;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4[,] distances;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1A36014", Offset = "0x1A36014", VA = "0x1A36014")]
	public LakePolygonCarveData()
	{
	}
}
[Token(Token = "0x20000AC")]
[CreateAssetMenu(fileName = "LakePolygonProfile", menuName = "LakePolygonProfile", order = 1)]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distSmooth;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float uvScale;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumTriangleSize;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float traingleDensity;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool receiveShadows;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float automaticFlowMapScale;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noiseflowMap;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool noiseCarve;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float noiseSizeX;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float noiseSizeZ;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int currentSplatMap;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noisePaint;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float noiseSizeXPaint;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int secondSplatMap;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int cliffSplatMap;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cliffAngle;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cliffBlend;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cliffAngleOutside;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cliffBlendOutside;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float distanceClearFoliage;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int biomeType;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1A3A2B4", Offset = "0x1A3A2B4", VA = "0x1A3A2B4")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x20000AD")]
public class LakePolygonSwitch : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygon Polygon;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile Profile;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1A3A564", Offset = "0x1A3A564", VA = "0x1A3A564")]
	public void Switch()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1A3A588", Offset = "0x1A3A588", VA = "0x1A3A588")]
	public void SetProfile(LakePolygonProfile lakeProfile)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1A3A7A4", Offset = "0x1A3A7A4", VA = "0x1A3A7A4")]
	public LakePolygonSwitch()
	{
	}
}
[Token(Token = "0x20000AE")]
public class RamSwitch : MonoBehaviour
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RamSpline spline;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile Profile;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1A3A7AC", Offset = "0x1A3A7AC", VA = "0x1A3A7AC")]
	public void Switch()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1A3A7D8", Offset = "0x1A3A7D8", VA = "0x1A3A7D8")]
	public void SetProfile(SplineProfile splineProfile)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1A3ABE4", Offset = "0x1A3ABE4", VA = "0x1A3ABE4")]
	public RamSwitch()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool colorMeshLive;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layer;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter[] meshFilters;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool colored;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1A3ABEC", Offset = "0x1A3ABEC", VA = "0x1A3ABEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1A3AD4C", Offset = "0x1A3AD4C", VA = "0x1A3AD4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1A3AD5C", Offset = "0x1A3AD5C", VA = "0x1A3AD5C")]
	public void ColorMeshLive()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1A3B524", Offset = "0x1A3B524", VA = "0x1A3B524")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x20000B0")]
[RequireComponent(typeof(Rigidbody))]
public class RamBuoyancy : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(2f, 10f)]
	public int pointsInAxis;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector3> volumePoints;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoGenerateVolumePoints;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] volumePointsMatrix;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lowestPoint;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 center;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool debug;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1A3B594", Offset = "0x1A3B594", VA = "0x1A3B594")]
	private void Start()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1A3BA70", Offset = "0x1A3BA70", VA = "0x1A3BA70")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1A3BA74", Offset = "0x1A3BA74", VA = "0x1A3BA74")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1A3C94C", Offset = "0x1A3C94C", VA = "0x1A3C94C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1A3CAEC", Offset = "0x1A3CAEC", VA = "0x1A3CAEC")]
	public RamBuoyancy()
	{
	}
}
[Token(Token = "0x20000B1")]
[RequireComponent(typeof(MeshFilter))]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<Vector3> verticeDirection;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float floatSpeed;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool generateOnStart;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool debugNormals;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool debugTangents;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool debugBitangent;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public bool debugFlowmap;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool debugPoints;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool debugPointsConnect;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool debugMesh;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float distanceToDebug;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color drawColor;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool drawColorR;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	public bool drawColorG;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	public bool drawColorB;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	public bool drawColorA;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool drawOnMultiple;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float flowSpeed;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float flowDirection;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool noiseflowMap;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float opacity;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float drawSize;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float length;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float fulllength;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float minMaxWidth;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float uvWidth;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float uvBeginning;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool receiveShadows;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool generateMeshParts;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int meshPartsCount;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool simulatedNoUp;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int detailTerrain;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int detailTerrainForward;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool overrideRiverRender;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool noiseWidth;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float noiseSizeWidth;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public bool noiseCarve;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float noiseSizeX;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float noiseSizeZ;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public bool noisePaint;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float distSmooth;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public float distSmoothStart;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public int currentSplatMap;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int secondSplatMap;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public int cliffSplatMap;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float cliffAngle;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float cliffBlend;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float cliffAngleOutside;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float cliffBlendOutside;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float distanceClearFoliage;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject meshGO;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1A3CBEC", Offset = "0x1A3CBEC", VA = "0x1A3CBEC")]
	public void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1A3DA7C", Offset = "0x1A3DA7C", VA = "0x1A3DA7C")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions, string name = "RamSpline")
	{
		return null;
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1A3DC38", Offset = "0x1A3DC38", VA = "0x1A3DC38")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1A3DFE8", Offset = "0x1A3DFE8", VA = "0x1A3DFE8")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1A3E440", Offset = "0x1A3E440", VA = "0x1A3E440")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1A3E448", Offset = "0x1A3E448", VA = "0x1A3E448")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1A3E4FC", Offset = "0x1A3E4FC", VA = "0x1A3E4FC")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1A3E5F0", Offset = "0x1A3E5F0", VA = "0x1A3E5F0")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1A3E65C", Offset = "0x1A3E65C", VA = "0x1A3E65C")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1A3E93C", Offset = "0x1A3E93C", VA = "0x1A3E93C")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1A3CBFC", Offset = "0x1A3CBFC", VA = "0x1A3CBFC")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1A3EC20", Offset = "0x1A3EC20", VA = "0x1A3EC20")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1A3F464", Offset = "0x1A3F464", VA = "0x1A3F464")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1A3F73C", Offset = "0x1A3F73C", VA = "0x1A3F73C")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1A43078", Offset = "0x1A43078", VA = "0x1A43078")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1A42648", Offset = "0x1A42648", VA = "0x1A42648")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1A42388", Offset = "0x1A42388", VA = "0x1A42388")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1A42404", Offset = "0x1A42404", VA = "0x1A42404")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1A4250C", Offset = "0x1A4250C", VA = "0x1A4250C")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1A425FC", Offset = "0x1A425FC", VA = "0x1A425FC")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1A3FA10", Offset = "0x1A3FA10", VA = "0x1A3FA10")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1A43400", Offset = "0x1A43400", VA = "0x1A43400")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1A44464", Offset = "0x1A44464", VA = "0x1A44464")]
	public void AddNoiseToWidths()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1A44594", Offset = "0x1A44594", VA = "0x1A44594")]
	public void SimulateRiver(bool generate = true)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1A46338", Offset = "0x1A46338", VA = "0x1A46338")]
	public void ShowTerrainCarve(float differentSize = 0f)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1A47E3C", Offset = "0x1A47E3C", VA = "0x1A47E3C")]
	public void TerrainCarve()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1A48870", Offset = "0x1A48870", VA = "0x1A48870")]
	public void TerrainPaintMeshBased()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1A49BAC", Offset = "0x1A49BAC", VA = "0x1A49BAC")]
	public void TerrainClearFoliage(bool details = true)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1A43328", Offset = "0x1A43328", VA = "0x1A43328")]
	private float FlowCalculate(float u, float normalY, Vector3 vertice)
	{
		return default(float);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1A4A914", Offset = "0x1A4A914", VA = "0x1A4A914")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x20000B2")]
[CreateAssetMenu(fileName = "SplineProfile", menuName = "SplineProfile", order = 1)]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool receiveShadows;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noiseflowMap;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float floatSpeed;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float distSmooth;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distSmoothStart;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool noiseCarve;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float noiseSizeX;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noiseSizeZ;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int currentSplatMap;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int secondSplatMap;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int cliffSplatMap;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cliffAngle;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cliffBlend;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float cliffAngleOutside;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float cliffBlendOutside;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float distanceClearFoliage;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool noisePaint;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float noiseSizeXPaint;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float noiseSizeZPaint;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float simulatedRiverLength;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int simulatedRiverPoints;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float simulatedMinStepSize;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool simulatedNoUp;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool noiseWidth;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float noiseSizeWidth;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int biomeType;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1A4B4E0", Offset = "0x1A4B4E0", VA = "0x1A4B4E0")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x20000B3")]
public class SetCustomDepthNormalShader : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader depthNormalShader;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1A4BAB4", Offset = "0x1A4BAB4", VA = "0x1A4BAB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1A4BB54", Offset = "0x1A4BB54", VA = "0x1A4BB54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1A4BB58", Offset = "0x1A4BB58", VA = "0x1A4BB58")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1A4BAB8", Offset = "0x1A4BAB8", VA = "0x1A4BAB8")]
	private void SetCustomShader()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1A4BB5C", Offset = "0x1A4BB5C", VA = "0x1A4BB5C")]
	public SetCustomDepthNormalShader()
	{
	}
}
[Token(Token = "0x20000B4")]
[RequireComponent(typeof(WindZone))]
[ExecuteInEditMode]
public class WindForLODGroupsOnTerrain : MonoBehaviour
{
	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WindZone m_WindZone;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 WindDirection;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float WindStrength;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float WindTurbulence;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float WindMultiplier;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool init;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int TerrainLODWindPID;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1A4BB64", Offset = "0x1A4BB64", VA = "0x1A4BB64")]
	private void Init()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1A4BBEC", Offset = "0x1A4BBEC", VA = "0x1A4BBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1A4BDE4", Offset = "0x1A4BDE4", VA = "0x1A4BDE4")]
	public WindForLODGroupsOnTerrain()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1A4BDF4", Offset = "0x1A4BDF4", VA = "0x1A4BDF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1A4BE00", Offset = "0x1A4BE00", VA = "0x1A4BE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1A4C4FC", Offset = "0x1A4C4FC", VA = "0x1A4C4FC")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TFPCaveAudio : MonoBehaviour
{
	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <ChangeAmbience>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float goalAmbience;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmbience>5__2;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <progress>5__3;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000350")]
			[Address(RVA = "0x1A4C814", Offset = "0x1A4C814", VA = "0x1A4C814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0x1A4C85C", Offset = "0x1A4C85C", VA = "0x1A4C85C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1A4C708", Offset = "0x1A4C708", VA = "0x1A4C708")]
		[DebuggerHidden]
		public <ChangeAmbience>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1A4C74C", Offset = "0x1A4C74C", VA = "0x1A4C74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1A4C750", Offset = "0x1A4C750", VA = "0x1A4C750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1A4C81C", Offset = "0x1A4C81C", VA = "0x1A4C81C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float audioTransitionDuration;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot open;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot cave;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ambienceTransitionDuration;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float caveAmbientIntensity;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float outdoorAmbientIntensity;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1A4C518", Offset = "0x1A4C518", VA = "0x1A4C518")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1A4C5E4", Offset = "0x1A4C5E4", VA = "0x1A4C5E4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1A4C5C4", Offset = "0x1A4C5C4", VA = "0x1A4C5C4")]
	public void InitAmbienceTransition(float goalAmbience, float duration)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1A4C694", Offset = "0x1A4C694", VA = "0x1A4C694")]
	[IteratorStateMachine(typeof(<ChangeAmbience>d__9))]
	private IEnumerator ChangeAmbience(float goalAmbience, float duration)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1A4C730", Offset = "0x1A4C730", VA = "0x1A4C730")]
	public TFPCaveAudio()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TFPCaveAudioParticle : MonoBehaviour
{
	[Token(Token = "0x20000B9")]
	[CompilerGenerated]
	private sealed class <ChangeAmbience>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float goalAmbience;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmbience>5__2;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <progress>5__3;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035B")]
			[Address(RVA = "0x1A4CB80", Offset = "0x1A4CB80", VA = "0x1A4CB80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035D")]
			[Address(RVA = "0x1A4CBC8", Offset = "0x1A4CBC8", VA = "0x1A4CBC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1A4CA74", Offset = "0x1A4CA74", VA = "0x1A4CA74")]
		[DebuggerHidden]
		public <ChangeAmbience>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1A4CAB8", Offset = "0x1A4CAB8", VA = "0x1A4CAB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1A4CABC", Offset = "0x1A4CABC", VA = "0x1A4CABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1A4CB88", Offset = "0x1A4CB88", VA = "0x1A4CB88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float audioTransitionDuration;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot open;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot cave;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem rain;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ambienceTransitionDuration;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float caveAmbientIntensity;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float outdoorAmbientIntensity;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1A4C864", Offset = "0x1A4C864", VA = "0x1A4C864")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1A4C940", Offset = "0x1A4C940", VA = "0x1A4C940")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1A4C920", Offset = "0x1A4C920", VA = "0x1A4C920")]
	public void InitAmbienceTransition(float goalAmbience, float duration)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1A4CA00", Offset = "0x1A4CA00", VA = "0x1A4CA00")]
	[IteratorStateMachine(typeof(<ChangeAmbience>d__10))]
	private IEnumerator ChangeAmbience(float goalAmbience, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1A4CA9C", Offset = "0x1A4CA9C", VA = "0x1A4CA9C")]
	public TFPCaveAudioParticle()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TFPExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1A4CBD0", Offset = "0x1A4CBD0", VA = "0x1A4CBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1A4CBDC", Offset = "0x1A4CBDC", VA = "0x1A4CBDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1A4D2D8", Offset = "0x1A4D2D8", VA = "0x1A4D2D8")]
	public TFPExtendedFlycam()
	{
	}
}
[Token(Token = "0x20000BB")]
public class AudioSourcePlayingChecker : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Check;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1A5FE60", Offset = "0x1A5FE60", VA = "0x1A5FE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1A60350", Offset = "0x1A60350", VA = "0x1A60350")]
	public AudioSourcePlayingChecker()
	{
	}
}
[Token(Token = "0x20000BC")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000BD")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1A60358", Offset = "0x1A60358", VA = "0x1A60358")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1A603FC", Offset = "0x1A603FC", VA = "0x1A603FC")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1A60658", Offset = "0x1A60658", VA = "0x1A60658")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1A606D0", Offset = "0x1A606D0", VA = "0x1A606D0")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1A606F0", Offset = "0x1A606F0", VA = "0x1A606F0")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1A60710", Offset = "0x1A60710", VA = "0x1A60710")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1A60678", Offset = "0x1A60678", VA = "0x1A60678")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1A60810", Offset = "0x1A60810", VA = "0x1A60810")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x20000BE")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1A60818", Offset = "0x1A60818", VA = "0x1A60818")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1A60A04", Offset = "0x1A60A04", VA = "0x1A60A04")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1A60C50", Offset = "0x1A60C50", VA = "0x1A60C50")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1A60C68", Offset = "0x1A60C68", VA = "0x1A60C68")]
	private void Open()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1A60928", Offset = "0x1A60928", VA = "0x1A60928")]
	private void Close()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1A60D44", Offset = "0x1A60D44", VA = "0x1A60D44")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Shooting with raycasting or with Physical bullet")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Physical bullet setting")]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1A60D4C", Offset = "0x1A60D4C", VA = "0x1A60D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1A60EB4", Offset = "0x1A60EB4", VA = "0x1A60EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1A60ED4", Offset = "0x1A60ED4", VA = "0x1A60ED4")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1A61530", Offset = "0x1A61530", VA = "0x1A61530")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1A613D8", Offset = "0x1A613D8", VA = "0x1A613D8")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1A61770", Offset = "0x1A61770", VA = "0x1A61770")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x20000C0")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1A617EC", Offset = "0x1A617EC", VA = "0x1A617EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1A61A04", Offset = "0x1A61A04", VA = "0x1A61A04")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1A61BA8", Offset = "0x1A61BA8", VA = "0x1A61BA8")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1A61AC0", Offset = "0x1A61AC0", VA = "0x1A61AC0")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1A61660", Offset = "0x1A61660", VA = "0x1A61660")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1A61C80", Offset = "0x1A61C80", VA = "0x1A61C80")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x20000C1")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1A61C90", Offset = "0x1A61C90", VA = "0x1A61C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1A61D0C", Offset = "0x1A61D0C", VA = "0x1A61D0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1A620A0", Offset = "0x1A620A0", VA = "0x1A620A0")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1A621B0", Offset = "0x1A621B0", VA = "0x1A621B0")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1A6211C", Offset = "0x1A6211C", VA = "0x1A6211C")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1A62298", Offset = "0x1A62298", VA = "0x1A62298")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x20000C2")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1A622EC", Offset = "0x1A622EC", VA = "0x1A622EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1A62398", Offset = "0x1A62398", VA = "0x1A62398")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1A6241C", Offset = "0x1A6241C", VA = "0x1A6241C")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x20000C3")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x20000C4")]
	[CompilerGenerated]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x1A62DC8", Offset = "0x1A62DC8", VA = "0x1A62DC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x1A62E10", Offset = "0x1A62E10", VA = "0x1A62E10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1A62518", Offset = "0x1A62518", VA = "0x1A62518")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1A62704", Offset = "0x1A62704", VA = "0x1A62704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1A62708", Offset = "0x1A62708", VA = "0x1A62708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1A62DD0", Offset = "0x1A62DD0", VA = "0x1A62DD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1A6242C", Offset = "0x1A6242C", VA = "0x1A6242C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1A62484", Offset = "0x1A62484", VA = "0x1A62484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1A624A4", Offset = "0x1A624A4", VA = "0x1A624A4")]
	[IteratorStateMachine(typeof(<FPS>d__3))]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1A62540", Offset = "0x1A62540", VA = "0x1A62540")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1A625A8", Offset = "0x1A625A8", VA = "0x1A625A8")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1A626FC", Offset = "0x1A626FC", VA = "0x1A626FC")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x20000C5")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1A62E18", Offset = "0x1A62E18", VA = "0x1A62E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1A62E88", Offset = "0x1A62E88", VA = "0x1A62E88")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1A62EF4", Offset = "0x1A62EF4", VA = "0x1A62EF4")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x20000C6")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1A62EFC", Offset = "0x1A62EFC", VA = "0x1A62EFC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1A62F84", Offset = "0x1A62F84", VA = "0x1A62F84")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1A63010", Offset = "0x1A63010", VA = "0x1A63010")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x20000C7")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x20000C8")]
	[CompilerGenerated]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x1A634A0", Offset = "0x1A634A0", VA = "0x1A634A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0x1A634E8", Offset = "0x1A634E8", VA = "0x1A634E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1A6322C", Offset = "0x1A6322C", VA = "0x1A6322C")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1A6325C", Offset = "0x1A6325C", VA = "0x1A6325C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1A63260", Offset = "0x1A63260", VA = "0x1A63260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1A634A8", Offset = "0x1A634A8", VA = "0x1A634A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1A63018", Offset = "0x1A63018", VA = "0x1A63018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1A6308C", Offset = "0x1A6308C", VA = "0x1A6308C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1A630D0", Offset = "0x1A630D0", VA = "0x1A630D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1A6301C", Offset = "0x1A6301C", VA = "0x1A6301C")]
	private void Play()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1A631B8", Offset = "0x1A631B8", VA = "0x1A631B8")]
	[IteratorStateMachine(typeof(<PlayCor>d__8))]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1A63254", Offset = "0x1A63254", VA = "0x1A63254")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x20000C9")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1A634F0", Offset = "0x1A634F0", VA = "0x1A634F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1A636C0", Offset = "0x1A636C0", VA = "0x1A636C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1A640D0", Offset = "0x1A640D0", VA = "0x1A640D0")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1A64134", Offset = "0x1A64134", VA = "0x1A64134")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1A6413C", Offset = "0x1A6413C", VA = "0x1A6413C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1A641C0", Offset = "0x1A641C0", VA = "0x1A641C0")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1A64224", Offset = "0x1A64224", VA = "0x1A64224")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1A64348", Offset = "0x1A64348", VA = "0x1A64348")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x20000CB")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1A64350", Offset = "0x1A64350", VA = "0x1A64350")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1A643B0", Offset = "0x1A643B0", VA = "0x1A643B0")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1A6455C", Offset = "0x1A6455C", VA = "0x1A6455C")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x20000CC")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1A64574", Offset = "0x1A64574", VA = "0x1A64574")]
	public void Play()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1A645FC", Offset = "0x1A645FC", VA = "0x1A645FC")]
	public void Stop()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1A64688", Offset = "0x1A64688", VA = "0x1A64688")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1A64740", Offset = "0x1A64740", VA = "0x1A64740")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x20000CD")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1A64748", Offset = "0x1A64748", VA = "0x1A64748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1A6479C", Offset = "0x1A6479C", VA = "0x1A6479C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1A647E8", Offset = "0x1A647E8", VA = "0x1A647E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1A64814", Offset = "0x1A64814", VA = "0x1A64814")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1A64880", Offset = "0x1A64880", VA = "0x1A64880")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public Text angleXText;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1A64898", Offset = "0x1A64898", VA = "0x1A64898")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1A64940", Offset = "0x1A64940", VA = "0x1A64940")]
	public void Stop()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1A649CC", Offset = "0x1A649CC", VA = "0x1A649CC")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1A64B68", Offset = "0x1A64B68", VA = "0x1A64B68")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1A64D20", Offset = "0x1A64D20", VA = "0x1A64D20")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x20000CF")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0x1A6542C", Offset = "0x1A6542C", VA = "0x1A6542C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x1A65474", Offset = "0x1A65474", VA = "0x1A65474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x1A64FA0", Offset = "0x1A64FA0", VA = "0x1A64FA0")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1A65330", Offset = "0x1A65330", VA = "0x1A65330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1A65334", Offset = "0x1A65334", VA = "0x1A65334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x1A65434", Offset = "0x1A65434", VA = "0x1A65434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Space]
	private Transform[] lookingTransforms;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1A64D28", Offset = "0x1A64D28", VA = "0x1A64D28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1A64D80", Offset = "0x1A64D80", VA = "0x1A64D80")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1A64F04", Offset = "0x1A64F04", VA = "0x1A64F04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1A64F98", Offset = "0x1A64F98", VA = "0x1A64F98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1A64F24", Offset = "0x1A64F24", VA = "0x1A64F24")]
	[IteratorStateMachine(typeof(<RepeatShoot>d__13))]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1A64FC8", Offset = "0x1A64FC8", VA = "0x1A64FC8")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1A64D84", Offset = "0x1A64D84", VA = "0x1A64D84")]
	private void Looking()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1A65314", Offset = "0x1A65314", VA = "0x1A65314")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x20000D1")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1A6547C", Offset = "0x1A6547C", VA = "0x1A6547C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1A654D0", Offset = "0x1A654D0", VA = "0x1A654D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1A654D4", Offset = "0x1A654D4", VA = "0x1A654D4")]
	private void Check()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1A65AA4", Offset = "0x1A65AA4", VA = "0x1A65AA4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1A65AF4", Offset = "0x1A65AF4", VA = "0x1A65AF4")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x20000D2")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1A65AFC", Offset = "0x1A65AFC", VA = "0x1A65AFC")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x20000D3")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1A65B04", Offset = "0x1A65B04", VA = "0x1A65B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1A65CE4", Offset = "0x1A65CE4", VA = "0x1A65CE4")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x1A65E54", Offset = "0x1A65E54", VA = "0x1A65E54")]
	private void Open()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1A65EA4", Offset = "0x1A65EA4", VA = "0x1A65EA4")]
	private void Play()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1A66078", Offset = "0x1A66078", VA = "0x1A66078")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x20000D4")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1A66080", Offset = "0x1A66080", VA = "0x1A66080")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1A6633C", Offset = "0x1A6633C", VA = "0x1A6633C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1A66400", Offset = "0x1A66400", VA = "0x1A66400")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1A6654C", Offset = "0x1A6654C", VA = "0x1A6654C")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1A66554", Offset = "0x1A66554", VA = "0x1A66554")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1A66558", Offset = "0x1A66558", VA = "0x1A66558")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1A66644", Offset = "0x1A66644", VA = "0x1A66644")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x20000D6")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1A6664C", Offset = "0x1A6664C", VA = "0x1A6664C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1A6669C", Offset = "0x1A6669C", VA = "0x1A6669C")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1A6670C", Offset = "0x1A6670C", VA = "0x1A6670C")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x20000D7")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1A66714", Offset = "0x1A66714", VA = "0x1A66714")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x20000D8")]
public class BhapticsLogger
{
	[Token(Token = "0x20000D9")]
	public enum LogLevel
	{
		[Token(Token = "0x40005A7")]
		Debug,
		[Token(Token = "0x40005A8")]
		Info,
		[Token(Token = "0x40005A9")]
		Error
	}

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1A60B78", Offset = "0x1A60B78", VA = "0x1A60B78")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1A61928", Offset = "0x1A61928", VA = "0x1A61928")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1A662A8", Offset = "0x1A662A8", VA = "0x1A662A8")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1A66724", Offset = "0x1A66724", VA = "0x1A66724")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x20000DA")]
public class BhapticsManager
{
	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1A61DF4", Offset = "0x1A61DF4", VA = "0x1A61DF4")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1A66778", Offset = "0x1A66778", VA = "0x1A66778")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1A6677C", Offset = "0x1A6677C", VA = "0x1A6677C")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1A66978", Offset = "0x1A66978", VA = "0x1A66978")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x20000DB")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1A66980", Offset = "0x1A66980", VA = "0x1A66980")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1A669D8", Offset = "0x1A669D8", VA = "0x1A669D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1A66AF8", Offset = "0x1A66AF8", VA = "0x1A66AF8")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x20000DC")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1A66B00", Offset = "0x1A66B00", VA = "0x1A66B00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1A66ECC", Offset = "0x1A66ECC", VA = "0x1A66ECC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1A66C04", Offset = "0x1A66C04", VA = "0x1A66C04")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1A66ED0", Offset = "0x1A66ED0", VA = "0x1A66ED0")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x20000DD")]
public class copyTransform : MonoBehaviour
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform obj01;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform obj02;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] transforms01;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] transforms02;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int transLength01;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int transLength02;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TransformData transformDataOfObj01;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TransformData transformDataOfObj02;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1A66ED8", Offset = "0x1A66ED8", VA = "0x1A66ED8")]
	public void transformThis()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1A67220", Offset = "0x1A67220", VA = "0x1A67220")]
	public copyTransform()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CrosshairNew : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private new Transform transform;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1A67228", Offset = "0x1A67228", VA = "0x1A67228")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1A67308", Offset = "0x1A67308", VA = "0x1A67308")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1A673B8", Offset = "0x1A673B8", VA = "0x1A673B8")]
	private void Instance_OnGripUp(InputController.Hand obj)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1A6740C", Offset = "0x1A6740C", VA = "0x1A6740C")]
	public CrosshairNew()
	{
	}
}
[Token(Token = "0x20000DF")]
public class RobotSpinning : MonoBehaviour, IReplaceMaterials
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ObjectToSpin;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(5f)]
	[Header("Materials")]
	public Material Mobile;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private new Transform transform;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer renderer;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock materialProps;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int colorShaderID;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1A67414", Offset = "0x1A67414", VA = "0x1A67414")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1A675F0", Offset = "0x1A675F0", VA = "0x1A675F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1A675F4", Offset = "0x1A675F4", VA = "0x1A675F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1A675C0", Offset = "0x1A675C0", VA = "0x1A675C0")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1A67660", Offset = "0x1A67660", VA = "0x1A67660")]
	public void HideAnimation()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1A676B4", Offset = "0x1A676B4", VA = "0x1A676B4")]
	public void SetCubemapTexture(Texture texture)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1A676D0", Offset = "0x1A676D0", VA = "0x1A676D0")]
	public void ApplyColor(Color color)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1A677B0", Offset = "0x1A677B0", VA = "0x1A677B0")]
	public RobotSpinning()
	{
	}
}
[Token(Token = "0x20000E0")]
[ExecuteInEditMode]
public class MigrateCart : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Run;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1A67810", Offset = "0x1A67810", VA = "0x1A67810")]
	public MigrateCart()
	{
	}
}
[Token(Token = "0x20000E1")]
[SerializeField]
public class TransformData
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 LocalPosition;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 LocalEulerRotation;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 LocalScale;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1A67818", Offset = "0x1A67818", VA = "0x1A67818")]
	public TransformData()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1A670C8", Offset = "0x1A670C8", VA = "0x1A670C8")]
	public TransformData(Transform transform)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1A671C4", Offset = "0x1A671C4", VA = "0x1A671C4")]
	public void ApplyTo(Transform transform)
	{
	}
}
[Token(Token = "0x20000E2")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1A678C0", Offset = "0x1A678C0", VA = "0x1A678C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1A679C0", Offset = "0x1A679C0", VA = "0x1A679C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1A67A80", Offset = "0x1A67A80", VA = "0x1A67A80")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x20000E3")]
public class DecalDestroyer : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DecalDestroyer <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040B")]
			[Address(RVA = "0x1A67C3C", Offset = "0x1A67C3C", VA = "0x1A67C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0x1A67C84", Offset = "0x1A67C84", VA = "0x1A67C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1A67B08", Offset = "0x1A67B08", VA = "0x1A67B08")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1A67B40", Offset = "0x1A67B40", VA = "0x1A67B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1A67B44", Offset = "0x1A67B44", VA = "0x1A67B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1A67C44", Offset = "0x1A67C44", VA = "0x1A67C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1A67A94", Offset = "0x1A67A94", VA = "0x1A67A94")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1A67B30", Offset = "0x1A67B30", VA = "0x1A67B30")]
	public DecalDestroyer()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ExtinguishableFire : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	[CompilerGenerated]
	private sealed class <Extinguishing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000416")]
			[Address(RVA = "0x1A680F8", Offset = "0x1A680F8", VA = "0x1A680F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000418")]
			[Address(RVA = "0x1A68140", Offset = "0x1A68140", VA = "0x1A68140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1A67DFC", Offset = "0x1A67DFC", VA = "0x1A67DFC")]
		[DebuggerHidden]
		public <Extinguishing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1A67E54", Offset = "0x1A67E54", VA = "0x1A67E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1A67E58", Offset = "0x1A67E58", VA = "0x1A67E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1A68100", Offset = "0x1A68100", VA = "0x1A68100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private sealed class <StartingFire>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExtinguishableFire <>4__this;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0x1A68300", Offset = "0x1A68300", VA = "0x1A68300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0x1A68348", Offset = "0x1A68348", VA = "0x1A68348", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1A67E24", Offset = "0x1A67E24", VA = "0x1A67E24")]
		[DebuggerHidden]
		public <StartingFire>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1A68148", Offset = "0x1A68148", VA = "0x1A68148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x1A6814C", Offset = "0x1A6814C", VA = "0x1A6814C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1A68308", Offset = "0x1A68308", VA = "0x1A68308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fireParticleSystem;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem smokeParticleSystem;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool m_isExtinguished;

	[Token(Token = "0x40005D3")]
	private const float m_FireStartingTime = 2f;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1A67C8C", Offset = "0x1A67C8C", VA = "0x1A67C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1A67D50", Offset = "0x1A67D50", VA = "0x1A67D50")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1A67D88", Offset = "0x1A67D88", VA = "0x1A67D88")]
	[IteratorStateMachine(typeof(<Extinguishing>d__6))]
	private IEnumerator Extinguishing()
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1A67CDC", Offset = "0x1A67CDC", VA = "0x1A67CDC")]
	[IteratorStateMachine(typeof(<StartingFire>d__7))]
	private IEnumerator StartingFire()
	{
		return null;
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1A67E4C", Offset = "0x1A67E4C", VA = "0x1A67E4C")]
	public ExtinguishableFire()
	{
	}
}
[Token(Token = "0x20000E8")]
public class GunAim : MonoBehaviour
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int borderLeft;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int borderRight;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int borderTop;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int borderBottom;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera parentCamera;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isOutOfBounds;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1A68350", Offset = "0x1A68350", VA = "0x1A68350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1A683A8", Offset = "0x1A683A8", VA = "0x1A683A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1A68488", Offset = "0x1A68488", VA = "0x1A68488")]
	public bool GetIsOutOfBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1A68490", Offset = "0x1A68490", VA = "0x1A68490")]
	public GunAim()
	{
	}
}
[Token(Token = "0x20000E9")]
public class GunShoot : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fireRate;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float weaponRange;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gunEnd;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem muzzleFlash;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem cartridgeEjection;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject metalHitEffect;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sandHitEffect;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject stoneHitEffect;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waterLeakEffect;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject waterLeakExtinguishEffect;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] fleshHitEffects;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject woodHitEffect;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float nextFire;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GunAim gunAim;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1A68498", Offset = "0x1A68498", VA = "0x1A68498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1A68528", Offset = "0x1A68528", VA = "0x1A68528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1A68694", Offset = "0x1A68694", VA = "0x1A68694")]
	private void HandleHit(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1A68AD8", Offset = "0x1A68AD8", VA = "0x1A68AD8")]
	private void SpawnDecal(RaycastHit hit, GameObject prefab)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1A68C08", Offset = "0x1A68C08", VA = "0x1A68C08")]
	public GunShoot()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ParticleCollision : MonoBehaviour
{
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ParticleCollisionEvent> m_CollisionEvents;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_ParticleSystem;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1A68C1C", Offset = "0x1A68C1C", VA = "0x1A68C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1A68C74", Offset = "0x1A68C74", VA = "0x1A68C74")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1A68DB0", Offset = "0x1A68DB0", VA = "0x1A68DB0")]
	public ParticleCollision()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class ParticleExamples
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string description;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeaponEffect;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particleSystemGO;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 particlePosition;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 particleRotation;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1A68E38", Offset = "0x1A68E38", VA = "0x1A68E38")]
	public ParticleExamples()
	{
	}
}
[Token(Token = "0x20000EC")]
public class ParticleMenu : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleExamples[] particleSystems;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gunGameObject;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentGO;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnLocation;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text title;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text description;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text navigationDetails;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1A68E40", Offset = "0x1A68E40", VA = "0x1A68E40")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1A68E5C", Offset = "0x1A68E5C", VA = "0x1A68E5C")]
	public void Navigate(int i)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1A69178", Offset = "0x1A69178", VA = "0x1A69178")]
	public ParticleMenu()
	{
	}
}
[Token(Token = "0x20000ED")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class Section
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x1A69188", Offset = "0x1A69188", VA = "0x1A69188")]
		public Section()
		{
		}
	}

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1A69180", Offset = "0x1A69180", VA = "0x1A69180")]
	public Readme()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AutoDestroyPS : MonoBehaviour
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeLeft;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1A69190", Offset = "0x1A69190", VA = "0x1A69190")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1A6926C", Offset = "0x1A6926C", VA = "0x1A6926C")]
	public AutoDestroyPS()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ProjectileMover : MonoBehaviour
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hitOffset;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFirePointRotation;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hit;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flash;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Detached;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1A69274", Offset = "0x1A69274", VA = "0x1A69274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1A69524", Offset = "0x1A69524", VA = "0x1A69524")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1A6958C", Offset = "0x1A6958C", VA = "0x1A6958C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1A69AEC", Offset = "0x1A69AEC", VA = "0x1A69AEC")]
	public ProjectileMover()
	{
	}
}
[Token(Token = "0x20000F1")]
public class HerdSimController : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _roamingArea;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem _runPS;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem _deadPS;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1A69B04", Offset = "0x1A69B04", VA = "0x1A69B04")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1A69B60", Offset = "0x1A69B60", VA = "0x1A69B60")]
	public HerdSimController()
	{
	}
}
[Token(Token = "0x20000F2")]
public class HerdSimCore : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimController _controller;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _scanner;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _collider;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _model;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer _renderer;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _hitPoints;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _type;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _minSize;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _avoidAngle;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _avoidDistance;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _avoidSpeed;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _stopDistance;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _rotateCounterR;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _rotateCounterL;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool _pushHalfTheTime;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _pushToggle;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _pushDistance;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _pushForce;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _scan;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 _roamingArea;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _walkSpeed;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _runSpeed;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _damping;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int _idleProbablity;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _runChance;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 _waypoint;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _speed;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _targetSpeed;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int _mode;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 _startPosition;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _reachedWaypoint;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _lerpCounter;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool _scared;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform _scaredOf;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool _eating;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform _food;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float _groundCheckInterval;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groundTag;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 _ground;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Quaternion _groundRot;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool _grounded;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float _maxGroundAngle;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float _maxFall;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float _fakeGravity;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public HerdSimCore _leader;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector3 _leaderArea;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int _leaderSize;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float _leaderAreaMultiplier;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int _maxHerdSize;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public int _minHerdSize;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float _herdDistance;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _herdSize;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool _dead;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material _deadMaterial;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool _scaryCorpse;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string _animIdle;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float _animIdleSpeed;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string _animSleep;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float _animSleepSpeed;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string _animWalk;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float _animWalkSpeed;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string _animRun;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float _animRunSpeed;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string _animDead;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float _animDeadSpeed;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float _idleToSleepSeconds;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float _sleepCounter;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool _idle;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int _updateCounter;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public int _updateDivisor;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int _updateSeed;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _newDelta;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public bool _enabled;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public LayerMask _groundLayerMask;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public LayerMask _pushyLayerMask;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string _herdSimLayerName;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int _groundIndex;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int _herdSimIndex;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Transform _thisTR;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public bool _lean;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public AnimationClip _leanLeftAnimation;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AnimationClip _leanRightAnimation;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private AnimationState _leanLeft;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private AnimationState _leanRight;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float _leanRightTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float _leanLeftTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool _avoiding;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	private bool _avoidingLeft;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	private bool _avoidingRight;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1A69B68", Offset = "0x1A69B68", VA = "0x1A69B68")]
	public void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1A6A264", Offset = "0x1A6A264", VA = "0x1A6A264")]
	private void LeanInit()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1A6A430", Offset = "0x1A6A430", VA = "0x1A6A430")]
	private void Lean()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1A6A700", Offset = "0x1A6A700", VA = "0x1A6A700")]
	public void Disable(bool disableModel, bool disableCollider)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1A6A810", Offset = "0x1A6A810", VA = "0x1A6A810")]
	public void Enable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1A6A944", Offset = "0x1A6A944", VA = "0x1A6A944")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1A6AB94", Offset = "0x1A6AB94", VA = "0x1A6AB94")]
	public void Effects()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1A6A960", Offset = "0x1A6A960", VA = "0x1A6A960")]
	public void Death()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1A6AD78", Offset = "0x1A6AD78", VA = "0x1A6AD78")]
	public void Corpse()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1A6B190", Offset = "0x1A6B190", VA = "0x1A6B190")]
	public void FindLeader()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1A6B624", Offset = "0x1A6B624", VA = "0x1A6B624")]
	public void Wander()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1A69EB0", Offset = "0x1A69EB0", VA = "0x1A69EB0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x1A6A568", Offset = "0x1A6A568", VA = "0x1A6A568")]
	private float AngleAmount()
	{
		return default(float);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1A6BADC", Offset = "0x1A6BADC", VA = "0x1A6BADC")]
	public void AnimationHandler()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1A6AF1C", Offset = "0x1A6AF1C", VA = "0x1A6AF1C")]
	public void Scare(Transform t)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x1A6BE08", Offset = "0x1A6BE08", VA = "0x1A6BE08")]
	public void EndScare()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x1A6BE28", Offset = "0x1A6BE28", VA = "0x1A6BE28")]
	public void Food(Transform t)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1A6BEB8", Offset = "0x1A6BEB8", VA = "0x1A6BEB8")]
	public void Pushy()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1A6BD34", Offset = "0x1A6BD34", VA = "0x1A6BD34")]
	public void UnFlock()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1A6C274", Offset = "0x1A6C274", VA = "0x1A6C274")]
	public void WalkTimeOut()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1A6C294", Offset = "0x1A6C294", VA = "0x1A6C294")]
	public void Update()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1A6A004", Offset = "0x1A6A004", VA = "0x1A6A004")]
	public void GroundCheck()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1A6D880", Offset = "0x1A6D880", VA = "0x1A6D880")]
	private void NotAvoiding()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1A6CB3C", Offset = "0x1A6CB3C", VA = "0x1A6CB3C")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1A6D88C", Offset = "0x1A6D88C", VA = "0x1A6D88C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1A6DC14", Offset = "0x1A6DC14", VA = "0x1A6DC14")]
	public HerdSimCore()
	{
	}
}
[Token(Token = "0x20000F3")]
public class HerdSimDisabler : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _checkDisableEverSeconds;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _checkEnableEverSeconds;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableModel;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _disableCollider;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _disableOnStart;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1A6DE48", Offset = "0x1A6DE48", VA = "0x1A6DE48")]
	public void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1A6DF54", Offset = "0x1A6DF54", VA = "0x1A6DF54")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1A6DFD0", Offset = "0x1A6DFD0", VA = "0x1A6DFD0")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1A6E120", Offset = "0x1A6E120", VA = "0x1A6E120")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1A6E268", Offset = "0x1A6E268", VA = "0x1A6E268")]
	public HerdSimDisabler()
	{
	}
}
[Token(Token = "0x20000F4")]
public class HerdSimScary : MonoBehaviour
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimCore _chase;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] _scareType;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _canChase;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _scaryInterval;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1A6E284", Offset = "0x1A6E284", VA = "0x1A6E284")]
	public void Start()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1A6E288", Offset = "0x1A6E288", VA = "0x1A6E288")]
	public void Init()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1A6E3A4", Offset = "0x1A6E3A4", VA = "0x1A6E3A4")]
	public void CheckChase()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1A6E3C4", Offset = "0x1A6E3C4", VA = "0x1A6E3C4")]
	public void BeScary()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1A6E690", Offset = "0x1A6E690", VA = "0x1A6E690")]
	public HerdSimScary()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ExplosionDemoGUI : MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float reactivateTime;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentNomber;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentInstance;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float sunIntensity;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dpiScale;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1A6E6C0", Offset = "0x1A6E6C0", VA = "0x1A6E6C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1A6E8B4", Offset = "0x1A6E8B4", VA = "0x1A6E8B4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1A6EBAC", Offset = "0x1A6EBAC", VA = "0x1A6EBAC")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1A6ED60", Offset = "0x1A6ED60", VA = "0x1A6ED60")]
	public ExplosionDemoGUI()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ExplosionDemoReactivator : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1A6EDDC", Offset = "0x1A6EDDC", VA = "0x1A6EDDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1A6EE30", Offset = "0x1A6EE30", VA = "0x1A6EE30")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1A6EEF8", Offset = "0x1A6EEF8", VA = "0x1A6EEF8")]
	public ExplosionDemoReactivator()
	{
	}
}
[Token(Token = "0x20000F7")]
public class ExplosionPlatformActivator : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Effect;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DefaultRepeatTime;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float NearRepeatTime;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentTime;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentRepeatTime;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1A6EF08", Offset = "0x1A6EF08", VA = "0x1A6EF08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1A6EF60", Offset = "0x1A6EF60", VA = "0x1A6EF60")]
	private void Init()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1A6EF8C", Offset = "0x1A6EF8C", VA = "0x1A6EF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1A6F060", Offset = "0x1A6F060", VA = "0x1A6F060")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1A6F06C", Offset = "0x1A6F06C", VA = "0x1A6F06C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1A6F078", Offset = "0x1A6F078", VA = "0x1A6F078")]
	public ExplosionPlatformActivator()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ExplosionsFPS : MonoBehaviour
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1A6F08C", Offset = "0x1A6F08C", VA = "0x1A6F08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1A6F0DC", Offset = "0x1A6F0DC", VA = "0x1A6F0DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1A6F1D4", Offset = "0x1A6F1D4", VA = "0x1A6F1D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1A6F228", Offset = "0x1A6F228", VA = "0x1A6F228")]
	public ExplosionsFPS()
	{
	}
}
[Token(Token = "0x20000F9")]
public class FPSDemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform muzzleFlashPoint;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Gun;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reactivateTime;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMobile;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentNomber;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentInstance;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sunIntensity;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float dpiScale;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1A6F29C", Offset = "0x1A6F29C", VA = "0x1A6F29C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1A6F4C8", Offset = "0x1A6F4C8", VA = "0x1A6F4C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1A6F71C", Offset = "0x1A6F71C", VA = "0x1A6F71C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1A6FA18", Offset = "0x1A6FA18", VA = "0x1A6FA18")]
	private void Reactivator()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1A6FA50", Offset = "0x1A6FA50", VA = "0x1A6FA50")]
	public FPSDemoGUI()
	{
	}
}
[Token(Token = "0x20000FA")]
public class FPSDemoReactivator : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1A6FACC", Offset = "0x1A6FACC", VA = "0x1A6FACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1A6FB1C", Offset = "0x1A6FB1C", VA = "0x1A6FB1C")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1A6FB60", Offset = "0x1A6FB60", VA = "0x1A6FB60")]
	public FPSDemoReactivator()
	{
	}
}
[Token(Token = "0x20000FB")]
public class FPSFireManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class ImpactInfo
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialType.MaterialTypeEnum MaterialType;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ImpactEffect;

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1A6FF78", Offset = "0x1A6FF78", VA = "0x1A6FF78")]
		public ImpactInfo()
		{
		}
	}

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImpactInfo[] ImpactElemets;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public float BulletDistance;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ImpactEffect;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1A6FB70", Offset = "0x1A6FB70", VA = "0x1A6FB70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1A6FE1C", Offset = "0x1A6FE1C", VA = "0x1A6FE1C")]
	private GameObject GetImpactEffect(GameObject impactedGameObject)
	{
		return null;
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1A6FF0C", Offset = "0x1A6FF0C", VA = "0x1A6FF0C")]
	public FPSFireManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FD")]
public class FPS_MouseLook
{
	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1A6FF80", Offset = "0x1A6FF80", VA = "0x1A6FF80")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1A6FFD0", Offset = "0x1A6FFD0", VA = "0x1A6FFD0")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1A703A0", Offset = "0x1A703A0", VA = "0x1A703A0")]
	public void SetCursorLock(bool value)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1A70390", Offset = "0x1A70390", VA = "0x1A70390")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1A703D4", Offset = "0x1A703D4", VA = "0x1A703D4")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1A7032C", Offset = "0x1A7032C", VA = "0x1A7032C")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1A7044C", Offset = "0x1A7044C", VA = "0x1A7044C")]
	public FPS_MouseLook()
	{
	}
}
[Token(Token = "0x20000FE")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(CapsuleCollider))]
public class FPS_RigidbodyFirstPersonController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class MovementSettings
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ForwardSpeed;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BackwardSpeed;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StrafeSpeed;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RunMultiplier;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode RunKey;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve SlopeCurveModifier;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float CurrentTargetSpeed;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_Running;

		[Token(Token = "0x1700004C")]
		public bool Running
		{
			[Token(Token = "0x600048F")]
			[Address(RVA = "0x1A716D0", Offset = "0x1A716D0", VA = "0x1A716D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x1A712E8", Offset = "0x1A712E8", VA = "0x1A712E8")]
		public void UpdateDesiredTargetSpeed(Vector2 input)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x1A714F8", Offset = "0x1A714F8", VA = "0x1A714F8")]
		public MovementSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000100")]
	public class AdvancedSettings
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float groundCheckDistance;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float stickToGroundHelperDistance;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowDownRate;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool airControl;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("set it to 0.1 or more if you get stuck in wall")]
		public float shellOffset;

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x1A716B4", Offset = "0x1A716B4", VA = "0x1A716B4")]
		public AdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementSettings movementSettings;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody m_RigidBody;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider m_Capsule;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_YRotation;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_GroundContactNormal;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_Jump;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_PreviouslyGrounded;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool m_Jumping;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool m_IsGrounded;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FPS_MouseLook mouseLook;

	[Token(Token = "0x17000048")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1A70480", Offset = "0x1A70480", VA = "0x1A70480")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000049")]
	public bool Grounded
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x1A7049C", Offset = "0x1A7049C", VA = "0x1A7049C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public bool Jumping
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0x1A704A4", Offset = "0x1A704A4", VA = "0x1A704A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public bool Running
	{
		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1A704AC", Offset = "0x1A704AC", VA = "0x1A704AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1A704C8", Offset = "0x1A704C8", VA = "0x1A704C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1A70598", Offset = "0x1A70598", VA = "0x1A70598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1A7077C", Offset = "0x1A7077C", VA = "0x1A7077C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1A70E3C", Offset = "0x1A70E3C", VA = "0x1A70E3C")]
	private float SlopeMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1A70F9C", Offset = "0x1A70F9C", VA = "0x1A70F9C")]
	private void StickToGroundHelper()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1A70D98", Offset = "0x1A70D98", VA = "0x1A70D98")]
	private Vector2 GetInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1A70600", Offset = "0x1A70600", VA = "0x1A70600")]
	private void RotateView()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1A70BCC", Offset = "0x1A70BCC", VA = "0x1A70BCC")]
	private void GroundCheck()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1A713D0", Offset = "0x1A713D0", VA = "0x1A713D0")]
	public FPS_RigidbodyFirstPersonController()
	{
	}
}
[Token(Token = "0x2000101")]
public class FPSLightCurves : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1A716D8", Offset = "0x1A716D8", VA = "0x1A716D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1A7175C", Offset = "0x1A7175C", VA = "0x1A7175C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1A71794", Offset = "0x1A71794", VA = "0x1A71794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1A71824", Offset = "0x1A71824", VA = "0x1A71824")]
	public FPSLightCurves()
	{
	}
}
[Token(Token = "0x2000102")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1A7186C", Offset = "0x1A7186C", VA = "0x1A7186C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1A71890", Offset = "0x1A71890", VA = "0x1A71890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1A71964", Offset = "0x1A71964", VA = "0x1A71964")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x2000103")]
public class FPSShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	public enum RFX4_ShaderProperties
	{
		[Token(Token = "0x40006DF")]
		_TintColor,
		[Token(Token = "0x40006E0")]
		_Cutoff,
		[Token(Token = "0x40006E1")]
		_Color,
		[Token(Token = "0x40006E2")]
		_EmissionColor,
		[Token(Token = "0x40006E3")]
		_MaskPow,
		[Token(Token = "0x40006E4")]
		_Cutout,
		[Token(Token = "0x40006E5")]
		_Speed,
		[Token(Token = "0x40006E6")]
		_BumpAmt,
		[Token(Token = "0x40006E7")]
		_MainColor,
		[Token(Token = "0x40006E8")]
		_Distortion,
		[Token(Token = "0x40006E9")]
		_FresnelColor
	}

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int propertyID;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderProperty;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer rend;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1A71974", Offset = "0x1A71974", VA = "0x1A71974")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1A71AF0", Offset = "0x1A71AF0", VA = "0x1A71AF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1A71BCC", Offset = "0x1A71BCC", VA = "0x1A71BCC")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1A71CAC", Offset = "0x1A71CAC", VA = "0x1A71CAC")]
	public FPSShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000105")]
public class FPSShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x1A71D28", Offset = "0x1A71D28", VA = "0x1A71D28")]
	private void Start()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1A71FEC", Offset = "0x1A71FEC", VA = "0x1A71FEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1A72010", Offset = "0x1A72010", VA = "0x1A72010")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1A72088", Offset = "0x1A72088", VA = "0x1A72088")]
	public FPSShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000106")]
[ExecuteInEditMode]
public class FPS_Decal : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ScreenSpaceDecals;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float randomScalePercent;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer rend;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startScale;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1A72110", Offset = "0x1A72110", VA = "0x1A72110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1A72140", Offset = "0x1A72140", VA = "0x1A72140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1A7239C", Offset = "0x1A7239C", VA = "0x1A7239C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1A72560", Offset = "0x1A72560", VA = "0x1A72560")]
	public FPS_Decal()
	{
	}
}
[Token(Token = "0x2000107")]
public class MaterialType : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000108")]
	public enum MaterialTypeEnum
	{
		[Token(Token = "0x40006FA")]
		Plaster,
		[Token(Token = "0x40006FB")]
		Metall,
		[Token(Token = "0x40006FC")]
		Folliage,
		[Token(Token = "0x40006FD")]
		Rock,
		[Token(Token = "0x40006FE")]
		Wood,
		[Token(Token = "0x40006FF")]
		Brick,
		[Token(Token = "0x4000700")]
		Concrete,
		[Token(Token = "0x4000701")]
		Dirt,
		[Token(Token = "0x4000702")]
		Glass,
		[Token(Token = "0x4000703")]
		Water
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialTypeEnum TypeOfMaterial;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1A9B480", Offset = "0x1A9B480", VA = "0x1A9B480")]
	public MaterialType()
	{
	}
}
[Token(Token = "0x2000109")]
[ExecuteInEditMode]
public class FPS_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1A9B488", Offset = "0x1A9B488", VA = "0x1A9B488")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1A9B81C", Offset = "0x1A9B81C", VA = "0x1A9B81C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1A9C404", Offset = "0x1A9C404", VA = "0x1A9C404")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1A9C584", Offset = "0x1A9C584", VA = "0x1A9C584")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1A9BA44", Offset = "0x1A9BA44", VA = "0x1A9BA44")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1A9BC9C", Offset = "0x1A9BC9C", VA = "0x1A9BC9C")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1A9B6E0", Offset = "0x1A9B6E0", VA = "0x1A9B6E0")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1A9C7FC", Offset = "0x1A9C7FC", VA = "0x1A9C7FC")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1A9BF28", Offset = "0x1A9BF28", VA = "0x1A9BF28")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1A9B5CC", Offset = "0x1A9B5CC", VA = "0x1A9B5CC")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1A9CB40", Offset = "0x1A9CB40", VA = "0x1A9CB40")]
	public FPS_CustomLight()
	{
	}
}
[Token(Token = "0x200010A")]
public class FPS_UseLight : MonoBehaviour
{
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1A9CB94", Offset = "0x1A9CB94", VA = "0x1A9CB94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1A9CC8C", Offset = "0x1A9CC8C", VA = "0x1A9CC8C")]
	public FPS_UseLight()
	{
	}
}
[Token(Token = "0x200010B")]
public class ExplosionsBillboard : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Camera;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Active;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoInitCamera;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myContainer;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camT;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform contT;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1A9CC94", Offset = "0x1A9CC94", VA = "0x1A9CC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1A9CED0", Offset = "0x1A9CED0", VA = "0x1A9CED0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1A9D054", Offset = "0x1A9D054", VA = "0x1A9D054")]
	public ExplosionsBillboard()
	{
	}
}
[Token(Token = "0x200010C")]
public class ExplosionsDeactivateRendererByTime : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelay;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1A9D064", Offset = "0x1A9D064", VA = "0x1A9D064")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1A9D0BC", Offset = "0x1A9D0BC", VA = "0x1A9D0BC")]
	private void DeactivateRenderer()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1A9D0DC", Offset = "0x1A9D0DC", VA = "0x1A9D0DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1A9D144", Offset = "0x1A9D144", VA = "0x1A9D144")]
	public ExplosionsDeactivateRendererByTime()
	{
	}
}
[Token(Token = "0x200010D")]
public class ExplosionsLightCurves : MonoBehaviour
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1A9D154", Offset = "0x1A9D154", VA = "0x1A9D154")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1A9D1D8", Offset = "0x1A9D1D8", VA = "0x1A9D1D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1A9D1FC", Offset = "0x1A9D1FC", VA = "0x1A9D1FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1A9D270", Offset = "0x1A9D270", VA = "0x1A9D270")]
	public ExplosionsLightCurves()
	{
	}
}
[Token(Token = "0x200010E")]
[ExecuteInEditMode]
public class ExplosionsParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1A9D2B8", Offset = "0x1A9D2B8", VA = "0x1A9D2B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1A9D2C4", Offset = "0x1A9D2C4", VA = "0x1A9D2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1A9D2C8", Offset = "0x1A9D2C8", VA = "0x1A9D2C8")]
	public ExplosionsParticleSystemScaler()
	{
	}
}
[Token(Token = "0x200010F")]
public class ExplosionsScaleCurves : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ScaleCurveX;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ScaleCurveY;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ScaleCurveZ;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 GraphTimeMultiplier;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 GraphScaleMultiplier;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startTime;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform t;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float evalX;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float evalY;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float evalZ;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1A9D2D8", Offset = "0x1A9D2D8", VA = "0x1A9D2D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1A9D2FC", Offset = "0x1A9D2FC", VA = "0x1A9D2FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1A9D320", Offset = "0x1A9D320", VA = "0x1A9D320")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1A9D3E4", Offset = "0x1A9D3E4", VA = "0x1A9D3E4")]
	public ExplosionsScaleCurves()
	{
	}
}
[Token(Token = "0x2000110")]
public class ExplosionsShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient Color;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeMultiplier;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material matInstance;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int propertyID;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color oldColor;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1A9D4DC", Offset = "0x1A9D4DC", VA = "0x1A9D4DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1A9D670", Offset = "0x1A9D670", VA = "0x1A9D670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1A9D694", Offset = "0x1A9D694", VA = "0x1A9D694")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1A9D71C", Offset = "0x1A9D71C", VA = "0x1A9D71C")]
	public ExplosionsShaderColorGradient()
	{
	}
}
[Token(Token = "0x2000111")]
public class ExplosionsShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1A9D7C4", Offset = "0x1A9D7C4", VA = "0x1A9D7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1A9D938", Offset = "0x1A9D938", VA = "0x1A9D938")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1A9D95C", Offset = "0x1A9D95C", VA = "0x1A9D95C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1A9D9D4", Offset = "0x1A9D9D4", VA = "0x1A9D9D4")]
	public ExplosionsShaderFloatCurves()
	{
	}
}
[Token(Token = "0x2000112")]
public class ExplosionsShaderQueue : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int AddQueue;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1A9DA5C", Offset = "0x1A9DA5C", VA = "0x1A9DA5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1A9DB6C", Offset = "0x1A9DB6C", VA = "0x1A9DB6C")]
	private void SetProjectorQueue()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1A9DBE8", Offset = "0x1A9DBE8", VA = "0x1A9DBE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1A9DC7C", Offset = "0x1A9DC7C", VA = "0x1A9DC7C")]
	public ExplosionsShaderQueue()
	{
	}
}
[Token(Token = "0x2000113")]
internal class ExplosionsSpriteSheetAnimation : MonoBehaviour
{
	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <UpdateCorutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosionsSpriteSheetAnimation <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0x1A9E640", Offset = "0x1A9E640", VA = "0x1A9E640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E2")]
			[Address(RVA = "0x1A9E688", Offset = "0x1A9E688", VA = "0x1A9E688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x1A9E104", Offset = "0x1A9E104", VA = "0x1A9E104")]
		[DebuggerHidden]
		public <UpdateCorutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1A9E4DC", Offset = "0x1A9E4DC", VA = "0x1A9E4DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1A9E4E0", Offset = "0x1A9E4E0", VA = "0x1A9E4E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x1A9E648", Offset = "0x1A9E648", VA = "0x1A9E648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AnimationFPS;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartFrameOffset;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float StartDelay;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isInizialised;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int index;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int count;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int allCount;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float animationLifeTime;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isVisible;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float animationStartTime;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool animationStoped;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1A9DC8C", Offset = "0x1A9DC8C", VA = "0x1A9DC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1A9DD00", Offset = "0x1A9DD00", VA = "0x1A9DD00")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1A9DF54", Offset = "0x1A9DF54", VA = "0x1A9DF54")]
	private void Play()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1A9E058", Offset = "0x1A9E058", VA = "0x1A9E058")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1A9E078", Offset = "0x1A9E078", VA = "0x1A9E078")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1A9E0A8", Offset = "0x1A9E0A8", VA = "0x1A9E0A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1A9DFE4", Offset = "0x1A9DFE4", VA = "0x1A9DFE4")]
	[IteratorStateMachine(typeof(<UpdateCorutine>d__26))]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1A9E12C", Offset = "0x1A9E12C", VA = "0x1A9E12C")]
	private void UpdateFrame()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1A9E250", Offset = "0x1A9E250", VA = "0x1A9E250")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1A9E3E4", Offset = "0x1A9E3E4", VA = "0x1A9E3E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1A9E484", Offset = "0x1A9E484", VA = "0x1A9E484")]
	public ExplosionsSpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x2000115")]
public class LeanAudioStream
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1A9E690", Offset = "0x1A9E690", VA = "0x1A9E690")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1A9E6C0", Offset = "0x1A9E6C0", VA = "0x1A9E6C0")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1A9E734", Offset = "0x1A9E734", VA = "0x1A9E734")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000116")]
public class LeanAudio
{
	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1A9E73C", Offset = "0x1A9E73C", VA = "0x1A9E73C")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1A9E884", Offset = "0x1A9E884", VA = "0x1A9E884")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1A9F1F0", Offset = "0x1A9F1F0", VA = "0x1A9F1F0")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1A9E954", Offset = "0x1A9E954", VA = "0x1A9E954")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1A9ECE0", Offset = "0x1A9ECE0", VA = "0x1A9ECE0")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1A9F2B4", Offset = "0x1A9F2B4", VA = "0x1A9F2B4")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1A9F2B8", Offset = "0x1A9F2B8", VA = "0x1A9F2B8")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1A9F424", Offset = "0x1A9F424", VA = "0x1A9F424")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1A9F620", Offset = "0x1A9F620", VA = "0x1A9F620")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1A9F6C8", Offset = "0x1A9F6C8", VA = "0x1A9F6C8")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1A9F744", Offset = "0x1A9F744", VA = "0x1A9F744")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1A9F4F0", Offset = "0x1A9F4F0", VA = "0x1A9F4F0")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1A9F7F4", Offset = "0x1A9F7F4", VA = "0x1A9F7F4")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1A9F99C", Offset = "0x1A9F99C", VA = "0x1A9F99C")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x2000117")]
public class LeanAudioOptions
{
	[Token(Token = "0x2000118")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x400075E")]
		Sine,
		[Token(Token = "0x400075F")]
		Square,
		[Token(Token = "0x4000760")]
		Sawtooth,
		[Token(Token = "0x4000761")]
		Noise
	}

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1A9E860", Offset = "0x1A9E860", VA = "0x1A9E860")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1A9F9FC", Offset = "0x1A9F9FC", VA = "0x1A9F9FC")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1A9FA04", Offset = "0x1A9FA04", VA = "0x1A9FA04")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1A9FA20", Offset = "0x1A9FA20", VA = "0x1A9FA20")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1A9FA28", Offset = "0x1A9FA28", VA = "0x1A9FA28")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x1A9FA34", Offset = "0x1A9FA34", VA = "0x1A9FA34")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1A9FA40", Offset = "0x1A9FA40", VA = "0x1A9FA40")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1A9FA4C", Offset = "0x1A9FA4C", VA = "0x1A9FA4C")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1A9FA54", Offset = "0x1A9FA54", VA = "0x1A9FA54")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1A9FA5C", Offset = "0x1A9FA5C", VA = "0x1A9FA5C")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x2000119")]
public class LeanSmooth
{
	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1A9FA64", Offset = "0x1A9FA64", VA = "0x1A9FA64")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1A9FB80", Offset = "0x1A9FB80", VA = "0x1A9FB80")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1A9FC2C", Offset = "0x1A9FC2C", VA = "0x1A9FC2C")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1A9FD04", Offset = "0x1A9FD04", VA = "0x1A9FD04")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1A9FDAC", Offset = "0x1A9FDAC", VA = "0x1A9FDAC")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1A9FE78", Offset = "0x1A9FE78", VA = "0x1A9FE78")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1A9FF78", Offset = "0x1A9FF78", VA = "0x1A9FF78")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1A9FFEC", Offset = "0x1A9FFEC", VA = "0x1A9FFEC")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1AA011C", Offset = "0x1AA011C", VA = "0x1AA011C")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1AA0270", Offset = "0x1AA0270", VA = "0x1AA0270")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1AA0358", Offset = "0x1AA0358", VA = "0x1AA0358")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1AA0434", Offset = "0x1AA0434", VA = "0x1AA0434")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1AA0548", Offset = "0x1AA0548", VA = "0x1AA0548")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x200011A")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x200011B")]
	[CompilerGenerated]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x1AA0B8C", Offset = "0x1AA0B8C", VA = "0x1AA0B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x1AA0BD4", Offset = "0x1AA0BD4", VA = "0x1AA0BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1AA05E4", Offset = "0x1AA05E4", VA = "0x1AA05E4")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1AA061C", Offset = "0x1AA061C", VA = "0x1AA061C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1AA0620", Offset = "0x1AA0620", VA = "0x1AA0620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1AA0B94", Offset = "0x1AA0B94", VA = "0x1AA0B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1AA0550", Offset = "0x1AA0550", VA = "0x1AA0550")]
	public void Start()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1AA0570", Offset = "0x1AA0570", VA = "0x1AA0570")]
	[IteratorStateMachine(typeof(<timeoutCheck>d__2))]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1AA060C", Offset = "0x1AA060C", VA = "0x1AA060C")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x200011C")]
public class LeanTest
{
	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1AA0BDC", Offset = "0x1AA0BDC", VA = "0x1AA0BDC")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1AA0C48", Offset = "0x1AA0C48", VA = "0x1AA0C48")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1AA15DC", Offset = "0x1AA15DC", VA = "0x1AA15DC")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1AA12BC", Offset = "0x1AA12BC", VA = "0x1AA12BC")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1AA1650", Offset = "0x1AA1650", VA = "0x1AA1650")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1AA0780", Offset = "0x1AA0780", VA = "0x1AA0780")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1AA13E8", Offset = "0x1AA13E8", VA = "0x1AA13E8")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1AA07EC", Offset = "0x1AA07EC", VA = "0x1AA07EC")]
	public static void overview()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1AA16B8", Offset = "0x1AA16B8", VA = "0x1AA16B8")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x200011D")]
public enum TweenAction
{
	[Token(Token = "0x400076E")]
	MOVE_X,
	[Token(Token = "0x400076F")]
	MOVE_Y,
	[Token(Token = "0x4000770")]
	MOVE_Z,
	[Token(Token = "0x4000771")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4000772")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x4000773")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x4000774")]
	MOVE_CURVED,
	[Token(Token = "0x4000775")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x4000776")]
	MOVE_SPLINE,
	[Token(Token = "0x4000777")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x4000778")]
	SCALE_X,
	[Token(Token = "0x4000779")]
	SCALE_Y,
	[Token(Token = "0x400077A")]
	SCALE_Z,
	[Token(Token = "0x400077B")]
	ROTATE_X,
	[Token(Token = "0x400077C")]
	ROTATE_Y,
	[Token(Token = "0x400077D")]
	ROTATE_Z,
	[Token(Token = "0x400077E")]
	ROTATE_AROUND,
	[Token(Token = "0x400077F")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x4000780")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x4000781")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4000782")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x4000783")]
	ALPHA,
	[Token(Token = "0x4000784")]
	TEXT_ALPHA,
	[Token(Token = "0x4000785")]
	CANVAS_ALPHA,
	[Token(Token = "0x4000786")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x4000787")]
	ALPHA_VERTEX,
	[Token(Token = "0x4000788")]
	COLOR,
	[Token(Token = "0x4000789")]
	CALLBACK_COLOR,
	[Token(Token = "0x400078A")]
	TEXT_COLOR,
	[Token(Token = "0x400078B")]
	CANVAS_COLOR,
	[Token(Token = "0x400078C")]
	CANVAS_MOVE_X,
	[Token(Token = "0x400078D")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x400078E")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x400078F")]
	CALLBACK,
	[Token(Token = "0x4000790")]
	MOVE,
	[Token(Token = "0x4000791")]
	MOVE_LOCAL,
	[Token(Token = "0x4000792")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x4000793")]
	ROTATE,
	[Token(Token = "0x4000794")]
	ROTATE_LOCAL,
	[Token(Token = "0x4000795")]
	SCALE,
	[Token(Token = "0x4000796")]
	VALUE3,
	[Token(Token = "0x4000797")]
	GUI_MOVE,
	[Token(Token = "0x4000798")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x4000799")]
	GUI_SCALE,
	[Token(Token = "0x400079A")]
	GUI_ALPHA,
	[Token(Token = "0x400079B")]
	GUI_ROTATE,
	[Token(Token = "0x400079C")]
	DELAYED_SOUND,
	[Token(Token = "0x400079D")]
	CANVAS_MOVE,
	[Token(Token = "0x400079E")]
	CANVAS_SCALE,
	[Token(Token = "0x400079F")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x40007A0")]
	FOLLOW
}
[Token(Token = "0x200011E")]
public enum LeanTweenType
{
	[Token(Token = "0x40007A2")]
	notUsed,
	[Token(Token = "0x40007A3")]
	linear,
	[Token(Token = "0x40007A4")]
	easeOutQuad,
	[Token(Token = "0x40007A5")]
	easeInQuad,
	[Token(Token = "0x40007A6")]
	easeInOutQuad,
	[Token(Token = "0x40007A7")]
	easeInCubic,
	[Token(Token = "0x40007A8")]
	easeOutCubic,
	[Token(Token = "0x40007A9")]
	easeInOutCubic,
	[Token(Token = "0x40007AA")]
	easeInQuart,
	[Token(Token = "0x40007AB")]
	easeOutQuart,
	[Token(Token = "0x40007AC")]
	easeInOutQuart,
	[Token(Token = "0x40007AD")]
	easeInQuint,
	[Token(Token = "0x40007AE")]
	easeOutQuint,
	[Token(Token = "0x40007AF")]
	easeInOutQuint,
	[Token(Token = "0x40007B0")]
	easeInSine,
	[Token(Token = "0x40007B1")]
	easeOutSine,
	[Token(Token = "0x40007B2")]
	easeInOutSine,
	[Token(Token = "0x40007B3")]
	easeInExpo,
	[Token(Token = "0x40007B4")]
	easeOutExpo,
	[Token(Token = "0x40007B5")]
	easeInOutExpo,
	[Token(Token = "0x40007B6")]
	easeInCirc,
	[Token(Token = "0x40007B7")]
	easeOutCirc,
	[Token(Token = "0x40007B8")]
	easeInOutCirc,
	[Token(Token = "0x40007B9")]
	easeInBounce,
	[Token(Token = "0x40007BA")]
	easeOutBounce,
	[Token(Token = "0x40007BB")]
	easeInOutBounce,
	[Token(Token = "0x40007BC")]
	easeInBack,
	[Token(Token = "0x40007BD")]
	easeOutBack,
	[Token(Token = "0x40007BE")]
	easeInOutBack,
	[Token(Token = "0x40007BF")]
	easeInElastic,
	[Token(Token = "0x40007C0")]
	easeOutElastic,
	[Token(Token = "0x40007C1")]
	easeInOutElastic,
	[Token(Token = "0x40007C2")]
	easeSpring,
	[Token(Token = "0x40007C3")]
	easeShake,
	[Token(Token = "0x40007C4")]
	punch,
	[Token(Token = "0x40007C5")]
	once,
	[Token(Token = "0x40007C6")]
	clamp,
	[Token(Token = "0x40007C7")]
	pingPong,
	[Token(Token = "0x40007C8")]
	animationCurve
}
[Token(Token = "0x200011F")]
public enum LeanProp
{
	[Token(Token = "0x40007CA")]
	position,
	[Token(Token = "0x40007CB")]
	localPosition,
	[Token(Token = "0x40007CC")]
	x,
	[Token(Token = "0x40007CD")]
	y,
	[Token(Token = "0x40007CE")]
	z,
	[Token(Token = "0x40007CF")]
	localX,
	[Token(Token = "0x40007D0")]
	localY,
	[Token(Token = "0x40007D1")]
	localZ,
	[Token(Token = "0x40007D2")]
	scale,
	[Token(Token = "0x40007D3")]
	color
}
[Token(Token = "0x2000120")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000051")]
	public static int maxSearch
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x1AA17C8", Offset = "0x1AA17C8", VA = "0x1AA17C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000052")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1AA1820", Offset = "0x1AA1820", VA = "0x1AA1820")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000053")]
	public static int tweensRunning
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1AA1878", Offset = "0x1AA1878", VA = "0x1AA1878")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000054")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1AA5358", Offset = "0x1AA5358", VA = "0x1AA5358")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1AA1710", Offset = "0x1AA1710", VA = "0x1AA1710")]
	public static void init()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1AA1768", Offset = "0x1AA1768", VA = "0x1AA1768")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1AA1930", Offset = "0x1AA1930", VA = "0x1AA1930")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1AA1DE8", Offset = "0x1AA1DE8", VA = "0x1AA1DE8")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1AA1F40", Offset = "0x1AA1F40", VA = "0x1AA1F40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1AA23D4", Offset = "0x1AA23D4", VA = "0x1AA23D4")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1AA2434", Offset = "0x1AA2434", VA = "0x1AA2434")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1AA1F8C", Offset = "0x1AA1F8C", VA = "0x1AA1F8C")]
	public static void update()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1AA27A0", Offset = "0x1AA27A0", VA = "0x1AA27A0")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1AA2484", Offset = "0x1AA2484", VA = "0x1AA2484")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1AA2860", Offset = "0x1AA2860", VA = "0x1AA2860")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1AA29CC", Offset = "0x1AA29CC", VA = "0x1AA29CC")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1AA2A1C", Offset = "0x1AA2A1C", VA = "0x1AA2A1C")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1AA2A6C", Offset = "0x1AA2A6C", VA = "0x1AA2A6C")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1AA2C34", Offset = "0x1AA2C34", VA = "0x1AA2C34")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1AA2C8C", Offset = "0x1AA2C8C", VA = "0x1AA2C8C")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1AA2DF4", Offset = "0x1AA2DF4", VA = "0x1AA2DF4")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1AA2E68", Offset = "0x1AA2E68", VA = "0x1AA2E68")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1AA30CC", Offset = "0x1AA30CC", VA = "0x1AA30CC")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1AA31DC", Offset = "0x1AA31DC", VA = "0x1AA31DC")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1AA3234", Offset = "0x1AA3234", VA = "0x1AA3234")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1AA3478", Offset = "0x1AA3478", VA = "0x1AA3478")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1AA36BC", Offset = "0x1AA36BC", VA = "0x1AA36BC")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1AA3710", Offset = "0x1AA3710", VA = "0x1AA3710")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1AA39A0", Offset = "0x1AA39A0", VA = "0x1AA39A0")]
	[Obsolete("Use 'pause( id )' instead")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1AA39F4", Offset = "0x1AA39F4", VA = "0x1AA39F4")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1AA3ACC", Offset = "0x1AA3ACC", VA = "0x1AA3ACC")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1AA3C1C", Offset = "0x1AA3C1C", VA = "0x1AA3C1C")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1AA3CE0", Offset = "0x1AA3CE0", VA = "0x1AA3CE0")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1AA3DA4", Offset = "0x1AA3DA4", VA = "0x1AA3DA4")]
	[Obsolete("Use 'resume( id )' instead")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1AA3DF8", Offset = "0x1AA3DF8", VA = "0x1AA3DF8")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1AA3ED0", Offset = "0x1AA3ED0", VA = "0x1AA3ED0")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1AA4020", Offset = "0x1AA4020", VA = "0x1AA4020")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x1AA4290", Offset = "0x1AA4290", VA = "0x1AA4290")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1AA44E0", Offset = "0x1AA44E0", VA = "0x1AA44E0")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1AA4300", Offset = "0x1AA4300", VA = "0x1AA4300")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1AA4630", Offset = "0x1AA4630", VA = "0x1AA4630")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1AA46A0", Offset = "0x1AA46A0", VA = "0x1AA46A0")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1AA479C", Offset = "0x1AA479C", VA = "0x1AA479C")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1AA48B0", Offset = "0x1AA48B0", VA = "0x1AA48B0")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1AA4EE0", Offset = "0x1AA4EE0", VA = "0x1AA4EE0")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1AA4F80", Offset = "0x1AA4F80", VA = "0x1AA4F80")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1AA4FF0", Offset = "0x1AA4FF0", VA = "0x1AA4FF0")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1AA53C0", Offset = "0x1AA53C0", VA = "0x1AA53C0")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1AA54DC", Offset = "0x1AA54DC", VA = "0x1AA54DC")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1AA55C0", Offset = "0x1AA55C0", VA = "0x1AA55C0")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1AA57E8", Offset = "0x1AA57E8", VA = "0x1AA57E8")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1AA58B8", Offset = "0x1AA58B8", VA = "0x1AA58B8")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1AA5968", Offset = "0x1AA5968", VA = "0x1AA5968")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1AA5A0C", Offset = "0x1AA5A0C", VA = "0x1AA5A0C")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1AA5AB0", Offset = "0x1AA5AB0", VA = "0x1AA5AB0")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1AA5B54", Offset = "0x1AA5B54", VA = "0x1AA5B54")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1AA5BE0", Offset = "0x1AA5BE0", VA = "0x1AA5BE0")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1AA5CE4", Offset = "0x1AA5CE4", VA = "0x1AA5CE4")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1AA5DBC", Offset = "0x1AA5DBC", VA = "0x1AA5DBC")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1AA5E94", Offset = "0x1AA5E94", VA = "0x1AA5E94")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1AA5F74", Offset = "0x1AA5F74", VA = "0x1AA5F74")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1AA6054", Offset = "0x1AA6054", VA = "0x1AA6054")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1AA6138", Offset = "0x1AA6138", VA = "0x1AA6138")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1AA621C", Offset = "0x1AA621C", VA = "0x1AA621C")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1AA630C", Offset = "0x1AA630C", VA = "0x1AA630C")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x1AA63A8", Offset = "0x1AA63A8", VA = "0x1AA63A8")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1AA6460", Offset = "0x1AA6460", VA = "0x1AA6460")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x1AA65C4", Offset = "0x1AA65C4", VA = "0x1AA65C4")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1AA669C", Offset = "0x1AA669C", VA = "0x1AA669C")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x1AA6774", Offset = "0x1AA6774", VA = "0x1AA6774")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1AA6880", Offset = "0x1AA6880", VA = "0x1AA6880")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1AA6958", Offset = "0x1AA6958", VA = "0x1AA6958")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1AA6A64", Offset = "0x1AA6A64", VA = "0x1AA6A64")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1AA6B14", Offset = "0x1AA6B14", VA = "0x1AA6B14")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1AA6BC4", Offset = "0x1AA6BC4", VA = "0x1AA6BC4")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1AA6C50", Offset = "0x1AA6C50", VA = "0x1AA6C50")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1AA6CDC", Offset = "0x1AA6CDC", VA = "0x1AA6CDC")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1AA6D68", Offset = "0x1AA6D68", VA = "0x1AA6D68")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1AA6E04", Offset = "0x1AA6E04", VA = "0x1AA6E04")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1AA6F68", Offset = "0x1AA6F68", VA = "0x1AA6F68")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1AA6FF4", Offset = "0x1AA6FF4", VA = "0x1AA6FF4")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1AA7080", Offset = "0x1AA7080", VA = "0x1AA7080")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1AA710C", Offset = "0x1AA710C", VA = "0x1AA710C")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1AA71E4", Offset = "0x1AA71E4", VA = "0x1AA71E4")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1AA72BC", Offset = "0x1AA72BC", VA = "0x1AA72BC")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1AA73A0", Offset = "0x1AA73A0", VA = "0x1AA73A0")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1AA743C", Offset = "0x1AA743C", VA = "0x1AA743C")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1AA74E0", Offset = "0x1AA74E0", VA = "0x1AA74E0")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1AA757C", Offset = "0x1AA757C", VA = "0x1AA757C")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1AA7608", Offset = "0x1AA7608", VA = "0x1AA7608")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1AA7694", Offset = "0x1AA7694", VA = "0x1AA7694")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1AA7720", Offset = "0x1AA7720", VA = "0x1AA7720")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1AA77E0", Offset = "0x1AA77E0", VA = "0x1AA77E0")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1AA78A0", Offset = "0x1AA78A0", VA = "0x1AA78A0")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1AA793C", Offset = "0x1AA793C", VA = "0x1AA793C")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1AA79EC", Offset = "0x1AA79EC", VA = "0x1AA79EC")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x1AA7A78", Offset = "0x1AA7A78", VA = "0x1AA7A78")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x1AA7B04", Offset = "0x1AA7B04", VA = "0x1AA7B04")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1AA7B90", Offset = "0x1AA7B90", VA = "0x1AA7B90")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1AA7C40", Offset = "0x1AA7C40", VA = "0x1AA7C40")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1AA7CF4", Offset = "0x1AA7CF4", VA = "0x1AA7CF4")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1AA7DCC", Offset = "0x1AA7DCC", VA = "0x1AA7DCC")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1AA7E9C", Offset = "0x1AA7E9C", VA = "0x1AA7E9C")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1AA7FE4", Offset = "0x1AA7FE4", VA = "0x1AA7FE4")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1AA80C8", Offset = "0x1AA80C8", VA = "0x1AA80C8")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1AA81AC", Offset = "0x1AA81AC", VA = "0x1AA81AC")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1AA82E0", Offset = "0x1AA82E0", VA = "0x1AA82E0")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1AA8414", Offset = "0x1AA8414", VA = "0x1AA8414")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1AA8508", Offset = "0x1AA8508", VA = "0x1AA8508")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1AA860C", Offset = "0x1AA860C", VA = "0x1AA860C")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1AA86F4", Offset = "0x1AA86F4", VA = "0x1AA86F4")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1AA87D8", Offset = "0x1AA87D8", VA = "0x1AA87D8")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1AA88C0", Offset = "0x1AA88C0", VA = "0x1AA88C0")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1AA8984", Offset = "0x1AA8984", VA = "0x1AA8984")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1AA8A38", Offset = "0x1AA8A38", VA = "0x1AA8A38")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1AA8AEC", Offset = "0x1AA8AEC", VA = "0x1AA8AEC")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1AA8BA0", Offset = "0x1AA8BA0", VA = "0x1AA8BA0")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1AA8CA0", Offset = "0x1AA8CA0", VA = "0x1AA8CA0")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1AA8DB0", Offset = "0x1AA8DB0", VA = "0x1AA8DB0")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1AA8E98", Offset = "0x1AA8E98", VA = "0x1AA8E98")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1AA8F80", Offset = "0x1AA8F80", VA = "0x1AA8F80")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1AA9044", Offset = "0x1AA9044", VA = "0x1AA9044")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1AA9104", Offset = "0x1AA9104", VA = "0x1AA9104")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1AA91B8", Offset = "0x1AA91B8", VA = "0x1AA91B8")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1AA92A0", Offset = "0x1AA92A0", VA = "0x1AA92A0")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1AA92E8", Offset = "0x1AA92E8", VA = "0x1AA92E8")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1AA93C0", Offset = "0x1AA93C0", VA = "0x1AA93C0")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1AA93D8", Offset = "0x1AA93D8", VA = "0x1AA93D8")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1AA93E8", Offset = "0x1AA93E8", VA = "0x1AA93E8")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1AA9438", Offset = "0x1AA9438", VA = "0x1AA9438")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1AA94B8", Offset = "0x1AA94B8", VA = "0x1AA94B8")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1AA94DC", Offset = "0x1AA94DC", VA = "0x1AA94DC")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1AA9540", Offset = "0x1AA9540", VA = "0x1AA9540")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1AA95F0", Offset = "0x1AA95F0", VA = "0x1AA95F0")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1AA9604", Offset = "0x1AA9604", VA = "0x1AA9604")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1AA9620", Offset = "0x1AA9620", VA = "0x1AA9620")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1AA9674", Offset = "0x1AA9674", VA = "0x1AA9674")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1AA96AC", Offset = "0x1AA96AC", VA = "0x1AA96AC")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1AA96C4", Offset = "0x1AA96C4", VA = "0x1AA96C4")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1AA96EC", Offset = "0x1AA96EC", VA = "0x1AA96EC")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1AA9744", Offset = "0x1AA9744", VA = "0x1AA9744")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1AA9760", Offset = "0x1AA9760", VA = "0x1AA9760")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1AA9788", Offset = "0x1AA9788", VA = "0x1AA9788")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1AA97E4", Offset = "0x1AA97E4", VA = "0x1AA97E4")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1AA9804", Offset = "0x1AA9804", VA = "0x1AA9804")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1AA9834", Offset = "0x1AA9834", VA = "0x1AA9834")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1AA989C", Offset = "0x1AA989C", VA = "0x1AA989C")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1AA98D4", Offset = "0x1AA98D4", VA = "0x1AA98D4")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1AA9908", Offset = "0x1AA9908", VA = "0x1AA9908")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1AA994C", Offset = "0x1AA994C", VA = "0x1AA994C")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1AA9984", Offset = "0x1AA9984", VA = "0x1AA9984")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1AA99BC", Offset = "0x1AA99BC", VA = "0x1AA99BC")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1AA9A2C", Offset = "0x1AA9A2C", VA = "0x1AA9A2C")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1AA9A54", Offset = "0x1AA9A54", VA = "0x1AA9A54")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1AA9A7C", Offset = "0x1AA9A7C", VA = "0x1AA9A7C")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1AA9AD0", Offset = "0x1AA9AD0", VA = "0x1AA9AD0")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1AA9B58", Offset = "0x1AA9B58", VA = "0x1AA9B58")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1AA9C20", Offset = "0x1AA9C20", VA = "0x1AA9C20")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1AA9CD4", Offset = "0x1AA9CD4", VA = "0x1AA9CD4")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1AA9D08", Offset = "0x1AA9D08", VA = "0x1AA9D08")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1AA9D48", Offset = "0x1AA9D48", VA = "0x1AA9D48")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1AA9DE0", Offset = "0x1AA9DE0", VA = "0x1AA9DE0")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1AA9EB8", Offset = "0x1AA9EB8", VA = "0x1AA9EB8")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1AA9F88", Offset = "0x1AA9F88", VA = "0x1AA9F88")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1AAA0D8", Offset = "0x1AAA0D8", VA = "0x1AAA0D8")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1AAA470", Offset = "0x1AAA470", VA = "0x1AAA470")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1AAA814", Offset = "0x1AAA814", VA = "0x1AAA814")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1AAABA8", Offset = "0x1AAABA8", VA = "0x1AAABA8")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1AAAF1C", Offset = "0x1AAAF1C", VA = "0x1AAAF1C")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1AAAF84", Offset = "0x1AAAF84", VA = "0x1AAAF84")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1AAB3C0", Offset = "0x1AAB3C0", VA = "0x1AAB3C0")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1AAB628", Offset = "0x1AAB628", VA = "0x1AAB628")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1AAB428", Offset = "0x1AAB428", VA = "0x1AAB428")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1AAB6EC", Offset = "0x1AAB6EC", VA = "0x1AAB6EC")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1AAB744", Offset = "0x1AAB744", VA = "0x1AAB744")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1AAB91C", Offset = "0x1AAB91C", VA = "0x1AAB91C")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x2000125")]
public class LTUtility
{
	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1AADF08", Offset = "0x1AADF08", VA = "0x1AADF08")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1AADFA4", Offset = "0x1AADFA4", VA = "0x1AADFA4")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x2000126")]
public class LTBezier
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x1AADFAC", Offset = "0x1AADFAC", VA = "0x1AADFAC")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1AAE29C", Offset = "0x1AAE29C", VA = "0x1AAE29C")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1AAE244", Offset = "0x1AAE244", VA = "0x1AAE244")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1AAE3BC", Offset = "0x1AAE3BC", VA = "0x1AAE3BC")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000127")]
public class LTBezierPath
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x17000055")]
	public float distance
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1AAF798", Offset = "0x1AAF798", VA = "0x1AAF798")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1AAF3D4", Offset = "0x1AAF3D4", VA = "0x1AAF3D4")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1AAF3DC", Offset = "0x1AAF3DC", VA = "0x1AAF3DC")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1AAF408", Offset = "0x1AAF408", VA = "0x1AAF408")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1AAF7A0", Offset = "0x1AAF7A0", VA = "0x1AAF7A0")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1AAF85C", Offset = "0x1AAF85C", VA = "0x1AAF85C")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1AAF910", Offset = "0x1AAF910", VA = "0x1AAF910")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1AAF9C4", Offset = "0x1AAF9C4", VA = "0x1AAF9C4")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1AAFA30", Offset = "0x1AAFA30", VA = "0x1AAFA30")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1AAFACC", Offset = "0x1AAFACC", VA = "0x1AAFACC")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1AAFB38", Offset = "0x1AAFB38", VA = "0x1AAFB38")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x1AAFC20", Offset = "0x1AAFC20", VA = "0x1AAFC20")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1AAFD00", Offset = "0x1AAFD00", VA = "0x1AAFD00")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class LTSpline
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1AAFED8", Offset = "0x1AAFED8", VA = "0x1AAFED8")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1AB0320", Offset = "0x1AB0320", VA = "0x1AB0320")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1AAFF10", Offset = "0x1AAFF10", VA = "0x1AAFF10")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1AB0564", Offset = "0x1AB0564", VA = "0x1AB0564")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1AB0360", Offset = "0x1AB0360", VA = "0x1AB0360")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1AB0660", Offset = "0x1AB0660", VA = "0x1AB0660")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1AB078C", Offset = "0x1AB078C", VA = "0x1AB078C")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1AB07A4", Offset = "0x1AB07A4", VA = "0x1AB07A4")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1AB0858", Offset = "0x1AB0858", VA = "0x1AB0858")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1AB0990", Offset = "0x1AB0990", VA = "0x1AB0990")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1AB09FC", Offset = "0x1AB09FC", VA = "0x1AB09FC")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1AB0A98", Offset = "0x1AB0A98", VA = "0x1AB0A98")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1AB0B04", Offset = "0x1AB0B04", VA = "0x1AB0B04")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1AB0BC4", Offset = "0x1AB0BC4", VA = "0x1AB0BC4")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1AB0C78", Offset = "0x1AB0C78", VA = "0x1AB0C78")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1AB0DC4", Offset = "0x1AB0DC4", VA = "0x1AB0DC4")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1AB0FF4", Offset = "0x1AB0FF4", VA = "0x1AB0FF4")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1AB1004", Offset = "0x1AB1004", VA = "0x1AB1004")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1AB11CC", Offset = "0x1AB11CC", VA = "0x1AB11CC")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000129")]
public class LTRect
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x17000056")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1AB1A80", Offset = "0x1AB1A80", VA = "0x1AB1A80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public int id
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x1AB1A90", Offset = "0x1AB1A90", VA = "0x1AB1A90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000058")]
	public float x
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1AB1AA4", Offset = "0x1AB1AA4", VA = "0x1AB1AA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1AB1AB0", Offset = "0x1AB1AB0", VA = "0x1AB1AB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float y
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1AB1ABC", Offset = "0x1AB1ABC", VA = "0x1AB1ABC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x1AB1AC8", Offset = "0x1AB1AC8", VA = "0x1AB1AC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float width
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x1AB1AD4", Offset = "0x1AB1AD4", VA = "0x1AB1AD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x1AB1AE0", Offset = "0x1AB1AE0", VA = "0x1AB1AE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public float height
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1AB1AEC", Offset = "0x1AB1AEC", VA = "0x1AB1AEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1AB1AF8", Offset = "0x1AB1AF8", VA = "0x1AB1AF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public Rect rect
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1AB1B04", Offset = "0x1AB1B04", VA = "0x1AB1B04")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1AB1CEC", Offset = "0x1AB1CEC", VA = "0x1AB1CEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1AB1400", Offset = "0x1AB1400", VA = "0x1AB1400")]
	public LTRect()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1AB1510", Offset = "0x1AB1510", VA = "0x1AB1510")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1AB15A8", Offset = "0x1AB15A8", VA = "0x1AB15A8")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1AB166C", Offset = "0x1AB166C", VA = "0x1AB166C")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1AB1738", Offset = "0x1AB1738", VA = "0x1AB1738")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1AB1A9C", Offset = "0x1AB1A9C", VA = "0x1AB1A9C")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1AB14A4", Offset = "0x1AB14A4", VA = "0x1AB14A4")]
	public void reset()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1AB181C", Offset = "0x1AB181C", VA = "0x1AB181C")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1AB1CF8", Offset = "0x1AB1CF8", VA = "0x1AB1CF8")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1AB1D14", Offset = "0x1AB1D14", VA = "0x1AB1D14")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1AB1D20", Offset = "0x1AB1D20", VA = "0x1AB1D20")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1AB1D34", Offset = "0x1AB1D34", VA = "0x1AB1D34")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1AB1D3C", Offset = "0x1AB1D3C", VA = "0x1AB1D3C")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1AB1D58", Offset = "0x1AB1D58", VA = "0x1AB1D58")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1AB1D6C", Offset = "0x1AB1D6C", VA = "0x1AB1D6C")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1AB1DD4", Offset = "0x1AB1DD4", VA = "0x1AB1DD4")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1AB1DE0", Offset = "0x1AB1DE0", VA = "0x1AB1DE0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200012A")]
public class LTEvent
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1AB2120", Offset = "0x1AB2120", VA = "0x1AB2120")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x200012B")]
public class LTGUI
{
	[Token(Token = "0x200012C")]
	public enum Element_Type
	{
		[Token(Token = "0x4000841")]
		Texture,
		[Token(Token = "0x4000842")]
		Label
	}

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1AB2158", Offset = "0x1AB2158", VA = "0x1AB2158")]
	public static void init()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1AB224C", Offset = "0x1AB224C", VA = "0x1AB224C")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1AB23D4", Offset = "0x1AB23D4", VA = "0x1AB23D4")]
	public static void reset()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1AB252C", Offset = "0x1AB252C", VA = "0x1AB252C")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1AB2E6C", Offset = "0x1AB2E6C", VA = "0x1AB2E6C")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1AB2F48", Offset = "0x1AB2F48", VA = "0x1AB2F48")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1AB3094", Offset = "0x1AB3094", VA = "0x1AB3094")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1AB317C", Offset = "0x1AB317C", VA = "0x1AB317C")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1AB3240", Offset = "0x1AB3240", VA = "0x1AB3240")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1AB3660", Offset = "0x1AB3660", VA = "0x1AB3660")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1AB3724", Offset = "0x1AB3724", VA = "0x1AB3724")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1AB32C8", Offset = "0x1AB32C8", VA = "0x1AB32C8")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1AB37A8", Offset = "0x1AB37A8", VA = "0x1AB37A8")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1AB3A68", Offset = "0x1AB3A68", VA = "0x1AB3A68")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1AB3BEC", Offset = "0x1AB3BEC", VA = "0x1AB3BEC")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1AB3B7C", Offset = "0x1AB3B7C", VA = "0x1AB3B7C")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x1AB3CB4", Offset = "0x1AB3CB4", VA = "0x1AB3CB4")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x200012D")]
public static class LeanTweenExt
{
	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1AB3D28", Offset = "0x1AB3D28", VA = "0x1AB3D28")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1AB3D98", Offset = "0x1AB3D98", VA = "0x1AB3D98")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1AB3E08", Offset = "0x1AB3E08", VA = "0x1AB3E08")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1AB3E78", Offset = "0x1AB3E78", VA = "0x1AB3E78")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1AB3EE8", Offset = "0x1AB3EE8", VA = "0x1AB3EE8")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1AB3F58", Offset = "0x1AB3F58", VA = "0x1AB3F58")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1AB3FB0", Offset = "0x1AB3FB0", VA = "0x1AB3FB0")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1AB4018", Offset = "0x1AB4018", VA = "0x1AB4018")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1AB4088", Offset = "0x1AB4088", VA = "0x1AB4088")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1AB40E0", Offset = "0x1AB40E0", VA = "0x1AB40E0")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1AB4178", Offset = "0x1AB4178", VA = "0x1AB4178")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1AB4210", Offset = "0x1AB4210", VA = "0x1AB4210")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1AB4288", Offset = "0x1AB4288", VA = "0x1AB4288")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x1AB4300", Offset = "0x1AB4300", VA = "0x1AB4300")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1AB4358", Offset = "0x1AB4358", VA = "0x1AB4358")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1AB43B0", Offset = "0x1AB43B0", VA = "0x1AB43B0")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1AB4408", Offset = "0x1AB4408", VA = "0x1AB4408")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1AB4490", Offset = "0x1AB4490", VA = "0x1AB4490")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x1AB4534", Offset = "0x1AB4534", VA = "0x1AB4534")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1AB45BC", Offset = "0x1AB45BC", VA = "0x1AB45BC")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1AB463C", Offset = "0x1AB463C", VA = "0x1AB463C")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1AB46D8", Offset = "0x1AB46D8", VA = "0x1AB46D8")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1AB4750", Offset = "0x1AB4750", VA = "0x1AB4750")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1AB47C8", Offset = "0x1AB47C8", VA = "0x1AB47C8")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1AB4840", Offset = "0x1AB4840", VA = "0x1AB4840")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1AB48CC", Offset = "0x1AB48CC", VA = "0x1AB48CC")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1AB4958", Offset = "0x1AB4958", VA = "0x1AB4958")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1AB49E4", Offset = "0x1AB49E4", VA = "0x1AB49E4")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1AB4A6C", Offset = "0x1AB4A6C", VA = "0x1AB4A6C")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1AB4AE4", Offset = "0x1AB4AE4", VA = "0x1AB4AE4")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1AB4B5C", Offset = "0x1AB4B5C", VA = "0x1AB4B5C")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1AB4C00", Offset = "0x1AB4C00", VA = "0x1AB4C00")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1AB4C8C", Offset = "0x1AB4C8C", VA = "0x1AB4C8C")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1AB4D18", Offset = "0x1AB4D18", VA = "0x1AB4D18")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1AB4D88", Offset = "0x1AB4D88", VA = "0x1AB4D88")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1AB4DF8", Offset = "0x1AB4DF8", VA = "0x1AB4DF8")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1AB4E68", Offset = "0x1AB4E68", VA = "0x1AB4E68")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1AB4EF4", Offset = "0x1AB4EF4", VA = "0x1AB4EF4")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1AB4F80", Offset = "0x1AB4F80", VA = "0x1AB4F80")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1AB500C", Offset = "0x1AB500C", VA = "0x1AB500C")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1AB5084", Offset = "0x1AB5084", VA = "0x1AB5084")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1AB50FC", Offset = "0x1AB50FC", VA = "0x1AB50FC")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x1AB5188", Offset = "0x1AB5188", VA = "0x1AB5188")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x1AB5214", Offset = "0x1AB5214", VA = "0x1AB5214")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1AB528C", Offset = "0x1AB528C", VA = "0x1AB528C")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1AB5318", Offset = "0x1AB5318", VA = "0x1AB5318")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x1AB5388", Offset = "0x1AB5388", VA = "0x1AB5388")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x1AB5414", Offset = "0x1AB5414", VA = "0x1AB5414")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1AB5484", Offset = "0x1AB5484", VA = "0x1AB5484")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1AB54F4", Offset = "0x1AB54F4", VA = "0x1AB54F4")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1AB5580", Offset = "0x1AB5580", VA = "0x1AB5580")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1AB55F0", Offset = "0x1AB55F0", VA = "0x1AB55F0")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1AB5660", Offset = "0x1AB5660", VA = "0x1AB5660")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1AB56EC", Offset = "0x1AB56EC", VA = "0x1AB56EC")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1AB575C", Offset = "0x1AB575C", VA = "0x1AB575C")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1AB57B4", Offset = "0x1AB57B4", VA = "0x1AB57B4")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1AB581C", Offset = "0x1AB581C", VA = "0x1AB581C")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1AB5874", Offset = "0x1AB5874", VA = "0x1AB5874")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1AB58FC", Offset = "0x1AB58FC", VA = "0x1AB58FC")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1AB59A0", Offset = "0x1AB59A0", VA = "0x1AB59A0")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1AB5A28", Offset = "0x1AB5A28", VA = "0x1AB5A28")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1AB5AC0", Offset = "0x1AB5AC0", VA = "0x1AB5AC0")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1AB5B74", Offset = "0x1AB5B74", VA = "0x1AB5B74")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1AB5C0C", Offset = "0x1AB5C0C", VA = "0x1AB5C0C")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1AB5CA4", Offset = "0x1AB5CA4", VA = "0x1AB5CA4")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1AB5D58", Offset = "0x1AB5D58", VA = "0x1AB5D58")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1AB5DF0", Offset = "0x1AB5DF0", VA = "0x1AB5DF0")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1AB5E60", Offset = "0x1AB5E60", VA = "0x1AB5E60")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1AB5EEC", Offset = "0x1AB5EEC", VA = "0x1AB5EEC")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1AB5F5C", Offset = "0x1AB5F5C", VA = "0x1AB5F5C")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1AB5FE8", Offset = "0x1AB5FE8", VA = "0x1AB5FE8")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1AB6058", Offset = "0x1AB6058", VA = "0x1AB6058")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1AB60E4", Offset = "0x1AB60E4", VA = "0x1AB60E4")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1AB616C", Offset = "0x1AB616C", VA = "0x1AB616C")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1AB6210", Offset = "0x1AB6210", VA = "0x1AB6210")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1AB6298", Offset = "0x1AB6298", VA = "0x1AB6298")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1AB6308", Offset = "0x1AB6308", VA = "0x1AB6308")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1AB6394", Offset = "0x1AB6394", VA = "0x1AB6394")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1AB6404", Offset = "0x1AB6404", VA = "0x1AB6404")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1AB6490", Offset = "0x1AB6490", VA = "0x1AB6490")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1AB6500", Offset = "0x1AB6500", VA = "0x1AB6500")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1AB658C", Offset = "0x1AB658C", VA = "0x1AB658C")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1AB660C", Offset = "0x1AB660C", VA = "0x1AB660C")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1AB6724", Offset = "0x1AB6724", VA = "0x1AB6724")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1AB67A4", Offset = "0x1AB67A4", VA = "0x1AB67A4")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1AB683C", Offset = "0x1AB683C", VA = "0x1AB683C")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1AB68EC", Offset = "0x1AB68EC", VA = "0x1AB68EC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1AB697C", Offset = "0x1AB697C", VA = "0x1AB697C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1AB6A0C", Offset = "0x1AB6A0C", VA = "0x1AB6A0C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1AB6A9C", Offset = "0x1AB6A9C", VA = "0x1AB6A9C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1AB6BBC", Offset = "0x1AB6BBC", VA = "0x1AB6BBC")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1AB6C64", Offset = "0x1AB6C64", VA = "0x1AB6C64")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1AB6D24", Offset = "0x1AB6D24", VA = "0x1AB6D24")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1AB6D70", Offset = "0x1AB6D70", VA = "0x1AB6D70")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1AB6DBC", Offset = "0x1AB6DBC", VA = "0x1AB6DBC")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1AB6E08", Offset = "0x1AB6E08", VA = "0x1AB6E08")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1AB6E54", Offset = "0x1AB6E54", VA = "0x1AB6E54")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1AB6EA0", Offset = "0x1AB6EA0", VA = "0x1AB6EA0")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1AB6EEC", Offset = "0x1AB6EEC", VA = "0x1AB6EEC")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x200012E")]
public class LTDescr
{
	[Token(Token = "0x200012F")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000130")]
	public delegate void ActionMethodDelegate();

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x1700005D")]
	public Vector3 from
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1AB6F54", Offset = "0x1AB6F54", VA = "0x1AB6F54")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1AB6F60", Offset = "0x1AB6F60", VA = "0x1AB6F60")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public Vector3 to
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1AB6F6C", Offset = "0x1AB6F6C", VA = "0x1AB6F6C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1AB6F78", Offset = "0x1AB6F78", VA = "0x1AB6F78")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x1AB6F84", Offset = "0x1AB6F84", VA = "0x1AB6F84")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1AB6F8C", Offset = "0x1AB6F8C", VA = "0x1AB6F8C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1AB6F94", Offset = "0x1AB6F94", VA = "0x1AB6F94")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1AB6F9C", Offset = "0x1AB6F9C", VA = "0x1AB6F9C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public Transform toTrans
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1AB6FA4", Offset = "0x1AB6FA4", VA = "0x1AB6FA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public int uniqueId
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1AB7B30", Offset = "0x1AB7B30", VA = "0x1AB7B30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000063")]
	public int id
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1AB79DC", Offset = "0x1AB79DC", VA = "0x1AB79DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000064")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1AB7B40", Offset = "0x1AB7B40", VA = "0x1AB7B40")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1AB7B48", Offset = "0x1AB7B48", VA = "0x1AB7B48")]
		set
		{
		}
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1AB6FC0", Offset = "0x1AB6FC0", VA = "0x1AB6FC0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1AB79EC", Offset = "0x1AB79EC", VA = "0x1AB79EC")]
	public LTDescr()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1AB7A68", Offset = "0x1AB7A68", VA = "0x1AB7A68")]
	[Obsolete("Use 'LeanTween.cancel( id )' instead")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1AB7B50", Offset = "0x1AB7B50", VA = "0x1AB7B50")]
	public void reset()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1AB7CA4", Offset = "0x1AB7CA4", VA = "0x1AB7CA4")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1AB7CB0", Offset = "0x1AB7CB0", VA = "0x1AB7CB0")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1AB7D84", Offset = "0x1AB7D84", VA = "0x1AB7D84")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1AB7E5C", Offset = "0x1AB7E5C", VA = "0x1AB7E5C")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1AB7F34", Offset = "0x1AB7F34", VA = "0x1AB7F34")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1AB800C", Offset = "0x1AB800C", VA = "0x1AB800C")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1AB80E4", Offset = "0x1AB80E4", VA = "0x1AB80E4")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1AB81BC", Offset = "0x1AB81BC", VA = "0x1AB81BC")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1AB81C4", Offset = "0x1AB81C4", VA = "0x1AB81C4")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1AB81D0", Offset = "0x1AB81D0", VA = "0x1AB81D0")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1AB82A8", Offset = "0x1AB82A8", VA = "0x1AB82A8")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1AB8380", Offset = "0x1AB8380", VA = "0x1AB8380")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1AB8458", Offset = "0x1AB8458", VA = "0x1AB8458")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1AB8530", Offset = "0x1AB8530", VA = "0x1AB8530")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1AB8608", Offset = "0x1AB8608", VA = "0x1AB8608")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1AB86E0", Offset = "0x1AB86E0", VA = "0x1AB86E0")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1AB87B8", Offset = "0x1AB87B8", VA = "0x1AB87B8")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1AB8890", Offset = "0x1AB8890", VA = "0x1AB8890")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1AB8968", Offset = "0x1AB8968", VA = "0x1AB8968")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1AB8A40", Offset = "0x1AB8A40", VA = "0x1AB8A40")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1AB8B18", Offset = "0x1AB8B18", VA = "0x1AB8B18")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1AB8BF0", Offset = "0x1AB8BF0", VA = "0x1AB8BF0")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1AB8CC8", Offset = "0x1AB8CC8", VA = "0x1AB8CC8")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1AB8DA0", Offset = "0x1AB8DA0", VA = "0x1AB8DA0")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1AB8E78", Offset = "0x1AB8E78", VA = "0x1AB8E78")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1AB8F50", Offset = "0x1AB8F50", VA = "0x1AB8F50")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1AB9028", Offset = "0x1AB9028", VA = "0x1AB9028")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1AB9100", Offset = "0x1AB9100", VA = "0x1AB9100")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1AB91D8", Offset = "0x1AB91D8", VA = "0x1AB91D8")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1AB92B0", Offset = "0x1AB92B0", VA = "0x1AB92B0")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1AB9388", Offset = "0x1AB9388", VA = "0x1AB9388")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1AB9460", Offset = "0x1AB9460", VA = "0x1AB9460")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1AB9538", Offset = "0x1AB9538", VA = "0x1AB9538")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1AB9610", Offset = "0x1AB9610", VA = "0x1AB9610")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1AB964C", Offset = "0x1AB964C", VA = "0x1AB964C")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1AB9724", Offset = "0x1AB9724", VA = "0x1AB9724")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1AB97FC", Offset = "0x1AB97FC", VA = "0x1AB97FC")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1AB98D4", Offset = "0x1AB98D4", VA = "0x1AB98D4")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1AB99AC", Offset = "0x1AB99AC", VA = "0x1AB99AC")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1AB9A84", Offset = "0x1AB9A84", VA = "0x1AB9A84")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1AB9B5C", Offset = "0x1AB9B5C", VA = "0x1AB9B5C")]
	private void callback()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1AB9BD4", Offset = "0x1AB9BD4", VA = "0x1AB9BD4")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1AB9D14", Offset = "0x1AB9D14", VA = "0x1AB9D14")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1AB9E54", Offset = "0x1AB9E54", VA = "0x1AB9E54")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1AB9F2C", Offset = "0x1AB9F2C", VA = "0x1AB9F2C")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1ABA004", Offset = "0x1ABA004", VA = "0x1ABA004")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1ABA0DC", Offset = "0x1ABA0DC", VA = "0x1ABA0DC")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1ABA1B4", Offset = "0x1ABA1B4", VA = "0x1ABA1B4")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1ABA28C", Offset = "0x1ABA28C", VA = "0x1ABA28C")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1ABA364", Offset = "0x1ABA364", VA = "0x1ABA364")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1ABA43C", Offset = "0x1ABA43C", VA = "0x1ABA43C")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1ABA514", Offset = "0x1ABA514", VA = "0x1ABA514")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1ABA5EC", Offset = "0x1ABA5EC", VA = "0x1ABA5EC")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1ABA6C4", Offset = "0x1ABA6C4", VA = "0x1ABA6C4")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1ABA79C", Offset = "0x1ABA79C", VA = "0x1ABA79C")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1ABA874", Offset = "0x1ABA874", VA = "0x1ABA874")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1ABA89C", Offset = "0x1ABA89C", VA = "0x1ABA89C")]
	private void init()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1ABAAD8", Offset = "0x1ABAAD8", VA = "0x1ABAAD8")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1ABABCC", Offset = "0x1ABABCC", VA = "0x1ABABCC")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1ABABE4", Offset = "0x1ABABE4", VA = "0x1ABABE4")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1ABA9E0", Offset = "0x1ABA9E0", VA = "0x1ABA9E0")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1ABAEB0", Offset = "0x1ABAEB0", VA = "0x1ABAEB0")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1ABAEEC", Offset = "0x1ABAEEC", VA = "0x1ABAEEC")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1ABB364", Offset = "0x1ABB364", VA = "0x1ABB364")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1ABB748", Offset = "0x1ABB748", VA = "0x1ABB748")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1ABBB88", Offset = "0x1ABBB88", VA = "0x1ABBB88")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1ABBF60", Offset = "0x1ABBF60", VA = "0x1ABBF60")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1ABC360", Offset = "0x1ABC360", VA = "0x1ABC360")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1ABC798", Offset = "0x1ABC798", VA = "0x1ABC798")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1ABCB50", Offset = "0x1ABCB50", VA = "0x1ABCB50")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1ABCED0", Offset = "0x1ABCED0", VA = "0x1ABCED0")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1ABD28C", Offset = "0x1ABD28C", VA = "0x1ABD28C")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1ABD2E8", Offset = "0x1ABD2E8", VA = "0x1ABD2E8")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1ABD300", Offset = "0x1ABD300", VA = "0x1ABD300")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1ABD30C", Offset = "0x1ABD30C", VA = "0x1ABD30C")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1ABD32C", Offset = "0x1ABD32C", VA = "0x1ABD32C")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1ABD334", Offset = "0x1ABD334", VA = "0x1ABD334")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1ABD470", Offset = "0x1ABD470", VA = "0x1ABD470")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1ABE81C", Offset = "0x1ABE81C", VA = "0x1ABE81C")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1ABD598", Offset = "0x1ABD598", VA = "0x1ABD598")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1ABD504", Offset = "0x1ABD504", VA = "0x1ABD504")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1ABD62C", Offset = "0x1ABD62C", VA = "0x1ABD62C")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1ABD6C0", Offset = "0x1ABD6C0", VA = "0x1ABD6C0")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1ABD754", Offset = "0x1ABD754", VA = "0x1ABD754")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1ABD7E8", Offset = "0x1ABD7E8", VA = "0x1ABD7E8")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1ABD87C", Offset = "0x1ABD87C", VA = "0x1ABD87C")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1ABD910", Offset = "0x1ABD910", VA = "0x1ABD910")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1ABD9A4", Offset = "0x1ABD9A4", VA = "0x1ABD9A4")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1ABDA38", Offset = "0x1ABDA38", VA = "0x1ABDA38")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1ABDACC", Offset = "0x1ABDACC", VA = "0x1ABDACC")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1ABDB60", Offset = "0x1ABDB60", VA = "0x1ABDB60")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1ABDBF4", Offset = "0x1ABDBF4", VA = "0x1ABDBF4")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1ABDC88", Offset = "0x1ABDC88", VA = "0x1ABDC88")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1ABDD1C", Offset = "0x1ABDD1C", VA = "0x1ABDD1C")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1ABDDB0", Offset = "0x1ABDDB0", VA = "0x1ABDDB0")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1ABDE44", Offset = "0x1ABDE44", VA = "0x1ABDE44")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1ABDED8", Offset = "0x1ABDED8", VA = "0x1ABDED8")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1ABDF6C", Offset = "0x1ABDF6C", VA = "0x1ABDF6C")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1ABE000", Offset = "0x1ABE000", VA = "0x1ABE000")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1ABE094", Offset = "0x1ABE094", VA = "0x1ABE094")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1ABE128", Offset = "0x1ABE128", VA = "0x1ABE128")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1ABE1BC", Offset = "0x1ABE1BC", VA = "0x1ABE1BC")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1ABE250", Offset = "0x1ABE250", VA = "0x1ABE250")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1ABE2E4", Offset = "0x1ABE2E4", VA = "0x1ABE2E4")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1ABE378", Offset = "0x1ABE378", VA = "0x1ABE378")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1ABE40C", Offset = "0x1ABE40C", VA = "0x1ABE40C")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x1ABE4A0", Offset = "0x1ABE4A0", VA = "0x1ABE4A0")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1ABE534", Offset = "0x1ABE534", VA = "0x1ABE534")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1ABE5C8", Offset = "0x1ABE5C8", VA = "0x1ABE5C8")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1ABE65C", Offset = "0x1ABE65C", VA = "0x1ABE65C")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1ABE73C", Offset = "0x1ABE73C", VA = "0x1ABE73C")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1ABE8B0", Offset = "0x1ABE8B0", VA = "0x1ABE8B0")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1ABE970", Offset = "0x1ABE970", VA = "0x1ABE970")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1ABEA14", Offset = "0x1ABEA14", VA = "0x1ABEA14")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1ABEA8C", Offset = "0x1ABEA8C", VA = "0x1ABEA8C")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1ABEB10", Offset = "0x1ABEB10", VA = "0x1ABEB10")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1ABEB88", Offset = "0x1ABEB88", VA = "0x1ABEB88")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1ABEC84", Offset = "0x1ABEC84", VA = "0x1ABEC84")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1ABED00", Offset = "0x1ABED00", VA = "0x1ABED00")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1ABED8C", Offset = "0x1ABED8C", VA = "0x1ABED8C")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1ABEE38", Offset = "0x1ABEE38", VA = "0x1ABEE38")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1ABEEB8", Offset = "0x1ABEEB8", VA = "0x1ABEEB8")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1ABEF48", Offset = "0x1ABEF48", VA = "0x1ABEF48")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1ABF01C", Offset = "0x1ABF01C", VA = "0x1ABF01C")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1ABF0A0", Offset = "0x1ABF0A0", VA = "0x1ABF0A0")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1ABF134", Offset = "0x1ABF134", VA = "0x1ABF134")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1ABF1F0", Offset = "0x1ABF1F0", VA = "0x1ABF1F0")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1ABF2B0", Offset = "0x1ABF2B0", VA = "0x1ABF2B0")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1ABF364", Offset = "0x1ABF364", VA = "0x1ABF364")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1ABF3F4", Offset = "0x1ABF3F4", VA = "0x1ABF3F4")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1ABF47C", Offset = "0x1ABF47C", VA = "0x1ABF47C")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1ABF504", Offset = "0x1ABF504", VA = "0x1ABF504")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1ABF5D0", Offset = "0x1ABF5D0", VA = "0x1ABF5D0")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1ABF660", Offset = "0x1ABF660", VA = "0x1ABF660")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1ABF6EC", Offset = "0x1ABF6EC", VA = "0x1ABF6EC")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x1ABF7BC", Offset = "0x1ABF7BC", VA = "0x1ABF7BC")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x1ABF8E8", Offset = "0x1ABF8E8", VA = "0x1ABF8E8")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1ABFA38", Offset = "0x1ABFA38", VA = "0x1ABFA38")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1ABFC14", Offset = "0x1ABFC14", VA = "0x1ABFC14")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1ABFCBC", Offset = "0x1ABFCBC", VA = "0x1ABFCBC")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1ABFD64", Offset = "0x1ABFD64", VA = "0x1ABFD64")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1ABFE68", Offset = "0x1ABFE68", VA = "0x1ABFE68")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1ABFF48", Offset = "0x1ABFF48", VA = "0x1ABFF48")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1AC0028", Offset = "0x1AC0028", VA = "0x1AC0028")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1AC0108", Offset = "0x1AC0108", VA = "0x1AC0108")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x1AC0110", Offset = "0x1AC0110", VA = "0x1AC0110")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1AC0118", Offset = "0x1AC0118", VA = "0x1AC0118")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1AC0120", Offset = "0x1AC0120", VA = "0x1AC0120")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x1AC01CC", Offset = "0x1AC01CC", VA = "0x1AC01CC")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1AC01FC", Offset = "0x1AC01FC", VA = "0x1AC01FC")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1AC0224", Offset = "0x1AC0224", VA = "0x1AC0224")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1AC02E8", Offset = "0x1AC02E8", VA = "0x1AC02E8")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1AC02F4", Offset = "0x1AC02F4", VA = "0x1AC02F4")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1AC0300", Offset = "0x1AC0300", VA = "0x1AC0300")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1AC030C", Offset = "0x1AC030C", VA = "0x1AC030C")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1AC0318", Offset = "0x1AC0318", VA = "0x1AC0318")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1AC0320", Offset = "0x1AC0320", VA = "0x1AC0320")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1AC033C", Offset = "0x1AC033C", VA = "0x1AC033C")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1AC0364", Offset = "0x1AC0364", VA = "0x1AC0364")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1AC03B4", Offset = "0x1AC03B4", VA = "0x1AC03B4")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1AC03BC", Offset = "0x1AC03BC", VA = "0x1AC03BC")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1AC03CC", Offset = "0x1AC03CC", VA = "0x1AC03CC")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1AC03DC", Offset = "0x1AC03DC", VA = "0x1AC03DC")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1AC03EC", Offset = "0x1AC03EC", VA = "0x1AC03EC")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1AC03FC", Offset = "0x1AC03FC", VA = "0x1AC03FC")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1AC040C", Offset = "0x1AC040C", VA = "0x1AC040C")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1AC0418", Offset = "0x1AC0418", VA = "0x1AC0418")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1AC0438", Offset = "0x1AC0438", VA = "0x1AC0438")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1AC0440", Offset = "0x1AC0440", VA = "0x1AC0440")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1AC0460", Offset = "0x1AC0460", VA = "0x1AC0460")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1AC048C", Offset = "0x1AC048C", VA = "0x1AC048C")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1AC04BC", Offset = "0x1AC04BC", VA = "0x1AC04BC")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1AC04EC", Offset = "0x1AC04EC", VA = "0x1AC04EC")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1AC0540", Offset = "0x1AC0540", VA = "0x1AC0540")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1AC0570", Offset = "0x1AC0570", VA = "0x1AC0570")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1AC05A0", Offset = "0x1AC05A0", VA = "0x1AC05A0")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1AC05D0", Offset = "0x1AC05D0", VA = "0x1AC05D0")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1AC0600", Offset = "0x1AC0600", VA = "0x1AC0600")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1AC0630", Offset = "0x1AC0630", VA = "0x1AC0630")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1AC0660", Offset = "0x1AC0660", VA = "0x1AC0660")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1AC0690", Offset = "0x1AC0690", VA = "0x1AC0690")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1AC06C0", Offset = "0x1AC06C0", VA = "0x1AC06C0")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1AC06F0", Offset = "0x1AC06F0", VA = "0x1AC06F0")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1AC0720", Offset = "0x1AC0720", VA = "0x1AC0720")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1AC0774", Offset = "0x1AC0774", VA = "0x1AC0774")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1AC07C8", Offset = "0x1AC07C8", VA = "0x1AC07C8")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1AC081C", Offset = "0x1AC081C", VA = "0x1AC081C")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1AC0870", Offset = "0x1AC0870", VA = "0x1AC0870")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x1AC0898", Offset = "0x1AC0898", VA = "0x1AC0898")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1AC0968", Offset = "0x1AC0968", VA = "0x1AC0968")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1AC09C0", Offset = "0x1AC09C0", VA = "0x1AC09C0")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1AC09E8", Offset = "0x1AC09E8", VA = "0x1AC09E8")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1AC0A8C", Offset = "0x1AC0A8C", VA = "0x1AC0A8C")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1AC0AB4", Offset = "0x1AC0AB4", VA = "0x1AC0AB4")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1AC0AD4", Offset = "0x1AC0AD4", VA = "0x1AC0AD4")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x1AC0AE0", Offset = "0x1AC0AE0", VA = "0x1AC0AE0")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1AC03A8", Offset = "0x1AC03A8", VA = "0x1AC03A8")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1AC0B08", Offset = "0x1AC0B08", VA = "0x1AC0B08")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1AC0B14", Offset = "0x1AC0B14", VA = "0x1AC0B14")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1AC0B30", Offset = "0x1AC0B30", VA = "0x1AC0B30")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1AC0B4C", Offset = "0x1AC0B4C", VA = "0x1AC0B4C")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x1AC0B74", Offset = "0x1AC0B74", VA = "0x1AC0B74")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1AC0B9C", Offset = "0x1AC0B9C", VA = "0x1AC0B9C")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1AC0D8C", Offset = "0x1AC0D8C", VA = "0x1AC0D8C")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}
}
[Token(Token = "0x2000132")]
public class LTDescrOptional
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x17000065")]
	public Transform toTrans
	{
		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1AC62DC", Offset = "0x1AC62DC", VA = "0x1AC62DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1AC62E4", Offset = "0x1AC62E4", VA = "0x1AC62E4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public Vector3 point
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1AC62EC", Offset = "0x1AC62EC", VA = "0x1AC62EC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1AC62F8", Offset = "0x1AC62F8", VA = "0x1AC62F8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public Vector3 axis
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1AC6304", Offset = "0x1AC6304", VA = "0x1AC6304")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1AC6310", Offset = "0x1AC6310", VA = "0x1AC6310")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public float lastVal
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1AC631C", Offset = "0x1AC631C", VA = "0x1AC631C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1AC6324", Offset = "0x1AC6324", VA = "0x1AC6324")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public Quaternion origRotation
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1AC632C", Offset = "0x1AC632C", VA = "0x1AC632C")]
		[CompilerGenerated]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1AC6338", Offset = "0x1AC6338", VA = "0x1AC6338")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public LTBezierPath path
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1AC6344", Offset = "0x1AC6344", VA = "0x1AC6344")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1AC634C", Offset = "0x1AC634C", VA = "0x1AC634C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public LTSpline spline
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1AC6354", Offset = "0x1AC6354", VA = "0x1AC6354")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1AC635C", Offset = "0x1AC635C", VA = "0x1AC635C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public LTRect ltRect
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1AC6364", Offset = "0x1AC6364", VA = "0x1AC6364")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1AC636C", Offset = "0x1AC636C", VA = "0x1AC636C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1AC6374", Offset = "0x1AC6374", VA = "0x1AC6374")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1AC637C", Offset = "0x1AC637C", VA = "0x1AC637C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1AC6384", Offset = "0x1AC6384", VA = "0x1AC6384")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1AC638C", Offset = "0x1AC638C", VA = "0x1AC638C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1AC6394", Offset = "0x1AC6394", VA = "0x1AC6394")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1AC639C", Offset = "0x1AC639C", VA = "0x1AC639C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1AC63A4", Offset = "0x1AC63A4", VA = "0x1AC63A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1AC63AC", Offset = "0x1AC63AC", VA = "0x1AC63AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1AC63B4", Offset = "0x1AC63B4", VA = "0x1AC63B4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1AC63BC", Offset = "0x1AC63BC", VA = "0x1AC63BC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1AC63C4", Offset = "0x1AC63C4", VA = "0x1AC63C4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1AC63CC", Offset = "0x1AC63CC", VA = "0x1AC63CC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1AC63D4", Offset = "0x1AC63D4", VA = "0x1AC63D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1AC63DC", Offset = "0x1AC63DC", VA = "0x1AC63DC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1AC63E4", Offset = "0x1AC63E4", VA = "0x1AC63E4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1AC63EC", Offset = "0x1AC63EC", VA = "0x1AC63EC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Action onComplete
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1AC63F4", Offset = "0x1AC63F4", VA = "0x1AC63F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1AC63FC", Offset = "0x1AC63FC", VA = "0x1AC63FC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1AC6404", Offset = "0x1AC6404", VA = "0x1AC6404")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1AC640C", Offset = "0x1AC640C", VA = "0x1AC640C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public object onCompleteParam
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1AC6414", Offset = "0x1AC6414", VA = "0x1AC6414")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1AC641C", Offset = "0x1AC641C", VA = "0x1AC641C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public object onUpdateParam
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1AC6424", Offset = "0x1AC6424", VA = "0x1AC6424")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1AC642C", Offset = "0x1AC642C", VA = "0x1AC642C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public Action onStart
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1AC6434", Offset = "0x1AC6434", VA = "0x1AC6434")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1AC643C", Offset = "0x1AC643C", VA = "0x1AC643C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1AC6444", Offset = "0x1AC6444", VA = "0x1AC6444")]
	public void reset()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1AC655C", Offset = "0x1AC655C", VA = "0x1AC655C")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x1AC66B0", Offset = "0x1AC66B0", VA = "0x1AC66B0")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000133")]
public class LTSeq
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x1700007A")]
	public int id
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1AC66B8", Offset = "0x1AC66B8", VA = "0x1AC66B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1AC66C8", Offset = "0x1AC66C8", VA = "0x1AC66C8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1AC66F8", Offset = "0x1AC66F8", VA = "0x1AC66F8")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1AC674C", Offset = "0x1AC674C", VA = "0x1AC674C")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1AC6800", Offset = "0x1AC6800", VA = "0x1AC6800")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1AC683C", Offset = "0x1AC683C", VA = "0x1AC683C")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1AC6860", Offset = "0x1AC6860", VA = "0x1AC6860")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1AC6938", Offset = "0x1AC6938", VA = "0x1AC6938")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1AC69CC", Offset = "0x1AC69CC", VA = "0x1AC69CC")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1AC6A50", Offset = "0x1AC6A50", VA = "0x1AC6A50")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1AC68D4", Offset = "0x1AC68D4", VA = "0x1AC68D4")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1AC6AF4", Offset = "0x1AC6AF4", VA = "0x1AC6AF4")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1AC6B40", Offset = "0x1AC6B40", VA = "0x1AC6B40")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1AC6B60", Offset = "0x1AC6B60", VA = "0x1AC6B60")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1AC6BF4", Offset = "0x1AC6BF4", VA = "0x1AC6BF4")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1AC6BF8", Offset = "0x1AC6BF8", VA = "0x1AC6BF8")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000134")]
public class AnimSoundArray : MonoBehaviour
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float activationChance;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClipArray[] audioClipArray;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1AC6C00", Offset = "0x1AC6C00", VA = "0x1AC6C00")]
	public void PlayArray(int arrayID)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1AC6C78", Offset = "0x1AC6C78", VA = "0x1AC6C78")]
	private AudioClip PickClip(int arrayID)
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1AC6CD8", Offset = "0x1AC6CD8", VA = "0x1AC6CD8")]
	public AnimSoundArray()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class AudioClipArray
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip[] audioClip;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1AC6CE8", Offset = "0x1AC6CE8", VA = "0x1AC6CE8")]
	public AudioClipArray()
	{
	}
}
[Token(Token = "0x2000136")]
[RequireComponent(typeof(AudioSource))]
public class audioSourceDelay : MonoBehaviour
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Leave off if behavior is called from another script")]
	public bool playOnStart;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If assigned, will calculate delay between audio sources to act as reflection")]
	public audioSourceDelay soundSource;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasPlayed;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float playTime;

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1AC6CF0", Offset = "0x1AC6CF0", VA = "0x1AC6CF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1AC6DE0", Offset = "0x1AC6DE0", VA = "0x1AC6DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1AC6F7C", Offset = "0x1AC6F7C", VA = "0x1AC6F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1AC6E74", Offset = "0x1AC6E74", VA = "0x1AC6E74")]
	private void CalculateDelay()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1AC6FC4", Offset = "0x1AC6FC4", VA = "0x1AC6FC4")]
	public audioSourceDelay()
	{
	}
}
[Token(Token = "0x2000137")]
public class AudioSourceRandomStart : MonoBehaviour
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Please only use Audio Sources with the same clip!")]
	public AudioSource[] audioSource;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float rangeMin;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float rangeMax;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Read only")]
	public float startPoint;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1AC6FCC", Offset = "0x1AC6FCC", VA = "0x1AC6FCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1AC6FE0", Offset = "0x1AC6FE0", VA = "0x1AC6FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1AC70B8", Offset = "0x1AC70B8", VA = "0x1AC70B8")]
	public AudioSourceRandomStart()
	{
	}
}
[Token(Token = "0x2000138")]
public class AudioSourceVolumeBehavior : MonoBehaviour
{
	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("If false, can only be activated via script")]
	[Header("Activation")]
	[Space(10f)]
	public bool activateOnTrigger;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Only if activate on trigger is true")]
	public string[] activationTags;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource[] audioSource;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Duration in seconds")]
	public float duration;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Curve")]
	[Tooltip("Volume behavior over time")]
	[Space(10f)]
	public AnimationCurve curve;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Sets maximum curve value to volume on Audio Source; recommended for turning sounds on")]
	public bool normalizeWithMaxVolume;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Tooltip("Sets maximum curve value to volume at time of activation; recommended for turning sounds off")]
	public bool normalizeWithCurrentVolume;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	[Header("State Conditions")]
	[Space(10f)]
	[Tooltip("Starts playing when volume leaves 0")]
	public bool playWhenLeavesZero;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	[Tooltip("If behavior ends at zero, Audio Source stops")]
	public bool stopIfEndsAtZero;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("If behavior ends at zero, Audio Source pauses")]
	public bool pauseIfEndsAtZero;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] originalVolume;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startTime;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float endTime;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> multiplier;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 curveValue;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool audioSourceWasOff;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool inAction;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1AC70C8", Offset = "0x1AC70C8", VA = "0x1AC70C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1AC74BC", Offset = "0x1AC74BC", VA = "0x1AC74BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1AC77D8", Offset = "0x1AC77D8", VA = "0x1AC77D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1AC7258", Offset = "0x1AC7258", VA = "0x1AC7258")]
	public void StartBehavior()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1AC71E0", Offset = "0x1AC71E0", VA = "0x1AC71E0")]
	private bool TagActivation(Collider colliderObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1AC7AFC", Offset = "0x1AC7AFC", VA = "0x1AC7AFC")]
	public AudioSourceVolumeBehavior()
	{
	}
}
[Token(Token = "0x2000139")]
public class RainDropSound : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip prevClip;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rippleEffect;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool avoidClipRepetition;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] clips;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioClip clipToPlay;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1AC7B8C", Offset = "0x1AC7B8C", VA = "0x1AC7B8C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1AC7D54", Offset = "0x1AC7D54", VA = "0x1AC7D54")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1AC7E08", Offset = "0x1AC7E08", VA = "0x1AC7E08")]
	private AudioClip PickClip()
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1AC7EF4", Offset = "0x1AC7EF4", VA = "0x1AC7EF4")]
	public RainDropSound()
	{
	}
}
[Token(Token = "0x200013A")]
[RequireComponent(typeof(AudioSource))]
public class whooshSound : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("Audio Source min distance overrides default of 15")]
	private bool aSourceOverride;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Tooltip("Rolloff min distance")]
	private float aSourceMinDist;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Rolloff min distance")]
	[SerializeField]
	private float compensation;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dist;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float oldDist;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float olderDist;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioClip currentClip;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool alreadyPlayed;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float duration;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float deactivateTime;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1AC7F84", Offset = "0x1AC7F84", VA = "0x1AC7F84")]
	private void Start()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1AC80F0", Offset = "0x1AC80F0", VA = "0x1AC80F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1AC81B0", Offset = "0x1AC81B0", VA = "0x1AC81B0")]
	private bool GetMinDistance()
	{
		return default(bool);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1AC8298", Offset = "0x1AC8298", VA = "0x1AC8298")]
	private void PlayClip()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1AC8338", Offset = "0x1AC8338", VA = "0x1AC8338")]
	public whooshSound()
	{
	}
}
[Token(Token = "0x200013B")]
[RequireComponent(typeof(AudioSource))]
[RequireComponent(typeof(BoxCollider))]
public class wooshSoundCollider : TriggerSound
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reactToSpeed;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitch;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Minimum speed for sound to happen")]
	[SerializeField]
	private float minSpeed;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float pitchMin;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float pitchMax;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float playerSpeed;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float speedRatio;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1AC8354", Offset = "0x1AC8354", VA = "0x1AC8354", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1AC8410", Offset = "0x1AC8410", VA = "0x1AC8410", Slot = "6")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1AC8550", Offset = "0x1AC8550", VA = "0x1AC8550")]
	private void PlayClip()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1AC8998", Offset = "0x1AC8998", VA = "0x1AC8998")]
	public wooshSoundCollider()
	{
	}
}
[Token(Token = "0x200013C")]
internal enum IsolatedArabicLetters
{
	[Token(Token = "0x40008D6")]
	Hamza = 65152,
	[Token(Token = "0x40008D7")]
	Alef = 65165,
	[Token(Token = "0x40008D8")]
	AlefHamza = 65155,
	[Token(Token = "0x40008D9")]
	WawHamza = 65157,
	[Token(Token = "0x40008DA")]
	AlefMaksoor = 65159,
	[Token(Token = "0x40008DB")]
	AlefMaksora = 65263,
	[Token(Token = "0x40008DC")]
	HamzaNabera = 65161,
	[Token(Token = "0x40008DD")]
	Ba = 65167,
	[Token(Token = "0x40008DE")]
	Ta = 65173,
	[Token(Token = "0x40008DF")]
	Tha2 = 65177,
	[Token(Token = "0x40008E0")]
	Jeem = 65181,
	[Token(Token = "0x40008E1")]
	H7aa = 65185,
	[Token(Token = "0x40008E2")]
	Khaa2 = 65189,
	[Token(Token = "0x40008E3")]
	Dal = 65193,
	[Token(Token = "0x40008E4")]
	Thal = 65195,
	[Token(Token = "0x40008E5")]
	Ra2 = 65197,
	[Token(Token = "0x40008E6")]
	Zeen = 65199,
	[Token(Token = "0x40008E7")]
	Seen = 65201,
	[Token(Token = "0x40008E8")]
	Sheen = 65205,
	[Token(Token = "0x40008E9")]
	S9a = 65209,
	[Token(Token = "0x40008EA")]
	Dha = 65213,
	[Token(Token = "0x40008EB")]
	T6a = 65217,
	[Token(Token = "0x40008EC")]
	T6ha = 65221,
	[Token(Token = "0x40008ED")]
	Ain = 65225,
	[Token(Token = "0x40008EE")]
	Gain = 65229,
	[Token(Token = "0x40008EF")]
	Fa = 65233,
	[Token(Token = "0x40008F0")]
	Gaf = 65237,
	[Token(Token = "0x40008F1")]
	Kaf = 65241,
	[Token(Token = "0x40008F2")]
	Lam = 65245,
	[Token(Token = "0x40008F3")]
	Meem = 65249,
	[Token(Token = "0x40008F4")]
	Noon = 65253,
	[Token(Token = "0x40008F5")]
	Ha = 65257,
	[Token(Token = "0x40008F6")]
	Waw = 65261,
	[Token(Token = "0x40008F7")]
	Ya = 65265,
	[Token(Token = "0x40008F8")]
	AlefMad = 65153,
	[Token(Token = "0x40008F9")]
	TaMarboota = 65171,
	[Token(Token = "0x40008FA")]
	PersianPe = 64342,
	[Token(Token = "0x40008FB")]
	PersianChe = 64378,
	[Token(Token = "0x40008FC")]
	PersianZe = 64394,
	[Token(Token = "0x40008FD")]
	PersianGaf = 64402,
	[Token(Token = "0x40008FE")]
	PersianGaf2 = 64398
}
[Token(Token = "0x200013D")]
internal enum GeneralArabicLetters
{
	[Token(Token = "0x4000900")]
	Hamza = 1569,
	[Token(Token = "0x4000901")]
	Alef = 1575,
	[Token(Token = "0x4000902")]
	AlefHamza = 1571,
	[Token(Token = "0x4000903")]
	WawHamza = 1572,
	[Token(Token = "0x4000904")]
	AlefMaksoor = 1573,
	[Token(Token = "0x4000905")]
	AlefMagsora = 1609,
	[Token(Token = "0x4000906")]
	HamzaNabera = 1574,
	[Token(Token = "0x4000907")]
	Ba = 1576,
	[Token(Token = "0x4000908")]
	Ta = 1578,
	[Token(Token = "0x4000909")]
	Tha2 = 1579,
	[Token(Token = "0x400090A")]
	Jeem = 1580,
	[Token(Token = "0x400090B")]
	H7aa = 1581,
	[Token(Token = "0x400090C")]
	Khaa2 = 1582,
	[Token(Token = "0x400090D")]
	Dal = 1583,
	[Token(Token = "0x400090E")]
	Thal = 1584,
	[Token(Token = "0x400090F")]
	Ra2 = 1585,
	[Token(Token = "0x4000910")]
	Zeen = 1586,
	[Token(Token = "0x4000911")]
	Seen = 1587,
	[Token(Token = "0x4000912")]
	Sheen = 1588,
	[Token(Token = "0x4000913")]
	S9a = 1589,
	[Token(Token = "0x4000914")]
	Dha = 1590,
	[Token(Token = "0x4000915")]
	T6a = 1591,
	[Token(Token = "0x4000916")]
	T6ha = 1592,
	[Token(Token = "0x4000917")]
	Ain = 1593,
	[Token(Token = "0x4000918")]
	Gain = 1594,
	[Token(Token = "0x4000919")]
	Fa = 1601,
	[Token(Token = "0x400091A")]
	Gaf = 1602,
	[Token(Token = "0x400091B")]
	Kaf = 1603,
	[Token(Token = "0x400091C")]
	Lam = 1604,
	[Token(Token = "0x400091D")]
	Meem = 1605,
	[Token(Token = "0x400091E")]
	Noon = 1606,
	[Token(Token = "0x400091F")]
	Ha = 1607,
	[Token(Token = "0x4000920")]
	Waw = 1608,
	[Token(Token = "0x4000921")]
	Ya = 1610,
	[Token(Token = "0x4000922")]
	AlefMad = 1570,
	[Token(Token = "0x4000923")]
	TaMarboota = 1577,
	[Token(Token = "0x4000924")]
	PersianPe = 1662,
	[Token(Token = "0x4000925")]
	PersianChe = 1670,
	[Token(Token = "0x4000926")]
	PersianZe = 1688,
	[Token(Token = "0x4000927")]
	PersianGaf = 1711,
	[Token(Token = "0x4000928")]
	PersianGaf2 = 1705
}
[Token(Token = "0x200013E")]
internal class ArabicMapping
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int from;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int to;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1AC89B8", Offset = "0x1AC89B8", VA = "0x1AC89B8")]
	public ArabicMapping(int from, int to)
	{
	}
}
[Token(Token = "0x200013F")]
internal class ArabicTable
{
	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ArabicMapping> mapList;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ArabicTable arabicMapper;

	[Token(Token = "0x1700007B")]
	internal static ArabicTable ArabicMapper
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1ACA278", Offset = "0x1ACA278", VA = "0x1ACA278")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1AC89E4", Offset = "0x1AC89E4", VA = "0x1AC89E4")]
	private ArabicTable()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1ACA2FC", Offset = "0x1ACA2FC", VA = "0x1ACA2FC")]
	internal int Convert(int toBeConverted)
	{
		return default(int);
	}
}
[Token(Token = "0x2000140")]
internal class TashkeelLocation
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char tashkeel;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int position;

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1ACA490", Offset = "0x1ACA490", VA = "0x1ACA490")]
	public TashkeelLocation(char tashkeel, int position)
	{
	}
}
[Token(Token = "0x2000141")]
internal class ArabicFixerTool
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static bool showTashkeel;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	internal static bool useHinduNumbers;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1ACA4C0", Offset = "0x1ACA4C0", VA = "0x1ACA4C0")]
	internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1ACA864", Offset = "0x1ACA864", VA = "0x1ACA864")]
	internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1ACAA8C", Offset = "0x1ACAA8C", VA = "0x1ACAA8C")]
	internal static string FixLine(string str)
	{
		return null;
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1ACBA94", Offset = "0x1ACBA94", VA = "0x1ACBA94")]
	internal static bool IsIgnoredCharacter(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1ACC080", Offset = "0x1ACC080", VA = "0x1ACC080")]
	internal static bool IsLeadingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1ACBF30", Offset = "0x1ACBF30", VA = "0x1ACBF30")]
	internal static bool IsFinishingLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1ACBBD8", Offset = "0x1ACBBD8", VA = "0x1ACBBD8")]
	internal static bool IsMiddleLetter(char[] letters, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1ACC378", Offset = "0x1ACC378", VA = "0x1ACC378")]
	public ArabicFixerTool()
	{
	}
}
[Token(Token = "0x2000142")]
public enum LocalizationLanguages
{
	[Token(Token = "0x4000932")]
	RU,
	[Token(Token = "0x4000933")]
	KO,
	[Token(Token = "0x4000934")]
	ZH_CN,
	[Token(Token = "0x4000935")]
	JA,
	[Token(Token = "0x4000936")]
	FR,
	[Token(Token = "0x4000937")]
	DE,
	[Token(Token = "0x4000938")]
	ES,
	[Token(Token = "0x4000939")]
	PT_BR,
	[Token(Token = "0x400093A")]
	EN
}
[Token(Token = "0x2000143")]
public enum LocalizationSheets
{

}
[Token(Token = "0x2000144")]
public enum LocalizationKeys
{
	[Token(Token = "0x400093D")]
	USER,
	[Token(Token = "0x400093E")]
	FRIEND_MULTIPLAYER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400093F")]
	SLOWMOTION_TUTORIAL,
	[Token(Token = "0x4000940")]
	SELFIE_WITH_FRIEND_ACHIEVEMENT,
	[Token(Token = "0x4000941")]
	LINE_13_WOOHOO,
	[Token(Token = "0x4000942")]
	REALISTIC,
	[Token(Token = "0x4000943")]
	LOST_FOREST_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000944")]
	WOULD_YOU_LIKE_TO_EXIT_TUTORIAL,
	[Token(Token = "0x4000945")]
	MIC_PERMISSION_TITLE,
	[Token(Token = "0x4000946")]
	LEADERBOARD_ACHIEVEMENT,
	[Token(Token = "0x4000947")]
	HITS,
	[Token(Token = "0x4000948")]
	LINE_13_GREAT_LETS_MOVE_ON,
	[Token(Token = "0x4000949")]
	LINE_18_DO_YOU_WANT_TO_TAKE,
	[Token(Token = "0x400094A")]
	HIGH,
	[Token(Token = "0x400094B")]
	LINE_22_FANTASTIC,
	[Token(Token = "0x400094C")]
	ANSWER_LATER,
	[Token(Token = "0x400094D")]
	GREAT_CANYON_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400094E")]
	DREAD_BLOOD_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x400094F")]
	ARMAGEDDON_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000950")]
	LINE_3_IM_GOING_TO_PUT,
	[Token(Token = "0x4000951")]
	RESTART_ON_TUTORIAL,
	[Token(Token = "0x4000952")]
	EXIT,
	[Token(Token = "0x4000953")]
	DAILY_OFFER,
	[Token(Token = "0x4000954")]
	LINE_19_5_REMEMBER_YOU_CAN_TURN_OFF,
	[Token(Token = "0x4000955")]
	LINE_7_ILL_ALSO_INCREASE,
	[Token(Token = "0x4000956")]
	BEST_TIME,
	[Token(Token = "0x4000957")]
	TROPICAL_ISLAND_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000958")]
	ROCK_FALLS_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000959")]
	CAMERA_SMOOTHING,
	[Token(Token = "0x400095A")]
	MIC_PERMISSION_DESC_MULTIPLAYER,
	[Token(Token = "0x400095B")]
	DREAD_BLOOD_SMALL_DESCRIPTION,
	[Token(Token = "0x400095C")]
	VR_ARCADES,
	[Token(Token = "0x400095D")]
	VISUALS,
	[Token(Token = "0x400095E")]
	LINE_20_OK_QUESTION_MARK,
	[Token(Token = "0x400095F")]
	LINE_22_HOPE_YOU_CAN_ENJOY,
	[Token(Token = "0x4000960")]
	DISCORD_MESSAGE,
	[Token(Token = "0x4000961")]
	SALE,
	[Token(Token = "0x4000962")]
	YAW_VR,
	[Token(Token = "0x4000963")]
	GAME_OVER,
	[Token(Token = "0x4000964")]
	LINE_17_PURE_ADRENALIN,
	[Token(Token = "0x4000965")]
	RETRIEVE_PURCHASES,
	[Token(Token = "0x4000966")]
	AMAZING_TIME,
	[Token(Token = "0x4000967")]
	REMOTE_PLAYER_PASSED_CHECKPOINT,
	[Token(Token = "0x4000968")]
	LINE_7_I_RECOMEND_THAT_YOU,
	[Token(Token = "0x4000969")]
	HITTING_STREAK,
	[Token(Token = "0x400096A")]
	FIRE_RATE,
	[Token(Token = "0x400096B")]
	NEW_CARS_GAME_MODES_AND_COMPANIONS,
	[Token(Token = "0x400096C")]
	STEAM_STATUS_CASUAL,
	[Token(Token = "0x400096D")]
	LEADERBOARD,
	[Token(Token = "0x400096E")]
	WYVERN_SIEGE_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400096F")]
	SAVE_UP_TO,
	[Token(Token = "0x4000970")]
	RELOAD,
	[Token(Token = "0x4000971")]
	DLC_BUNDLE_DESCRIPTION,
	[Token(Token = "0x4000972")]
	ONLINE_FRIENDS,
	[Token(Token = "0x4000973")]
	LOST_FOREST_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000974")]
	ARMAGEDDON_SMALL_DESCRIPTION,
	[Token(Token = "0x4000975")]
	LINE_11_HOW_ARE_YOU_FEELING,
	[Token(Token = "0x4000976")]
	ENJOY_ALL_THE_ROLLER_COASTERS,
	[Token(Token = "0x4000977")]
	AUTO_START_STOP_SIMULATOR,
	[Token(Token = "0x4000978")]
	HALLOWEEN_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000979")]
	FRIEND_PAUSE,
	[Token(Token = "0x400097A")]
	SOUND,
	[Token(Token = "0x400097B")]
	IP_ADDRESS,
	[Token(Token = "0x400097C")]
	RESUME,
	[Token(Token = "0x400097D")]
	SET_AS_JOINABLE,
	[Token(Token = "0x400097E")]
	INTENSITY,
	[Token(Token = "0x400097F")]
	TWILIGHT_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000980")]
	LINE_21_AND_NOW_THINGS_ARE_ABOUT,
	[Token(Token = "0x4000981")]
	TAKE_SELFIE_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000982")]
	OF,
	[Token(Token = "0x4000983")]
	LINE_16_OK_HOPE_TO_SEE,
	[Token(Token = "0x4000984")]
	SHOOTER,
	[Token(Token = "0x4000985")]
	BREATHTAKING_ROLLER_COASTERS,
	[Token(Token = "0x4000986")]
	OFFER_OF_DAY_MESSAGE,
	[Token(Token = "0x4000987")]
	TROPICAL_ISLAND_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000988")]
	LINE_EACH_ONE_HAS_AN_INTENSITY,
	[Token(Token = "0x4000989")]
	SHORT_TUTORIAL_PAUSE,
	[Token(Token = "0x400098A")]
	DISCONNECTED,
	[Token(Token = "0x400098B")]
	SHOW_TUTORIAL_MESSAGE_TITLE,
	[Token(Token = "0x400098C")]
	HAUNTED_CASTLE_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400098D")]
	SPACE_STATION_SMALL_DESCRIPTION,
	[Token(Token = "0x400098E")]
	OASIS_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400098F")]
	SHOW_CROSSHAIR,
	[Token(Token = "0x4000990")]
	LEADERBOARD_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000991")]
	RACE_ORIGINAL,
	[Token(Token = "0x4000992")]
	MULTIPLAYER,
	[Token(Token = "0x4000993")]
	BEST_DEAL,
	[Token(Token = "0x4000994")]
	SUCCESSFUL_RETRIEVED,
	[Token(Token = "0x4000995")]
	LINE_4_AND_AT_ANY_SIGN,
	[Token(Token = "0x4000996")]
	YES_BEST_DEAL,
	[Token(Token = "0x4000997")]
	HAUNTED_CASTLE_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000998")]
	LINE_20_THAT_IS_FANTASTIC,
	[Token(Token = "0x4000999")]
	INSTANT_ACCESS_TO_ALL_ROLLER_COASTERS,
	[Token(Token = "0x400099A")]
	QUALITY_LEVEL,
	[Token(Token = "0x400099B")]
	REWARDS,
	[Token(Token = "0x400099C")]
	NO_THANKS,
	[Token(Token = "0x400099D")]
	DIED_HUNDRED_TIMES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x400099E")]
	LINE_5_HOW_ARE_YOU_FELLING,
	[Token(Token = "0x400099F")]
	MULTIPLAYER_OFFILINE,
	[Token(Token = "0x40009A0")]
	LOST_FOREST_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x40009A1")]
	DREAD_BLOOD_FULL_DESCRIPTION,
	[Token(Token = "0x40009A2")]
	FAVORITE_GAME_MODE,
	[Token(Token = "0x40009A3")]
	DREAD_BLOOD_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x40009A4")]
	RACE,
	[Token(Token = "0x40009A5")]
	SNOW_LAND_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009A6")]
	ANSWER_NO,
	[Token(Token = "0x40009A7")]
	AUTO_EYE_LEVEL_ON_PLAY,
	[Token(Token = "0x40009A8")]
	POSITION,
	[Token(Token = "0x40009A9")]
	ROCK_FALLS_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009AA")]
	TUWHENA_VOLCANO_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009AB")]
	WYVERN_SIEGE_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009AC")]
	SPACE_STATION_FULL_DESCRIPTION,
	[Token(Token = "0x40009AD")]
	HAUNTED_CASTLE_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x40009AE")]
	LINE_17_THIS_ROLLER_COASTER_HAS,
	[Token(Token = "0x40009AF")]
	TWILIGHT_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009B0")]
	SELECT_FRIENDS,
	[Token(Token = "0x40009B1")]
	RETURN_PLAY_AREA_DESC,
	[Token(Token = "0x40009B2")]
	TUWHENA_VOLCANO_SMALL_DESCRIPTION,
	[Token(Token = "0x40009B3")]
	OASIS_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009B4")]
	SIX,
	[Token(Token = "0x40009B5")]
	LINE_BYE,
	[Token(Token = "0x40009B6")]
	SHOOTER_GLOBAL,
	[Token(Token = "0x40009B7")]
	SECOND,
	[Token(Token = "0x40009B8")]
	SEARCH_SOMEONE,
	[Token(Token = "0x40009B9")]
	YOU_MISSED_A_CHECKPOINT,
	[Token(Token = "0x40009BA")]
	WEAPON_BUY_TEXT,
	[Token(Token = "0x40009BB")]
	ANSWER_NO_CRAZY,
	[Token(Token = "0x40009BC")]
	NINE,
	[Token(Token = "0x40009BD")]
	DERAIL,
	[Token(Token = "0x40009BE")]
	LICENSE_REQUEST_CONFIRM,
	[Token(Token = "0x40009BF")]
	TENACIOUS_SHOOTER_TITLE_ACHIEVEMENT,
	[Token(Token = "0x40009C0")]
	LINE_15_I_RECOMEND_THAT_YOU,
	[Token(Token = "0x40009C1")]
	ROLLER_COASTER_TIME,
	[Token(Token = "0x40009C2")]
	OASIS_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009C3")]
	LINE_1_WELCOME_TO_EPIC_ROLLERCOASTERS,
	[Token(Token = "0x40009C4")]
	LINE_6_COOL_LETS_TRY,
	[Token(Token = "0x40009C5")]
	SNOW_LAND_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009C6")]
	SHOW_TUTORIAL_CONTROLLER,
	[Token(Token = "0x40009C7")]
	LOW,
	[Token(Token = "0x40009C8")]
	START,
	[Token(Token = "0x40009C9")]
	WYVERN_SIEGE_SMALL_DESCRIPTION,
	[Token(Token = "0x40009CA")]
	SECRET_CAVE_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009CB")]
	MULTIPLAYER_WAITING_FOR_FRIENDS,
	[Token(Token = "0x40009CC")]
	FAVORITE_COASTER,
	[Token(Token = "0x40009CD")]
	TARGETS_DESTROYED,
	[Token(Token = "0x40009CE")]
	DREAD_BLOOD_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009CF")]
	ARMAGEDDON_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x40009D0")]
	ARCADE_TUTORIAL,
	[Token(Token = "0x40009D1")]
	CART,
	[Token(Token = "0x40009D2")]
	ARCADE_MODE_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009D3")]
	LINE_5_THAT_IS_HOW_ITS_DONE,
	[Token(Token = "0x40009D4")]
	DOWNLOAD,
	[Token(Token = "0x40009D5")]
	ACHIEVEMENTS_REACHED,
	[Token(Token = "0x40009D6")]
	FAVORITE_CART,
	[Token(Token = "0x40009D7")]
	STONEHENGE_SMALL_DESCRIPTION,
	[Token(Token = "0x40009D8")]
	MEDIUM,
	[Token(Token = "0x40009D9")]
	TIMES,
	[Token(Token = "0x40009DA")]
	SNOW_LAND_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009DB")]
	NEON_RIDER_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x40009DC")]
	GREAT_CANYON_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x40009DD")]
	LINE_21_SEE_YOU,
	[Token(Token = "0x40009DE")]
	HAUNTED_CASTLE_FULL_DESCRIPTION,
	[Token(Token = "0x40009DF")]
	SHOW_SELFIESTICK_TUTORIAL,
	[Token(Token = "0x40009E0")]
	OASIS_FULL_DESCRIPTION,
	[Token(Token = "0x40009E1")]
	SOUND_TRACK_VOLUME,
	[Token(Token = "0x40009E2")]
	NO_NOTIFICATION,
	[Token(Token = "0x40009E3")]
	GOOD_LUCK,
	[Token(Token = "0x40009E4")]
	SPEED,
	[Token(Token = "0x40009E5")]
	ZERO,
	[Token(Token = "0x40009E6")]
	TUWHENA_VOLCANO_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009E7")]
	SCENARIO,
	[Token(Token = "0x40009E8")]
	LINE_3_CROSS_HAIR_OR_AT_LEAST,
	[Token(Token = "0x40009E9")]
	COLLECTIBLES,
	[Token(Token = "0x40009EA")]
	ROSTER,
	[Token(Token = "0x40009EB")]
	FREE,
	[Token(Token = "0x40009EC")]
	MULTIPLAYER_ENTERING_ROOM,
	[Token(Token = "0x40009ED")]
	STATUS,
	[Token(Token = "0x40009EE")]
	LICENSE_DESCRIPTION,
	[Token(Token = "0x40009EF")]
	YOUR_BEST_TIME,
	[Token(Token = "0x40009F0")]
	LINE_4_PUSH_THE_SAFETY_BAR,
	[Token(Token = "0x40009F1")]
	NEXT,
	[Token(Token = "0x40009F2")]
	HOURS,
	[Token(Token = "0x40009F3")]
	SCORE,
	[Token(Token = "0x40009F4")]
	REMOTE_JUST_JOINED_YOU,
	[Token(Token = "0x40009F5")]
	CONGRATULATIONS,
	[Token(Token = "0x40009F6")]
	ARMAGEDDON_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x40009F7")]
	PROFESSIONAL_RUNNER_TITLE_ACHIEVEMENT,
	[Token(Token = "0x40009F8")]
	REALPLACES_BUNDLE_DESCRIPTION,
	[Token(Token = "0x40009F9")]
	LOST_FOREST_FULL_DESCRIPTION,
	[Token(Token = "0x40009FA")]
	LINE_12_WOOHOO_GREAT,
	[Token(Token = "0x40009FB")]
	LICENSE_REQUEST,
	[Token(Token = "0x40009FC")]
	LINE_20_I_RECOMEND_THAT_YOU_USE,
	[Token(Token = "0x40009FD")]
	LICENSE_UPDATE,
	[Token(Token = "0x40009FE")]
	SELFIESTICK_TUTORIAL,
	[Token(Token = "0x40009FF")]
	FREQUENCY_DESCRIPTION,
	[Token(Token = "0x4000A00")]
	MULTIPLAYER_FOUND_SOMEONE,
	[Token(Token = "0x4000A01")]
	THREE,
	[Token(Token = "0x4000A02")]
	LINE_9_DO_YOU_WANT_TO_TRY,
	[Token(Token = "0x4000A03")]
	NO_DATA_YET,
	[Token(Token = "0x4000A04")]
	LINE_2_SO_ILL_HELP,
	[Token(Token = "0x4000A05")]
	LINE_19_REMEMBER_YOU_CAN_REENABLE,
	[Token(Token = "0x4000A06")]
	TWILIGHT_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A07")]
	REALISTIC_BUNDLE_TITLE,
	[Token(Token = "0x4000A08")]
	DOWNLOAD_FROM_OCULUS_SERVER,
	[Token(Token = "0x4000A09")]
	LINE_17_HOW_ARE_YOU_FEELING,
	[Token(Token = "0x4000A0A")]
	SEE_MORE,
	[Token(Token = "0x4000A0B")]
	MULTIPLAYER_WAITING_FOR_SOMEONE,
	[Token(Token = "0x4000A0C")]
	FRIEND_MULTIPLAYER_ACHIEVEMENT,
	[Token(Token = "0x4000A0D")]
	MULTIPLAYER_OFFILINE_MESSAGE,
	[Token(Token = "0x4000A0E")]
	RESTARTING_FROM_LAST_VALID_POINT,
	[Token(Token = "0x4000A0F")]
	TIME_SPENT_ON_RIDES,
	[Token(Token = "0x4000A10")]
	FANTASY_BUNDLE_TITLE,
	[Token(Token = "0x4000A11")]
	CONTINUE_YOUR_SEARCH_FOR_SPEED_AND_ADRENALINE,
	[Token(Token = "0x4000A12")]
	FIRE_RANGE,
	[Token(Token = "0x4000A13")]
	SCENARIO_DETAIL_TOP_SPEED,
	[Token(Token = "0x4000A14")]
	LINE_3_AND_AT_ANY_SIGN,
	[Token(Token = "0x4000A15")]
	MINUTE,
	[Token(Token = "0x4000A16")]
	TUWHENA_VOLCANO_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A17")]
	ENABLE_B_HAPTICS,
	[Token(Token = "0x4000A18")]
	LICENSE_NOT_FOUND,
	[Token(Token = "0x4000A19")]
	CONSECUTIVE_TARGETS,
	[Token(Token = "0x4000A1A")]
	SETTINGS,
	[Token(Token = "0x4000A1B")]
	PLAY_GAME,
	[Token(Token = "0x4000A1C")]
	T_REX_KINGDOM_FULL_DESCRIPTION,
	[Token(Token = "0x4000A1D")]
	CHECK_YOUR_INTERNET_CONNECTION,
	[Token(Token = "0x4000A1E")]
	PENALTIES,
	[Token(Token = "0x4000A1F")]
	CORRUPTED_FILE,
	[Token(Token = "0x4000A20")]
	LINE_7_JUST_LIKE_THE_ONES,
	[Token(Token = "0x4000A21")]
	TWILIGHT_SMALL_DESCRIPTION,
	[Token(Token = "0x4000A22")]
	YOU_ARE_CONNECTED_WITH,
	[Token(Token = "0x4000A23")]
	WOULD_YOU_LIKE_TO_EXIT,
	[Token(Token = "0x4000A24")]
	LINE_2_BUT_FIRST,
	[Token(Token = "0x4000A25")]
	NORTH_POLE_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000A26")]
	MAX_HITS_IN_A_ROW,
	[Token(Token = "0x4000A27")]
	ROLLERCOASTER_CHAINS_VOLUME,
	[Token(Token = "0x4000A28")]
	UNLOCKED,
	[Token(Token = "0x4000A29")]
	HALLOWEEN_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A2A")]
	LINE_2_OUR_EXPERIENCES,
	[Token(Token = "0x4000A2B")]
	ACCEPTING_INVITATION,
	[Token(Token = "0x4000A2C")]
	TROPICAL_ISLAND_FULL_DESCRIPTION,
	[Token(Token = "0x4000A2D")]
	SELECT_CART,
	[Token(Token = "0x4000A2E")]
	TRY_AGAIN_IN_OTHER_MODE,
	[Token(Token = "0x4000A2F")]
	WEAPON,
	[Token(Token = "0x4000A30")]
	YOU_WIN,
	[Token(Token = "0x4000A31")]
	SPACE_STATION_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A32")]
	LICENSE_ALLOWED,
	[Token(Token = "0x4000A33")]
	HALLOWEEN_SMALL_DESCRIPTION,
	[Token(Token = "0x4000A34")]
	COMPANION_CHARACTER,
	[Token(Token = "0x4000A35")]
	DREAD_BLOOD_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A36")]
	WIN_HUNDRED_TIMES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A37")]
	COMFORTABLE,
	[Token(Token = "0x4000A38")]
	ANSWER_LETSGO,
	[Token(Token = "0x4000A39")]
	TUWHENA_VOLCANO_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A3A")]
	ARE_YOU_READY,
	[Token(Token = "0x4000A3B")]
	WAITING_FOR_FRIEND_TO_CONNECT,
	[Token(Token = "0x4000A3C")]
	NEON_RIDER_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A3D")]
	OCULUS_SERVER_TIMEOUT,
	[Token(Token = "0x4000A3E")]
	PROFESSIONAL_RUNNER_DESCRIPTION_ACHIEVEMENT,
	[Token(Token = "0x4000A3F")]
	VERSION_WELCOME_MESSAGE,
	[Token(Token = "0x4000A40")]
	MENU_SELECTION,
	[Token(Token = "0x4000A41")]
	LINE_4_IM_GOING_TO_PUT,
	[Token(Token = "0x4000A42")]
	LINE_15_HMM,
	[Token(Token = "0x4000A43")]
	WYVERN_SIEGE_FULL_DESCRIPTION,
	[Token(Token = "0x4000A44")]
	STOP,
	[Token(Token = "0x4000A45")]
	MAYBE_LATER,
	[Token(Token = "0x4000A46")]
	HELMET_ONLY_DESCRIPTION,
	[Token(Token = "0x4000A47")]
	DOWNLOAD_FROM_ALTERNATIVE_SERVER,
	[Token(Token = "0x4000A48")]
	FIVE,
	[Token(Token = "0x4000A49")]
	UDP_PORT,
	[Token(Token = "0x4000A4A")]
	LINE_15_ROLLER_COASTERS_ARE,
	[Token(Token = "0x4000A4B")]
	TWILIGHT_FULL_DESCRIPTION,
	[Token(Token = "0x4000A4C")]
	FOR_ONLY_PRICE,
	[Token(Token = "0x4000A4D")]
	VELOCITY,
	[Token(Token = "0x4000A4E")]
	TROPICAL_ISLAND_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A4F")]
	GREAT_SCORE,
	[Token(Token = "0x4000A50")]
	WOOOO,
	[Token(Token = "0x4000A51")]
	ROCK_FALLS_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A52")]
	YES_ALL_ROLLER_COASTERS,
	[Token(Token = "0x4000A53")]
	SECRET_CAVE_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A54")]
	REALISTIC_BUNDLE_DESCRIPTION,
	[Token(Token = "0x4000A55")]
	CONNECT,
	[Token(Token = "0x4000A56")]
	RESTART_NEEDED,
	[Token(Token = "0x4000A57")]
	SHOTS_MISSED,
	[Token(Token = "0x4000A58")]
	LINE_17_GEEEE,
	[Token(Token = "0x4000A59")]
	STEAM_STATUS_SHOOTER,
	[Token(Token = "0x4000A5A")]
	LINE_7_HM_OK,
	[Token(Token = "0x4000A5B")]
	GREAT_TO_SEE_YOU_AGAIN,
	[Token(Token = "0x4000A5C")]
	LINE_8_DONE,
	[Token(Token = "0x4000A5D")]
	LICENSE_REQUEST_DESCRIPTION,
	[Token(Token = "0x4000A5E")]
	OFFER_OF_DAY_MESSAGE_MORE_DESCRIPTION,
	[Token(Token = "0x4000A5F")]
	ANSWER_MOVEON,
	[Token(Token = "0x4000A60")]
	APPLY,
	[Token(Token = "0x4000A61")]
	LICENSE_NOT_ALLOWED,
	[Token(Token = "0x4000A62")]
	LINE_11_THAT_WAS_AMAZING_UH,
	[Token(Token = "0x4000A63")]
	COMPANION_CHARACTER_TITLE,
	[Token(Token = "0x4000A64")]
	NO_DATA_AVAILABLE,
	[Token(Token = "0x4000A65")]
	GREAT_CANYON_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000A66")]
	CLICK_TO_SEE_ON_STORE,
	[Token(Token = "0x4000A67")]
	TWILIGHT_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A68")]
	NO_ITEMS_WERE_PURCHASED,
	[Token(Token = "0x4000A69")]
	CANDYLAND_SMALL_DESCRIPTION,
	[Token(Token = "0x4000A6A")]
	ENABLE_VR_ARCADE_MODE,
	[Token(Token = "0x4000A6B")]
	CREATE_ROOM_FAILED,
	[Token(Token = "0x4000A6C")]
	SNOWLAND_FULL_DESCRIPTION,
	[Token(Token = "0x4000A6D")]
	TARGETS_MISSED,
	[Token(Token = "0x4000A6E")]
	TENACIOUS_RACER_DESCRIPTION_ACHIEVEMENT,
	[Token(Token = "0x4000A6F")]
	SPACE_STATION_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A70")]
	TELEMETRY,
	[Token(Token = "0x4000A71")]
	OASIS_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A72")]
	SOMEONE_IS_THE_OWNER,
	[Token(Token = "0x4000A73")]
	SECRET_CAVE_SMALL_DESCRIPTION,
	[Token(Token = "0x4000A74")]
	WOO_SEE_YOU,
	[Token(Token = "0x4000A75")]
	HELMET_BLINDER_DESCRIPTION,
	[Token(Token = "0x4000A76")]
	RIDES_TAKEN,
	[Token(Token = "0x4000A77")]
	TUTORIAL,
	[Token(Token = "0x4000A78")]
	NORTH_POLE_FULL_DESCRIPTION,
	[Token(Token = "0x4000A79")]
	NORTH_POLE_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A7A")]
	MOTION_SICKNESS_TUTORIAL,
	[Token(Token = "0x4000A7B")]
	LINE_14_LETS_PUT_THOSE_BLINDERS,
	[Token(Token = "0x4000A7C")]
	LICENSE_SEARCHING,
	[Token(Token = "0x4000A7D")]
	ONE,
	[Token(Token = "0x4000A7E")]
	LINE_15_DO_YOU_WANT_TO_CONTINUE,
	[Token(Token = "0x4000A7F")]
	STEAM_STATUS_RACE,
	[Token(Token = "0x4000A80")]
	EXIT_LOBBY,
	[Token(Token = "0x4000A81")]
	DISCONNECTING_FROM_MULTIPLAYER,
	[Token(Token = "0x4000A82")]
	GREAT_CANYON_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A83")]
	SELECT_GAME_MODE,
	[Token(Token = "0x4000A84")]
	LINE_21_FASTEN_YOUR_SEAT_BELT,
	[Token(Token = "0x4000A85")]
	LINE_4_COOL,
	[Token(Token = "0x4000A86")]
	SECRET_CAVE_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A87")]
	SAVE,
	[Token(Token = "0x4000A88")]
	USER_CANCELED,
	[Token(Token = "0x4000A89")]
	FREQUENCY,
	[Token(Token = "0x4000A8A")]
	I_AM_SURE_YOU_WILL_DO_BETTER,
	[Token(Token = "0x4000A8B")]
	INVITED,
	[Token(Token = "0x4000A8C")]
	FRIENDS,
	[Token(Token = "0x4000A8D")]
	ROCK_FALLS_DIFFERENT_CAR_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000A8E")]
	MULTIPLAYER_SETTINGS,
	[Token(Token = "0x4000A8F")]
	PHOTO_ALBUM,
	[Token(Token = "0x4000A90")]
	LINE_14_HMM,
	[Token(Token = "0x4000A91")]
	LINE_1_FEELING_THE_ADRENALIN,
	[Token(Token = "0x4000A92")]
	CHOOSE,
	[Token(Token = "0x4000A93")]
	ALLOW_HAPTICS_FEEDBACK,
	[Token(Token = "0x4000A94")]
	NO_PHOTOS_FOUND,
	[Token(Token = "0x4000A95")]
	LINE_1_CRAZIEST_RAILS,
	[Token(Token = "0x4000A96")]
	NOBODY,
	[Token(Token = "0x4000A97")]
	HALLOWEEN_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000A98")]
	SHOOTER_DESCRIPTION,
	[Token(Token = "0x4000A99")]
	RECORDS,
	[Token(Token = "0x4000A9A")]
	ONLY_OWNER_CAN_PLAY,
	[Token(Token = "0x4000A9B")]
	SNOWLAND_SMALL_DESCRIPTION,
	[Token(Token = "0x4000A9C")]
	LINE_5_WOOOO_SEE,
	[Token(Token = "0x4000A9D")]
	LINE_22_SEE_YOU,
	[Token(Token = "0x4000A9E")]
	MINUTES,
	[Token(Token = "0x4000A9F")]
	LINE_16_HMM,
	[Token(Token = "0x4000AA0")]
	DIED_HUNDRED_TIMES_ACHIEVEMENT,
	[Token(Token = "0x4000AA1")]
	LINE_12_WE_ARE_READY_TO_TAKE,
	[Token(Token = "0x4000AA2")]
	WIN_HUNDRED_TIMES_ACHIEVEMENT,
	[Token(Token = "0x4000AA3")]
	ORDER_BY,
	[Token(Token = "0x4000AA4")]
	NEON_RIDER_SMALL_DESCRIPTION,
	[Token(Token = "0x4000AA5")]
	HALLOWEEN_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000AA6")]
	ANSWER_BLINDERS,
	[Token(Token = "0x4000AA7")]
	LOST_FOREST_SMALL_DESCRIPTION,
	[Token(Token = "0x4000AA8")]
	MY_SCORE_IS,
	[Token(Token = "0x4000AA9")]
	LINE_19_AMAZING,
	[Token(Token = "0x4000AAA")]
	SECRET_CAVE_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000AAB")]
	HAUNTED_CASTLE_SMALL_DESCRIPTION,
	[Token(Token = "0x4000AAC")]
	ANYONE_CAN_ENTER_ROOM,
	[Token(Token = "0x4000AAD")]
	SOME_PLAYERS_MUST_BUY,
	[Token(Token = "0x4000AAE")]
	SHOOTER_MODE_ACHIEVEMENT,
	[Token(Token = "0x4000AAF")]
	LEADER,
	[Token(Token = "0x4000AB0")]
	OK,
	[Token(Token = "0x4000AB1")]
	DELETE,
	[Token(Token = "0x4000AB2")]
	LINE_19_5_AMAZING,
	[Token(Token = "0x4000AB3")]
	NEON_RIDER_FULL_DESCRIPTION,
	[Token(Token = "0x4000AB4")]
	STEAM_STATUS_MATCHMAKING,
	[Token(Token = "0x4000AB5")]
	HIDE_ADVANCED_OPTIONS,
	[Token(Token = "0x4000AB6")]
	NO_OFFER_TODAY,
	[Token(Token = "0x4000AB7")]
	HELLO,
	[Token(Token = "0x4000AB8")]
	YOU_DONT_HAVE_ANY_FRIEND_ONLINE,
	[Token(Token = "0x4000AB9")]
	NO,
	[Token(Token = "0x4000ABA")]
	YOU_LOSE,
	[Token(Token = "0x4000ABB")]
	LINE_15_IF_YOU_FEEL_LIKE,
	[Token(Token = "0x4000ABC")]
	DELETE_ALL,
	[Token(Token = "0x4000ABD")]
	ROCK_FALLS_DIFFERENT_CAR_ACHIEVEMENT,
	[Token(Token = "0x4000ABE")]
	INVITE_FRIENDS,
	[Token(Token = "0x4000ABF")]
	SHOW_CROSSHAIR_TUTORIAL,
	[Token(Token = "0x4000AC0")]
	HI,
	[Token(Token = "0x4000AC1")]
	HALLOWEEN_FULL_DESCRIPTION,
	[Token(Token = "0x4000AC2")]
	TROPICAL_ISLAND_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000AC3")]
	CAR_BUY_TEXT,
	[Token(Token = "0x4000AC4")]
	CAMERA,
	[Token(Token = "0x4000AC5")]
	FOUR,
	[Token(Token = "0x4000AC6")]
	TENACIOUS_SHOOTER_DESCRIPTION_ACHIEVEMENT,
	[Token(Token = "0x4000AC7")]
	TROPICAL_ISLAND_SMALL_DESCRIPTION,
	[Token(Token = "0x4000AC8")]
	ANSWER_AGAIN,
	[Token(Token = "0x4000AC9")]
	LINE_THE_GREEN_ONES_ARE_LESS,
	[Token(Token = "0x4000ACA")]
	REALPLACES_BUNDLE_TITLE,
	[Token(Token = "0x4000ACB")]
	LINE_15_AND_MAY_CAUSE,
	[Token(Token = "0x4000ACC")]
	SELFIE_WITH_FRIEND_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000ACD")]
	LOOKING_FOR_SOMEONE,
	[Token(Token = "0x4000ACE")]
	AUTHENTICATION_ERROR,
	[Token(Token = "0x4000ACF")]
	LINE_JUST_TO_LET_YOU_KNOW,
	[Token(Token = "0x4000AD0")]
	SHOW_TUTORIAL_MESSAGE_DESCRIPTION,
	[Token(Token = "0x4000AD1")]
	SRS,
	[Token(Token = "0x4000AD2")]
	WELCOME_TO_EPIC_ROLLER_COASTERS,
	[Token(Token = "0x4000AD3")]
	LINE_3_IM_ONE_CLICK,
	[Token(Token = "0x4000AD4")]
	LOBBY,
	[Token(Token = "0x4000AD5")]
	LINE_1_THE_PLACE_YOU_WILL,
	[Token(Token = "0x4000AD6")]
	NO_HELMET_DESCRIPTION,
	[Token(Token = "0x4000AD7")]
	CONNECTING_WITH_SOMEONE,
	[Token(Token = "0x4000AD8")]
	FANTASY_BUNDLE_DESCRIPTION,
	[Token(Token = "0x4000AD9")]
	NO_JUST_ROLLER_COASTER,
	[Token(Token = "0x4000ADA")]
	LINE_2_OK_QUESTION_MARK,
	[Token(Token = "0x4000ADB")]
	SEARCH_DEVICE_ON_NETWORK,
	[Token(Token = "0x4000ADC")]
	ARCADE_DESCRIPTION,
	[Token(Token = "0x4000ADD")]
	WYVERN_SIEGE_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000ADE")]
	T_REX_KINGDOM_SMALL_DESCRIPTION,
	[Token(Token = "0x4000ADF")]
	NORTH_POLE_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000AE0")]
	BATTERY,
	[Token(Token = "0x4000AE1")]
	LINE_4_YOU_SHOULD_LOOK,
	[Token(Token = "0x4000AE2")]
	RENDER_SCALE,
	[Token(Token = "0x4000AE3")]
	LICENSE_REQUESTED,
	[Token(Token = "0x4000AE4")]
	DEVICE_TYPE,
	[Token(Token = "0x4000AE5")]
	YES,
	[Token(Token = "0x4000AE6")]
	SHOOTER_MODE_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000AE7")]
	HELMET_ONLY,
	[Token(Token = "0x4000AE8")]
	SUCCESSFUL_PURCHASED,
	[Token(Token = "0x4000AE9")]
	SECRET_CAVE_FULL_DESCRIPTION,
	[Token(Token = "0x4000AEA")]
	AVATA_UPDATE,
	[Token(Token = "0x4000AEB")]
	ANSWER_BAD,
	[Token(Token = "0x4000AEC")]
	REMOTE_DISCONNECTED,
	[Token(Token = "0x4000AED")]
	SELECT,
	[Token(Token = "0x4000AEE")]
	GENERAL,
	[Token(Token = "0x4000AEF")]
	SCENARIO_DETAIL_TIME,
	[Token(Token = "0x4000AF0")]
	PLAY,
	[Token(Token = "0x4000AF1")]
	GREAT_CANYON_SMALL_DESCRIPTION,
	[Token(Token = "0x4000AF2")]
	CASUAL_TUTORIAL,
	[Token(Token = "0x4000AF3")]
	WEEEE,
	[Token(Token = "0x4000AF4")]
	ARE_YOU_STILL_THERE,
	[Token(Token = "0x4000AF5")]
	BRAKE_TUTORIAL,
	[Token(Token = "0x4000AF6")]
	SHARE_ON_FACEBOOK_DESCRIPTION,
	[Token(Token = "0x4000AF7")]
	THE_GAME_IS_PAUSED,
	[Token(Token = "0x4000AF8")]
	TARGETS_HIT_GAME_OVER,
	[Token(Token = "0x4000AF9")]
	COMFORT,
	[Token(Token = "0x4000AFA")]
	INTENSE,
	[Token(Token = "0x4000AFB")]
	HAUNTED_CASTLE_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000AFC")]
	LINE_18_I_BELIEVE_YOU_ARE_READY,
	[Token(Token = "0x4000AFD")]
	LINE_OK_NOW_IM_GOING,
	[Token(Token = "0x4000AFE")]
	TIME_PLAYED,
	[Token(Token = "0x4000AFF")]
	PAUSE,
	[Token(Token = "0x4000B00")]
	LINE_21_AND_SCREAM,
	[Token(Token = "0x4000B01")]
	LINE_10_LETS_GO,
	[Token(Token = "0x4000B02")]
	ANSWER_YES_CRAZY,
	[Token(Token = "0x4000B03")]
	YOU_ARE_THE_OWNER,
	[Token(Token = "0x4000B04")]
	ARE_YOU_SURE_LOBBY,
	[Token(Token = "0x4000B05")]
	ARCADE,
	[Token(Token = "0x4000B06")]
	WE_HAVE_OFFERS_WOULD_YOU_LIKE_TO_KNOW_MORE,
	[Token(Token = "0x4000B07")]
	I_BET_YOU_CANT_BEAT_ME,
	[Token(Token = "0x4000B08")]
	KICKED_FROM_ROOM,
	[Token(Token = "0x4000B09")]
	INVITE_FRIEND,
	[Token(Token = "0x4000B0A")]
	GAME_MODE,
	[Token(Token = "0x4000B0B")]
	SUCCESS,
	[Token(Token = "0x4000B0C")]
	RACE_GLOBAL,
	[Token(Token = "0x4000B0D")]
	SPACE_STATION_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000B0E")]
	BACK,
	[Token(Token = "0x4000B0F")]
	TARGETS_HIT,
	[Token(Token = "0x4000B10")]
	GRAPHIC,
	[Token(Token = "0x4000B11")]
	KICK_PLAYER_CONFIRM,
	[Token(Token = "0x4000B12")]
	CLICK_TO_GO_TO_DISCORD,
	[Token(Token = "0x4000B13")]
	DLC_BUNDLE_DESCRIPTION_SMALL,
	[Token(Token = "0x4000B14")]
	TIME,
	[Token(Token = "0x4000B15")]
	CONNECTED,
	[Token(Token = "0x4000B16")]
	SHOW_HUD,
	[Token(Token = "0x4000B17")]
	AUTO_PARK,
	[Token(Token = "0x4000B18")]
	WITH,
	[Token(Token = "0x4000B19")]
	SHOW_LASER_SIGHT,
	[Token(Token = "0x4000B1A")]
	YES_LETS_GO,
	[Token(Token = "0x4000B1B")]
	ANSWER_YES,
	[Token(Token = "0x4000B1C")]
	CORRUPTED_FILE_MESSAGE,
	[Token(Token = "0x4000B1D")]
	WOULD_YOU_LIKE_TO_EDIT_AVATAR,
	[Token(Token = "0x4000B1E")]
	PREMIUM_USER_ONLY,
	[Token(Token = "0x4000B1F")]
	LINE_21_IM_SO_GLAD_THAT,
	[Token(Token = "0x4000B20")]
	SHOOTER_MULTIPLAYER,
	[Token(Token = "0x4000B21")]
	WYVERN_SIEGE_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000B22")]
	NORTH_POLE_SMALL_DESCRIPTION,
	[Token(Token = "0x4000B23")]
	JOIN_ROOM_FAILED,
	[Token(Token = "0x4000B24")]
	ARMAGEDDON_FULL_DESCRIPTION,
	[Token(Token = "0x4000B25")]
	LINE_12_DO_YOU_WANT_TO_RIDE,
	[Token(Token = "0x4000B26")]
	LINE_3_OK_IF_YOU_NEED,
	[Token(Token = "0x4000B27")]
	HYPER_CART_TITLE,
	[Token(Token = "0x4000B28")]
	SECONDS,
	[Token(Token = "0x4000B29")]
	INVITES_SENT,
	[Token(Token = "0x4000B2A")]
	TIMEOUT_DISCONNECTION_MESSAGE,
	[Token(Token = "0x4000B2B")]
	SNOW_LAND_COLLECTABLES_ACHIEVEMENT,
	[Token(Token = "0x4000B2C")]
	RETRIEVING_PURCHASE_INFO,
	[Token(Token = "0x4000B2D")]
	CLASSIC,
	[Token(Token = "0x4000B2E")]
	CASUAL_DESCRIPTION,
	[Token(Token = "0x4000B2F")]
	TAKEPHOTO_TUTORIAL,
	[Token(Token = "0x4000B30")]
	MULTIPLAYER_WAITING_FRIEND,
	[Token(Token = "0x4000B31")]
	TWO,
	[Token(Token = "0x4000B32")]
	MY_TIME_IS,
	[Token(Token = "0x4000B33")]
	OASIS_SMALL_DESCRIPTION,
	[Token(Token = "0x4000B34")]
	LINE_18_THAT_IS_FANTASTIC,
	[Token(Token = "0x4000B35")]
	STEAM_STATUS_LOBBY,
	[Token(Token = "0x4000B36")]
	CANDYLAND_FULL_DESCRIPTION,
	[Token(Token = "0x4000B37")]
	RECENTER_TUTORIAL,
	[Token(Token = "0x4000B38")]
	ROCK_FALLS_SMALL_DESCRIPTION,
	[Token(Token = "0x4000B39")]
	ANSWER_GOOD,
	[Token(Token = "0x4000B3A")]
	TUWHENA_VOLCANO_FULL_DESCRIPTION,
	[Token(Token = "0x4000B3B")]
	REMOTE_PLAYER_CRASHED,
	[Token(Token = "0x4000B3C")]
	NOTIFICATIONS,
	[Token(Token = "0x4000B3D")]
	LOBBY_FULL,
	[Token(Token = "0x4000B3E")]
	DISCONNECT,
	[Token(Token = "0x4000B3F")]
	TENACIOUS_RACER_TITLE_ACHIEVEMENT,
	[Token(Token = "0x4000B40")]
	SELECT_WEAPON,
	[Token(Token = "0x4000B41")]
	AMAZING,
	[Token(Token = "0x4000B42")]
	ENABLE_3DOF,
	[Token(Token = "0x4000B43")]
	MATCHES,
	[Token(Token = "0x4000B44")]
	NEON_RIDER_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000B45")]
	NO_HELMET,
	[Token(Token = "0x4000B46")]
	HYPER_CART_DESCRIPTION,
	[Token(Token = "0x4000B47")]
	GLOBAL,
	[Token(Token = "0x4000B48")]
	SHOOTER_ORIGINAL,
	[Token(Token = "0x4000B49")]
	RECOIL_ON_VEST,
	[Token(Token = "0x4000B4A")]
	LOBBY_FULL_MESSAGE,
	[Token(Token = "0x4000B4B")]
	FANTASY,
	[Token(Token = "0x4000B4C")]
	YES_EXCLAMATION,
	[Token(Token = "0x4000B4D")]
	LINE_21_RAISE_YOUR_ARMS,
	[Token(Token = "0x4000B4E")]
	TCP_PORT,
	[Token(Token = "0x4000B4F")]
	ROCK_FALLS_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000B50")]
	ARCADE_MODE_ACHIEVEMENT,
	[Token(Token = "0x4000B51")]
	LINE_HELLO_AGAIN,
	[Token(Token = "0x4000B52")]
	SHOW_ADVANCED_OPTIONS,
	[Token(Token = "0x4000B53")]
	LINE_21_YOU_ARE_READY_TO,
	[Token(Token = "0x4000B54")]
	HELMET_BLINDER,
	[Token(Token = "0x4000B55")]
	CASUAL,
	[Token(Token = "0x4000B56")]
	STONEHENGE_FULL_DESCRIPTION,
	[Token(Token = "0x4000B57")]
	CANCEL,
	[Token(Token = "0x4000B58")]
	GREAT_CANYON_FULL_DESCRIPTION,
	[Token(Token = "0x4000B59")]
	NEON_RIDER_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000B5A")]
	TAKE_SELFIE_ACHIEVEMENT,
	[Token(Token = "0x4000B5B")]
	SOMETHING_WENT_WRONG,
	[Token(Token = "0x4000B5C")]
	SELECT_SCENARIO,
	[Token(Token = "0x4000B5D")]
	LINE_2_CAN_I_HELP_YOU,
	[Token(Token = "0x4000B5E")]
	BUY,
	[Token(Token = "0x4000B5F")]
	AVATAR_EDITOR,
	[Token(Token = "0x4000B60")]
	EIGHT,
	[Token(Token = "0x4000B61")]
	SPACE_STATION_COLLECTABLES_SHOOTER_ACHIEVEMENT,
	[Token(Token = "0x4000B62")]
	NORTH_POLE_COLLECTABLES_SHOOTER_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000B63")]
	ACHIEVEMENTS,
	[Token(Token = "0x4000B64")]
	DELETE_ALL_PHOTOS_QUESTION,
	[Token(Token = "0x4000B65")]
	ARMAGEDDON_COLLECTABLES_ACHIEVEMENT_DESCRIPTION,
	[Token(Token = "0x4000B66")]
	HELMET,
	[Token(Token = "0x4000B67")]
	INVITE_SOMEONE_TO_PLAY_WITH_YOU,
	[Token(Token = "0x4000B68")]
	UNIVERSAL_MENU,
	[Token(Token = "0x4000B69")]
	ROCK_FALLS_FULL_DESCRIPTION,
	[Token(Token = "0x4000B6A")]
	SEVEN,
	[Token(Token = "0x4000B6B")]
	RACE_MULTIPLAYER,
	[Token(Token = "0x4000B6C")]
	SHOOTER_TUTORIAL,
	[Token(Token = "0x4000B6D")]
	GRAPHICS_AND_CAMERA,
	[Token(Token = "0x4000B6E")]
	LOST_FOREST_COLLECTABLES_SHOOTER_ACHIEVEMENT
}
[Token(Token = "0x2000145")]
public static class Localization
{
	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string settingsAssetPath;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string generatedCodePath;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LocalizationSettings _settings;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<string> availableLanguages;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static LanguageCode currentLanguage;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<string, Dictionary<string, string>> currentEntrySheets;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string[] keyNamesCache;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string[] sheetNamesCache;

	[Token(Token = "0x1700007C")]
	public static LocalizationSettings settings
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1ACC3CC", Offset = "0x1ACC3CC", VA = "0x1ACC3CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1ACC5EC", Offset = "0x1ACC5EC", VA = "0x1ACC5EC")]
	static Localization()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1ACC964", Offset = "0x1ACC964", VA = "0x1ACC964")]
	private static void LoadAvailableLanguages()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1ACD7E0", Offset = "0x1ACD7E0", VA = "0x1ACD7E0")]
	public static string[] GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1ACD41C", Offset = "0x1ACD41C", VA = "0x1ACD41C")]
	public static bool SwitchLanguage(string langCode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1ACD4A0", Offset = "0x1ACD4A0", VA = "0x1ACD4A0")]
	public static bool SwitchLanguage(LanguageCode code)
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1ACD858", Offset = "0x1ACD858", VA = "0x1ACD858")]
	private static void DoSwitch(LanguageCode newLang)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1ACE594", Offset = "0x1ACE594", VA = "0x1ACE594")]
	public static UnityEngine.Object GetAsset(string name)
	{
		return null;
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1ACD674", Offset = "0x1ACD674", VA = "0x1ACD674")]
	private static bool HasLanguageFile(string lang, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1ACDFA8", Offset = "0x1ACDFA8", VA = "0x1ACDFA8")]
	private static string GetLanguageFileContents(string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1ACE6AC", Offset = "0x1ACE6AC", VA = "0x1ACE6AC")]
	private static string GetFontName(string name)
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1ACE7A0", Offset = "0x1ACE7A0", VA = "0x1ACE7A0")]
	private static float GetSizeMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1ACE864", Offset = "0x1ACE864", VA = "0x1ACE864")]
	public static LanguageCode CurrentLanguage()
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1ACE8BC", Offset = "0x1ACE8BC", VA = "0x1ACE8BC")]
	private static void InitEnumToString()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1ACEA0C", Offset = "0x1ACEA0C", VA = "0x1ACEA0C")]
	public static string ToStringCached(this LocalizationKeys property)
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1ACEA8C", Offset = "0x1ACEA8C", VA = "0x1ACEA8C")]
	public static string ToStringCached(this LocalizationSheets property)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1ACEB0C", Offset = "0x1ACEB0C", VA = "0x1ACEB0C")]
	public static void SetFont(TextMeshProUGUI textField)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1ACED44", Offset = "0x1ACED44", VA = "0x1ACED44")]
	public static void GetFont(string defaultFont)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1ACED48", Offset = "0x1ACED48", VA = "0x1ACED48")]
	public static string Get(string key, TextMeshProUGUI textField)
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1ACEE04", Offset = "0x1ACEE04", VA = "0x1ACEE04")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1ACF034", Offset = "0x1ACF034", VA = "0x1ACF034")]
	public static string Get(LocalizationKeys key)
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1ACF0B8", Offset = "0x1ACF0B8", VA = "0x1ACF0B8")]
	public static string Get(LocalizationKeys key, LocalizationSheets sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1ACF130", Offset = "0x1ACF130", VA = "0x1ACF130")]
	public static string Get(string key, LocalizationSheets sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1ACF19C", Offset = "0x1ACF19C", VA = "0x1ACF19C")]
	public static string Get(LocalizationKeys key, string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1ACEE7C", Offset = "0x1ACEE7C", VA = "0x1ACEE7C")]
	public static string Get(string key, string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1ACF204", Offset = "0x1ACF204", VA = "0x1ACF204")]
	public static Dictionary<string, string> GetSheet(string sheetTitle)
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1ACF284", Offset = "0x1ACF284", VA = "0x1ACF284")]
	public static bool Has(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1ACF424", Offset = "0x1ACF424", VA = "0x1ACF424")]
	public static bool Has(LocalizationKeys key)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1ACF4A8", Offset = "0x1ACF4A8", VA = "0x1ACF4A8")]
	public static bool Has(LocalizationKeys key, LocalizationSheets sheet)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1ACF520", Offset = "0x1ACF520", VA = "0x1ACF520")]
	public static bool Has(string key, LocalizationSheets sheet)
	{
		return default(bool);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1ACF2FC", Offset = "0x1ACF2FC", VA = "0x1ACF2FC")]
	public static bool Has(string key, string sheetTitle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1ACE32C", Offset = "0x1ACE32C", VA = "0x1ACE32C")]
	private static void SendMonoMessage(string methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1ACD480", Offset = "0x1ACD480", VA = "0x1ACD480")]
	public static LanguageCode LanguageNameToCode(SystemLanguage name)
	{
		return default(LanguageCode);
	}
}
[Token(Token = "0x2000146")]
public enum LanguageCode
{
	[Token(Token = "0x4000B78")]
	N,
	[Token(Token = "0x4000B79")]
	AA,
	[Token(Token = "0x4000B7A")]
	AB,
	[Token(Token = "0x4000B7B")]
	AF,
	[Token(Token = "0x4000B7C")]
	AM,
	[Token(Token = "0x4000B7D")]
	AR,
	[Token(Token = "0x4000B7E")]
	AR_SA,
	[Token(Token = "0x4000B7F")]
	AR_EG,
	[Token(Token = "0x4000B80")]
	AR_DZ,
	[Token(Token = "0x4000B81")]
	AR_YE,
	[Token(Token = "0x4000B82")]
	AR_JO,
	[Token(Token = "0x4000B83")]
	AR_KW,
	[Token(Token = "0x4000B84")]
	AR_BH,
	[Token(Token = "0x4000B85")]
	AR_IQ,
	[Token(Token = "0x4000B86")]
	AR_MA,
	[Token(Token = "0x4000B87")]
	AR_LY,
	[Token(Token = "0x4000B88")]
	AR_OM,
	[Token(Token = "0x4000B89")]
	AR_SY,
	[Token(Token = "0x4000B8A")]
	AR_LB,
	[Token(Token = "0x4000B8B")]
	AR_AE,
	[Token(Token = "0x4000B8C")]
	AR_QA,
	[Token(Token = "0x4000B8D")]
	AS,
	[Token(Token = "0x4000B8E")]
	AY,
	[Token(Token = "0x4000B8F")]
	AZ,
	[Token(Token = "0x4000B90")]
	BA,
	[Token(Token = "0x4000B91")]
	BE,
	[Token(Token = "0x4000B92")]
	BG,
	[Token(Token = "0x4000B93")]
	BH,
	[Token(Token = "0x4000B94")]
	BI,
	[Token(Token = "0x4000B95")]
	BN,
	[Token(Token = "0x4000B96")]
	BO,
	[Token(Token = "0x4000B97")]
	BR,
	[Token(Token = "0x4000B98")]
	CA,
	[Token(Token = "0x4000B99")]
	CO,
	[Token(Token = "0x4000B9A")]
	CS,
	[Token(Token = "0x4000B9B")]
	CY,
	[Token(Token = "0x4000B9C")]
	DA,
	[Token(Token = "0x4000B9D")]
	DE,
	[Token(Token = "0x4000B9E")]
	DE_AT,
	[Token(Token = "0x4000B9F")]
	DE_LI,
	[Token(Token = "0x4000BA0")]
	DE_CH,
	[Token(Token = "0x4000BA1")]
	DE_LU,
	[Token(Token = "0x4000BA2")]
	DZ,
	[Token(Token = "0x4000BA3")]
	EL,
	[Token(Token = "0x4000BA4")]
	EN,
	[Token(Token = "0x4000BA5")]
	EN_US,
	[Token(Token = "0x4000BA6")]
	EN_AU,
	[Token(Token = "0x4000BA7")]
	EN_NZ,
	[Token(Token = "0x4000BA8")]
	EN_ZA,
	[Token(Token = "0x4000BA9")]
	EN_CB,
	[Token(Token = "0x4000BAA")]
	EN_TT,
	[Token(Token = "0x4000BAB")]
	EN_GB,
	[Token(Token = "0x4000BAC")]
	EN_CA,
	[Token(Token = "0x4000BAD")]
	EN_IE,
	[Token(Token = "0x4000BAE")]
	EN_JM,
	[Token(Token = "0x4000BAF")]
	EN_BZ,
	[Token(Token = "0x4000BB0")]
	EO,
	[Token(Token = "0x4000BB1")]
	ES,
	[Token(Token = "0x4000BB2")]
	ES_MX,
	[Token(Token = "0x4000BB3")]
	ES_CR,
	[Token(Token = "0x4000BB4")]
	ES_DO,
	[Token(Token = "0x4000BB5")]
	ES_CO,
	[Token(Token = "0x4000BB6")]
	ES_AR,
	[Token(Token = "0x4000BB7")]
	ES_CL,
	[Token(Token = "0x4000BB8")]
	ES_PY,
	[Token(Token = "0x4000BB9")]
	ES_SV,
	[Token(Token = "0x4000BBA")]
	ES_NI,
	[Token(Token = "0x4000BBB")]
	ES_GT,
	[Token(Token = "0x4000BBC")]
	ES_PA,
	[Token(Token = "0x4000BBD")]
	ES_VE,
	[Token(Token = "0x4000BBE")]
	ES_PE,
	[Token(Token = "0x4000BBF")]
	ES_EC,
	[Token(Token = "0x4000BC0")]
	ES_UY,
	[Token(Token = "0x4000BC1")]
	ES_BO,
	[Token(Token = "0x4000BC2")]
	ES_HN,
	[Token(Token = "0x4000BC3")]
	ES_PR,
	[Token(Token = "0x4000BC4")]
	ET,
	[Token(Token = "0x4000BC5")]
	EU,
	[Token(Token = "0x4000BC6")]
	FA,
	[Token(Token = "0x4000BC7")]
	FI,
	[Token(Token = "0x4000BC8")]
	FJ,
	[Token(Token = "0x4000BC9")]
	FO,
	[Token(Token = "0x4000BCA")]
	FR,
	[Token(Token = "0x4000BCB")]
	FR_BE,
	[Token(Token = "0x4000BCC")]
	FR_CH,
	[Token(Token = "0x4000BCD")]
	FR_CA,
	[Token(Token = "0x4000BCE")]
	FR_LU,
	[Token(Token = "0x4000BCF")]
	FY,
	[Token(Token = "0x4000BD0")]
	GA,
	[Token(Token = "0x4000BD1")]
	GD,
	[Token(Token = "0x4000BD2")]
	GL,
	[Token(Token = "0x4000BD3")]
	GN,
	[Token(Token = "0x4000BD4")]
	GU,
	[Token(Token = "0x4000BD5")]
	HA,
	[Token(Token = "0x4000BD6")]
	HI,
	[Token(Token = "0x4000BD7")]
	HE,
	[Token(Token = "0x4000BD8")]
	HR,
	[Token(Token = "0x4000BD9")]
	HU,
	[Token(Token = "0x4000BDA")]
	HY,
	[Token(Token = "0x4000BDB")]
	IA,
	[Token(Token = "0x4000BDC")]
	ID,
	[Token(Token = "0x4000BDD")]
	IE,
	[Token(Token = "0x4000BDE")]
	IK,
	[Token(Token = "0x4000BDF")]
	IN,
	[Token(Token = "0x4000BE0")]
	IS,
	[Token(Token = "0x4000BE1")]
	IT,
	[Token(Token = "0x4000BE2")]
	IT_CH,
	[Token(Token = "0x4000BE3")]
	IU,
	[Token(Token = "0x4000BE4")]
	IW,
	[Token(Token = "0x4000BE5")]
	JA,
	[Token(Token = "0x4000BE6")]
	JI,
	[Token(Token = "0x4000BE7")]
	JW,
	[Token(Token = "0x4000BE8")]
	KA,
	[Token(Token = "0x4000BE9")]
	KK,
	[Token(Token = "0x4000BEA")]
	KL,
	[Token(Token = "0x4000BEB")]
	KM,
	[Token(Token = "0x4000BEC")]
	KN,
	[Token(Token = "0x4000BED")]
	KO,
	[Token(Token = "0x4000BEE")]
	KS,
	[Token(Token = "0x4000BEF")]
	KU,
	[Token(Token = "0x4000BF0")]
	KY,
	[Token(Token = "0x4000BF1")]
	LA,
	[Token(Token = "0x4000BF2")]
	LN,
	[Token(Token = "0x4000BF3")]
	LO,
	[Token(Token = "0x4000BF4")]
	LT,
	[Token(Token = "0x4000BF5")]
	LV,
	[Token(Token = "0x4000BF6")]
	MG,
	[Token(Token = "0x4000BF7")]
	MI,
	[Token(Token = "0x4000BF8")]
	MK,
	[Token(Token = "0x4000BF9")]
	ML,
	[Token(Token = "0x4000BFA")]
	MN,
	[Token(Token = "0x4000BFB")]
	MO,
	[Token(Token = "0x4000BFC")]
	MR,
	[Token(Token = "0x4000BFD")]
	MS,
	[Token(Token = "0x4000BFE")]
	MT,
	[Token(Token = "0x4000BFF")]
	MY,
	[Token(Token = "0x4000C00")]
	NA,
	[Token(Token = "0x4000C01")]
	NE,
	[Token(Token = "0x4000C02")]
	NL,
	[Token(Token = "0x4000C03")]
	NL_BE,
	[Token(Token = "0x4000C04")]
	NO,
	[Token(Token = "0x4000C05")]
	OC,
	[Token(Token = "0x4000C06")]
	OM,
	[Token(Token = "0x4000C07")]
	OR,
	[Token(Token = "0x4000C08")]
	PA,
	[Token(Token = "0x4000C09")]
	PL,
	[Token(Token = "0x4000C0A")]
	PS,
	[Token(Token = "0x4000C0B")]
	PT,
	[Token(Token = "0x4000C0C")]
	PT_BR,
	[Token(Token = "0x4000C0D")]
	QU,
	[Token(Token = "0x4000C0E")]
	RM,
	[Token(Token = "0x4000C0F")]
	RN,
	[Token(Token = "0x4000C10")]
	RO,
	[Token(Token = "0x4000C11")]
	RO_MO,
	[Token(Token = "0x4000C12")]
	RU,
	[Token(Token = "0x4000C13")]
	RU_MO,
	[Token(Token = "0x4000C14")]
	RW,
	[Token(Token = "0x4000C15")]
	SA,
	[Token(Token = "0x4000C16")]
	SD,
	[Token(Token = "0x4000C17")]
	SG,
	[Token(Token = "0x4000C18")]
	SH,
	[Token(Token = "0x4000C19")]
	SI,
	[Token(Token = "0x4000C1A")]
	SK,
	[Token(Token = "0x4000C1B")]
	SL,
	[Token(Token = "0x4000C1C")]
	SM,
	[Token(Token = "0x4000C1D")]
	SN,
	[Token(Token = "0x4000C1E")]
	SO,
	[Token(Token = "0x4000C1F")]
	SQ,
	[Token(Token = "0x4000C20")]
	SR,
	[Token(Token = "0x4000C21")]
	SS,
	[Token(Token = "0x4000C22")]
	ST,
	[Token(Token = "0x4000C23")]
	SU,
	[Token(Token = "0x4000C24")]
	SV,
	[Token(Token = "0x4000C25")]
	SV_FI,
	[Token(Token = "0x4000C26")]
	SW,
	[Token(Token = "0x4000C27")]
	TA,
	[Token(Token = "0x4000C28")]
	TE,
	[Token(Token = "0x4000C29")]
	TG,
	[Token(Token = "0x4000C2A")]
	TH,
	[Token(Token = "0x4000C2B")]
	TI,
	[Token(Token = "0x4000C2C")]
	TK,
	[Token(Token = "0x4000C2D")]
	TL,
	[Token(Token = "0x4000C2E")]
	TN,
	[Token(Token = "0x4000C2F")]
	TO,
	[Token(Token = "0x4000C30")]
	TR,
	[Token(Token = "0x4000C31")]
	TS,
	[Token(Token = "0x4000C32")]
	TT,
	[Token(Token = "0x4000C33")]
	TW,
	[Token(Token = "0x4000C34")]
	UG,
	[Token(Token = "0x4000C35")]
	UK,
	[Token(Token = "0x4000C36")]
	UR,
	[Token(Token = "0x4000C37")]
	UZ,
	[Token(Token = "0x4000C38")]
	VI,
	[Token(Token = "0x4000C39")]
	VO,
	[Token(Token = "0x4000C3A")]
	WO,
	[Token(Token = "0x4000C3B")]
	XH,
	[Token(Token = "0x4000C3C")]
	YI,
	[Token(Token = "0x4000C3D")]
	YO,
	[Token(Token = "0x4000C3E")]
	ZA,
	[Token(Token = "0x4000C3F")]
	ZH,
	[Token(Token = "0x4000C40")]
	ZH_TW,
	[Token(Token = "0x4000C41")]
	ZH_HK,
	[Token(Token = "0x4000C42")]
	ZH_CN,
	[Token(Token = "0x4000C43")]
	ZH_SG,
	[Token(Token = "0x4000C44")]
	ZU
}
[Token(Token = "0x2000147")]
public static class StringExtensions
{
	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1ACE1A8", Offset = "0x1ACE1A8", VA = "0x1ACE1A8")]
	public static string UnescapeXML(this string s)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000148")]
public class LocalizationSettings : ScriptableObject
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] sheetTitles;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] usedLanguages;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] usedKeys;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useSystemLanguagePerDefault;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string defaultLangCode;

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1ACCFC8", Offset = "0x1ACCFC8", VA = "0x1ACCFC8")]
	public static LanguageCode GetLanguageEnum(string langCode)
	{
		return default(LanguageCode);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1ACF58C", Offset = "0x1ACF58C", VA = "0x1ACF58C")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x2000149")]
public class LocalizedAsset : MonoBehaviour
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object localizeTarget;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1ACF5EC", Offset = "0x1ACF5EC", VA = "0x1ACF5EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1ACE324", Offset = "0x1ACE324", VA = "0x1ACE324")]
	public void LocalizeAsset()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1ACF5F4", Offset = "0x1ACF5F4", VA = "0x1ACF5F4")]
	public static void LocalizeAsset(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1ACFAA0", Offset = "0x1ACFAA0", VA = "0x1ACFAA0")]
	public LocalizedAsset()
	{
	}
}
[Token(Token = "0x200014A")]
[RequireComponent(typeof(TextMesh))]
public class LocalizedTextMesh : MonoBehaviour
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyValue;

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1ACFAA8", Offset = "0x1ACFAA8", VA = "0x1ACFAA8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1ACFAB0", Offset = "0x1ACFAB0", VA = "0x1ACFAB0")]
	public void LocalizeTextMesh(string keyValue)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1ACFBF0", Offset = "0x1ACFBF0", VA = "0x1ACFBF0")]
	public LocalizedTextMesh()
	{
	}
}
[Token(Token = "0x200014B")]
[RequireComponent(typeof(Text))]
[AddComponentMenu("UI/LocalizeM2H UGUI")]
public class UGUILocalizeM2H : MonoBehaviour
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sheet;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1ACFBF8", Offset = "0x1ACFBF8", VA = "0x1ACFBF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1ACFDC8", Offset = "0x1ACFDC8", VA = "0x1ACFDC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1ACFDCC", Offset = "0x1ACFDCC", VA = "0x1ACFDCC")]
	public void ChangedLanguage(LanguageCode code)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1ACFBFC", Offset = "0x1ACFBFC", VA = "0x1ACFBFC")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1ACFDD0", Offset = "0x1ACFDD0", VA = "0x1ACFDD0")]
	public UGUILocalizeM2H()
	{
	}
}
[Token(Token = "0x200014C")]
public class PDS_GameController : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform player;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player1;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool invert_vertical;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool invert_horizontal;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _mouseReference;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _rotation;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 _mouseOffset;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rotate_speedX;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float rotate_speedY;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1ACFE38", Offset = "0x1ACFE38", VA = "0x1ACFE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1ACFE44", Offset = "0x1ACFE44", VA = "0x1ACFE44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1ACFFF0", Offset = "0x1ACFFF0", VA = "0x1ACFFF0")]
	private void moveZ(Transform theobj, bool positive)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1AD0090", Offset = "0x1AD0090", VA = "0x1AD0090")]
	private void moveX(Transform theobj, bool positive)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1AD0130", Offset = "0x1AD0130", VA = "0x1AD0130")]
	public PDS_GameController()
	{
	}
}
[Token(Token = "0x200014D")]
public class ScrollingUVs_PDS : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1AD0148", Offset = "0x1AD0148", VA = "0x1AD0148")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1AD0224", Offset = "0x1AD0224", VA = "0x1AD0224")]
	public ScrollingUVs_PDS()
	{
	}
}
[Token(Token = "0x200014E")]
public class CameraRig : EMUI
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion defaultRot;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 defaultPos;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cam;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float zoomSens;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotSens;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 pos_old;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject pos_new;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_UILockInstigator;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1AD02C0", Offset = "0x1AD02C0", VA = "0x1AD02C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1AD04B4", Offset = "0x1AD04B4", VA = "0x1AD04B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1AD091C", Offset = "0x1AD091C", VA = "0x1AD091C")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1AD096C", Offset = "0x1AD096C", VA = "0x1AD096C")]
	public CameraRig()
	{
	}
}
[Token(Token = "0x200014F")]
public class ColorPicker : EMUI
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D m_ColorField;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform m_RectTransform;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rect m_Rect;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Canvas m_Canvas;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Slider m_IntensitySlider;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_UILockInstigator;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LightRig m_LightRig;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image m_KnobImage;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private RectTransform m_KnobTransform;

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1AD0994", Offset = "0x1AD0994", VA = "0x1AD0994")]
	private void Start()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1AD0CC0", Offset = "0x1AD0CC0", VA = "0x1AD0CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1AD1054", Offset = "0x1AD1054", VA = "0x1AD1054")]
	public Color GetCurrentColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1AD0AD8", Offset = "0x1AD0AD8", VA = "0x1AD0AD8")]
	public void SetCurrentColor()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1AD10E8", Offset = "0x1AD10E8", VA = "0x1AD10E8")]
	public float GetCurrentIntensity()
	{
		return default(float);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1AD0BCC", Offset = "0x1AD0BCC", VA = "0x1AD0BCC")]
	public void SetCurrentIntensity()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1AD1174", Offset = "0x1AD1174", VA = "0x1AD1174")]
	private bool CheckGUI()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1AD12EC", Offset = "0x1AD12EC", VA = "0x1AD12EC")]
	public ColorPicker()
	{
	}
}
[Token(Token = "0x2000150")]
public class EMUI : MonoBehaviour
{
	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool UIClicked;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool UIHelpOverlay;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1AD12F4", Offset = "0x1AD12F4", VA = "0x1AD12F4")]
	private List<RaycastResult> UIRaycast()
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1AD07DC", Offset = "0x1AD07DC", VA = "0x1AD07DC")]
	public bool CheckGUI(int mouseButtonIndex, ref bool UILockInstigator)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1AD098C", Offset = "0x1AD098C", VA = "0x1AD098C")]
	public EMUI()
	{
	}
}
[Token(Token = "0x2000151")]
public class EMUI_Animations : MonoBehaviour
{
	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1AD13F0", Offset = "0x1AD13F0", VA = "0x1AD13F0")]
	public void ToggleFadeIn()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1AD147C", Offset = "0x1AD147C", VA = "0x1AD147C")]
	public EMUI_Animations()
	{
	}
}
[Token(Token = "0x2000152")]
public class ExamplesController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000153")]
	public class Example
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string Description;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Prefab;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1AD1E10", Offset = "0x1AD1E10", VA = "0x1AD1E10")]
		public Example()
		{
		}
	}

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Example[] m_Examples;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_Canvas;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider m_ExamplesSlider;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_Decription;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text m_DecriptionTitle;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_CurrentPrefab;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_CurrentExample;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1AD1484", Offset = "0x1AD1484", VA = "0x1AD1484")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1AD18B4", Offset = "0x1AD18B4", VA = "0x1AD18B4")]
	public void NextExample()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1AD1B2C", Offset = "0x1AD1B2C", VA = "0x1AD1B2C")]
	public void PreviousExample()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1AD1AE4", Offset = "0x1AD1AE4", VA = "0x1AD1AE4")]
	private void ClampExampleCount()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1AD1D5C", Offset = "0x1AD1D5C", VA = "0x1AD1D5C")]
	public void activateExampleFromSlider()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1AD15B4", Offset = "0x1AD15B4", VA = "0x1AD15B4")]
	public void activateExample(int index)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1AD1E08", Offset = "0x1AD1E08", VA = "0x1AD1E08")]
	public ExamplesController()
	{
	}
}
[Token(Token = "0x2000154")]
public class GetName : MonoBehaviour
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_Index;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1AD1E18", Offset = "0x1AD1E18", VA = "0x1AD1E18")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1AD1F3C", Offset = "0x1AD1F3C", VA = "0x1AD1F3C")]
	public GetName()
	{
	}
}
[Token(Token = "0x2000155")]
public class LightRig : EMUI
{
	[Token(Token = "0x2000156")]
	public enum LightsType
	{
		[Token(Token = "0x4000C86")]
		Directional,
		[Token(Token = "0x4000C87")]
		Point,
		[Token(Token = "0x4000C88")]
		Spot
	}

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotSens;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offsetSens;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DirectionalLight;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PointLights;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpotLights;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ColorPicker m_ColorPicker;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Light[] m_Lights;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LightsType curLightType;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject curLightObject;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_UILockInstigator;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_AnimateLight;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1AD1F44", Offset = "0x1AD1F44", VA = "0x1AD1F44")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1AD1F54", Offset = "0x1AD1F54", VA = "0x1AD1F54")]
	public void SetPointLights()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1AD2144", Offset = "0x1AD2144", VA = "0x1AD2144")]
	public void SetSpotLights()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1AD1F4C", Offset = "0x1AD1F4C", VA = "0x1AD1F4C")]
	public void SetDirectionalLight()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1AD214C", Offset = "0x1AD214C", VA = "0x1AD214C")]
	public void ToggleLightAnimation()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1AD1F5C", Offset = "0x1AD1F5C", VA = "0x1AD1F5C")]
	private void ChangeLights(LightsType lightTypes)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1AD215C", Offset = "0x1AD215C", VA = "0x1AD215C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1AD254C", Offset = "0x1AD254C", VA = "0x1AD254C")]
	public LightRig()
	{
	}
}
[Token(Token = "0x2000157")]
public class MainMenuCanvasController : MonoBehaviour
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform canvas_m;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform canvas_l;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform canvas_r;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] hideOnExtra;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform joint_l;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform joint_r;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text SizeText;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text AngleText;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text HeightText;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text SideAngleText;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] sizes;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int size;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool extra;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1AD2560", Offset = "0x1AD2560", VA = "0x1AD2560")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1AD29C8", Offset = "0x1AD29C8", VA = "0x1AD29C8")]
	public void Bigger()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1AD29F8", Offset = "0x1AD29F8", VA = "0x1AD29F8")]
	public void Smaller()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1AD258C", Offset = "0x1AD258C", VA = "0x1AD258C")]
	private void Size()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1AD2A20", Offset = "0x1AD2A20", VA = "0x1AD2A20")]
	public void Back()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1AD2B88", Offset = "0x1AD2B88", VA = "0x1AD2B88")]
	public void Forward()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1AD2A28", Offset = "0x1AD2A28", VA = "0x1AD2A28")]
	public void Rotate(float r)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1AD2B90", Offset = "0x1AD2B90", VA = "0x1AD2B90")]
	public void Down()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1AD2B9C", Offset = "0x1AD2B9C", VA = "0x1AD2B9C")]
	public void Up()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1AD28A4", Offset = "0x1AD28A4", VA = "0x1AD28A4")]
	public void Move(float d)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1AD2BA8", Offset = "0x1AD2BA8", VA = "0x1AD2BA8")]
	public void Extra()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1AD2C1C", Offset = "0x1AD2C1C", VA = "0x1AD2C1C")]
	public void Inward()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1AD2C28", Offset = "0x1AD2C28", VA = "0x1AD2C28")]
	public void Outward()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1AD2720", Offset = "0x1AD2720", VA = "0x1AD2720")]
	public void SideRotation(float l, float r)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1AD2C34", Offset = "0x1AD2C34", VA = "0x1AD2C34")]
	public MainMenuCanvasController()
	{
	}
}
[Token(Token = "0x2000158")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/CRCScriptableObject", order = 1)]
public class CRCScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint CRCAndroid;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint CRCWindows;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint CRCIos;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint CRCPS4;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint CRCPS5;

	[Token(Token = "0x1700007D")]
	public uint CRC
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1AD2C4C", Offset = "0x1AD2C4C", VA = "0x1AD2C4C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1AD2C54", Offset = "0x1AD2C54", VA = "0x1AD2C54")]
		set
		{
		}
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1AD2C5C", Offset = "0x1AD2C5C", VA = "0x1AD2C5C")]
	public CRCScriptableObject()
	{
	}
}
[Token(Token = "0x2000159")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/LeaderboardIDSettings", order = 1)]
public class LeaderboardIDSettingsScriptableObject : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200015A")]
	public struct LeaderboardIDSetting
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CoasterType coasterType;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isMultiplayer;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool isOriginal;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LeaderboardID[] IDs;
	}

	[Serializable]
	[Token(Token = "0x200015B")]
	public struct LeaderboardID
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string textID;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RideType rideType;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numberID;
	}

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderboardIDSetting[] Settings;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1AD2C64", Offset = "0x1AD2C64", VA = "0x1AD2C64")]
	public LeaderboardIDSettingsScriptableObject()
	{
	}
}
[Token(Token = "0x200015C")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/LobbyDecoration", order = 3)]
public class LobbyDecoration : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200015D")]
	public struct RGBAColors
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color1R;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color2G;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color3B;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color color4A;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;
	}

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RGBAColors[] Colors;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference Decoration;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1AD2C6C", Offset = "0x1AD2C6C", VA = "0x1AD2C6C")]
	public LobbyDecoration()
	{
	}
}
[Token(Token = "0x200015E")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/QualitySettingsScriptableObject", order = 1)]
public class QualitySettingsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShadowDistanceMedium;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ShadowDistanceHigh;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LodBiasMedium;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float LodBiasHigh;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int AntiAliasingMedium;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int AntiAliasingHigh;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShadowQuality ShadowQualityMedium;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ShadowQuality ShadowQualityHigh;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShadowResolution ShadowResolutionMedium;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ShadowResolution ShadowResolutionHigh;

	[Token(Token = "0x1700007E")]
	public float ShadowDistance
	{
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1AD2C74", Offset = "0x1AD2C74", VA = "0x1AD2C74")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007F")]
	public float LodBias
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x1AD2C7C", Offset = "0x1AD2C7C", VA = "0x1AD2C7C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000080")]
	public float AntiAliasing
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x1AD2C84", Offset = "0x1AD2C84", VA = "0x1AD2C84")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000081")]
	public ShadowQuality ShadowQuality
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1AD2C90", Offset = "0x1AD2C90", VA = "0x1AD2C90")]
		get
		{
			return default(ShadowQuality);
		}
	}

	[Token(Token = "0x17000082")]
	public ShadowResolution ShadowResolution
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1AD2C98", Offset = "0x1AD2C98", VA = "0x1AD2C98")]
		get
		{
			return default(ShadowResolution);
		}
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1AD2CA0", Offset = "0x1AD2CA0", VA = "0x1AD2CA0")]
	public QualitySettingsScriptableObject()
	{
	}
}
[Token(Token = "0x200015F")]
[CreateAssetMenu(fileName = "Data", menuName = "ScriptableObjects/ShaderWarmupSettingsScriptableObject", order = 1)]
public class ShaderWarmupSettingsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(5f)]
	[Header("Shaders WarmUp")]
	public ShaderVariantCollection MobileWarmUpShaders;

	[Token(Token = "0x17000083")]
	private ShaderVariantCollection warmUpShaders
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1AD2CC8", Offset = "0x1AD2CC8", VA = "0x1AD2CC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1AD2CD0", Offset = "0x1AD2CD0", VA = "0x1AD2CD0")]
	public void ShaderWarmUp()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1AD2DD8", Offset = "0x1AD2DD8", VA = "0x1AD2DD8")]
	public ShaderWarmupSettingsScriptableObject()
	{
	}
}
[Token(Token = "0x2000160")]
public static class AndroidRuntimePermissions
{
	[Token(Token = "0x2000161")]
	public enum Permission
	{
		[Token(Token = "0x4000CB9")]
		Denied,
		[Token(Token = "0x4000CBA")]
		Granted,
		[Token(Token = "0x4000CBB")]
		ShouldAsk
	}

	[Token(Token = "0x2000162")]
	public delegate void PermissionResult(string permission, Permission result);

	[Token(Token = "0x2000163")]
	public delegate void PermissionResultMultiple(string[] permissions, Permission[] result);

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass m_ajc;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject m_context;

	[Token(Token = "0x17000084")]
	private static AndroidJavaClass AJC
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x1AD2DE0", Offset = "0x1AD2DE0", VA = "0x1AD2DE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	private static AndroidJavaObject Context
	{
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1AD2E9C", Offset = "0x1AD2E9C", VA = "0x1AD2E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1AD30A8", Offset = "0x1AD30A8", VA = "0x1AD30A8")]
	public static void OpenSettings()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1AD3178", Offset = "0x1AD3178", VA = "0x1AD3178")]
	public static Permission CheckPermission(string permission)
	{
		return default(Permission);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1AD3228", Offset = "0x1AD3228", VA = "0x1AD3228")]
	public static Permission[] CheckPermissions(params string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1AD35A4", Offset = "0x1AD35A4", VA = "0x1AD35A4")]
	public static Permission RequestPermission(string permission)
	{
		return default(Permission);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1AD3654", Offset = "0x1AD3654", VA = "0x1AD3654")]
	public static Permission[] RequestPermissions(params string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1AD3B88", Offset = "0x1AD3B88", VA = "0x1AD3B88")]
	private static void RequestPermissionAsync(string permission, PermissionResult callback)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1AD3DA4", Offset = "0x1AD3DA4", VA = "0x1AD3DA4")]
	private static void RequestPermissionsAsync(string[] permissions, PermissionResultMultiple callback)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1AD3A3C", Offset = "0x1AD3A3C", VA = "0x1AD3A3C")]
	public static Permission[] ProcessPermissionRequest(string[] permissions, string resultRaw)
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1AD3540", Offset = "0x1AD3540", VA = "0x1AD3540")]
	private static Permission GetCachedPermission(string permission, Permission defaultValue)
	{
		return default(Permission);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1AD3974", Offset = "0x1AD3974", VA = "0x1AD3974")]
	private static string GetCachedPermissions(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1AD3F64", Offset = "0x1AD3F64", VA = "0x1AD3F64")]
	private static bool CachePermission(string permission, Permission value)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1AD3464", Offset = "0x1AD3464", VA = "0x1AD3464")]
	private static void ValidateArgument(string[] permissions)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1AD3FFC", Offset = "0x1AD3FFC", VA = "0x1AD3FFC")]
	private static Permission[] GetDummyResult(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1AD3534", Offset = "0x1AD3534", VA = "0x1AD3534")]
	private static Permission ToPermission(this char ch)
	{
		return default(Permission);
	}
}
[Token(Token = "0x2000165")]
public class CartSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPointLeft;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SpawnPointRight;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform CompanionCharacterSpawnPoint;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform FloorLevel;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider CartCollider;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform BackWheelColliders;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform FrontWheelColliders;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource SnapOnTrackSoundFx;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1AD42C4", Offset = "0x1AD42C4", VA = "0x1AD42C4")]
	public CartSpawnPoint()
	{
	}
}
[Token(Token = "0x2000166")]
public class GforceFilter
{
	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int maxCapacity;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> lastLocalVelocities;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 acceleration;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 gForce;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1AD42CC", Offset = "0x1AD42CC", VA = "0x1AD42CC")]
	public GforceFilter(int maxCapacity = 10)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1AD43BC", Offset = "0x1AD43BC", VA = "0x1AD43BC")]
	public Vector3 GetGForce(Vector3 localVelocity)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000167")]
public class GForceUI : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Panel;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Dot;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GforceFilter gFF;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1AD46FC", Offset = "0x1AD46FC", VA = "0x1AD46FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1AD47A8", Offset = "0x1AD47A8", VA = "0x1AD47A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1AD48B8", Offset = "0x1AD48B8", VA = "0x1AD48B8")]
	public GForceUI()
	{
	}
}
[Token(Token = "0x2000168")]
public class HyperCart : MonoBehaviour
{
	[Token(Token = "0x2000169")]
	private enum CartState
	{
		[Token(Token = "0x4000CD7")]
		UP,
		[Token(Token = "0x4000CD8")]
		DOWN
	}

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator AnimatorController;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip UpClip;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip DownClip;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource AudioSource;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _shouldAnimate;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CartState _currentState;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _startHighVelocity;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _startLowVelocity;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _shouldStartHighVelocityAnimation;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _shouldStartLowVelocityAnimation;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1AD48C0", Offset = "0x1AD48C0", VA = "0x1AD48C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1AD48CC", Offset = "0x1AD48CC", VA = "0x1AD48CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1AD4BF0", Offset = "0x1AD4BF0", VA = "0x1AD4BF0")]
	private void PlayClip(AudioClip clip)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1AD4C98", Offset = "0x1AD4C98", VA = "0x1AD4C98")]
	public HyperCart()
	{
	}
}
[Token(Token = "0x200016A")]
public class CloudStorageJson : IController<CloudStorageJson>
{
	[Token(Token = "0x200016B")]
	public enum CloudStorageStatus
	{
		[Token(Token = "0x4000CDC")]
		NONE,
		[Token(Token = "0x4000CDD")]
		SEARCHING_PATH,
		[Token(Token = "0x4000CDE")]
		READY
	}

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CloudStorageStatus status;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DefaultPath;

	[Token(Token = "0x17000086")]
	public CloudStorageStatus Status
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1AD4CA0", Offset = "0x1AD4CA0", VA = "0x1AD4CA0")]
		get
		{
			return default(CloudStorageStatus);
		}
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1AD4CA8", Offset = "0x1AD4CA8", VA = "0x1AD4CA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x1AD4D18", Offset = "0x1AD4D18", VA = "0x1AD4D18", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1AD4D88", Offset = "0x1AD4D88", VA = "0x1AD4D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1AD4E84", Offset = "0x1AD4E84", VA = "0x1AD4E84")]
	public void StartCloudStorage()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1AD4ED0", Offset = "0x1AD4ED0", VA = "0x1AD4ED0", Slot = "6")]
	public virtual void SaveFile(string filepath, string json)
	{
	}

	[Token(Token = "0x6000904")]
	public virtual T GetFile<T>(string filepath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1AD4ED4", Offset = "0x1AD4ED4", VA = "0x1AD4ED4", Slot = "8")]
	public virtual void GetPath()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1AD4ED8", Offset = "0x1AD4ED8", VA = "0x1AD4ED8")]
	public CloudStorageJson()
	{
	}
}
[Token(Token = "0x200016C")]
public class CloudStorageJsonOculus : CloudStorageJson
{
	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1AD4F20", Offset = "0x1AD4F20", VA = "0x1AD4F20", Slot = "6")]
	public override void SaveFile(string filepath, string json)
	{
	}

	[Token(Token = "0x6000908")]
	public override T GetFile<T>(string filepath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1AD4FD8", Offset = "0x1AD4FD8", VA = "0x1AD4FD8", Slot = "8")]
	public override void GetPath()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1AD4FDC", Offset = "0x1AD4FDC", VA = "0x1AD4FDC")]
	public CloudStorageJsonOculus()
	{
	}
}
[Token(Token = "0x200016D")]
public class CompanionCharacterConfiguration : MonoBehaviour, IReplaceMaterials
{
	[Token(Token = "0x200016E")]
	[CompilerGenerated]
	private sealed class <VerifyToRotateHeadAgain>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x1AD6FCC", Offset = "0x1AD6FCC", VA = "0x1AD6FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x1AD7014", Offset = "0x1AD7014", VA = "0x1AD7014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x1AD546C", Offset = "0x1AD546C", VA = "0x1AD546C")]
		[DebuggerHidden]
		public <VerifyToRotateHeadAgain>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1AD6F78", Offset = "0x1AD6F78", VA = "0x1AD6F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x1AD6F7C", Offset = "0x1AD6F7C", VA = "0x1AD6F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x1AD6FD4", Offset = "0x1AD6FD4", VA = "0x1AD6FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <DoCustomAnimation>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompanionCharacterConfiguration <>4__this;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string triggerName;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x1AD70DC", Offset = "0x1AD70DC", VA = "0x1AD70DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0x1AD7124", Offset = "0x1AD7124", VA = "0x1AD7124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1AD5E54", Offset = "0x1AD5E54", VA = "0x1AD5E54")]
		[DebuggerHidden]
		public <DoCustomAnimation>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1AD701C", Offset = "0x1AD701C", VA = "0x1AD701C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1AD7020", Offset = "0x1AD7020", VA = "0x1AD7020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x1AD70E4", Offset = "0x1AD70E4", VA = "0x1AD70E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000170")]
	[CompilerGenerated]
	private sealed class <PlayReactionSoundsCoroutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompanionCharacterConfiguration <>4__this;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <reactionSound>5__2;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x1AD7390", Offset = "0x1AD7390", VA = "0x1AD7390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0x1AD73D8", Offset = "0x1AD73D8", VA = "0x1AD73D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x1AD6C20", Offset = "0x1AD6C20", VA = "0x1AD6C20")]
		[DebuggerHidden]
		public <PlayReactionSoundsCoroutine>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x1AD712C", Offset = "0x1AD712C", VA = "0x1AD712C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x1AD7130", Offset = "0x1AD7130", VA = "0x1AD7130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x1AD7398", Offset = "0x1AD7398", VA = "0x1AD7398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator Animator;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] ReactionsSound;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Spine;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Spine2;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Neck;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Head;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int NumberOfIdles;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int NumberOfSelfiesPoses;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfRaisingArmsPoses;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int NumberOfPointingRight;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int NumberOfPointingLeft;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int NumberOfPointingFront;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int NumberOfPointingFrontSurprise;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int NumberOfPointingBack;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> RandomAnimations;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SkinnedMeshRenderer MeshRender;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material DefaultMobile;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material ZombieMobile;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Space(5f)]
	public bool ShowTime;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool isTakingPicture;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int lastPhotoPose;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform lookAtElement;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool notRotateHead;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected string currentAnimationBeforeChange;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected AudioSource soundTrackAudioSource;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected AudioSource reactionSoundAudioSource;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string POINT_RIGHT_ANIMATION;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static string POINT_LEFT_ANIMATION;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static string POINT_FRONT_ANIMATION;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static string RAISING_ARMS_ANIMATION;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static string IDLE_ANIMATION;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static string MONSTER_ANIMATION;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static string WAVE_ANIMATION;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static string EXITEMENT_ANIMATION;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected static string SURPRISE_ANIMATION;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected static string POINTING_FRONT_SURPRISE_ANIMATION;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected static string SCARE_FRONT_ANIMATION;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected static string SCARE_LEFT_ANIMATION;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected static string SCARE_RIGHT_ANIMATION;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected static string THUMBS_UP_ANIMATION;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected static string POINTING_BACK_ANIMATION;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool alreadyRaisedArms;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastTimeWaved;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CompanionCharacterEvents.CompanionCharacterEvent[] events;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 lastRelativeSpine;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 lastRelativeSpine2;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastRelativeNeck;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 lastRelativeHead;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform initialElement;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int LastReactionIndex;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float startTime;

	[Token(Token = "0x17000087")]
	private Material zombieMaterial
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1AD4FE0", Offset = "0x1AD4FE0", VA = "0x1AD4FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x1AD4FE8", Offset = "0x1AD4FE8", VA = "0x1AD4FE8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1AD514C", Offset = "0x1AD514C", VA = "0x1AD514C")]
	protected void Update()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1AD540C", Offset = "0x1AD540C", VA = "0x1AD540C")]
	[IteratorStateMachine(typeof(<VerifyToRotateHeadAgain>d__55))]
	public IEnumerator VerifyToRotateHeadAgain()
	{
		return null;
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1AD5494", Offset = "0x1AD5494", VA = "0x1AD5494")]
	public void Config()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1AD5730", Offset = "0x1AD5730", VA = "0x1AD5730")]
	public void InvokeEvents()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1AD578C", Offset = "0x1AD578C", VA = "0x1AD578C")]
	private void InvokeByType(CompanionCharacterEvents.CompanionCharacterEvent item)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1AD5A18", Offset = "0x1AD5A18", VA = "0x1AD5A18")]
	protected bool SetTriggerOnAnimator(string triggerName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1AD5B28", Offset = "0x1AD5B28", VA = "0x1AD5B28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1AD5B2C", Offset = "0x1AD5B2C", VA = "0x1AD5B2C")]
	public void LookRotation(Transform element, bool rotateOnX, float multiplier, ref Vector3 lastRelativePos)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x1AD5978", Offset = "0x1AD5978", VA = "0x1AD5978")]
	[IteratorStateMachine(typeof(<DoCustomAnimation>d__62))]
	private IEnumerator DoCustomAnimation(float time, string triggerName)
	{
		return null;
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1AD5E7C", Offset = "0x1AD5E7C", VA = "0x1AD5E7C", Slot = "5")]
	public virtual void DoRandomAnimations()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1AD5F7C", Offset = "0x1AD5F7C", VA = "0x1AD5F7C", Slot = "6")]
	public virtual void DoAnimationAt(int index)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x1AD6068", Offset = "0x1AD6068", VA = "0x1AD6068")]
	public int GetRandomAnimationIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x1AD60B8", Offset = "0x1AD60B8", VA = "0x1AD60B8", Slot = "7")]
	public virtual void DoMonster()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x1AD60C4", Offset = "0x1AD60C4", VA = "0x1AD60C4", Slot = "8")]
	public virtual void DoPointingLeft()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x1AD6168", Offset = "0x1AD6168", VA = "0x1AD6168", Slot = "9")]
	public virtual void DoPointingRight()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1AD620C", Offset = "0x1AD620C", VA = "0x1AD620C", Slot = "10")]
	public virtual void DoPointingFront()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1AD62B0", Offset = "0x1AD62B0", VA = "0x1AD62B0", Slot = "11")]
	public virtual void DoPointingBack()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1AD6354", Offset = "0x1AD6354", VA = "0x1AD6354", Slot = "12")]
	public virtual void DoRaisingArms()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1AD6484", Offset = "0x1AD6484", VA = "0x1AD6484", Slot = "13")]
	public virtual void DoAutomaticRaisingArms()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1AD6584", Offset = "0x1AD6584", VA = "0x1AD6584", Slot = "14")]
	public virtual void DoWave()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1AD65E4", Offset = "0x1AD65E4", VA = "0x1AD65E4", Slot = "15")]
	public virtual void DoExitement()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1AD6644", Offset = "0x1AD6644", VA = "0x1AD6644", Slot = "16")]
	public virtual void DoSurprise()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1AD66A4", Offset = "0x1AD66A4", VA = "0x1AD66A4", Slot = "17")]
	public virtual void DoPointFrontSurprise()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1AD6748", Offset = "0x1AD6748", VA = "0x1AD6748", Slot = "18")]
	public virtual void DoScareFront()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1AD67A8", Offset = "0x1AD67A8", VA = "0x1AD67A8", Slot = "19")]
	public virtual void DoScareLeft()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1AD6808", Offset = "0x1AD6808", VA = "0x1AD6808", Slot = "20")]
	public virtual void DoScareRight()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1AD6868", Offset = "0x1AD6868", VA = "0x1AD6868", Slot = "21")]
	public virtual void DoThumbsUp()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1AD68C8", Offset = "0x1AD68C8", VA = "0x1AD68C8", Slot = "22")]
	public virtual void DoPhotoPose(Transform pivot)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1AD6A60", Offset = "0x1AD6A60", VA = "0x1AD6A60", Slot = "23")]
	public virtual void StopPhotoPose()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1AD6B0C", Offset = "0x1AD6B0C", VA = "0x1AD6B0C", Slot = "24")]
	public virtual void StopRaisingArms()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1AD5B08", Offset = "0x1AD5B08", VA = "0x1AD5B08")]
	public void PlayReactionSounds(string animationName)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1AD6BAC", Offset = "0x1AD6BAC", VA = "0x1AD6BAC")]
	[IteratorStateMachine(typeof(<PlayReactionSoundsCoroutine>d__85))]
	private IEnumerator PlayReactionSoundsCoroutine(string animationName)
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1AD6C48", Offset = "0x1AD6C48", VA = "0x1AD6C48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1AD6C50", Offset = "0x1AD6C50", VA = "0x1AD6C50")]
	public CompanionCharacterConfiguration()
	{
	}
}
[Token(Token = "0x2000171")]
public class CompanionCharacterEvents : IController<CompanionCharacterEvents>
{
	[Token(Token = "0x2000172")]
	public enum CompanionCharacterEventType
	{
		[Token(Token = "0x4000D1F")]
		POINTING_RIGHT,
		[Token(Token = "0x4000D20")]
		POINTING_LEFT,
		[Token(Token = "0x4000D21")]
		POINTING_FRONT,
		[Token(Token = "0x4000D22")]
		RAISING_ARMS,
		[Token(Token = "0x4000D23")]
		MONSTER,
		[Token(Token = "0x4000D24")]
		WAVE,
		[Token(Token = "0x4000D25")]
		EXITEMENT,
		[Token(Token = "0x4000D26")]
		SURPRISE,
		[Token(Token = "0x4000D27")]
		SCARE_FRONT,
		[Token(Token = "0x4000D28")]
		SCARE_LEFT,
		[Token(Token = "0x4000D29")]
		SCARE_RIGHT,
		[Token(Token = "0x4000D2A")]
		POINTING_FRONT_SURPRISE,
		[Token(Token = "0x4000D2B")]
		THUMBS_UP,
		[Token(Token = "0x4000D2C")]
		POINTING_BACK,
		[Token(Token = "0x4000D2D")]
		OTHER
	}

	[Serializable]
	[Token(Token = "0x2000173")]
	public class CompanionCharacterEvent
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CompanionCharacterEventType EventType;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string EventTrigger;

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1AD7428", Offset = "0x1AD7428", VA = "0x1AD7428")]
		public CompanionCharacterEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000174")]
	public class ScenarioCompanionCharacterEvents
	{
		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RideType Scenario;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompanionCharacterEvent[] CompanionCharacterEvents;

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1AD7430", Offset = "0x1AD7430", VA = "0x1AD7430")]
		public ScenarioCompanionCharacterEvents()
		{
		}
	}

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScenarioCompanionCharacterEvents[] ScenariosEvents;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1AD5688", Offset = "0x1AD5688", VA = "0x1AD5688")]
	public CompanionCharacterEvent[] GetEventsByScenario(RideType rideType)
	{
		return null;
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1AD73E0", Offset = "0x1AD73E0", VA = "0x1AD73E0")]
	public CompanionCharacterEvents()
	{
	}
}
[Token(Token = "0x2000175")]
public class CompanionCharacterConfigurationSkeleton : CompanionCharacterConfiguration
{
	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] monsterAnimation;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1AD7438", Offset = "0x1AD7438", VA = "0x1AD7438", Slot = "7")]
	public override void DoMonster()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1AD74C8", Offset = "0x1AD74C8", VA = "0x1AD74C8", Slot = "8")]
	public override void DoPointingLeft()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1AD74CC", Offset = "0x1AD74CC", VA = "0x1AD74CC", Slot = "9")]
	public override void DoPointingRight()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1AD74D0", Offset = "0x1AD74D0", VA = "0x1AD74D0", Slot = "12")]
	public override void DoRaisingArms()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x1AD74D4", Offset = "0x1AD74D4", VA = "0x1AD74D4", Slot = "13")]
	public override void DoAutomaticRaisingArms()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1AD74D8", Offset = "0x1AD74D8", VA = "0x1AD74D8", Slot = "14")]
	public override void DoWave()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1AD7520", Offset = "0x1AD7520", VA = "0x1AD7520", Slot = "22")]
	public override void DoPhotoPose(Transform pivot)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1AD7524", Offset = "0x1AD7524", VA = "0x1AD7524")]
	public CompanionCharacterConfigurationSkeleton()
	{
	}
}
[Token(Token = "0x2000176")]
public class SantaClausConfig : IController<SantaClausConfig>
{
	[Token(Token = "0x2000177")]
	[SerializeField]
	public class SantaClausEvent
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1AD85F8", Offset = "0x1AD85F8", VA = "0x1AD85F8")]
		public SantaClausEvent()
		{
		}
	}

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer SkinnedRenderer;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Normal;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Zombie;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer SleighRenderer;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material NormalSleigh;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material ZombieSleigh;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator Animator;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Spine;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Spine2;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform Neck;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform Head;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform InitialElement;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowCurrentTime;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource ChristmansSongPlayer;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip CreepyChristmans;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip HappyChristmans;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource MerryChristmansSongPlayer;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] MerryChristmans;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private List<SantaClausEvent> SantaClausEvents;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float PlayTime;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int TOTAL_PHOTOS_POSES;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isTakingPicture;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform lookAtElement;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool alreadyRaisedArms;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int lastPhotoPose;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastTimeWaved;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 lastRelativeSpine;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 lastRelativeSpine2;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 lastRelativeNeck;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 lastRelativeHead;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 spineStartPosition;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 spine2StartPosition;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 neckStartPosition;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 headStartPosition;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 spineStartEulerAngles;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 spine2StartEulerAngles;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 neckStartEulerAngles;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 headStartEulerAngles;

	[Token(Token = "0x1700008E")]
	private float CurrentPlayTime
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1AD7718", Offset = "0x1AD7718", VA = "0x1AD7718")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1AD7738", Offset = "0x1AD7738", VA = "0x1AD7738", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x1AD7788", Offset = "0x1AD7788", VA = "0x1AD7788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1AD77C4", Offset = "0x1AD77C4", VA = "0x1AD77C4")]
	public bool SantaClausNotAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1AD77F0", Offset = "0x1AD77F0", VA = "0x1AD77F0")]
	public bool SantaClausAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1AD77D0", Offset = "0x1AD77D0", VA = "0x1AD77D0")]
	private void ConfigQuality()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1AD77CC", Offset = "0x1AD77CC", VA = "0x1AD77CC")]
	private void VerifyListOfEvents()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1AD77F8", Offset = "0x1AD77F8", VA = "0x1AD77F8")]
	public void ChangeMaterial(bool isZombie)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1AD78A4", Offset = "0x1AD78A4", VA = "0x1AD78A4")]
	private void InvokeEvents()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1AD79B4", Offset = "0x1AD79B4", VA = "0x1AD79B4")]
	public void LookRotation(Transform element, bool rotateOnX, float multiplier, ref Vector3 lastRelativePos)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1AD7CA0", Offset = "0x1AD7CA0", VA = "0x1AD7CA0")]
	public void EnterPlay(float startTime)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1AD78A0", Offset = "0x1AD78A0", VA = "0x1AD78A0")]
	public void ChangeToNormal()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1AD789C", Offset = "0x1AD789C", VA = "0x1AD789C")]
	public void ChangeToZombie()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1AD7D90", Offset = "0x1AD7D90", VA = "0x1AD7D90")]
	public void ChangeToPosePhoto(Transform lookAt)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1AD802C", Offset = "0x1AD802C", VA = "0x1AD802C")]
	public void ChangeBackToIdleFromPose()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1AD80D8", Offset = "0x1AD80D8", VA = "0x1AD80D8")]
	public void PointingPose()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1AD8140", Offset = "0x1AD8140", VA = "0x1AD8140")]
	public void RaisingArms()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1AD7D28", Offset = "0x1AD7D28", VA = "0x1AD7D28")]
	public void WavePose()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1AD81A8", Offset = "0x1AD81A8", VA = "0x1AD81A8")]
	public void MonsterPose()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1AD8210", Offset = "0x1AD8210", VA = "0x1AD8210")]
	public void EventsByScenarioRockFalls()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1AD8600", Offset = "0x1AD8600", VA = "0x1AD8600")]
	public void EventsByScenarioWyvernSiege()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1AD8A94", Offset = "0x1AD8A94", VA = "0x1AD8A94")]
	public void EventsByScenarioTRexKingdon()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1AD8F4C", Offset = "0x1AD8F4C", VA = "0x1AD8F4C")]
	public void EventsByScenarioNeonRider()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1AD934C", Offset = "0x1AD934C", VA = "0x1AD934C")]
	public void EventsByScenarioArmageddon()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1AD9890", Offset = "0x1AD9890", VA = "0x1AD9890")]
	public void EventsByScenarioSnowland()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1AD9C90", Offset = "0x1AD9C90", VA = "0x1AD9C90")]
	public void EventsByScenarioHalloween()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1ADA26C", Offset = "0x1ADA26C", VA = "0x1ADA26C")]
	public void EventsByScenarioDreadBlood()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1ADA7A0", Offset = "0x1ADA7A0", VA = "0x1ADA7A0")]
	public void EventsByScenarioLostForest()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1ADAEB8", Offset = "0x1ADAEB8", VA = "0x1ADAEB8")]
	public SantaClausConfig()
	{
	}
}
[Token(Token = "0x2000178")]
public class AutomatedWarmUpController : MonoBehaviour
{
	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1ADAF4C", Offset = "0x1ADAF4C", VA = "0x1ADAF4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1ADAFA4", Offset = "0x1ADAFA4", VA = "0x1ADAFA4")]
	public AutomatedWarmUpController()
	{
	}
}
[Token(Token = "0x2000179")]
public class CRCController : IController<CRCController>
{
	[Serializable]
	[Token(Token = "0x200017A")]
	public struct CRC
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RideType RelatedSceario;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint crcAndroid;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint crcWindows;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint crcIos;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint crcPS4;
	}

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CRC[] CRCsList;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1ADAFAC", Offset = "0x1ADAFAC", VA = "0x1ADAFAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1ADB038", Offset = "0x1ADB038", VA = "0x1ADB038")]
	public static uint GetCRCByRideType(RideType rideType)
	{
		return default(uint);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1ADB0E0", Offset = "0x1ADB0E0", VA = "0x1ADB0E0")]
	public CRCController()
	{
	}
}
[Token(Token = "0x200017B")]
public class GameController : IController<GameController>
{
	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerGroup MasterMixer;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference HelmetAssetReference;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Crosshair;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public LimboState LimboState;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AuthenticationState AuthenticationState;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public LoadingState LoadingState;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public LoadedState LoadedState;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public PlayingState PlayingState;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public StateMachine StateMachine;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CoasterType currentGameMode;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool AlreadyInitializedBefore;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[HideInInspector]
	public bool ClearCheckpointsForMultiplayer;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[HideInInspector]
	public bool IsEditingAvatar;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[HideInInspector]
	public bool IsDefaultAvatar;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool DoNotShowTutorial;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool alreadyQuitting;

	[Token(Token = "0x1700008F")]
	public CoasterType CurrentGameMode
	{
		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1ADB128", Offset = "0x1ADB128", VA = "0x1ADB128")]
		get
		{
			return default(CoasterType);
		}
		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1ADB144", Offset = "0x1ADB144", VA = "0x1ADB144")]
		set
		{
		}
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1ADB14C", Offset = "0x1ADB14C", VA = "0x1ADB14C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1ADB784", Offset = "0x1ADB784", VA = "0x1ADB784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1ADBB00", Offset = "0x1ADBB00", VA = "0x1ADBB00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1ADB654", Offset = "0x1ADB654", VA = "0x1ADB654")]
	public void CreateSpecificController()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1ADBB04", Offset = "0x1ADBB04", VA = "0x1ADBB04")]
	private void SpecificControllerInstance_Completed(AsyncOperationHandle<GameObject> controllerSpecific)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1ADBB24", Offset = "0x1ADBB24", VA = "0x1ADBB24")]
	public void ControllerSpecificCreated()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1ADBE04", Offset = "0x1ADBE04", VA = "0x1ADBE04")]
	private void CreateHelmet()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1ADBD84", Offset = "0x1ADBD84", VA = "0x1ADBD84")]
	private void ConfigureStateMachine()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1ADB9A8", Offset = "0x1ADB9A8", VA = "0x1ADB9A8")]
	private void StartStates()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1ADBE90", Offset = "0x1ADBE90", VA = "0x1ADBE90")]
	public void ChangeState(GameStateEnum newState)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1ADB82C", Offset = "0x1ADB82C", VA = "0x1ADB82C")]
	public void SetLanguage()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1ADBF24", Offset = "0x1ADBF24", VA = "0x1ADBF24")]
	public static string GetRaceModeTimeFormated(float timeValue)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1ADBF34", Offset = "0x1ADBF34", VA = "0x1ADBF34")]
	public static string GetTimeFormated(float time)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1ADC058", Offset = "0x1ADC058", VA = "0x1ADC058")]
	public bool PlayAllowedByAnyone([Optional] Seat seat)
	{
		return default(bool);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1ADC180", Offset = "0x1ADC180", VA = "0x1ADC180")]
	public bool PlayAllowed([Optional] Seat seat)
	{
		return default(bool);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1ADC2E8", Offset = "0x1ADC2E8", VA = "0x1ADC2E8")]
	[RuntimeInitializeOnLoadMethod]
	private static void RunOnStart()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1ADC364", Offset = "0x1ADC364", VA = "0x1ADC364")]
	private static bool WantsToQuit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1ADC3FC", Offset = "0x1ADC3FC", VA = "0x1ADC3FC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1ADC534", Offset = "0x1ADC534", VA = "0x1ADC534")]
	public GameController()
	{
	}
}
[Token(Token = "0x200017C")]
public class IntroductionController : IController<IntroductionController>
{
	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroductionController <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x1ADCC34", Offset = "0x1ADCC34", VA = "0x1ADCC34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x1ADCC7C", Offset = "0x1ADCC7C", VA = "0x1ADCC7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1ADC5F0", Offset = "0x1ADC5F0", VA = "0x1ADC5F0")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1ADCAA8", Offset = "0x1ADCAA8", VA = "0x1ADCAA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1ADCAAC", Offset = "0x1ADCAAC", VA = "0x1ADCAAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1ADCC3C", Offset = "0x1ADCC3C", VA = "0x1ADCC3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017E")]
	[CompilerGenerated]
	private sealed class <PlayNext>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroductionController <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x1ADCF10", Offset = "0x1ADCF10", VA = "0x1ADCF10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x1ADCF58", Offset = "0x1ADCF58", VA = "0x1ADCF58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1ADC68C", Offset = "0x1ADC68C", VA = "0x1ADC68C")]
		[DebuggerHidden]
		public <PlayNext>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x1ADCC84", Offset = "0x1ADCC84", VA = "0x1ADCC84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x1ADCC88", Offset = "0x1ADCC88", VA = "0x1ADCC88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1ADCF18", Offset = "0x1ADCF18", VA = "0x1ADCF18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017F")]
	[CompilerGenerated]
	private sealed class <InstantiateAsset>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroductionController <>4__this;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperationHandle <async>5__2;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x1ADD238", Offset = "0x1ADD238", VA = "0x1ADD238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x1ADD280", Offset = "0x1ADD280", VA = "0x1ADD280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1ADC738", Offset = "0x1ADC738", VA = "0x1ADC738")]
		[DebuggerHidden]
		public <InstantiateAsset>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x1ADCF60", Offset = "0x1ADCF60", VA = "0x1ADCF60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x1ADCF64", Offset = "0x1ADCF64", VA = "0x1ADCF64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1ADD240", Offset = "0x1ADD240", VA = "0x1ADD240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference[] TimelinesAssetRef;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool IsDone;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int index;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector[] Timelines;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VideoPlayer MadeWithUnity;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1ADC57C", Offset = "0x1ADC57C", VA = "0x1ADC57C")]
	[IteratorStateMachine(typeof(<Start>d__5))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1ADC618", Offset = "0x1ADC618", VA = "0x1ADC618")]
	[IteratorStateMachine(typeof(<PlayNext>d__6))]
	private IEnumerator PlayNext()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1ADC6B4", Offset = "0x1ADC6B4", VA = "0x1ADC6B4")]
	[IteratorStateMachine(typeof(<InstantiateAsset>d__7))]
	public IEnumerator InstantiateAsset(int i)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1ADC760", Offset = "0x1ADC760", VA = "0x1ADC760")]
	private void ActivateCameraLayers()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1ADC7B4", Offset = "0x1ADC7B4", VA = "0x1ADC7B4")]
	private void Timeline_stopped(PlayableDirector timeline)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1ADCA60", Offset = "0x1ADCA60", VA = "0x1ADCA60")]
	public IntroductionController()
	{
	}
}
[Token(Token = "0x2000180")]
public class LoadingIconController : IController<LoadingIconController>
{
	[Serializable]
	[Token(Token = "0x2000181")]
	public struct Icon
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RideType RelatedSceario;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference IconAssetReference;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReference IconAssetReferenceMultiplayer;
	}

	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private sealed class <LoadScenarioIcon>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingIconController <>4__this;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<Texture> <async>5__2;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x1ADD9F4", Offset = "0x1ADD9F4", VA = "0x1ADD9F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x1ADDA3C", Offset = "0x1ADDA3C", VA = "0x1ADDA3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1ADD5D8", Offset = "0x1ADD5D8", VA = "0x1ADD5D8")]
		[DebuggerHidden]
		public <LoadScenarioIcon>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x1ADD648", Offset = "0x1ADD648", VA = "0x1ADD648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x1ADD64C", Offset = "0x1ADD64C", VA = "0x1ADD64C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1ADD9FC", Offset = "0x1ADD9FC", VA = "0x1ADD9FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer ScenarioIcon;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer LoadingText;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool IsLoadingIcon;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Icon[] IconsList;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool avatarWasEnableBefore;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1ADD288", Offset = "0x1ADD288", VA = "0x1ADD288", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1ADD31C", Offset = "0x1ADD31C", VA = "0x1ADD31C")]
	protected void CreateOverlays()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1ADD414", Offset = "0x1ADD414", VA = "0x1ADD414")]
	public void Toggle(bool hide)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1ADD320", Offset = "0x1ADD320", VA = "0x1ADD320")]
	public void EnableOverlay()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1ADD510", Offset = "0x1ADD510", VA = "0x1ADD510")]
	public void DisableOverlay()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1ADD564", Offset = "0x1ADD564", VA = "0x1ADD564")]
	[IteratorStateMachine(typeof(<LoadScenarioIcon>d__11))]
	private IEnumerator LoadScenarioIcon()
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1ADD600", Offset = "0x1ADD600", VA = "0x1ADD600")]
	public LoadingIconController()
	{
	}
}
[Token(Token = "0x2000183")]
public class PauseController : IController<PauseController>
{
	[Token(Token = "0x2000184")]
	[CompilerGenerated]
	private sealed class <PauseDelayCorroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseController <>4__this;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x1ADF054", Offset = "0x1ADF054", VA = "0x1ADF054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x1ADF09C", Offset = "0x1ADF09C", VA = "0x1ADF09C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x1ADEF20", Offset = "0x1ADEF20", VA = "0x1ADEF20")]
		[DebuggerHidden]
		public <PauseDelayCorroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x1ADEF90", Offset = "0x1ADEF90", VA = "0x1ADEF90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1ADEF94", Offset = "0x1ADEF94", VA = "0x1ADEF94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1ADF05C", Offset = "0x1ADF05C", VA = "0x1ADF05C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool IsPausedRemotely;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	public bool IsFocusLost;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[HideInInspector]
	public bool IsInteractingWithAd;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[HideInInspector]
	public bool IsTutorialLevelChanging;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool alreadyCalledPause;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool alreadyCalledUnPause;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool showedFocusLostMessage;

	[Token(Token = "0x17000098")]
	[HideInInspector]
	public bool IsPaused
	{
		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1ADDBA4", Offset = "0x1ADDBA4", VA = "0x1ADDBA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public bool IsInPauseDelay
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1ADEE78", Offset = "0x1ADEE78", VA = "0x1ADEE78")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1ADEE80", Offset = "0x1ADEE80", VA = "0x1ADEE80")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<bool> OnPause
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1ADDA44", Offset = "0x1ADDA44", VA = "0x1ADDA44")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1ADDAF4", Offset = "0x1ADDAF4", VA = "0x1ADDAF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1ADDBF8", Offset = "0x1ADDBF8", VA = "0x1ADDBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1ADDBFC", Offset = "0x1ADDBFC", VA = "0x1ADDBFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1ADDC00", Offset = "0x1ADDC00", VA = "0x1ADDC00")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1ADDEF4", Offset = "0x1ADDEF4", VA = "0x1ADDEF4")]
	private bool IsGameReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1ADE0D8", Offset = "0x1ADE0D8", VA = "0x1ADE0D8")]
	private bool ShouldPause()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1ADE170", Offset = "0x1ADE170", VA = "0x1ADE170")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1ADE330", Offset = "0x1ADE330", VA = "0x1ADE330")]
	private void DoPause()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1ADE3C8", Offset = "0x1ADE3C8", VA = "0x1ADE3C8")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1ADE494", Offset = "0x1ADE494", VA = "0x1ADE494")]
	private void InputFocusLost()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1ADE67C", Offset = "0x1ADE67C", VA = "0x1ADE67C")]
	private void InputFocusAcquired()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1ADE81C", Offset = "0x1ADE81C", VA = "0x1ADE81C")]
	private void VrFocusLost()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1ADE900", Offset = "0x1ADE900", VA = "0x1ADE900")]
	private void VrFocusAcquired()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1ADE974", Offset = "0x1ADE974", VA = "0x1ADE974")]
	public void PlayAreaLost()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1ADED50", Offset = "0x1ADED50", VA = "0x1ADED50")]
	public void PlayAreaAcquired()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1ADEE8C", Offset = "0x1ADEE8C", VA = "0x1ADEE8C")]
	public void PauseDelay()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1ADEEAC", Offset = "0x1ADEEAC", VA = "0x1ADEEAC")]
	[IteratorStateMachine(typeof(<PauseDelayCorroutine>d__31))]
	private IEnumerator PauseDelayCorroutine()
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1ADEF48", Offset = "0x1ADEF48", VA = "0x1ADEF48")]
	public PauseController()
	{
	}
}
[Token(Token = "0x2000185")]
public class RoomscaleController : IController<RoomscaleController>
{
	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The Distance Allowed to Player to Walk Away from the Center of Play Area")]
	public float DistanceFromCenter;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Vector3 Offset;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Quaternion RotationOffset;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 PositionOffset;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool ShowingWarning;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float distance;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1ADF0A4", Offset = "0x1ADF0A4", VA = "0x1ADF0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1ADF3C8", Offset = "0x1ADF3C8", VA = "0x1ADF3C8")]
	public void ResetOrientation()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1ADF34C", Offset = "0x1ADF34C", VA = "0x1ADF34C")]
	private float Distance(Vector3 v1, Vector3 v2)
	{
		return default(float);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1ADF434", Offset = "0x1ADF434", VA = "0x1ADF434")]
	public RoomscaleController()
	{
	}
}
[Token(Token = "0x2000186")]
public class SoundGalleryController : IController<SoundGalleryController>
{
	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip RaceCrashed;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip ShooterComboMissed;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1ADF4FC", Offset = "0x1ADF4FC", VA = "0x1ADF4FC")]
	public SoundGalleryController()
	{
	}
}
[Token(Token = "0x2000187")]
public class VideoController : IController<VideoController>
{
	[Token(Token = "0x2000188")]
	[CompilerGenerated]
	private sealed class <ShowVideo360Routine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoController <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x1ADFEBC", Offset = "0x1ADFEBC", VA = "0x1ADFEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x1ADFF04", Offset = "0x1ADFF04", VA = "0x1ADFF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1ADF5D8", Offset = "0x1ADF5D8", VA = "0x1ADF5D8")]
		[DebuggerHidden]
		public <ShowVideo360Routine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1ADFBA4", Offset = "0x1ADFBA4", VA = "0x1ADFBA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1ADFBA8", Offset = "0x1ADFBA8", VA = "0x1ADFBA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1ADFEC4", Offset = "0x1ADFEC4", VA = "0x1ADFEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[CompilerGenerated]
	private sealed class <InstantiateVideoPlayer>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoController <>4__this;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle <async>5__2;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x1AE015C", Offset = "0x1AE015C", VA = "0x1AE015C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x1AE01A4", Offset = "0x1AE01A4", VA = "0x1AE01A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1ADF8B0", Offset = "0x1ADF8B0", VA = "0x1ADF8B0")]
		[DebuggerHidden]
		public <InstantiateVideoPlayer>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1ADFF0C", Offset = "0x1ADFF0C", VA = "0x1ADFF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x1ADFF10", Offset = "0x1ADFF10", VA = "0x1ADFF10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1AE0164", Offset = "0x1AE0164", VA = "0x1AE0164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018A")]
	[CompilerGenerated]
	private sealed class <InstantiateVideoMaterial>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoController <>4__this;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<Material> <async>5__2;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x1AE0354", Offset = "0x1AE0354", VA = "0x1AE0354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x1AE039C", Offset = "0x1AE039C", VA = "0x1AE039C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1ADF94C", Offset = "0x1ADF94C", VA = "0x1ADF94C")]
		[DebuggerHidden]
		public <InstantiateVideoMaterial>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1AE01AC", Offset = "0x1AE01AC", VA = "0x1AE01AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1AE01B0", Offset = "0x1AE01B0", VA = "0x1AE01B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1AE035C", Offset = "0x1AE035C", VA = "0x1AE035C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018B")]
	[CompilerGenerated]
	private sealed class <EndReachedDelayed>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoController <>4__this;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VideoPlayer vp;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x1AE05B4", Offset = "0x1AE05B4", VA = "0x1AE05B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x1AE05FC", Offset = "0x1AE05FC", VA = "0x1AE05FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1ADFB2C", Offset = "0x1ADFB2C", VA = "0x1ADFB2C")]
		[DebuggerHidden]
		public <EndReachedDelayed>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1AE03A4", Offset = "0x1AE03A4", VA = "0x1AE03A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1AE03A8", Offset = "0x1AE03A8", VA = "0x1AE03A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1AE05BC", Offset = "0x1AE05BC", VA = "0x1AE05BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool IsDone;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference Player;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference Video360Material;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoClip VideoClip;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audio;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material video360;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1ADF544", Offset = "0x1ADF544", VA = "0x1ADF544")]
	public void ShowVideo360()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1ADF564", Offset = "0x1ADF564", VA = "0x1ADF564")]
	[IteratorStateMachine(typeof(<ShowVideo360Routine>d__8))]
	private IEnumerator ShowVideo360Routine()
	{
		return null;
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1ADF600", Offset = "0x1ADF600", VA = "0x1ADF600")]
	private void PrepareCompleted(VideoPlayer source)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1ADF6E0", Offset = "0x1ADF6E0", VA = "0x1ADF6E0")]
	private void Started(VideoPlayer source)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1ADF83C", Offset = "0x1ADF83C", VA = "0x1ADF83C")]
	[IteratorStateMachine(typeof(<InstantiateVideoPlayer>d__11))]
	public IEnumerator InstantiateVideoPlayer()
	{
		return null;
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1ADF8D8", Offset = "0x1ADF8D8", VA = "0x1ADF8D8")]
	[IteratorStateMachine(typeof(<InstantiateVideoMaterial>d__12))]
	public IEnumerator InstantiateVideoMaterial()
	{
		return null;
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1ADF974", Offset = "0x1ADF974", VA = "0x1ADF974")]
	private void EndReached(VideoPlayer vp)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1ADFA9C", Offset = "0x1ADFA9C", VA = "0x1ADFA9C")]
	[IteratorStateMachine(typeof(<EndReachedDelayed>d__14))]
	private IEnumerator EndReachedDelayed(VideoPlayer vp)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1ADFB54", Offset = "0x1ADFB54", VA = "0x1ADFB54")]
	public VideoController()
	{
	}
}
[Token(Token = "0x200018C")]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseInEditor;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RightController;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LeftController;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject CursorToTouch;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CursorToEditor;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1AE0604", Offset = "0x1AE0604", VA = "0x1AE0604")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1AE0660", Offset = "0x1AE0660", VA = "0x1AE0660")]
	public CursorController()
	{
	}
}
[Token(Token = "0x200018D")]
public class Fade : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <UpdateFade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fade <>4__this;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetValue;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool disableSound;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <soundTargetValue>5__2;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <interval>5__3;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeToGo>5__4;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <alphaInitialValue>5__5;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <alphaActualValue>5__6;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <soundInitialValue>5__7;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <soundActualValue>5__8;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x1AE0C30", Offset = "0x1AE0C30", VA = "0x1AE0C30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x1AE0C78", Offset = "0x1AE0C78", VA = "0x1AE0C78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1AE0904", Offset = "0x1AE0904", VA = "0x1AE0904")]
		[DebuggerHidden]
		public <UpdateFade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1AE0934", Offset = "0x1AE0934", VA = "0x1AE0934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1AE0938", Offset = "0x1AE0938", VA = "0x1AE0938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1AE0C38", Offset = "0x1AE0C38", VA = "0x1AE0C38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Fade instance;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material CameraFade;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CameraRigFade;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer render;

	[Token(Token = "0x170000A4")]
	public static Fade Instance
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1AE0668", Offset = "0x1AE0668", VA = "0x1AE0668")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1AE06B0", Offset = "0x1AE06B0", VA = "0x1AE06B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1AE07D8", Offset = "0x1AE07D8", VA = "0x1AE07D8")]
	public Coroutine FadeIn(float time = 1f, float targetValue = 0f)
	{
		return null;
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1AE0898", Offset = "0x1AE0898", VA = "0x1AE0898")]
	public Coroutine FadeIn(float time, float targetValue, bool disableSound)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1AE08BC", Offset = "0x1AE08BC", VA = "0x1AE08BC")]
	public Coroutine FadeOut(float time = 1f, float targetValue = 1f)
	{
		return null;
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1AE08E0", Offset = "0x1AE08E0", VA = "0x1AE08E0")]
	public Coroutine FadeOut(float time, float targetValue, bool disableSound)
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1AE07FC", Offset = "0x1AE07FC", VA = "0x1AE07FC")]
	[IteratorStateMachine(typeof(<UpdateFade>d__11))]
	private IEnumerator UpdateFade(float fadeTime, float targetValue, bool disableSound = true)
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1AE092C", Offset = "0x1AE092C", VA = "0x1AE092C")]
	public Fade()
	{
	}
}
[Token(Token = "0x200018F")]
public class FadeMessage : IController<FadeMessage>
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Title;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Description;

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1AE0C80", Offset = "0x1AE0C80", VA = "0x1AE0C80")]
	public void SetText(string title, string desc)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1AE0CD0", Offset = "0x1AE0CD0", VA = "0x1AE0CD0")]
	public FadeMessage()
	{
	}
}
[Token(Token = "0x2000190")]
public class ScreenFade : IController<ScreenFade>
{
	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera CameraCubemapPrefab;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PauseCubemapPrefab;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LoadingIconPrefab;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference BlankScreenshotAssetReference;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask WarningLayer;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cameraCubemap;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject pauseCubemap;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material pauseCubmemapMaterial;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture pauseCubemapTexture;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer pauseCubemapRenderer;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RobotSpinning holodisk;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int pauseCubemapShaderID;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int colorBlendShaderID;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int colorShaderID;

	[Token(Token = "0x4000DDE")]
	private const string fakePauseShaderID = "_IsFakePause";

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isLoading;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isFakePause;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool isPaused;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float colorBlend;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float targetColorBlend;

	[Token(Token = "0x170000A7")]
	public bool IsLoading
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x1AE16EC", Offset = "0x1AE16EC", VA = "0x1AE16EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x1AE148C", Offset = "0x1AE148C", VA = "0x1AE148C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public bool IsPaused
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1AE1AB4", Offset = "0x1AE1AB4", VA = "0x1AE1AB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1ADE45C", Offset = "0x1ADE45C", VA = "0x1ADE45C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	private float ColorBlend
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1AE1B8C", Offset = "0x1AE1B8C", VA = "0x1AE1B8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1AE1ABC", Offset = "0x1AE1ABC", VA = "0x1AE1ABC")]
		set
		{
		}
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1AE0D18", Offset = "0x1AE0D18", VA = "0x1AE0D18")]
	public void DelayedStart()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x1AE0F9C", Offset = "0x1AE0F9C", VA = "0x1AE0F9C")]
	public void ToggleLoadingOverlay(bool hide)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x1AE1010", Offset = "0x1AE1010", VA = "0x1AE1010")]
	public void FadeAudio(bool hide)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x1AE1174", Offset = "0x1AE1174", VA = "0x1AE1174")]
	private void ScreenshotCameraConfig()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1AE1468", Offset = "0x1AE1468", VA = "0x1AE1468")]
	private void RenderToCubemap()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x1AE1B94", Offset = "0x1AE1B94", VA = "0x1AE1B94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1AE16F4", Offset = "0x1AE16F4", VA = "0x1AE16F4")]
	private void OnPause(bool hide)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x1AE14E8", Offset = "0x1AE14E8", VA = "0x1AE14E8")]
	private void OnLoading(bool hide)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1AE1CC0", Offset = "0x1AE1CC0", VA = "0x1AE1CC0")]
	public void ResetLoadingOverlayRotation()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1AE1D30", Offset = "0x1AE1D30", VA = "0x1AE1D30")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x1AE1D8C", Offset = "0x1AE1D8C", VA = "0x1AE1D8C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1AE1DE8", Offset = "0x1AE1DE8", VA = "0x1AE1DE8")]
	public ScreenFade()
	{
	}
}
[Token(Token = "0x2000192")]
public class SoundFade : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFade <>4__this;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource source;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x1AE2444", Offset = "0x1AE2444", VA = "0x1AE2444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x1AE248C", Offset = "0x1AE248C", VA = "0x1AE248C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1AE21EC", Offset = "0x1AE21EC", VA = "0x1AE21EC")]
		[DebuggerHidden]
		public <FadeIn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1AE2314", Offset = "0x1AE2314", VA = "0x1AE2314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1AE2318", Offset = "0x1AE2318", VA = "0x1AE2318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1AE244C", Offset = "0x1AE244C", VA = "0x1AE244C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFade <>4__this;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource source;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x1AE25C8", Offset = "0x1AE25C8", VA = "0x1AE25C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x1AE2610", Offset = "0x1AE2610", VA = "0x1AE2610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1AE22DC", Offset = "0x1AE22DC", VA = "0x1AE22DC")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1AE2494", Offset = "0x1AE2494", VA = "0x1AE2494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x1AE2498", Offset = "0x1AE2498", VA = "0x1AE2498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1AE25D0", Offset = "0x1AE25D0", VA = "0x1AE25D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SoundFade instance;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isDestroing;

	[Token(Token = "0x170000AA")]
	public static SoundFade Instance
	{
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x1AE1F34", Offset = "0x1AE1F34", VA = "0x1AE1F34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1AE2048", Offset = "0x1AE2048", VA = "0x1AE2048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1AE2114", Offset = "0x1AE2114", VA = "0x1AE2114")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1AE2124", Offset = "0x1AE2124", VA = "0x1AE2124")]
	public Coroutine FadeIn(float time = 1f, [Optional] AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1AE215C", Offset = "0x1AE215C", VA = "0x1AE215C")]
	[IteratorStateMachine(typeof(<FadeIn>d__8))]
	private IEnumerator FadeIn([Optional] AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1AE2214", Offset = "0x1AE2214", VA = "0x1AE2214")]
	public Coroutine FadeOut(float time = 1f, [Optional] AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1AE224C", Offset = "0x1AE224C", VA = "0x1AE224C")]
	[IteratorStateMachine(typeof(<FadeOut>d__10))]
	private IEnumerator FadeOut([Optional] AudioSource source)
	{
		return null;
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x1AE2304", Offset = "0x1AE2304", VA = "0x1AE2304")]
	public SoundFade()
	{
	}
}
[Token(Token = "0x2000195")]
public class FogDensity : MonoBehaviour
{
	[Token(Token = "0x2000196")]
	public enum FogModes
	{
		[Token(Token = "0x4000DFC")]
		Exponential,
		[Token(Token = "0x4000DFD")]
		ExponentialSquared,
		[Token(Token = "0x4000DFE")]
		Linear
	}

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fog;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fogColor;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fogDensity;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FogModes fogMode;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool previousFog;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color previousFogColor;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float previousFogDensity;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private FogModes previousFogMode;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1AE2618", Offset = "0x1AE2618", VA = "0x1AE2618")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1AE26E0", Offset = "0x1AE26E0", VA = "0x1AE26E0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x1AE273C", Offset = "0x1AE273C", VA = "0x1AE273C")]
	public FogDensity()
	{
	}
}
[Token(Token = "0x2000197")]
public class BHapticsController : IController<BHapticsController>
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticSource Chain;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticSource Jump;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticSource Land;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HapticSource Brake;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HapticSource DeathClip;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HapticClip AccelerationClip;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HapticClip MagmaWeaponClipRight;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HapticClip MagmaWeaponClipLeft;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HapticClip BallWeaponClipRight;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HapticClip BallWeaponClipLeft;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HapticClip CrossbowWeaponClipRight;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HapticClip CrossbowWeaponClipLeft;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HapticClip LaserWeaponClipRight;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HapticClip LaserWeaponClipLeft;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HapticClip RecoilWeaponClipRight;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HapticClip RecoilWeaponClipLeft;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HapticClip VestRecoilWeaponClipRight;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HapticClip VestRecoilWeaponClipLeft;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _isPlayingChain;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _alreadyJumped;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool _isPlayingBrake;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool _shouldRecoilOnVest;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HapticClip _currentWeaponRightHandClip;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HapticClip _currentWeaponLeftHandClip;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isCrashing;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _startDeathClip;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _alreadyVerifiedBHaptics;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _shouldEnableBHatics;

	[Token(Token = "0x170000AF")]
	public bool ShouldVibrate
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x1AE2744", Offset = "0x1AE2744", VA = "0x1AE2744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x1AE274C", Offset = "0x1AE274C", VA = "0x1AE274C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x1AE284C", Offset = "0x1AE284C", VA = "0x1AE284C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1AE2F28", Offset = "0x1AE2F28", VA = "0x1AE2F28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1AE3028", Offset = "0x1AE3028", VA = "0x1AE3028")]
	public void AddShooterEvents()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1AE3224", Offset = "0x1AE3224", VA = "0x1AE3224")]
	public void RemoveShooterEvents()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1AE32D4", Offset = "0x1AE32D4", VA = "0x1AE32D4")]
	public void AddRaceEvents()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1AE3438", Offset = "0x1AE3438", VA = "0x1AE3438")]
	public void RemoveRaceEvents()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1AE359C", Offset = "0x1AE359C", VA = "0x1AE359C")]
	private void OnCrashed()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1AE3670", Offset = "0x1AE3670", VA = "0x1AE3670")]
	private void OnShoot(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1AE3790", Offset = "0x1AE3790", VA = "0x1AE3790")]
	private void OnPause(bool pause)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1AE2D64", Offset = "0x1AE2D64", VA = "0x1AE2D64")]
	public void StartChain()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1AE2D8C", Offset = "0x1AE2D8C", VA = "0x1AE2D8C")]
	public void StopChain()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1AE2DB0", Offset = "0x1AE2DB0", VA = "0x1AE2DB0")]
	public void PlayAcceleration()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1AE2CD8", Offset = "0x1AE2CD8", VA = "0x1AE2CD8")]
	public void StopAcceleration()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1AE3824", Offset = "0x1AE3824", VA = "0x1AE3824")]
	public void StartBrake()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1AE3840", Offset = "0x1AE3840", VA = "0x1AE3840")]
	public void StopBrake()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1AE2CFC", Offset = "0x1AE2CFC", VA = "0x1AE2CFC")]
	public void StartJump()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1AE2D40", Offset = "0x1AE2D40", VA = "0x1AE2D40")]
	public void StartLand()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x1AE385C", Offset = "0x1AE385C", VA = "0x1AE385C")]
	public void OnPlayerDied()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1AE3860", Offset = "0x1AE3860", VA = "0x1AE3860")]
	public BHapticsController()
	{
	}
}
[Token(Token = "0x2000198")]
public class Helmet : IController<Helmet>
{
	[Token(Token = "0x2000199")]
	public enum HelmetType
	{
		[Token(Token = "0x4000E3E")]
		HELMET_BLINDER,
		[Token(Token = "0x4000E3F")]
		HELMET_ONLY,
		[Token(Token = "0x4000E40")]
		NO_HELMET
	}

	[Token(Token = "0x200019B")]
	[CompilerGenerated]
	private sealed class <ShowPopUp>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Helmet <>4__this;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite img;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x1AE5890", Offset = "0x1AE5890", VA = "0x1AE5890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x1AE58D8", Offset = "0x1AE58D8", VA = "0x1AE58D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1AE53AC", Offset = "0x1AE53AC", VA = "0x1AE53AC")]
		[DebuggerHidden]
		public <ShowPopUp>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1AE55C8", Offset = "0x1AE55C8", VA = "0x1AE55C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1AE55CC", Offset = "0x1AE55CC", VA = "0x1AE55CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1AE5898", Offset = "0x1AE5898", VA = "0x1AE5898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[CompilerGenerated]
	private sealed class <HidePopUp>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Helmet <>4__this;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clean;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x1AE5BAC", Offset = "0x1AE5BAC", VA = "0x1AE5BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x1AE5BF4", Offset = "0x1AE5BF4", VA = "0x1AE5BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1AE545C", Offset = "0x1AE545C", VA = "0x1AE545C")]
		[DebuggerHidden]
		public <HidePopUp>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1AE58FC", Offset = "0x1AE58FC", VA = "0x1AE58FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1AE5900", Offset = "0x1AE5900", VA = "0x1AE5900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1AE5BB4", Offset = "0x1AE5BB4", VA = "0x1AE5BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string SPEED_MASK;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Helmet")]
	[SerializeField]
	private SkinnedMeshRenderer HelmetMobile;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer HelmetStandalone;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator HelmetAnimator;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer VisorRenderer;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer BackgroundRenderer;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float BackgroundVisibility;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float BackgroundCutoff;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastBackgroundCutoff;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float VisorVisibility;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float visorCutoff;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastVisorCutoff;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SkinnedMeshRenderer BlinderRenderer;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material[] MobileHelmetMaterials;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Header("UI")]
	[Space]
	private Transform CanvasTransform;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Space]
	[Header("Message UI")]
	[SerializeField]
	private Canvas MessageCanvas;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI MessageText;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Space]
	[Header("Message PopUp UI")]
	private Canvas PopUpCanvas;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI PopUpText;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image PopUpImage;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CanvasGroup PopUpCanvasGroup;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float PopUpShowPosition;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float PopUpHidePosition;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Space]
	private GameObject SideDetails;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Space]
	private TextMeshProUGUI LeftTitleText;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI LeftValueText;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshProUGUI RightTitleText;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshProUGUI RightValueText;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshProUGUI BottomRightTitleText;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI BottomRightValueText;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool showingVisor;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float POPUP_ANIMATION;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Camera cameraCubemap;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private RenderTexture pauseCubemapTexture;

	[Token(Token = "0x170000B0")]
	public bool IsVisorCrashed
	{
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1AE38A8", Offset = "0x1AE38A8", VA = "0x1AE38A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	protected SkinnedMeshRenderer HelmetRenderer
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1AE38C4", Offset = "0x1AE38C4", VA = "0x1AE38C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public Material[] HelmetMaterials
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x1AE38CC", Offset = "0x1AE38CC", VA = "0x1AE38CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public bool IsShowingMessage
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1ADE624", Offset = "0x1ADE624", VA = "0x1ADE624")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B4")]
	public bool IsShowingPopUp
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1AE52EC", Offset = "0x1AE52EC", VA = "0x1AE52EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1AE38D4", Offset = "0x1AE38D4", VA = "0x1AE38D4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1AE3A7C", Offset = "0x1AE3A7C", VA = "0x1AE3A7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1AE40D4", Offset = "0x1AE40D4", VA = "0x1AE40D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1AE4490", Offset = "0x1AE4490", VA = "0x1AE4490")]
	public void Show(bool onPause = false)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1AE463C", Offset = "0x1AE463C", VA = "0x1AE463C")]
	public void Hide(bool onPause = false)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1AE3A40", Offset = "0x1AE3A40", VA = "0x1AE3A40")]
	public void DisableMeshes(bool onlyBlinder = false)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1AE4584", Offset = "0x1AE4584", VA = "0x1AE4584")]
	public void ShowBlinder()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1AE48E4", Offset = "0x1AE48E4", VA = "0x1AE48E4")]
	protected void ShowMediumBlinder()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1AE4868", Offset = "0x1AE4868", VA = "0x1AE4868")]
	protected void ShowCompleteBlinder()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1AE490C", Offset = "0x1AE490C", VA = "0x1AE490C")]
	public void HideBlinder()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1AE49A8", Offset = "0x1AE49A8", VA = "0x1AE49A8")]
	public void SetHelmetColor(Color color)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1AE4A5C", Offset = "0x1AE4A5C", VA = "0x1AE4A5C")]
	public void CrashTheVisor()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1AE400C", Offset = "0x1AE400C", VA = "0x1AE400C")]
	public void CleanTheVisor(bool instantly = false)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1AE3C38", Offset = "0x1AE3C38", VA = "0x1AE3C38")]
	private void ShowVisor(bool onPause = false)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1AE47A0", Offset = "0x1AE47A0", VA = "0x1AE47A0")]
	public void HideVisor(bool onPause = false)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1AE4A7C", Offset = "0x1AE4A7C", VA = "0x1AE4A7C")]
	public void SetRaceMode()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1AE4E74", Offset = "0x1AE4E74", VA = "0x1AE4E74")]
	public void SetShooterMode()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1AE4020", Offset = "0x1AE4020", VA = "0x1AE4020")]
	public void SetHUDVisibility(bool show)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1ADE640", Offset = "0x1ADE640", VA = "0x1ADE640")]
	public void ShowMessage(string text)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1AE52A8", Offset = "0x1AE52A8", VA = "0x1AE52A8")]
	public void ShowMessage()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1ADE7A0", Offset = "0x1ADE7A0", VA = "0x1ADE7A0")]
	public void HideMessage(bool clean = true)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1AE5200", Offset = "0x1AE5200", VA = "0x1AE5200")]
	private void SetMessage(string text)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1AE5308", Offset = "0x1AE5308", VA = "0x1AE5308")]
	[IteratorStateMachine(typeof(<ShowPopUp>d__65))]
	public IEnumerator ShowPopUp(string text, Sprite img)
	{
		return null;
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1AE53D4", Offset = "0x1AE53D4", VA = "0x1AE53D4")]
	[IteratorStateMachine(typeof(<HidePopUp>d__66))]
	public IEnumerator HidePopUp(bool clean = true)
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1AE5484", Offset = "0x1AE5484", VA = "0x1AE5484")]
	private void SetPopUp(string text, Sprite img)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1AE3D38", Offset = "0x1AE3D38", VA = "0x1AE3D38")]
	private void ScreenshotCameraConfig()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1AE54CC", Offset = "0x1AE54CC", VA = "0x1AE54CC")]
	public void RenderToCubemap()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1AE54F0", Offset = "0x1AE54F0", VA = "0x1AE54F0")]
	public Helmet()
	{
	}
}
[Token(Token = "0x200019E")]
public class HelmetAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1AE5BFC", Offset = "0x1AE5BFC", VA = "0x1AE5BFC")]
	public void HelmetMounted()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1AE5C4C", Offset = "0x1AE5C4C", VA = "0x1AE5C4C")]
	public void HelmetUnmounting()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1AE5C9C", Offset = "0x1AE5C9C", VA = "0x1AE5C9C")]
	public void HelmetUnmounted()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1AE5CF0", Offset = "0x1AE5CF0", VA = "0x1AE5CF0")]
	public void HelmetBlinderUnmounted()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1AE5D50", Offset = "0x1AE5D50", VA = "0x1AE5D50")]
	public void VisorOpened()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1AE5DA4", Offset = "0x1AE5DA4", VA = "0x1AE5DA4")]
	public void VisorClosing()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1AE5DF8", Offset = "0x1AE5DF8", VA = "0x1AE5DF8")]
	public HelmetAnimationEvents()
	{
	}
}
[Token(Token = "0x200019F")]
public class InteractableHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject highlight;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1AE5E00", Offset = "0x1AE5E00", VA = "0x1AE5E00")]
	public void Highlight()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1AE6734", Offset = "0x1AE6734", VA = "0x1AE6734")]
	public void Dehighlight()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1AE67B8", Offset = "0x1AE67B8", VA = "0x1AE67B8")]
	public InteractableHighlighter()
	{
	}
}
[Token(Token = "0x20001A0")]
public class ButtonInteractor : XRBaseInteractable
{
	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform MaxPositionDisplacement;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool MoveOnX;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool MoveOnY;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool MoveOnZ;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[Range(0f, 1f)]
	public float ClickingRange;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public Vector3 InitialPosition;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[HideInInspector]
	public bool Clicked;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 previousHandHeight;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private IXRHoverInteractor currentHoverInteractor;

	[Token(Token = "0x14000008")]
	public event Action OnClick
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1AE67C0", Offset = "0x1AE67C0", VA = "0x1AE67C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1AE6860", Offset = "0x1AE6860", VA = "0x1AE6860")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1AE6900", Offset = "0x1AE6900", VA = "0x1AE6900", Slot = "47")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1AE6A54", Offset = "0x1AE6A54", VA = "0x1AE6A54", Slot = "50")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x1AE6B70", Offset = "0x1AE6B70", VA = "0x1AE6B70")]
	private void OnButtonHoverEnter(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1AE6CB0", Offset = "0x1AE6CB0", VA = "0x1AE6CB0")]
	private void OnButtonHoverExit(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x1AE6EE4", Offset = "0x1AE6EE4", VA = "0x1AE6EE4", Slot = "58")]
	public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x1AE6C5C", Offset = "0x1AE6C5C", VA = "0x1AE6C5C")]
	private Vector3 GetLocalYPosition(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1AE6D2C", Offset = "0x1AE6D2C", VA = "0x1AE6D2C")]
	private void SetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1AE719C", Offset = "0x1AE719C", VA = "0x1AE719C")]
	public ButtonInteractor()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SliderInteraction : XRBaseInteractable
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform RightEdge;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform LeftEdge;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool MoveOnX;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool MoveOnY;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool MoveOnZ;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 previousHandHeight;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private IXRHoverInteractor currentHoverInteractor;

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1AE721C", Offset = "0x1AE721C", VA = "0x1AE721C", Slot = "47")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1AE7344", Offset = "0x1AE7344", VA = "0x1AE7344", Slot = "50")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1AE7460", Offset = "0x1AE7460", VA = "0x1AE7460")]
	private void OnButtonHoverEnter(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x1AE75EC", Offset = "0x1AE75EC", VA = "0x1AE75EC")]
	private void OnButtonHoverExit(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1AE76B0", Offset = "0x1AE76B0", VA = "0x1AE76B0", Slot = "58")]
	public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1AE7598", Offset = "0x1AE7598", VA = "0x1AE7598")]
	private Vector3 GetLocalYPosition(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x1AE77F4", Offset = "0x1AE77F4", VA = "0x1AE77F4")]
	private void SetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1AE7954", Offset = "0x1AE7954", VA = "0x1AE7954")]
	public SliderInteraction()
	{
	}
}
[Token(Token = "0x20001A2")]
public class LaserPointerBeam : MonoBehaviour
{
	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject laserBeam;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform laserBeamLine;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform laserBeamDot;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRRayInteractor XRRay;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool hideOutsideCanvas;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XRSimpleInteractable interactor;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 LastPoint;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1AE79B8", Offset = "0x1AE79B8", VA = "0x1AE79B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1AE7B98", Offset = "0x1AE7B98", VA = "0x1AE7B98")]
	private void Cast()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1AE7F50", Offset = "0x1AE7F50", VA = "0x1AE7F50")]
	public void ToggleLaserBeamLine(bool toggle)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1AE7F80", Offset = "0x1AE7F80", VA = "0x1AE7F80")]
	public LaserPointerBeam()
	{
	}
}
[Token(Token = "0x20001A3")]
public class LaserPointerHandSwitcher : IController<LaserPointerHandSwitcher>
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public LaserPointerBeam laserBeam;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool autoSwitchHands;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private XRRayInteractor leftHand;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private XRRayInteractor rightHand;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private XRRayInteractor headHand;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform pointerOverride;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XRRayInteractor currentInteractor;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public InputController.Hand CurrentHand;

	[Token(Token = "0x170000B9")]
	private InputController.Hand lastHand
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1AE7F88", Offset = "0x1AE7F88", VA = "0x1AE7F88")]
		get
		{
			return default(InputController.Hand);
		}
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1AE8028", Offset = "0x1AE8028", VA = "0x1AE8028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1AE84CC", Offset = "0x1AE84CC", VA = "0x1AE84CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1AE804C", Offset = "0x1AE804C", VA = "0x1AE804C")]
	private void SwitchHand(InputController.Hand newHand)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1AE8514", Offset = "0x1AE8514", VA = "0x1AE8514")]
	private void Left()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1AE85B8", Offset = "0x1AE85B8", VA = "0x1AE85B8")]
	private void Right()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1AE8668", Offset = "0x1AE8668", VA = "0x1AE8668")]
	private void Head()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1AE8718", Offset = "0x1AE8718", VA = "0x1AE8718")]
	public LaserPointerHandSwitcher()
	{
	}
}
[Token(Token = "0x20001A4")]
public class LayerChanger : MonoBehaviour
{
	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask Layer;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] childs;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1AE8760", Offset = "0x1AE8760", VA = "0x1AE8760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1AE8884", Offset = "0x1AE8884", VA = "0x1AE8884")]
	public LayerChanger()
	{
	}
}
[Token(Token = "0x20001A5")]
public enum LipSyncMicInputMode
{
	[Token(Token = "0x4000E73")]
	HoldToSpeak,
	[Token(Token = "0x4000E74")]
	PushToSpeak,
	[Token(Token = "0x4000E75")]
	ConstantSpeak,
	[Token(Token = "0x4000E76")]
	Manual
}
[Token(Token = "0x20001A6")]
[RequireComponent(typeof(AudioSource))]
public class LipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x4000E77")]
	private const string logScope = "micInput";

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Manual specification of Audio Source. Default will use any attached to the same object.")]
	[SerializeField]
	private AudioSource _audioSource;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	[SerializeField]
	[Tooltip("Microphone input volume control.")]
	private float _micInputVolume;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LipSyncMicInputMode _micInputMode;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("Button name used to drive HoldToSpeak and PushToSpeak methods of control.")]
	private string _inputButtonName;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _stopRecordingWhilePaused;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _stopRecordingWhileUnfocused;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The max amount of time to wait for mic recording to start.")]
	[SerializeField]
	private float _micCaptureTimeout;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _preferOculusMic;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool _initialized;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _micFrequency;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _focused;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _paused;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _selectedDevice;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _minFreq;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _maxFreq;

	[Token(Token = "0x170000BA")]
	public bool StopRecordingWhilePaused
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1AE888C", Offset = "0x1AE888C", VA = "0x1AE888C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1AE8894", Offset = "0x1AE8894", VA = "0x1AE8894")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public bool StopRecordingWhileUnfocused
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x1AE88A0", Offset = "0x1AE88A0", VA = "0x1AE88A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x1AE88A8", Offset = "0x1AE88A8", VA = "0x1AE88A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public AudioSource audioSource
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x1AE88B4", Offset = "0x1AE88B4", VA = "0x1AE88B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public int MicFrequency
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1AE88BC", Offset = "0x1AE88BC", VA = "0x1AE88BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BE")]
	public float MicInputVolume
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1AE88C4", Offset = "0x1AE88C4", VA = "0x1AE88C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1AE88CC", Offset = "0x1AE88CC", VA = "0x1AE88CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public bool micSelected
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1AE8904", Offset = "0x1AE8904", VA = "0x1AE8904")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C0")]
	public bool active
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1AE8924", Offset = "0x1AE8924", VA = "0x1AE8924")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1AE892C", Offset = "0x1AE892C", VA = "0x1AE892C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1AE8938", Offset = "0x1AE8938", VA = "0x1AE8938")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1AE89E8", Offset = "0x1AE89E8", VA = "0x1AE89E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1AE8A34", Offset = "0x1AE8A34", VA = "0x1AE8A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1AE8C70", Offset = "0x1AE8C70", VA = "0x1AE8C70")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1AE8DF0", Offset = "0x1AE8DF0", VA = "0x1AE8DF0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1AE8A58", Offset = "0x1AE8A58", VA = "0x1AE8A58")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1AE8BFC", Offset = "0x1AE8BFC", VA = "0x1AE8BFC")]
	private void ProcessMicActivity()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1AE8E0C", Offset = "0x1AE8E0C", VA = "0x1AE8E0C")]
	private void GetMicCaps()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1AE8FBC", Offset = "0x1AE8FBC", VA = "0x1AE8FBC")]
	private bool CanStartMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1AE9000", Offset = "0x1AE9000", VA = "0x1AE9000")]
	private void StartMicrophone_Internal()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1AE8C8C", Offset = "0x1AE8C8C", VA = "0x1AE8C8C")]
	private void StopMicrophone_Internal()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1AE93C4", Offset = "0x1AE93C4", VA = "0x1AE93C4")]
	public void SetMode(LipSyncMicInputMode newMode)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1AE93DC", Offset = "0x1AE93DC", VA = "0x1AE93DC")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x1AE948C", Offset = "0x1AE948C", VA = "0x1AE948C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x1AE952C", Offset = "0x1AE952C", VA = "0x1AE952C")]
	public LipSyncMicInput()
	{
	}
}
[Token(Token = "0x20001A7")]
public class OVRLipSyncContextSpriteFlip : MonoBehaviour
{
	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1AE95B4", Offset = "0x1AE95B4", VA = "0x1AE95B4")]
	public OVRLipSyncContextSpriteFlip()
	{
	}
}
[Token(Token = "0x20001A8")]
[RequireComponent(typeof(LODGroup))]
public class ReplicateBlendShapesToLODs : MonoBehaviour
{
	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int CopyFromLOD;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LODGroup lodGroup;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SkinnedMeshRenderer> skinnedMeshRenderers;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer copyFromSkinnedMeshRenderer;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1AE95BC", Offset = "0x1AE95BC", VA = "0x1AE95BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1AE9A08", Offset = "0x1AE9A08", VA = "0x1AE9A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1AE9B14", Offset = "0x1AE9B14", VA = "0x1AE9B14")]
	public ReplicateBlendShapesToLODs()
	{
	}
}
[Token(Token = "0x20001A9")]
public class DurableBundle : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SKU_Oculus;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SKU_Steam;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SKU_Pico;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string UltimatePackName;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Description;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip PreviewClip;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Price;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float FormatedPrice;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public DurableBundleType Type;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool Allowed;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float SalesDiscount;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool OnSale;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public int TotalScenarioNotAllowed;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public string BuyDescription;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string ButtonDescription;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string storeDescription;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Scenario> relatedScenarios;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<B4TGames.MenuObjects.Cart> relatedCarts;

	[Token(Token = "0x170000C1")]
	public string SKU
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1AE9B1C", Offset = "0x1AE9B1C", VA = "0x1AE9B1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	[HideInInspector]
	public string StoreDescription
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1AE9B24", Offset = "0x1AE9B24", VA = "0x1AE9B24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public List<Scenario> RelatedScenarios
	{
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1AE9FD4", Offset = "0x1AE9FD4", VA = "0x1AE9FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C4")]
	public List<B4TGames.MenuObjects.Cart> RelatedCarts
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1AEA1DC", Offset = "0x1AEA1DC", VA = "0x1AEA1DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1AEA2AC", Offset = "0x1AEA2AC", VA = "0x1AEA2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1AEA4F4", Offset = "0x1AEA4F4", VA = "0x1AEA4F4")]
	public void CalculateSalesDiscount()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1AE9BA0", Offset = "0x1AE9BA0", VA = "0x1AE9BA0")]
	private string GetScenariosIncluded()
	{
		return null;
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1AEA93C", Offset = "0x1AEA93C", VA = "0x1AEA93C")]
	public bool VerifyAllowedBuyBundle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x1AEA960", Offset = "0x1AEA960", VA = "0x1AEA960")]
	public DurableBundle()
	{
	}
}
[Token(Token = "0x20001AA")]
public enum DurableBundleType
{
	[Token(Token = "0x4000EA0")]
	NONE,
	[Token(Token = "0x4000EA1")]
	REALISTIC,
	[Token(Token = "0x4000EA2")]
	FANTASY,
	[Token(Token = "0x4000EA3")]
	IMPOSSIBLE_CAR,
	[Token(Token = "0x4000EA4")]
	ALL_RIDES
}
[Token(Token = "0x20001AB")]
public enum CartIdType
{
	[Token(Token = "0x4000EA6")]
	RockFalls,
	[Token(Token = "0x4000EA7")]
	TRexKingdom,
	[Token(Token = "0x4000EA8")]
	WyvernSiege,
	[Token(Token = "0x4000EA9")]
	Snowland,
	[Token(Token = "0x4000EAA")]
	NeonRider,
	[Token(Token = "0x4000EAB")]
	Halloween,
	[Token(Token = "0x4000EAC")]
	Armageddon,
	[Token(Token = "0x4000EAD")]
	LostForest,
	[Token(Token = "0x4000EAE")]
	DreadBlood,
	[Token(Token = "0x4000EAF")]
	TuwhenaVolcano,
	[Token(Token = "0x4000EB0")]
	None,
	[Token(Token = "0x4000EB1")]
	TropicalIsland,
	[Token(Token = "0x4000EB2")]
	NorthPole,
	[Token(Token = "0x4000EB3")]
	Twilight,
	[Token(Token = "0x4000EB4")]
	HauntedCastle,
	[Token(Token = "0x4000EB5")]
	Oasis,
	[Token(Token = "0x4000EB6")]
	GreatCanyon,
	[Token(Token = "0x4000EB7")]
	SpaceStation,
	[Token(Token = "0x4000EB8")]
	SecretCave,
	[Token(Token = "0x4000EB9")]
	Skate,
	[Token(Token = "0x4000EBA")]
	TeaCup,
	[Token(Token = "0x4000EBB")]
	Rocket,
	[Token(Token = "0x4000EBC")]
	HangGlider,
	[Token(Token = "0x4000EBD")]
	Swing,
	[Token(Token = "0x4000EBE")]
	Empty,
	[Token(Token = "0x4000EBF")]
	Qatar,
	[Token(Token = "0x4000EC0")]
	Ecuador,
	[Token(Token = "0x4000EC1")]
	Senegal,
	[Token(Token = "0x4000EC2")]
	Netherlands,
	[Token(Token = "0x4000EC3")]
	England,
	[Token(Token = "0x4000EC4")]
	Iran,
	[Token(Token = "0x4000EC5")]
	USA,
	[Token(Token = "0x4000EC6")]
	Wales,
	[Token(Token = "0x4000EC7")]
	Argentina,
	[Token(Token = "0x4000EC8")]
	SaudiArabia,
	[Token(Token = "0x4000EC9")]
	Mexico,
	[Token(Token = "0x4000ECA")]
	Poland,
	[Token(Token = "0x4000ECB")]
	France,
	[Token(Token = "0x4000ECC")]
	Australia,
	[Token(Token = "0x4000ECD")]
	Denmark,
	[Token(Token = "0x4000ECE")]
	Tunisia,
	[Token(Token = "0x4000ECF")]
	Spain,
	[Token(Token = "0x4000ED0")]
	CostaRica,
	[Token(Token = "0x4000ED1")]
	Germany,
	[Token(Token = "0x4000ED2")]
	Japan,
	[Token(Token = "0x4000ED3")]
	Belgium,
	[Token(Token = "0x4000ED4")]
	Canada,
	[Token(Token = "0x4000ED5")]
	Morocco,
	[Token(Token = "0x4000ED6")]
	Croatia,
	[Token(Token = "0x4000ED7")]
	Brazil,
	[Token(Token = "0x4000ED8")]
	Serbia,
	[Token(Token = "0x4000ED9")]
	Switzerland,
	[Token(Token = "0x4000EDA")]
	Cameroon,
	[Token(Token = "0x4000EDB")]
	Portugal,
	[Token(Token = "0x4000EDC")]
	Ghana,
	[Token(Token = "0x4000EDD")]
	Uruguay,
	[Token(Token = "0x4000EDE")]
	SouthKorea,
	[Token(Token = "0x4000EDF")]
	HyperCart,
	[Token(Token = "0x4000EE0")]
	Stonehenge,
	[Token(Token = "0x4000EE1")]
	Candyland
}
[Token(Token = "0x20001AC")]
public enum RideType
{
	[Token(Token = "0x4000EE3")]
	NONE,
	[Token(Token = "0x4000EE4")]
	ROCK_FALLS,
	[Token(Token = "0x4000EE5")]
	TREX_KINGDOM,
	[Token(Token = "0x4000EE6")]
	WYVERN_SIEGE,
	[Token(Token = "0x4000EE7")]
	SNOW_LAND,
	[Token(Token = "0x4000EE8")]
	NEON_RIDER,
	[Token(Token = "0x4000EE9")]
	HALLOWEEN,
	[Token(Token = "0x4000EEA")]
	ARMAGEDDON,
	[Token(Token = "0x4000EEB")]
	LOST_FOREST,
	[Token(Token = "0x4000EEC")]
	DREAD_BLOOD,
	[Token(Token = "0x4000EED")]
	TUWHENA_VOLCANO,
	[Token(Token = "0x4000EEE")]
	TROPICAL_ISLAND,
	[Token(Token = "0x4000EEF")]
	NORTH_POLE,
	[Token(Token = "0x4000EF0")]
	TWILIGHT,
	[Token(Token = "0x4000EF1")]
	HAUNTED_CASTLE,
	[Token(Token = "0x4000EF2")]
	OASIS,
	[Token(Token = "0x4000EF3")]
	GREAT_CANYON,
	[Token(Token = "0x4000EF4")]
	SPACE_STATION,
	[Token(Token = "0x4000EF5")]
	SECRET_CAVE,
	[Token(Token = "0x4000EF6")]
	TUTORIAL,
	[Token(Token = "0x4000EF7")]
	LOBBY,
	[Token(Token = "0x4000EF8")]
	STONEHENGE,
	[Token(Token = "0x4000EF9")]
	CANDYLAND
}
[Token(Token = "0x20001AD")]
public enum WeaponType
{
	[Token(Token = "0x4000EFB")]
	NONE,
	[Token(Token = "0x4000EFC")]
	SLINGSHOT,
	[Token(Token = "0x4000EFD")]
	DART,
	[Token(Token = "0x4000EFE")]
	CROSSBOW,
	[Token(Token = "0x4000EFF")]
	SNOW_GUN,
	[Token(Token = "0x4000F00")]
	LASER_GUN,
	[Token(Token = "0x4000F01")]
	TOILET_GUN,
	[Token(Token = "0x4000F02")]
	CAL50,
	[Token(Token = "0x4000F03")]
	WAND,
	[Token(Token = "0x4000F04")]
	SHOTGUN,
	[Token(Token = "0x4000F05")]
	TUWHENA_VOLCANO,
	[Token(Token = "0x4000F06")]
	TROPICAL_ISLAND,
	[Token(Token = "0x4000F07")]
	NORTH_POLE,
	[Token(Token = "0x4000F08")]
	TWILIGHT,
	[Token(Token = "0x4000F09")]
	HAUNTED_CASTLE,
	[Token(Token = "0x4000F0A")]
	OASIS,
	[Token(Token = "0x4000F0B")]
	GREAT_CANYON,
	[Token(Token = "0x4000F0C")]
	SPACE_STATION,
	[Token(Token = "0x4000F0D")]
	SECRET_CAVE,
	[Token(Token = "0x4000F0E")]
	CAL50_SUPRESSED,
	[Token(Token = "0x4000F0F")]
	BUBBLEGUN
}
[Token(Token = "0x20001AE")]
public class Friend
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong ID;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Token;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AvatarUrl;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong RoomID;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1AEA968", Offset = "0x1AEA968", VA = "0x1AEA968")]
	public Friend()
	{
	}
}
[Token(Token = "0x20001AF")]
public class MultiplayerController : IController<MultiplayerController>
{
	[Token(Token = "0x20001B0")]
	public enum MultiplayerState
	{
		[Token(Token = "0x4000F27")]
		NONE,
		[Token(Token = "0x4000F28")]
		CREATING_ROOM,
		[Token(Token = "0x4000F29")]
		CREATING_ROOM_FRIEND,
		[Token(Token = "0x4000F2A")]
		WAITING_RANDOM,
		[Token(Token = "0x4000F2B")]
		WAITING_IN_ROOM,
		[Token(Token = "0x4000F2C")]
		JOINING_ROOM,
		[Token(Token = "0x4000F2D")]
		CONNECTED_ROOM,
		[Token(Token = "0x4000F2E")]
		FULL_CONNECTED,
		[Token(Token = "0x4000F2F")]
		SELF_DISCONNECTING,
		[Token(Token = "0x4000F30")]
		TIMEOUT_DISCONNECTING,
		[Token(Token = "0x4000F31")]
		KICKED,
		[Token(Token = "0x4000F32")]
		OTHER_DISCONNECTING,
		[Token(Token = "0x4000F33")]
		APPLICATION_QUIT_DISCONNECTING,
		[Token(Token = "0x4000F34")]
		NO_INTERNET
	}

	[Token(Token = "0x20001B1")]
	[CompilerGenerated]
	private sealed class <DelayedStart>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerController <>4__this;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <gameObjectToAddElemenetsTo>5__2;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0x1AF0204", Offset = "0x1AF0204", VA = "0x1AF0204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0x1AF024C", Offset = "0x1AF024C", VA = "0x1AF024C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x1AEAF90", Offset = "0x1AEAF90", VA = "0x1AEAF90")]
		[DebuggerHidden]
		public <DelayedStart>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1AEFA88", Offset = "0x1AEFA88", VA = "0x1AEFA88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1AEFA8C", Offset = "0x1AEFA8C", VA = "0x1AEFA8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1AF020C", Offset = "0x1AF020C", VA = "0x1AF020C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[CompilerGenerated]
	private sealed class <InstantiateRacePin>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerController <>4__this;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RemotePlayer remotePlayer;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x1AF0530", Offset = "0x1AF0530", VA = "0x1AF0530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x1AF0578", Offset = "0x1AF0578", VA = "0x1AF0578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1AEE1DC", Offset = "0x1AEE1DC", VA = "0x1AEE1DC")]
		[DebuggerHidden]
		public <InstantiateRacePin>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1AF0318", Offset = "0x1AF0318", VA = "0x1AF0318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1AF031C", Offset = "0x1AF031C", VA = "0x1AF031C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1AF0538", Offset = "0x1AF0538", VA = "0x1AF0538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ShouldUseLocalMultiplayer;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SafetyEvent OnAnyMultiplayerStatusChanged;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnNewPlayerJoined;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup VoIPMixer;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference RemotePlayerPin;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool ReloadingRemoteAvatar;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool _isJoinableOnByRichPresence;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _roomToConnect;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _shouldUseVoip;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private MultiplayerState _state;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RemotePlayer> _remotePlayers;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SeatType MySeatType;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float LastConnetionTime;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalInvitesSent;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool alreadyStarted;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SeatType[] defaultSeatOrder;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float MAX_INACTIVE_CONNECTION;

	[Token(Token = "0x170000C5")]
	[HideInInspector]
	public bool HasMultiplayer
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1AEA970", Offset = "0x1AEA970", VA = "0x1AEA970")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	[HideInInspector]
	public bool AnyoneCanConnectToRoom
	{
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1AEA9E0", Offset = "0x1AEA9E0", VA = "0x1AEA9E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1AEAA98", Offset = "0x1AEAA98", VA = "0x1AEAA98")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	private bool IsLocalMultiplayer
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1AEAB04", Offset = "0x1AEAB04", VA = "0x1AEAB04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C8")]
	public List<RemotePlayer> RemotePlayers
	{
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1AEABAC", Offset = "0x1AEABAC", VA = "0x1AEABAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C9")]
	public bool IsConnectedWithSomeone
	{
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1AEAC38", Offset = "0x1AEAC38", VA = "0x1AEAC38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CA")]
	public bool AmILeader
	{
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1AEAC48", Offset = "0x1AEAC48", VA = "0x1AEAC48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CB")]
	public string RoomToConnect
	{
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1AEACF0", Offset = "0x1AEACF0", VA = "0x1AEACF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1AEACF8", Offset = "0x1AEACF8", VA = "0x1AEACF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	private MultiplayerState _currentState
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1AEAD00", Offset = "0x1AEAD00", VA = "0x1AEAD00")]
		get
		{
			return default(MultiplayerState);
		}
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1AEAD08", Offset = "0x1AEAD08", VA = "0x1AEAD08")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	private Seat _mySeat
	{
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1AEAD24", Offset = "0x1AEAD24", VA = "0x1AEAD24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CE")]
	public Seat MySeat
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1AEAE44", Offset = "0x1AEAE44", VA = "0x1AEAE44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public int TotalInvitesSent
	{
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1AEAE48", Offset = "0x1AEAE48", VA = "0x1AEAE48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1AEAE50", Offset = "0x1AEAE50", VA = "0x1AEAE50")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static bool ShouldLetPlayerRestart
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1AEAE6C", Offset = "0x1AEAE6C", VA = "0x1AEAE6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D1")]
	public SeatType OwnerSeat
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1AEC870", Offset = "0x1AEC870", VA = "0x1AEC870")]
		get
		{
			return default(SeatType);
		}
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1AEAF1C", Offset = "0x1AEAF1C", VA = "0x1AEAF1C")]
	[IteratorStateMachine(typeof(<DelayedStart>d__46))]
	public IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1AEAFB8", Offset = "0x1AEAFB8", VA = "0x1AEAFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1AEB610", Offset = "0x1AEB610", VA = "0x1AEB610")]
	private void StartedConnection()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1AEB62C", Offset = "0x1AEB62C", VA = "0x1AEB62C")]
	public void StartRandomConnection()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1AEB840", Offset = "0x1AEB840", VA = "0x1AEB840")]
	private void RandomConnectionPlayerEnqued()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1AEB860", Offset = "0x1AEB860", VA = "0x1AEB860")]
	private void RandomConnectionPlayerJoinningRoom()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1AEB880", Offset = "0x1AEB880", VA = "0x1AEB880")]
	private void RandomConnectionPlayerRoomJoinned()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x1AEB480", Offset = "0x1AEB480", VA = "0x1AEB480")]
	public void StartGroupConnection(string roomID)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1AEB8A0", Offset = "0x1AEB8A0", VA = "0x1AEB8A0")]
	public void InviteToApp()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1AEB9B8", Offset = "0x1AEB9B8", VA = "0x1AEB9B8")]
	public void LaunchRoster()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1AEBA10", Offset = "0x1AEBA10", VA = "0x1AEBA10")]
	public void RemoveNotPresentPlayers()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1AEC194", Offset = "0x1AEC194", VA = "0x1AEC194")]
	public bool AddRemotePlayer(int actorNumber, string userID, string userName, string avatarURL, RemotePlayer.RemotePlayerStatus status = RemotePlayer.RemotePlayerStatus.CONNECTED)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1AEC598", Offset = "0x1AEC598", VA = "0x1AEC598")]
	public RemotePlayer GetRemotePlayer()
	{
		return null;
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1AEC610", Offset = "0x1AEC610", VA = "0x1AEC610")]
	public RemotePlayer GetRemotePlayer(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1AEC644", Offset = "0x1AEC644", VA = "0x1AEC644")]
	public RemotePlayer GetRemotePlayer(string userID)
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1AEBBE4", Offset = "0x1AEBBE4", VA = "0x1AEBBE4")]
	public void RemoveRemotePlayer(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1AEC738", Offset = "0x1AEC738", VA = "0x1AEC738")]
	public void DisconnectRemotePlayer(RemotePlayer remote)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x1AEC7A8", Offset = "0x1AEC7A8", VA = "0x1AEC7A8")]
	private void Msg_OnOk_Clicked(MessageUIController.Message msg)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x1AEC7C0", Offset = "0x1AEC7C0", VA = "0x1AEC7C0")]
	private void OnAnyScenarioDownloadFinished(Scenario scenario)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1AEBFBC", Offset = "0x1AEBFBC", VA = "0x1AEBFBC")]
	public void VerifyRemoteAvailableScenarios()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1AEB584", Offset = "0x1AEB584", VA = "0x1AEB584")]
	private void UpdateRemoteAvatarPosition()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1AEC864", Offset = "0x1AEC864", VA = "0x1AEC864")]
	private void OnRemoteAvatarCreated()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x1AEC868", Offset = "0x1AEC868", VA = "0x1AEC868")]
	public void ShowRemoteAvatar(RemotePlayer remote)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1AEC878", Offset = "0x1AEC878", VA = "0x1AEC878")]
	public void UpdateSeats()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x1AEC908", Offset = "0x1AEC908", VA = "0x1AEC908")]
	public void OnRoomProprietiesChanged()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x1AEBF04", Offset = "0x1AEBF04", VA = "0x1AEBF04")]
	public void ArrangePlayersSeats(bool shouldUpdatePlayerSeats = false)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x1AED534", Offset = "0x1AED534", VA = "0x1AED534")]
	private void ArrangeSeatsAtLobby()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1AEDB68", Offset = "0x1AEDB68", VA = "0x1AEDB68")]
	private void ArrangeSeatsAtScenario()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1AED068", Offset = "0x1AED068", VA = "0x1AED068")]
	private void VerifyEveryoneSeats(bool shouldUpdatePlayerSeats)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x1AEDA34", Offset = "0x1AEDA34", VA = "0x1AEDA34")]
	private void ArrangeRaceSeats()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x1AEDDE8", Offset = "0x1AEDDE8", VA = "0x1AEDDE8")]
	private Seat CreateSeat(SeatType seatType)
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x1AEDEC8", Offset = "0x1AEDEC8", VA = "0x1AEDEC8")]
	public void SetSafetyBarPosition(RemotePlayer remote, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x1AEE0A0", Offset = "0x1AEE0A0", VA = "0x1AEE0A0")]
	public void DestroyAllPins()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1AEDE38", Offset = "0x1AEDE38", VA = "0x1AEDE38")]
	[IteratorStateMachine(typeof(<InstantiateRacePin>d__81))]
	private IEnumerator InstantiateRacePin(RemotePlayer remotePlayer)
	{
		return null;
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1AEE204", Offset = "0x1AEE204", VA = "0x1AEE204")]
	public void ReadPinPosition(RemotePlayer player, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1AEE498", Offset = "0x1AEE498", VA = "0x1AEE498")]
	public void EnterLoaded()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x1AEE584", Offset = "0x1AEE584", VA = "0x1AEE584")]
	public MultiplayerState GetStatus()
	{
		return default(MultiplayerState);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1AEE58C", Offset = "0x1AEE58C", VA = "0x1AEE58C")]
	public string GetStateText()
	{
		return null;
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1AEE6B8", Offset = "0x1AEE6B8", VA = "0x1AEE6B8")]
	public string GetMultiplayerGameVersion()
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1AEE964", Offset = "0x1AEE964", VA = "0x1AEE964")]
	public void ChangeState(GameStateEnum state, RideType rideType, CoasterType coasterType, CartIdType cartType, WeaponType weaponType)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1AEEB98", Offset = "0x1AEEB98", VA = "0x1AEEB98")]
	public ulong FindOwnerForARoom()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1AEEC74", Offset = "0x1AEEC74", VA = "0x1AEEC74")]
	public void PlayerFullConnectedWithSomeone()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1AEF0F4", Offset = "0x1AEF0F4", VA = "0x1AEF0F4")]
	public void OnPlayerConnectionClosed()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1AEB38C", Offset = "0x1AEB38C", VA = "0x1AEB38C")]
	public void Disconnect(MultiplayerState state = MultiplayerState.SELF_DISCONNECTING)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1AEF110", Offset = "0x1AEF110", VA = "0x1AEF110")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1AEF658", Offset = "0x1AEF658", VA = "0x1AEF658")]
	public string GetBlockedScenarioText(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x1AEF748", Offset = "0x1AEF748", VA = "0x1AEF748")]
	public bool VerifyIsPlayersSeat(Seat seat)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x1AEF810", Offset = "0x1AEF810", VA = "0x1AEF810")]
	public bool IsEveryoneReadyToPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x1AEF950", Offset = "0x1AEF950", VA = "0x1AEF950")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x1AEF958", Offset = "0x1AEF958", VA = "0x1AEF958")]
	public MultiplayerController()
	{
	}
}
[Token(Token = "0x20001B5")]
public class MultiplayerMessageControllerPhoton : MultiplayerMessageController
{
	[Token(Token = "0x170000D6")]
	private PhotonPlayer currentPlayer
	{
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1AF0580", Offset = "0x1AF0580", VA = "0x1AF0580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1AF05D4", Offset = "0x1AF05D4", VA = "0x1AF05D4")]
	public void ReadMessage(byte messageType, ExitGames.Client.Photon.Hashtable message, RemotePlayer sender)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1AF0A74", Offset = "0x1AF0A74", VA = "0x1AF0A74", Slot = "7")]
	protected override void SendMessage(MessageType messageType, byte[] content)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1AF097C", Offset = "0x1AF097C", VA = "0x1AF097C")]
	private byte[] GetMessageContent(ExitGames.Client.Photon.Hashtable message)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1AF0B14", Offset = "0x1AF0B14", VA = "0x1AF0B14", Slot = "6")]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1AF0B18", Offset = "0x1AF0B18", VA = "0x1AF0B18")]
	public MultiplayerMessageControllerPhoton()
	{
	}
}
[Token(Token = "0x20001B6")]
public class PhotonNetwork : IController<PhotonNetwork>, IConnectionCallbacks
{
	[Token(Token = "0x20001B7")]
	[CompilerGenerated]
	private sealed class <HandleDisconnect>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonNetwork <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x1B0622C", Offset = "0x1B0622C", VA = "0x1B0622C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x1B06274", Offset = "0x1B06274", VA = "0x1B06274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1B06154", Offset = "0x1B06154", VA = "0x1B06154")]
		[DebuggerHidden]
		public <HandleDisconnect>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1B0617C", Offset = "0x1B0617C", VA = "0x1B0617C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1B06180", Offset = "0x1B06180", VA = "0x1B06180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1B06234", Offset = "0x1B06234", VA = "0x1B06234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F42")]
	private const string APP_ID = "cebfdc7d-2473-4e82-8aec-d75605ad0a9d";

	[Token(Token = "0x170000D7")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1AF0B20", Offset = "0x1AF0B20", VA = "0x1AF0B20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1AF0B28", Offset = "0x1AF0B28", VA = "0x1AF0B28")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public ConnectionHandler ConnectionHandler
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1AF0B30", Offset = "0x1AF0B30", VA = "0x1AF0B30")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1AF0B38", Offset = "0x1AF0B38", VA = "0x1AF0B38")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public ClientState CurrentState
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1AF0B40", Offset = "0x1AF0B40", VA = "0x1AF0B40")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x170000DA")]
	public string OwnerID
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1AF0C28", Offset = "0x1AF0C28", VA = "0x1AF0C28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DB")]
	public bool IsConnectedToMaster
	{
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1AF0CF0", Offset = "0x1AF0CF0", VA = "0x1AF0CF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DC")]
	public static ExitGames.Client.Photon.Hashtable SeatsCustomProperties
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1AF0D10", Offset = "0x1AF0D10", VA = "0x1AF0D10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1AF0B58", Offset = "0x1AF0B58", VA = "0x1AF0B58")]
	public bool AmIOwner()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x1AF1134", Offset = "0x1AF1134", VA = "0x1AF1134")]
	public void StartPlayer()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x1AF1238", Offset = "0x1AF1238", VA = "0x1AF1238")]
	private void OnPhotonAuthenticationFound(string auth)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1AF13AC", Offset = "0x1AF13AC", VA = "0x1AF13AC")]
	private void InstantiatePlayer()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1AF16FC", Offset = "0x1AF16FC", VA = "0x1AF16FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1AEF0F8", Offset = "0x1AEF0F8", VA = "0x1AEF0F8")]
	public void DisconnectAll()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1AF1710", Offset = "0x1AF1710", VA = "0x1AF1710")]
	public void MultiplayerLoop()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1AF1644", Offset = "0x1AF1644", VA = "0x1AF1644")]
	public void ConnectToMaster()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1AF1724", Offset = "0x1AF1724", VA = "0x1AF1724")]
	public void ShowRoom()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1AEC8C8", Offset = "0x1AEC8C8", VA = "0x1AEC8C8")]
	public void UpdateSeatRoomProperties()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1AF1864", Offset = "0x1AF1864", VA = "0x1AF1864")]
	public void UpdatePauseRoomProperties(bool pause)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1AEC9D4", Offset = "0x1AEC9D4", VA = "0x1AEC9D4")]
	public void ReadRoomCustomProperties(ExitGames.Client.Photon.Hashtable roomProperties)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x1AF1A34", Offset = "0x1AF1A34", VA = "0x1AF1A34", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1AF1A38", Offset = "0x1AF1A38", VA = "0x1AF1A38", Slot = "7")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1AF1A3C", Offset = "0x1AF1A3C", VA = "0x1AF1A3C", Slot = "8")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1AF1AD0", Offset = "0x1AF1AD0", VA = "0x1AF1AD0")]
	[IteratorStateMachine(typeof(<HandleDisconnect>d__32))]
	public IEnumerator HandleDisconnect()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1AF1AC0", Offset = "0x1AF1AC0", VA = "0x1AF1AC0")]
	private bool CanRecoverFromDisconnect(DisconnectCause cause)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1AF1B44", Offset = "0x1AF1B44", VA = "0x1AF1B44")]
	private void Recover()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1AF1C0C", Offset = "0x1AF1C0C", VA = "0x1AF1C0C", Slot = "9")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1AF1C10", Offset = "0x1AF1C10", VA = "0x1AF1C10", Slot = "10")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1AF1C14", Offset = "0x1AF1C14", VA = "0x1AF1C14", Slot = "11")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1AF1C18", Offset = "0x1AF1C18", VA = "0x1AF1C18")]
	public PhotonNetwork()
	{
	}
}
[Token(Token = "0x20001B8")]
public class TimeKeeper
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int lastExecutionTime;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool shouldExecute;

	[Token(Token = "0x170000DF")]
	public int Interval
	{
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1B0627C", Offset = "0x1B0627C", VA = "0x1B0627C")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x1B06284", Offset = "0x1B06284", VA = "0x1B06284")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public bool IsEnabled
	{
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x1B0628C", Offset = "0x1B0628C", VA = "0x1B0628C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x1B06294", Offset = "0x1B06294", VA = "0x1B06294")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public bool ShouldExecute
	{
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x1B062A0", Offset = "0x1B062A0", VA = "0x1B062A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x1B062EC", Offset = "0x1B062EC", VA = "0x1B062EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1B062F8", Offset = "0x1B062F8", VA = "0x1B062F8")]
	public TimeKeeper(int interval)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1B06338", Offset = "0x1B06338", VA = "0x1B06338")]
	public void Reset()
	{
	}
}
[Token(Token = "0x20001B9")]
public class RemotePlayer
{
	[Token(Token = "0x20001BA")]
	public enum RemotePlayerStatus
	{
		[Token(Token = "0x4000F6B")]
		INVITED,
		[Token(Token = "0x4000F6C")]
		CONNECTED,
		[Token(Token = "0x4000F6D")]
		DISCONNECTED,
		[Token(Token = "0x4000F6E")]
		NONE
	}

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RemoteUserID;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string RemoteUserName;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RemotePlayerStatus Status;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AvatarURL;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public uint AvatarPresetID;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsPaused;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool AlreadyReceivedPositionPacket;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gun GunRight;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gun GunLeft;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelfieStick RightHandSelfieStick;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SelfieStick LeftHandSelfieStick;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public byte[] AvailableScenarios;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Seat CurrentSeat;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SeatType CurrentSeatType;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool ShouldRearrangeSeat;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RideType CurrentRideType;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameStateEnum CurrentState;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform AvatarTrackingRotationOffset;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform AvatarTrackingOffset;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform AvatarTracking;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform RightHand;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform LeftHand;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AvatarCustomHands CustomHands;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AvatarSoundFx SoundFx;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource LocalVoipSound;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int thirdPersonLayer;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject RemotePinInstance;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public PickableItem PickableSnowball;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RemotePlayerPin remotePlayerPin;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool clearList;

	[Token(Token = "0x170000E2")]
	private bool AvatarTrackingIsReady
	{
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1B06358", Offset = "0x1B06358", VA = "0x1B06358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E3")]
	public RemotePlayerPin RacePin
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1B06454", Offset = "0x1B06454", VA = "0x1B06454")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E4")]
	public bool IsLeader
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1B0652C", Offset = "0x1B0652C", VA = "0x1B0652C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x1B065B4", Offset = "0x1B065B4", VA = "0x1B065B4")]
	public bool HasRollerCoaster(Scenario scenario)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1B06690", Offset = "0x1B06690", VA = "0x1B06690")]
	public void AddListeners()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1B06694", Offset = "0x1B06694", VA = "0x1B06694")]
	public void AvatarCreated()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1B066FC", Offset = "0x1B066FC", VA = "0x1B066FC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1B06700", Offset = "0x1B06700", VA = "0x1B06700")]
	public void ChangePositonAndRotation(Vector3 localPosition, Quaternion localRotation, Vector3 rightHandPosition, Quaternion rightHandRotation, Vector3 leftHandPosition, Quaternion leftHandRotation)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1B06870", Offset = "0x1B06870", VA = "0x1B06870")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1B06874", Offset = "0x1B06874", VA = "0x1B06874")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20001BB")]
public class RemotePlayerPin : MonoBehaviour
{
	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material MobilePlayerIconMaterial;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer PlayerSignRenderer;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer PlayerImageRenderer;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public float Smooth;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Offset;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Vector3 LastPosition;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Quaternion LastRotation;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public Vector3 LastScale;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform tr;

	[Token(Token = "0x170000E5")]
	public Material PlayerIconMaterial
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x1B06884", Offset = "0x1B06884", VA = "0x1B06884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1B0688C", Offset = "0x1B0688C", VA = "0x1B0688C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1B06900", Offset = "0x1B06900", VA = "0x1B06900")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1B06AA0", Offset = "0x1B06AA0", VA = "0x1B06AA0")]
	public RemotePlayerPin()
	{
	}
}
[Token(Token = "0x20001BC")]
public class NotificationController : IController<NotificationController>
{
	[Token(Token = "0x20001BD")]
	public enum NotificationType
	{
		[Token(Token = "0x4000F7C")]
		ERROR,
		[Token(Token = "0x4000F7D")]
		WARNING,
		[Token(Token = "0x4000F7E")]
		SUCCESS,
		[Token(Token = "0x4000F7F")]
		MULTIPLAYER,
		[Token(Token = "0x4000F80")]
		SERVER_ERROR
	}

	[Token(Token = "0x20001BE")]
	public class Notification
	{
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NotificationType Type;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Description;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime Time;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1B06DE0", Offset = "0x1B06DE0", VA = "0x1B06DE0")]
		public Notification()
		{
		}
	}

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Notification> Notifications;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasNewNotification;

	[Token(Token = "0x170000E6")]
	public bool HasNewNotification
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1B06C14", Offset = "0x1B06C14", VA = "0x1B06C14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<Notification> OnNewNotificationAdded
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1B06AB4", Offset = "0x1B06AB4", VA = "0x1B06AB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1B06B64", Offset = "0x1B06B64", VA = "0x1B06B64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1B06C1C", Offset = "0x1B06C1C", VA = "0x1B06C1C")]
	public void AddNotification(NotificationType type, string description)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1B06DE8", Offset = "0x1B06DE8", VA = "0x1B06DE8")]
	public void ReadNotifications()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x1B06DF0", Offset = "0x1B06DF0", VA = "0x1B06DF0")]
	public NotificationController()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PictureController : IController<PictureController>
{
	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private sealed class <CreatePictureTaker>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PictureController <>4__this;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x1B074D4", Offset = "0x1B074D4", VA = "0x1B074D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x1B0751C", Offset = "0x1B0751C", VA = "0x1B0751C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1B06EAC", Offset = "0x1B06EAC", VA = "0x1B06EAC")]
		[DebuggerHidden]
		public <CreatePictureTaker>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1B071B8", Offset = "0x1B071B8", VA = "0x1B071B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1B071BC", Offset = "0x1B071BC", VA = "0x1B071BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1B074DC", Offset = "0x1B074DC", VA = "0x1B074DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C1")]
	[CompilerGenerated]
	private sealed class <CreateLocalSelfieSticksRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PictureController <>4__this;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <leftAsync>5__2;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x1B07E18", Offset = "0x1B07E18", VA = "0x1B07E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x1B07E60", Offset = "0x1B07E60", VA = "0x1B07E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1B07148", Offset = "0x1B07148", VA = "0x1B07148")]
		[DebuggerHidden]
		public <CreateLocalSelfieSticksRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1B07524", Offset = "0x1B07524", VA = "0x1B07524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1B07528", Offset = "0x1B07528", VA = "0x1B07528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x1B07E20", Offset = "0x1B07E20", VA = "0x1B07E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference PictureTakerAssetReference;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference SelfieStickAssetReference;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PictureTaker currentPictureTaker;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelfieStick currentLeftSelfieStick;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SelfieStick currentRightSelfieStick;

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1B06E38", Offset = "0x1B06E38", VA = "0x1B06E38")]
	[IteratorStateMachine(typeof(<CreatePictureTaker>d__5))]
	public IEnumerator CreatePictureTaker()
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1B06ED4", Offset = "0x1B06ED4", VA = "0x1B06ED4")]
	public void CreateLocalSelfieSticks()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1B06FF8", Offset = "0x1B06FF8", VA = "0x1B06FF8")]
	public void DestroySelfieSticks()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1B06F84", Offset = "0x1B06F84", VA = "0x1B06F84")]
	[IteratorStateMachine(typeof(<CreateLocalSelfieSticksRoutine>d__8))]
	public IEnumerator CreateLocalSelfieSticksRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1B07170", Offset = "0x1B07170", VA = "0x1B07170")]
	public PictureController()
	{
	}
}
[Token(Token = "0x20001C2")]
public class PictureTaker : IController<PictureTaker>
{
	[Token(Token = "0x20001C3")]
	public enum PhotoType
	{
		[Token(Token = "0x4000FA0")]
		NORMAL,
		[Token(Token = "0x4000FA1")]
		SELFIE
	}

	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <TakePicture>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PictureTaker <>4__this;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera camera;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhotoType photoType;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SelfieStick selfieStick;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D <screenShot>5__2;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <filenameSmall>5__3;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x1B09B18", Offset = "0x1B09B18", VA = "0x1B09B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x1B09B60", Offset = "0x1B09B60", VA = "0x1B09B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x1B086B0", Offset = "0x1B086B0", VA = "0x1B086B0")]
		[DebuggerHidden]
		public <TakePicture>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1B0952C", Offset = "0x1B0952C", VA = "0x1B0952C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1B09530", Offset = "0x1B09530", VA = "0x1B09530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1B09B20", Offset = "0x1B09B20", VA = "0x1B09B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera CameraSelfie;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D WaterMark;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light FlashLight;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int BigResolutionWidth;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SmallResolutionWidth;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BigResolutionHeight;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int SmallResolutionHeight;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float buttonDebounce;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool addedEvents;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputController.Hand pressedHand;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool PicturePose;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool AlreadyTookSelfie;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool alreadyDestroyed;

	[Token(Token = "0x170000EB")]
	public bool IsTakingPhoto
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x1B07E68", Offset = "0x1B07E68", VA = "0x1B07E68")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1B07E70", Offset = "0x1B07E70", VA = "0x1B07E70")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1B07E7C", Offset = "0x1B07E7C", VA = "0x1B07E7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1B07F34", Offset = "0x1B07F34", VA = "0x1B07F34")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1B07F38", Offset = "0x1B07F38", VA = "0x1B07F38", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1B08064", Offset = "0x1B08064", VA = "0x1B08064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x1B08148", Offset = "0x1B08148", VA = "0x1B08148")]
	private void SceneManager_sceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1B081B4", Offset = "0x1B081B4", VA = "0x1B081B4")]
	public void ToggleDisplayCamera(bool enable, SelfieStick selfieStick)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1B081B8", Offset = "0x1B081B8", VA = "0x1B081B8")]
	public void EnableWarmUpLight()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1B083F8", Offset = "0x1B083F8", VA = "0x1B083F8")]
	public static string GetImagesBigPath()
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1B0844C", Offset = "0x1B0844C", VA = "0x1B0844C")]
	public static string GetImagesSmallPath()
	{
		return null;
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1B084A0", Offset = "0x1B084A0", VA = "0x1B084A0")]
	public static string ScreenShotName(string path)
	{
		return null;
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1B085FC", Offset = "0x1B085FC", VA = "0x1B085FC")]
	[IteratorStateMachine(typeof(<TakePicture>d__28))]
	private IEnumerator TakePicture(Camera camera, PhotoType photoType, [Optional] SelfieStick selfieStick)
	{
		return null;
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1B086D8", Offset = "0x1B086D8", VA = "0x1B086D8")]
	private void RenderPicture(Camera camera, out Texture2D screenShot)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1B08910", Offset = "0x1B08910", VA = "0x1B08910")]
	private void WritePicture(Texture2D screenShot, string filename)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1B08A30", Offset = "0x1B08A30", VA = "0x1B08A30")]
	public void TakeSelfie(SelfieStick selfieStick)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1B08A84", Offset = "0x1B08A84", VA = "0x1B08A84")]
	public void ShowRemoteSelfieStick(SelfieStick selfieStick, bool isSelfie)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x1B090A0", Offset = "0x1B090A0", VA = "0x1B090A0")]
	public void ShowRemoteRearStick(SelfieStick selfieStick)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x1B09120", Offset = "0x1B09120", VA = "0x1B09120")]
	public void HideRemoteSelfieStick(SelfieStick selfieStick)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x1B09414", Offset = "0x1B09414", VA = "0x1B09414")]
	public void HideRemoteRearStick(SelfieStick selfieStick)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x1B07FB8", Offset = "0x1B07FB8", VA = "0x1B07FB8")]
	private void ToggleWatermark(Camera camera, bool enabled)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x1B09494", Offset = "0x1B09494", VA = "0x1B09494")]
	public PictureTaker()
	{
	}
}
[Token(Token = "0x20001C6")]
public class SelfieStick : MonoBehaviour, IReplaceMaterials
{
	[Token(Token = "0x20001C7")]
	[CompilerGenerated]
	private sealed class <CloseRoutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelfieStick <>4__this;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isSelfie;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x1B0BBD0", Offset = "0x1B0BBD0", VA = "0x1B0BBD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x1B0BC18", Offset = "0x1B0BC18", VA = "0x1B0BC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x1B0B3F4", Offset = "0x1B0B3F4", VA = "0x1B0B3F4")]
		[DebuggerHidden]
		public <CloseRoutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x1B0BA14", Offset = "0x1B0BA14", VA = "0x1B0BA14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x1B0BA18", Offset = "0x1B0BA18", VA = "0x1B0BA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x1B0BBD8", Offset = "0x1B0BBD8", VA = "0x1B0BBD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[CompilerGenerated]
	private sealed class <TakeSelfieAnimationCoroutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelfieStick <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0x1B0BD14", Offset = "0x1B0BD14", VA = "0x1B0BD14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0x1B0BD5C", Offset = "0x1B0BD5C", VA = "0x1B0BD5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x1B0B41C", Offset = "0x1B0B41C", VA = "0x1B0B41C")]
		[DebuggerHidden]
		public <TakeSelfieAnimationCoroutine>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x1B0BC20", Offset = "0x1B0BC20", VA = "0x1B0BC20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1B0BC24", Offset = "0x1B0BC24", VA = "0x1B0BC24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1B0BD1C", Offset = "0x1B0BD1C", VA = "0x1B0BD1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int baseColorShaderID;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer SkinnedMeshRenderer;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator Animator;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(5f)]
	public Transform CameraPivot;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Offset;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform LeftOffset;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform RightOffset;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Avatar Left Custom Pose (also used for Right)")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(5f)]
	public bool IsLocalUser;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private InputController.Hand hand;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(5f)]
	public AudioSource AudioSource;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip OpenSoundFx;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip CloseSoundFx;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip FlashSoundFx;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Space(5f)]
	public Material MobileMaterial;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public AvatarCustomHands CustomHandsController;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AnimationCurve OpenHapticFx;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AnimationCurve CloseHapticFx;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AnimationCurve FlashHapticFx;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private new Transform transform;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float buttonDebounce;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool addedListners;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	[HideInInspector]
	public bool IsSelfieOpened;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	public bool IsRearOpened;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject gazeTarget;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SELFIESTICK_TUTORIAL;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string TAKEPHOTO_TUTORIAL;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float TIME;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshProUGUI TakePhotoTutorialText;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject TakePhotoTutorialCanvas;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CanvasGroup TakePhotoTutorialGroup;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool alreadyShowedTutorial;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool showTutorial;

	[Token(Token = "0x170000EE")]
	public InputController.Hand Hand
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1B09B9C", Offset = "0x1B09B9C", VA = "0x1B09B9C")]
		get
		{
			return default(InputController.Hand);
		}
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x1B07B7C", Offset = "0x1B07B7C", VA = "0x1B07B7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x1B09BA4", Offset = "0x1B09BA4", VA = "0x1B09BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x1B09E84", Offset = "0x1B09E84", VA = "0x1B09E84")]
	private void Instance_OnPause(bool paused)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x1B09EFC", Offset = "0x1B09EFC", VA = "0x1B09EFC")]
	private void SceneManager_sceneUnloaded(Scene scene)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x1B07BD8", Offset = "0x1B07BD8", VA = "0x1B07BD8")]
	public void AddEvents()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x1B0A7F0", Offset = "0x1B0A7F0", VA = "0x1B0A7F0")]
	private void SceneManager_sceneLoaded(Scene scene, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x1B0A7F4", Offset = "0x1B0A7F4", VA = "0x1B0A7F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x1B0AB8C", Offset = "0x1B0AB8C", VA = "0x1B0AB8C")]
	private void Instance_OnTriggerDown(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x1B0AD04", Offset = "0x1B0AD04", VA = "0x1B0AD04")]
	private void Instance_OnGripDown(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x1B0AD2C", Offset = "0x1B0AD2C", VA = "0x1B0AD2C")]
	private void Instance_OnTriggerUp(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1B0ADEC", Offset = "0x1B0ADEC", VA = "0x1B0ADEC")]
	private void Instance_OnGripUp(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1B0AE24", Offset = "0x1B0AE24", VA = "0x1B0AE24")]
	private void Instance_OnPrimaryClick(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1B0ABB4", Offset = "0x1B0ABB4", VA = "0x1B0ABB4")]
	private bool IsAbleToTakePhoto(InputController.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1B0AECC", Offset = "0x1B0AECC", VA = "0x1B0AECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1B0AFA0", Offset = "0x1B0AFA0", VA = "0x1B0AFA0")]
	public void StartSelfieStick()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1B0B004", Offset = "0x1B0B004", VA = "0x1B0B004")]
	private void ShowTakePhotoTutorial()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1B0B23C", Offset = "0x1B0B23C", VA = "0x1B0B23C")]
	private void HideTakePhotoTutorial()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1B08B14", Offset = "0x1B08B14", VA = "0x1B08B14")]
	public void Open(bool isSelfie)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x1B0AD64", Offset = "0x1B0AD64", VA = "0x1B0AD64")]
	[IteratorStateMachine(typeof(<CloseRoutine>d__53))]
	private IEnumerator CloseRoutine(bool isSelfie)
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1B091A0", Offset = "0x1B091A0", VA = "0x1B091A0")]
	public void Close(bool isSelfie)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1B0AE58", Offset = "0x1B0AE58", VA = "0x1B0AE58")]
	[IteratorStateMachine(typeof(<TakeSelfieAnimationCoroutine>d__55))]
	private IEnumerator TakeSelfieAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x1B0B444", Offset = "0x1B0B444", VA = "0x1B0B444")]
	private void TakeSelfieAnimation()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x1B0B598", Offset = "0x1B0B598", VA = "0x1B0B598")]
	public void ShootPhotoUsingFlash()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x1B0B5EC", Offset = "0x1B0B5EC", VA = "0x1B0B5EC")]
	public void TakeSelfie()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1B0B64C", Offset = "0x1B0B64C", VA = "0x1B0B64C")]
	public void PlayFlashSound()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1B0B728", Offset = "0x1B0B728", VA = "0x1B0B728")]
	public void PlayCloseSoundFx()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1B0B808", Offset = "0x1B0B808", VA = "0x1B0B808")]
	public void SetAsClosed()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1B09EDC", Offset = "0x1B09EDC", VA = "0x1B09EDC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1B0B318", Offset = "0x1B0B318", VA = "0x1B0B318")]
	private HapticsOutputMode GetHapticsOutputMode()
	{
		return default(HapticsOutputMode);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1B0B8EC", Offset = "0x1B0B8EC", VA = "0x1B0B8EC")]
	public SelfieStick()
	{
	}
}
[Token(Token = "0x20001C9")]
public class SelfieStickAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SelfieStick selfieStick;

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x1B0BD64", Offset = "0x1B0BD64", VA = "0x1B0BD64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x1B0BDBC", Offset = "0x1B0BDBC", VA = "0x1B0BDBC")]
	public void TakeSelfie()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1B0BDD4", Offset = "0x1B0BDD4", VA = "0x1B0BDD4")]
	public void Closing()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1B0BDEC", Offset = "0x1B0BDEC", VA = "0x1B0BDEC")]
	public void Closed()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1B0BE04", Offset = "0x1B0BE04", VA = "0x1B0BE04")]
	public SelfieStickAnimationEvent()
	{
	}
}
[Token(Token = "0x20001CA")]
public class Achievement : MonoBehaviour
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AlterID;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RideType RelatedRideType;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CoasterType RelatedCoasterType;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Hide;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsCount;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool IsCollectable;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool IsMultiplayer;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong MaxCount;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite UnlockIcon;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite LockedIcon;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool IsUnlocked;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public ulong Count;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1B0BE0C", Offset = "0x1B0BE0C", VA = "0x1B0BE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1B0BF3C", Offset = "0x1B0BF3C", VA = "0x1B0BF3C")]
	public Achievement()
	{
	}
}
[Token(Token = "0x20001CB")]
public abstract class AchievementController : IController<AchievementController>
{
	[Token(Token = "0x20001CC")]
	public enum AchievementControllerStatus
	{
		[Token(Token = "0x4000FF1")]
		NONE,
		[Token(Token = "0x4000FF2")]
		LOADED,
		[Token(Token = "0x4000FF3")]
		ERROR
	}

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string TAKE_SELFIE;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string FRIEND_MULTIPLAYER;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string SELFIE_WITH_FRIEND;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string SHOOTER_MODE;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string ARCADE_MODE;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string ROCK_FALLS_DIFFERENT_CAR;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string LEADERBOARD;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string WIN_HUNDRED_TIMES;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string DIED_HUNDRED_TIMES;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool HasAchievements;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected AchievementItem[] achievementsItems;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AchievementControllerStatus Status;

	[Token(Token = "0x1400000A")]
	public event Action<string> OnError
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x1B0BF4C", Offset = "0x1B0BF4C", VA = "0x1B0BF4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x1B0BFFC", Offset = "0x1B0BFFC", VA = "0x1B0BFFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action OnResultsFound
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x1B0C0AC", Offset = "0x1B0C0AC", VA = "0x1B0C0AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1B0C148", Offset = "0x1B0C148", VA = "0x1B0C148")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1B0C1E4", Offset = "0x1B0C1E4", VA = "0x1B0C1E4", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x1B0C1F0", Offset = "0x1B0C1F0", VA = "0x1B0C1F0", Slot = "7")]
	public virtual void Config()
	{
	}

	[Token(Token = "0x6000BCF")]
	public abstract void CollectableAchievement_OnChanged(AchievementItem.AchievementType achievementType, string API_NAME);

	[Token(Token = "0x6000BD0")]
	public abstract void GetAllAchievements();

	[Token(Token = "0x6000BD1")]
	public abstract void RecordAchievement(string ID, bool isCount, ulong count = 0uL, bool isCollectible = false);

	[Token(Token = "0x6000BD2")]
	public abstract string GetCollectableScenarioName(RideType rideType, CoasterType coasterType);

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1B0C30C", Offset = "0x1B0C30C", VA = "0x1B0C30C")]
	public void Error(string msg)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1B0C330", Offset = "0x1B0C330", VA = "0x1B0C330")]
	public void ResultsFound()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1B0C354", Offset = "0x1B0C354", VA = "0x1B0C354")]
	protected AchievementController()
	{
	}
}
[Token(Token = "0x20001CD")]
public class AchievementControllerArcadeVR : AchievementController
{
	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1B0C570", Offset = "0x1B0C570", VA = "0x1B0C570", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1B0C578", Offset = "0x1B0C578", VA = "0x1B0C578", Slot = "8")]
	public override void CollectableAchievement_OnChanged(AchievementItem.AchievementType achievementType, string API_NAME)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1B0C57C", Offset = "0x1B0C57C", VA = "0x1B0C57C", Slot = "9")]
	public override void GetAllAchievements()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1B0C580", Offset = "0x1B0C580", VA = "0x1B0C580", Slot = "10")]
	public override void RecordAchievement(string ID, bool isCount, ulong count = 0uL, bool isCollectible = false)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1B0C584", Offset = "0x1B0C584", VA = "0x1B0C584", Slot = "11")]
	public override string GetCollectableScenarioName(RideType rideType, CoasterType coasterType)
	{
		return null;
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1B0C5CC", Offset = "0x1B0C5CC", VA = "0x1B0C5CC")]
	public AchievementControllerArcadeVR()
	{
	}
}
[Token(Token = "0x20001CE")]
public class AchievementControllerPico : AchievementController
{
	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Message<AchievementProgressList> msg;

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1B0CD9C", Offset = "0x1B0CD9C", VA = "0x1B0CD9C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x1B0CDA4", Offset = "0x1B0CDA4", VA = "0x1B0CDA4")]
		internal void <RecordAchievement>b__0(Message<AchievementProgressList> _msg)
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[CompilerGenerated]
	private sealed class <RecordAchievement>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass7_0 <>8__1;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AchievementControllerPico <>4__this;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ulong count;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x1B0D388", Offset = "0x1B0D388", VA = "0x1B0D388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x1B0D3D0", Offset = "0x1B0D3D0", VA = "0x1B0D3D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1B0CC84", Offset = "0x1B0CC84", VA = "0x1B0CC84")]
		[DebuggerHidden]
		public <RecordAchievement>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1B0CDAC", Offset = "0x1B0CDAC", VA = "0x1B0CDAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1B0CDB0", Offset = "0x1B0CDB0", VA = "0x1B0CDB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1B0D390", Offset = "0x1B0D390", VA = "0x1B0D390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public new static string TAKE_SELFIE;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public new static string ROCK_FALLS_DIFFERENT_CAR;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1B0C620", Offset = "0x1B0C620", VA = "0x1B0C620", Slot = "9")]
	public override void GetAllAchievements()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1B0C71C", Offset = "0x1B0C71C", VA = "0x1B0C71C")]
	private void OnProgressOfAchievementResultsFound(Message<AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1B0CA20", Offset = "0x1B0CA20", VA = "0x1B0CA20", Slot = "8")]
	public override void CollectableAchievement_OnChanged(AchievementItem.AchievementType achievementType, string API_NAME)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1B0CA4C", Offset = "0x1B0CA4C", VA = "0x1B0CA4C", Slot = "11")]
	public override string GetCollectableScenarioName(RideType rideType, CoasterType coasterType)
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1B0CBA0", Offset = "0x1B0CBA0", VA = "0x1B0CBA0", Slot = "10")]
	public override void RecordAchievement(string ID, bool isCount, ulong count = 0uL, bool isCollectible = false)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1B0CBEC", Offset = "0x1B0CBEC", VA = "0x1B0CBEC")]
	[IteratorStateMachine(typeof(<RecordAchievement>d__7))]
	protected IEnumerator RecordAchievement(string ID, ulong count)
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1B0CCAC", Offset = "0x1B0CCAC", VA = "0x1B0CCAC")]
	public AchievementControllerPico()
	{
	}
}
[Token(Token = "0x20001D1")]
public abstract class AdController : IController<AdController>
{
	[Token(Token = "0x20001D2")]
	public enum AdType
	{
		[Token(Token = "0x4000FFF")]
		GAME_OVER,
		[Token(Token = "0x4001000")]
		ROCK_FALLS,
		[Token(Token = "0x4001001")]
		TROPICAL_ISLAND
	}

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool isInitialized;

	[Token(Token = "0x170000F5")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1B0D3D8", Offset = "0x1B0D3D8", VA = "0x1B0D3D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x1B0D3E0", Offset = "0x1B0D3E0", VA = "0x1B0D3E0")]
	public bool ShouldShowAds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEF")]
	public abstract IEnumerator DelayedStart();

	[Token(Token = "0x6000BF0")]
	public abstract IEnumerator CreateAd(Transform transform, AdType adType);

	[Token(Token = "0x6000BF1")]
	public abstract IEnumerator CreateAd(Transform transform, Scenario scenario, int index);

	[Token(Token = "0x6000BF2")]
	public abstract IEnumerator CreateAd(Transform transform, AssetReference adReference);

	[Token(Token = "0x6000BF3")]
	public abstract IEnumerator CreateAd(Transform transform, string adReference);

	[Token(Token = "0x6000BF4")]
	public abstract void DestroyCurrentAds();

	[Token(Token = "0x6000BF5")]
	public abstract bool IsInteractingWithAd();

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1B0D3E8", Offset = "0x1B0D3E8", VA = "0x1B0D3E8")]
	protected AdController()
	{
	}
}
[Token(Token = "0x20001D3")]
public abstract class Authenticator : IController<Authenticator>
{
	[Token(Token = "0x20001D4")]
	[CompilerGenerated]
	private sealed class <UserLoggedInRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Authenticator <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x1B0DB44", Offset = "0x1B0DB44", VA = "0x1B0DB44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x1B0DB8C", Offset = "0x1B0DB8C", VA = "0x1B0DB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1B0D870", Offset = "0x1B0D870", VA = "0x1B0D870")]
		[DebuggerHidden]
		public <UserLoggedInRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1B0D9E8", Offset = "0x1B0D9E8", VA = "0x1B0D9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1B0D9EC", Offset = "0x1B0D9EC", VA = "0x1B0D9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1B0DB4C", Offset = "0x1B0DB4C", VA = "0x1B0DB4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D5")]
	[CompilerGenerated]
	private sealed class <LicenseRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x1B0DCCC", Offset = "0x1B0DCCC", VA = "0x1B0DCCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x1B0DD14", Offset = "0x1B0DD14", VA = "0x1B0DD14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1B0D958", Offset = "0x1B0D958", VA = "0x1B0D958")]
		[DebuggerHidden]
		public <LicenseRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1B0DB94", Offset = "0x1B0DB94", VA = "0x1B0DB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1B0DB98", Offset = "0x1B0DB98", VA = "0x1B0DB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1B0DCD4", Offset = "0x1B0DCD4", VA = "0x1B0DCD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	protected ulong ID;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int PlatformAlternativeID;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string Name;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public string AvatarURL;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool IsDone;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[HideInInspector]
	public bool EntitlementFailed;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public string PhotonAuthenticator;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string textID;

	[Token(Token = "0x170000F6")]
	public static ulong NumberID
	{
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1B0D59C", Offset = "0x1B0D59C", VA = "0x1B0D59C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170000F7")]
	public static string TextID
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1B0D63C", Offset = "0x1B0D63C", VA = "0x1B0D63C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1B0D724", Offset = "0x1B0D724", VA = "0x1B0D724")]
		set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<string> OnPhotonAuthenticationFound
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1B0D430", Offset = "0x1B0D430", VA = "0x1B0D430")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1B0D4E0", Offset = "0x1B0D4E0", VA = "0x1B0D4E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1B0D590", Offset = "0x1B0D590", VA = "0x1B0D590", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000BFD")]
	public abstract void Authenticate();

	[Token(Token = "0x6000BFE")]
	public abstract void CheckPhotonAuthentication();

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1B0D7DC", Offset = "0x1B0D7DC", VA = "0x1B0D7DC", Slot = "9")]
	public virtual void UserLoggedIn()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1B0D7FC", Offset = "0x1B0D7FC", VA = "0x1B0D7FC")]
	[IteratorStateMachine(typeof(<UserLoggedInRoutine>d__20))]
	private IEnumerator UserLoggedInRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1B0D898", Offset = "0x1B0D898", VA = "0x1B0D898", Slot = "10")]
	public virtual void CheckArcadeLicense()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1B0D8F8", Offset = "0x1B0D8F8", VA = "0x1B0D8F8")]
	[IteratorStateMachine(typeof(<LicenseRoutine>d__22))]
	private IEnumerator LicenseRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x1B0D980", Offset = "0x1B0D980", VA = "0x1B0D980")]
	protected void PhotonAuthenticationFound()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x1B0D9A0", Offset = "0x1B0D9A0", VA = "0x1B0D9A0")]
	protected Authenticator()
	{
	}
}
[Token(Token = "0x20001D6")]
public class AuthenticatorArcadeVR : Authenticator
{
	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1B0DD1C", Offset = "0x1B0DD1C", VA = "0x1B0DD1C", Slot = "7")]
	public override void Authenticate()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1B0DD2C", Offset = "0x1B0DD2C", VA = "0x1B0DD2C", Slot = "8")]
	public override void CheckPhotonAuthentication()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1B0DD30", Offset = "0x1B0DD30", VA = "0x1B0DD30")]
	public AuthenticatorArcadeVR()
	{
	}
}
[Token(Token = "0x20001D7")]
public class AuthenticatorJioglass : Authenticator
{
	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1B0DD34", Offset = "0x1B0DD34", VA = "0x1B0DD34", Slot = "7")]
	public override void Authenticate()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1B0DD44", Offset = "0x1B0DD44", VA = "0x1B0DD44", Slot = "8")]
	public override void CheckPhotonAuthentication()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1B0DD48", Offset = "0x1B0DD48", VA = "0x1B0DD48")]
	public AuthenticatorJioglass()
	{
	}
}
[Token(Token = "0x20001D8")]
public class AuthenticatorNolo : Authenticator
{
	[Token(Token = "0x20001DA")]
	[CompilerGenerated]
	private sealed class <CheckGSXRStart>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AuthenticatorNolo <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0x1B0E014", Offset = "0x1B0E014", VA = "0x1B0E014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x1B0E05C", Offset = "0x1B0E05C", VA = "0x1B0E05C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x1B0DDD4", Offset = "0x1B0DDD4", VA = "0x1B0DDD4")]
		[DebuggerHidden]
		public <CheckGSXRStart>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x1B0DEA8", Offset = "0x1B0DEA8", VA = "0x1B0DEA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x1B0DEAC", Offset = "0x1B0DEAC", VA = "0x1B0DEAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x1B0E01C", Offset = "0x1B0E01C", VA = "0x1B0E01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1B0DD4C", Offset = "0x1B0DD4C", VA = "0x1B0DD4C", Slot = "7")]
	public override void Authenticate()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1B0DD5C", Offset = "0x1B0DD5C", VA = "0x1B0DD5C", Slot = "8")]
	public override void CheckPhotonAuthentication()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1B0DD60", Offset = "0x1B0DD60", VA = "0x1B0DD60")]
	[IteratorStateMachine(typeof(<CheckGSXRStart>d__2))]
	private IEnumerator CheckGSXRStart()
	{
		return null;
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x1B0DDFC", Offset = "0x1B0DDFC", VA = "0x1B0DDFC")]
	public AuthenticatorNolo()
	{
	}
}
[Token(Token = "0x20001DB")]
public class AuthenticatorPico : Authenticator
{
	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x1B0E064", Offset = "0x1B0E064", VA = "0x1B0E064", Slot = "7")]
	public override void Authenticate()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1B0E248", Offset = "0x1B0E248", VA = "0x1B0E248")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1B0E578", Offset = "0x1B0E578", VA = "0x1B0E578")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1B0E730", Offset = "0x1B0E730", VA = "0x1B0E730", Slot = "8")]
	public override void CheckPhotonAuthentication()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1B0E734", Offset = "0x1B0E734", VA = "0x1B0E734")]
	public AuthenticatorPico()
	{
	}
}
[Token(Token = "0x20001DC")]
public class LicenseController : IController<LicenseController>
{
	[Token(Token = "0x20001DD")]
	public enum LicenseState
	{
		[Token(Token = "0x400101C")]
		NONE,
		[Token(Token = "0x400101D")]
		SEARCHING,
		[Token(Token = "0x400101E")]
		ALLOWED,
		[Token(Token = "0x400101F")]
		NOT_ALLOWED,
		[Token(Token = "0x4001020")]
		NOT_FOUND,
		[Token(Token = "0x4001021")]
		REQUESTED
	}

	[Token(Token = "0x20001DE")]
	public enum CustomerType
	{
		[Token(Token = "0x4001023")]
		None,
		[Token(Token = "0x4001024")]
		Wanyoo,
		[Token(Token = "0x4001025")]
		RotoVR,
		[Token(Token = "0x4001026")]
		EmpowerVR
	}

	[Token(Token = "0x20001DF")]
	public class LicenseCollection
	{
		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public License[] info;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1B0FBD0", Offset = "0x1B0FBD0", VA = "0x1B0FBD0")]
		public LicenseCollection()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E0")]
	public class License
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string alloweddevices_epicrc_id;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string alloweddevices_epicrc_allowed;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string alloweddevices_epicrc_customer;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string alloweddevices_epicrc_skus;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string alloweddevices_epicrc_startdate;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string alloweddevices_epicrc_duration;

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1B0FBD8", Offset = "0x1B0FBD8", VA = "0x1B0FBD8")]
		public License()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[CompilerGenerated]
	private sealed class <UpdateLicenses>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool forceUpdate;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LicenseController <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x1B0FDF8", Offset = "0x1B0FDF8", VA = "0x1B0FDF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x1B0FE40", Offset = "0x1B0FE40", VA = "0x1B0FE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1B0F0A0", Offset = "0x1B0F0A0", VA = "0x1B0F0A0")]
		[DebuggerHidden]
		public <UpdateLicenses>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1B0FBE0", Offset = "0x1B0FBE0", VA = "0x1B0FBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1B0FBE4", Offset = "0x1B0FBE4", VA = "0x1B0FBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1B0FE00", Offset = "0x1B0FE00", VA = "0x1B0FE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[CompilerGenerated]
	private sealed class <RequestFromServer>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string newURL;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LicenseController <>4__this;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <>7__wrap2;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x1B10BBC", Offset = "0x1B10BBC", VA = "0x1B10BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x1B10C04", Offset = "0x1B10C04", VA = "0x1B10C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1B0F158", Offset = "0x1B0F158", VA = "0x1B0F158")]
		[DebuggerHidden]
		public <RequestFromServer>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1B0FE48", Offset = "0x1B0FE48", VA = "0x1B0FE48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1B0FE64", Offset = "0x1B0FE64", VA = "0x1B0FE64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1B10B0C", Offset = "0x1B10B0C", VA = "0x1B10B0C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1B10BC4", Offset = "0x1B10BC4", VA = "0x1B10BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[CompilerGenerated]
	private sealed class <SendLicense>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LicenseController <>4__this;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <>7__wrap2;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x1B11454", Offset = "0x1B11454", VA = "0x1B11454", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x1B1149C", Offset = "0x1B1149C", VA = "0x1B1149C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1B0F9F8", Offset = "0x1B0F9F8", VA = "0x1B0F9F8")]
		[DebuggerHidden]
		public <SendLicense>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1B10C0C", Offset = "0x1B10C0C", VA = "0x1B10C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1B10C28", Offset = "0x1B10C28", VA = "0x1B10C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1B113A4", Offset = "0x1B113A4", VA = "0x1B113A4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1B1145C", Offset = "0x1B1145C", VA = "0x1B1145C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DEFAULT_API_URI;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string URL;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string authToken;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomerType Customer;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LicenseState CurrentState;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LicenseCollection licenses;

	[Token(Token = "0x170000FE")]
	public string DeviceID
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1B0E910", Offset = "0x1B0E910", VA = "0x1B0E910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FF")]
	public static bool IsRotoVR
	{
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x1B0E918", Offset = "0x1B0E918", VA = "0x1B0E918")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public static bool IsEmpowerVR
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1B0E9EC", Offset = "0x1B0E9EC", VA = "0x1B0E9EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000101")]
	public string Status
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x1B0EAC0", Offset = "0x1B0EAC0", VA = "0x1B0EAC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000102")]
	public string Description
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1B0EDD0", Offset = "0x1B0EDD0", VA = "0x1B0EDD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public string ReferenceCode
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1B0EE38", Offset = "0x1B0EE38", VA = "0x1B0EE38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1B0DC44", Offset = "0x1B0DC44", VA = "0x1B0DC44")]
	[IteratorStateMachine(typeof(<UpdateLicenses>d__22))]
	public IEnumerator UpdateLicenses(bool forceUpdate = false)
	{
		return null;
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x1B0F0C8", Offset = "0x1B0F0C8", VA = "0x1B0F0C8")]
	[IteratorStateMachine(typeof(<RequestFromServer>d__23))]
	public IEnumerator RequestFromServer(string newURL)
	{
		return null;
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x1B0F180", Offset = "0x1B0F180", VA = "0x1B0F180")]
	private void OfflineCheck()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x1B0F660", Offset = "0x1B0F660", VA = "0x1B0F660")]
	private void ParseCustomer(string customer)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x1B0F7A8", Offset = "0x1B0F7A8", VA = "0x1B0F7A8")]
	private void ParseSKUs(string skusAllowed)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x1B0F984", Offset = "0x1B0F984", VA = "0x1B0F984")]
	[IteratorStateMachine(typeof(<SendLicense>d__27))]
	public IEnumerator SendLicense()
	{
		return null;
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x1B0FA20", Offset = "0x1B0FA20", VA = "0x1B0FA20")]
	public LicenseController()
	{
	}
}
[Token(Token = "0x20001E4")]
public abstract class AvatarController : IController<AvatarController>
{
	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool ShouldntCreateAvatar;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool AlreadyShowedAvatarEditor;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnRemoteAvatarCreated;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RightHand;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LeftHand;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool IsAvatarLoaded;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AvatarCustomHands LocalAvatarCustomHands;

	[Token(Token = "0x1700010A")]
	[HideInInspector]
	public virtual bool ShouldEditAvatar
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1B114A4", Offset = "0x1B114A4", VA = "0x1B114A4", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1B114AC", Offset = "0x1B114AC", VA = "0x1B114AC", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public bool IsPresetAvatar
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1B114B8", Offset = "0x1B114B8", VA = "0x1B114B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x1B114C0", Offset = "0x1B114C0", VA = "0x1B114C0", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000C52")]
	public abstract IEnumerator Create();

	[Token(Token = "0x6000C53")]
	public abstract void Reload();

	[Token(Token = "0x6000C54")]
	public abstract void ShowFirstPerson();

	[Token(Token = "0x6000C55")]
	public abstract void ShowThridPerson();

	[Token(Token = "0x6000C56")]
	public abstract void SetLocalAvatarTransform(Transform transform);

	[Token(Token = "0x6000C57")]
	public abstract void ChangeFirstPersonAvatarLayer();

	[Token(Token = "0x6000C58")]
	public abstract void ChangeLipSync(bool shouldUseMicrophone);

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1B115F8", Offset = "0x1B115F8", VA = "0x1B115F8", Slot = "16")]
	public virtual void ToggleLipSync(bool active)
	{
	}

	[Token(Token = "0x6000C5A")]
	public abstract void ReloadRemoteAvatar(RemotePlayer remotePlayer);

	[Token(Token = "0x6000C5B")]
	public abstract IEnumerator CreateRemoteAvatar(RemotePlayer remotePlayer);

	[Token(Token = "0x6000C5C")]
	public abstract void ChangeThirdPersonAvatarLayer(RemotePlayer remote);

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1B115FC", Offset = "0x1B115FC", VA = "0x1B115FC")]
	protected AvatarController()
	{
	}
}
[Token(Token = "0x20001E5")]
public class AvatarControllerPico : AvatarController
{
	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <Create>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarControllerPico <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x1B11AC8", Offset = "0x1B11AC8", VA = "0x1B11AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x1B11B10", Offset = "0x1B11B10", VA = "0x1B11B10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1B116C4", Offset = "0x1B116C4", VA = "0x1B116C4")]
		[DebuggerHidden]
		public <Create>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1B11744", Offset = "0x1B11744", VA = "0x1B11744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1B11748", Offset = "0x1B11748", VA = "0x1B11748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x1B11AD0", Offset = "0x1B11AD0", VA = "0x1B11AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1B11644", Offset = "0x1B11644", VA = "0x1B11644", Slot = "14")]
	public override void ChangeFirstPersonAvatarLayer()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1B11648", Offset = "0x1B11648", VA = "0x1B11648", Slot = "15")]
	public override void ChangeLipSync(bool shouldUseMicrophone)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1B1164C", Offset = "0x1B1164C", VA = "0x1B1164C", Slot = "19")]
	public override void ChangeThirdPersonAvatarLayer(RemotePlayer remote)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1B11650", Offset = "0x1B11650", VA = "0x1B11650", Slot = "9")]
	[IteratorStateMachine(typeof(<Create>d__3))]
	public override IEnumerator Create()
	{
		return null;
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1B116EC", Offset = "0x1B116EC", VA = "0x1B116EC", Slot = "18")]
	public override IEnumerator CreateRemoteAvatar(RemotePlayer remotePlayer)
	{
		return null;
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1B1172C", Offset = "0x1B1172C", VA = "0x1B1172C", Slot = "10")]
	public override void Reload()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1B11730", Offset = "0x1B11730", VA = "0x1B11730", Slot = "17")]
	public override void ReloadRemoteAvatar(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1B11734", Offset = "0x1B11734", VA = "0x1B11734", Slot = "13")]
	public override void SetLocalAvatarTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x1B11738", Offset = "0x1B11738", VA = "0x1B11738", Slot = "11")]
	public override void ShowFirstPerson()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1B1173C", Offset = "0x1B1173C", VA = "0x1B1173C", Slot = "12")]
	public override void ShowThridPerson()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1B11740", Offset = "0x1B11740", VA = "0x1B11740")]
	public AvatarControllerPico()
	{
	}
}
[Token(Token = "0x20001E7")]
public class AvatarCustomHands : MonoBehaviour
{
	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform leftPoseTransform;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform rightPoseTransform;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] leftHandJoints;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] rightHandJoints;

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x1B11B18", Offset = "0x1B11B18", VA = "0x1B11B18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x1B11C18", Offset = "0x1B11C18", VA = "0x1B11C18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1B11D18", Offset = "0x1B11D18", VA = "0x1B11D18")]
	private void Instance_OnPause(bool pause)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1B0B33C", Offset = "0x1B0B33C", VA = "0x1B0B33C")]
	public void UpdateHandPose(InputController.Hand hand, Transform pose)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x1B0B888", Offset = "0x1B0B888", VA = "0x1B0B888")]
	public void ClearHandPose(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x1B11D24", Offset = "0x1B11D24", VA = "0x1B11D24")]
	public void ReleaseHandPoses()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x1B11D84", Offset = "0x1B11D84", VA = "0x1B11D84")]
	private void RestoreLastHandPoses()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x1B11EFC", Offset = "0x1B11EFC", VA = "0x1B11EFC")]
	private void SetLeftHandPose(Transform pose)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1B11F00", Offset = "0x1B11F00", VA = "0x1B11F00")]
	private void SetRightHandPose(Transform pose)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1B11F04", Offset = "0x1B11F04", VA = "0x1B11F04")]
	private void UpdateJointTransforms(Transform[] handJoints, Transform[] poseJoints, Transform pose, bool isRight)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x1B11F08", Offset = "0x1B11F08", VA = "0x1B11F08")]
	public AvatarCustomHands()
	{
	}
}
[Token(Token = "0x20001E8")]
public class AvatarSoundFx : MonoBehaviour
{
	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip ConnectSoundFx;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip DisconnectSoundFx;

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x1B11F10", Offset = "0x1B11F10", VA = "0x1B11F10")]
	public void Connect(Vector3 position)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1B11F1C", Offset = "0x1B11F1C", VA = "0x1B11F1C")]
	public void Disconnect(Vector3 position)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1B11F28", Offset = "0x1B11F28", VA = "0x1B11F28")]
	public AvatarSoundFx()
	{
	}
}
[Token(Token = "0x20001E9")]
[ExecuteAlways]
public class SkeletonMirroring : MonoBehaviour
{
	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform From;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform To;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int fromInstanceID;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int toInstanceID;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] fromJoints;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform[] toJoints;

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1B11F30", Offset = "0x1B11F30", VA = "0x1B11F30")]
	private void GetJoints(Transform obj, out Transform[] joints, out int instanceID)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1B11FB4", Offset = "0x1B11FB4", VA = "0x1B11FB4")]
	private void UpdateJointTransforms(Transform[] toJoints, Transform[] fromJoints)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1B11FB8", Offset = "0x1B11FB8", VA = "0x1B11FB8")]
	public SkeletonMirroring()
	{
	}
}
[Token(Token = "0x20001EA")]
[ExecuteAlways]
public class SkeletonRenderer : MonoBehaviour
{
	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool drawAxes;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float axisSize;

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1B11FC0", Offset = "0x1B11FC0", VA = "0x1B11FC0")]
	public SkeletonRenderer()
	{
	}
}
[Token(Token = "0x20001EB")]
public abstract class DestinationController : IController<DestinationController>
{
	[Token(Token = "0x20001EC")]
	public class DeeplinkMessage
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sku;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mode;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string user;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string roomID;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float autoStart;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string helmet;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ip;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string port;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool scenarioIsAvailable;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1B121DC", Offset = "0x1B121DC", VA = "0x1B121DC")]
		public DeeplinkMessage()
		{
		}
	}

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public DeeplinkMessage Deeplink;

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1B11FC8", Offset = "0x1B11FC8", VA = "0x1B11FC8", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000C82")]
	public abstract void UpdateDestination();

	[Token(Token = "0x6000C83")]
	public abstract void UpdateDestination(string destinationAPI, string roomID, bool joinable);

	[Token(Token = "0x6000C84")]
	public abstract void CheckLaunchDetails();

	[Token(Token = "0x6000C85")]
	public abstract void ChangeJoinable(bool joinable);

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1B11FCC", Offset = "0x1B11FCC", VA = "0x1B11FCC")]
	public static string GetDestinationID()
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1B12194", Offset = "0x1B12194", VA = "0x1B12194")]
	protected DestinationController()
	{
	}
}
[Token(Token = "0x20001ED")]
public class DestinationControllerArcadeVR : DestinationController
{
	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1B121EC", Offset = "0x1B121EC", VA = "0x1B121EC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x1B121F0", Offset = "0x1B121F0", VA = "0x1B121F0", Slot = "7")]
	public override void UpdateDestination()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x1B12254", Offset = "0x1B12254", VA = "0x1B12254", Slot = "10")]
	public override void ChangeJoinable(bool joinable)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1B122C4", Offset = "0x1B122C4", VA = "0x1B122C4", Slot = "8")]
	public override void UpdateDestination(string destinationAPI, string roomID, bool joinable)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1B122C8", Offset = "0x1B122C8", VA = "0x1B122C8", Slot = "9")]
	public override void CheckLaunchDetails()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x1B122CC", Offset = "0x1B122CC", VA = "0x1B122CC")]
	public DestinationControllerArcadeVR()
	{
	}
}
[Token(Token = "0x20001EE")]
public class DestinationControllerPico : DestinationController
{
	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x1B122D0", Offset = "0x1B122D0", VA = "0x1B122D0", Slot = "10")]
	public override void ChangeJoinable(bool joinable)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x1B122D4", Offset = "0x1B122D4", VA = "0x1B122D4", Slot = "9")]
	public override void CheckLaunchDetails()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x1B122D8", Offset = "0x1B122D8", VA = "0x1B122D8", Slot = "7")]
	public override void UpdateDestination()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1B122DC", Offset = "0x1B122DC", VA = "0x1B122DC", Slot = "8")]
	public override void UpdateDestination(string destinationAPI, string roomID, bool joinable)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1B122E0", Offset = "0x1B122E0", VA = "0x1B122E0")]
	public DestinationControllerPico()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ArcadeVRDownloader : Downloader
{
	[Token(Token = "0x20001F0")]
	[CompilerGenerated]
	private sealed class <Download>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x1B1253C", Offset = "0x1B1253C", VA = "0x1B1253C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x1B12584", Offset = "0x1B12584", VA = "0x1B12584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x1B12470", Offset = "0x1B12470", VA = "0x1B12470")]
		[DebuggerHidden]
		public <Download>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1B124E8", Offset = "0x1B124E8", VA = "0x1B124E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1B124EC", Offset = "0x1B124EC", VA = "0x1B124EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1B12544", Offset = "0x1B12544", VA = "0x1B12544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x1B122E4", Offset = "0x1B122E4", VA = "0x1B122E4", Slot = "6")]
	public override bool IsInstalled(Scenario scenario)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x1B122EC", Offset = "0x1B122EC", VA = "0x1B122EC", Slot = "7")]
	public override string GetURL(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1B12408", Offset = "0x1B12408", VA = "0x1B12408", Slot = "10")]
	public override void CancelDownload(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1B1240C", Offset = "0x1B1240C", VA = "0x1B1240C", Slot = "11")]
	public override void Delete(Scenario scenario)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x1B12410", Offset = "0x1B12410", VA = "0x1B12410", Slot = "9")]
	[IteratorStateMachine(typeof(<Download>d__4))]
	public override IEnumerator Download(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x1B12498", Offset = "0x1B12498", VA = "0x1B12498", Slot = "8")]
	public override void VerifyFiles()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1B1249C", Offset = "0x1B1249C", VA = "0x1B1249C")]
	public ArcadeVRDownloader()
	{
	}
}
[Token(Token = "0x20001F1")]
public abstract class Downloader : IController<Downloader>
{
	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool IsVerifyingFiles;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float CurrentProgress;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x1B1258C", Offset = "0x1B1258C", VA = "0x1B1258C", Slot = "6")]
	public virtual bool IsInstalled(Scenario scenario)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x1B1260C", Offset = "0x1B1260C", VA = "0x1B1260C", Slot = "7")]
	public virtual string GetURL(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	public abstract void VerifyFiles();

	[Token(Token = "0x6000CA4")]
	public abstract IEnumerator Download(Scenario scenario);

	[Token(Token = "0x6000CA5")]
	public abstract void CancelDownload(Scenario scenario);

	[Token(Token = "0x6000CA6")]
	public abstract void Delete(Scenario scenario);

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1B126AC", Offset = "0x1B126AC", VA = "0x1B126AC")]
	public void AutoDownload()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1B129FC", Offset = "0x1B129FC", VA = "0x1B129FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1B124A0", Offset = "0x1B124A0", VA = "0x1B124A0")]
	protected Downloader()
	{
	}
}
[Token(Token = "0x20001F2")]
public class DownloaderAWS : Downloader
{
	[Token(Token = "0x20001F3")]
	[CompilerGenerated]
	private sealed class <Download>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scenario scenario;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x1B1308C", Offset = "0x1B1308C", VA = "0x1B1308C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x1B130D4", Offset = "0x1B130D4", VA = "0x1B130D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1B12BEC", Offset = "0x1B12BEC", VA = "0x1B12BEC")]
		[DebuggerHidden]
		public <Download>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1B12CB4", Offset = "0x1B12CB4", VA = "0x1B12CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1B12CB8", Offset = "0x1B12CB8", VA = "0x1B12CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x1B13094", Offset = "0x1B13094", VA = "0x1B13094", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001065")]
	public const string CLOUD_FRONT_LINK = "https://d2no3c5q30zoq3.cloudfront.net";

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x1B12A0C", Offset = "0x1B12A0C", VA = "0x1B12A0C")]
	public static string AWSLink(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x1B12AEC", Offset = "0x1B12AEC", VA = "0x1B12AEC", Slot = "8")]
	public override void VerifyFiles()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1B12AF4", Offset = "0x1B12AF4", VA = "0x1B12AF4", Slot = "10")]
	public override void CancelDownload(Scenario scenario)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x1B12B78", Offset = "0x1B12B78", VA = "0x1B12B78", Slot = "9")]
	[IteratorStateMachine(typeof(<Download>d__4))]
	public override IEnumerator Download(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x1B12C14", Offset = "0x1B12C14", VA = "0x1B12C14", Slot = "11")]
	public override void Delete(Scenario scenario)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x1B12CB0", Offset = "0x1B12CB0", VA = "0x1B12CB0")]
	public DownloaderAWS()
	{
	}
}
[Token(Token = "0x20001F4")]
public class PicoDownloader : Downloader
{
	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <Download>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x1B132EC", Offset = "0x1B132EC", VA = "0x1B132EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x1B13334", Offset = "0x1B13334", VA = "0x1B13334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1B13268", Offset = "0x1B13268", VA = "0x1B13268")]
		[DebuggerHidden]
		public <Download>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1B13298", Offset = "0x1B13298", VA = "0x1B13298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1B1329C", Offset = "0x1B1329C", VA = "0x1B1329C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1B132F4", Offset = "0x1B132F4", VA = "0x1B132F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x1B130DC", Offset = "0x1B130DC", VA = "0x1B130DC", Slot = "6")]
	public override bool IsInstalled(Scenario scenario)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1B130E4", Offset = "0x1B130E4", VA = "0x1B130E4", Slot = "7")]
	public override string GetURL(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x1B13200", Offset = "0x1B13200", VA = "0x1B13200", Slot = "10")]
	public override void CancelDownload(Scenario scenario)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x1B13204", Offset = "0x1B13204", VA = "0x1B13204", Slot = "11")]
	public override void Delete(Scenario scenario)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1B13208", Offset = "0x1B13208", VA = "0x1B13208", Slot = "9")]
	[IteratorStateMachine(typeof(<Download>d__4))]
	public override IEnumerator Download(Scenario scenario)
	{
		return null;
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x1B13290", Offset = "0x1B13290", VA = "0x1B13290", Slot = "8")]
	public override void VerifyFiles()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x1B13294", Offset = "0x1B13294", VA = "0x1B13294")]
	public PicoDownloader()
	{
	}
}
[Token(Token = "0x20001F6")]
public abstract class GroupPresenceController : IController<GroupPresenceController>
{
	[Token(Token = "0x17000114")]
	public abstract bool IsSettingGroupPresence
	{
		[Token(Token = "0x6000CC3")]
		get;
		[Token(Token = "0x6000CC4")]
		set;
	}

	[Token(Token = "0x17000115")]
	public abstract bool IsGroupPresenceSet
	{
		[Token(Token = "0x6000CC5")]
		get;
	}

	[Token(Token = "0x6000CC6")]
	public abstract void SetGroupPresence(string dest, string lobby, string match, bool joinable);

	[Token(Token = "0x6000CC7")]
	public abstract void ClearGroupPresence();

	[Token(Token = "0x6000CC8")]
	public abstract void OpenInvitePanel(string dest, string lobby, string match, bool joinable);

	[Token(Token = "0x6000CC9")]
	public abstract void OpenRoster();

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1B1333C", Offset = "0x1B1333C", VA = "0x1B1333C")]
	protected GroupPresenceController()
	{
	}
}
[Token(Token = "0x20001F7")]
public abstract class InAppPurchase : IController<InAppPurchase>
{
	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnScenarioListUpdated;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float TIMEOUT;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool alreadyListed;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool HasTimeoutOcurred;

	[Token(Token = "0x17000116")]
	public bool AlreadyListed
	{
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1B134BC", Offset = "0x1B134BC", VA = "0x1B134BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1B134C4", Offset = "0x1B134C4", VA = "0x1B134C4")]
		set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnAttractonListed
	{
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1B13384", Offset = "0x1B13384", VA = "0x1B13384")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1B13420", Offset = "0x1B13420", VA = "0x1B13420")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000CCF")]
	public abstract IEnumerator Initialize();

	[Token(Token = "0x6000CD0")]
	public abstract void InitiatePurchase(string sku);

	[Token(Token = "0x6000CD1")]
	public abstract void UpdateProductInformation();

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1B134EC", Offset = "0x1B134EC", VA = "0x1B134EC")]
	protected InAppPurchase()
	{
	}
}
[Token(Token = "0x20001F8")]
public class InAppPurchaseArcadeVR : InAppPurchase
{
	[Token(Token = "0x20001F9")]
	[CompilerGenerated]
	private sealed class <Initialize>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000117")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x1B13988", Offset = "0x1B13988", VA = "0x1B13988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x1B139D0", Offset = "0x1B139D0", VA = "0x1B139D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1B13640", Offset = "0x1B13640", VA = "0x1B13640")]
		[DebuggerHidden]
		public <Initialize>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1B13934", Offset = "0x1B13934", VA = "0x1B13934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1B13938", Offset = "0x1B13938", VA = "0x1B13938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1B13990", Offset = "0x1B13990", VA = "0x1B13990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1B13580", Offset = "0x1B13580", VA = "0x1B13580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1B135E0", Offset = "0x1B135E0", VA = "0x1B135E0", Slot = "6")]
	[IteratorStateMachine(typeof(<Initialize>d__1))]
	public override IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1B13668", Offset = "0x1B13668", VA = "0x1B13668", Slot = "7")]
	public override void InitiatePurchase(string sku)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1B1366C", Offset = "0x1B1366C", VA = "0x1B1366C", Slot = "8")]
	public override void UpdateProductInformation()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1B138E0", Offset = "0x1B138E0", VA = "0x1B138E0")]
	public InAppPurchaseArcadeVR()
	{
	}
}
[Token(Token = "0x20001FA")]
public class InAppPurchasePico : InAppPurchase
{
	[Token(Token = "0x20001FB")]
	[CompilerGenerated]
	private sealed class <Initialize>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InAppPurchasePico <>4__this;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x1B145E4", Offset = "0x1B145E4", VA = "0x1B145E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x1B1462C", Offset = "0x1B1462C", VA = "0x1B1462C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1B13A4C", Offset = "0x1B13A4C", VA = "0x1B13A4C")]
		[DebuggerHidden]
		public <Initialize>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1B14564", Offset = "0x1B14564", VA = "0x1B14564", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1B14568", Offset = "0x1B14568", VA = "0x1B14568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1B145EC", Offset = "0x1B145EC", VA = "0x1B145EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <UpdateAfterBuy>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InAppPurchasePico <>4__this;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MessageUIController.Message <messageBox>5__2;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x1B14890", Offset = "0x1B14890", VA = "0x1B14890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x1B148D8", Offset = "0x1B148D8", VA = "0x1B148D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1B144E8", Offset = "0x1B144E8", VA = "0x1B144E8")]
		[DebuggerHidden]
		public <UpdateAfterBuy>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1B14634", Offset = "0x1B14634", VA = "0x1B14634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1B14638", Offset = "0x1B14638", VA = "0x1B14638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1B14898", Offset = "0x1B14898", VA = "0x1B14898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool productBySkuReturned;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool purchaseProductReturned;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float retrieveStartTime;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Product> ProductList;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Purchase> PurchaseList;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1B139D8", Offset = "0x1B139D8", VA = "0x1B139D8", Slot = "6")]
	[IteratorStateMachine(typeof(<Initialize>d__5))]
	public override IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1B13A74", Offset = "0x1B13A74", VA = "0x1B13A74")]
	private void RetrieveProducts()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1B13CEC", Offset = "0x1B13CEC", VA = "0x1B13CEC")]
	private void GetProductsBySKUCallback(Message<ProductList> msg)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1B13E4C", Offset = "0x1B13E4C", VA = "0x1B13E4C")]
	public void RetrievePurchases()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1B13EFC", Offset = "0x1B13EFC", VA = "0x1B13EFC")]
	private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1B1405C", Offset = "0x1B1405C", VA = "0x1B1405C")]
	public void UnlockAllRollerCoasters()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1B1415C", Offset = "0x1B1415C", VA = "0x1B1415C", Slot = "8")]
	public override void UpdateProductInformation()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1B14160", Offset = "0x1B14160", VA = "0x1B14160", Slot = "7")]
	public override void InitiatePurchase(string sku)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1B14378", Offset = "0x1B14378", VA = "0x1B14378")]
	private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1B142E8", Offset = "0x1B142E8", VA = "0x1B142E8")]
	[IteratorStateMachine(typeof(<UpdateAfterBuy>d__14))]
	public IEnumerator UpdateAfterBuy(string message)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1B14510", Offset = "0x1B14510", VA = "0x1B14510")]
	public InAppPurchasePico()
	{
	}
}
[Token(Token = "0x20001FD")]
public class PlayerConfiguration : MonoBehaviour
{
	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string PasswordHash;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string AllowedKey;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string NotAllowedKey;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1B0EF10", Offset = "0x1B0EF10", VA = "0x1B0EF10")]
	public static string Md5(string strToEncrypt)
	{
		return null;
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x1B148E0", Offset = "0x1B148E0", VA = "0x1B148E0")]
	public static string Encrypt(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1B14AD8", Offset = "0x1B14AD8", VA = "0x1B14AD8")]
	public static string GetProductPrice(string sku)
	{
		return null;
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1B14B54", Offset = "0x1B14B54", VA = "0x1B14B54")]
	public static float FormatPrice(string price)
	{
		return default(float);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1B14C70", Offset = "0x1B14C70", VA = "0x1B14C70")]
	public static bool GetProductAllowed(string sku)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1B1376C", Offset = "0x1B1376C", VA = "0x1B1376C")]
	public static void SaveProduct(string sku, string price, bool allowed)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1B14D80", Offset = "0x1B14D80", VA = "0x1B14D80")]
	public static bool IsFirstTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x1B14E38", Offset = "0x1B14E38", VA = "0x1B14E38")]
	public static void ToggleTutorialAllowed(bool dontShow)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x1B14E84", Offset = "0x1B14E84", VA = "0x1B14E84")]
	public static bool IsTutorialDisabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x1B14ED8", Offset = "0x1B14ED8", VA = "0x1B14ED8")]
	public static void SaveAvatar(string avatarID)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1B14F24", Offset = "0x1B14F24", VA = "0x1B14F24")]
	public static string GetAvatar(string defaultAvatarID)
	{
		return null;
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1B0F354", Offset = "0x1B0F354", VA = "0x1B0F354")]
	public static bool GetDeviceAllowed(string id, DateTime dateNow, out string customer, out string skus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1B0EC98", Offset = "0x1B0EC98", VA = "0x1B0EC98")]
	public static DateTime GetDeviceAllowedDate(string id)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1B10910", Offset = "0x1B10910", VA = "0x1B10910")]
	public static void SaveDevice(string id, bool allowed, string customer, DateTime dateNow, int duration = 0, string skus = "")
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1B14F70", Offset = "0x1B14F70", VA = "0x1B14F70")]
	public PlayerConfiguration()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ButtonWatcher : MonoBehaviour
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputHelpers.Button button;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnDown;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SafetyEvent OnUp;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPressed;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasPressed;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float value;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isAxis;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float onDownFactor;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float onUpFactor;

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x1B15054", Offset = "0x1B15054", VA = "0x1B15054")]
	public void Config(InputHelpers.Button button, float onDownFactor = 0.8f, float onUpFactor = 0.8f)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1B1510C", Offset = "0x1B1510C", VA = "0x1B1510C")]
	public void UpdateInput(UnityEngine.XR.InputDevice device)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1B152CC", Offset = "0x1B152CC", VA = "0x1B152CC")]
	public ButtonWatcher()
	{
	}
}
[Token(Token = "0x20001FF")]
public class ControllerIdentifier : MonoBehaviour
{
	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEngine.InputSystem.XR.XRController XRController;

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1B152D4", Offset = "0x1B152D4", VA = "0x1B152D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x1B1532C", Offset = "0x1B1532C", VA = "0x1B1532C")]
	public ControllerIdentifier()
	{
	}
}
[Token(Token = "0x2000200")]
public abstract class InputController : IController<InputController>
{
	[Token(Token = "0x2000201")]
	public enum Hand
	{
		[Token(Token = "0x40010B2")]
		Both = 0,
		[Token(Token = "0x40010B3")]
		Right = 1,
		[Token(Token = "0x40010B4")]
		Left = 2,
		[Token(Token = "0x40010B5")]
		None = -1
	}

	[Token(Token = "0x2000202")]
	public enum ControllerType
	{
		[Token(Token = "0x40010B7")]
		Unknown,
		[Token(Token = "0x40010B8")]
		Rift_Touch,
		[Token(Token = "0x40010B9")]
		Quest_RiftS_Touch,
		[Token(Token = "0x40010BA")]
		Rift_Remote,
		[Token(Token = "0x40010BB")]
		GearVR_Touchpad,
		[Token(Token = "0x40010BC")]
		GearVR_Controller,
		[Token(Token = "0x40010BD")]
		Go_Controller,
		[Token(Token = "0x40010BE")]
		Gamepad,
		[Token(Token = "0x40010BF")]
		Daydream,
		[Token(Token = "0x40010C0")]
		Daydream_6DOF,
		[Token(Token = "0x40010C1")]
		Pico_Goblin1,
		[Token(Token = "0x40010C2")]
		Pico_Neo,
		[Token(Token = "0x40010C3")]
		Pico_Goblin2,
		[Token(Token = "0x40010C4")]
		Pico_Neo2,
		[Token(Token = "0x40010C5")]
		Pico_Neo3,
		[Token(Token = "0x40010C6")]
		Pico_Headset,
		[Token(Token = "0x40010C7")]
		Pico_All_Controllers,
		[Token(Token = "0x40010C8")]
		Cardboard,
		[Token(Token = "0x40010C9")]
		Keyboard,
		[Token(Token = "0x40010CA")]
		Windows_MRController,
		[Token(Token = "0x40010CB")]
		Huawei_Controllers,
		[Token(Token = "0x40010CC")]
		Nolo_Controllers,
		[Token(Token = "0x40010CD")]
		Nolo_Sonic,
		[Token(Token = "0x40010CE")]
		Jioglass,
		[Token(Token = "0x40010CF")]
		Oculus_Touch_Controller,
		[Token(Token = "0x40010D0")]
		Windows_MR_Controller,
		[Token(Token = "0x40010D1")]
		Valve_Index_Controller,
		[Token(Token = "0x40010D2")]
		HTC_Vive_Controller,
		[Token(Token = "0x40010D3")]
		HTC_Vive_Cosmos,
		[Token(Token = "0x40010D4")]
		PS4_DualShockGamepad,
		[Token(Token = "0x40010D5")]
		PS4_AimController,
		[Token(Token = "0x40010D6")]
		PS4_MoveController,
		[Token(Token = "0x40010D7")]
		PS5_DualSenseController
	}

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool UiPressUsage;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool xboxControllerMenuButton;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool psControllerMenuButton;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerType ControllerModel;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SafetyEvent OnMenuButtonUp;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SafetyEvent OnSwipedLeft;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SafetyEvent OnSwipedRight;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SafetyEvent OnSwipedUp;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SafetyEvent OnSwipedDown;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SafetyEvent OnDeadZone;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SafetyEvent OnPlay;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SafetyEvent OnPause;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SafetyEvent OnBack;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SafetyEvent OnRecenter;

	[Token(Token = "0x40010A3")]
	public const string OCULUS_TOUCH_CONTROLLER_OPENXR = "Oculus Touch Controller OpenXR";

	[Token(Token = "0x40010A4")]
	public const string WINDOWS_MR_CONTROLLER_OPENXR = "Windows MR Controller OpenXR";

	[Token(Token = "0x40010A5")]
	public const string INDEX_CONTROLLER_OPENXR = "Index Controller OpenXR";

	[Token(Token = "0x40010A6")]
	public const string HTC_VIVE_CONTROLLER_OPENXR = "HTC Vive Controller OpenXR";

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Hand LastHand;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected bool alreadyStarted;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_SpriteAsset TutorialSpriteAsset;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected string TextMeshProTutorialBase;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool IsGrabbingSomething;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool hasAddedHapticListeners;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool wasUsedForRecenter;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float recenterDownCountdown;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool buttonRecenterDown;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool buttonUpAfterLastRecenter;

	[Token(Token = "0x1700011D")]
	public static DualShockGamepad DualShockGamepad
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x1B15334", Offset = "0x1B15334", VA = "0x1B15334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011E")]
	public static Gamepad Gamepad
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x1B15374", Offset = "0x1B15374", VA = "0x1B15374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public static Keyboard Keyboard
	{
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x1B153B4", Offset = "0x1B153B4", VA = "0x1B153B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	public static Mouse Mouse
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x1B153F4", Offset = "0x1B153F4", VA = "0x1B153F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public static bool InteractionButton
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1B15434", Offset = "0x1B15434", VA = "0x1B15434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000122")]
	public static bool InteractionButtonUp
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1B156FC", Offset = "0x1B156FC", VA = "0x1B156FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000123")]
	public static bool EscapeButton
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x1B158D4", Offset = "0x1B158D4", VA = "0x1B158D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000124")]
	public static bool ShotButton
	{
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x1B159B8", Offset = "0x1B159B8", VA = "0x1B159B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000125")]
	public static bool SlowmotionStartButton
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1B15B3C", Offset = "0x1B15B3C", VA = "0x1B15B3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000126")]
	public static bool SlowmotionEndButton
	{
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1B15CC0", Offset = "0x1B15CC0", VA = "0x1B15CC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000127")]
	private static bool wasKeyboardMenuButtonReleased
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x1B15E44", Offset = "0x1B15E44", VA = "0x1B15E44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000128")]
	private static bool isKeyboardVerticalPressed
	{
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x1B15F28", Offset = "0x1B15F28", VA = "0x1B15F28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	private static float keyboardVerticalValue
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x1B16110", Offset = "0x1B16110", VA = "0x1B16110")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012A")]
	private static bool isKeyboardHorizontalPressed
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x1B162E0", Offset = "0x1B162E0", VA = "0x1B162E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	private static float keyboardHorizontalValue
	{
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x1B164C8", Offset = "0x1B164C8", VA = "0x1B164C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700012C")]
	private static bool wasGamepadMenuButtonReleased
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1B16698", Offset = "0x1B16698", VA = "0x1B16698")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012D")]
	private static bool isGamepadHorizontalDPadPressed
	{
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x1B1671C", Offset = "0x1B1671C", VA = "0x1B1671C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012E")]
	private static bool isGamepadHorizontalLeftStickPressed
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x1B16814", Offset = "0x1B16814", VA = "0x1B16814")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012F")]
	private static bool isGamepadHorizontalRightStickPressed
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x1B1690C", Offset = "0x1B1690C", VA = "0x1B1690C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	private static bool isGamepadHorizontalPressed
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x1B16A04", Offset = "0x1B16A04", VA = "0x1B16A04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	private static float gamepadHorizontalValue
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x1B16A90", Offset = "0x1B16A90", VA = "0x1B16A90")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000132")]
	private static bool isGamepadVerticalDPadPressed
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1B16C28", Offset = "0x1B16C28", VA = "0x1B16C28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	private static bool isGamepadVerticalLeftStickPressed
	{
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1B16D20", Offset = "0x1B16D20", VA = "0x1B16D20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	private static bool isGamepadVerticalRightStickPressed
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1B16E18", Offset = "0x1B16E18", VA = "0x1B16E18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000135")]
	private static bool isGamepadVerticalPressed
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x1B16F10", Offset = "0x1B16F10", VA = "0x1B16F10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000136")]
	private static float gamepadVerticalValue
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1B16F9C", Offset = "0x1B16F9C", VA = "0x1B16F9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000137")]
	public static bool MenuButton
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x1B17138", Offset = "0x1B17138", VA = "0x1B17138")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000138")]
	public static bool VerticalButton
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1B171AC", Offset = "0x1B171AC", VA = "0x1B171AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000139")]
	public static bool HorizontalButton
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x1B17220", Offset = "0x1B17220", VA = "0x1B17220")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public static float VerticalAxis
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x1B17294", Offset = "0x1B17294", VA = "0x1B17294")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013B")]
	public static float HorizontalAxis
	{
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x1B1730C", Offset = "0x1B1730C", VA = "0x1B1730C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013C")]
	public bool HasRemoteLeftController
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x1B17904", Offset = "0x1B17904", VA = "0x1B17904")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public bool HasRemoteRightController
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x1B1790C", Offset = "0x1B1790C", VA = "0x1B1790C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public virtual bool HasRightController
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x1B17914", Offset = "0x1B17914", VA = "0x1B17914", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public virtual bool HasLeftController
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1B1791C", Offset = "0x1B1791C", VA = "0x1B1791C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000140")]
	public virtual float HeadsetBattery
	{
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1B17924", Offset = "0x1B17924", VA = "0x1B17924", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000141")]
	public virtual float LeftControllerBattery
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1B17944", Offset = "0x1B17944", VA = "0x1B17944", Slot = "9")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000142")]
	public virtual float RightControllerBattery
	{
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x1B1794C", Offset = "0x1B1794C", VA = "0x1B1794C", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000143")]
	public virtual Quaternion PointingDirectionOffset
	{
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1B17954", Offset = "0x1B17954", VA = "0x1B17954", Slot = "11")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000144")]
	public virtual Vector3 PositionOffset
	{
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x1B17998", Offset = "0x1B17998", VA = "0x1B17998", Slot = "12")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<Hand> OnShot
	{
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x1B17384", Offset = "0x1B17384", VA = "0x1B17384")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x1B17434", Offset = "0x1B17434", VA = "0x1B17434")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<Hand> OnSlowmotionStart
	{
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x1B174E4", Offset = "0x1B174E4", VA = "0x1B174E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x1B17594", Offset = "0x1B17594", VA = "0x1B17594")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<Hand> OnSlowmotionEnd
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1B17644", Offset = "0x1B17644", VA = "0x1B17644")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1B176F4", Offset = "0x1B176F4", VA = "0x1B176F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<Hand> OnPrimaryDown
	{
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1B0A740", Offset = "0x1B0A740", VA = "0x1B0A740")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1B0A3D0", Offset = "0x1B0A3D0", VA = "0x1B0A3D0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action<Hand> OnPrimaryUp
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1B177A4", Offset = "0x1B177A4", VA = "0x1B177A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1B17854", Offset = "0x1B17854", VA = "0x1B17854")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<Hand> OnTriggerDown
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1B0A480", Offset = "0x1B0A480", VA = "0x1B0A480")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1B0A110", Offset = "0x1B0A110", VA = "0x1B0A110")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<Hand> OnTriggerUp
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1B0A530", Offset = "0x1B0A530", VA = "0x1B0A530")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1B0A1C0", Offset = "0x1B0A1C0", VA = "0x1B0A1C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<Hand> OnGripDown
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1B0A5E0", Offset = "0x1B0A5E0", VA = "0x1B0A5E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1B0A270", Offset = "0x1B0A270", VA = "0x1B0A270")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action<Hand> OnGripUp
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x1B0A690", Offset = "0x1B0A690", VA = "0x1B0A690")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x1B0A320", Offset = "0x1B0A320", VA = "0x1B0A320")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1B179DC", Offset = "0x1B179DC", VA = "0x1B179DC", Slot = "13")]
	public virtual bool IsUsingHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x1B179E4", Offset = "0x1B179E4", VA = "0x1B179E4", Slot = "14")]
	public virtual void DelayedStart()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x1B17E24", Offset = "0x1B17E24", VA = "0x1B17E24", Slot = "15")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x1B17F24", Offset = "0x1B17F24", VA = "0x1B17F24")]
	private void SceneManager_sceneLoaded(Scene scene, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1B17F4C", Offset = "0x1B17F4C", VA = "0x1B17F4C")]
	private void SceneManager_sceneUnloaded(Scene scene)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1B17CB0", Offset = "0x1B17CB0", VA = "0x1B17CB0")]
	public void AddHapticListeners()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1B17F74", Offset = "0x1B17F74", VA = "0x1B17F74")]
	public void RemoveHapticListeners()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x1B180B4", Offset = "0x1B180B4", VA = "0x1B180B4", Slot = "16")]
	protected virtual void OnReceiveLeftHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1B181EC", Offset = "0x1B181EC", VA = "0x1B181EC", Slot = "17")]
	protected virtual void OnReceiveRightHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1B18324", Offset = "0x1B18324", VA = "0x1B18324", Slot = "18")]
	protected virtual void StopHaptics()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1B18400", Offset = "0x1B18400", VA = "0x1B18400", Slot = "19")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1B18440", Offset = "0x1B18440", VA = "0x1B18440")]
	private void OnPlayTriggered()
	{
	}

	[Token(Token = "0x6000D51")]
	protected abstract bool VerifyActiveInput(Hand hand);

	[Token(Token = "0x6000D52")]
	public abstract Vector3 GetLocalControllerPosition(Hand hand);

	[Token(Token = "0x6000D53")]
	public abstract Quaternion GetLocalControllerRotation(Hand hand);

	[Token(Token = "0x6000D54")]
	public abstract Vector3 GetLocalControllerVelocity(Hand hand);

	[Token(Token = "0x6000D55")]
	public abstract Vector3 GetLocalControllerAngularVelocity(Hand hand);

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1B18470", Offset = "0x1B18470", VA = "0x1B18470", Slot = "25")]
	public virtual bool GetPrimary(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x1B184BC", Offset = "0x1B184BC", VA = "0x1B184BC", Slot = "26")]
	public virtual bool GetSecondary(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x1B18508", Offset = "0x1B18508", VA = "0x1B18508", Slot = "27")]
	public virtual float GetTrigger(Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1B186BC", Offset = "0x1B186BC", VA = "0x1B186BC")]
	protected void LeftTrigger_OnDown()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1B18708", Offset = "0x1B18708", VA = "0x1B18708")]
	protected void LeftTrigger_OnUp()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1B18728", Offset = "0x1B18728", VA = "0x1B18728")]
	protected void RightTrigger_OnDown()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x1B18774", Offset = "0x1B18774", VA = "0x1B18774")]
	protected void RightTrigger_OnUp()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1B18794", Offset = "0x1B18794", VA = "0x1B18794", Slot = "28")]
	public virtual float GetGrabber(Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x1B18948", Offset = "0x1B18948", VA = "0x1B18948")]
	protected void LeftGrabber_OnDown()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x1B18994", Offset = "0x1B18994", VA = "0x1B18994")]
	protected void LeftGrabber_OnUp()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x1B189E0", Offset = "0x1B189E0", VA = "0x1B189E0")]
	protected void RightGrabber_OnDown()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x1B18A2C", Offset = "0x1B18A2C", VA = "0x1B18A2C")]
	protected void RightGrabber_OnUp()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1B18A78", Offset = "0x1B18A78", VA = "0x1B18A78")]
	protected void RightPrimaryButton_OnUp()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x1B18A98", Offset = "0x1B18A98", VA = "0x1B18A98")]
	protected void RightPrimaryButton_OnDown()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1B18AC8", Offset = "0x1B18AC8", VA = "0x1B18AC8")]
	protected void LeftPrimaryButton_OnUp()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1B18AE8", Offset = "0x1B18AE8", VA = "0x1B18AE8")]
	protected void LeftPrimaryButton_OnDown()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1B18B18", Offset = "0x1B18B18", VA = "0x1B18B18")]
	protected void RightSecondaryButton_OnUp()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x1B18B88", Offset = "0x1B18B88", VA = "0x1B18B88")]
	protected void RightSecondaryButton_OnDown()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x1B18BD0", Offset = "0x1B18BD0", VA = "0x1B18BD0")]
	protected void LeftSecondaryButton_OnUp()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x1B18BD4", Offset = "0x1B18BD4", VA = "0x1B18BD4")]
	protected void LeftSecondaryButton_OnDown()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1B18BF8", Offset = "0x1B18BF8", VA = "0x1B18BF8")]
	protected void MenuButton_OnUp()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x1B18BFC", Offset = "0x1B18BFC", VA = "0x1B18BFC")]
	protected void MenuButton_OnDown()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1B18B1C", Offset = "0x1B18B1C", VA = "0x1B18B1C")]
	private void SecondaryButton_OnUp()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1B18BAC", Offset = "0x1B18BAC", VA = "0x1B18BAC")]
	private void SecondaryButton_OnDown()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x1B18C2C", Offset = "0x1B18C2C", VA = "0x1B18C2C", Slot = "29")]
	protected virtual void VerifyRecenter()
	{
	}

	[Token(Token = "0x6000D6F")]
	public abstract Vector2 GetRightThumbstick();

	[Token(Token = "0x6000D70")]
	public abstract Vector2 GetLeftThumbstick();

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x1B18CAC", Offset = "0x1B18CAC", VA = "0x1B18CAC", Slot = "32")]
	public virtual Vector2 GetActiveThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x1B18D14", Offset = "0x1B18D14", VA = "0x1B18D14", Slot = "33")]
	protected virtual void VerifyThumbstick()
	{
	}

	[Token(Token = "0x6000D73")]
	protected abstract ControllerType CheckControllerType();

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1B18E10", Offset = "0x1B18E10", VA = "0x1B18E10", Slot = "35")]
	public virtual void CreateControllers()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1B18E14", Offset = "0x1B18E14", VA = "0x1B18E14", Slot = "36")]
	public virtual void ShowControllers(Hand hand)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1B18E18", Offset = "0x1B18E18", VA = "0x1B18E18", Slot = "37")]
	public virtual void HideControllers(Hand hand)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1B18E1C", Offset = "0x1B18E1C", VA = "0x1B18E1C", Slot = "38")]
	public virtual bool HasControllers(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D78")]
	public abstract string GetTriggerTutorial();

	[Token(Token = "0x6000D79")]
	public abstract string GetGrabberTutorial();

	[Token(Token = "0x6000D7A")]
	public abstract string GetPictureButtonTutorial();

	[Token(Token = "0x6000D7B")]
	public abstract string GetSlowMotionTutorial();

	[Token(Token = "0x6000D7C")]
	public abstract string GetRecenterTutorial();

	[Token(Token = "0x6000D7D")]
	public abstract string GetAccelerateTutorial();

	[Token(Token = "0x6000D7E")]
	public abstract string GetBrakeTutorial();

	[Token(Token = "0x6000D7F")]
	public abstract string GetPauseTutorial();

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x1B18E24", Offset = "0x1B18E24", VA = "0x1B18E24")]
	protected void ChangeDragThreshold(int threshold)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x1B18E28", Offset = "0x1B18E28", VA = "0x1B18E28")]
	protected InputController()
	{
	}
}
[Token(Token = "0x2000203")]
public class InputControllerOculus : InputControllerUnityXR
{
	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private readonly string OCULUS_HOME_ID;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private readonly string RIFT_ONE_RIGHT_ID;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly string RIFT_ONE_LEFT_ID;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private readonly string RIFT_TWO_RIGHT_ID;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private readonly string RIFT_TWO_LEFT_ID;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly string RIFT_TRIGGER_ID;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly string RIFT_GRABBER_ID;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly string VIVE_TOUCHPAD_ID;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly string VIVE_GRABBER_ID;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly string VIVE_TRIGGER_ID;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private readonly string VIVE_MENU_ID;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly string MOUSE_0;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private readonly string MOUSE_1;

	[Token(Token = "0x17000145")]
	public override Quaternion PointingDirectionOffset
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1B18F94", Offset = "0x1B18F94", VA = "0x1B18F94", Slot = "11")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000146")]
	public ControllerType Controller
	{
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1B19038", Offset = "0x1B19038", VA = "0x1B19038")]
		get
		{
			return default(ControllerType);
		}
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1B19048", Offset = "0x1B19048", VA = "0x1B19048", Slot = "34")]
	protected override ControllerType CheckControllerType()
	{
		return default(ControllerType);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1B19050", Offset = "0x1B19050", VA = "0x1B19050", Slot = "46")]
	public override string GetPauseTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x1B19078", Offset = "0x1B19078", VA = "0x1B19078", Slot = "43")]
	public override string GetRecenterTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1B1908C", Offset = "0x1B1908C", VA = "0x1B1908C", Slot = "39")]
	public override string GetTriggerTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x1B190CC", Offset = "0x1B190CC", VA = "0x1B190CC", Slot = "40")]
	public override string GetGrabberTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1B1910C", Offset = "0x1B1910C", VA = "0x1B1910C", Slot = "41")]
	public override string GetPictureButtonTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1B19160", Offset = "0x1B19160", VA = "0x1B19160", Slot = "42")]
	public override string GetSlowMotionTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x1B19170", Offset = "0x1B19170", VA = "0x1B19170", Slot = "44")]
	public override string GetAccelerateTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1B19180", Offset = "0x1B19180", VA = "0x1B19180", Slot = "45")]
	public override string GetBrakeTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x1B19190", Offset = "0x1B19190", VA = "0x1B19190")]
	public InputControllerOculus()
	{
	}
}
[Token(Token = "0x2000204")]
public class InputControllerPico : InputControllerUnityXR
{
	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public ControllerType Device;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject RightController;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject LeftController;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private GameObject leftController;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private GameObject rightController;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private readonly string PICO_HOME_ID;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly string PICO_APP_ID;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly string PICO_HEADSET_ONE_ID;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private readonly string PICO_NEO2_TRIGGER_ID;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private readonly string PICO_NEO2_GRABBER_ID;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private readonly string PICO_NEO2_ONE_LEFT_ID;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private readonly string PICO_NEO2_TWO_LEFT_ID;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private readonly string PICO_NEO2_ONE_RIGHT_ID;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private readonly string PICO_NEO2_TWO_RIGHT_ID;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private readonly string PICO_NEO3_TRIGGER_ID;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private readonly string PICO_NEO3_GRABBER_ID;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private readonly string PICO_NEO3_ONE_LEFT_ID;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private readonly string PICO_NEO3_TWO_LEFT_ID;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private readonly string PICO_NEO3_ONE_RIGHT_ID;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private readonly string PICO_NEO3_TWO_RIGHT_ID;

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x1B193CC", Offset = "0x1B193CC", VA = "0x1B193CC", Slot = "47")]
	protected override void CreateLeftButtonWatchers()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x1B19C48", Offset = "0x1B19C48", VA = "0x1B19C48", Slot = "48")]
	protected override void CreateRightButtonWatchers()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x1B1A378", Offset = "0x1B1A378", VA = "0x1B1A378", Slot = "49")]
	protected override void DestroyLeftButtonWatchers()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1B1A59C", Offset = "0x1B1A59C", VA = "0x1B1A59C", Slot = "50")]
	protected override void DestroyRightButtonWatchers()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x1B1A7C0", Offset = "0x1B1A7C0", VA = "0x1B1A7C0", Slot = "16")]
	protected override void OnReceiveLeftHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1B1A804", Offset = "0x1B1A804", VA = "0x1B1A804", Slot = "17")]
	protected override void OnReceiveRightHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1B1A848", Offset = "0x1B1A848", VA = "0x1B1A848", Slot = "18")]
	protected override void StopHaptics()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1B1A8A8", Offset = "0x1B1A8A8", VA = "0x1B1A8A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1B1A9D4", Offset = "0x1B1A9D4", VA = "0x1B1A9D4", Slot = "39")]
	public override string GetTriggerTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1B1A9FC", Offset = "0x1B1A9FC", VA = "0x1B1A9FC", Slot = "40")]
	public override string GetGrabberTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1B1AA24", Offset = "0x1B1AA24", VA = "0x1B1AA24", Slot = "41")]
	public override string GetPictureButtonTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x1B1AAAC", Offset = "0x1B1AAAC", VA = "0x1B1AAAC", Slot = "42")]
	public override string GetSlowMotionTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x1B1AB10", Offset = "0x1B1AB10", VA = "0x1B1AB10", Slot = "43")]
	public override string GetRecenterTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1B1AB24", Offset = "0x1B1AB24", VA = "0x1B1AB24", Slot = "44")]
	public override string GetAccelerateTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x1B1AB88", Offset = "0x1B1AB88", VA = "0x1B1AB88", Slot = "45")]
	public override string GetBrakeTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x1B1ABEC", Offset = "0x1B1ABEC", VA = "0x1B1ABEC", Slot = "46")]
	public override string GetPauseTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x1B1AC00", Offset = "0x1B1AC00", VA = "0x1B1AC00", Slot = "34")]
	protected override ControllerType CheckControllerType()
	{
		return default(ControllerType);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x1B1AC08", Offset = "0x1B1AC08", VA = "0x1B1AC08", Slot = "36")]
	public override void ShowControllers(Hand hand)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x1B1AD08", Offset = "0x1B1AD08", VA = "0x1B1AD08", Slot = "37")]
	public override void HideControllers(Hand hand)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x1B1AE08", Offset = "0x1B1AE08", VA = "0x1B1AE08", Slot = "38")]
	public override bool HasControllers(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x1B1AEC4", Offset = "0x1B1AEC4", VA = "0x1B1AEC4", Slot = "35")]
	public override void CreateControllers()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x1B1B204", Offset = "0x1B1B204", VA = "0x1B1B204")]
	public InputControllerPico()
	{
	}
}
[Token(Token = "0x2000205")]
public abstract class InputControllerUnityXR : InputController
{
	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public UnityEngine.XR.InputDevice LeftInputDevice;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public UnityEngine.XR.InputDevice RightInputDevice;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public XRNodeState LeftXRNode;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public XRNodeState RightXRNode;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private UnityEngine.XR.Interaction.Toolkit.XRController headXRController;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private UnityEngine.XR.Interaction.Toolkit.XRController leftXRController;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private UnityEngine.XR.Interaction.Toolkit.XRController rightXRController;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private XRDirectInteractor xRDirectInteractorLeft;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private XRDirectInteractor xRDirectInteractorRight;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private XRRayInteractor xRRayInteractorRight;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private XRRayInteractor xRRayInteractorLeft;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private XRRayInteractor xRRayInteractorHead;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected ButtonWatcher rightTriggerWatcher;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected ButtonWatcher leftTriggerWatcher;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected ButtonWatcher rightGripWatcher;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected ButtonWatcher leftGripWatcher;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected ButtonWatcher rightPrimaryWatcher;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected ButtonWatcher leftPrimaryWatcher;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected ButtonWatcher leftSecondaryWatcher;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected ButtonWatcher rightSecondaryWatcher;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected ButtonWatcher leftMenuWatcher;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	protected ButtonWatcher rightMenuWatcher;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	protected UnityEngine.XR.InputDevice lastActiveController;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private UnityEngine.XR.InputDevice activeController;

	[Token(Token = "0x17000147")]
	public UnityEngine.XR.Interaction.Toolkit.XRController HeadXRController
	{
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x1B1B534", Offset = "0x1B1B534", VA = "0x1B1B534")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public UnityEngine.XR.Interaction.Toolkit.XRController LeftXRController
	{
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1B11A40", Offset = "0x1B11A40", VA = "0x1B11A40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1B1B5BC", Offset = "0x1B1B5BC", VA = "0x1B1B5BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public UnityEngine.XR.Interaction.Toolkit.XRController RightXRController
	{
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x1B119B8", Offset = "0x1B119B8", VA = "0x1B119B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x1B1B5CC", Offset = "0x1B1B5CC", VA = "0x1B1B5CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public UnityEngine.XR.Interaction.Toolkit.XRController LastXRController
	{
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x1B1B5DC", Offset = "0x1B1B5DC", VA = "0x1B1B5DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014B")]
	public XRDirectInteractor XRDirectInteractorLeft
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1B1B600", Offset = "0x1B1B600", VA = "0x1B1B600")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public XRDirectInteractor XRDirectInteractorRight
	{
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x1B1B704", Offset = "0x1B1B704", VA = "0x1B1B704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014D")]
	public XRRayInteractor XRRayInteractorRight
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1B1B808", Offset = "0x1B1B808", VA = "0x1B1B808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public XRRayInteractor XRRayInteractorLeft
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x1B1B8B8", Offset = "0x1B1B8B8", VA = "0x1B1B8B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	public XRRayInteractor XRRayInteractorHead
	{
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1B1B968", Offset = "0x1B1B968", VA = "0x1B1B968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public override bool HasLeftController
	{
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x1B1BA18", Offset = "0x1B1BA18", VA = "0x1B1BA18", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000151")]
	public override bool HasRightController
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1B1BA24", Offset = "0x1B1BA24", VA = "0x1B1BA24", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000152")]
	public override float LeftControllerBattery
	{
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x1B1BA30", Offset = "0x1B1BA30", VA = "0x1B1BA30", Slot = "9")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000153")]
	public override float RightControllerBattery
	{
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1B1BAD0", Offset = "0x1B1BAD0", VA = "0x1B1BAD0", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000154")]
	public UnityEngine.XR.InputDevice ActiveController
	{
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1B1BB70", Offset = "0x1B1BB70", VA = "0x1B1BB70")]
		get
		{
			return default(UnityEngine.XR.InputDevice);
		}
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1B1BB80", Offset = "0x1B1BB80", VA = "0x1B1BB80")]
		set
		{
		}
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1B1B478", Offset = "0x1B1B478", VA = "0x1B1B478")]
	private UnityEngine.XR.Interaction.Toolkit.XRController FindXRController(XRNode controllerNode)
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x1B1BB8C", Offset = "0x1B1BB8C", VA = "0x1B1BB8C", Slot = "14")]
	public override void DelayedStart()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1B1BCD0", Offset = "0x1B1BCD0", VA = "0x1B1BCD0")]
	private void InputSystem_onDeviceChange(UnityEngine.InputSystem.InputDevice device, InputDeviceChange status)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x1B19580", Offset = "0x1B19580", VA = "0x1B19580", Slot = "47")]
	protected virtual void CreateLeftButtonWatchers()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x1B19DFC", Offset = "0x1B19DFC", VA = "0x1B19DFC", Slot = "48")]
	protected virtual void CreateRightButtonWatchers()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1B1A400", Offset = "0x1B1A400", VA = "0x1B1A400", Slot = "49")]
	protected virtual void DestroyLeftButtonWatchers()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x1B1A624", Offset = "0x1B1A624", VA = "0x1B1A624", Slot = "50")]
	protected virtual void DestroyRightButtonWatchers()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x1B1BCD4", Offset = "0x1B1BCD4", VA = "0x1B1BCD4", Slot = "16")]
	protected override void OnReceiveLeftHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x1B1BD60", Offset = "0x1B1BD60", VA = "0x1B1BD60", Slot = "17")]
	protected override void OnReceiveRightHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x1B1BDEC", Offset = "0x1B1BDEC", VA = "0x1B1BDEC", Slot = "18")]
	protected override void StopHaptics()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x1B1BE3C", Offset = "0x1B1BE3C", VA = "0x1B1BE3C", Slot = "51")]
	protected virtual void RegisterDevices(UnityEngine.XR.InputDevice connectedDevice)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1B1C444", Offset = "0x1B1C444", VA = "0x1B1C444")]
	protected void UnregisterDevices(UnityEngine.XR.InputDevice disconnectedDevice)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1B1C4AC", Offset = "0x1B1C4AC", VA = "0x1B1C4AC", Slot = "19")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1B1C81C", Offset = "0x1B1C81C", VA = "0x1B1C81C", Slot = "20")]
	protected override bool VerifyActiveInput(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x1B1C9E4", Offset = "0x1B1C9E4", VA = "0x1B1C9E4", Slot = "21")]
	public override Vector3 GetLocalControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1B1CB10", Offset = "0x1B1CB10", VA = "0x1B1CB10", Slot = "22")]
	public override Quaternion GetLocalControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1B1CC3C", Offset = "0x1B1CC3C", VA = "0x1B1CC3C", Slot = "23")]
	public override Vector3 GetLocalControllerVelocity(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1B1CCD8", Offset = "0x1B1CCD8", VA = "0x1B1CCD8", Slot = "24")]
	public override Vector3 GetLocalControllerAngularVelocity(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1B1CD74", Offset = "0x1B1CD74", VA = "0x1B1CD74", Slot = "25")]
	public override bool GetPrimary(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1B1CE20", Offset = "0x1B1CE20", VA = "0x1B1CE20", Slot = "26")]
	public override bool GetSecondary(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x1B1CECC", Offset = "0x1B1CECC", VA = "0x1B1CECC", Slot = "27")]
	public override float GetTrigger(Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1B1CF94", Offset = "0x1B1CF94", VA = "0x1B1CF94", Slot = "28")]
	public override float GetGrabber(Hand hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x1B1D080", Offset = "0x1B1D080", VA = "0x1B1D080", Slot = "30")]
	public override Vector2 GetRightThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x1B1D130", Offset = "0x1B1D130", VA = "0x1B1D130", Slot = "31")]
	public override Vector2 GetLeftThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x1B1D1E0", Offset = "0x1B1D1E0", VA = "0x1B1D1E0", Slot = "32")]
	public override Vector2 GetActiveThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1B1D29C", Offset = "0x1B1D29C", VA = "0x1B1D29C", Slot = "33")]
	protected override void VerifyThumbstick()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1B1D420", Offset = "0x1B1D420", VA = "0x1B1D420", Slot = "34")]
	protected override ControllerType CheckControllerType()
	{
		return default(ControllerType);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1B19378", Offset = "0x1B19378", VA = "0x1B19378")]
	protected InputControllerUnityXR()
	{
	}
}
[Token(Token = "0x2000206")]
public abstract class LeaderboardController : IController<LeaderboardController>
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool IsSendingScore;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool IsLocal;

	[Token(Token = "0x6000DD2")]
	public abstract Leaderboard InstantiateLeaderboard(Scenario scenario, bool destroyOnResultFound = false);

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x1B47584", Offset = "0x1B47584", VA = "0x1B47584")]
	public void AddScore(Scenario scenario, CoasterType coasterType, float score, string extraData, bool isOriginal, bool isOnMultiplayer)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x1B477C4", Offset = "0x1B477C4", VA = "0x1B477C4")]
	protected LeaderboardController()
	{
	}
}
[Token(Token = "0x2000207")]
public class LeaderboardControllerLocal : LeaderboardController
{
	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x1B4780C", Offset = "0x1B4780C", VA = "0x1B4780C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1B47818", Offset = "0x1B47818", VA = "0x1B47818", Slot = "6")]
	public override Leaderboard InstantiateLeaderboard(Scenario scenario, bool destroyOnResultFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1B478A4", Offset = "0x1B478A4", VA = "0x1B478A4")]
	public LeaderboardControllerLocal()
	{
	}
}
[Token(Token = "0x2000208")]
public class LeaderboardControllerPico : LeaderboardController
{
	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1B478A8", Offset = "0x1B478A8", VA = "0x1B478A8", Slot = "6")]
	public override Leaderboard InstantiateLeaderboard(Scenario scenario, bool destroyOnResultFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1B47934", Offset = "0x1B47934", VA = "0x1B47934")]
	public LeaderboardControllerPico()
	{
	}
}
[Token(Token = "0x2000209")]
public abstract class Leaderboard : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x400111D")]
		TOP,
		[Token(Token = "0x400111E")]
		CENTERED_ON_PLAYER
	}

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Scenario CurrentScenario;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected uint MaxUsers;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool OnlyFriends;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected bool IsOriginal;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LeaderboardStartAt StartAt;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected CoasterType CoasterType;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool IsMultiplayer;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool destroyOnResultsFound;

	[Token(Token = "0x17000155")]
	protected string CurrentLeaderboardName
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1B47938", Offset = "0x1B47938", VA = "0x1B47938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	protected int CurrentLeaderboardNumberID
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x1B479E8", Offset = "0x1B479E8", VA = "0x1B479E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<SortedDictionary<int, LeaderboardItem>> OnResultsFound
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x1B47A7C", Offset = "0x1B47A7C", VA = "0x1B47A7C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1B47B2C", Offset = "0x1B47B2C", VA = "0x1B47B2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DDE")]
	public abstract void Construct(Scenario scenario, bool destroyOnResultsFound);

	[Token(Token = "0x6000DDF")]
	public abstract void LoadLeaderboard(uint maxUsers, bool onlyFriends, CoasterType coasterType, bool isOriginal, LeaderboardStartAt startAt, bool isMultiplayer);

	[Token(Token = "0x6000DE0")]
	public abstract void SendScoreShooter(bool won, long score, B4TGames.MenuObjects.Weapon weaponUsed, bool isOriginal);

	[Token(Token = "0x6000DE1")]
	public abstract void SendScoreShooterMultiplayer(bool won, long score, string multiplayerExtraData, bool isOriginal);

	[Token(Token = "0x6000DE2")]
	public abstract void SendScoreRace(bool won, long score, B4TGames.MenuObjects.Cart cartUsed, bool isOriginal);

	[Token(Token = "0x6000DE3")]
	public abstract void SendScoreRaceMultiplayer(bool won, long score, string multiplayerExtraData);

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1B47BDC", Offset = "0x1B47BDC", VA = "0x1B47BDC")]
	public void ResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x1B47D00", Offset = "0x1B47D00", VA = "0x1B47D00")]
	protected Leaderboard()
	{
	}
}
[Token(Token = "0x200020B")]
public class LeaderboardItem
{
	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string UserID;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint Rank;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public long Score;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string UserImage;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D Texture2D;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ExtraData;

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1B47D08", Offset = "0x1B47D08", VA = "0x1B47D08")]
	public LeaderboardItem()
	{
	}
}
[Token(Token = "0x200020C")]
public class LeaderboardLocal : Leaderboard
{
	[Token(Token = "0x200020D")]
	[CompilerGenerated]
	private sealed class <SendResultsWithDelay>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardLocal <>4__this;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SortedDictionary<int, LeaderboardItem> items;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x1B48B8C", Offset = "0x1B48B8C", VA = "0x1B48B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x1B48BD4", Offset = "0x1B48BD4", VA = "0x1B48BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1B48154", Offset = "0x1B48154", VA = "0x1B48154")]
		[DebuggerHidden]
		public <SendResultsWithDelay>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1B48A9C", Offset = "0x1B48A9C", VA = "0x1B48A9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1B48AA0", Offset = "0x1B48AA0", VA = "0x1B48AA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x1B48B94", Offset = "0x1B48B94", VA = "0x1B48B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MAX_POSITIONS;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ITEM_USED_SKU;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string SAVED_DATE;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x1B47D10", Offset = "0x1B47D10", VA = "0x1B47D10", Slot = "4")]
	public override void Construct(Scenario scenario, bool destroyOnResultsFound)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1B47D3C", Offset = "0x1B47D3C", VA = "0x1B47D3C", Slot = "5")]
	public override void LoadLeaderboard(uint maxUsers, bool onlyFriends, CoasterType coasterType, bool isOriginal, LeaderboardStartAt startAt, bool isMultiplayer)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1B480C4", Offset = "0x1B480C4", VA = "0x1B480C4")]
	[IteratorStateMachine(typeof(<SendResultsWithDelay>d__5))]
	private IEnumerator SendResultsWithDelay(SortedDictionary<int, LeaderboardItem> items)
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1B4817C", Offset = "0x1B4817C", VA = "0x1B4817C", Slot = "8")]
	public override void SendScoreRace(bool won, long score, B4TGames.MenuObjects.Cart cartUsed, bool isOriginal)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1B488E8", Offset = "0x1B488E8", VA = "0x1B488E8", Slot = "9")]
	public override void SendScoreRaceMultiplayer(bool won, long score, string multiplayerExtraData)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1B48900", Offset = "0x1B48900", VA = "0x1B48900", Slot = "6")]
	public override void SendScoreShooter(bool won, long score, B4TGames.MenuObjects.Weapon weaponUsed, bool isOriginal)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x1B489E0", Offset = "0x1B489E0", VA = "0x1B489E0", Slot = "7")]
	public override void SendScoreShooterMultiplayer(bool won, long score, string multiplayerExtraData, bool isOriginal)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x1B481A8", Offset = "0x1B481A8", VA = "0x1B481A8")]
	private void SendScore(bool won, long score, string itemUsed)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x1B47E34", Offset = "0x1B47E34", VA = "0x1B47E34")]
	private SortedDictionary<int, LeaderboardItem> GetPositions(string leaderboardID, int maxPositions)
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x1B489FC", Offset = "0x1B489FC", VA = "0x1B489FC")]
	public LeaderboardLocal()
	{
	}
}
[Token(Token = "0x200020F")]
public class LeaderboardPico : Leaderboard
{
	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SortedDictionary<int, LeaderboardEntry> results;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool foundLocalUser;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x1B48CDC", Offset = "0x1B48CDC", VA = "0x1B48CDC", Slot = "4")]
	public override void Construct(Scenario scenario, bool destroyOnResultsFound)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x1B48D08", Offset = "0x1B48D08", VA = "0x1B48D08", Slot = "5")]
	public override void LoadLeaderboard(uint maxUsers, bool onlyFriends, CoasterType coasterType, bool isOriginal, LeaderboardStartAt startAt, bool isMultiplayer)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x1B48E70", Offset = "0x1B48E70", VA = "0x1B48E70")]
	private void LeaderboardResultsFound(Message<LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x1B491D8", Offset = "0x1B491D8", VA = "0x1B491D8")]
	private SortedDictionary<int, LeaderboardItem> TransformList(SortedDictionary<int, LeaderboardEntry> leaderboard)
	{
		return null;
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x1B494DC", Offset = "0x1B494DC", VA = "0x1B494DC", Slot = "8")]
	public override void SendScoreRace(bool won, long score, B4TGames.MenuObjects.Cart cartUsed, bool isOriginal)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x1B496B4", Offset = "0x1B496B4", VA = "0x1B496B4", Slot = "9")]
	public override void SendScoreRaceMultiplayer(bool won, long score, string multiplayerExtraData)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x1B496CC", Offset = "0x1B496CC", VA = "0x1B496CC", Slot = "6")]
	public override void SendScoreShooter(bool won, long score, B4TGames.MenuObjects.Weapon weaponUsed, bool isOriginal)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x1B496FC", Offset = "0x1B496FC", VA = "0x1B496FC", Slot = "7")]
	public override void SendScoreShooterMultiplayer(bool won, long score, string multiplayerExtraData, bool isOriginal)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x1B49508", Offset = "0x1B49508", VA = "0x1B49508")]
	private void SendScore(bool won, long score, string extraData)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x1B49718", Offset = "0x1B49718", VA = "0x1B49718")]
	private void SendScoreCallback(Message<bool> message)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x1B49A24", Offset = "0x1B49A24", VA = "0x1B49A24")]
	public LeaderboardPico()
	{
	}
}
[Token(Token = "0x2000210")]
public enum LeaderboardType
{
	[Token(Token = "0x4001133")]
	RACE_GLOBAL,
	[Token(Token = "0x4001134")]
	RACE_ORIGINAL,
	[Token(Token = "0x4001135")]
	RACE_MULTIPLAYER,
	[Token(Token = "0x4001136")]
	SHOOTER_GLOBAL,
	[Token(Token = "0x4001137")]
	SHOOTER_ORIGINAL,
	[Token(Token = "0x4001138")]
	SHOOTER_MULTIPLAYER
}
[Token(Token = "0x2000211")]
public abstract class MatchmakingController : IController<MatchmakingController>
{
	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SafetyEvent OnPlayerEnqued;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnPlayerJoinningRoom;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SafetyEvent OnPlayerRoomJoinned;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x1B49A2C", Offset = "0x1B49A2C", VA = "0x1B49A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E08")]
	public abstract void SetCallbacks();

	[Token(Token = "0x6000E09")]
	public abstract void EnterMatchmaking();

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1B49AE4", Offset = "0x1B49AE4", VA = "0x1B49AE4")]
	protected void PlayerEnqued()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x1B49AF8", Offset = "0x1B49AF8", VA = "0x1B49AF8")]
	protected void PlayerJoinningRoom()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1B49B0C", Offset = "0x1B49B0C", VA = "0x1B49B0C")]
	protected void PlayerRoomJoinned()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1B49B20", Offset = "0x1B49B20", VA = "0x1B49B20")]
	protected MatchmakingController()
	{
	}
}
[Token(Token = "0x2000212")]
public class MatchmakingControllerPhoton : MatchmakingController
{
	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <EnterMatchmakingCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchmakingControllerPhoton <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0x1B49E54", Offset = "0x1B49E54", VA = "0x1B49E54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0x1B49E9C", Offset = "0x1B49E9C", VA = "0x1B49E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1B49C50", Offset = "0x1B49C50", VA = "0x1B49C50")]
		[DebuggerHidden]
		public <EnterMatchmakingCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1B49C80", Offset = "0x1B49C80", VA = "0x1B49C80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1B49C84", Offset = "0x1B49C84", VA = "0x1B49C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1B49E5C", Offset = "0x1B49E5C", VA = "0x1B49E5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x17000159")]
	private PhotonPlayer photonPlayer
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x1B49B68", Offset = "0x1B49B68", VA = "0x1B49B68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1B49BBC", Offset = "0x1B49BBC", VA = "0x1B49BBC", Slot = "7")]
	public override void EnterMatchmaking()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1B49BDC", Offset = "0x1B49BDC", VA = "0x1B49BDC")]
	[IteratorStateMachine(typeof(<EnterMatchmakingCoroutine>d__3))]
	private IEnumerator EnterMatchmakingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1B49C78", Offset = "0x1B49C78", VA = "0x1B49C78", Slot = "6")]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x1B49C7C", Offset = "0x1B49C7C", VA = "0x1B49C7C")]
	public MatchmakingControllerPhoton()
	{
	}
}
[Token(Token = "0x2000214")]
public abstract class MultiplayerMessageController : IController<MultiplayerMessageController>
{
	[Token(Token = "0x2000215")]
	protected enum MessageType : byte
	{
		[Token(Token = "0x400115A")]
		Update = 1,
		[Token(Token = "0x400115B")]
		Start,
		[Token(Token = "0x400115C")]
		StarReceived,
		[Token(Token = "0x400115D")]
		SelfieStickFront,
		[Token(Token = "0x400115E")]
		SelfieStickHide,
		[Token(Token = "0x400115F")]
		Pause,
		[Token(Token = "0x4001160")]
		Unpause,
		[Token(Token = "0x4001161")]
		PlayerState,
		[Token(Token = "0x4001162")]
		AvatarUpdate,
		[Token(Token = "0x4001163")]
		RaceVictory,
		[Token(Token = "0x4001164")]
		TargetSpawnSpoint,
		[Token(Token = "0x4001165")]
		Shoot,
		[Token(Token = "0x4001166")]
		SlowMotion,
		[Token(Token = "0x4001167")]
		ShootAnimation,
		[Token(Token = "0x4001168")]
		PontuationUpdate,
		[Token(Token = "0x4001169")]
		RemotePlayerCheckpoint,
		[Token(Token = "0x400116A")]
		FinalTime,
		[Token(Token = "0x400116B")]
		FinalTimeReceived,
		[Token(Token = "0x400116C")]
		Version,
		[Token(Token = "0x400116D")]
		TargetHitFeedback,
		[Token(Token = "0x400116E")]
		JumpTargetRewardFeedback,
		[Token(Token = "0x400116F")]
		AvailableRollerCoasters,
		[Token(Token = "0x4001170")]
		SafetyBar,
		[Token(Token = "0x4001171")]
		AvatarRemoteRacePosition,
		[Token(Token = "0x4001172")]
		AvatarRemotePositionRotation,
		[Token(Token = "0x4001173")]
		RemoteCrashed,
		[Token(Token = "0x4001174")]
		ReloadAvatar,
		[Token(Token = "0x4001175")]
		SelfieStickSelfie,
		[Token(Token = "0x4001176")]
		PlayerSeat,
		[Token(Token = "0x4001177")]
		KickUser,
		[Token(Token = "0x4001178")]
		LobbyAnimation,
		[Token(Token = "0x4001179")]
		SoccerBall,
		[Token(Token = "0x400117A")]
		SoccerBallInitialPosition,
		[Token(Token = "0x400117B")]
		TakePicture,
		[Token(Token = "0x400117C")]
		SnowballCreation,
		[Token(Token = "0x400117D")]
		SnowballThrow,
		[Token(Token = "0x400117E")]
		Default_Lobby_Hologram
	}

	[Token(Token = "0x400113F")]
	protected const byte GENERAL_MESSAGE_SIZE = 9;

	[Token(Token = "0x4001140")]
	protected const byte SELFIE_STICK_MESSAGE_SIZE = 2;

	[Token(Token = "0x4001141")]
	protected const byte PLAYER_STATE_MESSAGE_SIZE = 21;

	[Token(Token = "0x4001142")]
	protected const byte RACE_VICTORY_MESSAGE_SIZE = 5;

	[Token(Token = "0x4001143")]
	protected const byte TARGET_SPAWN_POINT_MESSAGE_SIZE = 13;

	[Token(Token = "0x4001144")]
	protected const byte SHOOT_MESSAGE_SIZE = 45;

	[Token(Token = "0x4001145")]
	protected const byte SLOW_MOTION_SIZE = 2;

	[Token(Token = "0x4001146")]
	protected const byte SHOOT_ANIMATION_MESSAGE_SIZE = 5;

	[Token(Token = "0x4001147")]
	protected const byte PONTUATION_UPDATE_MESSAGE_SIZE = 25;

	[Token(Token = "0x4001148")]
	protected const byte PLAYER_CHECKPOINT_MESSAGE_SIZE = 5;

	[Token(Token = "0x4001149")]
	protected const byte FINAL_TIME_MESSAGE_SIZE = 9;

	[Token(Token = "0x400114A")]
	protected const byte VERSION_MESSAGE_SIZE = 9;

	[Token(Token = "0x400114B")]
	protected const byte TARGET_HIT_FEEDBACK_MESSAGE_SIZE = 17;

	[Token(Token = "0x400114C")]
	protected const byte JUMP_TARGET_FEEDBACK_MESSAGE_SIZE = 17;

	[Token(Token = "0x400114D")]
	protected const byte SAFETY_BAR_MESSAGE_SIZE = 17;

	[Token(Token = "0x400114E")]
	protected const byte POSITION_AND_ROTATION_MESSAGE_SIZE = 29;

	[Token(Token = "0x400114F")]
	protected const byte REMOTE_HAND_POSITION_AND_ROTATION_MESSAGE_SIZE = 85;

	[Token(Token = "0x4001150")]
	protected const byte CHANGE_SEAT_MESSAGE_SIZE = 37;

	[Token(Token = "0x4001151")]
	protected const byte KICK_USER_MESSAGE_SIZE = 9;

	[Token(Token = "0x4001152")]
	protected const byte RELOAD_REMOTE_AVATAR_MESSAGE_SIZE = 5;

	[Token(Token = "0x4001153")]
	protected const byte SOCCER_BALL_MESSAGE_SIZE = 17;

	[Token(Token = "0x4001154")]
	protected const byte SOCCER_BALL_INITIAL_POSITION_MESSAGE_SIZE = 17;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SafetyEvent OnPlayerFullConnectedWithSomeone;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnPlayerConnectionClosed;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int totalSend;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int totalReceived;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1B49EA4", Offset = "0x1B49EA4", VA = "0x1B49EA4")]
	public bool IsMessageReliable(byte messageCode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1A")]
	public abstract void SetCallbacks();

	[Token(Token = "0x6000E1B")]
	protected abstract void SendMessage(MessageType messageType, byte[] content);

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1B49ED0", Offset = "0x1B49ED0", VA = "0x1B49ED0")]
	public void SendShowSelfieStickFrontMessage(bool isRightHand)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1B49EFC", Offset = "0x1B49EFC", VA = "0x1B49EFC")]
	protected byte[] CreateShowSelfieStickFrontBuffer(bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1B4A000", Offset = "0x1B4A000", VA = "0x1B4A000")]
	public void SendShowSelfieStickSelfieMessage(bool isRightHand)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1B4A02C", Offset = "0x1B4A02C", VA = "0x1B4A02C")]
	protected byte[] CreateShowSelfieStickSelfieBuffer(bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1B4A0F4", Offset = "0x1B4A0F4", VA = "0x1B4A0F4")]
	public void SendHideSelfieStickMessage(bool isRightHand)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1B4A120", Offset = "0x1B4A120", VA = "0x1B4A120")]
	protected byte[] CreateHideSelfieStickBuffer(bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1B4A1E8", Offset = "0x1B4A1E8", VA = "0x1B4A1E8")]
	public void ReadShowSelfieStickFrontMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1B4A314", Offset = "0x1B4A314", VA = "0x1B4A314")]
	public void ReadShowSelfieStickSelfieMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1B4A400", Offset = "0x1B4A400", VA = "0x1B4A400")]
	public void ReadHideSelfieStickMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1B4A4E8", Offset = "0x1B4A4E8", VA = "0x1B4A4E8")]
	public void SendTakePictureMessage(bool isRightHand)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1B4A514", Offset = "0x1B4A514", VA = "0x1B4A514")]
	protected byte[] CreateTakePictureBuffer(bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1B4A5DC", Offset = "0x1B4A5DC", VA = "0x1B4A5DC")]
	public void ReadTakePictureMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1B4A620", Offset = "0x1B4A620", VA = "0x1B4A620")]
	public void SendSnowballCreationMessage(bool isRightHand)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1B4A64C", Offset = "0x1B4A64C", VA = "0x1B4A64C")]
	protected byte[] CreateSnowballCreationBuffer(bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1B4A758", Offset = "0x1B4A758", VA = "0x1B4A758")]
	public void ReadSnowballCreationMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1B4A868", Offset = "0x1B4A868", VA = "0x1B4A868")]
	public void SendSnowballThrowMessage(Vector3 velocity, Vector3 angularVelocity, bool isRightHand)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1B4A894", Offset = "0x1B4A894", VA = "0x1B4A894")]
	protected byte[] CreateSnowballThrowBuffer(Vector3 velocity, Vector3 angularVelocity, bool isRightHand)
	{
		return null;
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1B4AAC8", Offset = "0x1B4AAC8", VA = "0x1B4AAC8")]
	public void ReadSnowballThrowMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1B4ACD8", Offset = "0x1B4ACD8", VA = "0x1B4ACD8")]
	public void SendDefaultLobbyHologramCreationMessage(uint hologramIndex)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1B4AD00", Offset = "0x1B4AD00", VA = "0x1B4AD00")]
	protected byte[] CreateDefaultLobbyHologramBuffer(uint hologramIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1B4AE9C", Offset = "0x1B4AE9C", VA = "0x1B4AE9C")]
	public void ReadDefaultLobbyHologramMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1B4B078", Offset = "0x1B4B078", VA = "0x1B4B078")]
	public void SendChangeSeatsMessage()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1B4B0A0", Offset = "0x1B4B0A0", VA = "0x1B4B0A0")]
	protected byte[] CreateChangeSeatsBuffer()
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x1B4B350", Offset = "0x1B4B350", VA = "0x1B4B350")]
	public void ReadChangeSeatsMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1B4B5F4", Offset = "0x1B4B5F4", VA = "0x1B4B5F4")]
	public void SendPauseMessage()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x1B4B6FC", Offset = "0x1B4B6FC", VA = "0x1B4B6FC")]
	public void SendUnPauseMessage()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x1B4B7D8", Offset = "0x1B4B7D8", VA = "0x1B4B7D8")]
	public void ReadPauseMessage(RemotePlayer remote)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1B4B93C", Offset = "0x1B4B93C", VA = "0x1B4B93C")]
	private void Message_OnDisconnect_Clicked(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1B4B9A8", Offset = "0x1B4B9A8", VA = "0x1B4B9A8")]
	public void ReadUnPauseMessage()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x1B4BA48", Offset = "0x1B4BA48", VA = "0x1B4BA48")]
	public void SendRaceVictory(float time)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x1B4BA70", Offset = "0x1B4BA70", VA = "0x1B4BA70")]
	protected byte[] CreateRaceVictoryBuffer(float time)
	{
		return null;
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x1B4BBB4", Offset = "0x1B4BBB4", VA = "0x1B4BBB4")]
	public void ReadRaceVictory(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1B4BCB8", Offset = "0x1B4BCB8", VA = "0x1B4BCB8")]
	public void SendTargetSpawnPoint(int targetZoneIndex, int spawnPoint, int chosenTarget)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x1B4BCE0", Offset = "0x1B4BCE0", VA = "0x1B4BCE0")]
	protected byte[] CreateTargetSpawnPointBuffer(int targetZoneIndex, int spawnPoint, int chosenTarget)
	{
		return null;
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1B4BDA4", Offset = "0x1B4BDA4", VA = "0x1B4BDA4")]
	public void ReadTargetSpawnPoint(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1B4BEA8", Offset = "0x1B4BEA8", VA = "0x1B4BEA8")]
	public void SendShoot(InputController.Hand hand, Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x1B4BEE8", Offset = "0x1B4BEE8", VA = "0x1B4BEE8")]
	protected byte[] CreateShootBuffer(InputController.Hand hand, Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos)
	{
		return null;
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1B4C3B4", Offset = "0x1B4C3B4", VA = "0x1B4C3B4")]
	protected void ReadShoot(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1B4C8C4", Offset = "0x1B4C8C4", VA = "0x1B4C8C4")]
	public void SendSlowMotion(bool isSlowMotion)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x1B4C8F0", Offset = "0x1B4C8F0", VA = "0x1B4C8F0")]
	protected byte[] CreateSlowMotionBuffer(bool isSlowMotion)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x1B4C984", Offset = "0x1B4C984", VA = "0x1B4C984")]
	protected void ReadSlowMotion(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x1B4CA54", Offset = "0x1B4CA54", VA = "0x1B4CA54")]
	public void SendShootAnimation(InputController.Hand hand)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1B4CA7C", Offset = "0x1B4CA7C", VA = "0x1B4CA7C")]
	protected byte[] CreateShootAnimationBuffer(InputController.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1B4CB10", Offset = "0x1B4CB10", VA = "0x1B4CB10")]
	protected void ReadShootAnimation(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x1B4CC4C", Offset = "0x1B4CC4C", VA = "0x1B4CC4C")]
	public void SendPontuationUpdate(float score, int maxHitsInARow, int targetsHitted, int rewardsHits, int shotsMissed, int penaltiesHits)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x1B4CC74", Offset = "0x1B4CC74", VA = "0x1B4CC74")]
	protected byte[] CreatePontuationUpdateBuffer(float score, int maxHitsInARow, int targetsHitted, int rewardsHits, int shotsMissed, int penaltiesHits)
	{
		return null;
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x1B4CD7C", Offset = "0x1B4CD7C", VA = "0x1B4CD7C")]
	public void ReadPontuationUpdate(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1B4CED4", Offset = "0x1B4CED4", VA = "0x1B4CED4")]
	public void SendPlayerCheckpoint(int index)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x1B4CEFC", Offset = "0x1B4CEFC", VA = "0x1B4CEFC")]
	protected byte[] CreatePlayerCheckpointBuffer(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x1B4CF90", Offset = "0x1B4CF90", VA = "0x1B4CF90")]
	public void ReadPlayerCheckpoint(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1B4D0AC", Offset = "0x1B4D0AC", VA = "0x1B4D0AC")]
	public void SendPlayerFinalTime(float totalRideTime, float totalGameTime)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1B4D0D4", Offset = "0x1B4D0D4", VA = "0x1B4D0D4")]
	protected byte[] CreatePlayerFinalTimeBuffer(float totalRideTime, float totalGameTime)
	{
		return null;
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1B4D17C", Offset = "0x1B4D17C", VA = "0x1B4D17C")]
	public void ReadPlayerFinalTime(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1B4D27C", Offset = "0x1B4D27C", VA = "0x1B4D27C")]
	public void SendPlayerFinalTimeReceived(bool received)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x1B4D2A8", Offset = "0x1B4D2A8", VA = "0x1B4D2A8")]
	protected byte[] CreatePlayerFinalTimeReceivedBuffer(bool received)
	{
		return null;
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x1B4D33C", Offset = "0x1B4D33C", VA = "0x1B4D33C")]
	public void ReadPlayerFinalTimeReceived(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x1B4D3E0", Offset = "0x1B4D3E0", VA = "0x1B4D3E0")]
	public void SendTargetHitFeedback(float score, Vector3 closestPoint)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1B4D408", Offset = "0x1B4D408", VA = "0x1B4D408")]
	protected byte[] CreateTargetHitFeedbackBuffer(float score, Vector3 closestPoint)
	{
		return null;
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1B4D4E0", Offset = "0x1B4D4E0", VA = "0x1B4D4E0")]
	public void ReadTargetHitFeedback(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1B4D600", Offset = "0x1B4D600", VA = "0x1B4D600")]
	public void SendJumpTargetRewardFeedback(float score, Vector3 closestPoint)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1B4D628", Offset = "0x1B4D628", VA = "0x1B4D628")]
	protected byte[] CreateJumpTargetRewardFeedbackBuffer(float score, Vector3 closestPoint)
	{
		return null;
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1B4D700", Offset = "0x1B4D700", VA = "0x1B4D700")]
	public void ReadJumpTargetRewardFeedback(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x1B4D820", Offset = "0x1B4D820", VA = "0x1B4D820")]
	public void SendPlayerStateMessage(GameStateEnum playerState, RideType currentRideType, CoasterType currentCoasterType, CartIdType cartType, WeaponType currentWeaponType)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x1B4D848", Offset = "0x1B4D848", VA = "0x1B4D848")]
	protected byte[] CreatePlayerStateBuffer(GameStateEnum playerState, RideType currentRideType, CoasterType currentCoasterType, CartIdType cartType, WeaponType currentWeaponType)
	{
		return null;
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1B4D93C", Offset = "0x1B4D93C", VA = "0x1B4D93C")]
	public void ReadPlayerStateMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1B4DAE0", Offset = "0x1B4DAE0", VA = "0x1B4DAE0")]
	public void SendPlayerAvailableRollerCoastersMessage(byte[] rollerCoasters)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1B4DB08", Offset = "0x1B4DB08", VA = "0x1B4DB08")]
	protected byte[] CreatePlayerAvailableRollerCoastersBuffer(byte[] rollerCoasters)
	{
		return null;
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1B4DC28", Offset = "0x1B4DC28", VA = "0x1B4DC28")]
	public void ReadPlayerAvailableRollerCoastersMessage(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1B4DD60", Offset = "0x1B4DD60", VA = "0x1B4DD60")]
	public void SendSafetyBarRotation(Quaternion localRotation)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x1B4DD88", Offset = "0x1B4DD88", VA = "0x1B4DD88")]
	protected byte[] CreateSafetyBarRotationBuffer(Quaternion localRotation)
	{
		return null;
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1B4DE60", Offset = "0x1B4DE60", VA = "0x1B4DE60")]
	protected void ReadSafetyBarRotation(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x1B4DF28", Offset = "0x1B4DF28", VA = "0x1B4DF28")]
	public void SendAvatarRacePostion(Vector3 avatarPosition, Quaternion avatarRotation)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x1B4DF50", Offset = "0x1B4DF50", VA = "0x1B4DF50")]
	protected byte[] CreateAvatarRacePosition(Vector3 avatarPosition, Quaternion avatarRotation)
	{
		return null;
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x1B4E07C", Offset = "0x1B4E07C", VA = "0x1B4E07C")]
	public void ReadAvatarRacePostion(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x1B4E1A8", Offset = "0x1B4E1A8", VA = "0x1B4E1A8")]
	public void SendPlayerCrashed()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x1B4E1D0", Offset = "0x1B4E1D0", VA = "0x1B4E1D0")]
	protected byte[] CreatePlayerCrashedBuffer()
	{
		return null;
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x1B4E234", Offset = "0x1B4E234", VA = "0x1B4E234")]
	public void ReadPlayerCrashed(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x1B4E2F4", Offset = "0x1B4E2F4", VA = "0x1B4E2F4")]
	public void SendAvatarPostionAndRotation(Vector3 avatarLocalPosition, Quaternion avatarLocalRotation, Vector3 avatarRightHandPosition, Quaternion avatarRightHandRotation, Vector3 avatarLeftHandPosition, Quaternion avatarLeftHandRotation)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1B4E354", Offset = "0x1B4E354", VA = "0x1B4E354")]
	protected byte[] CreateAvatarPostionAndRotationBuffer(Vector3 avatarLocalPosition, Quaternion avatarLocalRotation, Vector3 avatarRightHandPosition, Quaternion avatarRightHandRotation, Vector3 avatarLeftHandPosition, Quaternion avatarLeftHandRotation)
	{
		return null;
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1B4E5CC", Offset = "0x1B4E5CC", VA = "0x1B4E5CC")]
	public void ReadAvatarPostionAndRotation(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1B4E800", Offset = "0x1B4E800", VA = "0x1B4E800")]
	public void SendReloadAvatar(uint presetID)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1B4E828", Offset = "0x1B4E828", VA = "0x1B4E828")]
	protected byte[] CreateReloadAvatarBuffer(uint presetID)
	{
		return null;
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1B4E8BC", Offset = "0x1B4E8BC", VA = "0x1B4E8BC")]
	public void ReadReloadAvatar(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1B4E988", Offset = "0x1B4E988", VA = "0x1B4E988")]
	public void SendKickUser(ulong remoteUserID)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1B4E9B0", Offset = "0x1B4E9B0", VA = "0x1B4E9B0")]
	protected byte[] CreateKickUserBuffer(ulong remoteUserID)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x1B4EA44", Offset = "0x1B4EA44", VA = "0x1B4EA44")]
	public void ReadKickUser(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1B4EAD0", Offset = "0x1B4EAD0", VA = "0x1B4EAD0")]
	public void SendLobbyAnimation(uint cart, int[] companions, int[] animation)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x1B4EAF8", Offset = "0x1B4EAF8", VA = "0x1B4EAF8")]
	protected byte[] CreateLobbyAnimationBuffer(uint cart, int[] companions, int[] animation)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x1B4EC28", Offset = "0x1B4EC28", VA = "0x1B4EC28")]
	public void ReadLobbyAnimation(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x1B4EDBC", Offset = "0x1B4EDBC", VA = "0x1B4EDBC")]
	public void SendSoccerBallAnimation(uint ballID, Vector3 force)
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1B4EDE4", Offset = "0x1B4EDE4", VA = "0x1B4EDE4")]
	protected byte[] CreateSoccerBallAnimationBuffer(uint ballID, Vector3 force)
	{
		return null;
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1B4EF70", Offset = "0x1B4EF70", VA = "0x1B4EF70")]
	public void ReadSoccerBallAnimation(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x1B4F130", Offset = "0x1B4F130", VA = "0x1B4F130")]
	public void SendSoccerBallInitialPosition(uint ballID, Vector3 position)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1B4F1F8", Offset = "0x1B4F1F8", VA = "0x1B4F1F8")]
	protected byte[] CreateSoccerBallInitialPositionBuffer(uint ballID, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1B4F2D0", Offset = "0x1B4F2D0", VA = "0x1B4F2D0")]
	public void ReadSoccerBallInitialPosition(RemotePlayer remote, byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1B4B284", Offset = "0x1B4B284", VA = "0x1B4B284")]
	protected void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1B4B5BC", Offset = "0x1B4B5BC", VA = "0x1B4B5BC")]
	protected byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x1B4AA30", Offset = "0x1B4AA30", VA = "0x1B4AA30")]
	protected void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x1B4AC5C", Offset = "0x1B4AC5C", VA = "0x1B4AC5C")]
	protected float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1B4B2C0", Offset = "0x1B4B2C0", VA = "0x1B4B2C0")]
	protected void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1B4B540", Offset = "0x1B4B540", VA = "0x1B4B540")]
	protected ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1B4AE0C", Offset = "0x1B4AE0C", VA = "0x1B4AE0C")]
	protected void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1B4AFFC", Offset = "0x1B4AFFC", VA = "0x1B4AFFC")]
	protected uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1B49FC4", Offset = "0x1B49FC4", VA = "0x1B49FC4")]
	protected void PackBool(bool value, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1B4A2D4", Offset = "0x1B4A2D4", VA = "0x1B4A2D4")]
	protected bool ReadBool(byte[] buf, ref int offset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1B4F3F0", Offset = "0x1B4F3F0", VA = "0x1B4F3F0")]
	protected MultiplayerMessageController()
	{
	}
}
[Token(Token = "0x2000216")]
public class P2PControllerLocal : MultiplayerMessageController
{
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoomControllerLocal roomControllerLocal;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTimeSendedAliveMessage;

	[Token(Token = "0x1700015C")]
	private RoomControllerLocal RoomControllerLocal
	{
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1B4F438", Offset = "0x1B4F438", VA = "0x1B4F438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1B4F544", Offset = "0x1B4F544", VA = "0x1B4F544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1B4F5D0", Offset = "0x1B4F5D0", VA = "0x1B4F5D0", Slot = "6")]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1B4F660", Offset = "0x1B4F660", VA = "0x1B4F660")]
	public void GetRemotePackets(byte[] receivedBuffer)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1B4F858", Offset = "0x1B4F858", VA = "0x1B4F858")]
	protected NetworkError ErrorHandle(byte error)
	{
		return default(NetworkError);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1B4F5CC", Offset = "0x1B4F5CC", VA = "0x1B4F5CC")]
	public void SendAliveMessage()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x1B4F934", Offset = "0x1B4F934", VA = "0x1B4F934", Slot = "7")]
	protected override void SendMessage(MessageType messageType, byte[] content)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1B4FABC", Offset = "0x1B4FABC", VA = "0x1B4FABC")]
	public P2PControllerLocal()
	{
	}
}
[Token(Token = "0x2000217")]
public class P2PControllerPhoton
{
	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x1B4FAC0", Offset = "0x1B4FAC0", VA = "0x1B4FAC0")]
	public P2PControllerPhoton()
	{
	}
}
[Token(Token = "0x2000218")]
public abstract class RoomController : IController<RoomController>
{
	[Token(Token = "0x2000219")]
	public class MultiplayerInvitation
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong RoomID;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong UserID;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Friend Friend;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool WaitingForAnswer;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Answered;

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1B4FBCC", Offset = "0x1B4FBCC", VA = "0x1B4FBCC")]
		public MultiplayerInvitation()
		{
		}
	}

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool IsLocalMultiplayer;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SafetyEvent OnRoomCreated;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SafetyEvent OnRoomCreateFailed;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SafetyEvent OnJoiningRoomFailed;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SafetyEvent OnRoomPropertiesChanged;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string CurrentRoomName;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool isOwner;

	[Token(Token = "0x1700015D")]
	public virtual string RoomID
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1B4FAC8", Offset = "0x1B4FAC8", VA = "0x1B4FAC8", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	public virtual string OwnerID
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1B4FAD0", Offset = "0x1B4FAD0", VA = "0x1B4FAD0", Slot = "7")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	public virtual string OwnerImagePath
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1B4FAD8", Offset = "0x1B4FAD8", VA = "0x1B4FAD8", Slot = "8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public virtual string OwnerName
	{
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1B4FAE0", Offset = "0x1B4FAE0", VA = "0x1B4FAE0", Slot = "9")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000161")]
	public virtual bool AmIOwner
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x1B4FAE8", Offset = "0x1B4FAE8", VA = "0x1B4FAE8", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x1B4FAF0", Offset = "0x1B4FAF0", VA = "0x1B4FAF0", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000E95")]
	public abstract void SetCallbacks();

	[Token(Token = "0x6000E96")]
	public abstract void RemoveCallbacks();

	[Token(Token = "0x6000E97")]
	public abstract void CreateAndJoinRoom(string roomID = "");

	[Token(Token = "0x6000E98")]
	public abstract void JoinExistingRoom(string roomID);

	[Token(Token = "0x6000E99")]
	public abstract void RemovePlayer(RemotePlayer remotePlayer);

	[Token(Token = "0x6000E9A")]
	public abstract void LeaveRoom();

	[Token(Token = "0x6000E9B")]
	public abstract void SetRoomVisibility(bool isPrivate);

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x1B4FB5C", Offset = "0x1B4FB5C", VA = "0x1B4FB5C")]
	public void RoomCreated()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x1B4FB70", Offset = "0x1B4FB70", VA = "0x1B4FB70")]
	public void RoomPropertiesChanged()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x1B4FB84", Offset = "0x1B4FB84", VA = "0x1B4FB84")]
	protected RoomController()
	{
	}
}
[Token(Token = "0x200021A")]
public class RoomControllerLocal : RoomController
{
	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private P2PControllerLocal p2PControllerLocal;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool Initialized;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int ChannelId;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int HostId;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int CurrentHostPort;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int ConnectionId;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public new int OwnerID;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool amIOwner;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int PORT;

	[Token(Token = "0x17000162")]
	private P2PControllerLocal P2PControllerLocal
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1B4FBD4", Offset = "0x1B4FBD4", VA = "0x1B4FBD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000163")]
	public new bool AmIOwner
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1B4FCE0", Offset = "0x1B4FCE0", VA = "0x1B4FCE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x1B4FCE8", Offset = "0x1B4FCE8", VA = "0x1B4FCE8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1B4FCF4", Offset = "0x1B4FCF4", VA = "0x1B4FCF4", Slot = "12")]
	[Obsolete]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1B4FEB0", Offset = "0x1B4FEB0", VA = "0x1B4FEB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1B5050C", Offset = "0x1B5050C", VA = "0x1B5050C", Slot = "14")]
	public override void CreateAndJoinRoom(string roomID = "")
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1B50510", Offset = "0x1B50510", VA = "0x1B50510", Slot = "15")]
	public override void JoinExistingRoom(string roomID)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1B50430", Offset = "0x1B50430", VA = "0x1B50430")]
	protected NetworkError ErrorHandle(byte error)
	{
		return default(NetworkError);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x1B50870", Offset = "0x1B50870", VA = "0x1B50870", Slot = "16")]
	public override void RemovePlayer(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1B508B0", Offset = "0x1B508B0", VA = "0x1B508B0", Slot = "18")]
	public override void SetRoomVisibility(bool isPrivate)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1B508F0", Offset = "0x1B508F0", VA = "0x1B508F0", Slot = "13")]
	public override void RemoveCallbacks()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1B50930", Offset = "0x1B50930", VA = "0x1B50930", Slot = "17")]
	public override void LeaveRoom()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1B50970", Offset = "0x1B50970", VA = "0x1B50970")]
	public RoomControllerLocal()
	{
	}
}
[Token(Token = "0x200021B")]
public class RoomControllerPhoton : RoomController, IInRoomCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x200021C")]
	[CompilerGenerated]
	private sealed class <CreateAndJoinRoomCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roomID;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomControllerPhoton <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x1B51A58", Offset = "0x1B51A58", VA = "0x1B51A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x1B51AA0", Offset = "0x1B51AA0", VA = "0x1B51AA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x1B50DF4", Offset = "0x1B50DF4", VA = "0x1B50DF4")]
		[DebuggerHidden]
		public <CreateAndJoinRoomCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1B517FC", Offset = "0x1B517FC", VA = "0x1B517FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x1B51800", Offset = "0x1B51800", VA = "0x1B51800", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1B51A60", Offset = "0x1B51A60", VA = "0x1B51A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021D")]
	[CompilerGenerated]
	private sealed class <JoinExistingRoomCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roomID;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomControllerPhoton <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x1B51BC0", Offset = "0x1B51BC0", VA = "0x1B51BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x1B51C08", Offset = "0x1B51C08", VA = "0x1B51C08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1B50ECC", Offset = "0x1B50ECC", VA = "0x1B50ECC")]
		[DebuggerHidden]
		public <JoinExistingRoomCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1B51AA8", Offset = "0x1B51AA8", VA = "0x1B51AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x1B51AAC", Offset = "0x1B51AAC", VA = "0x1B51AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x1B51BC8", Offset = "0x1B51BC8", VA = "0x1B51BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x17000164")]
	private PhotonPlayer currentPlayer
	{
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1B509C0", Offset = "0x1B509C0", VA = "0x1B509C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public override string RoomID
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1B50A14", Offset = "0x1B50A14", VA = "0x1B50A14", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public override string OwnerID
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1B50AC4", Offset = "0x1B50AC4", VA = "0x1B50AC4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000167")]
	public override string OwnerImagePath
	{
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1B50BC8", Offset = "0x1B50BC8", VA = "0x1B50BC8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public override string OwnerName
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1B50C10", Offset = "0x1B50C10", VA = "0x1B50C10", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000169")]
	public override bool AmIOwner
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1B50D14", Offset = "0x1B50D14", VA = "0x1B50D14", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1B50D44", Offset = "0x1B50D44", VA = "0x1B50D44", Slot = "14")]
	public override void CreateAndJoinRoom(string roomID = "")
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1B50D64", Offset = "0x1B50D64", VA = "0x1B50D64")]
	[IteratorStateMachine(typeof(<CreateAndJoinRoomCoroutine>d__13))]
	private IEnumerator CreateAndJoinRoomCoroutine(string roomID)
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1B50E1C", Offset = "0x1B50E1C", VA = "0x1B50E1C", Slot = "15")]
	public override void JoinExistingRoom(string roomID)
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1B50E3C", Offset = "0x1B50E3C", VA = "0x1B50E3C")]
	[IteratorStateMachine(typeof(<JoinExistingRoomCoroutine>d__15))]
	private IEnumerator JoinExistingRoomCoroutine(string roomID)
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x1B50EF4", Offset = "0x1B50EF4", VA = "0x1B50EF4", Slot = "12")]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1B50F18", Offset = "0x1B50F18", VA = "0x1B50F18", Slot = "13")]
	public override void RemoveCallbacks()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x1B50F3C", Offset = "0x1B50F3C", VA = "0x1B50F3C", Slot = "16")]
	public override void RemovePlayer(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1B5112C", Offset = "0x1B5112C", VA = "0x1B5112C", Slot = "19")]
	public void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1B51194", Offset = "0x1B51194", VA = "0x1B51194", Slot = "20")]
	public void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x1B511FC", Offset = "0x1B511FC", VA = "0x1B511FC", Slot = "21")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1B51210", Offset = "0x1B51210", VA = "0x1B51210", Slot = "22")]
	public void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1B51278", Offset = "0x1B51278", VA = "0x1B51278", Slot = "23")]
	public void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1B512E0", Offset = "0x1B512E0", VA = "0x1B512E0", Slot = "24")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1B512E4", Offset = "0x1B512E4", VA = "0x1B512E4", Slot = "25")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1B5136C", Offset = "0x1B5136C", VA = "0x1B5136C", Slot = "26")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1B51454", Offset = "0x1B51454", VA = "0x1B51454", Slot = "27")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1B514E4", Offset = "0x1B514E4", VA = "0x1B514E4", Slot = "28")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1B5162C", Offset = "0x1B5162C", VA = "0x1B5162C", Slot = "29")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x1B51714", Offset = "0x1B51714", VA = "0x1B51714", Slot = "30")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x1B5177C", Offset = "0x1B5177C", VA = "0x1B5177C", Slot = "18")]
	public override void SetRoomVisibility(bool anyoneCanConnect)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x1B517C8", Offset = "0x1B517C8", VA = "0x1B517C8", Slot = "17")]
	public override void LeaveRoom()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x1B517F8", Offset = "0x1B517F8", VA = "0x1B517F8")]
	public RoomControllerPhoton()
	{
	}
}
[Token(Token = "0x200021E")]
public abstract class VoIPController : IController<VoIPController>
{
	[Token(Token = "0x6000ED6")]
	public abstract void SetCallbacks();

	[Token(Token = "0x6000ED7")]
	public abstract void Connect(RemotePlayer remotePlayer);

	[Token(Token = "0x6000ED8")]
	public abstract void Disconnect(RemotePlayer remotePlayer);

	[Token(Token = "0x6000ED9")]
	public abstract void Pause();

	[Token(Token = "0x6000EDA")]
	public abstract void UnPause();

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x1B51C10", Offset = "0x1B51C10", VA = "0x1B51C10")]
	protected VoIPController()
	{
	}
}
[Token(Token = "0x200021F")]
public class VoIPControllerLocal : VoIPController
{
	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <StartMicrophone>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoIPControllerLocal <>4__this;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x1B51F60", Offset = "0x1B51F60", VA = "0x1B51F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x1B51FA8", Offset = "0x1B51FA8", VA = "0x1B51FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1B51CEC", Offset = "0x1B51CEC", VA = "0x1B51CEC")]
		[DebuggerHidden]
		public <StartMicrophone>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1B51E2C", Offset = "0x1B51E2C", VA = "0x1B51E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x1B51E30", Offset = "0x1B51E30", VA = "0x1B51E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x1B51F68", Offset = "0x1B51F68", VA = "0x1B51F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audioSource;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1B51C58", Offset = "0x1B51C58", VA = "0x1B51C58", Slot = "6")]
	public override void SetCallbacks()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1B51C78", Offset = "0x1B51C78", VA = "0x1B51C78")]
	[IteratorStateMachine(typeof(<StartMicrophone>d__2))]
	public IEnumerator StartMicrophone()
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1B51D14", Offset = "0x1B51D14", VA = "0x1B51D14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1B51E18", Offset = "0x1B51E18", VA = "0x1B51E18", Slot = "7")]
	public override void Connect(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x1B51E1C", Offset = "0x1B51E1C", VA = "0x1B51E1C", Slot = "8")]
	public override void Disconnect(RemotePlayer remotePlayer)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x1B51E20", Offset = "0x1B51E20", VA = "0x1B51E20", Slot = "9")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x1B51E24", Offset = "0x1B51E24", VA = "0x1B51E24", Slot = "10")]
	public override void UnPause()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1B51E28", Offset = "0x1B51E28", VA = "0x1B51E28")]
	public VoIPControllerLocal()
	{
	}
}
[Token(Token = "0x2000221")]
public abstract class PlatformController : IController<PlatformController>
{
	[Token(Token = "0x17000170")]
	public abstract bool IsInitialized
	{
		[Token(Token = "0x6000EEA")]
		get;
	}

	[Token(Token = "0x6000EEB")]
	public abstract void InternalAwake();

	[Token(Token = "0x6000EEC")]
	public abstract void InternalStart();

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1B51FB0", Offset = "0x1B51FB0", VA = "0x1B51FB0")]
	protected PlatformController()
	{
	}
}
[Token(Token = "0x2000222")]
public class PlatformControllerArcadeVR : PlatformController
{
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_SpriteAsset TutorialSpriteAssetPico;

	[Token(Token = "0x17000171")]
	public override bool IsInitialized
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1B51FF8", Offset = "0x1B51FF8", VA = "0x1B51FF8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1B52000", Offset = "0x1B52000", VA = "0x1B52000", Slot = "7")]
	public override void InternalAwake()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1B520E8", Offset = "0x1B520E8", VA = "0x1B520E8", Slot = "8")]
	public override void InternalStart()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1B520EC", Offset = "0x1B520EC", VA = "0x1B520EC")]
	public PlatformControllerArcadeVR()
	{
	}
}
[Token(Token = "0x2000223")]
public class PlatformControllerPico : PlatformController
{
	[Token(Token = "0x17000172")]
	public override bool IsInitialized
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1B520F0", Offset = "0x1B520F0", VA = "0x1B520F0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1B52178", Offset = "0x1B52178", VA = "0x1B52178")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1B5217C", Offset = "0x1B5217C", VA = "0x1B5217C", Slot = "7")]
	public override void InternalAwake()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x1B52180", Offset = "0x1B52180", VA = "0x1B52180", Slot = "8")]
	public override void InternalStart()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1B52184", Offset = "0x1B52184", VA = "0x1B52184")]
	public PlatformControllerPico()
	{
	}
}
[Token(Token = "0x2000224")]
public class PSVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x1B52188", Offset = "0x1B52188", VA = "0x1B52188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x1B521AC", Offset = "0x1B521AC", VA = "0x1B521AC")]
	public PSVR_Overlay()
	{
	}
}
[Token(Token = "0x2000225")]
public class Records
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string RideRecordToString;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string CartRecordToString;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string ModeRecordToString;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<RideType, int> RideRecord;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<CartIdType, int> CartRecord;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<CoasterType, int> ModeRecord;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Hits;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Streak;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TotalTime;

	[Token(Token = "0x17000173")]
	public KeyValuePair<RideType, int> FavoriteRide
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1B522DC", Offset = "0x1B522DC", VA = "0x1B522DC")]
		get
		{
			return default(KeyValuePair<RideType, int>);
		}
	}

	[Token(Token = "0x17000174")]
	public KeyValuePair<CartIdType, int> FavoriteCart
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1B525C4", Offset = "0x1B525C4", VA = "0x1B525C4")]
		get
		{
			return default(KeyValuePair<CartIdType, int>);
		}
	}

	[Token(Token = "0x17000175")]
	public KeyValuePair<CoasterType, int> FavoriteMode
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1B528A8", Offset = "0x1B528A8", VA = "0x1B528A8")]
		get
		{
			return default(KeyValuePair<CoasterType, int>);
		}
	}

	[Token(Token = "0x17000176")]
	public int TotalTimesRidden
	{
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1B52AEC", Offset = "0x1B52AEC", VA = "0x1B52AEC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x1B521B4", Offset = "0x1B521B4", VA = "0x1B521B4")]
	public Records()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x1B52520", Offset = "0x1B52520", VA = "0x1B52520")]
	public Scenario GetRide(RideType ride)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x1B52580", Offset = "0x1B52580", VA = "0x1B52580")]
	public Scenario GetFavoriteRide()
	{
		return null;
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x1B52808", Offset = "0x1B52808", VA = "0x1B52808")]
	public B4TGames.MenuObjects.Cart GetCart(CartIdType cart)
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x1B52864", Offset = "0x1B52864", VA = "0x1B52864")]
	public B4TGames.MenuObjects.Cart GetFavoriteCart()
	{
		return null;
	}
}
[Token(Token = "0x2000227")]
public class RecordsController : IController<RecordsController>
{
	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _start;

	[Token(Token = "0x17000177")]
	public Records Records
	{
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1B52EDC", Offset = "0x1B52EDC", VA = "0x1B52EDC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1B52EE4", Offset = "0x1B52EE4", VA = "0x1B52EE4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1B52EEC", Offset = "0x1B52EEC", VA = "0x1B52EEC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1B53A9C", Offset = "0x1B53A9C", VA = "0x1B53A9C")]
	public void AddToRecord(RideType ride, CartIdType cart, CoasterType mode)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1B53D64", Offset = "0x1B53D64", VA = "0x1B53D64")]
	public void AddToRecord(RideType ride, CoasterType mode, int streak, int hits)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1B53FF0", Offset = "0x1B53FF0", VA = "0x1B53FF0")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1B5400C", Offset = "0x1B5400C", VA = "0x1B5400C")]
	public void EndTimer()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x1B5408C", Offset = "0x1B5408C", VA = "0x1B5408C")]
	public RecordsController()
	{
	}
}
[Token(Token = "0x2000228")]
[CreateAssetMenu(fileName = "Data", menuName = "B4T Games/Game Addons Settings", order = 3)]
public class GameAddonsSettings : ScriptableObject, IReplaceMaterials
{
	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly int color1RShaderID;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public readonly int color2GShaderID;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int color3BShaderID;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public readonly int color4AShaderID;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Checkpoints & Side flags Colors")]
	public Color Color1R;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color Color2G;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Color3B;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color Color4A;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite Flag;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite SlowDownFlag;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Space(5f)]
	public Material[] MobileMaterials;

	[Token(Token = "0x17000178")]
	[HideInInspector]
	public Material[] Materials
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1B540D4", Offset = "0x1B540D4", VA = "0x1B540D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1B540DC", Offset = "0x1B540DC", VA = "0x1B540DC")]
	public void Apply(GameObject controller, bool avoidColors = false)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1B5442C", Offset = "0x1B5442C", VA = "0x1B5442C")]
	public GameAddonsSettings()
	{
	}
}
[Token(Token = "0x2000229")]
public class AchievementItem : MonoBehaviour
{
	[Token(Token = "0x200022A")]
	public enum AchievementType
	{
		[Token(Token = "0x40011CB")]
		SIMPLE,
		[Token(Token = "0x40011CC")]
		COUNT
	}

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int InternalID;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string API_NAME;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AchievementType CurrentAchievementType;

	[Token(Token = "0x17000179")]
	public string PlayerPrefKey
	{
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x1B54660", Offset = "0x1B54660", VA = "0x1B54660")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<AchievementType, string> OnChanged
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1B54500", Offset = "0x1B54500", VA = "0x1B54500")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1B545B0", Offset = "0x1B545B0", VA = "0x1B545B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1B546C0", Offset = "0x1B546C0", VA = "0x1B546C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1B546C4", Offset = "0x1B546C4", VA = "0x1B546C4")]
	public bool Config()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1B547E0", Offset = "0x1B547E0", VA = "0x1B547E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1B54AB4", Offset = "0x1B54AB4", VA = "0x1B54AB4")]
	private void SendEvent()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1B54C1C", Offset = "0x1B54C1C", VA = "0x1B54C1C")]
	public AchievementItem()
	{
	}
}
[Token(Token = "0x200022B")]
public enum AchievementType
{
	[Token(Token = "0x40011CE")]
	SIMPLE,
	[Token(Token = "0x40011CF")]
	COUNT
}
[Token(Token = "0x200022C")]
public class AdItem : MonoBehaviour
{
	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Interface;

	[Token(Token = "0x1700017A")]
	public bool IsInteractingWithAd
	{
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1B54C24", Offset = "0x1B54C24", VA = "0x1B54C24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1B54CA8", Offset = "0x1B54CA8", VA = "0x1B54CA8")]
	public AdItem()
	{
	}
}
[Token(Token = "0x200022D")]
public class CameraMouseFollower : MonoBehaviour
{
	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SpeedH;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpeedV;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Smoothness;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1B54CB0", Offset = "0x1B54CB0", VA = "0x1B54CB0")]
	public CameraMouseFollower()
	{
	}
}
[Token(Token = "0x200022E")]
public class CameraPositionFollower : MonoBehaviour
{
	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform tr;

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1B54CC0", Offset = "0x1B54CC0", VA = "0x1B54CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1B54CE4", Offset = "0x1B54CE4", VA = "0x1B54CE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1B54CE8", Offset = "0x1B54CE8", VA = "0x1B54CE8")]
	private void Follow()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x1B54EB0", Offset = "0x1B54EB0", VA = "0x1B54EB0")]
	public CameraPositionFollower()
	{
	}
}
[Token(Token = "0x200022F")]
public class CameraSmoothFollow : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	public enum FollowType
	{
		[Token(Token = "0x40011E2")]
		Both,
		[Token(Token = "0x40011E3")]
		Horizontal,
		[Token(Token = "0x40011E4")]
		Vertical
	}

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FollowType Type;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float height;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lateral;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationDamping;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minimumAngle;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tr;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform guide;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion targetRotation;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float followingDistance;

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1B54EB8", Offset = "0x1B54EB8", VA = "0x1B54EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1B54EDC", Offset = "0x1B54EDC", VA = "0x1B54EDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1B55AE8", Offset = "0x1B55AE8", VA = "0x1B55AE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1B54EE4", Offset = "0x1B54EE4", VA = "0x1B54EE4")]
	private void Follow(float rotationDamping)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1B55B64", Offset = "0x1B55B64", VA = "0x1B55B64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x1B55C2C", Offset = "0x1B55C2C", VA = "0x1B55C2C")]
	public CameraSmoothFollow()
	{
	}
}
[Token(Token = "0x2000231")]
public class CartCollision : IController<CartCollision>
{
	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AlreadyCalled;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrackCart trackCart;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float floorTolerance;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private LayerMask LinecastLayerMask;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform tr;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RaycastHit raycastInfo;

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1B55C40", Offset = "0x1B55C40", VA = "0x1B55C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1B5623C", Offset = "0x1B5623C", VA = "0x1B5623C")]
	private void SceneManager_sceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1B562A8", Offset = "0x1B562A8", VA = "0x1B562A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1B5634C", Offset = "0x1B5634C", VA = "0x1B5634C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1B5653C", Offset = "0x1B5653C", VA = "0x1B5653C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1B56568", Offset = "0x1B56568", VA = "0x1B56568")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1B56378", Offset = "0x1B56378", VA = "0x1B56378")]
	private void Collide(Transform tr)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1B567D4", Offset = "0x1B567D4", VA = "0x1B567D4")]
	public void PlayCollisionSound(AudioSource colliderAudio)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1B568DC", Offset = "0x1B568DC", VA = "0x1B568DC")]
	public CartCollision()
	{
	}
}
[Token(Token = "0x2000232")]
[RequireComponent(typeof(Camera))]
public class ChangeDepthTextureMode : MonoBehaviour
{
	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode DepthTextureMode;

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1B5692C", Offset = "0x1B5692C", VA = "0x1B5692C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1B56988", Offset = "0x1B56988", VA = "0x1B56988")]
	public ChangeDepthTextureMode()
	{
	}
}
[Token(Token = "0x2000233")]
public class CharactersMeshBaker : MonoBehaviour
{
	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] objsToAdd;

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1B56998", Offset = "0x1B56998", VA = "0x1B56998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1B56B3C", Offset = "0x1B56B3C", VA = "0x1B56B3C")]
	public CharactersMeshBaker()
	{
	}
}
[Token(Token = "0x2000234")]
public class CheckpointController : IController<CheckpointController>
{
	[Serializable]
	[Token(Token = "0x2000235")]
	public class Checkpoint
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Location;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public CheckpointEventTrigger EventTrigger;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int Index;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Time;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 CartVelocity;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public Vector3 CartAngularVelocity;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public ZenFulcrum.Track.Track Track;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3 Position;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Quaternion Rotation;

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1B584D0", Offset = "0x1B584D0", VA = "0x1B584D0")]
		public Checkpoint()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[CompilerGenerated]
	private sealed class <InstantiateAddons>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointController <>4__this;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x1B58920", Offset = "0x1B58920", VA = "0x1B58920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x1B58968", Offset = "0x1B58968", VA = "0x1B58968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1B56F68", Offset = "0x1B56F68", VA = "0x1B56F68")]
		[DebuggerHidden]
		public <InstantiateAddons>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1B584D8", Offset = "0x1B584D8", VA = "0x1B584D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1B584DC", Offset = "0x1B584DC", VA = "0x1B584DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x1B58928", Offset = "0x1B58928", VA = "0x1B58928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[CompilerGenerated]
	private sealed class <WaitForEndOfAudio>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x1B58A40", Offset = "0x1B58A40", VA = "0x1B58A40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x1B58A88", Offset = "0x1B58A88", VA = "0x1B58A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x1B577A0", Offset = "0x1B577A0", VA = "0x1B577A0")]
		[DebuggerHidden]
		public <WaitForEndOfAudio>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1B58970", Offset = "0x1B58970", VA = "0x1B58970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1B58974", Offset = "0x1B58974", VA = "0x1B58974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1B58A48", Offset = "0x1B58A48", VA = "0x1B58A48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[CompilerGenerated]
	private sealed class <BlinkHUD>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointController <>4__this;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x1B58C60", Offset = "0x1B58C60", VA = "0x1B58C60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1B58CA8", Offset = "0x1B58CA8", VA = "0x1B58CA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x1B57A60", Offset = "0x1B57A60", VA = "0x1B57A60")]
		[DebuggerHidden]
		public <BlinkHUD>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1B58A90", Offset = "0x1B58A90", VA = "0x1B58A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1B58A94", Offset = "0x1B58A94", VA = "0x1B58A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1B58C68", Offset = "0x1B58C68", VA = "0x1B58C68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <RestartFromLastCheckpointRoutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToWait;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CheckpointController <>4__this;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showCrash;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x1B59054", Offset = "0x1B59054", VA = "0x1B59054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1B5909C", Offset = "0x1B5909C", VA = "0x1B5909C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1B57E58", Offset = "0x1B57E58", VA = "0x1B57E58")]
		[DebuggerHidden]
		public <RestartFromLastCheckpointRoutine>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1B58CB0", Offset = "0x1B58CB0", VA = "0x1B58CB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1B58CB4", Offset = "0x1B58CB4", VA = "0x1B58CB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1B5905C", Offset = "0x1B5905C", VA = "0x1B5905C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SafetyEvent OnCrashed;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Checkpoints")]
	[Space(10f)]
	[Space(5f)]
	public Checkpoint[] Checkpoints;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Triggers [Added Automatically]")]
	[Space(5f)]
	[Space(5f)]
	public List<TriggerOptimization> TriggersOptimization;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<TriggerTimeline> TriggersTimelines;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<TriggerEvents> TriggersEvents;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SmartTrigger> NewEventTriggers;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public TextMeshProUGUI CurrentTimeHUD;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool Finished;

	[Token(Token = "0x40011F7")]
	public const string SCORE_RACE = "SCORE_RACE";

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 velocityScale;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Checkpoint LastCheckpoint;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int hudBlinkTime;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastTime;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine restartFromLastCheckpoint;

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x1B56B44", Offset = "0x1B56B44", VA = "0x1B56B44", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1B56D14", Offset = "0x1B56D14", VA = "0x1B56D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1B56D80", Offset = "0x1B56D80", VA = "0x1B56D80")]
	public void Config()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x1B56EF4", Offset = "0x1B56EF4", VA = "0x1B56EF4")]
	[IteratorStateMachine(typeof(<InstantiateAddons>d__14))]
	private IEnumerator InstantiateAddons()
	{
		return null;
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x1B56EF0", Offset = "0x1B56EF0", VA = "0x1B56EF0")]
	public void StartRace()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x1B56F90", Offset = "0x1B56F90", VA = "0x1B56F90")]
	public void CheckThePoint(Transform tr)
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1B57740", Offset = "0x1B57740", VA = "0x1B57740")]
	[IteratorStateMachine(typeof(<WaitForEndOfAudio>d__18))]
	private IEnumerator WaitForEndOfAudio()
	{
		return null;
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1B577C8", Offset = "0x1B577C8", VA = "0x1B577C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x1B576BC", Offset = "0x1B576BC", VA = "0x1B576BC")]
	[IteratorStateMachine(typeof(<BlinkHUD>d__21))]
	private IEnumerator BlinkHUD(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x1B578BC", Offset = "0x1B578BC", VA = "0x1B578BC")]
	private void UpdateHUD(float time)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1B57A88", Offset = "0x1B57A88", VA = "0x1B57A88")]
	public void Crashed()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1B57C68", Offset = "0x1B57C68", VA = "0x1B57C68")]
	public void CancelCrash()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1B57D60", Offset = "0x1B57D60", VA = "0x1B57D60")]
	public void RestartFromLastCheckpoint(bool showCrash = true)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1B57BD0", Offset = "0x1B57BD0", VA = "0x1B57BD0")]
	[IteratorStateMachine(typeof(<RestartFromLastCheckpointRoutine>d__28))]
	private IEnumerator RestartFromLastCheckpointRoutine(float timeToWait = 1.5f, bool showCrash = true)
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x1B57658", Offset = "0x1B57658", VA = "0x1B57658")]
	private void RestartPlayerTimer()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x1B57E80", Offset = "0x1B57E80", VA = "0x1B57E80")]
	private void RespawnPlayer(Checkpoint lastCheckpoint)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x1B58144", Offset = "0x1B58144", VA = "0x1B58144")]
	private void FixTriggers(Transform player, bool backwards)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1B58448", Offset = "0x1B58448", VA = "0x1B58448")]
	public CheckpointController()
	{
	}
}
[Token(Token = "0x200023A")]
[ExecuteInEditMode]
public class Collectible : MonoBehaviour, ITarget
{
	[Token(Token = "0x200023B")]
	[CompilerGenerated]
	private sealed class <CollectEffectsCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collectible <>4__this;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <particles>5__2;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x1B5A06C", Offset = "0x1B5A06C", VA = "0x1B5A06C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x1B5A0B4", Offset = "0x1B5A0B4", VA = "0x1B5A0B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x1B59B2C", Offset = "0x1B59B2C", VA = "0x1B59B2C")]
		[DebuggerHidden]
		public <CollectEffectsCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x1B59CA4", Offset = "0x1B59CA4", VA = "0x1B59CA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1B59CA8", Offset = "0x1B59CA8", VA = "0x1B59CA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1B5A074", Offset = "0x1B5A074", VA = "0x1B5A074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float colliderRadius;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer spline;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Zero is begining of the Spline and One is the end.")]
	[Range(0f, 1f)]
	public float startPosition;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The speed of the animation")]
	public float followSpeed;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Should it do a loop or a ping-pong animation?")]
	public SplineFollower.Wrap wrapMode;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	[Tooltip("Lower the value smoother the Face will be")]
	public float facingSmooth;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject Icon;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject Polygon;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject FeedbackParticle;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	protected SampleCollection sampleCollection;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	protected SplineSample _result;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	protected Dreamteck.Splines.Spline.Direction _direction;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform tr;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody rb;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool alreadyCollected;

	[Token(Token = "0x17000183")]
	private Transform player
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1B590A4", Offset = "0x1B590A4", VA = "0x1B590A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x1B59148", Offset = "0x1B59148", VA = "0x1B59148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1B593EC", Offset = "0x1B593EC", VA = "0x1B593EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1B59234", Offset = "0x1B59234", VA = "0x1B59234")]
	private void ConfigureRigidbody()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1B594A4", Offset = "0x1B594A4", VA = "0x1B594A4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x1B5981C", Offset = "0x1B5981C", VA = "0x1B5981C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1B5993C", Offset = "0x1B5993C", VA = "0x1B5993C", Slot = "4")]
	public void Hit(Vector3 closestPoint, [Optional] Rigidbody hittedBody)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1B5988C", Offset = "0x1B5988C", VA = "0x1B5988C")]
	protected void Collect()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1B59AB8", Offset = "0x1B59AB8", VA = "0x1B59AB8")]
	[IteratorStateMachine(typeof(<CollectEffectsCoroutine>d__24))]
	private IEnumerator CollectEffectsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1B596FC", Offset = "0x1B596FC", VA = "0x1B596FC")]
	public void Move(float distance)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1B59B54", Offset = "0x1B59B54", VA = "0x1B59B54")]
	public double Travel(double start, float distance, Dreamteck.Splines.Spline.Direction direction, out float moved)
	{
		return default(double);
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1B59BC4", Offset = "0x1B59BC4", VA = "0x1B59BC4")]
	public Collectible()
	{
	}
}
[Token(Token = "0x200023C")]
public class CollectibleGroup : MonoBehaviour
{
	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoasterType Mode;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1B5A0BC", Offset = "0x1B5A0BC", VA = "0x1B5A0BC")]
	public CollectibleGroup()
	{
	}
}
[Token(Token = "0x200023D")]
public class CollectiblesController : IController<CollectiblesController>, IReplaceMaterials
{
	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <LateStart>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollectiblesController <>4__this;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x1B5A9EC", Offset = "0x1B5A9EC", VA = "0x1B5A9EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x1B5AA34", Offset = "0x1B5AA34", VA = "0x1B5AA34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1B5A34C", Offset = "0x1B5A34C", VA = "0x1B5A34C")]
		[DebuggerHidden]
		public <LateStart>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1B5A520", Offset = "0x1B5A520", VA = "0x1B5A520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1B5A524", Offset = "0x1B5A524", VA = "0x1B5A524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1B5A9F4", Offset = "0x1B5A9F4", VA = "0x1B5A9F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string TOTAL;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string COLLECTED;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip RaceCollectedSoundFx;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip ShooterCollectedSoundFx;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject IconPrefab;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BubblePrefab;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RaceCollectedParticlePrefab;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ShooterCollectedParticlePrefab;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material IconMeterial;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(5f)]
	public Material[] BubbleMaterialsMobile;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public TextMeshProUGUI CollectedHUD;

	[Token(Token = "0x17000186")]
	public ulong Collected
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1B5A0C4", Offset = "0x1B5A0C4", VA = "0x1B5A0C4")]
		[CompilerGenerated]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1B5A0CC", Offset = "0x1B5A0CC", VA = "0x1B5A0CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public int Total
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1B5A0D4", Offset = "0x1B5A0D4", VA = "0x1B5A0D4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1B5A0DC", Offset = "0x1B5A0DC", VA = "0x1B5A0DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public CoasterType CurrentCoasterMode
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1B59FAC", Offset = "0x1B59FAC", VA = "0x1B59FAC")]
		get
		{
			return default(CoasterType);
		}
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x1B5A0E4", Offset = "0x1B5A0E4", VA = "0x1B5A0E4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1B5A1C8", Offset = "0x1B5A1C8", VA = "0x1B5A1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x1B5A2D8", Offset = "0x1B5A2D8", VA = "0x1B5A2D8")]
	[IteratorStateMachine(typeof(<LateStart>d__23))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1B59940", Offset = "0x1B59940", VA = "0x1B59940")]
	public void Count()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1B5A374", Offset = "0x1B5A374", VA = "0x1B5A374")]
	public static string GameOverPrefs()
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1B5A43C", Offset = "0x1B5A43C", VA = "0x1B5A43C")]
	public CollectiblesController()
	{
	}
}
[Token(Token = "0x200023F")]
public class ElevatorFixed : MonoBehaviour
{
	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform tr;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion initialRotation;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool visible;

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1B5AA3C", Offset = "0x1B5AA3C", VA = "0x1B5AA3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x1B5AA8C", Offset = "0x1B5AA8C", VA = "0x1B5AA8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x1B5AAC4", Offset = "0x1B5AAC4", VA = "0x1B5AAC4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1B5AAD0", Offset = "0x1B5AAD0", VA = "0x1B5AAD0")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x1B5AAD8", Offset = "0x1B5AAD8", VA = "0x1B5AAD8")]
	public ElevatorFixed()
	{
	}
}
[Token(Token = "0x2000240")]
[RequireComponent(typeof(Camera))]
[ExecuteInEditMode]
public class EnableDepthTexture : MonoBehaviour
{
	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode DepthTextureMode;

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x1B5AAE0", Offset = "0x1B5AAE0", VA = "0x1B5AAE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x1B5AB3C", Offset = "0x1B5AB3C", VA = "0x1B5AB3C")]
	public EnableDepthTexture()
	{
	}
}
[Token(Token = "0x2000241")]
public class HapticsController : IController<HapticsController>
{
	[Token(Token = "0x2000242")]
	[CompilerGenerated]
	private sealed class <UpdateLeftAndRightAmplitudes>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticsCurve;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticsController <>4__this;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool unscaledTime;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <lastKeyTime>5__3;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1B5BC90", Offset = "0x1B5BC90", VA = "0x1B5BC90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1B5BCD8", Offset = "0x1B5BCD8", VA = "0x1B5BCD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1B5B8E0", Offset = "0x1B5B8E0", VA = "0x1B5B8E0")]
		[DebuggerHidden]
		public <UpdateLeftAndRightAmplitudes>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1B5BB20", Offset = "0x1B5BB20", VA = "0x1B5BB20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1B5BB24", Offset = "0x1B5BB24", VA = "0x1B5BB24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1B5BC98", Offset = "0x1B5BC98", VA = "0x1B5BC98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000243")]
	[CompilerGenerated]
	private sealed class <UpdateLeftAmplitudes>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticsCurve;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticsController <>4__this;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool unscaledTime;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <lastKeyTime>5__3;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x1B5BE50", Offset = "0x1B5BE50", VA = "0x1B5BE50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x1B5BE98", Offset = "0x1B5BE98", VA = "0x1B5BE98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x1B5B908", Offset = "0x1B5B908", VA = "0x1B5B908")]
		[DebuggerHidden]
		public <UpdateLeftAmplitudes>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1B5BCE0", Offset = "0x1B5BCE0", VA = "0x1B5BCE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1B5BCE4", Offset = "0x1B5BCE4", VA = "0x1B5BCE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1B5BE58", Offset = "0x1B5BE58", VA = "0x1B5BE58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <UpdateRightAmplitudes>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticsCurve;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticsController <>4__this;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool unscaledTime;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <lastKeyTime>5__3;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x1B5C010", Offset = "0x1B5C010", VA = "0x1B5C010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x1B5C058", Offset = "0x1B5C058", VA = "0x1B5C058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1B5B930", Offset = "0x1B5B930", VA = "0x1B5B930")]
		[DebuggerHidden]
		public <UpdateRightAmplitudes>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1B5BEA0", Offset = "0x1B5BEA0", VA = "0x1B5BEA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1B5BEA4", Offset = "0x1B5BEA4", VA = "0x1B5BEA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1B5C018", Offset = "0x1B5C018", VA = "0x1B5C018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve SpeedHapticsLoop;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve ChainsHapticsLoop;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve SnapToTrackSmoothHapticImpact;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve SnapToTrackHardHapticImpact;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool SpeedVibrates;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve HandSwitchHaptic;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float playerHapticSpeed;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float leftAndRightAmplitude;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float leftAmplitude;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rightAmplitude;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lastLeftAndRightFrame;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int lastLeftFrame;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int lastRightFrame;

	[Token(Token = "0x14000019")]
	public event Action<float> OnReceiveLeftHaptics
	{
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1B5AB4C", Offset = "0x1B5AB4C", VA = "0x1B5AB4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1B5ABFC", Offset = "0x1B5ABFC", VA = "0x1B5ABFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action<float> OnReceiveRightHaptics
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1B5ACAC", Offset = "0x1B5ACAC", VA = "0x1B5ACAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1B5AD5C", Offset = "0x1B5AD5C", VA = "0x1B5AD5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x1B5AE0C", Offset = "0x1B5AE0C", VA = "0x1B5AE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x1B5AF0C", Offset = "0x1B5AF0C", VA = "0x1B5AF0C")]
	private void SceneManager_sceneLoaded(Scene scene, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x1B5AF2C", Offset = "0x1B5AF2C", VA = "0x1B5AF2C")]
	private void SceneManager_sceneUnloaded(Scene scene)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x1B5AF4C", Offset = "0x1B5AF4C", VA = "0x1B5AF4C")]
	public void AddImpactHapticsFeedback(float force)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x1B5AFAC", Offset = "0x1B5AFAC", VA = "0x1B5AFAC")]
	public void AddCurve(AnimationCurve hapticsCurve, HapticsOutputMode mode, bool unscaledTime = false)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x1B5AF88", Offset = "0x1B5AF88", VA = "0x1B5AF88")]
	public void AddLeftAndRightCurve(AnimationCurve curve, bool unscaledTime = false)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x1B5B010", Offset = "0x1B5B010", VA = "0x1B5B010")]
	public void AddLeftCurve(AnimationCurve curve, bool unscaledTime = false)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x1B5B034", Offset = "0x1B5B034", VA = "0x1B5B034")]
	public void AddRightCurve(AnimationCurve curve, bool unscaledTime = false)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x1B5B22C", Offset = "0x1B5B22C", VA = "0x1B5B22C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x1B5B440", Offset = "0x1B5B440", VA = "0x1B5B440")]
	private void ComputePlayerHapticsSpeed()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x1B5B058", Offset = "0x1B5B058", VA = "0x1B5B058")]
	[IteratorStateMachine(typeof(<UpdateLeftAndRightAmplitudes>d__29))]
	private IEnumerator UpdateLeftAndRightAmplitudes(AnimationCurve hapticsCurve, bool unscaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x1B5B0F4", Offset = "0x1B5B0F4", VA = "0x1B5B0F4")]
	[IteratorStateMachine(typeof(<UpdateLeftAmplitudes>d__30))]
	private IEnumerator UpdateLeftAmplitudes(AnimationCurve hapticsCurve, bool unscaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x1B5B190", Offset = "0x1B5B190", VA = "0x1B5B190")]
	[IteratorStateMachine(typeof(<UpdateRightAmplitudes>d__31))]
	private IEnumerator UpdateRightAmplitudes(AnimationCurve hapticsCurve, bool unscaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x1B5B958", Offset = "0x1B5B958", VA = "0x1B5B958")]
	public void EvaluateAmplitude(float amplitude, HapticsOutputMode mode)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x1B5BA64", Offset = "0x1B5BA64", VA = "0x1B5BA64")]
	private void EvaluateAmplitude(float newAmplitude, float prevAmplitude, out float output, int lastFrame)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x1B5BAC0", Offset = "0x1B5BAC0", VA = "0x1B5BAC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x1B5BAC8", Offset = "0x1B5BAC8", VA = "0x1B5BAC8")]
	public HapticsController()
	{
	}
}
[Token(Token = "0x2000245")]
public enum HapticsOutputMode
{
	[Token(Token = "0x4001262")]
	LeftAndRight,
	[Token(Token = "0x4001263")]
	RightOnly,
	[Token(Token = "0x4001264")]
	LeftOnly
}
[Token(Token = "0x2000246")]
public static class HapticsUtils
{
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x1B5C060", Offset = "0x1B5C060", VA = "0x1B5C060")]
	public static AnimationCurve CreateCurveFromAudioClip(AudioClip hapticAudioClip, float keysPerSecond = 15f, bool normalize = true, bool useAverage = false, float smoothWeight = 0f)
	{
		return null;
	}
}
[Token(Token = "0x2000247")]
public class HapticsEmulator : IController<HapticsEmulator>
{
	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x1B5C450", Offset = "0x1B5C450", VA = "0x1B5C450")]
	public HapticsEmulator()
	{
	}
}
[Token(Token = "0x2000248")]
public class InGameAdController : IController<InGameAdController>
{
	[Serializable]
	[Token(Token = "0x2000249")]
	public struct AdReference
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform SpawnPoint;
	}

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AdReference[] AdsReferences;

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x1B5C498", Offset = "0x1B5C498", VA = "0x1B5C498")]
	public void DestroyAds()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x1B5C504", Offset = "0x1B5C504", VA = "0x1B5C504")]
	public InGameAdController()
	{
	}
}
[Token(Token = "0x200024A")]
public class InGameAdLookAt : MonoBehaviour
{
	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Base;

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x1B5C54C", Offset = "0x1B5C54C", VA = "0x1B5C54C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x1B5C550", Offset = "0x1B5C550", VA = "0x1B5C550")]
	private void LookAt()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x1B5C72C", Offset = "0x1B5C72C", VA = "0x1B5C72C")]
	public InGameAdLookAt()
	{
	}
}
[Token(Token = "0x200024B")]
public static class ItemOnScreemAnalyser
{
	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x1B5C734", Offset = "0x1B5C734", VA = "0x1B5C734")]
	public static bool IsItemOnScreen(Camera camera, Vector3 itemPosition, float margin = 0f)
	{
		return default(bool);
	}
}
[Token(Token = "0x200024C")]
[ExecuteAlways]
[RequireComponent(typeof(Light))]
public class LightBlinking : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <UpdateFade>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightBlinking <>4__this;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetValue;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <interval>5__2;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeToGo>5__3;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <alphaInitialValue>5__4;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <alphaActualValue>5__5;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x1B5CF38", Offset = "0x1B5CF38", VA = "0x1B5CF38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x1B5CF80", Offset = "0x1B5CF80", VA = "0x1B5CF80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1B5CBDC", Offset = "0x1B5CBDC", VA = "0x1B5CBDC")]
		[DebuggerHidden]
		public <UpdateFade>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1B5CD28", Offset = "0x1B5CD28", VA = "0x1B5CD28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1B5CD2C", Offset = "0x1B5CD2C", VA = "0x1B5CD2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1B5CF40", Offset = "0x1B5CF40", VA = "0x1B5CF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Light Intensity")]
	[Tooltip("Min Intensity Range")]
	public float minRange;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Max Intensity Range")]
	public float maxRange;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Renderer component with Emissive to control")]
	public Renderer renderer;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This color will be used as base color to animate the emission value")]
	public Color emissionColor;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool runEditor;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Light lightComponent;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFading;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int emissionColorID;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VolumetricLightBeam vlbComponent;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x1B5C850", Offset = "0x1B5C850", VA = "0x1B5C850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x1B5CACC", Offset = "0x1B5CACC", VA = "0x1B5CACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x1B5CB54", Offset = "0x1B5CB54", VA = "0x1B5CB54")]
	[IteratorStateMachine(typeof(<UpdateFade>d__12))]
	private IEnumerator UpdateFade(float fadeTime, float targetValue)
	{
		return null;
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x1B5C9B8", Offset = "0x1B5C9B8", VA = "0x1B5C9B8")]
	private void SetEmissiveColor(float value)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x1B5CC04", Offset = "0x1B5CC04", VA = "0x1B5CC04")]
	private void SetVLB(float value)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x1B5CCBC", Offset = "0x1B5CCBC", VA = "0x1B5CCBC")]
	public LightBlinking()
	{
	}
}
[Token(Token = "0x200024E")]
[RequireComponent(typeof(Light))]
public class LightConfig : MonoBehaviour
{
	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x1B5CF88", Offset = "0x1B5CF88", VA = "0x1B5CF88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1B5CFE4", Offset = "0x1B5CFE4", VA = "0x1B5CFE4")]
	public LightConfig()
	{
	}
}
[Token(Token = "0x200024F")]
public class LightEventTrigger : TriggerOptimization
{
	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <DoActionSlowly>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightEventTrigger <>4__this;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <initialColor>5__2;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <initialIntensity>5__3;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <initialShadowStrength>5__4;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <interval>5__5;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timeToGo>5__6;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x1AF2E9C", Offset = "0x1AF2E9C", VA = "0x1AF2E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x1AF2EE4", Offset = "0x1AF2EE4", VA = "0x1AF2EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1AF2C60", Offset = "0x1AF2C60", VA = "0x1AF2C60")]
		[DebuggerHidden]
		public <DoActionSlowly>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1AF2C88", Offset = "0x1AF2C88", VA = "0x1AF2C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1AF2C8C", Offset = "0x1AF2C8C", VA = "0x1AF2C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1AF2EA4", Offset = "0x1AF2EA4", VA = "0x1AF2EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light Object;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Enabled;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool ChangeColor;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color Color;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool ChangeIntensity;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Intensity;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool ChangeShadowStrength;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ShadowStrength;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float Transition;

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x1B5CFF4", Offset = "0x1B5CFF4", VA = "0x1B5CFF4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1B5D014", Offset = "0x1B5D014", VA = "0x1B5D014", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1B5D128", Offset = "0x1B5D128", VA = "0x1B5D128")]
	[IteratorStateMachine(typeof(<DoActionSlowly>d__11))]
	public IEnumerator DoActionSlowly()
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1B5D19C", Offset = "0x1B5D19C", VA = "0x1B5D19C")]
	public LightEventTrigger()
	{
	}
}
[Token(Token = "0x2000251")]
public class LightningBlink : MonoBehaviour
{
	[Token(Token = "0x2000252")]
	[CompilerGenerated]
	private sealed class <Blink>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightningBlink <>4__this;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <timesToBlink>5__2;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x1AF3498", Offset = "0x1AF3498", VA = "0x1AF3498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x1AF34E0", Offset = "0x1AF34E0", VA = "0x1AF34E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1AF30D8", Offset = "0x1AF30D8", VA = "0x1AF30D8")]
		[DebuggerHidden]
		public <Blink>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1AF32F4", Offset = "0x1AF32F4", VA = "0x1AF32F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1AF32F8", Offset = "0x1AF32F8", VA = "0x1AF32F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1AF34A0", Offset = "0x1AF34A0", VA = "0x1AF34A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000253")]
	[CompilerGenerated]
	private sealed class <UpdateFade>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightningBlink <>4__this;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetValue;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <interval>5__2;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeToGo>5__3;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <alphaInitialValue>5__4;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <churchWindowActualValue>5__5;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x1AF39A4", Offset = "0x1AF39A4", VA = "0x1AF39A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x1AF39EC", Offset = "0x1AF39EC", VA = "0x1AF39EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1AF3188", Offset = "0x1AF3188", VA = "0x1AF3188")]
		[DebuggerHidden]
		public <UpdateFade>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1AF34E8", Offset = "0x1AF34E8", VA = "0x1AF34E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1AF34EC", Offset = "0x1AF34EC", VA = "0x1AF34EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1AF39AC", Offset = "0x1AF39AC", VA = "0x1AF39AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTimeToPlay;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTimeToPlay;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string paramName;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material skybox;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] clips;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material churchWindow;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color fogColor;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color churchWindowInitColor;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audio;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float initExposure;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isFading;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeToPlay;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTimeToplay;

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1AF2EEC", Offset = "0x1AF2EEC", VA = "0x1AF2EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1AF3018", Offset = "0x1AF3018", VA = "0x1AF3018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x1AF3064", Offset = "0x1AF3064", VA = "0x1AF3064")]
	[IteratorStateMachine(typeof(<Blink>d__15))]
	private IEnumerator Blink()
	{
		return null;
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x1AF3100", Offset = "0x1AF3100", VA = "0x1AF3100")]
	[IteratorStateMachine(typeof(<UpdateFade>d__16))]
	private IEnumerator UpdateFade(float fadeTime, float targetValue)
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x1AF31B0", Offset = "0x1AF31B0", VA = "0x1AF31B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x1AF3290", Offset = "0x1AF3290", VA = "0x1AF3290")]
	public LightningBlink()
	{
	}
}
[Token(Token = "0x2000254")]
public class Banner : MonoBehaviour
{
	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsRightCorner;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro DiscountText;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer _spriteRender;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger EventTrigger;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool IsPremium;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool IsDiscord;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[HideInInspector]
	public bool IsScenario;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public RideType RideType;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool IsUsed;

	[Token(Token = "0x17000199")]
	public SpriteRenderer SpriteRender
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1AF39F4", Offset = "0x1AF39F4", VA = "0x1AF39F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x1AF3A9C", Offset = "0x1AF3A9C", VA = "0x1AF3A9C")]
	public void AddEvents()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x1AF3C54", Offset = "0x1AF3C54", VA = "0x1AF3C54")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x1AF3E3C", Offset = "0x1AF3E3C", VA = "0x1AF3E3C")]
	public Banner()
	{
	}
}
[Token(Token = "0x2000255")]
public class ChristmasController : IController<ChristmasController>
{
	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Snowballs;

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x1AF3E48", Offset = "0x1AF3E48", VA = "0x1AF3E48")]
	public ChristmasController()
	{
	}
}
[Token(Token = "0x2000256")]
public class CreditsScreenDoor : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	[CompilerGenerated]
	private sealed class <LoadCreditsCanvas>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsScreenDoor <>4__this;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x1AF4390", Offset = "0x1AF4390", VA = "0x1AF4390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x1AF43D8", Offset = "0x1AF43D8", VA = "0x1AF43D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1AF3F24", Offset = "0x1AF3F24", VA = "0x1AF3F24")]
		[DebuggerHidden]
		public <LoadCreditsCanvas>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1AF41C8", Offset = "0x1AF41C8", VA = "0x1AF41C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1AF41CC", Offset = "0x1AF41CC", VA = "0x1AF41CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1AF4398", Offset = "0x1AF4398", VA = "0x1AF4398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AssetReference creditsAsset;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject credits;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasGroup alpha;

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x1AF3E90", Offset = "0x1AF3E90", VA = "0x1AF3E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x1AF3EB0", Offset = "0x1AF3EB0", VA = "0x1AF3EB0")]
	[IteratorStateMachine(typeof(<LoadCreditsCanvas>d__6))]
	private IEnumerator LoadCreditsCanvas()
	{
		return null;
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1AF3F4C", Offset = "0x1AF3F4C", VA = "0x1AF3F4C")]
	public void EnterCredits()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x1AF4028", Offset = "0x1AF4028", VA = "0x1AF4028")]
	public void ExitCredits()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x1AF40C8", Offset = "0x1AF40C8", VA = "0x1AF40C8")]
	public void ShowCanvas()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x1AF4144", Offset = "0x1AF4144", VA = "0x1AF4144")]
	public void HideCanvas()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x1AF41C0", Offset = "0x1AF41C0", VA = "0x1AF41C0")]
	public CreditsScreenDoor()
	{
	}
}
[Token(Token = "0x2000258")]
public class DefaultLobbyController : LobbyController
{
	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PlayableDirector[] EventsTimeline;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _isPlayingTimeline;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool _shouldShowPlayTimeline;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool _wasShownCar;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int lastShowHologram;

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x1AF43E0", Offset = "0x1AF43E0", VA = "0x1AF43E0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1AF4464", Offset = "0x1AF4464", VA = "0x1AF4464", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1AF47C8", Offset = "0x1AF47C8", VA = "0x1AF47C8")]
	private void PlayHologram()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x1AF47FC", Offset = "0x1AF47FC", VA = "0x1AF47FC")]
	private void PlayHologram(int timeLineIndex)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1AF4998", Offset = "0x1AF4998", VA = "0x1AF4998")]
	public void PlayHologramFromMultiplayer(int index)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1AF499C", Offset = "0x1AF499C", VA = "0x1AF499C")]
	private void DefaultLobbyController_stopped(PlayableDirector timeline)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x1AF4A60", Offset = "0x1AF4A60", VA = "0x1AF4A60")]
	public DefaultLobbyController()
	{
	}
}
[Token(Token = "0x2000259")]
public class LobbyController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025A")]
	public struct BannerSetting
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sprite Sprite;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RideType RideType;
	}

	[Token(Token = "0x200025C")]
	[CompilerGenerated]
	private sealed class <CartAnimationQueue>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <amount>5__2;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> <indexes>5__3;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CompanionCharacter[] <characters>5__4;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <j>5__6;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <b>5__7;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x1AF5D8C", Offset = "0x1AF5D8C", VA = "0x1AF5D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x1AF5DD4", Offset = "0x1AF5DD4", VA = "0x1AF5DD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1AF4B3C", Offset = "0x1AF4B3C", VA = "0x1AF4B3C")]
		[DebuggerHidden]
		public <CartAnimationQueue>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1AF5520", Offset = "0x1AF5520", VA = "0x1AF5520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1AF5524", Offset = "0x1AF5524", VA = "0x1AF5524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1AF5D94", Offset = "0x1AF5D94", VA = "0x1AF5D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public B4TGames.RollerCoasters.Cart cart;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1AF5DDC", Offset = "0x1AF5DDC", VA = "0x1AF5DDC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1AF5DE4", Offset = "0x1AF5DE4", VA = "0x1AF5DE4")]
		internal bool <CartAnimation>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200025E")]
	[CompilerGenerated]
	private sealed class <CartAnimation>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference cartAsset;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass38_0 <>8__1;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CompanionCharacter[] companionsAssets;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperationHandle<GameObject> <asyncCart>5__2;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <i>5__3;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AsyncOperationHandle<GameObject> <asyncChar>5__4;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x1AF6480", Offset = "0x1AF6480", VA = "0x1AF6480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x1AF64C8", Offset = "0x1AF64C8", VA = "0x1AF64C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1AF4C08", Offset = "0x1AF4C08", VA = "0x1AF4C08")]
		[DebuggerHidden]
		public <CartAnimation>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1AF5E00", Offset = "0x1AF5E00", VA = "0x1AF5E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1AF5E04", Offset = "0x1AF5E04", VA = "0x1AF5E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1AF6488", Offset = "0x1AF6488", VA = "0x1AF6488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025F")]
	[CompilerGenerated]
	private sealed class <DelayedCompanionAnimation>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbyController <>4__this;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int animation;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompanionCharacterConfiguration companion;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1AF65B8", Offset = "0x1AF65B8", VA = "0x1AF65B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x1AF6600", Offset = "0x1AF6600", VA = "0x1AF6600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1AF4CC8", Offset = "0x1AF4CC8", VA = "0x1AF4CC8")]
		[DebuggerHidden]
		public <DelayedCompanionAnimation>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1AF64D0", Offset = "0x1AF64D0", VA = "0x1AF64D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1AF64D4", Offset = "0x1AF64D4", VA = "0x1AF64D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1AF65C0", Offset = "0x1AF65C0", VA = "0x1AF65C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbyController Instance;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Cart Animation")]
	private Animator animator;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string runningAnimationName;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float waitTime;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float animationDelay;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LobbySplineCart cart;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool useEventCartOnly;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AssetReference NextCart;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public CompanionCharacter[] NextCompanions;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public uint CartMultiplayer;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int[] NextCompanionsMultiplayer;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int[] NextRandomAnimationsMultiplayer;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentCart;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CompanionCharacterConfiguration[] currentCompanions;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected bool _isDoingAnimation;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Header("Decoration")]
	internal LobbyDecoration reset;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	internal LobbyDecoration[] decorations;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal int index;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Banner")]
	public Banner[] Banners;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BannerSetting[] RightCornerBannerGeneral;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite RightCornerBannerPremium;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite RightCornerBannerDiscord;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BannerSetting[] LeftCornerBannerGeneral;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite LeftCornerBannerPremium;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite LeftCornerBannerDiscord;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Pickables - Like Snowballs, easter eggs")]
	public GameObject[] Pickables;

	[Token(Token = "0x1700019C")]
	protected bool isConnectedWithSomeone
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1AF4538", Offset = "0x1AF4538", VA = "0x1AF4538")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	protected bool isLeader
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1AF45E0", Offset = "0x1AF45E0", VA = "0x1AF45E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	protected bool _isRunningAnimation
	{
		[Token(Token = "0x6001006")]
		[Address(RVA = "0x1AF4688", Offset = "0x1AF4688", VA = "0x1AF4688")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x1AF4A88", Offset = "0x1AF4A88", VA = "0x1AF4A88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x1AF4AE0", Offset = "0x1AF4AE0", VA = "0x1AF4AE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x1AF445C", Offset = "0x1AF445C", VA = "0x1AF445C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1AF4AE4", Offset = "0x1AF4AE4", VA = "0x1AF4AE4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1AF4754", Offset = "0x1AF4754", VA = "0x1AF4754")]
	[IteratorStateMachine(typeof(<CartAnimationQueue>d__37))]
	protected IEnumerator CartAnimationQueue()
	{
		return null;
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x1AF4B64", Offset = "0x1AF4B64", VA = "0x1AF4B64")]
	[IteratorStateMachine(typeof(<CartAnimation>d__38))]
	private IEnumerator CartAnimation(AssetReference cartAsset, CompanionCharacter[] companionsAssets)
	{
		return null;
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1AF4C30", Offset = "0x1AF4C30", VA = "0x1AF4C30")]
	[IteratorStateMachine(typeof(<DelayedCompanionAnimation>d__39))]
	private IEnumerator DelayedCompanionAnimation(CompanionCharacterConfiguration companion, int animation = -1)
	{
		return null;
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1AF4CF0", Offset = "0x1AF4CF0", VA = "0x1AF4CF0")]
	private SeatType GetSeatPosition(int index)
	{
		return default(SeatType);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x1AF4D10", Offset = "0x1AF4D10", VA = "0x1AF4D10")]
	private void ApplyDecoration(LobbyDecoration decoration)
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x1AF4EC0", Offset = "0x1AF4EC0", VA = "0x1AF4EC0")]
	public void ReadCartAnimationMultiplayer(uint cart, int[] companion, int[] animation)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x1AF51B8", Offset = "0x1AF51B8", VA = "0x1AF51B8")]
	public void ConfigBanners()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1AF5274", Offset = "0x1AF5274", VA = "0x1AF5274")]
	private void ShowBanner(bool isPremium, bool isDiscord, string discountText)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x1AF5408", Offset = "0x1AF5408", VA = "0x1AF5408")]
	private BannerSetting GetGeneralSprite(bool isRight)
	{
		return default(BannerSetting);
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x1AF4A74", Offset = "0x1AF4A74", VA = "0x1AF4A74")]
	public LobbyController()
	{
	}
}
[Token(Token = "0x2000261")]
public class LobbySpawnPoint : MonoBehaviour
{
	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SeatType SeatType;

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x1AF664C", Offset = "0x1AF664C", VA = "0x1AF664C")]
	public LobbySpawnPoint()
	{
	}
}
[Token(Token = "0x2000262")]
public class LobbySplineCart : MonoBehaviour
{
	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 newPosition;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 oldPosition;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float Distance;

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1AF6654", Offset = "0x1AF6654", VA = "0x1AF6654")]
	private void Update()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x1AF6728", Offset = "0x1AF6728", VA = "0x1AF6728")]
	public LobbySplineCart()
	{
	}
}
[Token(Token = "0x2000263")]
public class PendantAnimation : MonoBehaviour
{
	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve RangeX;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve RangeZ;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Speed;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tr;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float interpolation;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float firstFrameInterpolation;

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1AF6730", Offset = "0x1AF6730", VA = "0x1AF6730")]
	private void Start()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1AF6790", Offset = "0x1AF6790", VA = "0x1AF6790")]
	private void Update()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1AF684C", Offset = "0x1AF684C", VA = "0x1AF684C")]
	public PendantAnimation()
	{
	}
}
[Token(Token = "0x2000264")]
public class ForceBar : MonoBehaviour
{
	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer Bar;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer Pointer;

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1AF685C", Offset = "0x1AF685C", VA = "0x1AF685C")]
	public ForceBar()
	{
	}
}
[Token(Token = "0x2000265")]
public class SoccerBall : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000266")]
	public struct SoccerBallCollisionSound
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[TagSelector]
		public string Tag;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioClip Clip;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsDefaultCollisionClip;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 2f)]
		public float MinVolume;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 2f)]
		public float MaxVolume;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 2f)]
		public float MinPitch;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 2f)]
		public float MaxPitch;
	}

	[Token(Token = "0x2000267")]
	[CompilerGenerated]
	private sealed class <ChargeKick>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoccerBall <>4__this;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x1AF7D5C", Offset = "0x1AF7D5C", VA = "0x1AF7D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1AF7DA4", Offset = "0x1AF7DA4", VA = "0x1AF7DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1AF6AFC", Offset = "0x1AF6AFC", VA = "0x1AF6AFC")]
		[DebuggerHidden]
		public <ChargeKick>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1AF7B3C", Offset = "0x1AF7B3C", VA = "0x1AF7B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1AF7B40", Offset = "0x1AF7B40", VA = "0x1AF7B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1AF7D64", Offset = "0x1AF7D64", VA = "0x1AF7D64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint ID;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxStrength;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource kickSound;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource goalSound;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSourceVolumeBehavior goalSoundBehavior;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource missSound;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource collisionSound;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SoccerBallCollisionSound[] clips;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ParticleSystem goalParticle;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float chargingForce;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool charging;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool canceled;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string lastCollisionTag;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool alreadyGoal;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MeshRenderer[] renderers;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool ReadPositionFromMultiplayer;

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1AF6864", Offset = "0x1AF6864", VA = "0x1AF6864")]
	private void Start()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x1AF68BC", Offset = "0x1AF68BC", VA = "0x1AF68BC")]
	public void Kick()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x1AF6A88", Offset = "0x1AF6A88", VA = "0x1AF6A88")]
	[IteratorStateMachine(typeof(<ChargeKick>d__20))]
	private IEnumerator ChargeKick()
	{
		return null;
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x1AF6B24", Offset = "0x1AF6B24", VA = "0x1AF6B24")]
	public void CancelKick()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x1AF6B30", Offset = "0x1AF6B30", VA = "0x1AF6B30")]
	public void ReleaseKick()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x1AF6F98", Offset = "0x1AF6F98", VA = "0x1AF6F98")]
	private void Goal()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x1AF7194", Offset = "0x1AF7194", VA = "0x1AF7194")]
	private void Miss()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x1AF71B0", Offset = "0x1AF71B0", VA = "0x1AF71B0")]
	public void ApplyForceFromMutiplayer(Vector3 force)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x1AF71D0", Offset = "0x1AF71D0", VA = "0x1AF71D0")]
	public void ApplyInitialPositionFromMutiplayer(Vector3 initialPosition)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x1AF72CC", Offset = "0x1AF72CC", VA = "0x1AF72CC")]
	private void PlayCollisionSound(string tag, float impact)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x1AF7568", Offset = "0x1AF7568", VA = "0x1AF7568")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x1AF79F0", Offset = "0x1AF79F0", VA = "0x1AF79F0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x1AF7A68", Offset = "0x1AF7A68", VA = "0x1AF7A68")]
	private void DestroyBall()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x1AF7AD4", Offset = "0x1AF7AD4", VA = "0x1AF7AD4")]
	public SoccerBall()
	{
	}
}
[Token(Token = "0x2000268")]
public class SoccerBallController : IController<SoccerBallController>
{
	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoccerBall[] Balls;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ForceBar ForceBar;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoccerBall ballToFollow;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 defaultKickBarScale;

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1AF7DAC", Offset = "0x1AF7DAC", VA = "0x1AF7DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x1AF7E64", Offset = "0x1AF7E64", VA = "0x1AF7E64")]
	public void SendMultiplayerSoccerBallInitialPosition()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x1AF6E04", Offset = "0x1AF6E04", VA = "0x1AF6E04")]
	public void SendMultiplayerUpdate(SoccerBall soccerBall, Vector3 force)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x1AF8014", Offset = "0x1AF8014", VA = "0x1AF8014")]
	public void ReadMultiplayerUpdate(uint ballID, Vector3 force)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1AF811C", Offset = "0x1AF811C", VA = "0x1AF811C")]
	public void ReadMultiplayerInitialPosition(uint ballID, Vector3 position)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x1AF82D4", Offset = "0x1AF82D4", VA = "0x1AF82D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x1AF69D4", Offset = "0x1AF69D4", VA = "0x1AF69D4")]
	public void ShowCharger(SoccerBall ball)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x1AF7C58", Offset = "0x1AF7C58", VA = "0x1AF7C58")]
	public void UpdateChargerUI(float position)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x1AF6EF0", Offset = "0x1AF6EF0", VA = "0x1AF6EF0")]
	public void HideCharger()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x1AF85AC", Offset = "0x1AF85AC", VA = "0x1AF85AC")]
	public SoccerBallController()
	{
	}
}
[Token(Token = "0x2000269")]
public class SoccerGoal : MonoBehaviour
{
	[Token(Token = "0x6001054")]
	[Address(RVA = "0x1AF85F4", Offset = "0x1AF85F4", VA = "0x1AF85F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x1AF85F8", Offset = "0x1AF85F8", VA = "0x1AF85F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x1AF85FC", Offset = "0x1AF85FC", VA = "0x1AF85FC")]
	public SoccerGoal()
	{
	}
}
[Token(Token = "0x200026A")]
public class LookAtTargetHC : MonoBehaviour
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lookAtTarget;

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x1AF8604", Offset = "0x1AF8604", VA = "0x1AF8604")]
	private void Start()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x1AF8698", Offset = "0x1AF8698", VA = "0x1AF8698")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x1AF86C0", Offset = "0x1AF86C0", VA = "0x1AF86C0")]
	public LookAtTargetHC()
	{
	}
}
[Token(Token = "0x200026B")]
public class LooktAt : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	[CompilerGenerated]
	private sealed class <Follow>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LooktAt <>4__this;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x1AF8B14", Offset = "0x1AF8B14", VA = "0x1AF8B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x1AF8B5C", Offset = "0x1AF8B5C", VA = "0x1AF8B5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1AF89D4", Offset = "0x1AF89D4", VA = "0x1AF89D4")]
		[DebuggerHidden]
		public <Follow>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1AF8A70", Offset = "0x1AF8A70", VA = "0x1AF8A70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1AF8A74", Offset = "0x1AF8A74", VA = "0x1AF8A74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1AF8B1C", Offset = "0x1AF8B1C", VA = "0x1AF8B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lookingFrom;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAt;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool DoOnUpdate;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AddToX;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tr;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 originalRotation;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 auxLocalEulerAngles;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFollowing;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForEndOfFrame yieldInstruction;

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x1AF86C8", Offset = "0x1AF86C8", VA = "0x1AF86C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x1AF87EC", Offset = "0x1AF87EC", VA = "0x1AF87EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x1AF88BC", Offset = "0x1AF88BC", VA = "0x1AF88BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x1AF89C0", Offset = "0x1AF89C0", VA = "0x1AF89C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x1AF894C", Offset = "0x1AF894C", VA = "0x1AF894C")]
	[IteratorStateMachine(typeof(<Follow>d__13))]
	private IEnumerator Follow()
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x1AF89FC", Offset = "0x1AF89FC", VA = "0x1AF89FC")]
	public LooktAt()
	{
	}
}
[Token(Token = "0x200026D")]
public class MeshRenderersMeshBaker : MonoBehaviour
{
	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB3_MeshBaker rendererMeshBaker;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsToAdd;

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x1AF8B64", Offset = "0x1AF8B64", VA = "0x1AF8B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x1AF8EEC", Offset = "0x1AF8EEC", VA = "0x1AF8EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x1AF9118", Offset = "0x1AF9118", VA = "0x1AF9118")]
	public MeshRenderersMeshBaker()
	{
	}
}
[Token(Token = "0x200026E")]
[ExecuteInEditMode]
public class AddLightProbeSupport : MonoBehaviour
{
	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToRemoveOnChildren;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x1AF9120", Offset = "0x1AF9120", VA = "0x1AF9120")]
	public AddLightProbeSupport()
	{
	}
}
[Token(Token = "0x200026F")]
[ExecuteInEditMode]
public class AddTwoSidedShadows : MonoBehaviour
{
	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToAddOnChildren;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x1AF9128", Offset = "0x1AF9128", VA = "0x1AF9128")]
	public AddTwoSidedShadows()
	{
	}
}
[Token(Token = "0x2000270")]
[ExecuteInEditMode]
public class AnimateLOD : MonoBehaviour
{
	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LODFadeMode FadeMode;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Animate;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ApplyOnChildren;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeTransitionWidth;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform ParentToApply;

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x1AF9130", Offset = "0x1AF9130", VA = "0x1AF9130")]
	private void Awake()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x1AF91CC", Offset = "0x1AF91CC", VA = "0x1AF91CC")]
	public void DoTheJob()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x1AF960C", Offset = "0x1AF960C", VA = "0x1AF960C")]
	public AnimateLOD()
	{
	}
}
[Token(Token = "0x2000271")]
[ExecuteInEditMode]
public class DisableLODs : MonoBehaviour
{
	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToDisableOnChildren;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LODToDisable;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool Run;

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x1AF962C", Offset = "0x1AF962C", VA = "0x1AF962C")]
	public DisableLODs()
	{
	}
}
[Token(Token = "0x2000272")]
public class DynamicOcclusionCulling : MonoBehaviour
{
	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Offset;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] Objects;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private new Transform transform;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[][] rendereres;

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x1AF9634", Offset = "0x1AF9634", VA = "0x1AF9634")]
	private void Start()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x1AF97F0", Offset = "0x1AF97F0", VA = "0x1AF97F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x1AF9990", Offset = "0x1AF9990", VA = "0x1AF9990")]
	public DynamicOcclusionCulling()
	{
	}
}
[Token(Token = "0x2000273")]
public class DynamicStaticBatching : MonoBehaviour
{
	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ExcludeVegetationFromBatching;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Space(5f)]
	[Tooltip("This will be done on Editor and on Prepare Asset Bundle, it will not work on direct install.")]
	public bool RegroupObjectsWithDifferentLighting;

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x1AF9998", Offset = "0x1AF9998", VA = "0x1AF9998")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x1AF9A4C", Offset = "0x1AF9A4C", VA = "0x1AF9A4C")]
	public DynamicStaticBatching()
	{
	}
}
[Token(Token = "0x2000274")]
[ExecuteInEditMode]
public class JoinTerrainsLODs : MonoBehaviour
{
	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] terrains;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x1AF9A54", Offset = "0x1AF9A54", VA = "0x1AF9A54")]
	private void Update()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x1AF9A68", Offset = "0x1AF9A68", VA = "0x1AF9A68")]
	private void Join()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x1AFA06C", Offset = "0x1AFA06C", VA = "0x1AFA06C")]
	public JoinTerrainsLODs()
	{
	}
}
[Token(Token = "0x2000275")]
[ExecuteInEditMode]
public class LODColliderAdder : MonoBehaviour
{
	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsTrigger;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RunBoxCollider;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ConvexMeshCollider;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RunMeshCollider;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int LodLevelDesired;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Prefix;

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x1AFA074", Offset = "0x1AFA074", VA = "0x1AFA074")]
	public LODColliderAdder()
	{
	}
}
[Token(Token = "0x2000276")]
[ExecuteInEditMode]
public class RemoveLastLOD : MonoBehaviour
{
	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToRemoveOnChildren;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x1AFA084", Offset = "0x1AFA084", VA = "0x1AFA084")]
	public RemoveLastLOD()
	{
	}
}
[Token(Token = "0x2000277")]
[ExecuteInEditMode]
public class RemoveLightProbeSupport : MonoBehaviour
{
	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToRemoveOnChildren;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x1AFA08C", Offset = "0x1AFA08C", VA = "0x1AFA08C")]
	public RemoveLightProbeSupport()
	{
	}
}
[Token(Token = "0x2000278")]
[ExecuteInEditMode]
public class RemoveLOD0 : MonoBehaviour
{
	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToRemoveOnChildren;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x1AFA094", Offset = "0x1AFA094", VA = "0x1AFA094")]
	public RemoveLOD0()
	{
	}
}
[Token(Token = "0x2000279")]
[ExecuteInEditMode]
public class ReplacePrefab : MonoBehaviour
{
	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject NewPrefab;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ParentToReplace;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Filter;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool CopyHierarchyActives;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool Run;

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x1AFA09C", Offset = "0x1AFA09C", VA = "0x1AFA09C")]
	public ReplacePrefab()
	{
	}
}
[Token(Token = "0x200027A")]
[ExecuteInEditMode]
public class ReplaceTriggers : MonoBehaviour
{
	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool run;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x1AFA0AC", Offset = "0x1AFA0AC", VA = "0x1AFA0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1AFA0CC", Offset = "0x1AFA0CC", VA = "0x1AFA0CC")]
	private void CheckForNeed()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x1AFA2D0", Offset = "0x1AFA2D0", VA = "0x1AFA2D0")]
	private void ReplaceRendererTrigger()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1AFA5F8", Offset = "0x1AFA5F8", VA = "0x1AFA5F8")]
	private void ReplaceTimelineTrigger()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x1AFA920", Offset = "0x1AFA920", VA = "0x1AFA920")]
	private void ReplaceObjectTrigger()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x1AFAC48", Offset = "0x1AFAC48", VA = "0x1AFAC48")]
	private void ReplaceLightTrigger()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1AFAEEC", Offset = "0x1AFAEEC", VA = "0x1AFAEEC")]
	private void ReplaceCameraTrigger()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x1AFB2CC", Offset = "0x1AFB2CC", VA = "0x1AFB2CC")]
	private void ReplaceLODsTrigger()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1AFB5F8", Offset = "0x1AFB5F8", VA = "0x1AFB5F8")]
	private void ReplaceSoundTriggers()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1AFB93C", Offset = "0x1AFB93C", VA = "0x1AFB93C")]
	private void ReplaceSourceVolumeBehaviour()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x1AFBBA4", Offset = "0x1AFBBA4", VA = "0x1AFBBA4")]
	public ReplaceTriggers()
	{
	}
}
[Token(Token = "0x200027B")]
[ExecuteInEditMode]
public class ReposNewPrefab : MonoBehaviour
{
	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ParentToCreate;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ParentWithChildrenToCopyTransform;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Run;

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x1AFBBAC", Offset = "0x1AFBBAC", VA = "0x1AFBBAC")]
	public ReposNewPrefab()
	{
	}
}
[Token(Token = "0x200027C")]
[ExecuteInEditMode]
public class SetLightmapParams : MonoBehaviour
{
	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ParentToRemoveOnChildren;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Run;

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x1AFBBBC", Offset = "0x1AFBBBC", VA = "0x1AFBBBC")]
	public SetLightmapParams()
	{
	}
}
[Token(Token = "0x200027D")]
[ExecuteInEditMode]
public class SetLightmapScale : MonoBehaviour
{
	[Token(Token = "0x6001089")]
	[Address(RVA = "0x1AFBBC4", Offset = "0x1AFBBC4", VA = "0x1AFBBC4")]
	public SetLightmapScale()
	{
	}
}
[Token(Token = "0x200027E")]
[ExecuteInEditMode]
public class SetProbesAnchorOverride : MonoBehaviour
{
	[Token(Token = "0x600108A")]
	[Address(RVA = "0x1AFBBCC", Offset = "0x1AFBBCC", VA = "0x1AFBBCC")]
	public SetProbesAnchorOverride()
	{
	}
}
[Token(Token = "0x200027F")]
[ExecuteInEditMode]
public class SetTerrainPixelError : MonoBehaviour
{
	[Token(Token = "0x600108B")]
	[Address(RVA = "0x1AFBBD4", Offset = "0x1AFBBD4", VA = "0x1AFBBD4")]
	public SetTerrainPixelError()
	{
	}
}
[Token(Token = "0x2000280")]
[ExecuteInEditMode]
public class SnapToTerrain : MonoBehaviour
{
	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space]
	public bool RunOnThis;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Space]
	public bool RunOnChildren;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Space]
	public bool ShowLogs;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x1AFBBDC", Offset = "0x1AFBBDC", VA = "0x1AFBBDC")]
	public SnapToTerrain()
	{
	}
}
[Token(Token = "0x2000281")]
[RequireComponent(typeof(ParticleSystem))]
[ExecuteAlways]
public class ParticleBlinking : MonoBehaviour
{
	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Particle Emission")]
	[Tooltip("Min Range in Seconds")]
	public float minRange;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Max Range in Seconds")]
	public float maxRange;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleComponent;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x1AFBBE4", Offset = "0x1AFBBE4", VA = "0x1AFBBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x1AFBC74", Offset = "0x1AFBC74", VA = "0x1AFBC74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x1AFBC78", Offset = "0x1AFBC78", VA = "0x1AFBC78")]
	private void EmitParticle()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x1AFBD74", Offset = "0x1AFBD74", VA = "0x1AFBD74")]
	public ParticleBlinking()
	{
	}
}
[Token(Token = "0x2000282")]
public class PlatformDestroy : MonoBehaviour
{
	[Token(Token = "0x6001091")]
	[Address(RVA = "0x1AFBD88", Offset = "0x1AFBD88", VA = "0x1AFBD88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x1AFBE18", Offset = "0x1AFBE18", VA = "0x1AFBE18")]
	public PlatformDestroy()
	{
	}
}
[Token(Token = "0x2000283")]
public class PlatformSpecific : MonoBehaviour
{
	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyForOculusGo;

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x1AFBE20", Offset = "0x1AFBE20", VA = "0x1AFBE20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1AFBEC4", Offset = "0x1AFBEC4", VA = "0x1AFBEC4")]
	public PlatformSpecific()
	{
	}
}
[Token(Token = "0x2000284")]
public class Player : PlayerStarter
{
	[Token(Token = "0x2000285")]
	[CompilerGenerated]
	private sealed class <PlayRoutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player <>4__this;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x1AFFA38", Offset = "0x1AFFA38", VA = "0x1AFFA38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x1AFFA80", Offset = "0x1AFFA80", VA = "0x1AFFA80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1AFE4C8", Offset = "0x1AFE4C8", VA = "0x1AFE4C8")]
		[DebuggerHidden]
		public <PlayRoutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1AFF5BC", Offset = "0x1AFF5BC", VA = "0x1AFF5BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1AFF5C0", Offset = "0x1AFF5C0", VA = "0x1AFF5C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1AFFA40", Offset = "0x1AFFA40", VA = "0x1AFFA40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool AutoStart;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool IsSimulationCartOriginal;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	[HideInInspector]
	public bool AlreadyConfigured;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool SpeedShouldAffectTimeScale;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float TimeScale;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool Playing;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool Warming;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TrackCart CartPhysics;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float WaitAtStart;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool PlayAllowed;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public B4TGames.RollerCoasters.Cart CartGraphics;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Camera MainCamera;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform mainCameraParent;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform mainCameraParentReference;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public bool IsMultiplayer;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public Vector3 MultiplayerPosition;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Quaternion MultiplayerRotation;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public float MultiplayerSmoothFollow;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource ReleasePressure;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PlayableDirector Timeline;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float TimeToWaitTimeline;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public bool IsCountdownInProgress;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Range(0f, 1f)]
	[Space(5f)]
	public float CameraSmoothing;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[Space(5f)]
	public float TimeScaleBurst;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Tooltip("This is only intended to run test purposes at the standalone scene (without the main menu flow).")]
	[Header("Standalone features")]
	[Space(10f)]
	public AudioMixerGroup MasterMixer;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public Transform tr;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Transform CompanionCharacterSpawnPoint;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Helmet.HelmetType lastHelmetUsed;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float accelerationTargetSpeed;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float accelerationMaxForce;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float brakesTargetSpeed;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float brakesMaxForce;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float maxForce;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public float StartTime;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float lastTimeScale;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public List<AudioSource> AudioSources;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<PlayableDirector> Timelines;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 lastPitchYawRoll;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float lastYaw;

	[Token(Token = "0x170001A9")]
	public GameModeType CurrentGameMode
	{
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1AFC3DC", Offset = "0x1AFC3DC", VA = "0x1AFC3DC")]
		get
		{
			return default(GameModeType);
		}
	}

	[Token(Token = "0x170001AA")]
	public new static Player Instance
	{
		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1AF8510", Offset = "0x1AF8510", VA = "0x1AF8510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public string RideName
	{
		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1AFC410", Offset = "0x1AFC410", VA = "0x1AFC410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	public Transform CameraSpawpoint
	{
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1AFC98C", Offset = "0x1AFC98C", VA = "0x1AFC98C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1AFC520", Offset = "0x1AFC520", VA = "0x1AFC520")]
		set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public Transform CartTR
	{
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1AFC994", Offset = "0x1AFC994", VA = "0x1AFC994")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1AFC99C", Offset = "0x1AFC99C", VA = "0x1AFC99C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public Vector3 PitchYawRoll
	{
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1AFF088", Offset = "0x1AFF088", VA = "0x1AFF088")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AF")]
	public float pitch
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1AFF0D4", Offset = "0x1AFF0D4", VA = "0x1AFF0D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1AFF4EC", Offset = "0x1AFF4EC", VA = "0x1AFF4EC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public float yaw
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1AFF110", Offset = "0x1AFF110", VA = "0x1AFF110")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1AFF4F0", Offset = "0x1AFF4F0", VA = "0x1AFF4F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public float roll
	{
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1AFF4B0", Offset = "0x1AFF4B0", VA = "0x1AFF4B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1AFF4F4", Offset = "0x1AFF4F4", VA = "0x1AFF4F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action OnConfigured
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1AFBED4", Offset = "0x1AFBED4", VA = "0x1AFBED4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1AFBF70", Offset = "0x1AFBF70", VA = "0x1AFBF70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action OnPlaying
	{
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1AFC00C", Offset = "0x1AFC00C", VA = "0x1AFC00C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1AFC0A8", Offset = "0x1AFC0A8", VA = "0x1AFC0A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action OnMoving
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1AFC144", Offset = "0x1AFC144", VA = "0x1AFC144")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1AFC1E0", Offset = "0x1AFC1E0", VA = "0x1AFC1E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<float, float> UpdateAudioPitches
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1AFC27C", Offset = "0x1AFC27C", VA = "0x1AFC27C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1AFC32C", Offset = "0x1AFC32C", VA = "0x1AFC32C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x1AFC9AC", Offset = "0x1AFC9AC", VA = "0x1AFC9AC", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x1AFCD14", Offset = "0x1AFCD14", VA = "0x1AFCD14")]
	public void Config()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x1AFD1E4", Offset = "0x1AFD1E4", VA = "0x1AFD1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x1AFDB3C", Offset = "0x1AFDB3C", VA = "0x1AFDB3C")]
	public void ConfigXR()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x1AFD9E8", Offset = "0x1AFD9E8", VA = "0x1AFD9E8")]
	public void ResetPlayerAttributes()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x1AFC7A0", Offset = "0x1AFC7A0", VA = "0x1AFC7A0")]
	public float FixCameraPosition()
	{
		return default(float);
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x1AFDFF4", Offset = "0x1AFDFF4", VA = "0x1AFDFF4")]
	public float GetHeightForRecenter()
	{
		return default(float);
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x1AFE0E8", Offset = "0x1AFE0E8", VA = "0x1AFE0E8")]
	private float FloorHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x1AFE020", Offset = "0x1AFE020", VA = "0x1AFE020")]
	private float EyeHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x1AFE1B0", Offset = "0x1AFE1B0", VA = "0x1AFE1B0")]
	public void AddOnPlayListener()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x1AFE2B8", Offset = "0x1AFE2B8", VA = "0x1AFE2B8")]
	public void OnPlay()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x1AFE3C0", Offset = "0x1AFE3C0", VA = "0x1AFE3C0", Slot = "6")]
	protected override void Play()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x1AFE454", Offset = "0x1AFE454", VA = "0x1AFE454")]
	[IteratorStateMachine(typeof(<PlayRoutine>d__72))]
	private IEnumerator PlayRoutine()
	{
		return null;
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1AFE4F0", Offset = "0x1AFE4F0", VA = "0x1AFE4F0")]
	public void CloseBars()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x1AFE574", Offset = "0x1AFE574", VA = "0x1AFE574")]
	public void OpenBars()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1AFE5F8", Offset = "0x1AFE5F8", VA = "0x1AFE5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x1AFE5FC", Offset = "0x1AFE5FC", VA = "0x1AFE5FC", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1AFEAC4", Offset = "0x1AFEAC4", VA = "0x1AFEAC4")]
	public void ResetCameraRotation()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1AFEAF8", Offset = "0x1AFEAF8", VA = "0x1AFEAF8")]
	private void Reload()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x1AFD4D4", Offset = "0x1AFD4D4", VA = "0x1AFD4D4")]
	private void AudioSourcesConfig()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1AFEC6C", Offset = "0x1AFEC6C", VA = "0x1AFEC6C")]
	public void AddAudioSource(AudioSource audioSource)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1AFED24", Offset = "0x1AFED24", VA = "0x1AFED24")]
	public void RemoveAudioSource(AudioSource audioSource)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1AFEB68", Offset = "0x1AFEB68", VA = "0x1AFEB68")]
	private void ConfigureAudioMixer(AudioSource audioSource)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1AFCF80", Offset = "0x1AFCF80", VA = "0x1AFCF80")]
	public void UpdateAudioPitches_Event(float timeScale, float timeScaleBySpeed)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1AFD6F4", Offset = "0x1AFD6F4", VA = "0x1AFD6F4")]
	public void TimelinesConfig()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x1AFEDB4", Offset = "0x1AFEDB4", VA = "0x1AFEDB4")]
	private void OnPlayableDirectorPlayed(PlayableDirector aDirector)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1AFEEB0", Offset = "0x1AFEEB0", VA = "0x1AFEEB0")]
	private void OnPlayableDirectorStopped(PlayableDirector aDirector)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1AFE954", Offset = "0x1AFE954", VA = "0x1AFE954")]
	public void UpdateTimelines(float timeScale)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1AFEF40", Offset = "0x1AFEF40", VA = "0x1AFEF40")]
	public void UpdateTimeline(PlayableDirector timeline, float timeScale)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x1AFF4F8", Offset = "0x1AFF4F8", VA = "0x1AFF4F8")]
	public Player()
	{
	}
}
[Token(Token = "0x2000286")]
public class PlayerChain : IController<PlayerChain>
{
	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource ChainStart;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ChainLoop;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource ChainEnd;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ChangePitch;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsChaining;

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x1AFFA88", Offset = "0x1AFFA88", VA = "0x1AFFA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x1AFFB68", Offset = "0x1AFFB68", VA = "0x1AFFB68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x1AFFC20", Offset = "0x1AFFC20", VA = "0x1AFFC20")]
	private void CartPhysics_OnCartChangesTracks(Vector3 lastLocalVelocity, Vector3 localVelocity, ZenFulcrum.Track.Track track)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1AFFEDC", Offset = "0x1AFFEDC", VA = "0x1AFFEDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x1AFFC58", Offset = "0x1AFFC58", VA = "0x1AFFC58")]
	public void StartChain()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1AFFD9C", Offset = "0x1AFFD9C", VA = "0x1AFFD9C")]
	public void StopChain()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1B00178", Offset = "0x1B00178", VA = "0x1B00178")]
	public PlayerChain()
	{
	}
}
[Token(Token = "0x2000287")]
public class PlayerForceLOD : MonoBehaviour
{
	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int indexToForce;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int highestLevel;

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1B001C8", Offset = "0x1B001C8", VA = "0x1B001C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1B002D4", Offset = "0x1B002D4", VA = "0x1B002D4")]
	public PlayerForceLOD()
	{
	}
}
[Token(Token = "0x2000288")]
public abstract class PlayerStarter : IController<PlayerStarter>
{
	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float AccelerateInput;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float BrakeInput;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Player Player;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isAcumulatingFPS;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float averageFPS;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float totalTime;

	[Token(Token = "0x1400001F")]
	[Obsolete("Use OnConfigured or OnPlaying instead.")]
	public event Action OnStart
	{
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1B002E8", Offset = "0x1B002E8", VA = "0x1B002E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1B00384", Offset = "0x1B00384", VA = "0x1B00384")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	[Obsolete("Use OnPlaying instead.")]
	public event Action OnCartStart
	{
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1B00420", Offset = "0x1B00420", VA = "0x1B00420")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1B004BC", Offset = "0x1B004BC", VA = "0x1B004BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action OnEndGame
	{
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1AFDAA0", Offset = "0x1AFDAA0", VA = "0x1AFDAA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1B00558", Offset = "0x1B00558", VA = "0x1B00558")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action OneLap
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1B005F4", Offset = "0x1B005F4", VA = "0x1B005F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1B00690", Offset = "0x1B00690", VA = "0x1B00690")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action<Scenario, CoasterType, float, string, bool, bool> OnShowScore
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1B0072C", Offset = "0x1B0072C", VA = "0x1B0072C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1B007DC", Offset = "0x1B007DC", VA = "0x1B007DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x1AFCC58", Offset = "0x1AFCC58", VA = "0x1AFCC58", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x1AFE404", Offset = "0x1AFE404", VA = "0x1AFE404", Slot = "6")]
	protected virtual void Play()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x1AFFA1C", Offset = "0x1AFFA1C", VA = "0x1AFFA1C")]
	public void CartStart()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x1B0088C", Offset = "0x1B0088C", VA = "0x1B0088C")]
	private void StartFPSCounter()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x1AFEA88", Offset = "0x1AFEA88", VA = "0x1AFEA88", Slot = "7")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x1B008C4", Offset = "0x1B008C4", VA = "0x1B008C4")]
	public void EndScenario()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x1B00A38", Offset = "0x1B00A38", VA = "0x1B00A38")]
	public void OneLapDone()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x1B00950", Offset = "0x1B00950", VA = "0x1B00950")]
	private void ShowDebugInfo()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x1B00954", Offset = "0x1B00954", VA = "0x1B00954")]
	private void StopFPSCounter()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x1B00C08", Offset = "0x1B00C08", VA = "0x1B00C08")]
	public void ShowScore(float score, string itemUsedSKU, bool isOriginal)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x1AFF568", Offset = "0x1AFF568", VA = "0x1AFF568")]
	protected PlayerStarter()
	{
	}
}
[Token(Token = "0x2000289")]
public class PlayerTrackImpacts : MonoBehaviour
{
	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int lastClipID;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinVolume;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxVolume;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(10f)]
	public float HorizontalForceThreshold;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float HorizontalForceMax;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Space(10f)]
	public float RollForceThreshold;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RollForceMax;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(10f)]
	public AudioSource LeftAudioSource;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource RightAudioSource;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space(10f)]
	public bool AvoidRepetition;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] AudioClips;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve[] HapticsCurves;

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x1B00D68", Offset = "0x1B00D68", VA = "0x1B00D68")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x1B00F24", Offset = "0x1B00F24", VA = "0x1B00F24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x1B00FDC", Offset = "0x1B00FDC", VA = "0x1B00FDC")]
	private void CartPhysics_OnCartChangesTracks(Vector3 lastLocalVelocity, Vector3 localVelocity, ZenFulcrum.Track.Track track)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x1B012AC", Offset = "0x1B012AC", VA = "0x1B012AC")]
	private int PickClip()
	{
		return default(int);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x1B01304", Offset = "0x1B01304", VA = "0x1B01304")]
	public PlayerTrackImpacts()
	{
	}
}
[Token(Token = "0x200028A")]
public class PlayerWooshes : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200028B")]
	public struct WooshDetectors
	{
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public float MaxSpeed;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public Transform MaxSpeedPivot;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public float MaxPitch;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[Space(10f)]
		public float MinSpeed;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Transform MinSpeedPivot;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public float MinPitch;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(10f)]
		[SerializeField]
		public float RaycastRange;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float MaxVolume;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float MinVolume;
	}

	[Serializable]
	[Token(Token = "0x200028C")]
	public struct Effects
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string Tag;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public AudioClip[] Audio;
	}

	[Token(Token = "0x200028D")]
	public struct ObjectToWoosh
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ID;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float StartTime;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform HitTransform;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float PlayerSpeed;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 Point;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Distance;
	}

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("From between Min-Max pivots a Raycast will be fired to Left and Right with Raycast Range.")]
	public WooshDetectors WooshDetector;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("This AudioSources will be repositioned where the raycast collisions happened.")]
	[Space(10f)]
	public AudioSource[] AudioSources;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(10f)]
	public Effects[] SpecificEffects;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LayerMask layerMask;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int directionIndex;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObjectToWoosh[] directionLastObjs;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float VolumeMultiplier;

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x1B01334", Offset = "0x1B01334", VA = "0x1B01334")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x1B01500", Offset = "0x1B01500", VA = "0x1B01500")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x1B019B8", Offset = "0x1B019B8", VA = "0x1B019B8")]
	protected void PlayTheEffect(ObjectToWoosh obj)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x1B01E1C", Offset = "0x1B01E1C", VA = "0x1B01E1C")]
	protected void PlayAudioEffect(ObjectToWoosh obj, AudioSource audioSource, AudioClip clip)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x1B01D78", Offset = "0x1B01D78", VA = "0x1B01D78")]
	private void TreeVolumeHotFix(string tag)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x1B01F2C", Offset = "0x1B01F2C", VA = "0x1B01F2C")]
	public PlayerWooshes()
	{
	}
}
[Token(Token = "0x200028E")]
public class Pool<T> where T : PoolObject
{
	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected List<T> ObjsPool;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int NextIndex;

	[Token(Token = "0x170001B4")]
	public int Count
	{
		[Token(Token = "0x60010FD")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60010FA")]
	public Pool()
	{
	}

	[Token(Token = "0x60010FB")]
	public T Get()
	{
		return null;
	}

	[Token(Token = "0x60010FC")]
	public void Add(T obj)
	{
	}
}
[Token(Token = "0x200028F")]
public abstract class PoolObject
{
	[Token(Token = "0x60010FE")]
	public abstract bool IsAtive();

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x1B01F98", Offset = "0x1B01F98", VA = "0x1B01F98", Slot = "5")]
	public virtual void Config()
	{
	}

	[Token(Token = "0x6001100")]
	public abstract void Disable();

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x1B01FA4", Offset = "0x1B01FA4", VA = "0x1B01FA4")]
	protected PoolObject()
	{
	}
}
[Token(Token = "0x2000290")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, Dictionary<int, Material>> listOfMaterials;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int RenderQueue;

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x1B01FAC", Offset = "0x1B01FAC", VA = "0x1B01FAC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x1B023F4", Offset = "0x1B023F4", VA = "0x1B023F4")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000291")]
public class ShaderWarmUp : MonoBehaviour
{
	[Token(Token = "0x6001105")]
	[Address(RVA = "0x1B0249C", Offset = "0x1B0249C", VA = "0x1B0249C")]
	public ShaderWarmUp()
	{
	}
}
[Token(Token = "0x2000292")]
public class SplineFollowerController : MonoBehaviour
{
	[Token(Token = "0x170001B5")]
	public SplineFollower Follower
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1B024A4", Offset = "0x1B024A4", VA = "0x1B024A4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1B024AC", Offset = "0x1B024AC", VA = "0x1B024AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x1B024B4", Offset = "0x1B024B4", VA = "0x1B024B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x1B02580", Offset = "0x1B02580", VA = "0x1B02580")]
	private void OnEndReached(double startPercent)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x1B02614", Offset = "0x1B02614", VA = "0x1B02614")]
	public SplineFollowerController()
	{
	}
}
[Token(Token = "0x2000293")]
[ExecuteInEditMode]
public class SplineFollowerTimeline : MonoBehaviour
{
	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer spline;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	[Tooltip("Zero is begining of the Spline and One is the end.")]
	public float startPosition;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Face the Spline direction")]
	public bool faceDirection;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[Tooltip("Face the Player (will ignore the Spline direction)")]
	public bool facePlayer;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Face the Object dragged here (will ignore the Player and Spline directions)")]
	public Transform faceObject;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	[Tooltip("Lower the value smoother the Face will be")]
	public float facingSmooth;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	protected SampleCollection sampleCollection;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	protected SplineSample _result;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform tr;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform targetObj;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastStartPosition;

	[Token(Token = "0x170001B6")]
	protected float startPositionClamped
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1B0261C", Offset = "0x1B0261C", VA = "0x1B0261C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B7")]
	private Transform player
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1B02638", Offset = "0x1B02638", VA = "0x1B02638")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x1B026DC", Offset = "0x1B026DC", VA = "0x1B026DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x1B0280C", Offset = "0x1B0280C", VA = "0x1B0280C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x1B02AE0", Offset = "0x1B02AE0", VA = "0x1B02AE0")]
	public void Update()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x1B02814", Offset = "0x1B02814", VA = "0x1B02814")]
	private void UpdatePosition(bool force = false)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x1B02AE8", Offset = "0x1B02AE8", VA = "0x1B02AE8")]
	public SplineFollowerTimeline()
	{
	}
}
[Token(Token = "0x2000294")]
public class HitEffectController : IController<HitEffectController>
{
	[Serializable]
	[Token(Token = "0x2000295")]
	public struct Effects
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public string Tag;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		public ParticleSystem Effect;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public AudioClip[] Audio;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Pool<HitEffectPoolObject> Pool;
	}

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DefaultEffect;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Effects[] SpecificEffects;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1B02B6C", Offset = "0x1B02B6C", VA = "0x1B02B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1B02D50", Offset = "0x1B02D50", VA = "0x1B02D50")]
	public void SetHitEffect(RaycastHit hit, Vector3 gunPos)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1B03394", Offset = "0x1B03394", VA = "0x1B03394")]
	protected void ApplyParticleColor(RaycastHit hit, ParticleSystem particle)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x1B032B4", Offset = "0x1B032B4", VA = "0x1B032B4")]
	protected void PlaySoundFx(AudioSource shotAudioSource, AudioClip[] ShotSoundFx)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1B02CA8", Offset = "0x1B02CA8", VA = "0x1B02CA8")]
	private HitEffectPoolObject CreateNewEffect(Effects effect)
	{
		return null;
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x1B0381C", Offset = "0x1B0381C", VA = "0x1B0381C")]
	public HitEffectController()
	{
	}
}
[Token(Token = "0x2000296")]
public class HitEffectPoolObject : PoolObject
{
	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem Prefab;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Instance;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LastTimePlayed;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FPSShaderColorGradient Decal;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource Audio;

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x1B03864", Offset = "0x1B03864", VA = "0x1B03864", Slot = "4")]
	public override bool IsAtive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x1B03888", Offset = "0x1B03888", VA = "0x1B03888", Slot = "5")]
	public override void Config()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x1B03A50", Offset = "0x1B03A50", VA = "0x1B03A50", Slot = "6")]
	public override void Disable()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x1B03814", Offset = "0x1B03814", VA = "0x1B03814")]
	public HitEffectPoolObject()
	{
	}
}
[Token(Token = "0x2000297")]
public class ScoreFeedback : MonoBehaviour
{
	[Token(Token = "0x2000298")]
	[CompilerGenerated]
	private sealed class <HideCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToHide;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScoreFeedback <>4__this;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__2;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x1B04330", Offset = "0x1B04330", VA = "0x1B04330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x1B04378", Offset = "0x1B04378", VA = "0x1B04378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1B03F84", Offset = "0x1B03F84", VA = "0x1B03F84")]
		[DebuggerHidden]
		public <HideCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1B04288", Offset = "0x1B04288", VA = "0x1B04288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1B0428C", Offset = "0x1B0428C", VA = "0x1B0428C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1B04338", Offset = "0x1B04338", VA = "0x1B04338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsInUse;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro Text;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource HitFeedbackAudio;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color PlusColor;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color MinusColor;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float smooth;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tr;

	[Token(Token = "0x40013F0")]
	private const string PLUS = "+";

	[Token(Token = "0x40013F1")]
	private const string MINUS = "-";

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x1B03AEC", Offset = "0x1B03AEC", VA = "0x1B03AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x1B03B44", Offset = "0x1B03B44", VA = "0x1B03B44")]
	private void Start()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x1B03BA4", Offset = "0x1B03BA4", VA = "0x1B03BA4")]
	public void Show(Vector3 closestPoint, float score)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x1B03B6C", Offset = "0x1B03B6C", VA = "0x1B03B6C")]
	public void Hide(float timeToHide)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x1B03EC8", Offset = "0x1B03EC8", VA = "0x1B03EC8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x1B03F00", Offset = "0x1B03F00", VA = "0x1B03F00")]
	[IteratorStateMachine(typeof(<HideCoroutine>d__14))]
	private IEnumerator HideCoroutine(float timeToHide)
	{
		return null;
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x1B03FAC", Offset = "0x1B03FAC", VA = "0x1B03FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x1B04274", Offset = "0x1B04274", VA = "0x1B04274")]
	public ScoreFeedback()
	{
	}
}
[Token(Token = "0x2000299")]
public class ScoreFeedbackController : IController<ScoreFeedbackController>
{
	[Token(Token = "0x40013F7")]
	private const float NEGATIVE_VOLUME = 1f;

	[Token(Token = "0x40013F8")]
	private const float POSITIVE_VOLUME = 1f;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScoreFeedback[] ScoreFeedbacks;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] HitFeedbackClips;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] ComboFeedbackClips;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] ErrorFeedbackClips;

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x1B04380", Offset = "0x1B04380", VA = "0x1B04380")]
	public void RemoteShowTargetHitPoints(Vector3 closestPoint, float score)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x1B04388", Offset = "0x1B04388", VA = "0x1B04388")]
	public void ShowTargetHitPoints(Vector3 closestPoint, float score, bool remoteCall = false)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x1B04708", Offset = "0x1B04708", VA = "0x1B04708")]
	public void RemoteShowJumpTargetRewardPoints(Vector3 closestPoint, float score)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x1B04710", Offset = "0x1B04710", VA = "0x1B04710")]
	public void ShowJumpTargetRewardPoints(Vector3 closestPoint, float score, bool remoteCall = false)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x1B049A4", Offset = "0x1B049A4", VA = "0x1B049A4")]
	private ScoreFeedback GetNextScoreFeedback()
	{
		return null;
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x1B04608", Offset = "0x1B04608", VA = "0x1B04608")]
	private ScoreFeedback ShowFeedback(Vector3 closestPoint, float score)
	{
		return null;
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x1B046C0", Offset = "0x1B046C0", VA = "0x1B046C0")]
	private AudioClip GetRandomAudio(AudioClip[] clips)
	{
		return null;
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x1B04948", Offset = "0x1B04948", VA = "0x1B04948")]
	private void HideAllFeedbacks()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x1B049FC", Offset = "0x1B049FC", VA = "0x1B049FC")]
	public ScoreFeedbackController()
	{
	}
}
[Token(Token = "0x200029A")]
public class TerrainFlag : MonoBehaviour
{
	[Token(Token = "0x6001133")]
	[Address(RVA = "0x1B04A44", Offset = "0x1B04A44", VA = "0x1B04A44")]
	public TerrainFlag()
	{
	}
}
[Token(Token = "0x200029B")]
public class TimelineMeshBaker : MonoBehaviour
{
	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayableDirector playable;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] objsToAdd;

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x1B04A4C", Offset = "0x1B04A4C", VA = "0x1B04A4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x1B0514C", Offset = "0x1B0514C", VA = "0x1B0514C")]
	public TimelineMeshBaker()
	{
	}
}
[Token(Token = "0x200029C")]
public class TriggerBoost : MonoBehaviour
{
	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoasterType CoasterMode;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool StartBoost;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool StopBoost;

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x1B1D428", Offset = "0x1B1D428", VA = "0x1B1D428")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x1B1D604", Offset = "0x1B1D604", VA = "0x1B1D604")]
	public TriggerBoost()
	{
	}
}
[Token(Token = "0x200029D")]
public class TriggerCameraFar : TriggerOptimization
{
	[Token(Token = "0x200029E")]
	[CompilerGenerated]
	private sealed class <FogTransition>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerCameraFar <>4__this;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fromCheckpoint;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform other;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <alreadyChangedCamera>5__2;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <interval>5__3;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeToGo>5__4;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <initialStartDistance>5__5;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <initialEndDistance>5__6;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <initialFogDensity>5__7;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <initialColor>5__8;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x1B1E658", Offset = "0x1B1E658", VA = "0x1B1E658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x1B1E6A0", Offset = "0x1B1E6A0", VA = "0x1B1E6A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1B1DFB4", Offset = "0x1B1DFB4", VA = "0x1B1DFB4")]
		[DebuggerHidden]
		public <FogTransition>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1B1E04C", Offset = "0x1B1E04C", VA = "0x1B1E04C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1B1E050", Offset = "0x1B1E050", VA = "0x1B1E050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1B1E660", Offset = "0x1B1E660", VA = "0x1B1E660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool enableFog;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float transitionTime;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color newColor;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float newStartDistance;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float newEndDistance;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool changeCameraFar;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool changeCameraColor;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float newFar;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float newSmallObjectsFar;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float newFarObjectsFar;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool excludeSkybox;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material setSkybox;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float newFogDensity;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Another Trigger that should Play after this.")]
	public TriggerCameraFar PlayChained;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool enableFogPrevious;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float transitionTimePrevious;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color newColorPrevious;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float newStartDistancePrevious;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float newEndDistancePrevious;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float newFarPrevious;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float newSmallObjectsFarPrevious;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float newFarObjectsFarPrevious;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool excludeSkyboxPrevious;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material setSkyboxPrevious;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float newFogDensityPrevious;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool enableFogToUse;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float transitionTimeToUse;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color newColorToUse;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float newStartDistanceToUse;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float newEndDistanceToUse;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float newFarToUse;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float newSmallObjectsFarToUse;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float newFarObjectsFarToUse;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool excludeSkyboxToUse;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material setSkyboxToUse;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float newFogDensityToUse;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Camera[] cameras;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int SmallObjectsLayer;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int FarObjectsLayer;

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x1B1D60C", Offset = "0x1B1D60C", VA = "0x1B1D60C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x1B1D70C", Offset = "0x1B1D70C", VA = "0x1B1D70C")]
	private void Start()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x1B1D718", Offset = "0x1B1D718", VA = "0x1B1D718", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x1B1DCE4", Offset = "0x1B1DCE4", VA = "0x1B1DCE4")]
	private void CopyPreviousValues()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x1B1DF18", Offset = "0x1B1DF18", VA = "0x1B1DF18")]
	[IteratorStateMachine(typeof(<FogTransition>d__43))]
	private IEnumerator FogTransition(Transform other, bool fromCheckpoint)
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x1B1DFDC", Offset = "0x1B1DFDC", VA = "0x1B1DFDC")]
	public TriggerCameraFar()
	{
	}
}
[Token(Token = "0x200029F")]
public class TriggerChangeDirection : MonoBehaviour
{
	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float CoasterDirection;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CoasterType CoasterMode;

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x1B1E6A8", Offset = "0x1B1E6A8", VA = "0x1B1E6A8", Slot = "4")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x1B1E78C", Offset = "0x1B1E78C", VA = "0x1B1E78C")]
	public TriggerChangeDirection()
	{
	}
}
[Token(Token = "0x20002A0")]
public class TriggerChangeRotationFactor : MonoBehaviour
{
	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationFactor;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrackCart cart;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x1B1E7A0", Offset = "0x1B1E7A0", VA = "0x1B1E7A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x1B1E860", Offset = "0x1B1E860", VA = "0x1B1E860")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1B1E954", Offset = "0x1B1E954", VA = "0x1B1E954")]
	public TriggerChangeRotationFactor()
	{
	}
}
[Token(Token = "0x20002A1")]
public class TriggerChangeSound : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	[CompilerGenerated]
	private sealed class <FadeIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriggerChangeSound <>4__this;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <maxVolume>5__3;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x1B1ED84", Offset = "0x1B1ED84", VA = "0x1B1ED84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x1B1EDCC", Offset = "0x1B1EDCC", VA = "0x1B1EDCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1B1EB90", Offset = "0x1B1EB90", VA = "0x1B1EB90")]
		[DebuggerHidden]
		public <FadeIn>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1B1EC5C", Offset = "0x1B1EC5C", VA = "0x1B1EC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1B1EC60", Offset = "0x1B1EC60", VA = "0x1B1EC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1B1ED8C", Offset = "0x1B1ED8C", VA = "0x1B1ED8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A3")]
	[CompilerGenerated]
	private sealed class <FadeOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriggerChangeSound <>4__this;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <volumeInit>5__3;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1B1EF5C", Offset = "0x1B1EF5C", VA = "0x1B1EF5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x1B1EFA4", Offset = "0x1B1EFA4", VA = "0x1B1EFA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1B1EBB8", Offset = "0x1B1EBB8", VA = "0x1B1EBB8")]
		[DebuggerHidden]
		public <FadeOut>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1B1EDD4", Offset = "0x1B1EDD4", VA = "0x1B1EDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x1B1EDD8", Offset = "0x1B1EDD8", VA = "0x1B1EDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1B1EF64", Offset = "0x1B1EF64", VA = "0x1B1EF64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioTofadeOut;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioTofadeIn;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeTime;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isFading;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YieldInstruction fadeInstruction;

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x1B1E964", Offset = "0x1B1E964", VA = "0x1B1E964")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1B1EB00", Offset = "0x1B1EB00", VA = "0x1B1EB00")]
	[IteratorStateMachine(typeof(<FadeIn>d__6))]
	private IEnumerator FadeIn(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1B1EA70", Offset = "0x1B1EA70", VA = "0x1B1EA70")]
	[IteratorStateMachine(typeof(<FadeOut>d__7))]
	private IEnumerator FadeOut(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x1B1EBE0", Offset = "0x1B1EBE0", VA = "0x1B1EBE0")]
	public TriggerChangeSound()
	{
	}
}
[Token(Token = "0x20002A4")]
public class TriggerChangeSoundVolume : MonoBehaviour
{
	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] audioSources;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volume;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] volumesBkp;

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x1B1EFAC", Offset = "0x1B1EFAC", VA = "0x1B1EFAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x1B1F114", Offset = "0x1B1F114", VA = "0x1B1F114")]
	private void ChangeVolumeBack()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x1B1F1A4", Offset = "0x1B1F1A4", VA = "0x1B1F1A4")]
	public TriggerChangeSoundVolume()
	{
	}
}
[Token(Token = "0x20002A5")]
public class TriggerDestroy : TriggerOptimization
{
	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Object;

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1B1F1B8", Offset = "0x1B1F1B8", VA = "0x1B1F1B8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x1B1F208", Offset = "0x1B1F208", VA = "0x1B1F208", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x1B1F2D4", Offset = "0x1B1F2D4", VA = "0x1B1F2D4")]
	public TriggerDestroy()
	{
	}
}
[Token(Token = "0x20002A6")]
public class TriggerEvents : TrackFollower
{
	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Space(5f)]
	[Header("Race Properties")]
	public bool ShouldBeOnCheckpoints;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent TriggerEnter;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent TriggerExit;

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x1B1F2EC", Offset = "0x1B1F2EC", VA = "0x1B1F2EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x1B1F364", Offset = "0x1B1F364", VA = "0x1B1F364")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x1B1F488", Offset = "0x1B1F488", VA = "0x1B1F488")]
	public void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x1B1F4BC", Offset = "0x1B1F4BC", VA = "0x1B1F4BC")]
	public TriggerEvents()
	{
	}
}
[Token(Token = "0x20002A7")]
public class TriggerFinal : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	[CompilerGenerated]
	private sealed class <End>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerFinal <>4__this;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x1B1F810", Offset = "0x1B1F810", VA = "0x1B1F810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0x1B1F858", Offset = "0x1B1F858", VA = "0x1B1F858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x1B1F650", Offset = "0x1B1F650", VA = "0x1B1F650")]
		[DebuggerHidden]
		public <End>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x1B1F690", Offset = "0x1B1F690", VA = "0x1B1F690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x1B1F694", Offset = "0x1B1F694", VA = "0x1B1F694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1B1F818", Offset = "0x1B1F818", VA = "0x1B1F818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoasterType CoasterMode;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Delay;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeOutDuration;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ExecuteOnEnable;

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x1B1F4C4", Offset = "0x1B1F4C4", VA = "0x1B1F4C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x1B1F4D8", Offset = "0x1B1F4D8", VA = "0x1B1F4D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x1B1F5DC", Offset = "0x1B1F5DC", VA = "0x1B1F5DC")]
	[IteratorStateMachine(typeof(<End>d__6))]
	public IEnumerator End()
	{
		return null;
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x1B1F678", Offset = "0x1B1F678", VA = "0x1B1F678")]
	public TriggerFinal()
	{
	}
}
[Token(Token = "0x20002A9")]
public class TriggerFogType : TriggerOptimization
{
	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FogMode Mode;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x1B1F860", Offset = "0x1B1F860", VA = "0x1B1F860", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x1B1F8B0", Offset = "0x1B1F8B0", VA = "0x1B1F8B0", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x1B1F930", Offset = "0x1B1F930", VA = "0x1B1F930")]
	public TriggerFogType()
	{
	}
}
[Token(Token = "0x20002AA")]
public class TriggerForceLOD : TriggerOptimization
{
	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("LOD Properties")]
	public Transform GroupToForce;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int StartWithLOD;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int indexToForce;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int indexToUse;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LODGroup[] lodGroups;

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x1B1F948", Offset = "0x1B1F948", VA = "0x1B1F948", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x1B1FAD4", Offset = "0x1B1FAD4", VA = "0x1B1FAD4", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x1B1FC84", Offset = "0x1B1FC84", VA = "0x1B1FC84")]
	public TriggerForceLOD()
	{
	}
}
[Token(Token = "0x20002AB")]
public class TriggerHaptics : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AC")]
	public struct BHapticsSetting
	{
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HapticClip _clip;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Range(0f, 5f)]
		public float _intensity;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Range(0f, 5f)]
		public float _duration;
	}

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve HapticsCurve;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticsOutputMode Output;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool VibratesOnEnable;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool VibratesOnTriggerEnter;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool AlreadyTriggered;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BHapticsSetting BHapticsClips;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BHapticsSetting BHapticsFaceClips;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x1B1FCA4", Offset = "0x1B1FCA4", VA = "0x1B1FCA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x1B1FD64", Offset = "0x1B1FD64", VA = "0x1B1FD64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x1B1FD9C", Offset = "0x1B1FD9C", VA = "0x1B1FD9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1B1FD74", Offset = "0x1B1FD74", VA = "0x1B1FD74")]
	private void DoAction()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x1B1FE24", Offset = "0x1B1FE24", VA = "0x1B1FE24")]
	public static void ExecuteHaptics(AnimationCurve HapticsCurve, HapticsOutputMode Output)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x1B1FF4C", Offset = "0x1B1FF4C", VA = "0x1B1FF4C")]
	public static void ExecuteBHaptics(BHapticsSetting bHapticsClip)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x1B20060", Offset = "0x1B20060", VA = "0x1B20060")]
	public TriggerHaptics()
	{
	}
}
[Token(Token = "0x20002AD")]
public class TriggerLayer : MonoBehaviour
{
	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask LayersToRemove;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask LayersToAdd;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x1B20070", Offset = "0x1B20070", VA = "0x1B20070")]
	private void Awake()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x1B200D8", Offset = "0x1B200D8", VA = "0x1B200D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x1B201C8", Offset = "0x1B201C8", VA = "0x1B201C8")]
	public TriggerLayer()
	{
	}
}
[Token(Token = "0x20002AE")]
public class TriggerLodBias : TriggerOptimization
{
	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float NewLodBias;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float newLodBiasPrevious;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float newLodBiasToUse;

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x1B201D0", Offset = "0x1B201D0", VA = "0x1B201D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x1B20220", Offset = "0x1B20220", VA = "0x1B20220", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1B2030C", Offset = "0x1B2030C", VA = "0x1B2030C")]
	public TriggerLodBias()
	{
	}
}
[Token(Token = "0x20002AF")]
public class TriggerMaterialTile : TriggerOptimization
{
	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material Material;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string AttributeName;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float NewTile;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float NewTilePrevious;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float NewTileToUse;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x1B20324", Offset = "0x1B20324", VA = "0x1B20324", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x1B20374", Offset = "0x1B20374", VA = "0x1B20374", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x1B20560", Offset = "0x1B20560", VA = "0x1B20560")]
	public TriggerMaterialTile()
	{
	}
}
[Token(Token = "0x20002B0")]
[RequireComponent(typeof(Collider))]
public class TriggerMixerSnapshot : TriggerSound
{
	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot snapshot;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float smoothness;

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1B20578", Offset = "0x1B20578", VA = "0x1B20578", Slot = "6")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x1B20600", Offset = "0x1B20600", VA = "0x1B20600")]
	public TriggerMixerSnapshot()
	{
	}
}
[Token(Token = "0x20002B1")]
public class TriggerObject : TriggerOptimization
{
	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[Space(5f)]
	[Header("Trigger Object")]
	public bool ActivateImmediate;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool DeactivateImmediate;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Object;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool activateImmediateToUse;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool deactivateImmediateToUse;

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x1B20640", Offset = "0x1B20640", VA = "0x1B20640", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x1B206BC", Offset = "0x1B206BC", VA = "0x1B206BC", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x1B20808", Offset = "0x1B20808", VA = "0x1B20808")]
	public TriggerObject()
	{
	}
}
[Token(Token = "0x20002B2")]
public class TriggerObjects : TriggerOptimization
{
	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[Space(5f)]
	[Header("Trigger Object")]
	public bool ActivateImmediate;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool DeactivateImmediate;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Objects;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool activateImmediateToUse;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool deactivateImmediateToUse;

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x1B20820", Offset = "0x1B20820", VA = "0x1B20820", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x1B208DC", Offset = "0x1B208DC", VA = "0x1B208DC", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x1B20A60", Offset = "0x1B20A60", VA = "0x1B20A60")]
	public TriggerObjects()
	{
	}
}
[Token(Token = "0x20002B3")]
public class TriggerOneLap : TrackFollower
{
	[Token(Token = "0x600118B")]
	[Address(RVA = "0x1B20A78", Offset = "0x1B20A78", VA = "0x1B20A78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x1B20B34", Offset = "0x1B20B34", VA = "0x1B20B34")]
	public TriggerOneLap()
	{
	}
}
[Token(Token = "0x20002B4")]
public abstract class TriggerOptimization : MonoBehaviour
{
	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(5f)]
	[Header("Constraints")]
	public bool NeverDoInverse;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CoasterType CoasterMode;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CoasterType CoasterModeAlt;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CartType CartType;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AlreadyTriggered;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool AlreadyInitialized;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool playerAfterOnEnter;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool playerBeforeOnEnter;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool alreadyGotPrevious;

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x1B1DEF8", Offset = "0x1B1DEF8", VA = "0x1B1DEF8")]
	protected bool IsPlayerBackward()
	{
		return default(bool);
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x1B1D6C4", Offset = "0x1B1D6C4", VA = "0x1B1D6C4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x1B20B3C", Offset = "0x1B20B3C", VA = "0x1B20B3C", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x1B20CE4", Offset = "0x1B20CE4", VA = "0x1B20CE4", Slot = "6")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x1B20E1C", Offset = "0x1B20E1C", VA = "0x1B20E1C", Slot = "7")]
	protected virtual void PlayerAfterOnEnter(Transform other)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x1B20E28", Offset = "0x1B20E28", VA = "0x1B20E28", Slot = "8")]
	protected virtual void PlayerBeforeOnEnter(Transform other, bool fromCheckpoint = false)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x1B20E58", Offset = "0x1B20E58", VA = "0x1B20E58", Slot = "9")]
	protected virtual void PlayerAfterOnExit(Transform other)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x1B20E7C", Offset = "0x1B20E7C", VA = "0x1B20E7C", Slot = "10")]
	protected virtual void PlayerBeforeOnExit(Transform other, bool fromCheckpoint = false)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x1B20EE8", Offset = "0x1B20EE8", VA = "0x1B20EE8")]
	public void FromCheckpoint(Transform other, bool backwards)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x1B1DA60", Offset = "0x1B1DA60", VA = "0x1B1DA60")]
	public bool VerifyConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x1B1DB44", Offset = "0x1B1DB44", VA = "0x1B1DB44", Slot = "11")]
	public virtual void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x1B1E034", Offset = "0x1B1E034", VA = "0x1B1E034")]
	protected TriggerOptimization()
	{
	}
}
[Token(Token = "0x20002B5")]
public class TriggerPlayerChain : TrackFollower
{
	[Token(Token = "0x20002B6")]
	public enum PlayerChainAction
	{
		[Token(Token = "0x400148C")]
		None,
		[Token(Token = "0x400148D")]
		Start,
		[Token(Token = "0x400148E")]
		Stop
	}

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PlayerChainAction State;

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x1B2103C", Offset = "0x1B2103C", VA = "0x1B2103C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x1B2111C", Offset = "0x1B2111C", VA = "0x1B2111C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x1B211FC", Offset = "0x1B211FC", VA = "0x1B211FC")]
	public TriggerPlayerChain()
	{
	}
}
[Token(Token = "0x20002B7")]
public class TriggerPostProcessing : TriggerOptimization
{
	[Token(Token = "0x20002B8")]
	[CompilerGenerated]
	private sealed class <RetriveOriginalIntensity>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x1B21430", Offset = "0x1B21430", VA = "0x1B21430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1B21478", Offset = "0x1B21478", VA = "0x1B21478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1B2139C", Offset = "0x1B2139C", VA = "0x1B2139C")]
		[DebuggerHidden]
		public <RetriveOriginalIntensity>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1B213DC", Offset = "0x1B213DC", VA = "0x1B213DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1B213E0", Offset = "0x1B213E0", VA = "0x1B213E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1B21438", Offset = "0x1B21438", VA = "0x1B21438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public float BloomIntensity;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BloomThreshold;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ColorPostExposure;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Space]
	public float Transition;

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x1B21204", Offset = "0x1B21204", VA = "0x1B21204", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x1B21254", Offset = "0x1B21254", VA = "0x1B21254")]
	private void Start()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x1B212CC", Offset = "0x1B212CC", VA = "0x1B212CC", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x1B2133C", Offset = "0x1B2133C", VA = "0x1B2133C")]
	[IteratorStateMachine(typeof(<RetriveOriginalIntensity>d__7))]
	private IEnumerator RetriveOriginalIntensity()
	{
		return null;
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x1B213C4", Offset = "0x1B213C4", VA = "0x1B213C4")]
	public TriggerPostProcessing()
	{
	}
}
[Token(Token = "0x20002B9")]
public class TriggerRenderer : TriggerOptimization
{
	[Token(Token = "0x20002BA")]
	[CompilerGenerated]
	private sealed class <UpdateSlowly>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriggerRenderer <>4__this;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool fromCheckpoint;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <maxInteractions>5__2;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x1B234F0", Offset = "0x1B234F0", VA = "0x1B234F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x1B23538", Offset = "0x1B23538", VA = "0x1B23538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1B22634", Offset = "0x1B22634", VA = "0x1B22634")]
		[DebuggerHidden]
		public <UpdateSlowly>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1B229D4", Offset = "0x1B229D4", VA = "0x1B229D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1B229D8", Offset = "0x1B229D8", VA = "0x1B229D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1B234F8", Offset = "0x1B234F8", VA = "0x1B234F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[Header("Trigger Renderer")]
	[Space(5f)]
	public bool ActivateImmediate;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RenderTransform;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool activateImmediateToUse;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, Renderer[]> listOfRenderList;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, SplineFollower[]> listOfSplineFollowers;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<int, SplineFollowerTimeline[]> listOfSplineFollowerTimelines;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<int, VA_Mesh[]> listOfVaMeshList;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Dictionary<int, PlayableDirector> listOfTimelines;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Dictionary<int, Light[]> listOfLightsList;

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x1B21480", Offset = "0x1B21480", VA = "0x1B21480")]
	public static void ResetLists()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x1B216CC", Offset = "0x1B216CC", VA = "0x1B216CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x1B216D0", Offset = "0x1B216D0", VA = "0x1B216D0")]
	public void Init()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x1B225A4", Offset = "0x1B225A4", VA = "0x1B225A4")]
	[IteratorStateMachine(typeof(<UpdateSlowly>d__12))]
	private IEnumerator UpdateSlowly(int id, bool fromCheckpoint)
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x1B2265C", Offset = "0x1B2265C", VA = "0x1B2265C", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x1B22780", Offset = "0x1B22780", VA = "0x1B22780")]
	public TriggerRenderer()
	{
	}
}
[Token(Token = "0x20002BB")]
public class TriggerRenderScale : MonoBehaviour
{
	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Scale;

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x1B23540", Offset = "0x1B23540", VA = "0x1B23540")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x1B23544", Offset = "0x1B23544", VA = "0x1B23544")]
	public TriggerRenderScale()
	{
	}
}
[Token(Token = "0x20002BC")]
public class TriggerRenderSettingsEvent : TriggerOptimization
{
	[Token(Token = "0x20002BD")]
	[CompilerGenerated]
	private sealed class <DoActionSlowly>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerRenderSettingsEvent <>4__this;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform other;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool fromCheckpoint;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color <initialSkyboxColor>5__2;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <initialSkyboxBlend>5__3;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <initialAmbientIntensity>5__4;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color <initialSkyColor>5__5;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Color <initialColor>5__6;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float <initialStartDistance>5__7;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <initialEndDistance>5__8;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float <initialFogDensity>5__9;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float <interval>5__10;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <timeToGo>5__11;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x1B23DA0", Offset = "0x1B23DA0", VA = "0x1B23DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x1B23DE8", Offset = "0x1B23DE8", VA = "0x1B23DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1B23964", Offset = "0x1B23964", VA = "0x1B23964")]
		[DebuggerHidden]
		public <DoActionSlowly>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x1B239A4", Offset = "0x1B239A4", VA = "0x1B239A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1B239A8", Offset = "0x1B239A8", VA = "0x1B239A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1B23DA8", Offset = "0x1B23DA8", VA = "0x1B23DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool EnabledFog;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool ChangeSkyColor;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color SkyColor;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ChangeAmbientIntensity;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float AmbientIntensity;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool ChangeColor;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color Color;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool ChangeMode;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FogMode Mode;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool ChangeStartDistance;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float StartDistance;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool ChangeEndDistance;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float EndDistance;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool ChangeDensity;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Density;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool ChangeSkyboxColor;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color SkyboxColor;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool ChangeSkyboxBlend;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float SkyboxBlend;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Space]
	public float Transition;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Another Trigger that should Play after this.")]
	public TriggerRenderSettingsEvent PlayChained;

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1B23554", Offset = "0x1B23554", VA = "0x1B23554")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x1B23560", Offset = "0x1B23560", VA = "0x1B23560", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1B23750", Offset = "0x1B23750", VA = "0x1B23750")]
	public void DoActionImmediately(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x1B236B4", Offset = "0x1B236B4", VA = "0x1B236B4")]
	[IteratorStateMachine(typeof(<DoActionSlowly>d__24))]
	public IEnumerator DoActionSlowly(Transform other, bool fromCheckpoint)
	{
		return null;
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x1B2398C", Offset = "0x1B2398C", VA = "0x1B2398C")]
	public TriggerRenderSettingsEvent()
	{
	}
}
[Token(Token = "0x20002BE")]
public class TriggerRestartSplineFollower : MonoBehaviour
{
	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineFollower Object;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartPosition;

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x1B23DF0", Offset = "0x1B23DF0", VA = "0x1B23DF0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x1B23E70", Offset = "0x1B23E70", VA = "0x1B23E70")]
	public TriggerRestartSplineFollower()
	{
	}
}
[Token(Token = "0x20002BF")]
public class TriggerRigidbody : MonoBehaviour
{
	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("All Fake Collision settings will be ignored.")]
	[Header("Real Collision")]
	public bool UseRealCollision;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The value is in Seconds. Set -1 to never destroy the colliders.")]
	public float DestroyCollidersAfter;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Impact the TimeScale for a short time. Set 1 to have no impact.")]
	public float TimeScaleBurst;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Fake Collision")]
	[SerializeField]
	private Transform[] objectsTransform;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(5f)]
	public bool UseGravity;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[Space(5f)]
	public bool AddExplosionForce;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ExplosionForce;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ExplosionRadius;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Space(5f)]
	public bool AddTorque;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Torque;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomTorque;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1B23E78", Offset = "0x1B23E78", VA = "0x1B23E78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x1B2402C", Offset = "0x1B2402C", VA = "0x1B2402C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x1B2413C", Offset = "0x1B2413C", VA = "0x1B2413C")]
	public TriggerRigidbody()
	{
	}
}
[Token(Token = "0x20002C0")]
public class TriggerSkybox : TriggerOptimization
{
	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriggerCameraFar Previous;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material setSkybox;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material setSkyboxPrevious;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material setSkyboxToUse;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera[] cameras;

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x1B2416C", Offset = "0x1B2416C", VA = "0x1B2416C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1B24178", Offset = "0x1B24178", VA = "0x1B24178", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1B2445C", Offset = "0x1B2445C", VA = "0x1B2445C")]
	public TriggerSkybox()
	{
	}
}
[Token(Token = "0x20002C1")]
public class TriggerSound : MonoBehaviour
{
	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AlreadyTriggered;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool AlreadyInitialized;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool DoMultipleTimes;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CoasterType CoasterMode;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CoasterType CoasterModeAlt;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CartType CartType;

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1B24474", Offset = "0x1B24474", VA = "0x1B24474", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1B24480", Offset = "0x1B24480", VA = "0x1B24480", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1B24518", Offset = "0x1B24518", VA = "0x1B24518")]
	public bool VerifyConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x1B245FC", Offset = "0x1B245FC", VA = "0x1B245FC", Slot = "6")]
	public virtual void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1B20620", Offset = "0x1B20620", VA = "0x1B20620")]
	public TriggerSound()
	{
	}
}
[Token(Token = "0x20002C2")]
[RequireComponent(typeof(Collider))]
[RequireComponent(typeof(AudioSource))]
public class TriggerSoundArray : TriggerSound
{
	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip lastClip;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool avoidRepetition;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitchMin;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pitchMax;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] clips;

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x1B24784", Offset = "0x1B24784", VA = "0x1B24784", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x1B2483C", Offset = "0x1B2483C", VA = "0x1B2483C", Slot = "6")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x1B249D8", Offset = "0x1B249D8", VA = "0x1B249D8")]
	private void pickClip()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x1B24B28", Offset = "0x1B24B28", VA = "0x1B24B28")]
	private void changePitch()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x1B24B5C", Offset = "0x1B24B5C", VA = "0x1B24B5C")]
	public TriggerSoundArray()
	{
	}
}
[Token(Token = "0x20002C3")]
public class TriggerSoundExternal : TriggerSound
{
	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x1B24B88", Offset = "0x1B24B88", VA = "0x1B24B88", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x1B24C40", Offset = "0x1B24C40", VA = "0x1B24C40", Slot = "6")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1B24D8C", Offset = "0x1B24D8C", VA = "0x1B24D8C")]
	public TriggerSoundExternal()
	{
	}
}
[Token(Token = "0x20002C4")]
public class TriggerSoundMixer : MonoBehaviour
{
	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AlreadyInitialized;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CoasterType CoasterMode;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CartType CartType;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixerGroup audioMixer;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool changeAllAudioSourcesFromGameObject;

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x1B24DAC", Offset = "0x1B24DAC", VA = "0x1B24DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1B24DB8", Offset = "0x1B24DB8", VA = "0x1B24DB8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x1B24F08", Offset = "0x1B24F08", VA = "0x1B24F08")]
	public bool VerifyConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x1B24FE0", Offset = "0x1B24FE0", VA = "0x1B24FE0")]
	public TriggerSoundMixer()
	{
	}
}
[Token(Token = "0x20002C5")]
public class TriggerSoundtrack : MonoBehaviour
{
	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Soundtrack;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Volume;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PlayOnStart;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int SamplesOffset;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool wasPlayingBeforePause;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CoasterType CoasterMode;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CoasterType CoasterModeAlt;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CartType CartType;

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x1B24FF0", Offset = "0x1B24FF0", VA = "0x1B24FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1B24FFC", Offset = "0x1B24FFC", VA = "0x1B24FFC")]
	public bool VerifyConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x1B250C0", Offset = "0x1B250C0", VA = "0x1B250C0", Slot = "4")]
	public virtual void DoAction()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x1B25310", Offset = "0x1B25310", VA = "0x1B25310")]
	private void OnPlay()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x1B25404", Offset = "0x1B25404", VA = "0x1B25404")]
	private void OnPause(bool pause)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x1B255E8", Offset = "0x1B255E8", VA = "0x1B255E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x1B256E8", Offset = "0x1B256E8", VA = "0x1B256E8")]
	public TriggerSoundtrack()
	{
	}
}
[Token(Token = "0x20002C6")]
public class TriggerSoundVolume : TriggerSound
{
	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float newVolume;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Overrides NewVolume and sets it as the original volume when scene was initiated")]
	public bool returnToOriginalVolume;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("How long to reach NewVolume, in seconds")]
	public float duration;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Volume behavior over time")]
	public AnimationCurve curve;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("AudioSource stops playing if volume reaches 0; AudioSource starts playing if volume is not 0")]
	public bool changeState;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float originalVolume;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float oldVolume;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float startTime;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float endTime;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 curveValue;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool inAction;

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x1B25714", Offset = "0x1B25714", VA = "0x1B25714", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x1B258A4", Offset = "0x1B258A4", VA = "0x1B258A4")]
	public void Update()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x1B25A00", Offset = "0x1B25A00", VA = "0x1B25A00", Slot = "6")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x1B25AEC", Offset = "0x1B25AEC", VA = "0x1B25AEC")]
	public TriggerSoundVolume()
	{
	}
}
[Token(Token = "0x20002C7")]
public class TriggerStartCart : MonoBehaviour
{
	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZenFulcrum.Track.Track.SpeedAndForce startingForce;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZenFulcrum.Track.Track track;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrackCart cart;

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x1B25B10", Offset = "0x1B25B10", VA = "0x1B25B10")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x1B25BB0", Offset = "0x1B25BB0", VA = "0x1B25BB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x1B25D54", Offset = "0x1B25D54", VA = "0x1B25D54")]
	public TriggerStartCart()
	{
	}
}
[Token(Token = "0x20002C8")]
public class TriggerStopCart : MonoBehaviour
{
	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZenFulcrum.Track.Track.SpeedAndForce stoppingForce;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZenFulcrum.Track.Track track;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TrackCart cart;

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x1B25DD8", Offset = "0x1B25DD8", VA = "0x1B25DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x1B25E78", Offset = "0x1B25E78", VA = "0x1B25E78")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x1B26020", Offset = "0x1B26020", VA = "0x1B26020")]
	public TriggerStopCart()
	{
	}
}
[Token(Token = "0x20002C9")]
public class TriggerTeleport : MonoBehaviour
{
	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoasterType CoasterMode;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZenFulcrum.Track.Track track;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Teleport;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool CartReversed;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 NewVelocityScale;

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x1B260A4", Offset = "0x1B260A4", VA = "0x1B260A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x1B26210", Offset = "0x1B26210", VA = "0x1B26210")]
	private void SnapToTrack()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x1B26378", Offset = "0x1B26378", VA = "0x1B26378")]
	public TriggerTeleport()
	{
	}
}
[Token(Token = "0x20002CA")]
public class TriggerTerrainTile : TriggerOptimization
{
	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material Material;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string AttributeName;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float NewTile;

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x1B263E0", Offset = "0x1B263E0", VA = "0x1B263E0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x1B26430", Offset = "0x1B26430", VA = "0x1B26430", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x1B265B4", Offset = "0x1B265B4", VA = "0x1B265B4")]
	public TriggerTerrainTile()
	{
	}
}
[Token(Token = "0x20002CB")]
public class TriggerTest : MonoBehaviour
{
	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x1B265CC", Offset = "0x1B265CC", VA = "0x1B265CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x1B26634", Offset = "0x1B26634", VA = "0x1B26634")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x1B2669C", Offset = "0x1B2669C", VA = "0x1B2669C")]
	public TriggerTest()
	{
	}
}
[Token(Token = "0x20002CC")]
public class TriggerTimeline : MonoBehaviour
{
	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Race Properties")]
	[Space(5f)]
	public bool ShouldBeOnCheckpoints;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Space(5f)]
	[Header("Constraints")]
	public bool NeverDoInverse;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool DoMultipleTimes;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CoasterType CoasterMode;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CoasterType CoasterModeAlt;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CartType CartType;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Behaviour")]
	[Space(5f)]
	public bool PlayImmediate;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool StopImmediate;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Trigger Timeline")]
	public PlayableDirector timeline;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool AlreadyTriggered;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool AlreadyInitialized;

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x1B266A4", Offset = "0x1B266A4", VA = "0x1B266A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x1B267C4", Offset = "0x1B267C4", VA = "0x1B267C4")]
	private void Timeline_stopped(PlayableDirector obj)
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x1B267E4", Offset = "0x1B267E4", VA = "0x1B267E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x1B26954", Offset = "0x1B26954", VA = "0x1B26954")]
	public void DoAction(bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x1B26864", Offset = "0x1B26864", VA = "0x1B26864")]
	public bool VerifyConditions()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x1B26B38", Offset = "0x1B26B38", VA = "0x1B26B38")]
	public TriggerTimeline()
	{
	}
}
[Token(Token = "0x20002CD")]
public class TriggerTrackSpeedChanger : TriggerOptimization
{
	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(5f)]
	[Header("Track Acceleration Speed And Force")]
	public ZenFulcrum.Track.Track.SpeedAndForce startingForce;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Track Brakes Speed And Force")]
	public ZenFulcrum.Track.Track.SpeedAndForce stoppingForce;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Tracks To Change")]
	public ZenFulcrum.Track.Track[] Tracks;

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x1B26B58", Offset = "0x1B26B58", VA = "0x1B26B58", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x1B26BA8", Offset = "0x1B26BA8", VA = "0x1B26BA8", Slot = "11")]
	public override void DoAction(Transform other, bool fromCheckpoint)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1B26C94", Offset = "0x1B26C94", VA = "0x1B26C94")]
	private void Reset()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1B26CA0", Offset = "0x1B26CA0", VA = "0x1B26CA0")]
	public TriggerTrackSpeedChanger()
	{
	}
}
[Token(Token = "0x20002CE")]
public class MotionSicknessTutorialInterface : IController<MotionSicknessTutorialInterface>
{
	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1B26D5C", Offset = "0x1B26D5C", VA = "0x1B26D5C")]
	public void AddEvents()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1B270B4", Offset = "0x1B270B4", VA = "0x1B270B4")]
	private void OnShowTutorial()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1B2715C", Offset = "0x1B2715C", VA = "0x1B2715C")]
	private void OnIncreaseSmoothness()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x1B271C0", Offset = "0x1B271C0", VA = "0x1B271C0")]
	private void OnRemoveHelmet()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1B27294", Offset = "0x1B27294", VA = "0x1B27294")]
	private void OnRemoveBlinder()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1B27364", Offset = "0x1B27364", VA = "0x1B27364")]
	private void OnPutHelmetAndBlinder()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1B27438", Offset = "0x1B27438", VA = "0x1B27438")]
	public void OnDroneAnimationEnd()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x1B27874", Offset = "0x1B27874", VA = "0x1B27874")]
	public MotionSicknessTutorialInterface()
	{
	}
}
[Token(Token = "0x20002CF")]
public class TutorialUI : MonoBehaviour
{
	[Token(Token = "0x20002D0")]
	[CompilerGenerated]
	private sealed class <Hide>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialUI <>4__this;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x1B27DAC", Offset = "0x1B27DAC", VA = "0x1B27DAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x1B27DF4", Offset = "0x1B27DF4", VA = "0x1B27DF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1B27AD4", Offset = "0x1B27AD4", VA = "0x1B27AD4")]
		[DebuggerHidden]
		public <Hide>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1B27C28", Offset = "0x1B27C28", VA = "0x1B27C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1B27C2C", Offset = "0x1B27C2C", VA = "0x1B27C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1B27DB4", Offset = "0x1B27DB4", VA = "0x1B27DB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player Player;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool alreadyPlayed;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isShowing;

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x1B278BC", Offset = "0x1B278BC", VA = "0x1B278BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x1B279C8", Offset = "0x1B279C8", VA = "0x1B279C8")]
	private void Show()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x1B27A60", Offset = "0x1B27A60", VA = "0x1B27A60")]
	[IteratorStateMachine(typeof(<Hide>d__6))]
	private IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x1B27AFC", Offset = "0x1B27AFC", VA = "0x1B27AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x1B27C20", Offset = "0x1B27C20", VA = "0x1B27C20")]
	public TutorialUI()
	{
	}
}
[Token(Token = "0x20002D1")]
public class UnvisibleMeshCutter : MonoBehaviour
{
	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float threshold;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool applyToCollider;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool includeRamSpline;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool includeLakePolygon;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool includeTerrainFlag;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool generateUV2;

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1B27DFC", Offset = "0x1B27DFC", VA = "0x1B27DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1B27F4C", Offset = "0x1B27F4C", VA = "0x1B27F4C")]
	public UnvisibleMeshCutter()
	{
	}
}
[Token(Token = "0x20002D2")]
public class WorkaroundAudio3D : MonoBehaviour
{
	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip SilentClip;

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x1B27F5C", Offset = "0x1B27F5C", VA = "0x1B27F5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x1B2802C", Offset = "0x1B2802C", VA = "0x1B2802C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x1B281C8", Offset = "0x1B281C8", VA = "0x1B281C8")]
	public WorkaroundAudio3D()
	{
	}
}
[Token(Token = "0x20002D3")]
[ExecuteInEditMode]
public class ScreenSpaceSnow : MonoBehaviour
{
	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D SnowTexture;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color SnowColor;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SnowTextureScale;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float BottomThreshold;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float TopThreshold;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _material;

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x1B281D0", Offset = "0x1B281D0", VA = "0x1B281D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x1B282AC", Offset = "0x1B282AC", VA = "0x1B282AC")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x1B2849C", Offset = "0x1B2849C", VA = "0x1B2849C")]
	public ScreenSpaceSnow()
	{
	}
}
[Token(Token = "0x20002D4")]
public class SightCenterDetection : MonoBehaviour
{
	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer render;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform center;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minY;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxY;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float minX;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxX;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnSightEnter;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnSightExit;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera cam;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool onSight;

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x1B284C0", Offset = "0x1B284C0", VA = "0x1B284C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x1B284E4", Offset = "0x1B284E4", VA = "0x1B284E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x1B285AC", Offset = "0x1B285AC", VA = "0x1B285AC")]
	private void SightEnter()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x1B285DC", Offset = "0x1B285DC", VA = "0x1B285DC")]
	private void SightExit()
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x1B28608", Offset = "0x1B28608", VA = "0x1B28608")]
	public SightCenterDetection()
	{
	}
}
[Token(Token = "0x20002D5")]
public abstract class GameState : MonoBehaviour
{
	[Token(Token = "0x20002D6")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameState <>4__this;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool activateScene;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <lastProgres>5__2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x1B28984", Offset = "0x1B28984", VA = "0x1B28984", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0x1B289CC", Offset = "0x1B289CC", VA = "0x1B289CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1B286B8", Offset = "0x1B286B8", VA = "0x1B286B8")]
		[DebuggerHidden]
		public <LoadScene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1B28784", Offset = "0x1B28784", VA = "0x1B28784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x1B28788", Offset = "0x1B28788", VA = "0x1B28788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1B2898C", Offset = "0x1B2898C", VA = "0x1B2898C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D7")]
	[CompilerGenerated]
	private sealed class <ActivateScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameState <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x1B28AB0", Offset = "0x1B28AB0", VA = "0x1B28AB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1B28AF8", Offset = "0x1B28AF8", VA = "0x1B28AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1B28754", Offset = "0x1B28754", VA = "0x1B28754")]
		[DebuggerHidden]
		public <ActivateScene>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1B289D4", Offset = "0x1B289D4", VA = "0x1B289D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1B289D8", Offset = "0x1B289D8", VA = "0x1B289D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1B28AB8", Offset = "0x1B28AB8", VA = "0x1B28AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameStateEnum State;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncOperation async;

	[Token(Token = "0x600121E")]
	public abstract IEnumerator Enter(GameStateEnum OldState);

	[Token(Token = "0x600121F")]
	public abstract IEnumerator Exit(GameStateEnum NewState);

	[Token(Token = "0x6001220")]
	public abstract void UpdateState();

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1B2861C", Offset = "0x1B2861C", VA = "0x1B2861C")]
	[IteratorStateMachine(typeof(<LoadScene>d__5))]
	public IEnumerator LoadScene(string sceneName, bool activateScene = true)
	{
		return null;
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x1B286E0", Offset = "0x1B286E0", VA = "0x1B286E0")]
	[IteratorStateMachine(typeof(<ActivateScene>d__6))]
	public IEnumerator ActivateScene()
	{
		return null;
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x1B2877C", Offset = "0x1B2877C", VA = "0x1B2877C")]
	protected GameState()
	{
	}
}
[Token(Token = "0x20002D8")]
public enum GameStateEnum
{
	[Token(Token = "0x4001549")]
	LIMBO,
	[Token(Token = "0x400154A")]
	AUTHENTICATION,
	[Token(Token = "0x400154B")]
	LOADING,
	[Token(Token = "0x400154C")]
	LOADED,
	[Token(Token = "0x400154D")]
	PLAYING,
	[Token(Token = "0x400154E")]
	GAME_OVER
}
[Token(Token = "0x20002D9")]
public class StateMachine : MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	[CompilerGenerated]
	private sealed class <ChangeStateRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateMachine <>4__this;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameState NewState;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameStateEnum <OldState>5__2;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x1B29828", Offset = "0x1B29828", VA = "0x1B29828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x1B29870", Offset = "0x1B29870", VA = "0x1B29870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1B28FA0", Offset = "0x1B28FA0", VA = "0x1B28FA0")]
		[DebuggerHidden]
		public <ChangeStateRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1B2960C", Offset = "0x1B2960C", VA = "0x1B2960C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1B29610", Offset = "0x1B29610", VA = "0x1B29610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1B29830", Offset = "0x1B29830", VA = "0x1B29830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <QuitCurrentState>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateMachine <>4__this;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameStateEnum newState;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0x1B29960", Offset = "0x1B29960", VA = "0x1B29960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1B299A8", Offset = "0x1B299A8", VA = "0x1B299A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1B295DC", Offset = "0x1B295DC", VA = "0x1B295DC")]
		[DebuggerHidden]
		public <QuitCurrentState>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1B29878", Offset = "0x1B29878", VA = "0x1B29878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1B2987C", Offset = "0x1B2987C", VA = "0x1B2987C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1B29968", Offset = "0x1B29968", VA = "0x1B29968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<GameState> Scheduler;

	[Token(Token = "0x170001CE")]
	public bool IsInTransition
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1B28B0C", Offset = "0x1B28B0C", VA = "0x1B28B0C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1B28B00", Offset = "0x1B28B00", VA = "0x1B28B00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public GameState CurrentState
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1B28B1C", Offset = "0x1B28B1C", VA = "0x1B28B1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1B28B14", Offset = "0x1B28B14", VA = "0x1B28B14")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool IsOnSafeState
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1B28B24", Offset = "0x1B28B24", VA = "0x1B28B24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1B28B60", Offset = "0x1B28B60", VA = "0x1B28B60")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x1B28BF0", Offset = "0x1B28BF0", VA = "0x1B28BF0")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1B28C80", Offset = "0x1B28C80", VA = "0x1B28C80")]
	public void SetFirstState(GameState NewState)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1B28D40", Offset = "0x1B28D40", VA = "0x1B28D40")]
	public bool HasLoadingOnScheduler()
	{
		return default(bool);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x1B28DDC", Offset = "0x1B28DDC", VA = "0x1B28DDC")]
	public void ChangeState(GameState NewState)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x1B28F10", Offset = "0x1B28F10", VA = "0x1B28F10")]
	[IteratorStateMachine(typeof(<ChangeStateRoutine>d__16))]
	protected IEnumerator ChangeStateRoutine(GameState NewState)
	{
		return null;
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x1B28FC8", Offset = "0x1B28FC8", VA = "0x1B28FC8")]
	protected void RemoteUpdateState(GameStateEnum newState)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1B294A4", Offset = "0x1B294A4", VA = "0x1B294A4")]
	protected void ChangeToTheNextState()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x1B29558", Offset = "0x1B29558", VA = "0x1B29558")]
	[IteratorStateMachine(typeof(<QuitCurrentState>d__19))]
	public IEnumerator QuitCurrentState(GameStateEnum newState)
	{
		return null;
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x1B29604", Offset = "0x1B29604", VA = "0x1B29604")]
	public StateMachine()
	{
	}
}
[Token(Token = "0x20002DC")]
public class AuthenticationState : GameState
{
	[Token(Token = "0x20002DD")]
	[CompilerGenerated]
	private sealed class <Enter>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timeout>5__2;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <maximumTimeout>5__3;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1B29F00", Offset = "0x1B29F00", VA = "0x1B29F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x1B29F48", Offset = "0x1B29F48", VA = "0x1B29F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1B29A1C", Offset = "0x1B29A1C", VA = "0x1B29A1C")]
		[DebuggerHidden]
		public <Enter>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x1B29B24", Offset = "0x1B29B24", VA = "0x1B29B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1B29B28", Offset = "0x1B29B28", VA = "0x1B29B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1B29F08", Offset = "0x1B29F08", VA = "0x1B29F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[CompilerGenerated]
	private sealed class <Exit>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x1B29FA4", Offset = "0x1B29FA4", VA = "0x1B29FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x1B29FEC", Offset = "0x1B29FEC", VA = "0x1B29FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1B29AA4", Offset = "0x1B29AA4", VA = "0x1B29AA4")]
		[DebuggerHidden]
		public <Exit>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1B29F50", Offset = "0x1B29F50", VA = "0x1B29F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1B29F54", Offset = "0x1B29F54", VA = "0x1B29F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1B29FAC", Offset = "0x1B29FAC", VA = "0x1B29FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float TIMEOUT;

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x1B299B0", Offset = "0x1B299B0", VA = "0x1B299B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x1B299BC", Offset = "0x1B299BC", VA = "0x1B299BC", Slot = "4")]
	[IteratorStateMachine(typeof(<Enter>d__2))]
	public override IEnumerator Enter(GameStateEnum OldState)
	{
		return null;
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x1B29A44", Offset = "0x1B29A44", VA = "0x1B29A44", Slot = "5")]
	[IteratorStateMachine(typeof(<Exit>d__3))]
	public override IEnumerator Exit(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x1B29ACC", Offset = "0x1B29ACC", VA = "0x1B29ACC", Slot = "6")]
	public override void UpdateState()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x1B29AD0", Offset = "0x1B29AD0", VA = "0x1B29AD0")]
	public AuthenticationState()
	{
	}
}
[Token(Token = "0x20002DF")]
public class LimboState : GameState
{
	[Token(Token = "0x20002E0")]
	[CompilerGenerated]
	private sealed class <Enter>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x1B2A174", Offset = "0x1B2A174", VA = "0x1B2A174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x1B2A1BC", Offset = "0x1B2A1BC", VA = "0x1B2A1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1B2A05C", Offset = "0x1B2A05C", VA = "0x1B2A05C")]
		[DebuggerHidden]
		public <Enter>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1B2A118", Offset = "0x1B2A118", VA = "0x1B2A118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1B2A11C", Offset = "0x1B2A11C", VA = "0x1B2A11C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1B2A17C", Offset = "0x1B2A17C", VA = "0x1B2A17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E1")]
	[CompilerGenerated]
	private sealed class <Exit>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x1B2A218", Offset = "0x1B2A218", VA = "0x1B2A218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x1B2A260", Offset = "0x1B2A260", VA = "0x1B2A260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1B2A0E4", Offset = "0x1B2A0E4", VA = "0x1B2A0E4")]
		[DebuggerHidden]
		public <Exit>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1B2A1C4", Offset = "0x1B2A1C4", VA = "0x1B2A1C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1B2A1C8", Offset = "0x1B2A1C8", VA = "0x1B2A1C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1B2A220", Offset = "0x1B2A220", VA = "0x1B2A220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1B29FF4", Offset = "0x1B29FF4", VA = "0x1B29FF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x1B29FFC", Offset = "0x1B29FFC", VA = "0x1B29FFC", Slot = "4")]
	[IteratorStateMachine(typeof(<Enter>d__1))]
	public override IEnumerator Enter(GameStateEnum OldState)
	{
		return null;
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x1B2A084", Offset = "0x1B2A084", VA = "0x1B2A084", Slot = "5")]
	[IteratorStateMachine(typeof(<Exit>d__2))]
	public override IEnumerator Exit(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1B2A10C", Offset = "0x1B2A10C", VA = "0x1B2A10C", Slot = "6")]
	public override void UpdateState()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1B2A110", Offset = "0x1B2A110", VA = "0x1B2A110")]
	public LimboState()
	{
	}
}
[Token(Token = "0x20002E2")]
public class LoadedState : GameState
{
	[Token(Token = "0x20002E3")]
	[CompilerGenerated]
	private sealed class <Enter>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedState <>4__this;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <startTutorial>5__2;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001285")]
			[Address(RVA = "0x1B2BF9C", Offset = "0x1B2BF9C", VA = "0x1B2BF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x1B2BFE4", Offset = "0x1B2BFE4", VA = "0x1B2BFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1B2A308", Offset = "0x1B2A308", VA = "0x1B2A308")]
		[DebuggerHidden]
		public <Enter>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1B2AE68", Offset = "0x1B2AE68", VA = "0x1B2AE68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1B2AE6C", Offset = "0x1B2AE6C", VA = "0x1B2AE6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1B2BFA4", Offset = "0x1B2BFA4", VA = "0x1B2BFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E4")]
	[CompilerGenerated]
	private sealed class <StartTutorialAfterAWhile>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x1B2C0FC", Offset = "0x1B2C0FC", VA = "0x1B2C0FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x1B2C144", Offset = "0x1B2C144", VA = "0x1B2C144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1B2A7D4", Offset = "0x1B2A7D4", VA = "0x1B2A7D4")]
		[DebuggerHidden]
		public <StartTutorialAfterAWhile>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1B2BFEC", Offset = "0x1B2BFEC", VA = "0x1B2BFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1B2BFF0", Offset = "0x1B2BFF0", VA = "0x1B2BFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1B2C104", Offset = "0x1B2C104", VA = "0x1B2C104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[CompilerGenerated]
	private sealed class <WaitForEverybodyOnRaceMultiplayerToStartRace>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RideType currentRideType;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadedState <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x1B2C290", Offset = "0x1B2C290", VA = "0x1B2C290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x1B2C2D8", Offset = "0x1B2C2D8", VA = "0x1B2C2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1B2A880", Offset = "0x1B2A880", VA = "0x1B2A880")]
		[DebuggerHidden]
		public <WaitForEverybodyOnRaceMultiplayerToStartRace>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1B2C14C", Offset = "0x1B2C14C", VA = "0x1B2C14C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1B2C150", Offset = "0x1B2C150", VA = "0x1B2C150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1B2C298", Offset = "0x1B2C298", VA = "0x1B2C298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[CompilerGenerated]
	private sealed class <ShowCar>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedState <>4__this;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Seat <companionSeat>5__2;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x1B2CCAC", Offset = "0x1B2CCAC", VA = "0x1B2CCAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x1B2CCF4", Offset = "0x1B2CCF4", VA = "0x1B2CCF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1B2AC14", Offset = "0x1B2AC14", VA = "0x1B2AC14")]
		[DebuggerHidden]
		public <ShowCar>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1B2C2E0", Offset = "0x1B2C2E0", VA = "0x1B2C2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1B2C2E4", Offset = "0x1B2C2E4", VA = "0x1B2C2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1B2CCB4", Offset = "0x1B2CCB4", VA = "0x1B2CCB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E7")]
	[CompilerGenerated]
	private sealed class <CreateCollectibles>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x1B2CF60", Offset = "0x1B2CF60", VA = "0x1B2CF60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x1B2CFA8", Offset = "0x1B2CFA8", VA = "0x1B2CFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1B2AC9C", Offset = "0x1B2AC9C", VA = "0x1B2AC9C")]
		[DebuggerHidden]
		public <CreateCollectibles>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1B2CCFC", Offset = "0x1B2CCFC", VA = "0x1B2CCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1B2CD00", Offset = "0x1B2CD00", VA = "0x1B2CD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1B2CF68", Offset = "0x1B2CF68", VA = "0x1B2CF68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E8")]
	[CompilerGenerated]
	private sealed class <Exit>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateEnum NewState;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadedState <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x1B2D2C0", Offset = "0x1B2D2C0", VA = "0x1B2D2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x1B2D308", Offset = "0x1B2D308", VA = "0x1B2D308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1B2ADC8", Offset = "0x1B2ADC8", VA = "0x1B2ADC8")]
		[DebuggerHidden]
		public <Exit>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1B2CFB0", Offset = "0x1B2CFB0", VA = "0x1B2CFB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1B2CFB4", Offset = "0x1B2CFB4", VA = "0x1B2CFB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1B2D2C8", Offset = "0x1B2D2C8", VA = "0x1B2D2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SafetyEvent OnFinishedEnterLoaded;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsLastScenarioCorrupted;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string CorruptedScenarioName;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _racePlayCoroutine;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MessageUIController.Message _currentPauseTutorialMessage;

	[Token(Token = "0x170001DD")]
	private Player player
	{
		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1B2A268", Offset = "0x1B2A268", VA = "0x1B2A268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1B2A288", Offset = "0x1B2A288", VA = "0x1B2A288")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x1B2A294", Offset = "0x1B2A294", VA = "0x1B2A294", Slot = "4")]
	[IteratorStateMachine(typeof(<Enter>d__8))]
	public override IEnumerator Enter(GameStateEnum OldState)
	{
		return null;
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1B2A330", Offset = "0x1B2A330", VA = "0x1B2A330")]
	private void OnPlayerPaused()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x1B2A5B8", Offset = "0x1B2A5B8", VA = "0x1B2A5B8")]
	private void AddExitTutorialEvents(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1B2A6A0", Offset = "0x1B2A6A0", VA = "0x1B2A6A0")]
	private void OnExitTutorial_OnYes(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x1B2A748", Offset = "0x1B2A748", VA = "0x1B2A748")]
	private void OnExitTutorial_OnNo(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1B2A774", Offset = "0x1B2A774", VA = "0x1B2A774")]
	[IteratorStateMachine(typeof(<StartTutorialAfterAWhile>d__13))]
	private IEnumerator StartTutorialAfterAWhile()
	{
		return null;
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1B2A7FC", Offset = "0x1B2A7FC", VA = "0x1B2A7FC")]
	[IteratorStateMachine(typeof(<WaitForEverybodyOnRaceMultiplayerToStartRace>d__14))]
	private IEnumerator WaitForEverybodyOnRaceMultiplayerToStartRace(RideType currentRideType)
	{
		return null;
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1B2A8A8", Offset = "0x1B2A8A8", VA = "0x1B2A8A8")]
	private void CorruptedFileMessage_OnOk_Clicked(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x1B2A91C", Offset = "0x1B2A91C", VA = "0x1B2A91C")]
	private void ChangeQualitySettings()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x1B2A974", Offset = "0x1B2A974", VA = "0x1B2A974")]
	private void AdjustRenderScale()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x1B2AA3C", Offset = "0x1B2AA3C", VA = "0x1B2AA3C")]
	public void OnPlay()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x1B2ABA0", Offset = "0x1B2ABA0", VA = "0x1B2ABA0")]
	[IteratorStateMachine(typeof(<ShowCar>d__19))]
	public IEnumerator ShowCar()
	{
		return null;
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x1B2AC3C", Offset = "0x1B2AC3C", VA = "0x1B2AC3C")]
	[IteratorStateMachine(typeof(<CreateCollectibles>d__20))]
	public IEnumerator CreateCollectibles()
	{
		return null;
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x1B2ACC4", Offset = "0x1B2ACC4", VA = "0x1B2ACC4")]
	public void ChangeCarStats(TrackCart trackCart)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x1B2AD44", Offset = "0x1B2AD44", VA = "0x1B2AD44", Slot = "5")]
	[IteratorStateMachine(typeof(<Exit>d__22))]
	public override IEnumerator Exit(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1B2ADF0", Offset = "0x1B2ADF0", VA = "0x1B2ADF0", Slot = "6")]
	public override void UpdateState()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1B2ADF4", Offset = "0x1B2ADF4", VA = "0x1B2ADF4")]
	public LoadedState()
	{
	}
}
[Token(Token = "0x20002E9")]
public class LoadingState : GameState
{
	[Token(Token = "0x20002EA")]
	[CompilerGenerated]
	private sealed class <Enter>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateEnum OldState;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadingState <>4__this;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <loadSceneAsync>5__2;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x1B2E0A4", Offset = "0x1B2E0A4", VA = "0x1B2E0A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x1B2E0EC", Offset = "0x1B2E0EC", VA = "0x1B2E0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1B2D3A0", Offset = "0x1B2D3A0", VA = "0x1B2D3A0")]
		[DebuggerHidden]
		public <Enter>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1B2D4EC", Offset = "0x1B2D4EC", VA = "0x1B2D4EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1B2D4F0", Offset = "0x1B2D4F0", VA = "0x1B2D4F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1B2E0AC", Offset = "0x1B2E0AC", VA = "0x1B2E0AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[CompilerGenerated]
	private sealed class <Exit>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateEnum NewState;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadingState <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x1B2E264", Offset = "0x1B2E264", VA = "0x1B2E264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x1B2E2AC", Offset = "0x1B2E2AC", VA = "0x1B2E2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1B2D44C", Offset = "0x1B2D44C", VA = "0x1B2D44C")]
		[DebuggerHidden]
		public <Exit>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1B2E0F4", Offset = "0x1B2E0F4", VA = "0x1B2E0F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1B2E0F8", Offset = "0x1B2E0F8", VA = "0x1B2E0F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1B2E26C", Offset = "0x1B2E26C", VA = "0x1B2E26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string LOADING_SCENE;

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x1B2D310", Offset = "0x1B2D310", VA = "0x1B2D310")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x1B2D31C", Offset = "0x1B2D31C", VA = "0x1B2D31C", Slot = "4")]
	[IteratorStateMachine(typeof(<Enter>d__2))]
	public override IEnumerator Enter(GameStateEnum OldState)
	{
		return null;
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1B2D3C8", Offset = "0x1B2D3C8", VA = "0x1B2D3C8", Slot = "5")]
	[IteratorStateMachine(typeof(<Exit>d__3))]
	public override IEnumerator Exit(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x1B2D474", Offset = "0x1B2D474", VA = "0x1B2D474", Slot = "6")]
	public override void UpdateState()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1B2D478", Offset = "0x1B2D478", VA = "0x1B2D478")]
	public LoadingState()
	{
	}
}
[Token(Token = "0x20002EC")]
public class PlayingState : GameState
{
	[Token(Token = "0x20002ED")]
	[CompilerGenerated]
	private sealed class <Enter>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayingState <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x1B316D4", Offset = "0x1B316D4", VA = "0x1B316D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x1B3171C", Offset = "0x1B3171C", VA = "0x1B3171C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1B3104C", Offset = "0x1B3104C", VA = "0x1B3104C")]
		[DebuggerHidden]
		public <Enter>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1B31074", Offset = "0x1B31074", VA = "0x1B31074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1B31078", Offset = "0x1B31078", VA = "0x1B31078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1B316DC", Offset = "0x1B316DC", VA = "0x1B316DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[CompilerGenerated]
	private sealed class <CheckMidgameTutorial>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayingState <>4__this;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <slow>5__2;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <raceTimer>5__4;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x1B320B0", Offset = "0x1B320B0", VA = "0x1B320B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x1B320F8", Offset = "0x1B320F8", VA = "0x1B320F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1B318A8", Offset = "0x1B318A8", VA = "0x1B318A8")]
		[DebuggerHidden]
		public <CheckMidgameTutorial>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1B318D0", Offset = "0x1B318D0", VA = "0x1B318D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1B318D4", Offset = "0x1B318D4", VA = "0x1B318D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1B320B8", Offset = "0x1B320B8", VA = "0x1B320B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[CompilerGenerated]
	private sealed class <Exit>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayingState <>4__this;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameStateEnum NewState;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x1B325BC", Offset = "0x1B325BC", VA = "0x1B325BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x1B32604", Offset = "0x1B32604", VA = "0x1B32604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x1B32100", Offset = "0x1B32100", VA = "0x1B32100")]
		[DebuggerHidden]
		public <Exit>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1B32128", Offset = "0x1B32128", VA = "0x1B32128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1B3212C", Offset = "0x1B3212C", VA = "0x1B3212C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1B325C4", Offset = "0x1B325C4", VA = "0x1B325C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F1")]
	[CompilerGenerated]
	private sealed class <ShowHelmetCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayingState <>4__this;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x1B3275C", Offset = "0x1B3275C", VA = "0x1B3275C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x1B327A4", Offset = "0x1B327A4", VA = "0x1B327A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1B3260C", Offset = "0x1B3260C", VA = "0x1B3260C")]
		[DebuggerHidden]
		public <ShowHelmetCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1B32634", Offset = "0x1B32634", VA = "0x1B32634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1B32638", Offset = "0x1B32638", VA = "0x1B32638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1B32764", Offset = "0x1B32764", VA = "0x1B32764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MessageUIController.Message _currentPauseTutorialMessage;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool midgameTutorial;

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1B2E2B4", Offset = "0x1B2E2B4", VA = "0x1B2E2B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x1B2E2C0", Offset = "0x1B2E2C0", VA = "0x1B2E2C0")]
	public void SetPlayerStarterOnEnd()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x1B2E370", Offset = "0x1B2E370", VA = "0x1B2E370", Slot = "4")]
	[IteratorStateMachine(typeof(<Enter>d__3))]
	public override IEnumerator Enter(GameStateEnum OldState)
	{
		return null;
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x1B2E3E4", Offset = "0x1B2E3E4", VA = "0x1B2E3E4")]
	public void UnsubscribePlayerEnd()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1B2E494", Offset = "0x1B2E494", VA = "0x1B2E494")]
	private bool ShouldShowMidGameTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1B2E560", Offset = "0x1B2E560", VA = "0x1B2E560")]
	[IteratorStateMachine(typeof(<CheckMidgameTutorial>d__7))]
	private IEnumerator CheckMidgameTutorial()
	{
		return null;
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1B2E5D4", Offset = "0x1B2E5D4", VA = "0x1B2E5D4")]
	private void StopMidgameTutorial(InputController.Hand hand)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1B2E828", Offset = "0x1B2E828", VA = "0x1B2E828")]
	public void OnEnd()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1B2EF48", Offset = "0x1B2EF48", VA = "0x1B2EF48")]
	private void SendScore()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1B2F2F0", Offset = "0x1B2F2F0", VA = "0x1B2F2F0", Slot = "5")]
	[IteratorStateMachine(typeof(<Exit>d__11))]
	public override IEnumerator Exit(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1B2F374", Offset = "0x1B2F374", VA = "0x1B2F374", Slot = "6")]
	public override void UpdateState()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1B2F378", Offset = "0x1B2F378", VA = "0x1B2F378")]
	private void ShowHelmet()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1B2F4C0", Offset = "0x1B2F4C0", VA = "0x1B2F4C0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x1B2F5D0", Offset = "0x1B2F5D0", VA = "0x1B2F5D0")]
	private void OnPlayerPaused()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1B2FA54", Offset = "0x1B2FA54", VA = "0x1B2FA54")]
	private void OnMenu()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1B2FCD4", Offset = "0x1B2FCD4", VA = "0x1B2FCD4")]
	private void PauseController_OnPause(bool pause)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1B2FD58", Offset = "0x1B2FD58", VA = "0x1B2FD58")]
	[IteratorStateMachine(typeof(<ShowHelmetCoroutine>d__18))]
	private IEnumerator ShowHelmetCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1B2F928", Offset = "0x1B2F928", VA = "0x1B2F928")]
	private void AddPauseMessageEvents(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1B2F840", Offset = "0x1B2F840", VA = "0x1B2F840")]
	private void AddExitTutorialEvents(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x1B2FDCC", Offset = "0x1B2FDCC", VA = "0x1B2FDCC")]
	private void RemovePauseMessageEvents(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x1B2FEF8", Offset = "0x1B2FEF8", VA = "0x1B2FEF8")]
	private void PauseMessage_OnPlay(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x1B2FF1C", Offset = "0x1B2FF1C", VA = "0x1B2FF1C")]
	private void PauseMessage_OnRestart(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x1B2FF98", Offset = "0x1B2FF98", VA = "0x1B2FF98")]
	private void OnExitTutorial_OnYes(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x1B30010", Offset = "0x1B30010", VA = "0x1B30010")]
	private void OnExitTutorial_OnNo(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x1B30040", Offset = "0x1B30040", VA = "0x1B30040")]
	private void PauseMessage_OnMenu(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x1B30044", Offset = "0x1B30044", VA = "0x1B30044")]
	public PlayingState()
	{
	}
}
[Token(Token = "0x20002F2")]
public struct telemetryPacket
{
	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public char[] apiMode;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint version;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public char[] game;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public char[] vehicleName;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public char[] location;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rpm;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxRpm;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int gear;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pitch;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float roll;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float yaw;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lateralVelocity;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lateralAcceleration;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float verticalAcceleration;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float longitudinalAcceleration;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float suspensionTravelFrontLeft;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float suspensionTravelFrontRight;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float suspensionTravelRearLeft;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float suspensionTravelRearRight;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public uint wheelTerrainFrontLeft;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public uint wheelTerrainFrontRight;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public uint wheelTerrainRearLeft;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public uint wheelTerrainRearRight;

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x1B327AC", Offset = "0x1B327AC", VA = "0x1B327AC")]
	public telemetryPacket(char[] pmode, uint pversion, char[] pgame, char[] pvehicleName, char[] plocation, float pspeed, float prpm, float pmaxRpm, int pgear, float ppitch, float proll, float pyaw, float plateralVelocity, float plateralAcceleration, float pverticalAcceleration, float plongitudinalAcceleration, float psuspensionTravelFrontLeft, float psuspensionTravelFrontRight, float psuspensionTravelRearLeft, float psuspensionTravelRearRight, uint pwheelTerrainFrontLeft, uint pwheelTerrainFrontRight, uint pwheelTerrainRearLeft, uint pwheelTerrainRearRight)
	{
	}
}
[Token(Token = "0x20002F3")]
public class SimRacingStudio : IController<SimRacingStudio>
{
	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint remoteEndPoint;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UdpClient udpClient;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static telemetryPacket tp;

	[Token(Token = "0x170001F6")]
	public bool HasStarted
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1B32A2C", Offset = "0x1B32A2C", VA = "0x1B32A2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x1B328E8", Offset = "0x1B328E8", VA = "0x1B328E8")]
	public void StartUDP(string srsHostIP, int srsHostPort)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x1B32A7C", Offset = "0x1B32A7C", VA = "0x1B32A7C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x1B32AE4", Offset = "0x1B32AE4", VA = "0x1B32AE4")]
	public void SendTelemetry(char[] pMode, uint pversion, char[] pgame, char[] pvehicleName, char[] plocation, float pspeed, float prpm, float pmaxRpm, int pgear, float ppitch, float proll, float pyaw, float plateralVelocity, float plateralAcceleration, float pverticalAcceleration, float plongitudinalAcceleration, float psuspensionTravelFrontLeft, float psuspensionTravelFrontRight, float psuspensionTravelRearLeft, float psuspensionTravelRearRight, uint pwheelTerrainFrontLeft, uint pwheelTerrainFrontRight, uint pwheelTerrainRearLeft, uint pwheelTerrainRearRight)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x1B32D9C", Offset = "0x1B32D9C", VA = "0x1B32D9C")]
	public SimRacingStudio()
	{
	}
}
[Token(Token = "0x20002F4")]
public class TelemetryController : IController<TelemetryController>, YawControllerDelegate
{
	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <YawVRSearchForDevices>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryController <>4__this;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeout>5__2;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x1B379CC", Offset = "0x1B379CC", VA = "0x1B379CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x1B37A14", Offset = "0x1B37A14", VA = "0x1B37A14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1B362E0", Offset = "0x1B362E0", VA = "0x1B362E0")]
		[DebuggerHidden]
		public <YawVRSearchForDevices>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1B378B0", Offset = "0x1B378B0", VA = "0x1B378B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1B378B4", Offset = "0x1B378B4", VA = "0x1B378B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1B379D4", Offset = "0x1B379D4", VA = "0x1B379D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string IpAddressEndPoint;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int TcpPort;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int UdpPort;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool sendPlayerData;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float buzzerRight;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float buzzerCenter;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float buzzerLeft;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float buzzerHz;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color ledColor;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float cartRotationOffset;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 simulatorRotationOffset;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 IMU;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GforceFilter gFF;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform cameraRotationOffset;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject YawControllerPrefab;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private YawController yawController;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<IPAddress, YawDevice> YawVrDevices;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isSearchingYawVRDevice;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool YawVRIsConnected;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UDPSend udpSend;

	[Token(Token = "0x170001F7")]
	public bool HasAnyDevice
	{
		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1B356A8", Offset = "0x1B356A8", VA = "0x1B356A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F8")]
	public bool HasYawVR
	{
		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1B35D44", Offset = "0x1B35D44", VA = "0x1B35D44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F9")]
	public bool HasBattery
	{
		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1B36050", Offset = "0x1B36050", VA = "0x1B36050")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FA")]
	public bool HasNetwork
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1B3482C", Offset = "0x1B3482C", VA = "0x1B3482C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FB")]
	public bool HasSRS
	{
		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1B34E78", Offset = "0x1B34E78", VA = "0x1B34E78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x1B32DE4", Offset = "0x1B32DE4", VA = "0x1B32DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x1B32EE8", Offset = "0x1B32EE8", VA = "0x1B32EE8")]
	public void StartDevice(float cartOffset)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x1B33234", Offset = "0x1B33234", VA = "0x1B33234")]
	public void StopDevice()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x1B33480", Offset = "0x1B33480", VA = "0x1B33480")]
	public void SetMotionData(float speed, Vector3 rot, Vector3 force, Vector3 angular, bool pause = false)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x1B337F0", Offset = "0x1B337F0", VA = "0x1B337F0")]
	private void ApplySpeedBuzzer(float speed)
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x1B34804", Offset = "0x1B34804", VA = "0x1B34804")]
	protected void OnReceiveLeftHaptics(float amplitude)
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x1B34818", Offset = "0x1B34818", VA = "0x1B34818")]
	protected void OnReceiveRightHaptics(float amplitude)
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x1B33984", Offset = "0x1B33984", VA = "0x1B33984")]
	private void SendYawVRData(float speed, Vector3 rot, Vector3 force)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x1B34258", Offset = "0x1B34258", VA = "0x1B34258")]
	private void SendUDPData(float speed, Vector3 rot, Vector3 force, Vector3 angular, bool pause)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x1B344B4", Offset = "0x1B344B4", VA = "0x1B344B4")]
	private void SendSimRacingStudioData(float speed, Vector3 rot, Vector3 force)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x1B34F50", Offset = "0x1B34F50", VA = "0x1B34F50")]
	public void SetPlayerData(Vector3 pos, Vector3 rot)
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x1B350F8", Offset = "0x1B350F8", VA = "0x1B350F8")]
	public void SetColor(Color c)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x1B35468", Offset = "0x1B35468", VA = "0x1B35468")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1B356D4", Offset = "0x1B356D4", VA = "0x1B356D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1B33114", Offset = "0x1B33114", VA = "0x1B33114")]
	public void RecenterOrientation()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1B359A8", Offset = "0x1B359A8", VA = "0x1B359A8")]
	private void VerifyCameraOffsets()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1B35DC0", Offset = "0x1B35DC0", VA = "0x1B35DC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x1B35FD0", Offset = "0x1B35FD0", VA = "0x1B35FD0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x1B36090", Offset = "0x1B36090", VA = "0x1B36090")]
	private void InstantiateYawVR()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x1B361E8", Offset = "0x1B361E8", VA = "0x1B361E8")]
	public void StartYawVR_Search()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x1B3626C", Offset = "0x1B3626C", VA = "0x1B3626C")]
	[IteratorStateMachine(typeof(<YawVRSearchForDevices>d__44))]
	private IEnumerator YawVRSearchForDevices()
	{
		return null;
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x1B36308", Offset = "0x1B36308", VA = "0x1B36308")]
	public void YawVRConnectToDevice(YawDevice device)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x1B36430", Offset = "0x1B36430", VA = "0x1B36430")]
	public void StartYawVR_Advanced()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x1B365CC", Offset = "0x1B365CC", VA = "0x1B365CC")]
	public void DisconnectYawVR()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x1B367B0", Offset = "0x1B367B0", VA = "0x1B367B0")]
	public string GetYawVRStatus()
	{
		return null;
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x1B368DC", Offset = "0x1B368DC", VA = "0x1B368DC")]
	public float GetYawVRBattery()
	{
		return default(float);
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x1B36A18", Offset = "0x1B36A18", VA = "0x1B36A18")]
	private bool UseYawVRFromCmd()
	{
		return default(bool);
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1B36C74", Offset = "0x1B36C74", VA = "0x1B36C74", Slot = "6")]
	public void ControllerStateChanged(ControllerState state)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1B36C94", Offset = "0x1B36C94", VA = "0x1B36C94", Slot = "7")]
	public void DidFoundDevice(YawDevice device)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1B36D44", Offset = "0x1B36D44", VA = "0x1B36D44", Slot = "8")]
	public void DidDisconnectFrom(YawDevice device)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1B36D48", Offset = "0x1B36D48", VA = "0x1B36D48", Slot = "9")]
	public void DeviceStoppedFromApp()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x1B36D4C", Offset = "0x1B36D4C", VA = "0x1B36D4C", Slot = "10")]
	public void DeviceStartedFromApp()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x1B36D50", Offset = "0x1B36D50", VA = "0x1B36D50")]
	public string GetNetworkError()
	{
		return null;
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x1B36DAC", Offset = "0x1B36DAC", VA = "0x1B36DAC")]
	public void StartNetwork()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x1B37038", Offset = "0x1B37038", VA = "0x1B37038")]
	public void StopNetwork()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x1B37044", Offset = "0x1B37044", VA = "0x1B37044")]
	private bool UseNetworkFromCmd()
	{
		return default(bool);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x1B37284", Offset = "0x1B37284", VA = "0x1B37284")]
	public void StartSRS()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x1B373A0", Offset = "0x1B373A0", VA = "0x1B373A0")]
	public void StopSRS()
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x1B373F0", Offset = "0x1B373F0", VA = "0x1B373F0")]
	private bool UseSRSFromCmd()
	{
		return default(bool);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x1B375EC", Offset = "0x1B375EC", VA = "0x1B375EC")]
	private bool UseMappedFileFromCmd()
	{
		return default(bool);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x1B376F8", Offset = "0x1B376F8", VA = "0x1B376F8")]
	public TelemetryController()
	{
	}
}
[Token(Token = "0x20002F7")]
public static class TelemetryUtils
{
	[Serializable]
	[Token(Token = "0x20002F8")]
	public struct MotionData
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float yaw;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float pitch;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float roll;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float heave;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float sway;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surge;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yawVelocity;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pitchVelocity;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rollVelocity;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rideName;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int carName;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int gunName;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float vibrationIntensity;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float vibrationFrequency;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool pause;

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1B3483C", Offset = "0x1B3483C", VA = "0x1B3483C")]
		public MotionData(float speed, float yaw, float pitch, float roll, float heave, float sway, float surge, float yawVelocity, float pitchVelocity, float rollVelocity, int rideName, int carName, int gunName, float vibrationIntensity, float vibrationFrequency, bool pause)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002F9")]
	public struct PlayerData
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float px;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float py;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float pz;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1B34FD4", Offset = "0x1B34FD4", VA = "0x1B34FD4")]
		public PlayerData(float px, float py, float pz, float rx, float ry, float rz)
		{
		}
	}

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] positionRegister;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] posTimeRegister;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int positionSamplesTaken;

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1B34878", Offset = "0x1B34878", VA = "0x1B34878")]
	public static byte[] ToByteArray(MotionData data)
	{
		return null;
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x1B34FE4", Offset = "0x1B34FE4", VA = "0x1B34FE4")]
	public static byte[] ToByteArray(PlayerData data)
	{
		return null;
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x1B336F4", Offset = "0x1B336F4", VA = "0x1B336F4")]
	public static Vector3 SignedVector(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1B337E4", Offset = "0x1B337E4", VA = "0x1B337E4")]
	public static Vector3 ApplyMultipliers(Vector3 rot, Vector3 multiplier)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x1B33760", Offset = "0x1B33760", VA = "0x1B33760")]
	public static Vector3 ApplyHalfSphere(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x1B37B6C", Offset = "0x1B37B6C", VA = "0x1B37B6C")]
	public static Vector3 Ground(Vector3 u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x1B37B74", Offset = "0x1B37B74", VA = "0x1B37B74")]
	public static float UnaryTrim(float w)
	{
		return default(float);
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1B37A1C", Offset = "0x1B37A1C", VA = "0x1B37A1C")]
	private static string FormatNumber(float f)
	{
		return null;
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x1B37AC4", Offset = "0x1B37AC4", VA = "0x1B37AC4")]
	private static string FormatInt(int f)
	{
		return null;
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x1B37B94", Offset = "0x1B37B94", VA = "0x1B37B94")]
	public static bool LinearAcceleration(out Vector3 vector, Vector3 position, int samples)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002FA")]
public class UDPReceive : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	public enum RideType
	{
		[Token(Token = "0x40015F5")]
		NONE,
		[Token(Token = "0x40015F6")]
		ROCK_FALLS,
		[Token(Token = "0x40015F7")]
		TREX_KINGDOM,
		[Token(Token = "0x40015F8")]
		WYVERN_SIEGE,
		[Token(Token = "0x40015F9")]
		SNOW_LAND,
		[Token(Token = "0x40015FA")]
		NEON_RIDER,
		[Token(Token = "0x40015FB")]
		HALLOWEEN,
		[Token(Token = "0x40015FC")]
		ARMAGEDDON,
		[Token(Token = "0x40015FD")]
		LOST_FOREST,
		[Token(Token = "0x40015FE")]
		DREAD_BLOOD,
		[Token(Token = "0x40015FF")]
		TUWHENA_VOLCANO,
		[Token(Token = "0x4001600")]
		TROPICAL_ISLAND,
		[Token(Token = "0x4001601")]
		NORTH_POLE,
		[Token(Token = "0x4001602")]
		TWILIGHT,
		[Token(Token = "0x4001603")]
		HAUNTED_CASTLE,
		[Token(Token = "0x4001604")]
		OASIS,
		[Token(Token = "0x4001605")]
		GREAT_CANYON,
		[Token(Token = "0x4001606")]
		SPACE_STATION,
		[Token(Token = "0x4001607")]
		SECRET_CAVE,
		[Token(Token = "0x4001608")]
		TUTORIAL,
		[Token(Token = "0x4001609")]
		LOBBY
	}

	[Token(Token = "0x20002FC")]
	public enum CartType
	{
		[Token(Token = "0x400160B")]
		RockFalls,
		[Token(Token = "0x400160C")]
		TRexKingdom,
		[Token(Token = "0x400160D")]
		WyvernSiege,
		[Token(Token = "0x400160E")]
		Snowland,
		[Token(Token = "0x400160F")]
		NeonRider,
		[Token(Token = "0x4001610")]
		Halloween,
		[Token(Token = "0x4001611")]
		Armageddon,
		[Token(Token = "0x4001612")]
		LostForest,
		[Token(Token = "0x4001613")]
		DreadBlood,
		[Token(Token = "0x4001614")]
		TuwhenaVolcano,
		[Token(Token = "0x4001615")]
		None,
		[Token(Token = "0x4001616")]
		TropicalIsland,
		[Token(Token = "0x4001617")]
		NorthPole,
		[Token(Token = "0x4001618")]
		Twilight,
		[Token(Token = "0x4001619")]
		HauntedCastle,
		[Token(Token = "0x400161A")]
		Oasis,
		[Token(Token = "0x400161B")]
		GreatCanyon,
		[Token(Token = "0x400161C")]
		SpaceStation,
		[Token(Token = "0x400161D")]
		SecretCave,
		[Token(Token = "0x400161E")]
		Skate,
		[Token(Token = "0x400161F")]
		TeaCup,
		[Token(Token = "0x4001620")]
		Rocket,
		[Token(Token = "0x4001621")]
		HangGlider,
		[Token(Token = "0x4001622")]
		Swing,
		[Token(Token = "0x4001623")]
		Empty,
		[Token(Token = "0x4001624")]
		Qatar,
		[Token(Token = "0x4001625")]
		Ecuador,
		[Token(Token = "0x4001626")]
		Senegal,
		[Token(Token = "0x4001627")]
		Netherlands,
		[Token(Token = "0x4001628")]
		England,
		[Token(Token = "0x4001629")]
		Iran,
		[Token(Token = "0x400162A")]
		USA,
		[Token(Token = "0x400162B")]
		Wales,
		[Token(Token = "0x400162C")]
		Argentina,
		[Token(Token = "0x400162D")]
		SaudiArabia,
		[Token(Token = "0x400162E")]
		Mexico,
		[Token(Token = "0x400162F")]
		Poland,
		[Token(Token = "0x4001630")]
		France,
		[Token(Token = "0x4001631")]
		Australia,
		[Token(Token = "0x4001632")]
		Denmark,
		[Token(Token = "0x4001633")]
		Tunisia,
		[Token(Token = "0x4001634")]
		Spain,
		[Token(Token = "0x4001635")]
		CostaRica,
		[Token(Token = "0x4001636")]
		Germany,
		[Token(Token = "0x4001637")]
		Japan,
		[Token(Token = "0x4001638")]
		Belgium,
		[Token(Token = "0x4001639")]
		Canada,
		[Token(Token = "0x400163A")]
		Morocco,
		[Token(Token = "0x400163B")]
		Croatia,
		[Token(Token = "0x400163C")]
		Brazil,
		[Token(Token = "0x400163D")]
		Serbia,
		[Token(Token = "0x400163E")]
		Switzerland,
		[Token(Token = "0x400163F")]
		Cameroon,
		[Token(Token = "0x4001640")]
		Portugal,
		[Token(Token = "0x4001641")]
		Ghana,
		[Token(Token = "0x4001642")]
		Uruguay,
		[Token(Token = "0x4001643")]
		SouthKorea
	}

	[Token(Token = "0x20002FD")]
	public enum GunType
	{
		[Token(Token = "0x4001645")]
		NONE,
		[Token(Token = "0x4001646")]
		SLINGSHOT,
		[Token(Token = "0x4001647")]
		DART,
		[Token(Token = "0x4001648")]
		CROSSBOW,
		[Token(Token = "0x4001649")]
		SNOW_GUN,
		[Token(Token = "0x400164A")]
		LASER_GUN,
		[Token(Token = "0x400164B")]
		TOILET_GUN,
		[Token(Token = "0x400164C")]
		CAL50,
		[Token(Token = "0x400164D")]
		WAND,
		[Token(Token = "0x400164E")]
		SHOTGUN,
		[Token(Token = "0x400164F")]
		TUWHENA_VOLCANO,
		[Token(Token = "0x4001650")]
		TROPICAL_ISLAND,
		[Token(Token = "0x4001651")]
		NORTH_POLE,
		[Token(Token = "0x4001652")]
		TWILIGHT,
		[Token(Token = "0x4001653")]
		HAUNTED_CASTLE,
		[Token(Token = "0x4001654")]
		OASIS,
		[Token(Token = "0x4001655")]
		GREAT_CANYON,
		[Token(Token = "0x4001656")]
		SPACE_STATION,
		[Token(Token = "0x4001657")]
		SECRET_CAVE,
		[Token(Token = "0x4001658")]
		CAL50_SUPRESSED
	}

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int port;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string lastReceivedUDPPacket;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Thread receiveThread;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UdpClient client;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IPEndPoint anyIP;

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1B37F38", Offset = "0x1B37F38", VA = "0x1B37F38")]
	public void Start()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1B380D4", Offset = "0x1B380D4", VA = "0x1B380D4")]
	private void ReceiveData()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1B38BB0", Offset = "0x1B38BB0", VA = "0x1B38BB0")]
	private float GetNumber(string prefix, string data)
	{
		return default(float);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1B38D2C", Offset = "0x1B38D2C", VA = "0x1B38D2C")]
	private int GetInt(string prefix, string data)
	{
		return default(int);
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1B38EA8", Offset = "0x1B38EA8", VA = "0x1B38EA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1B38EC4", Offset = "0x1B38EC4", VA = "0x1B38EC4")]
	public UDPReceive()
	{
	}
}
[Token(Token = "0x20002FE")]
public class UDPReceivePlayerData : MonoBehaviour
{
	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int port;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string lastReceivedUDPPacket;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UdpClient client;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IPEndPoint anyIP;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1B38F24", Offset = "0x1B38F24", VA = "0x1B38F24")]
	public void Start()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x1B39014", Offset = "0x1B39014", VA = "0x1B39014")]
	public void Update()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1B3959C", Offset = "0x1B3959C", VA = "0x1B3959C")]
	private float GetNumber(string prefix, string data)
	{
		return default(float);
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1B39718", Offset = "0x1B39718", VA = "0x1B39718")]
	public UDPReceivePlayerData()
	{
	}
}
[Token(Token = "0x20002FF")]
public class UDPSend
{
	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IPEndPoint remoteEndPoint;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UdpClient client;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ErrorMsg;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1B36E7C", Offset = "0x1B36E7C", VA = "0x1B36E7C")]
	public UDPSend(string ip, int port)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1B34D04", Offset = "0x1B34D04", VA = "0x1B34D04")]
	public void Send(byte[] data)
	{
	}
}
[Token(Token = "0x2000300")]
public class AchievementUI : MonoBehaviour
{
	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color BG_UNLOCKED_COLOR;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color BG_LOCKED_COLOR;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Achievement achievement;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image Image;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Background;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI Title;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI Description;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider Progress;

	[Token(Token = "0x170001FE")]
	public Achievement Achievement
	{
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1B39B5C", Offset = "0x1B39B5C", VA = "0x1B39B5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1B39778", Offset = "0x1B39778", VA = "0x1B39778")]
		set
		{
		}
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x1B39B64", Offset = "0x1B39B64", VA = "0x1B39B64")]
	public void Hide()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x1B39B88", Offset = "0x1B39B88", VA = "0x1B39B88")]
	public AchievementUI()
	{
	}
}
[Token(Token = "0x2000301")]
public class AchievementUIController : IController<AchievementUIController>
{
	[Token(Token = "0x2000304")]
	[CompilerGenerated]
	private sealed class <Show>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AchievementUIController <>4__this;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x1B3AFF4", Offset = "0x1B3AFF4", VA = "0x1B3AFF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x1B3B03C", Offset = "0x1B3B03C", VA = "0x1B3B03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1B3A1B8", Offset = "0x1B3A1B8", VA = "0x1B3A1B8")]
		[DebuggerHidden]
		public <Show>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1B3A910", Offset = "0x1B3A910", VA = "0x1B3A910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1B3A914", Offset = "0x1B3A914", VA = "0x1B3A914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1B3AFFC", Offset = "0x1B3AFFC", VA = "0x1B3AFFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000305")]
	[CompilerGenerated]
	private sealed class <Hide>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animate;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementUIController <>4__this;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x1B3B134", Offset = "0x1B3B134", VA = "0x1B3B134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x1B3B17C", Offset = "0x1B3B17C", VA = "0x1B3B17C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1B3A268", Offset = "0x1B3A268", VA = "0x1B3A268")]
		[DebuggerHidden]
		public <Hide>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1B3B044", Offset = "0x1B3B044", VA = "0x1B3B044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1B3B048", Offset = "0x1B3B048", VA = "0x1B3B048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1B3B13C", Offset = "0x1B3B13C", VA = "0x1B3B13C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float ANIMATION_WAIT_TIME;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject AchievementPanel;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup LayoutCanvasGroup;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider ProgressBar;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI ProgressLabel;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button2 NextPageButton;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button2 PreviousPageButton;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AreaSwipeDetection PageArea;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AchievementUI[] AchievementUIs;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Achievement[] Achievements;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalDone;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalAchivements;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int page;

	[Token(Token = "0x170001FF")]
	private float totalPercent
	{
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1B39CFC", Offset = "0x1B39CFC", VA = "0x1B39CFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000200")]
	private int maxPages
	{
		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1B3A290", Offset = "0x1B3A290", VA = "0x1B3A290")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x1B39BF4", Offset = "0x1B39BF4", VA = "0x1B39BF4")]
	public Achievement GetAchivementByID(string ID)
	{
		return null;
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x1B39D10", Offset = "0x1B39D10", VA = "0x1B39D10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x1B3A144", Offset = "0x1B3A144", VA = "0x1B3A144")]
	[IteratorStateMachine(typeof(<Show>d__17))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x1B3A1E0", Offset = "0x1B3A1E0", VA = "0x1B3A1E0")]
	[IteratorStateMachine(typeof(<Hide>d__18))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x1B3A304", Offset = "0x1B3A304", VA = "0x1B3A304")]
	public void NextPage()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x1B3A550", Offset = "0x1B3A550", VA = "0x1B3A550")]
	public void PreviousPage()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x1B3A344", Offset = "0x1B3A344", VA = "0x1B3A344")]
	private void ConfigAchivements()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1B3A584", Offset = "0x1B3A584", VA = "0x1B3A584")]
	public void AchievementPopup(string ID)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1B3A784", Offset = "0x1B3A784", VA = "0x1B3A784")]
	public AchievementUIController()
	{
	}
}
[Token(Token = "0x2000307")]
public class AvatarEditorSteamUIController : IController<AvatarEditorSteamUIController>
{
	[Token(Token = "0x2000308")]
	[CompilerGenerated]
	private sealed class <Show>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarEditorSteamUIController <>4__this;

		[Token(Token = "0x17000206")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x1B3BD68", Offset = "0x1B3BD68", VA = "0x1B3BD68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x1B3BDB0", Offset = "0x1B3BDB0", VA = "0x1B3BDB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1B3B3AC", Offset = "0x1B3B3AC", VA = "0x1B3B3AC")]
		[DebuggerHidden]
		public <Show>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1B3BA60", Offset = "0x1B3BA60", VA = "0x1B3BA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1B3BA64", Offset = "0x1B3BA64", VA = "0x1B3BA64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1B3BD70", Offset = "0x1B3BD70", VA = "0x1B3BD70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[CompilerGenerated]
	private sealed class <Hide>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarEditorSteamUIController <>4__this;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x17000208")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x1B3C148", Offset = "0x1B3C148", VA = "0x1B3C148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x1B3C190", Offset = "0x1B3C190", VA = "0x1B3C190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1B3B45C", Offset = "0x1B3B45C", VA = "0x1B3B45C")]
		[DebuggerHidden]
		public <Hide>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1B3BDB8", Offset = "0x1B3BDB8", VA = "0x1B3BDB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1B3BDBC", Offset = "0x1B3BDBC", VA = "0x1B3BDBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1B3C150", Offset = "0x1B3C150", VA = "0x1B3C150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Color MAX_COLOR;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Color MIN_COLOR;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Color MAX_COLOR_MIDDLE;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas AvatarEditorSteamCanvas;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup AvatarEditorSteamCanvasGroup;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpinningAnimation SpinningAnimation;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarUIItem[] AvatarImages;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentIndex;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x17000205")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1B3B1A8", Offset = "0x1B3B1A8", VA = "0x1B3B1A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x1B3B264", Offset = "0x1B3B264", VA = "0x1B3B264")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1B3B2CC", Offset = "0x1B3B2CC", VA = "0x1B3B2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x1B3B338", Offset = "0x1B3B338", VA = "0x1B3B338")]
	[IteratorStateMachine(typeof(<Show>d__14))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x1B3B3D4", Offset = "0x1B3B3D4", VA = "0x1B3B3D4")]
	[IteratorStateMachine(typeof(<Hide>d__15))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x1B3B484", Offset = "0x1B3B484", VA = "0x1B3B484")]
	private void GetCurrentIndex()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x1B3B48C", Offset = "0x1B3B48C", VA = "0x1B3B48C")]
	private void ChangeSpinningAnimation()
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x1B3B5D0", Offset = "0x1B3B5D0", VA = "0x1B3B5D0")]
	private void Fade(Image image, Color initial, Color final)
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x1B3B7A4", Offset = "0x1B3B7A4", VA = "0x1B3B7A4")]
	public void Previous_OnClick()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1B3B81C", Offset = "0x1B3B81C", VA = "0x1B3B81C")]
	public void Next_OnClick()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1B3B8A8", Offset = "0x1B3B8A8", VA = "0x1B3B8A8")]
	public void SaveAvatar_OnClick()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x1B3B9A0", Offset = "0x1B3B9A0", VA = "0x1B3B9A0")]
	public AvatarEditorSteamUIController()
	{
	}
}
[Token(Token = "0x200030B")]
public class AvatarEditorUIController : IController<AvatarEditorUIController>
{
	[Token(Token = "0x200030C")]
	[CompilerGenerated]
	private sealed class <Show>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarEditorUIController <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x1B3C64C", Offset = "0x1B3C64C", VA = "0x1B3C64C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x1B3C694", Offset = "0x1B3C694", VA = "0x1B3C694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1B3C354", Offset = "0x1B3C354", VA = "0x1B3C354")]
		[DebuggerHidden]
		public <Show>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1B3C4D0", Offset = "0x1B3C4D0", VA = "0x1B3C4D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1B3C4D4", Offset = "0x1B3C4D4", VA = "0x1B3C4D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1B3C654", Offset = "0x1B3C654", VA = "0x1B3C654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030D")]
	[CompilerGenerated]
	private sealed class <Hide>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animate;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AvatarEditorUIController <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x1B3C838", Offset = "0x1B3C838", VA = "0x1B3C838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x1B3C880", Offset = "0x1B3C880", VA = "0x1B3C880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1B3C404", Offset = "0x1B3C404", VA = "0x1B3C404")]
		[DebuggerHidden]
		public <Hide>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1B3C69C", Offset = "0x1B3C69C", VA = "0x1B3C69C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1B3C6A0", Offset = "0x1B3C6A0", VA = "0x1B3C6A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1B3C840", Offset = "0x1B3C840", VA = "0x1B3C840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas AvatarEditorCanvas;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup AvatarEditorCanvasGroup;

	[Token(Token = "0x1700020A")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1B3C1BC", Offset = "0x1B3C1BC", VA = "0x1B3C1BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1B3C278", Offset = "0x1B3C278", VA = "0x1B3C278")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x1B3C2E0", Offset = "0x1B3C2E0", VA = "0x1B3C2E0")]
	[IteratorStateMachine(typeof(<Show>d__6))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x1B3C37C", Offset = "0x1B3C37C", VA = "0x1B3C37C")]
	[IteratorStateMachine(typeof(<Hide>d__7))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x1B3C42C", Offset = "0x1B3C42C", VA = "0x1B3C42C")]
	public void Yes_OnClick()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x1B3C430", Offset = "0x1B3C430", VA = "0x1B3C430")]
	public void No_OnClick()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x1B3C488", Offset = "0x1B3C488", VA = "0x1B3C488")]
	public AvatarEditorUIController()
	{
	}
}
[Token(Token = "0x200030E")]
public class PremiumBundleUIController : IController<PremiumBundleUIController>
{
	[Token(Token = "0x200030F")]
	[CompilerGenerated]
	private sealed class <Show>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PremiumBundleUIController <>4__this;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000210")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x1B3D360", Offset = "0x1B3D360", VA = "0x1B3D360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x1B3D3A8", Offset = "0x1B3D3A8", VA = "0x1B3D3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1B3C93C", Offset = "0x1B3C93C", VA = "0x1B3C93C")]
		[DebuggerHidden]
		public <Show>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1B3CF20", Offset = "0x1B3CF20", VA = "0x1B3CF20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1B3CF24", Offset = "0x1B3CF24", VA = "0x1B3CF24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x1B3D368", Offset = "0x1B3D368", VA = "0x1B3D368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[CompilerGenerated]
	private sealed class <Hide>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PremiumBundleUIController <>4__this;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x1B3D6A8", Offset = "0x1B3D6A8", VA = "0x1B3D6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x1B3D6F0", Offset = "0x1B3D6F0", VA = "0x1B3D6F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1B3C9EC", Offset = "0x1B3C9EC", VA = "0x1B3C9EC")]
		[DebuggerHidden]
		public <Hide>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1B3D3B0", Offset = "0x1B3D3B0", VA = "0x1B3D3B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1B3D3B4", Offset = "0x1B3D3B4", VA = "0x1B3D3B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1B3D6B0", Offset = "0x1B3D6B0", VA = "0x1B3D6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000312")]
	[CompilerGenerated]
	private sealed class <DiscountTextAnimation>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PremiumBundleUIController <>4__this;

		[Token(Token = "0x17000214")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1B3D9A4", Offset = "0x1B3D9A4", VA = "0x1B3D9A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x1B3D9EC", Offset = "0x1B3D9EC", VA = "0x1B3D9EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1B3CDD8", Offset = "0x1B3CDD8", VA = "0x1B3CDD8")]
		[DebuggerHidden]
		public <DiscountTextAnimation>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1B3D750", Offset = "0x1B3D750", VA = "0x1B3D750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1B3D754", Offset = "0x1B3D754", VA = "0x1B3D754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x1B3D9AC", Offset = "0x1B3D9AC", VA = "0x1B3D9AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float ANIMATION_DELAY;

	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3 DISCOUNT_MINSIZE;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Vector3 DISCOUNT_MAXSIZE;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float DISCOUNT_ANIMATION_TIME;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PremiumBundlePanel;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI DiscountText;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI PriceText;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI NoLabel;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SalesObject;

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup[] CanvasGroups;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] ShowPosition;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] HidePosition;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource BundleSong;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Scenario ScenarioToBuy;

	[Token(Token = "0x1700020F")]
	public bool IsVisible
	{
		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1B3C888", Offset = "0x1B3C888", VA = "0x1B3C888")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x1B3C8C8", Offset = "0x1B3C8C8", VA = "0x1B3C8C8")]
	[IteratorStateMachine(typeof(<Show>d__17))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x1B3C964", Offset = "0x1B3C964", VA = "0x1B3C964")]
	[IteratorStateMachine(typeof(<Hide>d__18))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x1B3CA14", Offset = "0x1B3CA14", VA = "0x1B3CA14")]
	public void PlayBundleSong()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1B3CAAC", Offset = "0x1B3CAAC", VA = "0x1B3CAAC")]
	private void StopBundleSong()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x1B3CB38", Offset = "0x1B3CB38", VA = "0x1B3CB38")]
	private void PlaySong(float from, float to, float time, bool stopSongOnComplete)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1B3CCF4", Offset = "0x1B3CCF4", VA = "0x1B3CCF4")]
	public void YesButton_OnClick()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1B3CCF8", Offset = "0x1B3CCF8", VA = "0x1B3CCF8")]
	public void NoButton_OnClick()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x1B3CCFC", Offset = "0x1B3CCFC", VA = "0x1B3CCFC")]
	public void CloseButton_OnClick()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1B3CD64", Offset = "0x1B3CD64", VA = "0x1B3CD64")]
	[IteratorStateMachine(typeof(<DiscountTextAnimation>d__25))]
	public IEnumerator DiscountTextAnimation()
	{
		return null;
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x1B3CE00", Offset = "0x1B3CE00", VA = "0x1B3CE00")]
	public PremiumBundleUIController()
	{
	}
}
[Token(Token = "0x2000313")]
public class Button2 : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x2000314")]
	private enum group : byte
	{
		[Token(Token = "0x40016E1")]
		NO,
		[Token(Token = "0x40016E2")]
		G1,
		[Token(Token = "0x40016E3")]
		G2,
		[Token(Token = "0x40016E4")]
		G3,
		[Token(Token = "0x40016E5")]
		G4,
		[Token(Token = "0x40016E6")]
		G5,
		[Token(Token = "0x40016E7")]
		G6,
		[Token(Token = "0x40016E8")]
		G7,
		[Token(Token = "0x40016E9")]
		G8,
		[Token(Token = "0x40016EA")]
		G9
	}

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private group Group;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<group, Button2> current;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool interactable;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool isFirst;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Graphic TargetGraphic;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Sprites")]
	public bool UseSprites;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite Hovered;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite Pressed;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite Selected;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite Disabled;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Sprite Original;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Color")]
	public bool UseColors;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color HoveredColor;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color PressedColor;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color SelectedColor;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color DisabledColor;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public Color OriginalColor;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Header("Size")]
	public bool UseSize;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 HoveredScale;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 PressedScale;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2 SelectedScale;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector2 DisabledScale;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Vector2 OriginalScale;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Animation")]
	public float FadeDuration;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Audio")]
	public string AudioCategory;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip OnClickAudio;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip OnEnterAudio;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip OnExitAudio;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Action")]
	public UnityEvent OnClick;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public UnityEvent OnEnter;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent OnExit;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Action Click;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Action Enter;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Action Exit;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isHovering;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isDown;

	[Token(Token = "0x17000216")]
	public bool Interactable
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1B3DCC8", Offset = "0x1B3DCC8", VA = "0x1B3DCC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public Image Image
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1B3DDE4", Offset = "0x1B3DDE4", VA = "0x1B3DDE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000218")]
	private Color GetColor
	{
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1B3DF04", Offset = "0x1B3DF04", VA = "0x1B3DF04")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000219")]
	private Vector2 GetScale
	{
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1B3E0C4", Offset = "0x1B3E0C4", VA = "0x1B3E0C4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x1B3D9F4", Offset = "0x1B3D9F4", VA = "0x1B3D9F4")]
	public void SetCurrent()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1B3DEE0", Offset = "0x1B3DEE0", VA = "0x1B3DEE0")]
	private void SetColor(Color color)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1B3DF28", Offset = "0x1B3DF28", VA = "0x1B3DF28")]
	private void ChangeColor(Color color)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1B3E088", Offset = "0x1B3E088", VA = "0x1B3E088")]
	private void SetScale(Vector2 scale)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1B3E114", Offset = "0x1B3E114", VA = "0x1B3E114")]
	private void ChangeScale(Vector2 scale)
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1B3E230", Offset = "0x1B3E230", VA = "0x1B3E230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x1B3E5A4", Offset = "0x1B3E5A4", VA = "0x1B3E5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x1B3E918", Offset = "0x1B3E918", VA = "0x1B3E918")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x1B3EA5C", Offset = "0x1B3EA5C", VA = "0x1B3EA5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x1B3DB28", Offset = "0x1B3DB28", VA = "0x1B3DB28")]
	public void SetOriginal()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x1B3EB68", Offset = "0x1B3EB68", VA = "0x1B3EB68")]
	private void SetHovered()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x1B3EC3C", Offset = "0x1B3EC3C", VA = "0x1B3EC3C")]
	private void SetPressed()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x1B3DBF4", Offset = "0x1B3DBF4", VA = "0x1B3DBF4")]
	private void SetSelected()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x1B3DD10", Offset = "0x1B3DD10", VA = "0x1B3DD10")]
	private void SetDisabled()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x1B3ED10", Offset = "0x1B3ED10", VA = "0x1B3ED10")]
	private void PlayOnClickAudio()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x1B3ED74", Offset = "0x1B3ED74", VA = "0x1B3ED74")]
	private void PlayOnEnterAudio()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x1B3EDD8", Offset = "0x1B3EDD8", VA = "0x1B3EDD8")]
	private void PlayOnExitAudio()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x1B3EE3C", Offset = "0x1B3EE3C", VA = "0x1B3EE3C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x1B3EF84", Offset = "0x1B3EF84", VA = "0x1B3EF84", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x1B3F0C8", Offset = "0x1B3F0C8", VA = "0x1B3F0C8", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x1B3F15C", Offset = "0x1B3F15C", VA = "0x1B3F15C", Slot = "7")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x1B3F224", Offset = "0x1B3F224", VA = "0x1B3F224")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x1B3F374", Offset = "0x1B3F374", VA = "0x1B3F374")]
	public Button2()
	{
	}
}
[Token(Token = "0x2000315")]
public class CartUIController : IController<CartUIController>
{
	[Token(Token = "0x2000316")]
	[CompilerGenerated]
	private sealed class <Show>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CartUIController <>4__this;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1B410F8", Offset = "0x1B410F8", VA = "0x1B410F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1B41140", Offset = "0x1B41140", VA = "0x1B41140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1B3F758", Offset = "0x1B3F758", VA = "0x1B3F758")]
		[DebuggerHidden]
		public <Show>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1B40BA8", Offset = "0x1B40BA8", VA = "0x1B40BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1B40BAC", Offset = "0x1B40BAC", VA = "0x1B40BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x1B41100", Offset = "0x1B41100", VA = "0x1B41100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000317")]
	[CompilerGenerated]
	private sealed class <Hide>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CartUIController <>4__this;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1B41598", Offset = "0x1B41598", VA = "0x1B41598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x1B415E0", Offset = "0x1B415E0", VA = "0x1B415E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x1B3F808", Offset = "0x1B3F808", VA = "0x1B3F808")]
		[DebuggerHidden]
		public <Hide>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x1B41148", Offset = "0x1B41148", VA = "0x1B41148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1B4114C", Offset = "0x1B4114C", VA = "0x1B4114C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1B415A0", Offset = "0x1B415A0", VA = "0x1B415A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000319")]
	[CompilerGenerated]
	private sealed class <ChangeScenarioIcon>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CartUIController <>4__this;

		[Token(Token = "0x17000220")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x1B4187C", Offset = "0x1B4187C", VA = "0x1B4187C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x1B418C4", Offset = "0x1B418C4", VA = "0x1B418C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1B3FA78", Offset = "0x1B3FA78", VA = "0x1B3FA78")]
		[DebuggerHidden]
		public <ChangeScenarioIcon>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1B4160C", Offset = "0x1B4160C", VA = "0x1B4160C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x1B41610", Offset = "0x1B41610", VA = "0x1B41610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1B41884", Offset = "0x1B41884", VA = "0x1B41884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Color MAX_COLOR;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Color MIN_COLOR;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Color MAX_COLOR_MIDDLE;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas CartCanvas;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup CartCanvasGroup;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CartUI[] CartUI;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CartUI[] EventCartUI;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpinningAnimation SpinningAnimation;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI CartName;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI SpeedLabel;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI HandlingLabel;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ProgressBarAnimator SpeedProgressBar;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ProgressBarAnimator HandlingProgressBar;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image ScenarioIcon;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image LockerIcon;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button2 NextButton;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button2 BuyButton;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI BuyButtonText;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI BuyLabel;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button2 EventCartButton;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button2 RegularCartButton;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentIndex;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentEventIndex;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool selectingEventCart;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector2 thumbstick;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x1700021A")]
	public B4TGames.MenuObjects.Cart CurrentCart
	{
		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x1B3F4CC", Offset = "0x1B3F4CC", VA = "0x1B3F4CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700021B")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1B3F5B4", Offset = "0x1B3F5B4", VA = "0x1B3F5B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x1B3F670", Offset = "0x1B3F670", VA = "0x1B3F670")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x1B3F6D8", Offset = "0x1B3F6D8", VA = "0x1B3F6D8")]
	public void RestartCart()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x1B3F6E4", Offset = "0x1B3F6E4", VA = "0x1B3F6E4")]
	[IteratorStateMachine(typeof(<Show>d__33))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x1B3F780", Offset = "0x1B3F780", VA = "0x1B3F780")]
	[IteratorStateMachine(typeof(<Hide>d__34))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x1B3F830", Offset = "0x1B3F830", VA = "0x1B3F830")]
	private void Fade(Image image, Color initial, Color final)
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x1B3FA04", Offset = "0x1B3FA04", VA = "0x1B3FA04")]
	[IteratorStateMachine(typeof(<ChangeScenarioIcon>d__36))]
	private IEnumerator ChangeScenarioIcon()
	{
		return null;
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x1B3FAA0", Offset = "0x1B3FAA0", VA = "0x1B3FAA0")]
	private void ToggleCartInfos(bool show)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x1B3FB3C", Offset = "0x1B3FB3C", VA = "0x1B3FB3C")]
	private void GetCurrentIndex()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x1B3FC88", Offset = "0x1B3FC88", VA = "0x1B3FC88")]
	private CartUI[] Shuffle(CartUI[] list)
	{
		return null;
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x1B3FDC8", Offset = "0x1B3FDC8", VA = "0x1B3FDC8")]
	public void Previous_OnClick()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x1B4008C", Offset = "0x1B4008C", VA = "0x1B4008C")]
	public void Next_OnClick()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x1B40170", Offset = "0x1B40170", VA = "0x1B40170")]
	private void ChangeSpinningAnimation()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x1B3FE9C", Offset = "0x1B3FE9C", VA = "0x1B3FE9C")]
	private void UpdateCurrentCartDescription()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x1B402CC", Offset = "0x1B402CC", VA = "0x1B402CC")]
	private void UpdateCurrentCartBlocking()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x1B3FDAC", Offset = "0x1B3FDAC", VA = "0x1B3FDAC")]
	public bool IsCurrentCartAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x1B405C8", Offset = "0x1B405C8", VA = "0x1B405C8")]
	public bool IsCartAllowed(B4TGames.MenuObjects.Cart cart)
	{
		return default(bool);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x1B3F530", Offset = "0x1B3F530", VA = "0x1B3F530")]
	public B4TGames.MenuObjects.Cart GetDefaultCart()
	{
		return null;
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x1B40658", Offset = "0x1B40658", VA = "0x1B40658")]
	public string GetCurrentCartName()
	{
		return null;
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x1B40704", Offset = "0x1B40704", VA = "0x1B40704")]
	public Sprite GetSprite(CartIdType cartType)
	{
		return null;
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x1B409B8", Offset = "0x1B409B8", VA = "0x1B409B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x1B409C0", Offset = "0x1B409C0", VA = "0x1B409C0")]
	public void ChangeToEventCartSelection()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x1B40AD8", Offset = "0x1B40AD8", VA = "0x1B40AD8")]
	public void ChangeToRegularCartSelection()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1B409C8", Offset = "0x1B409C8", VA = "0x1B409C8")]
	private void ChangeCartSelection(bool toEvent)
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x1B40AE0", Offset = "0x1B40AE0", VA = "0x1B40AE0")]
	public CartUIController()
	{
	}
}
[Token(Token = "0x200031D")]
public class CompanionCharacterUIController : IController<CompanionCharacterUIController>
{
	[Token(Token = "0x200031E")]
	[CompilerGenerated]
	private sealed class <Show>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompanionCharacterUIController <>4__this;

		[Token(Token = "0x17000224")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x1B42B50", Offset = "0x1B42B50", VA = "0x1B42B50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x1B42B98", Offset = "0x1B42B98", VA = "0x1B42B98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1B41CEC", Offset = "0x1B41CEC", VA = "0x1B41CEC")]
		[DebuggerHidden]
		public <Show>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1B42814", Offset = "0x1B42814", VA = "0x1B42814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1B42818", Offset = "0x1B42818", VA = "0x1B42818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1B42B58", Offset = "0x1B42B58", VA = "0x1B42B58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[CompilerGenerated]
	private sealed class <Hide>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompanionCharacterUIController <>4__this;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x17000226")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x1B42F44", Offset = "0x1B42F44", VA = "0x1B42F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x1B42F8C", Offset = "0x1B42F8C", VA = "0x1B42F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1B41D9C", Offset = "0x1B41D9C", VA = "0x1B41D9C")]
		[DebuggerHidden]
		public <Hide>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1B42BA0", Offset = "0x1B42BA0", VA = "0x1B42BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1B42BA4", Offset = "0x1B42BA4", VA = "0x1B42BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1B42F4C", Offset = "0x1B42F4C", VA = "0x1B42F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Color MAX_COLOR;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Color MIN_COLOR;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Color MAX_COLOR_MIDDLE;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas CompanionCharacterCanvas;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup CompanionCharacterCanvasGroup;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CompanionCharacterUI[] CompanionCharacterUI;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpinningAnimation SpinningAnimation;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI CompanionCharacterName;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentIndex;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 thumbstick;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x17000222")]
	public CompanionCharacter CurrentCompanionCharacter
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0x1B419DC", Offset = "0x1B419DC", VA = "0x1B419DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000223")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1B41A70", Offset = "0x1B41A70", VA = "0x1B41A70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x1B41B2C", Offset = "0x1B41B2C", VA = "0x1B41B2C")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x1B41B94", Offset = "0x1B41B94", VA = "0x1B41B94")]
	private void Start()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x1B41C78", Offset = "0x1B41C78", VA = "0x1B41C78")]
	[IteratorStateMachine(typeof(<Show>d__18))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x1B41D14", Offset = "0x1B41D14", VA = "0x1B41D14")]
	[IteratorStateMachine(typeof(<Hide>d__19))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x1B41DC4", Offset = "0x1B41DC4", VA = "0x1B41DC4")]
	private void Fade(Image image, Color initial, Color final)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x1B41F98", Offset = "0x1B41F98", VA = "0x1B41F98")]
	private void GetCurrentIndex()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x1B41FA0", Offset = "0x1B41FA0", VA = "0x1B41FA0")]
	public void Previous_OnClick()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x1B421C8", Offset = "0x1B421C8", VA = "0x1B421C8")]
	public void Next_OnClick()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x1B4213C", Offset = "0x1B4213C", VA = "0x1B4213C")]
	private void UpdateCurrentCompanionCharacterDescription()
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x1B42378", Offset = "0x1B42378", VA = "0x1B42378")]
	private void ChangeSpinningAnimation()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x1B424BC", Offset = "0x1B424BC", VA = "0x1B424BC")]
	public Sprite GetSprite(CompanionCharacter.CompanionCharacterType companionCharacterType)
	{
		return null;
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x1B42690", Offset = "0x1B42690", VA = "0x1B42690")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x1B42698", Offset = "0x1B42698", VA = "0x1B42698")]
	public string GetCurrentCompanionCharacterName()
	{
		return null;
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x1B4274C", Offset = "0x1B4274C", VA = "0x1B4274C")]
	public CompanionCharacterUIController()
	{
	}
}
[Token(Token = "0x2000323")]
public class ComfortConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000324")]
	[CompilerGenerated]
	private sealed class <Show>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComfortConfigurationUI <>4__this;

		[Token(Token = "0x17000228")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x1B438A8", Offset = "0x1B438A8", VA = "0x1B438A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x1B438F0", Offset = "0x1B438F0", VA = "0x1B438F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1B430E0", Offset = "0x1B430E0", VA = "0x1B430E0")]
		[DebuggerHidden]
		public <Show>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x1B4378C", Offset = "0x1B4378C", VA = "0x1B4378C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x1B43790", Offset = "0x1B43790", VA = "0x1B43790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1B438B0", Offset = "0x1B438B0", VA = "0x1B438B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000325")]
	[CompilerGenerated]
	private sealed class <Hide>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComfortConfigurationUI <>4__this;

		[Token(Token = "0x1700022A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x1B43A00", Offset = "0x1B43A00", VA = "0x1B43A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x1B43A48", Offset = "0x1B43A48", VA = "0x1B43A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1B4317C", Offset = "0x1B4317C", VA = "0x1B4317C")]
		[DebuggerHidden]
		public <Hide>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1B438F8", Offset = "0x1B438F8", VA = "0x1B438F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1B438FC", Offset = "0x1B438FC", VA = "0x1B438FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x1B43A08", Offset = "0x1B43A08", VA = "0x1B43A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ComfortPanel;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider CameraSmoothnessSlider;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button2 HelmetBlinder;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button2 HelmetOnly;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button2 NoHelmet;

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x1B4306C", Offset = "0x1B4306C", VA = "0x1B4306C", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__5))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x1B43108", Offset = "0x1B43108", VA = "0x1B43108", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__6))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x1B431A4", Offset = "0x1B431A4", VA = "0x1B431A4")]
	private void UpdateHelmetButton()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x1B4323C", Offset = "0x1B4323C", VA = "0x1B4323C")]
	public void HidePanel()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x1B432E0", Offset = "0x1B432E0", VA = "0x1B432E0")]
	public void HelmetBlinder_OnClick()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x1B4350C", Offset = "0x1B4350C", VA = "0x1B4350C")]
	public void HelmetOnly_OnClick()
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x1B43604", Offset = "0x1B43604", VA = "0x1B43604")]
	public void NoHelmet_OnClick()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x1B436FC", Offset = "0x1B436FC", VA = "0x1B436FC")]
	public void OnCameraSmoothnessSliderValueChanged()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x1B433D8", Offset = "0x1B433D8", VA = "0x1B433D8")]
	private void UpdateHelmet()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x1B4377C", Offset = "0x1B4377C", VA = "0x1B4377C")]
	public ComfortConfigurationUI()
	{
	}
}
[Token(Token = "0x2000326")]
public abstract class ConfigurationUI : MonoBehaviour
{
	[Token(Token = "0x600144B")]
	public abstract IEnumerator Show(bool doAnimation);

	[Token(Token = "0x600144C")]
	public abstract IEnumerator Hide(bool doAnimation);

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x1B43784", Offset = "0x1B43784", VA = "0x1B43784")]
	protected ConfigurationUI()
	{
	}
}
[Token(Token = "0x2000327")]
public class ConfigurationUIController : IController<ConfigurationUIController>
{
	[Token(Token = "0x2000328")]
	public enum ConfigurationState
	{
		[Token(Token = "0x400174C")]
		NONE,
		[Token(Token = "0x400174D")]
		GENERAL,
		[Token(Token = "0x400174E")]
		HELMET,
		[Token(Token = "0x400174F")]
		GRAPHICS,
		[Token(Token = "0x4001750")]
		SOUND,
		[Token(Token = "0x4001751")]
		TELEMETRY,
		[Token(Token = "0x4001752")]
		YAW_VR,
		[Token(Token = "0x4001753")]
		SRS,
		[Token(Token = "0x4001754")]
		VRArcades,
		[Token(Token = "0x4001755")]
		BHAPTICS
	}

	[Token(Token = "0x2000329")]
	[CompilerGenerated]
	private sealed class <Show>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurationUIController <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x1B44388", Offset = "0x1B44388", VA = "0x1B44388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x1B443D0", Offset = "0x1B443D0", VA = "0x1B443D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1B43BF8", Offset = "0x1B43BF8", VA = "0x1B43BF8")]
		[DebuggerHidden]
		public <Show>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1B44060", Offset = "0x1B44060", VA = "0x1B44060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1B44064", Offset = "0x1B44064", VA = "0x1B44064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1B44390", Offset = "0x1B44390", VA = "0x1B44390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032A")]
	[CompilerGenerated]
	private sealed class <Hide>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurationUIController <>4__this;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x1B445E4", Offset = "0x1B445E4", VA = "0x1B445E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x1B4462C", Offset = "0x1B4462C", VA = "0x1B4462C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x1B43CA8", Offset = "0x1B43CA8", VA = "0x1B43CA8")]
		[DebuggerHidden]
		public <Hide>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x1B443D8", Offset = "0x1B443D8", VA = "0x1B443D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x1B443DC", Offset = "0x1B443DC", VA = "0x1B443DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1B445EC", Offset = "0x1B445EC", VA = "0x1B445EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[CompilerGenerated]
	private sealed class <HideAll>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurationUIController <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x1B44914", Offset = "0x1B44914", VA = "0x1B44914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x1B4495C", Offset = "0x1B4495C", VA = "0x1B4495C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1B43D44", Offset = "0x1B43D44", VA = "0x1B43D44")]
		[DebuggerHidden]
		public <HideAll>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1B44634", Offset = "0x1B44634", VA = "0x1B44634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1B44638", Offset = "0x1B44638", VA = "0x1B44638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1B4491C", Offset = "0x1B4491C", VA = "0x1B4491C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032C")]
	[CompilerGenerated]
	private sealed class <ChangeStateCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurationUIController <>4__this;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConfigurationState newState;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool doAnimation;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x1B44B28", Offset = "0x1B44B28", VA = "0x1B44B28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x1B44B70", Offset = "0x1B44B70", VA = "0x1B44B70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1B43E20", Offset = "0x1B43E20", VA = "0x1B43E20")]
		[DebuggerHidden]
		public <ChangeStateCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1B44964", Offset = "0x1B44964", VA = "0x1B44964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1B44968", Offset = "0x1B44968", VA = "0x1B44968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1B44B30", Offset = "0x1B44B30", VA = "0x1B44B30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas ConfigurationCanvas;

	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup ConfigurationCanvasGroup;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GeneralConfigurationUI GeneralConfigurationUI;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComfortConfigurationUI HelmetConfigurationUI;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GraphicConfigurationUI GraphicConfigurationUI;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoundConfigurationUI SoundConfigurationUI;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TelemetryConfigurationUI TelemetryConfigurationUI;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public YawVRConfigurationUI YawVRConfigurationUI;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SimRacingStudioConfigurationUI SimRacingStudioConfigurationUI;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRArcadesConfigurationUI VRArcadesConfigurationUI;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HapticsConfigurationUI BHapticsConfigurationUI;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button2 InitialConfigurationButton;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button2 HelmetConfigurationButton;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button2 TelemetryConfigurationButton;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button2 HapticsfigurationButton;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI RecenterTutorialLabel;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ConfigurationUI currentConfigurationUI;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x1700022C")]
	public ConfigurationState CurrentState
	{
		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1B43A50", Offset = "0x1B43A50", VA = "0x1B43A50")]
		[CompilerGenerated]
		get
		{
			return default(ConfigurationState);
		}
		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1B43A58", Offset = "0x1B43A58", VA = "0x1B43A58")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1B43A60", Offset = "0x1B43A60", VA = "0x1B43A60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x1B43B1C", Offset = "0x1B43B1C", VA = "0x1B43B1C")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x1B43B84", Offset = "0x1B43B84", VA = "0x1B43B84")]
	[IteratorStateMachine(typeof(<Show>d__26))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x1B43C20", Offset = "0x1B43C20", VA = "0x1B43C20")]
	[IteratorStateMachine(typeof(<Hide>d__27))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x1B43CD0", Offset = "0x1B43CD0", VA = "0x1B43CD0")]
	[IteratorStateMachine(typeof(<HideAll>d__28))]
	private IEnumerator HideAll()
	{
		return null;
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x1B43D6C", Offset = "0x1B43D6C", VA = "0x1B43D6C")]
	private void ChangeState(ConfigurationState newState, bool doAnimation)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1B43D90", Offset = "0x1B43D90", VA = "0x1B43D90")]
	[IteratorStateMachine(typeof(<ChangeStateCoroutine>d__30))]
	private IEnumerator ChangeStateCoroutine(ConfigurationState newState, bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1B43E48", Offset = "0x1B43E48", VA = "0x1B43E48")]
	public void BackButton_OnClick()
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1B43EB0", Offset = "0x1B43EB0", VA = "0x1B43EB0")]
	public void GeneralButton_OnClick()
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1B43ED8", Offset = "0x1B43ED8", VA = "0x1B43ED8")]
	public void HelmetButton_OnClick()
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1B43F00", Offset = "0x1B43F00", VA = "0x1B43F00")]
	public void GraphicsButton_OnClick()
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x1B43F28", Offset = "0x1B43F28", VA = "0x1B43F28")]
	public void SoundButton_OnClick()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x1B43F50", Offset = "0x1B43F50", VA = "0x1B43F50")]
	public void TelemetryButton_OnClick()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1B43F78", Offset = "0x1B43F78", VA = "0x1B43F78")]
	public void YawVRButton_OnClick()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1B43FA0", Offset = "0x1B43FA0", VA = "0x1B43FA0")]
	public void SRSButton_OnClick()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x1B43FC8", Offset = "0x1B43FC8", VA = "0x1B43FC8")]
	public void VRArcadesButton_OnClick()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x1B43FF0", Offset = "0x1B43FF0", VA = "0x1B43FF0")]
	public void BHapticsButton_OnClick()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x1B44018", Offset = "0x1B44018", VA = "0x1B44018")]
	public ConfigurationUIController()
	{
	}
}
[Token(Token = "0x200032D")]
public class DefaultTelemetryConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x200032E")]
	[CompilerGenerated]
	private sealed class <Show>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefaultTelemetryConfigurationUI <>4__this;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x1B451D4", Offset = "0x1B451D4", VA = "0x1B451D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x1B4521C", Offset = "0x1B4521C", VA = "0x1B4521C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x1B44BEC", Offset = "0x1B44BEC", VA = "0x1B44BEC")]
		[DebuggerHidden]
		public <Show>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1B44FF0", Offset = "0x1B44FF0", VA = "0x1B44FF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1B44FF4", Offset = "0x1B44FF4", VA = "0x1B44FF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1B451DC", Offset = "0x1B451DC", VA = "0x1B451DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032F")]
	[CompilerGenerated]
	private sealed class <Hide>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefaultTelemetryConfigurationUI <>4__this;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x1B45334", Offset = "0x1B45334", VA = "0x1B45334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x1B4537C", Offset = "0x1B4537C", VA = "0x1B4537C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1B44C88", Offset = "0x1B44C88", VA = "0x1B44C88")]
		[DebuggerHidden]
		public <Hide>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1B45224", Offset = "0x1B45224", VA = "0x1B45224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1B45228", Offset = "0x1B45228", VA = "0x1B45228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1B4533C", Offset = "0x1B4533C", VA = "0x1B4533C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000330")]
	[CompilerGenerated]
	private sealed class <CheckStatus>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefaultTelemetryConfigurationUI <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x1B45560", Offset = "0x1B45560", VA = "0x1B45560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x1B455A8", Offset = "0x1B455A8", VA = "0x1B455A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1B44D24", Offset = "0x1B44D24", VA = "0x1B44D24")]
		[DebuggerHidden]
		public <CheckStatus>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x1B45384", Offset = "0x1B45384", VA = "0x1B45384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1B45388", Offset = "0x1B45388", VA = "0x1B45388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1B45568", Offset = "0x1B45568", VA = "0x1B45568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DefaultTelemetryPanel;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ErrorMessageText;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI StartStopButtonText;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_InputField IPAddressText;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_InputField UDPPortText;

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x1B44B78", Offset = "0x1B44B78", VA = "0x1B44B78", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__5))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x1B44C14", Offset = "0x1B44C14", VA = "0x1B44C14", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__6))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x1B44CB0", Offset = "0x1B44CB0", VA = "0x1B44CB0")]
	[IteratorStateMachine(typeof(<CheckStatus>d__7))]
	private IEnumerator CheckStatus()
	{
		return null;
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x1B44D4C", Offset = "0x1B44D4C", VA = "0x1B44D4C")]
	public void IpAddress_OnSelect()
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x1B44E14", Offset = "0x1B44E14", VA = "0x1B44E14")]
	public void UDPPort_OnSelect()
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x1B44D74", Offset = "0x1B44D74", VA = "0x1B44D74")]
	private void ShowKeyboard(TMP_InputField text)
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x1B44E3C", Offset = "0x1B44E3C", VA = "0x1B44E3C")]
	public void StartStopConnection()
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x1B44FA4", Offset = "0x1B44FA4", VA = "0x1B44FA4")]
	public void OnWebsiteClick()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x1B44FE8", Offset = "0x1B44FE8", VA = "0x1B44FE8")]
	public DefaultTelemetryConfigurationUI()
	{
	}
}
[Token(Token = "0x2000331")]
public class GeneralConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000332")]
	[CompilerGenerated]
	private sealed class <Show>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralConfigurationUI <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x1B45DA0", Offset = "0x1B45DA0", VA = "0x1B45DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x1B45DE8", Offset = "0x1B45DE8", VA = "0x1B45DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1B45628", Offset = "0x1B45628", VA = "0x1B45628")]
		[DebuggerHidden]
		public <Show>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1B45C04", Offset = "0x1B45C04", VA = "0x1B45C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1B45C08", Offset = "0x1B45C08", VA = "0x1B45C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x1B45DA8", Offset = "0x1B45DA8", VA = "0x1B45DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[CompilerGenerated]
	private sealed class <Hide>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralConfigurationUI <>4__this;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x1B45E64", Offset = "0x1B45E64", VA = "0x1B45E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x1B45EAC", Offset = "0x1B45EAC", VA = "0x1B45EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1B456C4", Offset = "0x1B456C4", VA = "0x1B456C4")]
		[DebuggerHidden]
		public <Hide>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1B45DF0", Offset = "0x1B45DF0", VA = "0x1B45DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1B45DF4", Offset = "0x1B45DF4", VA = "0x1B45DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x1B45E6C", Offset = "0x1B45E6C", VA = "0x1B45E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GeneralSettingsPanel;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle TutorialToggle;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle HUDToggle;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle SelfieStickTutorialToggle;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle LaserSightToggle;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject RestartOnTutorialButton;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject RetrievePurchasesButton;

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x1B455B0", Offset = "0x1B455B0", VA = "0x1B455B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x1B455B4", Offset = "0x1B455B4", VA = "0x1B455B4", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__8))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x1B45650", Offset = "0x1B45650", VA = "0x1B45650", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__9))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x1B456EC", Offset = "0x1B456EC", VA = "0x1B456EC")]
	public void OnTutorialValueChanged()
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x1B457AC", Offset = "0x1B457AC", VA = "0x1B457AC")]
	public void OnHUDValueChanged()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x1B45818", Offset = "0x1B45818", VA = "0x1B45818")]
	public void OnSelfieStickTutorialValueChanged()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x1B45884", Offset = "0x1B45884", VA = "0x1B45884")]
	public void OnLaserSightValueChanged()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x1B458F0", Offset = "0x1B458F0", VA = "0x1B458F0")]
	public void RestartOnTutorial()
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x1B45A44", Offset = "0x1B45A44", VA = "0x1B45A44")]
	public void RetrievePurchases()
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x1B45BFC", Offset = "0x1B45BFC", VA = "0x1B45BFC")]
	public GeneralConfigurationUI()
	{
	}
}
[Token(Token = "0x2000334")]
public class GraphicConfigurationUI : ConfigurationUI
{
	[Serializable]
	[Token(Token = "0x2000335")]
	public struct FrequenciesByPlatform
	{
		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string platform;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] Hz;
	}

	[Token(Token = "0x2000338")]
	[CompilerGenerated]
	private sealed class <Show>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphicConfigurationUI <>4__this;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x1B9AA98", Offset = "0x1B9AA98", VA = "0x1B9AA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x1B9AAE0", Offset = "0x1B9AAE0", VA = "0x1B9AAE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1B9A1F8", Offset = "0x1B9A1F8", VA = "0x1B9A1F8")]
		[DebuggerHidden]
		public <Show>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1B9A220", Offset = "0x1B9A220", VA = "0x1B9A220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1B9A224", Offset = "0x1B9A224", VA = "0x1B9A224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1B9AAA0", Offset = "0x1B9AAA0", VA = "0x1B9AAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[CompilerGenerated]
	private sealed class <ChangeRenderScaleDelayed>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphicConfigurationUI <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x1B9AC10", Offset = "0x1B9AC10", VA = "0x1B9AC10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x1B9AC58", Offset = "0x1B9AC58", VA = "0x1B9AC58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1B9AAE8", Offset = "0x1B9AAE8", VA = "0x1B9AAE8")]
		[DebuggerHidden]
		public <ChangeRenderScaleDelayed>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1B9AB10", Offset = "0x1B9AB10", VA = "0x1B9AB10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1B9AB14", Offset = "0x1B9AB14", VA = "0x1B9AB14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1B9AC18", Offset = "0x1B9AC18", VA = "0x1B9AC18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[CompilerGenerated]
	private sealed class <Hide>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphicConfigurationUI <>4__this;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x1B9ACFC", Offset = "0x1B9ACFC", VA = "0x1B9ACFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x1B9AD44", Offset = "0x1B9AD44", VA = "0x1B9AD44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1B9AC60", Offset = "0x1B9AC60", VA = "0x1B9AC60")]
		[DebuggerHidden]
		public <Hide>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1B9AC88", Offset = "0x1B9AC88", VA = "0x1B9AC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1B9AC8C", Offset = "0x1B9AC8C", VA = "0x1B9AC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1B9AD04", Offset = "0x1B9AD04", VA = "0x1B9AD04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GraphicSettingsPanel;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GraphicsTitle;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Line;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject QualityLevelLine;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Dropdown QualityLevelDropdown;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject RenderScaleLine;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider RenderScaleSlider;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI PercentualText;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject FrequencyLine;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Dropdown FrequencyDropDown;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle Enable3DOF;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle AutoLevelEyeToggle;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject AutoLevelEyePanel;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FrequenciesByPlatform[] Frequencies;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool changingRenderScale;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] hzs;

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x1B45EB4", Offset = "0x1B45EB4", VA = "0x1B45EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x1B45ED4", Offset = "0x1B45ED4", VA = "0x1B45ED4", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__18))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x1B45F48", Offset = "0x1B45F48", VA = "0x1B45F48")]
	public void OnAutoLevelEyeValueChanged()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x1B46044", Offset = "0x1B46044", VA = "0x1B46044")]
	public void OnEnable3DOF_ValueChanged()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x1B460B0", Offset = "0x1B460B0", VA = "0x1B460B0")]
	public void OnDefaultQualityChanged()
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x1B461A4", Offset = "0x1B461A4", VA = "0x1B461A4")]
	public void OnDefaultFrequencyChanged()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x1B46364", Offset = "0x1B46364", VA = "0x1B46364")]
	public void OnRenderScaleValueChanged()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x1B46408", Offset = "0x1B46408", VA = "0x1B46408")]
	public void OnRenderScaleValueChangedRealtime()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x1B46394", Offset = "0x1B46394", VA = "0x1B46394")]
	[IteratorStateMachine(typeof(<ChangeRenderScaleDelayed>d__25))]
	private IEnumerator ChangeRenderScaleDelayed()
	{
		return null;
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x1B46500", Offset = "0x1B46500", VA = "0x1B46500", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__26))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x1B46574", Offset = "0x1B46574", VA = "0x1B46574")]
	public GraphicConfigurationUI()
	{
	}
}
[Token(Token = "0x200033B")]
public class HapticsConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x200033C")]
	[CompilerGenerated]
	private sealed class <Show>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsConfigurationUI <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x1B9B464", Offset = "0x1B9B464", VA = "0x1B9B464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x1B9B4AC", Offset = "0x1B9B4AC", VA = "0x1B9B4AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1B9AE34", Offset = "0x1B9AE34", VA = "0x1B9AE34")]
		[DebuggerHidden]
		public <Show>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1B9B2DC", Offset = "0x1B9B2DC", VA = "0x1B9B2DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1B9B2E0", Offset = "0x1B9B2E0", VA = "0x1B9B2E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1B9B46C", Offset = "0x1B9B46C", VA = "0x1B9B46C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[CompilerGenerated]
	private sealed class <Hide>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsConfigurationUI <>4__this;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x1B9B57C", Offset = "0x1B9B57C", VA = "0x1B9B57C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1B9B5C4", Offset = "0x1B9B5C4", VA = "0x1B9B5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1B9B168", Offset = "0x1B9B168", VA = "0x1B9B168")]
		[DebuggerHidden]
		public <Hide>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1B9B4B4", Offset = "0x1B9B4B4", VA = "0x1B9B4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1B9B4B8", Offset = "0x1B9B4B8", VA = "0x1B9B4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1B9B584", Offset = "0x1B9B584", VA = "0x1B9B584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HapticsPanel;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle AllowHapitcsFeedbackToggle;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle UseBHaptics;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI TactalConnectedLabel;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI TactSuitLabel;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI ArmsLabel;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle UseRecoilOnVest;

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x1B9AD4C", Offset = "0x1B9AD4C", VA = "0x1B9AD4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x1B9ADC0", Offset = "0x1B9ADC0", VA = "0x1B9ADC0", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__8))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x1B9AE5C", Offset = "0x1B9AE5C", VA = "0x1B9AE5C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x1B9B0F4", Offset = "0x1B9B0F4", VA = "0x1B9B0F4", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__10))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x1B9B190", Offset = "0x1B9B190", VA = "0x1B9B190")]
	public void RecoilOnVest_ValueChanged()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x1B9B1FC", Offset = "0x1B9B1FC", VA = "0x1B9B1FC")]
	public void BHaptics_ValueChanged()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1B9B268", Offset = "0x1B9B268", VA = "0x1B9B268")]
	public void OnHapticsFeedbackValueChanged()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1B9B2D4", Offset = "0x1B9B2D4", VA = "0x1B9B2D4")]
	public HapticsConfigurationUI()
	{
	}
}
[Token(Token = "0x200033E")]
public class KeyboardUIController : IController<KeyboardUIController>
{
	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightTextboxColor;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform KeyboardParent;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Keyboard;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_InputField CurrentText;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image lastTextAreaImage;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color lastColor;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Canvas[] canvas;

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x1B9B5CC", Offset = "0x1B9B5CC", VA = "0x1B9B5CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x1B9B6B8", Offset = "0x1B9B6B8", VA = "0x1B9B6B8")]
	public void ShowKeyboard(TMP_InputField currentText)
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x1B9BA10", Offset = "0x1B9BA10", VA = "0x1B9BA10")]
	private Image FindTextArea(TMP_InputField currentText)
	{
		return null;
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x1B9B954", Offset = "0x1B9B954", VA = "0x1B9B954")]
	private void ResetColorFromTextBox(Image textArea, Color color)
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x1B9B5D0", Offset = "0x1B9B5D0", VA = "0x1B9B5D0")]
	public void HideKeyboard()
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x1B9BB6C", Offset = "0x1B9BB6C", VA = "0x1B9BB6C")]
	public void AddText(string text)
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x1B9BC18", Offset = "0x1B9BC18", VA = "0x1B9BC18")]
	public void RemoveText()
	{
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x1B9BCC0", Offset = "0x1B9BCC0", VA = "0x1B9BCC0")]
	public KeyboardUIController()
	{
	}
}
[Token(Token = "0x200033F")]
public class SimRacingStudioConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000340")]
	[CompilerGenerated]
	private sealed class <Show>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimRacingStudioConfigurationUI <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x1B9C418", Offset = "0x1B9C418", VA = "0x1B9C418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x1B9C460", Offset = "0x1B9C460", VA = "0x1B9C460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1B9BDE4", Offset = "0x1B9BDE4", VA = "0x1B9BDE4")]
		[DebuggerHidden]
		public <Show>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1B9C1F4", Offset = "0x1B9C1F4", VA = "0x1B9C1F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1B9C1F8", Offset = "0x1B9C1F8", VA = "0x1B9C1F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1B9C420", Offset = "0x1B9C420", VA = "0x1B9C420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[CompilerGenerated]
	private sealed class <Hide>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimRacingStudioConfigurationUI <>4__this;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1B9C56C", Offset = "0x1B9C56C", VA = "0x1B9C56C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x1B9C5B4", Offset = "0x1B9C5B4", VA = "0x1B9C5B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1B9BE80", Offset = "0x1B9BE80", VA = "0x1B9BE80")]
		[DebuggerHidden]
		public <Hide>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1B9C468", Offset = "0x1B9C468", VA = "0x1B9C468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1B9C46C", Offset = "0x1B9C46C", VA = "0x1B9C46C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1B9C574", Offset = "0x1B9C574", VA = "0x1B9C574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000342")]
	[CompilerGenerated]
	private sealed class <CheckStatus>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimRacingStudioConfigurationUI <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x1B9C6E0", Offset = "0x1B9C6E0", VA = "0x1B9C6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x1B9C728", Offset = "0x1B9C728", VA = "0x1B9C728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1B9BF1C", Offset = "0x1B9BF1C", VA = "0x1B9BF1C")]
		[DebuggerHidden]
		public <CheckStatus>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1B9C5BC", Offset = "0x1B9C5BC", VA = "0x1B9C5BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1B9C5C0", Offset = "0x1B9C5C0", VA = "0x1B9C5C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1B9C6E8", Offset = "0x1B9C6E8", VA = "0x1B9C6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SimRacingStudioPanel;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ErrorMessageText;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI StartStopButtonText;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_InputField IPAddressText;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_InputField UDPPortText;

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x1B9BD08", Offset = "0x1B9BD08", VA = "0x1B9BD08")]
	private void Start()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x1B9BD70", Offset = "0x1B9BD70", VA = "0x1B9BD70", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__6))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x1B9BE0C", Offset = "0x1B9BE0C", VA = "0x1B9BE0C", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__7))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x1B9BEA8", Offset = "0x1B9BEA8", VA = "0x1B9BEA8")]
	[IteratorStateMachine(typeof(<CheckStatus>d__8))]
	private IEnumerator CheckStatus()
	{
		return null;
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x1B9BF44", Offset = "0x1B9BF44", VA = "0x1B9BF44")]
	public void IpAddress_OnSelect()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x1B9C008", Offset = "0x1B9C008", VA = "0x1B9C008")]
	public void UDPPort_OnSelect()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x1B9BF6C", Offset = "0x1B9BF6C", VA = "0x1B9BF6C")]
	private void ShowKeyboard(TMP_InputField text)
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x1B9C030", Offset = "0x1B9C030", VA = "0x1B9C030")]
	public void StartStopConnection()
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x1B9C1A8", Offset = "0x1B9C1A8", VA = "0x1B9C1A8")]
	public void OnWebsiteClick()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x1B9C1EC", Offset = "0x1B9C1EC", VA = "0x1B9C1EC")]
	public SimRacingStudioConfigurationUI()
	{
	}
}
[Token(Token = "0x2000343")]
public class SoundConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000344")]
	[CompilerGenerated]
	private sealed class <Show>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundConfigurationUI <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x1B9CD68", Offset = "0x1B9CD68", VA = "0x1B9CD68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x1B9CDB0", Offset = "0x1B9CDB0", VA = "0x1B9CDB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1B9C8F4", Offset = "0x1B9C8F4", VA = "0x1B9C8F4")]
		[DebuggerHidden]
		public <Show>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1B9CBF8", Offset = "0x1B9CBF8", VA = "0x1B9CBF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1B9CBFC", Offset = "0x1B9CBFC", VA = "0x1B9CBFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1B9CD70", Offset = "0x1B9CD70", VA = "0x1B9CD70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000345")]
	[CompilerGenerated]
	private sealed class <Hide>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundConfigurationUI <>4__this;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x1B9CE2C", Offset = "0x1B9CE2C", VA = "0x1B9CE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x1B9CE74", Offset = "0x1B9CE74", VA = "0x1B9CE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1B9C990", Offset = "0x1B9C990", VA = "0x1B9C990")]
		[DebuggerHidden]
		public <Hide>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1B9CDB8", Offset = "0x1B9CDB8", VA = "0x1B9CDB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1B9CDBC", Offset = "0x1B9CDBC", VA = "0x1B9CDBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1B9CE34", Offset = "0x1B9CE34", VA = "0x1B9CE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SoundSettingsPanel;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider SoundTrackVolumeSlider;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider RCChainsVolumeSlider;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TriggerSoundtrack triggerSoundTrack;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SoundtrackEventTrigger soundtrackEventTrigger;

	[Token(Token = "0x17000250")]
	private TriggerSoundtrack TriggerSoundTrack
	{
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1B9C730", Offset = "0x1B9C730", VA = "0x1B9C730")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000251")]
	private SoundtrackEventTrigger SoundtrackEventTrigger
	{
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1B9C7D8", Offset = "0x1B9C7D8", VA = "0x1B9C7D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x1B9C880", Offset = "0x1B9C880", VA = "0x1B9C880", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__9))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x1B9C91C", Offset = "0x1B9C91C", VA = "0x1B9C91C", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__10))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x1B9C9B8", Offset = "0x1B9C9B8", VA = "0x1B9C9B8")]
	public void OnSoundTrackValueChanged()
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x1B9CB70", Offset = "0x1B9CB70", VA = "0x1B9CB70")]
	public void OnRCChainsValueChanged()
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x1B9CBF0", Offset = "0x1B9CBF0", VA = "0x1B9CBF0")]
	public SoundConfigurationUI()
	{
	}
}
[Token(Token = "0x2000346")]
public class TelemetryConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000347")]
	public enum TelemetryUIState
	{
		[Token(Token = "0x40017D5")]
		DEFAULT,
		[Token(Token = "0x40017D6")]
		SRS,
		[Token(Token = "0x40017D7")]
		YAW
	}

	[Token(Token = "0x2000348")]
	[CompilerGenerated]
	private sealed class <Show>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryConfigurationUI <>4__this;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x1B9D350", Offset = "0x1B9D350", VA = "0x1B9D350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x1B9D398", Offset = "0x1B9D398", VA = "0x1B9D398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1B9CEF8", Offset = "0x1B9CEF8", VA = "0x1B9CEF8")]
		[DebuggerHidden]
		public <Show>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1B9D240", Offset = "0x1B9D240", VA = "0x1B9D240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1B9D244", Offset = "0x1B9D244", VA = "0x1B9D244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1B9D358", Offset = "0x1B9D358", VA = "0x1B9D358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000349")]
	[CompilerGenerated]
	private sealed class <ShowDefaultSettings>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryConfigurationUI <>4__this;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x1B9D4D4", Offset = "0x1B9D4D4", VA = "0x1B9D4D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x1B9D51C", Offset = "0x1B9D51C", VA = "0x1B9D51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1B9CF94", Offset = "0x1B9CF94", VA = "0x1B9CF94")]
		[DebuggerHidden]
		public <ShowDefaultSettings>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1B9D3A0", Offset = "0x1B9D3A0", VA = "0x1B9D3A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1B9D3A4", Offset = "0x1B9D3A4", VA = "0x1B9D3A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1B9D4DC", Offset = "0x1B9D4DC", VA = "0x1B9D4DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034A")]
	[CompilerGenerated]
	private sealed class <ShowYawVRSettings>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryConfigurationUI <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0x1B9D65C", Offset = "0x1B9D65C", VA = "0x1B9D65C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x1B9D6A4", Offset = "0x1B9D6A4", VA = "0x1B9D6A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1B9D030", Offset = "0x1B9D030", VA = "0x1B9D030")]
		[DebuggerHidden]
		public <ShowYawVRSettings>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1B9D524", Offset = "0x1B9D524", VA = "0x1B9D524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1B9D528", Offset = "0x1B9D528", VA = "0x1B9D528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1B9D664", Offset = "0x1B9D664", VA = "0x1B9D664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034B")]
	[CompilerGenerated]
	private sealed class <ShowSRSSettings>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryConfigurationUI <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x1B9D7E4", Offset = "0x1B9D7E4", VA = "0x1B9D7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x1B9D82C", Offset = "0x1B9D82C", VA = "0x1B9D82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1B9D0CC", Offset = "0x1B9D0CC", VA = "0x1B9D0CC")]
		[DebuggerHidden]
		public <ShowSRSSettings>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1B9D6AC", Offset = "0x1B9D6AC", VA = "0x1B9D6AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1B9D6B0", Offset = "0x1B9D6B0", VA = "0x1B9D6B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1B9D7EC", Offset = "0x1B9D7EC", VA = "0x1B9D7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034C")]
	[CompilerGenerated]
	private sealed class <Hide>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TelemetryConfigurationUI <>4__this;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x1B9D8A8", Offset = "0x1B9D8A8", VA = "0x1B9D8A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x1B9D8F0", Offset = "0x1B9D8F0", VA = "0x1B9D8F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1B9D210", Offset = "0x1B9D210", VA = "0x1B9D210")]
		[DebuggerHidden]
		public <Hide>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1B9D834", Offset = "0x1B9D834", VA = "0x1B9D834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1B9D838", Offset = "0x1B9D838", VA = "0x1B9D838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1B9D8B0", Offset = "0x1B9D8B0", VA = "0x1B9D8B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TelemetrySettingPanel;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button2 GeneralSettingsButton;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button2 YawVRSettingsButton;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button2 SRSSettingsButton;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DefaultTelemetryConfigurationUI DefualtTelemetrySetting;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SimRacingStudioConfigurationUI SimRacingStudioSetting;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public YawVRConfigurationUI YawVRSetting;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI ErrorMessageText;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TelemetryUIState CurrentState;

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x1B9CE7C", Offset = "0x1B9CE7C", VA = "0x1B9CE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x1B9CE84", Offset = "0x1B9CE84", VA = "0x1B9CE84", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__11))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x1B9CF20", Offset = "0x1B9CF20", VA = "0x1B9CF20")]
	[IteratorStateMachine(typeof(<ShowDefaultSettings>d__12))]
	private IEnumerator ShowDefaultSettings()
	{
		return null;
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x1B9CFBC", Offset = "0x1B9CFBC", VA = "0x1B9CFBC")]
	[IteratorStateMachine(typeof(<ShowYawVRSettings>d__13))]
	private IEnumerator ShowYawVRSettings()
	{
		return null;
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x1B9D058", Offset = "0x1B9D058", VA = "0x1B9D058")]
	[IteratorStateMachine(typeof(<ShowSRSSettings>d__14))]
	private IEnumerator ShowSRSSettings()
	{
		return null;
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x1B9D0F4", Offset = "0x1B9D0F4", VA = "0x1B9D0F4")]
	public void GeneralSettings_OnClick()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x1B9D12C", Offset = "0x1B9D12C", VA = "0x1B9D12C")]
	public void YawVRSettings_OnClick()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x1B9D164", Offset = "0x1B9D164", VA = "0x1B9D164")]
	public void SRSSettings_OnClick()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x1B9D19C", Offset = "0x1B9D19C", VA = "0x1B9D19C", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__18))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x1B9D238", Offset = "0x1B9D238", VA = "0x1B9D238")]
	public TelemetryConfigurationUI()
	{
	}
}
[Token(Token = "0x200034D")]
public class VRArcadesConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x200034E")]
	[CompilerGenerated]
	private sealed class <Show>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRArcadesConfigurationUI <>4__this;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x1B9E824", Offset = "0x1B9E824", VA = "0x1B9E824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x1B9E86C", Offset = "0x1B9E86C", VA = "0x1B9E86C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1B9D96C", Offset = "0x1B9D96C", VA = "0x1B9D96C")]
		[DebuggerHidden]
		public <Show>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1B9E5D0", Offset = "0x1B9E5D0", VA = "0x1B9E5D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1B9E5D4", Offset = "0x1B9E5D4", VA = "0x1B9E5D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1B9E82C", Offset = "0x1B9E82C", VA = "0x1B9E82C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034F")]
	[CompilerGenerated]
	private sealed class <Hide>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRArcadesConfigurationUI <>4__this;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x1B9E978", Offset = "0x1B9E978", VA = "0x1B9E978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x1B9E9C0", Offset = "0x1B9E9C0", VA = "0x1B9E9C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1B9DA08", Offset = "0x1B9DA08", VA = "0x1B9DA08")]
		[DebuggerHidden]
		public <Hide>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1B9E874", Offset = "0x1B9E874", VA = "0x1B9E874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1B9E878", Offset = "0x1B9E878", VA = "0x1B9E878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1B9E980", Offset = "0x1B9E980", VA = "0x1B9E980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[CompilerGenerated]
	private sealed class <CheckStatus>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRArcadesConfigurationUI <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x1B9EACC", Offset = "0x1B9EACC", VA = "0x1B9EACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x1B9EB14", Offset = "0x1B9EB14", VA = "0x1B9EB14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1B9DAA4", Offset = "0x1B9DAA4", VA = "0x1B9DAA4")]
		[DebuggerHidden]
		public <CheckStatus>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x1B9E9C8", Offset = "0x1B9E9C8", VA = "0x1B9E9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1B9E9CC", Offset = "0x1B9E9CC", VA = "0x1B9E9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1B9EAD4", Offset = "0x1B9EAD4", VA = "0x1B9EAD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject VRArcadesPanel;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LicenseDescription;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UpdateButton;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject RequestButton;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RequestDescription;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(5f)]
	public Color GoodColor;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color BadColor;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(5f)]
	public TextMeshProUGUI StatusText;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI RequestDescriptionText;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Space(5f)]
	public GameObject EnableVRArcadeModePanel;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle EnableVRArcadeMode;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Space(5f)]
	public GameObject RemoteControlServerPanel;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TMP_InputField IPAddressText;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_InputField TCPPortText;

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x1B9D8F8", Offset = "0x1B9D8F8", VA = "0x1B9D8F8", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__14))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x1B9D994", Offset = "0x1B9D994", VA = "0x1B9D994", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__15))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x1B9DA30", Offset = "0x1B9DA30", VA = "0x1B9DA30")]
	[IteratorStateMachine(typeof(<CheckStatus>d__16))]
	private IEnumerator CheckStatus()
	{
		return null;
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x1B9DACC", Offset = "0x1B9DACC", VA = "0x1B9DACC")]
	private void UpdateStatusColor()
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x1B9DBB0", Offset = "0x1B9DBB0", VA = "0x1B9DBB0")]
	private void UpdateOptions()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x1B9DEB0", Offset = "0x1B9DEB0", VA = "0x1B9DEB0")]
	public void UpdateLicense()
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x1B9DF34", Offset = "0x1B9DF34", VA = "0x1B9DF34")]
	public void RequestNewLicense()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x1B9E1A8", Offset = "0x1B9E1A8", VA = "0x1B9E1A8")]
	private void Message_OnOk_Clicked(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x1B9E1BC", Offset = "0x1B9E1BC", VA = "0x1B9E1BC")]
	private void RequestNewLincense_OnYes(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x1B9E254", Offset = "0x1B9E254", VA = "0x1B9E254")]
	private void RequestNewLincense_OnNo(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x1B9E26C", Offset = "0x1B9E26C", VA = "0x1B9E26C")]
	public void EnableVRArcadeMode_ValueChanged()
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x1B9E358", Offset = "0x1B9E358", VA = "0x1B9E358")]
	public void IpAddress_OnSelect()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x1B9E3FC", Offset = "0x1B9E3FC", VA = "0x1B9E3FC")]
	public void TCPPort_OnSelect()
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x1B9E360", Offset = "0x1B9E360", VA = "0x1B9E360")]
	private void ShowKeyboard(TMP_InputField text)
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x1B9E404", Offset = "0x1B9E404", VA = "0x1B9E404")]
	public void UpdateIPAndPort()
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x1B9E5C8", Offset = "0x1B9E5C8", VA = "0x1B9E5C8")]
	public VRArcadesConfigurationUI()
	{
	}
}
[Token(Token = "0x2000351")]
public class YawVRConfigurationUI : ConfigurationUI
{
	[Token(Token = "0x2000352")]
	[CompilerGenerated]
	private sealed class <Show>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YawVRConfigurationUI <>4__this;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x1B9FF9C", Offset = "0x1B9FF9C", VA = "0x1B9FF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x1B9FFE4", Offset = "0x1B9FFE4", VA = "0x1B9FFE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1B9EC48", Offset = "0x1B9EC48", VA = "0x1B9EC48")]
		[DebuggerHidden]
		public <Show>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x1B9FAFC", Offset = "0x1B9FAFC", VA = "0x1B9FAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1B9FB00", Offset = "0x1B9FB00", VA = "0x1B9FB00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1B9FFA4", Offset = "0x1B9FFA4", VA = "0x1B9FFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[CompilerGenerated]
	private sealed class <Hide>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YawVRConfigurationUI <>4__this;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x1BA00F0", Offset = "0x1BA00F0", VA = "0x1BA00F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x1BA0138", Offset = "0x1BA0138", VA = "0x1BA0138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1B9ECE4", Offset = "0x1B9ECE4", VA = "0x1B9ECE4")]
		[DebuggerHidden]
		public <Hide>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1B9FFEC", Offset = "0x1B9FFEC", VA = "0x1B9FFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1B9FFF0", Offset = "0x1B9FFF0", VA = "0x1B9FFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1BA00F8", Offset = "0x1BA00F8", VA = "0x1BA00F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[CompilerGenerated]
	private sealed class <CheckStatusAndSimulators>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YawVRConfigurationUI <>4__this;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x1BA02C0", Offset = "0x1BA02C0", VA = "0x1BA02C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x1BA0308", Offset = "0x1BA0308", VA = "0x1BA0308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1B9EE74", Offset = "0x1B9EE74", VA = "0x1B9EE74")]
		[DebuggerHidden]
		public <CheckStatusAndSimulators>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1BA0140", Offset = "0x1BA0140", VA = "0x1BA0140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1BA0144", Offset = "0x1BA0144", VA = "0x1BA0144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1BA02C8", Offset = "0x1BA02C8", VA = "0x1BA02C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject YawVRPanel;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI StatusText;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DisconnectedOptionsPanel;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_InputField IPAddressText;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_InputField TCPPortText;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_InputField UDPPortText;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Dropdown DeviceTypeDropdown;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI AdvancedOptionsText;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject AdvancedOptionsPanel;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ConnectedOptionsPanel;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle AutoStartStopToggle;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle AutoParkToggle;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject AutoParkPanel;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI BatteryText;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject BatteryPanel;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform SimulatorsContent;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject SimulatorLine;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isShowingAdvancedOptions;

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x1B9EB1C", Offset = "0x1B9EB1C", VA = "0x1B9EB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x1B9EB90", Offset = "0x1B9EB90", VA = "0x1B9EB90")]
	public void OnWebsiteClick()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x1B9EBD4", Offset = "0x1B9EBD4", VA = "0x1B9EBD4", Slot = "4")]
	[IteratorStateMachine(typeof(<Show>d__20))]
	public override IEnumerator Show(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x1B9EC70", Offset = "0x1B9EC70", VA = "0x1B9EC70", Slot = "5")]
	[IteratorStateMachine(typeof(<Hide>d__21))]
	public override IEnumerator Hide(bool doAnimation)
	{
		return null;
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0x1B9ED0C", Offset = "0x1B9ED0C", VA = "0x1B9ED0C")]
	public void OnDefaultDeviceTypeChanged()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0x1B9EE00", Offset = "0x1B9EE00", VA = "0x1B9EE00")]
	[IteratorStateMachine(typeof(<CheckStatusAndSimulators>d__23))]
	private IEnumerator CheckStatusAndSimulators()
	{
		return null;
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x1B9EE9C", Offset = "0x1B9EE9C", VA = "0x1B9EE9C")]
	private void TogglePanels()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x1B9EF8C", Offset = "0x1B9EF8C", VA = "0x1B9EF8C")]
	public void ShowSimulatorsList()
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x1B9F594", Offset = "0x1B9F594", VA = "0x1B9F594")]
	public void ReloadSimulatorsList()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x1B9F678", Offset = "0x1B9F678", VA = "0x1B9F678")]
	public void IpAddress_OnSelect()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x1B9F71C", Offset = "0x1B9F71C", VA = "0x1B9F71C")]
	public void TCPPort_OnSelect()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x1B9F724", Offset = "0x1B9F724", VA = "0x1B9F724")]
	public void UDPPort_OnSelect()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x1B9F680", Offset = "0x1B9F680", VA = "0x1B9F680")]
	private void ShowKeyboard(TMP_InputField text)
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x1B9F72C", Offset = "0x1B9F72C", VA = "0x1B9F72C")]
	public void ShowAdvancedOptions()
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x1B9F838", Offset = "0x1B9F838", VA = "0x1B9F838")]
	public void Connect()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x1B9F978", Offset = "0x1B9F978", VA = "0x1B9F978")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x1B9F9FC", Offset = "0x1B9F9FC", VA = "0x1B9F9FC")]
	public void AutoStartStopSimulator_ValueChanged()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x1B9FA84", Offset = "0x1B9FA84", VA = "0x1B9FA84")]
	public void AutoPark_ValueChanged()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x1B9FAF0", Offset = "0x1B9FAF0", VA = "0x1B9FAF0")]
	public YawVRConfigurationUI()
	{
	}
}
[Token(Token = "0x2000355")]
public class YawVRDeviceLine : MonoBehaviour
{
	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI DeviceNameText;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button2 ConnectButton;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public YawDevice Device;

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x1BA0310", Offset = "0x1BA0310", VA = "0x1BA0310")]
	public void OnConnect_Click()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x1BA03C8", Offset = "0x1BA03C8", VA = "0x1BA03C8")]
	public YawVRDeviceLine()
	{
	}
}
[Token(Token = "0x2000356")]
public class GameOverCasualUIController : IController<GameOverCasualUIController>
{
	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas GameOverCasualCanvas;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x1700026C")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1BA03D0", Offset = "0x1BA03D0", VA = "0x1BA03D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026D")]
	public bool IsVisible
	{
		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1BA048C", Offset = "0x1BA048C", VA = "0x1BA048C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x1BA04D8", Offset = "0x1BA04D8", VA = "0x1BA04D8")]
	public void Show()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x1BA0514", Offset = "0x1BA0514", VA = "0x1BA0514")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x1BA0550", Offset = "0x1BA0550", VA = "0x1BA0550")]
	public void ShooterButton_OnClick()
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x1BA05F0", Offset = "0x1BA05F0", VA = "0x1BA05F0")]
	public void RaceButton_OnClick()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x1BA068C", Offset = "0x1BA068C", VA = "0x1BA068C")]
	public GameOverCasualUIController()
	{
	}
}
[Token(Token = "0x2000357")]
public class GameOverGeneralUIController : IController<GameOverGeneralUIController>
{
	[Token(Token = "0x2000358")]
	[CompilerGenerated]
	private sealed class <ScoreAnimation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float score;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Func<float, string> format;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<float> save_score;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameOverGeneralUIController <>4__this;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <time>5__2;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <iterations>5__3;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x1BA0D30", Offset = "0x1BA0D30", VA = "0x1BA0D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1BA0D78", Offset = "0x1BA0D78", VA = "0x1BA0D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1BA0900", Offset = "0x1BA0900", VA = "0x1BA0900")]
		[DebuggerHidden]
		public <ScoreAnimation>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1BA0B10", Offset = "0x1BA0B10", VA = "0x1BA0B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1BA0B14", Offset = "0x1BA0B14", VA = "0x1BA0B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1BA0D38", Offset = "0x1BA0D38", VA = "0x1BA0D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000359")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Func<int> _stars;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int i;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> <>9__0;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1BA0D80", Offset = "0x1BA0D80", VA = "0x1BA0D80")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1BA0D88", Offset = "0x1BA0D88", VA = "0x1BA0D88")]
		internal bool <StarAnimation>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200035A")]
	[CompilerGenerated]
	private sealed class <StarAnimation>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<int> _stars;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass18_0 <>8__1;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image[] images;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameOverGeneralUIController <>4__this;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int stars;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1BA109C", Offset = "0x1BA109C", VA = "0x1BA109C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1BA10E4", Offset = "0x1BA10E4", VA = "0x1BA10E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1BA09DC", Offset = "0x1BA09DC", VA = "0x1BA09DC")]
		[DebuggerHidden]
		public <StarAnimation>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1BA0DC0", Offset = "0x1BA0DC0", VA = "0x1BA0DC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1BA0DC4", Offset = "0x1BA0DC4", VA = "0x1BA0DC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1BA10A4", Offset = "0x1BA10A4", VA = "0x1BA10A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_SCORE;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int ITERATIONS_SCORE;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float ANIMATION_STARS;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource ScoreAudioSource;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource StarsAudioSource;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip ScoreSound;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] StarSound;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite ActiveStar;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite UnactiveStar;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject MenuButton;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject RestartButton;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Canvas GameoverCanvas;

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x1BA06D4", Offset = "0x1BA06D4", VA = "0x1BA06D4")]
	public void SetConvex()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x1BA0740", Offset = "0x1BA0740", VA = "0x1BA0740")]
	public void ShowMenuButton(bool show)
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x1BA0760", Offset = "0x1BA0760", VA = "0x1BA0760")]
	public void ShowRestartButton(bool show)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x1BA0780", Offset = "0x1BA0780", VA = "0x1BA0780")]
	public void MenuButton_OnClick()
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x1BA07D8", Offset = "0x1BA07D8", VA = "0x1BA07D8")]
	public void RestartButton_OnClick()
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x1BA0830", Offset = "0x1BA0830", VA = "0x1BA0830")]
	[IteratorStateMachine(typeof(<ScoreAnimation>d__17))]
	public IEnumerator ScoreAnimation(TextMeshProUGUI text, float score, Func<float, string> format, [Optional] Action<float> save_score)
	{
		return null;
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x1BA0928", Offset = "0x1BA0928", VA = "0x1BA0928")]
	[IteratorStateMachine(typeof(<StarAnimation>d__18))]
	public IEnumerator StarAnimation(Image[] images, int stars, [Optional] Func<int> _stars)
	{
		return null;
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x1BA0A04", Offset = "0x1BA0A04", VA = "0x1BA0A04")]
	public void StarSetup(Image[] stars)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x1BA0A6C", Offset = "0x1BA0A6C", VA = "0x1BA0A6C")]
	public GameOverGeneralUIController()
	{
	}
}
[Token(Token = "0x200035B")]
public class GameOverRaceMultiplayerUIController : IController<GameOverRaceMultiplayerUIController>
{
	[Token(Token = "0x200035D")]
	[CompilerGenerated]
	private sealed class <Show>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverRaceMultiplayerUIController <>4__this;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <score>5__2;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1BA1AA8", Offset = "0x1BA1AA8", VA = "0x1BA1AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1BA1AF0", Offset = "0x1BA1AF0", VA = "0x1BA1AF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1BA1268", Offset = "0x1BA1268", VA = "0x1BA1268")]
		[DebuggerHidden]
		public <Show>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1BA13EC", Offset = "0x1BA13EC", VA = "0x1BA13EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1BA13F0", Offset = "0x1BA13F0", VA = "0x1BA13F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1BA1AB0", Offset = "0x1BA1AB0", VA = "0x1BA1AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas GameOverRaceMultiplayerCanvas;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage WinnerImage;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI WinnerLabel;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI TimeLabel;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x17000272")]
	public bool IsVisible
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1BA10EC", Offset = "0x1BA10EC", VA = "0x1BA10EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000273")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1BA1138", Offset = "0x1BA1138", VA = "0x1BA1138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x1BA11F4", Offset = "0x1BA11F4", VA = "0x1BA11F4")]
	[IteratorStateMachine(typeof(<Show>d__9))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x1BA1290", Offset = "0x1BA1290", VA = "0x1BA1290")]
	public void Hide()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x1BA12CC", Offset = "0x1BA12CC", VA = "0x1BA12CC")]
	public GameOverRaceMultiplayerUIController()
	{
	}
}
[Token(Token = "0x200035E")]
public class GameOverRaceUIController : IController<GameOverRaceUIController>
{
	[Token(Token = "0x2000360")]
	[CompilerGenerated]
	private sealed class <Show>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverRaceUIController <>4__this;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <score>5__2;

		[Token(Token = "0x17000278")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x1BA2AF0", Offset = "0x1BA2AF0", VA = "0x1BA2AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x1BA2B38", Offset = "0x1BA2B38", VA = "0x1BA2B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1BA1C74", Offset = "0x1BA1C74", VA = "0x1BA1C74")]
		[DebuggerHidden]
		public <Show>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1BA258C", Offset = "0x1BA258C", VA = "0x1BA258C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1BA2590", Offset = "0x1BA2590", VA = "0x1BA2590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1BA2AF8", Offset = "0x1BA2AF8", VA = "0x1BA2AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000361")]
	[CompilerGenerated]
	private sealed class <LoadTimes>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverRaceUIController <>4__this;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x1BA2DD4", Offset = "0x1BA2DD4", VA = "0x1BA2DD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x1BA2E1C", Offset = "0x1BA2E1C", VA = "0x1BA2E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1BA1D10", Offset = "0x1BA1D10", VA = "0x1BA1D10")]
		[DebuggerHidden]
		public <LoadTimes>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1BA2B40", Offset = "0x1BA2B40", VA = "0x1BA2B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1BA2B44", Offset = "0x1BA2B44", VA = "0x1BA2B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1BA2DDC", Offset = "0x1BA2DDC", VA = "0x1BA2DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas GameOverRaceCanvas;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI CurrentTimeScoreText;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI BestTimeText;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI PlayersBestTimeText;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI RollerCoasterTimeText;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject CollectablesPanel;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI CollectiblesText;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image[] Stars;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite ActiveStar;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite UnactiveStar;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x17000276")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1BA1AF8", Offset = "0x1BA1AF8", VA = "0x1BA1AF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000277")]
	public bool IsVisible
	{
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1BA1BB4", Offset = "0x1BA1BB4", VA = "0x1BA1BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x1BA1C00", Offset = "0x1BA1C00", VA = "0x1BA1C00")]
	[IteratorStateMachine(typeof(<Show>d__15))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x1BA1C9C", Offset = "0x1BA1C9C", VA = "0x1BA1C9C")]
	[IteratorStateMachine(typeof(<LoadTimes>d__16))]
	private IEnumerator LoadTimes()
	{
		return null;
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x1BA1D38", Offset = "0x1BA1D38", VA = "0x1BA1D38")]
	private bool IsOriginal()
	{
		return default(bool);
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x1BA1E70", Offset = "0x1BA1E70", VA = "0x1BA1E70")]
	public void Hide()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x1BA1EAC", Offset = "0x1BA1EAC", VA = "0x1BA1EAC")]
	private void LeaderboardBestTime_OnResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x1BA209C", Offset = "0x1BA209C", VA = "0x1BA209C")]
	private void LeaderboardPlayersBestTime_OnResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x1BA228C", Offset = "0x1BA228C", VA = "0x1BA228C")]
	public void SetStars(float score, float max)
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x1BA2360", Offset = "0x1BA2360", VA = "0x1BA2360")]
	private int GetStars(float score, float max)
	{
		return default(int);
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x1BA246C", Offset = "0x1BA246C", VA = "0x1BA246C")]
	public GameOverRaceUIController()
	{
	}
}
[Token(Token = "0x2000362")]
public class GameOverShooterUIController : IController<GameOverShooterUIController>
{
	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <Show>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverShooterUIController <>4__this;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x1BA38C8", Offset = "0x1BA38C8", VA = "0x1BA38C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x1BA3910", Offset = "0x1BA3910", VA = "0x1BA3910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1BA2FA0", Offset = "0x1BA2FA0", VA = "0x1BA2FA0")]
		[DebuggerHidden]
		public <Show>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1BA322C", Offset = "0x1BA322C", VA = "0x1BA322C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1BA3230", Offset = "0x1BA3230", VA = "0x1BA3230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1BA38D0", Offset = "0x1BA38D0", VA = "0x1BA38D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas GameOverShooterCanvas;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI TargetsHitText;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI MaxHitsInRowText;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI RewardsText;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI PenaltiesText;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI ShotsMissedText;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject CollectablesPanel;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI CollectiblesText;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image[] Stars;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite ActiveStar;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite UnactiveStar;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _score;

	[Token(Token = "0x1700027C")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1BA2E24", Offset = "0x1BA2E24", VA = "0x1BA2E24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027D")]
	public bool IsVisible
	{
		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1BA2EE0", Offset = "0x1BA2EE0", VA = "0x1BA2EE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x1BA2F2C", Offset = "0x1BA2F2C", VA = "0x1BA2F2C")]
	[IteratorStateMachine(typeof(<Show>d__17))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x1BA2FC8", Offset = "0x1BA2FC8", VA = "0x1BA2FC8")]
	public void Set_score(float value)
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x1BA2FD0", Offset = "0x1BA2FD0", VA = "0x1BA2FD0")]
	public int Get_stars()
	{
		return default(int);
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x1BA3050", Offset = "0x1BA3050", VA = "0x1BA3050")]
	public static string ScoreFormat(float score)
	{
		return null;
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x1BA30D0", Offset = "0x1BA30D0", VA = "0x1BA30D0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x1BA310C", Offset = "0x1BA310C", VA = "0x1BA310C")]
	public GameOverShooterUIController()
	{
	}
}
[Token(Token = "0x2000365")]
public class InterfaceAudioController : IController<InterfaceAudioController>
{
	[Serializable]
	[Token(Token = "0x2000366")]
	public class CategorizedAudioClips
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Category;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] OnEnterClips;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-3f, 1f)]
		public float OnEnterMinPitch;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(1f, 3f)]
		public float OnEnterMaxPitch;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float OnEnterMinVolume;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0f, 1f)]
		public float OnEnterMaxVolume;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] OnExitClips;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(-3f, 1f)]
		public float OnExitMinPitch;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(1f, 3f)]
		public float OnExitMaxPitch;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 1f)]
		public float OnExitMinVolume;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		public float OnExitMaxVolume;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] OnClickClips;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(-3f, 1f)]
		public float OnClickMinPitch;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(1f, 3f)]
		public float OnClickMaxPitch;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 1f)]
		public float OnClickMinVolume;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1f)]
		public float OnClickMaxVolume;

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1BA3F84", Offset = "0x1BA3F84", VA = "0x1BA3F84")]
		public CategorizedAudioClips()
		{
		}
	}

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public AudioSource[] AudioSources;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DefaultCategoryName;

	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource DefaultAudioSource;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CategorizedAudioClips[] Categories;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CategorizedAudioClips defaultCategory;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CategorizedAudioClips tempCategory;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource tempAudioSource;

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x1BA3918", Offset = "0x1BA3918", VA = "0x1BA3918")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x1BA3A28", Offset = "0x1BA3A28", VA = "0x1BA3A28")]
	public void PlayEnterClip(Button2 button)
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x1BA3CB4", Offset = "0x1BA3CB4", VA = "0x1BA3CB4")]
	public void PlayExitClip(Button2 button)
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x1BA3DB4", Offset = "0x1BA3DB4", VA = "0x1BA3DB4")]
	public void PlayClickClip(Button2 button)
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x1BA3B28", Offset = "0x1BA3B28", VA = "0x1BA3B28")]
	public void PlayAudio(AudioClip clip, float pitch, float volume)
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x1BA398C", Offset = "0x1BA398C", VA = "0x1BA398C")]
	private CategorizedAudioClips GetAudioClipsByCategory(string category)
	{
		return null;
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x1BA3C58", Offset = "0x1BA3C58", VA = "0x1BA3C58")]
	private AudioClip GetAudioClip(AudioClip[] clips)
	{
		return null;
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x1BA3CA4", Offset = "0x1BA3CA4", VA = "0x1BA3CA4")]
	private float GetPitch(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x1BA3CAC", Offset = "0x1BA3CAC", VA = "0x1BA3CAC")]
	private float GetVolume(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x1BA3EB4", Offset = "0x1BA3EB4", VA = "0x1BA3EB4")]
	private AudioSource GetAvailableAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x1BA3F3C", Offset = "0x1BA3F3C", VA = "0x1BA3F3C")]
	public InterfaceAudioController()
	{
	}
}
[Token(Token = "0x2000367")]
public class KeyboardExtraButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image ButtonBackgroundImage;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ButtonImage;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ButtonIconImage;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI ButtonText;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite OnPointerEnterButtonImage;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite OnPointerExitButtonImage;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color OnPointerEnterBackgroundColor;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color OnPointerExitBackgroundColor;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color OnPointerEnterIconColor;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color OnPointerExitIconColor;

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x1BA3FA0", Offset = "0x1BA3FA0", VA = "0x1BA3FA0", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x1BA4004", Offset = "0x1BA4004", VA = "0x1BA4004", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x1BA4068", Offset = "0x1BA4068", VA = "0x1BA4068", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x1BA406C", Offset = "0x1BA406C", VA = "0x1BA406C")]
	public KeyboardExtraButton()
	{
	}
}
[Token(Token = "0x2000368")]
public class KeyboardSlider : MonoBehaviour, IEndDragHandler, IEventSystemHandler
{
	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x1BA4074", Offset = "0x1BA4074", VA = "0x1BA4074", Slot = "4")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x1BA4078", Offset = "0x1BA4078", VA = "0x1BA4078")]
	public KeyboardSlider()
	{
	}
}
[Token(Token = "0x2000369")]
public class KeyboardStepButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIGameStateEnum RelatedMenuState;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite PointerEnterSprite;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite PointerExitSprite;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image ButtonImage;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image IconImage;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI StepLabel;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color PointerEnterColor;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color PointerExitColor;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color UnblockedButtonColor;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color BlockedButtonColor;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color BlockedIconColor;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool IsCurrent;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool IsBlocked;

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x1BA4080", Offset = "0x1BA4080", VA = "0x1BA4080")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x1BA410C", Offset = "0x1BA410C", VA = "0x1BA410C", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x1BA4168", Offset = "0x1BA4168", VA = "0x1BA4168")]
	public void SetAsCurrent(bool isCurrent)
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x1BA4240", Offset = "0x1BA4240", VA = "0x1BA4240")]
	public void SetAsBlocked()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x1BA4298", Offset = "0x1BA4298", VA = "0x1BA4298", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x1BA42B4", Offset = "0x1BA42B4", VA = "0x1BA42B4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x1BA4174", Offset = "0x1BA4174", VA = "0x1BA4174")]
	public void Selected(bool selected)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x1BA42D0", Offset = "0x1BA42D0", VA = "0x1BA42D0")]
	public KeyboardStepButton()
	{
	}
}
[Token(Token = "0x200036A")]
public class EllipsisAnimation : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	private class EllipseAnimation
	{
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI EllipsisText;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool toMax;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color color;

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1BA4494", Offset = "0x1BA4494", VA = "0x1BA4494")]
		public EllipseAnimation(TextMeshProUGUI text)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x1BA4574", Offset = "0x1BA4574", VA = "0x1BA4574")]
		public void DoAnimation()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1BA46E0", Offset = "0x1BA46E0", VA = "0x1BA46E0")]
		private void EllipseAnimationUpdate(float alpha)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1BA46E4", Offset = "0x1BA46E4", VA = "0x1BA46E4")]
		private void EllipseAnimationComplete()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1BA44E0", Offset = "0x1BA44E0", VA = "0x1BA44E0")]
		private void SetColor(float alpha)
		{
		}
	}

	[Token(Token = "0x200036C")]
	[CompilerGenerated]
	private sealed class <StartAnimationCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EllipsisAnimation <>4__this;

		[Token(Token = "0x17000280")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x1BA4914", Offset = "0x1BA4914", VA = "0x1BA4914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x1BA495C", Offset = "0x1BA495C", VA = "0x1BA495C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1BA4394", Offset = "0x1BA4394", VA = "0x1BA4394")]
		[DebuggerHidden]
		public <StartAnimationCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1BA46F4", Offset = "0x1BA46F4", VA = "0x1BA46F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1BA46F8", Offset = "0x1BA46F8", VA = "0x1BA46F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x1BA491C", Offset = "0x1BA491C", VA = "0x1BA491C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Ellipsis01;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Ellipsis02;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI Ellipsis03;

	[Token(Token = "0x40018A1")]
	private const float MAX_ALPHA = 1f;

	[Token(Token = "0x40018A2")]
	private const float MIN_ALPHA = 0f;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color whiteColor;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EllipseAnimation ellipse01;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EllipseAnimation ellipse02;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EllipseAnimation ellipse03;

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x1BA42D8", Offset = "0x1BA42D8", VA = "0x1BA42D8")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x1BA4320", Offset = "0x1BA4320", VA = "0x1BA4320")]
	[IteratorStateMachine(typeof(<StartAnimationCoroutine>d__11))]
	private IEnumerator StartAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x1BA43BC", Offset = "0x1BA43BC", VA = "0x1BA43BC")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x1BA4440", Offset = "0x1BA4440", VA = "0x1BA4440")]
	public EllipsisAnimation()
	{
	}
}
[Token(Token = "0x200036D")]
public class MenuLeaderboardMode : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderboardType RelatedLeaderboardType;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button2 ModeButton;

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x1BA4964", Offset = "0x1BA4964", VA = "0x1BA4964")]
	private void Start()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x1BA4A4C", Offset = "0x1BA4A4C", VA = "0x1BA4A4C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x1BA4AFC", Offset = "0x1BA4AFC", VA = "0x1BA4AFC")]
	public MenuLeaderboardMode()
	{
	}
}
[Token(Token = "0x200036E")]
public class MenuLeaderboardModeChooserUIController : IController<MenuLeaderboardModeChooserUIController>
{
	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ANIMATION_TIME;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuLeaderboardMode[] MenuLeaderboardModes;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ModePanel;

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x1BA4B04", Offset = "0x1BA4B04", VA = "0x1BA4B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x1BA4B24", Offset = "0x1BA4B24", VA = "0x1BA4B24")]
	public void Show()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x1BA4B44", Offset = "0x1BA4B44", VA = "0x1BA4B44")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x1BA4AA4", Offset = "0x1BA4AA4", VA = "0x1BA4AA4")]
	public void OnModeSelected(LeaderboardType mode)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x1BA4B6C", Offset = "0x1BA4B6C", VA = "0x1BA4B6C")]
	public MenuLeaderboardModeChooserUIController()
	{
	}
}
[Token(Token = "0x200036F")]
public class MenuLeaderboardScenario : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button2 ScenarioButton;

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScenarioButtonText;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public RideType RelatedScenarioType;

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x1BA4C04", Offset = "0x1BA4C04", VA = "0x1BA4C04")]
	public void SetScenario(Scenario scenario)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x1BA4C4C", Offset = "0x1BA4C4C", VA = "0x1BA4C4C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x1BA4CFC", Offset = "0x1BA4CFC", VA = "0x1BA4CFC")]
	public MenuLeaderboardScenario()
	{
	}
}
[Token(Token = "0x2000370")]
public class MenuLeaderboardScenarioChooserUIController : IController<MenuLeaderboardScenarioChooserUIController>
{
	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ANIMATION_TIME;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuLeaderboardScenario[] MenuLeaderboardScenarios;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ScenarioChooserPanel;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInitialized;

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x1BA4D04", Offset = "0x1BA4D04", VA = "0x1BA4D04")]
	private void Start()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x1BA4D24", Offset = "0x1BA4D24", VA = "0x1BA4D24")]
	public void InitializeScenarios()
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x1BA4F34", Offset = "0x1BA4F34", VA = "0x1BA4F34")]
	public void Show()
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x1BA4F54", Offset = "0x1BA4F54", VA = "0x1BA4F54")]
	public void Hide()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x1BA4CA4", Offset = "0x1BA4CA4", VA = "0x1BA4CA4")]
	public void OnScenarioSelected(RideType rideType)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x1BA4FF8", Offset = "0x1BA4FF8", VA = "0x1BA4FF8")]
	public MenuLeaderboardScenarioChooserUIController()
	{
	}
}
[Token(Token = "0x2000372")]
public class LeaderboardUILine : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	public enum LineStatus
	{
		[Token(Token = "0x40018CF")]
		NO_VALUE_LINE,
		[Token(Token = "0x40018D0")]
		VALUED_LINE
	}

	[Token(Token = "0x2000374")]
	[CompilerGenerated]
	private sealed class <DownloadStarter>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardUILine <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x1BA5FBC", Offset = "0x1BA5FBC", VA = "0x1BA5FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x1BA6004", Offset = "0x1BA6004", VA = "0x1BA6004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1BA523C", Offset = "0x1BA523C", VA = "0x1BA523C")]
		[DebuggerHidden]
		public <DownloadStarter>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1BA5E28", Offset = "0x1BA5E28", VA = "0x1BA5E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1BA5E2C", Offset = "0x1BA5E2C", VA = "0x1BA5E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1BA5FC4", Offset = "0x1BA5FC4", VA = "0x1BA5FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float ANIMATION_TIME;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color LocalUserColor;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color OtherUsersColor;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color LineBackgroundColor;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color TextColor;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image LineBackground;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI PositionText;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RawImage UserImage;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image UsedItemImage;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool IsHeader;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[HideInInspector]
	public LineStatus Status;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isLocalUser;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color backgroundHiddenColor;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Color textHiddenColor;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color whiteColor;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool download;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private LeaderboardItem item;

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x1BA5120", Offset = "0x1BA5120", VA = "0x1BA5120")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x1BA5144", Offset = "0x1BA5144", VA = "0x1BA5144")]
	private void Update()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x1BA51C8", Offset = "0x1BA51C8", VA = "0x1BA51C8")]
	[IteratorStateMachine(typeof(<DownloadStarter>d__22))]
	private IEnumerator DownloadStarter()
	{
		return null;
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x1BA5264", Offset = "0x1BA5264", VA = "0x1BA5264")]
	public void HideWithoutAnimation()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x1BA53BC", Offset = "0x1BA53BC", VA = "0x1BA53BC")]
	public void ShowWithAnimation(bool show)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x1BA5710", Offset = "0x1BA5710", VA = "0x1BA5710")]
	private void LineBackgroundColorAnimation(Color color)
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x1BA5734", Offset = "0x1BA5734", VA = "0x1BA5734")]
	private void TextColorAnimation(Color color)
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x1BA58A0", Offset = "0x1BA58A0", VA = "0x1BA58A0")]
	public void ChangeValues(LeaderboardItem item, CoasterType coasterType, bool isMultiplayer)
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x1BA5CAC", Offset = "0x1BA5CAC", VA = "0x1BA5CAC")]
	public void ChangeValues(CoasterType coasterType, bool isMultiplayer)
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x1BA5DF8", Offset = "0x1BA5DF8", VA = "0x1BA5DF8")]
	public void SetStatus(LineStatus status)
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x1BA5E00", Offset = "0x1BA5E00", VA = "0x1BA5E00")]
	public LeaderboardUILine()
	{
	}
}
[Token(Token = "0x2000375")]
public class MenuLeaderboardUIController : IController<MenuLeaderboardUIController>
{
	[Token(Token = "0x2000376")]
	public enum MenuLeaderboadInterfaceStatus
	{
		[Token(Token = "0x40018E6")]
		NONE,
		[Token(Token = "0x40018E7")]
		CHOOSING_MODE,
		[Token(Token = "0x40018E8")]
		CHOOSING_SCENARIO,
		[Token(Token = "0x40018E9")]
		LEADERBOARD
	}

	[Token(Token = "0x2000377")]
	public enum LeaderboardStatus
	{
		[Token(Token = "0x40018EB")]
		NONE,
		[Token(Token = "0x40018EC")]
		LOADING,
		[Token(Token = "0x40018ED")]
		LOADED,
		[Token(Token = "0x40018EE")]
		NO_RESULTS_FOUND
	}

	[Token(Token = "0x2000378")]
	[CompilerGenerated]
	private sealed class <Show>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuLeaderboardUIController <>4__this;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x1BA7C08", Offset = "0x1BA7C08", VA = "0x1BA7C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x1BA7C50", Offset = "0x1BA7C50", VA = "0x1BA7C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1BA671C", Offset = "0x1BA671C", VA = "0x1BA671C")]
		[DebuggerHidden]
		public <Show>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x1BA75A4", Offset = "0x1BA75A4", VA = "0x1BA75A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1BA75A8", Offset = "0x1BA75A8", VA = "0x1BA75A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1BA7C10", Offset = "0x1BA7C10", VA = "0x1BA7C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000379")]
	[CompilerGenerated]
	private sealed class <Hide>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool animate;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MenuLeaderboardUIController <>4__this;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x1BA7DB8", Offset = "0x1BA7DB8", VA = "0x1BA7DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x1BA7E00", Offset = "0x1BA7E00", VA = "0x1BA7E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1BA67CC", Offset = "0x1BA67CC", VA = "0x1BA67CC")]
		[DebuggerHidden]
		public <Hide>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1BA7C58", Offset = "0x1BA7C58", VA = "0x1BA7C58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1BA7C5C", Offset = "0x1BA7C5C", VA = "0x1BA7C5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1BA7DC0", Offset = "0x1BA7DC0", VA = "0x1BA7DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LeaderboardPanel;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint TopUsersToLoad;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint AroundUserToLoad;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeaderboardUILine TableHeader;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LeaderboardUILine[] LeaderboardUILines;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject LoadingPanel;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NoResultsFound;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D DefaultImage;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button2 BackButton;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI FilterLeaderboardModeText;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI FilterScenarioNameText;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle OnlyFriendsButton;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MenuLeaderboadInterfaceStatus currentLeaderboardInterfaceStatus;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private LeaderboardStatus currentLeaderboardStatus;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Leaderboard leaderboardRequest;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LeaderboardType currentLeaderboardType;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Scenario currentScenario;

	[Token(Token = "0x17000284")]
	private bool onlyFriends
	{
		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1BA600C", Offset = "0x1BA600C", VA = "0x1BA600C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000285")]
	private bool isOriginal
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1BA6028", Offset = "0x1BA6028", VA = "0x1BA6028")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000286")]
	private bool isMultiplayer
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1BA6044", Offset = "0x1BA6044", VA = "0x1BA6044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000287")]
	private CoasterType currentCoasterType
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1BA6060", Offset = "0x1BA6060", VA = "0x1BA6060")]
		get
		{
			return default(CoasterType);
		}
	}

	[Token(Token = "0x17000288")]
	public Scenario CurrentScenario
	{
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1BA6084", Offset = "0x1BA6084", VA = "0x1BA6084")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x1BA608C", Offset = "0x1BA608C", VA = "0x1BA608C")]
	private void Start()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x1BA6158", Offset = "0x1BA6158", VA = "0x1BA6158")]
	public void ChangeLeaderboardState(MenuLeaderboadInterfaceStatus newInterfaceStatus, LeaderboardStatus newLeaderboardStatus)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x1BA6570", Offset = "0x1BA6570", VA = "0x1BA6570")]
	public void UpdateFilters()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x1BA66A8", Offset = "0x1BA66A8", VA = "0x1BA66A8")]
	[IteratorStateMachine(typeof(<Show>d__32))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x1BA6744", Offset = "0x1BA6744", VA = "0x1BA6744")]
	[IteratorStateMachine(typeof(<Hide>d__33))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x1BA60A4", Offset = "0x1BA60A4", VA = "0x1BA60A4")]
	public void ShowLines(bool show, bool useAnimation)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x1BA67F4", Offset = "0x1BA67F4", VA = "0x1BA67F4")]
	public void ShowLoading()
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x1BA4B64", Offset = "0x1BA4B64", VA = "0x1BA4B64")]
	public void ChangeSelectedLeaderboardType(LeaderboardType leaderboardType)
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x1BA4F74", Offset = "0x1BA4F74", VA = "0x1BA4F74")]
	public void ChangeSelectedScenario(RideType rideType)
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x1BA67F8", Offset = "0x1BA67F8", VA = "0x1BA67F8")]
	public void LoadLeaderboard()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x1BA69A4", Offset = "0x1BA69A4", VA = "0x1BA69A4")]
	public void ChangeLinesValues(SortedDictionary<int, LeaderboardItem> result, uint startAt)
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x1BA6C2C", Offset = "0x1BA6C2C", VA = "0x1BA6C2C")]
	private void TopThree_OnResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x1BA7190", Offset = "0x1BA7190", VA = "0x1BA7190")]
	private void TopResultsWithLocalUser_OnResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x1BA727C", Offset = "0x1BA727C", VA = "0x1BA727C")]
	private void CenteredOnLocalUser_OnResultsFound(SortedDictionary<int, LeaderboardItem> result)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x1BA74C0", Offset = "0x1BA74C0", VA = "0x1BA74C0")]
	public void BackButton_OnClick()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x1BA74C4", Offset = "0x1BA74C4", VA = "0x1BA74C4")]
	public void ModeButton_OnClick()
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x1BA74E0", Offset = "0x1BA74E0", VA = "0x1BA74E0")]
	public void ScenarioButton_OnClick()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x1BA74FC", Offset = "0x1BA74FC", VA = "0x1BA74FC")]
	public void FriendRadio_OnChange()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x1BA7500", Offset = "0x1BA7500", VA = "0x1BA7500")]
	public MenuLeaderboardUIController()
	{
	}
}
[Token(Token = "0x200037A")]
public class UserImageDownloader : MonoBehaviour
{
	[Token(Token = "0x200037B")]
	public enum ImageSize
	{
		[Token(Token = "0x40018F9")]
		Small,
		[Token(Token = "0x40018FA")]
		Medium,
		[Token(Token = "0x40018FB")]
		Large
	}

	[Token(Token = "0x200037C")]
	[CompilerGenerated]
	private sealed class <DownloadImages>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cacheURL;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x1BA88AC", Offset = "0x1BA88AC", VA = "0x1BA88AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x1BA88F4", Offset = "0x1BA88F4", VA = "0x1BA88F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x1BA7E98", Offset = "0x1BA7E98", VA = "0x1BA7E98")]
		[DebuggerHidden]
		public <DownloadImages>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1BA8554", Offset = "0x1BA8554", VA = "0x1BA8554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x1BA8558", Offset = "0x1BA8558", VA = "0x1BA8558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1BA88B4", Offset = "0x1BA88B4", VA = "0x1BA88B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037D")]
	[CompilerGenerated]
	private sealed class <DownloadImages>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageSize size;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage image;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <cacheURL>5__2;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x1BA8B44", Offset = "0x1BA8B44", VA = "0x1BA8B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x1BA8B8C", Offset = "0x1BA8B8C", VA = "0x1BA8B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1BA7EC0", Offset = "0x1BA7EC0", VA = "0x1BA7EC0")]
		[DebuggerHidden]
		public <DownloadImages>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1BA88FC", Offset = "0x1BA88FC", VA = "0x1BA88FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1BA8900", Offset = "0x1BA8900", VA = "0x1BA8900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1BA8B4C", Offset = "0x1BA8B4C", VA = "0x1BA8B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200037E")]
	[CompilerGenerated]
	private sealed class <DownloadImages>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string URL;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageSize size;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material mat;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <cacheURL>5__2;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x1BA8DF8", Offset = "0x1BA8DF8", VA = "0x1BA8DF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x1BA8E40", Offset = "0x1BA8E40", VA = "0x1BA8E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1BA7F80", Offset = "0x1BA7F80", VA = "0x1BA7F80")]
		[DebuggerHidden]
		public <DownloadImages>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1BA8B94", Offset = "0x1BA8B94", VA = "0x1BA8B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1BA8B98", Offset = "0x1BA8B98", VA = "0x1BA8B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1BA8E00", Offset = "0x1BA8E00", VA = "0x1BA8E00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static YieldInstruction waitFrame;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Texture2D> cachedImages;

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x1BA7E08", Offset = "0x1BA7E08", VA = "0x1BA7E08")]
	[IteratorStateMachine(typeof(<DownloadImages>d__3))]
	private static IEnumerator DownloadImages(string URL, string cacheURL, ImageSize size = ImageSize.Large)
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x1BA1A10", Offset = "0x1BA1A10", VA = "0x1BA1A10")]
	[IteratorStateMachine(typeof(<DownloadImages>d__4))]
	public static IEnumerator DownloadImages(string URL, RawImage image, ImageSize size = ImageSize.Large)
	{
		return null;
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x1BA7EE8", Offset = "0x1BA7EE8", VA = "0x1BA7EE8")]
	[IteratorStateMachine(typeof(<DownloadImages>d__5))]
	public static IEnumerator DownloadImages(string URL, Material mat, ImageSize size = ImageSize.Large)
	{
		return null;
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x1BA7FA8", Offset = "0x1BA7FA8", VA = "0x1BA7FA8")]
	public static void FlipTextureData(ref Texture2D texture)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x1BA8028", Offset = "0x1BA8028", VA = "0x1BA8028")]
	public static Texture2D FlipTextureVertical(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x1BA8170", Offset = "0x1BA8170", VA = "0x1BA8170")]
	public static string GetImagesPath()
	{
		return null;
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x1BA81DC", Offset = "0x1BA81DC", VA = "0x1BA81DC")]
	private static string GetFileName(string url)
	{
		return null;
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x1BA84C8", Offset = "0x1BA84C8", VA = "0x1BA84C8")]
	public UserImageDownloader()
	{
	}
}
[Token(Token = "0x200037F")]
public class LoadingTweenAnimation : MonoBehaviour
{
	[Token(Token = "0x6001676")]
	[Address(RVA = "0x1BA8E48", Offset = "0x1BA8E48", VA = "0x1BA8E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x1BA8F30", Offset = "0x1BA8F30", VA = "0x1BA8F30")]
	public LoadingTweenAnimation()
	{
	}
}
[Token(Token = "0x2000380")]
public enum StepState : byte
{
	[Token(Token = "0x400190E")]
	OUT,
	[Token(Token = "0x400190F")]
	MOVE,
	[Token(Token = "0x4001910")]
	IN,
	[Token(Token = "0x4001911")]
	NONE
}
[Token(Token = "0x2000381")]
public class MenuStep : MonoBehaviour
{
	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIGameStateEnum RelatedMenuState;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button2 Button;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup Group;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite Remaining;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite Done;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public StepState State;

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x1BA8F38", Offset = "0x1BA8F38", VA = "0x1BA8F38")]
	public void Lock(bool locked)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x1BA8F58", Offset = "0x1BA8F58", VA = "0x1BA8F58")]
	public void SetDone(bool done)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x1BA8F8C", Offset = "0x1BA8F8C", VA = "0x1BA8F8C")]
	public void FadeOut(float time)
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x1BA9010", Offset = "0x1BA9010", VA = "0x1BA9010")]
	public void FadeIn(float time)
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x1BA9094", Offset = "0x1BA9094", VA = "0x1BA9094")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x1BA90B4", Offset = "0x1BA90B4", VA = "0x1BA90B4")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x1BA90D4", Offset = "0x1BA90D4", VA = "0x1BA90D4")]
	public MenuStep()
	{
	}
}
[Token(Token = "0x2000382")]
public class MenuUIController : IController<MenuUIController>
{
	[Token(Token = "0x2000383")]
	[CompilerGenerated]
	private sealed class <LateStart>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000298")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x1BAC0B8", Offset = "0x1BAC0B8", VA = "0x1BAC0B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x1BAC100", Offset = "0x1BAC100", VA = "0x1BAC100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1BA9B64", Offset = "0x1BA9B64", VA = "0x1BA9B64")]
		[DebuggerHidden]
		public <LateStart>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1BABFF8", Offset = "0x1BABFF8", VA = "0x1BABFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x1BABFFC", Offset = "0x1BABFFC", VA = "0x1BABFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1BAC0C0", Offset = "0x1BAC0C0", VA = "0x1BAC0C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000384")]
	[CompilerGenerated]
	private sealed class <ShowMainMenu>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x1700029A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1BAC4B8", Offset = "0x1BAC4B8", VA = "0x1BAC4B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1BAC500", Offset = "0x1BAC500", VA = "0x1BAC500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1BA9EB0", Offset = "0x1BA9EB0", VA = "0x1BA9EB0")]
		[DebuggerHidden]
		public <ShowMainMenu>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1BAC108", Offset = "0x1BAC108", VA = "0x1BAC108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1BAC10C", Offset = "0x1BAC10C", VA = "0x1BAC10C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1BAC4C0", Offset = "0x1BAC4C0", VA = "0x1BAC4C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000385")]
	[CompilerGenerated]
	private sealed class <HideMainMenu>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x1700029C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x1BAC840", Offset = "0x1BAC840", VA = "0x1BAC840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x1BAC888", Offset = "0x1BAC888", VA = "0x1BAC888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1BA9F60", Offset = "0x1BA9F60", VA = "0x1BA9F60")]
		[DebuggerHidden]
		public <HideMainMenu>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1BAC508", Offset = "0x1BAC508", VA = "0x1BAC508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1BAC50C", Offset = "0x1BAC50C", VA = "0x1BAC50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1BAC848", Offset = "0x1BAC848", VA = "0x1BAC848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000386")]
	[CompilerGenerated]
	private sealed class <StepMenuAnimationQueue>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1BACAFC", Offset = "0x1BACAFC", VA = "0x1BACAFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1BACB44", Offset = "0x1BACB44", VA = "0x1BACB44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x1BAB0A8", Offset = "0x1BAB0A8", VA = "0x1BAB0A8")]
		[DebuggerHidden]
		public <StepMenuAnimationQueue>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1BAC890", Offset = "0x1BAC890", VA = "0x1BAC890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1BAC894", Offset = "0x1BAC894", VA = "0x1BAC894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1BACB04", Offset = "0x1BACB04", VA = "0x1BACB04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000389")]
	[CompilerGenerated]
	private sealed class <StepMenuAnimation>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MenuStep[] <steps>5__2;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] <finalPos>5__3;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StepState <last>5__4;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__5;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1BAD634", Offset = "0x1BAD634", VA = "0x1BAD634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x1BAD67C", Offset = "0x1BAD67C", VA = "0x1BAD67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1BAB144", Offset = "0x1BAB144", VA = "0x1BAB144")]
		[DebuggerHidden]
		public <StepMenuAnimation>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1BACC10", Offset = "0x1BACC10", VA = "0x1BACC10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1BACC14", Offset = "0x1BACC14", VA = "0x1BACC14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1BAD63C", Offset = "0x1BAD63C", VA = "0x1BAD63C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038A")]
	[CompilerGenerated]
	private sealed class <HideSteps>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x1BAD800", Offset = "0x1BAD800", VA = "0x1BAD800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x1BAD848", Offset = "0x1BAD848", VA = "0x1BAD848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1BAB1E0", Offset = "0x1BAB1E0", VA = "0x1BAB1E0")]
		[DebuggerHidden]
		public <HideSteps>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1BAD684", Offset = "0x1BAD684", VA = "0x1BAD684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1BAD688", Offset = "0x1BAD688", VA = "0x1BAD688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1BAD808", Offset = "0x1BAD808", VA = "0x1BAD808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038B")]
	[CompilerGenerated]
	private sealed class <ShowSteps>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x1BAD9CC", Offset = "0x1BAD9CC", VA = "0x1BAD9CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x1BADA14", Offset = "0x1BADA14", VA = "0x1BADA14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x1BAB27C", Offset = "0x1BAB27C", VA = "0x1BAB27C")]
		[DebuggerHidden]
		public <ShowSteps>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1BAD850", Offset = "0x1BAD850", VA = "0x1BAD850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1BAD854", Offset = "0x1BAD854", VA = "0x1BAD854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1BAD9D4", Offset = "0x1BAD9D4", VA = "0x1BAD9D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038C")]
	[CompilerGenerated]
	private sealed class <PremiunBundleEnterAnimation>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuUIController <>4__this;

		[Token(Token = "0x170002A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x1BADB18", Offset = "0x1BADB18", VA = "0x1BADB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x1BADB60", Offset = "0x1BADB60", VA = "0x1BADB60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1BABE58", Offset = "0x1BABE58", VA = "0x1BABE58")]
		[DebuggerHidden]
		public <PremiunBundleEnterAnimation>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1BADA1C", Offset = "0x1BADA1C", VA = "0x1BADA1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1BADA20", Offset = "0x1BADA20", VA = "0x1BADA20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1BADB20", Offset = "0x1BADB20", VA = "0x1BADB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float MENUSTEP_ANIMATION_TIME;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float MENUSTEP_DELAY1_TIME;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float MENUSTEP_DELAY2_TIME;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float GENERIC_FADE_TIME;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Menu Proprieties")]
	public Canvas MainCanvas;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MainMenuPanel;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SideMenuPanel;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SideBuyPanel;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PremiumBundlePanel;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Buy Side Panel")]
	public TextMeshProUGUI DiscountText;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI PriceText;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject SaleObject;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Options Buttons")]
	public GameObject LobbyButton;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject StoreButton;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject NotificationButton;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject NotificationWithUpdateButton;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject AvatarEditorButton;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject PhotoAlbumButton;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SettingsButton;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ExitButton;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Resume")]
	public Canvas ResumeButtonCanvas;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BaseRaycaster resumeButtonCanvasRaycaster;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Menu Animation")]
	public CanvasGroup MainMenuCanvasGroup;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CanvasGroup SideMenuCanvasGroup;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CanvasGroup SideBuyCanvasGroup;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CanvasGroup MultiplayerCanvasGroup;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Step Line Proprieties")]
	public Canvas StepsCanvas;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LayoutGroup StepsLayoutGroup;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RectTransform StepsLayoutRect;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CanvasGroup StepsCanvasGroup;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshProUGUI StepsInText;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private BaseRaycaster stepsGraphicRaycaster;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MeshCollider _canvasMeshCollider;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public MenuStep[] Steps;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform HiddenPosition;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Other Proprieties")]
	public Canvas FadeCanvas;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TrackedDeviceGraphicRaycaster FadeRaycast;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image ImageBlocker;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip StepsChangeAudioClip;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite UserDefaultImage;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Dictionary<UIGameStateEnum, bool> MenuStepsStatus;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool isHidden;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool isFadingOutImageBlocker;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	private bool areStepsStarted;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Coroutine queue;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool inTransition;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Color PREMIUMBUNDLE_HOVER;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Color PREMIUMBUNDLE_OFF_1;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static Color PREMIUMBUNDLE_OFF_2;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static float PREMIUMBUNDLE_TIME1;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float PREMIUMBUNDLE_TIME2;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Coroutine premiumBundleExitAnimation;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool premiumBundleEnterAnimation;

	[Token(Token = "0x17000293")]
	public BaseRaycaster ResumeButtonCanvasRaycaster
	{
		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1BA90DC", Offset = "0x1BA90DC", VA = "0x1BA90DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000294")]
	private BaseRaycaster StepsGraphicRaycaster
	{
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1BA918C", Offset = "0x1BA918C", VA = "0x1BA918C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000295")]
	public MeshCollider CanvasMeshCollider
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1BA9248", Offset = "0x1BA9248", VA = "0x1BA9248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000296")]
	private static bool ShouldShowMultiplayerUI
	{
		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1BA92F8", Offset = "0x1BA92F8", VA = "0x1BA92F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000297")]
	private static bool ShouldShowLeaderboardAchievementUI
	{
		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1BA9388", Offset = "0x1BA9388", VA = "0x1BA9388")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x1BA9390", Offset = "0x1BA9390", VA = "0x1BA9390")]
	private void Start()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x1BA95B0", Offset = "0x1BA95B0", VA = "0x1BA95B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x1BA9550", Offset = "0x1BA9550", VA = "0x1BA9550")]
	[IteratorStateMachine(typeof(<LateStart>d__55))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x1BA9928", Offset = "0x1BA9928", VA = "0x1BA9928")]
	public void VerifyFade()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x1BA9E3C", Offset = "0x1BA9E3C", VA = "0x1BA9E3C")]
	[IteratorStateMachine(typeof(<ShowMainMenu>d__57))]
	public IEnumerator ShowMainMenu()
	{
		return null;
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x1BA9ED8", Offset = "0x1BA9ED8", VA = "0x1BA9ED8")]
	[IteratorStateMachine(typeof(<HideMainMenu>d__58))]
	public IEnumerator HideMainMenu(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x1BA9648", Offset = "0x1BA9648", VA = "0x1BA9648")]
	public void ShowCloseButton(UIGameStateEnum uiGameState)
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x1BAA0BC", Offset = "0x1BAA0BC", VA = "0x1BAA0BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x1BAA00C", Offset = "0x1BAA00C", VA = "0x1BAA00C")]
	private void AddCloseListener()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x1BA9AB4", Offset = "0x1BA9AB4", VA = "0x1BA9AB4")]
	private void RemoveCloseListener()
	{
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x1BA9790", Offset = "0x1BA9790", VA = "0x1BA9790")]
	public void ShowResumeAndExitButton()
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x1BAA0C0", Offset = "0x1BAA0C0", VA = "0x1BAA0C0")]
	public void ToggleExitButton(bool enable)
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x1BAA114", Offset = "0x1BAA114", VA = "0x1BAA114")]
	public void UpdateNotificationButton()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x1BA9B8C", Offset = "0x1BA9B8C", VA = "0x1BA9B8C")]
	public void FadeImageBlocker(bool show)
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x1BA9454", Offset = "0x1BA9454", VA = "0x1BA9454")]
	public void HideImageBlocker()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x1BAA1A4", Offset = "0x1BAA1A4", VA = "0x1BAA1A4")]
	public bool IsStepUnblocked(UIGameStateEnum step)
	{
		return default(bool);
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x1BAA458", Offset = "0x1BAA458", VA = "0x1BAA458")]
	public bool IsStepDone(UIGameStateEnum step)
	{
		return default(bool);
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x1BAA4A0", Offset = "0x1BAA4A0", VA = "0x1BAA4A0")]
	public bool IsModeStepDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x1BAA1EC", Offset = "0x1BAA1EC", VA = "0x1BAA1EC")]
	public bool IsScenarioStepUnblocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x1BAA4FC", Offset = "0x1BAA4FC", VA = "0x1BAA4FC")]
	public bool IsScenarioStepDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x1BAA264", Offset = "0x1BAA264", VA = "0x1BAA264")]
	public bool IsWeaponStepUnblocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x1BAA700", Offset = "0x1BAA700", VA = "0x1BAA700")]
	public bool IsWeaponStepDone()
	{
		return default(bool);
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x1BAA1F0", Offset = "0x1BAA1F0", VA = "0x1BAA1F0")]
	public bool IsCartStepUnblocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x1BAA634", Offset = "0x1BAA634", VA = "0x1BAA634")]
	public bool IsCartStepDone()
	{
		return default(bool);
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x1BAA2D8", Offset = "0x1BAA2D8", VA = "0x1BAA2D8")]
	public bool IsCompanionCharacterStepUnblocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0x1BAA7CC", Offset = "0x1BAA7CC", VA = "0x1BAA7CC")]
	public bool IsCompanionCharacterDone()
	{
		return default(bool);
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x1BAA380", Offset = "0x1BAA380", VA = "0x1BAA380")]
	public bool IsPlayStepUnblocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x1BAA87C", Offset = "0x1BAA87C", VA = "0x1BAA87C")]
	public void SetStepButtonAsCurrent(UIGameStateEnum state)
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x1BA94B4", Offset = "0x1BA94B4", VA = "0x1BA94B4")]
	private void StartSteps()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x1BAA90C", Offset = "0x1BAA90C", VA = "0x1BAA90C")]
	private void UpdateStep(UIGameStateEnum state, Action<MenuStep, UIGameStateEnum> action)
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x1BAA978", Offset = "0x1BAA978", VA = "0x1BAA978")]
	private void UpdateStepStatus(MenuStep step, UIGameStateEnum state)
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x1BAA9C4", Offset = "0x1BAA9C4", VA = "0x1BAA9C4")]
	private void UpdateDoneStatus(MenuStep step, UIGameStateEnum state)
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x1BAA9EC", Offset = "0x1BAA9EC", VA = "0x1BAA9EC")]
	private void SetStepButtonAsCurrent(MenuStep step, UIGameStateEnum state)
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x1BAAA0C", Offset = "0x1BAAA0C", VA = "0x1BAAA0C")]
	public void UpdateStepsInterface()
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x1BAB034", Offset = "0x1BAB034", VA = "0x1BAB034")]
	[IteratorStateMachine(typeof(<StepMenuAnimationQueue>d__91))]
	private IEnumerator StepMenuAnimationQueue()
	{
		return null;
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x1BAB0D0", Offset = "0x1BAB0D0", VA = "0x1BAB0D0")]
	[IteratorStateMachine(typeof(<StepMenuAnimation>d__92))]
	private IEnumerator StepMenuAnimation()
	{
		return null;
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x1BAB16C", Offset = "0x1BAB16C", VA = "0x1BAB16C")]
	[IteratorStateMachine(typeof(<HideSteps>d__93))]
	public IEnumerator HideSteps()
	{
		return null;
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x1BAB208", Offset = "0x1BAB208", VA = "0x1BAB208")]
	[IteratorStateMachine(typeof(<ShowSteps>d__94))]
	public IEnumerator ShowSteps()
	{
		return null;
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x1BAB2A4", Offset = "0x1BAB2A4", VA = "0x1BAB2A4")]
	public Button2 GetStepButton(UIGameStateEnum gameState)
	{
		return null;
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x1BAAB38", Offset = "0x1BAAB38", VA = "0x1BAAB38")]
	public void UpdateStepInText()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x1BAB308", Offset = "0x1BAB308", VA = "0x1BAB308")]
	public void ChangeState(UIGameStateEnum state)
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x1BAB364", Offset = "0x1BAB364", VA = "0x1BAB364")]
	public void ChangeState_Mode()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x1BAB36C", Offset = "0x1BAB36C", VA = "0x1BAB36C")]
	public void ChangeState_Scenario()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x1BAB374", Offset = "0x1BAB374", VA = "0x1BAB374")]
	public void ChangeState_Cart()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x1BAB37C", Offset = "0x1BAB37C", VA = "0x1BAB37C")]
	public void ChangeState_Weapon()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x1BAB384", Offset = "0x1BAB384", VA = "0x1BAB384")]
	public void ChangeState_Companion()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x1BAB38C", Offset = "0x1BAB38C", VA = "0x1BAB38C")]
	public void ChangeState_Settings()
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x1BAB394", Offset = "0x1BAB394", VA = "0x1BAB394")]
	public void ChangeState_PhotoAlbum()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x1BAB39C", Offset = "0x1BAB39C", VA = "0x1BAB39C")]
	public void ChangeState_PremiumBundle()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x1BAB3A4", Offset = "0x1BAB3A4", VA = "0x1BAB3A4")]
	public void ChangeState_Play()
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x1BAB414", Offset = "0x1BAB414", VA = "0x1BAB414")]
	public void PlayStepSound()
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x1BAB4F4", Offset = "0x1BAB4F4", VA = "0x1BAB4F4")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x1BAB678", Offset = "0x1BAB678", VA = "0x1BAB678")]
	public void ResumeGame_OnClick()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x1BAB69C", Offset = "0x1BAB69C", VA = "0x1BAB69C")]
	private void ExitGameMessage_OnYes(MessageUIController.Message msg)
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x1BAB6C0", Offset = "0x1BAB6C0", VA = "0x1BAB6C0")]
	private void ExitGameMessage_OnNo(MessageUIController.Message msg)
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x1BAB6D8", Offset = "0x1BAB6D8", VA = "0x1BAB6D8")]
	public void ChangeState_AvatarEditor()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x1BAB6DC", Offset = "0x1BAB6DC", VA = "0x1BAB6DC")]
	public void NextState()
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x1BAB730", Offset = "0x1BAB730", VA = "0x1BAB730")]
	private bool IsOnSideScreen()
	{
		return default(bool);
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x1BA9F88", Offset = "0x1BA9F88", VA = "0x1BA9F88")]
	private bool MenuShouldShowBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x1BAB794", Offset = "0x1BAB794", VA = "0x1BAB794")]
	public void CloseMenu()
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x1BAB884", Offset = "0x1BAB884", VA = "0x1BAB884")]
	public void BackButton_Clicked()
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x1BAB970", Offset = "0x1BAB970", VA = "0x1BAB970")]
	public void Notification_OnClick()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x1BAB978", Offset = "0x1BAB978", VA = "0x1BAB978")]
	public void Store_OnClick()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x1BAB980", Offset = "0x1BAB980", VA = "0x1BAB980")]
	public void Play_OnClick()
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x1BAB9D4", Offset = "0x1BAB9D4", VA = "0x1BAB9D4")]
	public void Buy_OnClick()
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x1BABD7C", Offset = "0x1BABD7C", VA = "0x1BABD7C")]
	public void PremiumBundleEnter()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x1BABDE4", Offset = "0x1BABDE4", VA = "0x1BABDE4")]
	[IteratorStateMachine(typeof(<PremiunBundleEnterAnimation>d__130))]
	public IEnumerator PremiunBundleEnterAnimation()
	{
		return null;
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x1BABE80", Offset = "0x1BABE80", VA = "0x1BABE80")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x1BABE84", Offset = "0x1BABE84", VA = "0x1BABE84")]
	public MenuUIController()
	{
	}
}
[Token(Token = "0x200038D")]
public class SideMenuUIController : IController<SideMenuUIController>
{
	[Token(Token = "0x200038E")]
	public enum SideMenuState
	{
		[Token(Token = "0x4001975")]
		INITIAL,
		[Token(Token = "0x4001976")]
		RECORDS,
		[Token(Token = "0x4001977")]
		LEADERBOARD,
		[Token(Token = "0x4001978")]
		ACHIEVEMENTS
	}

	[Token(Token = "0x200038F")]
	[CompilerGenerated]
	private sealed class <ChangeState>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SideMenuUIController <>4__this;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SideMenuState newState;

		[Token(Token = "0x170002A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x1B5D620", Offset = "0x1B5D620", VA = "0x1B5D620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x1B5D668", Offset = "0x1B5D668", VA = "0x1B5D668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1B5D1A4", Offset = "0x1B5D1A4", VA = "0x1B5D1A4")]
		[DebuggerHidden]
		public <ChangeState>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1B5D1CC", Offset = "0x1B5D1CC", VA = "0x1B5D1CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1B5D1D0", Offset = "0x1B5D1D0", VA = "0x1B5D1D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x1B5D628", Offset = "0x1B5D628", VA = "0x1B5D628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000390")]
	[CompilerGenerated]
	private sealed class <ShowInitialChooser>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SideMenuUIController <>4__this;

		[Token(Token = "0x170002AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x1B5D790", Offset = "0x1B5D790", VA = "0x1B5D790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x1B5D7D8", Offset = "0x1B5D7D8", VA = "0x1B5D7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1B5D670", Offset = "0x1B5D670", VA = "0x1B5D670")]
		[DebuggerHidden]
		public <ShowInitialChooser>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x1B5D698", Offset = "0x1B5D698", VA = "0x1B5D698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1B5D69C", Offset = "0x1B5D69C", VA = "0x1B5D69C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1B5D798", Offset = "0x1B5D798", VA = "0x1B5D798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000391")]
	[CompilerGenerated]
	private sealed class <HideInitialChooser>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SideMenuUIController <>4__this;

		[Token(Token = "0x170002AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1B5D888", Offset = "0x1B5D888", VA = "0x1B5D888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x1B5D8D0", Offset = "0x1B5D8D0", VA = "0x1B5D8D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1B5D7E0", Offset = "0x1B5D7E0", VA = "0x1B5D7E0")]
		[DebuggerHidden]
		public <HideInitialChooser>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1B5D808", Offset = "0x1B5D808", VA = "0x1B5D808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1B5D80C", Offset = "0x1B5D80C", VA = "0x1B5D80C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1B5D890", Offset = "0x1B5D890", VA = "0x1B5D890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000392")]
	[CompilerGenerated]
	private sealed class <ShowAnimation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SideMenuUIController <>4__this;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x1B5DA48", Offset = "0x1B5DA48", VA = "0x1B5DA48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x1B5DA90", Offset = "0x1B5DA90", VA = "0x1B5DA90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1B5D8D8", Offset = "0x1B5D8D8", VA = "0x1B5D8D8")]
		[DebuggerHidden]
		public <ShowAnimation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1B5D900", Offset = "0x1B5D900", VA = "0x1B5D900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1B5D904", Offset = "0x1B5D904", VA = "0x1B5D904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1B5DA50", Offset = "0x1B5DA50", VA = "0x1B5DA50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000393")]
	[CompilerGenerated]
	private sealed class <HideAnimation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SideMenuUIController <>4__this;

		[Token(Token = "0x170002B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x1B5DC08", Offset = "0x1B5DC08", VA = "0x1B5DC08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x1B5DC50", Offset = "0x1B5DC50", VA = "0x1B5DC50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1B5DA98", Offset = "0x1B5DA98", VA = "0x1B5DA98")]
		[DebuggerHidden]
		public <HideAnimation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1B5DAC0", Offset = "0x1B5DAC0", VA = "0x1B5DAC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1B5DAC4", Offset = "0x1B5DAC4", VA = "0x1B5DAC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1B5DC10", Offset = "0x1B5DC10", VA = "0x1B5DC10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3 HIDE_POSITION;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 SHOW_POSITION;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup CanvasGroup;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject InitialChooserPanel;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject AchievementButton;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SideMenuState currentState;

	[Token(Token = "0x170002A8")]
	public bool HasAchievements
	{
		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1BA7AE8", Offset = "0x1BA7AE8", VA = "0x1BA7AE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x1BADB68", Offset = "0x1BADB68", VA = "0x1BADB68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x1BADCBC", Offset = "0x1BADCBC", VA = "0x1BADCBC")]
	[IteratorStateMachine(typeof(<ChangeState>d__11))]
	private IEnumerator ChangeState(SideMenuState newState)
	{
		return null;
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x1BADC48", Offset = "0x1BADC48", VA = "0x1BADC48")]
	[IteratorStateMachine(typeof(<ShowInitialChooser>d__12))]
	public IEnumerator ShowInitialChooser()
	{
		return null;
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x1BADD40", Offset = "0x1BADD40", VA = "0x1BADD40")]
	[IteratorStateMachine(typeof(<HideInitialChooser>d__13))]
	public IEnumerator HideInitialChooser()
	{
		return null;
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0x1BA7B94", Offset = "0x1BA7B94", VA = "0x1BA7B94")]
	[IteratorStateMachine(typeof(<ShowAnimation>d__14))]
	public IEnumerator ShowAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x1BA7D44", Offset = "0x1BA7D44", VA = "0x1BA7D44")]
	[IteratorStateMachine(typeof(<HideAnimation>d__15))]
	public IEnumerator HideAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0x1BA7B90", Offset = "0x1BA7B90", VA = "0x1BA7B90")]
	public void ShowTitle(string text)
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x1BADDB4", Offset = "0x1BADDB4", VA = "0x1BADDB4")]
	public void Back_OnClick()
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x1BADDD8", Offset = "0x1BADDD8", VA = "0x1BADDD8")]
	public void Records_OnClick()
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x1BADDFC", Offset = "0x1BADDFC", VA = "0x1BADDFC")]
	public void Leaderboard_OnClick()
	{
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x1BADE20", Offset = "0x1BADE20", VA = "0x1BADE20")]
	public void Achievements_OnClick()
	{
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x1BADE44", Offset = "0x1BADE44", VA = "0x1BADE44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x1BADEF4", Offset = "0x1BADEF4", VA = "0x1BADEF4")]
	public SideMenuUIController()
	{
	}
}
[Token(Token = "0x2000394")]
public class MessageUIController : IController<MessageUIController>
{
	[Token(Token = "0x2000395")]
	public enum MessageType
	{
		[Token(Token = "0x40019B0")]
		PAUSE,
		[Token(Token = "0x40019B1")]
		YES_NO,
		[Token(Token = "0x40019B2")]
		OK,
		[Token(Token = "0x40019B3")]
		TIMER,
		[Token(Token = "0x40019B4")]
		BLOCKER,
		[Token(Token = "0x40019B5")]
		VERSION,
		[Token(Token = "0x40019B6")]
		REMOTE_PAUSE,
		[Token(Token = "0x40019B7")]
		SMALL_MESSAGE,
		[Token(Token = "0x40019B8")]
		DEAL
	}

	[Token(Token = "0x2000396")]
	public class Message
	{
		[Token(Token = "0x2000397")]
		public enum Status
		{
			[Token(Token = "0x40019CA")]
			WAITING,
			[Token(Token = "0x40019CB")]
			SHOWING
		}

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Title;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Description;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToHide;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool CanHideOnBack;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Counter;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public MessageType MessageType;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Status MessageStatus;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool Small;

		[Token(Token = "0x14000024")]
		public event Action<Message> OnYes_Clicked
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x1B5E354", Offset = "0x1B5E354", VA = "0x1B5E354")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x1B60480", Offset = "0x1B60480", VA = "0x1B60480")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<Message> OnNo_Clicked
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1B5E404", Offset = "0x1B5E404", VA = "0x1B5E404")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x1B60530", Offset = "0x1B60530", VA = "0x1B60530")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<Message> OnOk_Clicked
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1B605E0", Offset = "0x1B605E0", VA = "0x1B605E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1B60690", Offset = "0x1B60690", VA = "0x1B60690")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<Message> OnMenu_Clicked
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1B60740", Offset = "0x1B60740", VA = "0x1B60740")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x1B607F0", Offset = "0x1B607F0", VA = "0x1B607F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<Message> OnRestart_Clicked
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x1B608A0", Offset = "0x1B608A0", VA = "0x1B608A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x1B60950", Offset = "0x1B60950", VA = "0x1B60950")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<Message> OnPlay_Clicked
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x1B60A00", Offset = "0x1B60A00", VA = "0x1B60A00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x1B60AB0", Offset = "0x1B60AB0", VA = "0x1B60AB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<Message> OnConfig_Clicked
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x1B60B60", Offset = "0x1B60B60", VA = "0x1B60B60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1B60C10", Offset = "0x1B60C10", VA = "0x1B60C10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<Message> OnDisconnect_Clicked
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x1B60CC0", Offset = "0x1B60CC0", VA = "0x1B60CC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x1B60D70", Offset = "0x1B60D70", VA = "0x1B60D70")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1B5F544", Offset = "0x1B5F544", VA = "0x1B5F544")]
		public void OnYes()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1B5F588", Offset = "0x1B5F588", VA = "0x1B5F588")]
		public void OnNo()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1B5F500", Offset = "0x1B5F500", VA = "0x1B5F500")]
		public void OnOk()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1B5F5F4", Offset = "0x1B5F5F4", VA = "0x1B5F5F4")]
		public void OnMenu()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1B5F744", Offset = "0x1B5F744", VA = "0x1B5F744")]
		public void OnRestart()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1B5F6F8", Offset = "0x1B5F6F8", VA = "0x1B5F6F8")]
		public void OnPlay()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1B60E20", Offset = "0x1B60E20", VA = "0x1B60E20")]
		public void OnConfig()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1B5F7AC", Offset = "0x1B5F7AC", VA = "0x1B5F7AC")]
		public void OnDisconnect()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1B5F990", Offset = "0x1B5F990", VA = "0x1B5F990")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1B60E40", Offset = "0x1B60E40", VA = "0x1B60E40")]
		public void HideOnRestart()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1B5E9D0", Offset = "0x1B5E9D0", VA = "0x1B5E9D0")]
		public Message()
		{
		}
	}

	[Token(Token = "0x2000398")]
	private struct HelmetPopUp
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string text;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite img;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1B602F0", Offset = "0x1B602F0", VA = "0x1B602F0")]
		public HelmetPopUp(string text, Sprite img, float time)
		{
		}
	}

	[Token(Token = "0x200039A")]
	[CompilerGenerated]
	private sealed class <ShowMessageBox>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageUIController <>4__this;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Message message;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <counter>5__2;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <maximumCounter>5__3;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x1B616B8", Offset = "0x1B616B8", VA = "0x1B616B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x1B61700", Offset = "0x1B61700", VA = "0x1B61700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1B5EB80", Offset = "0x1B5EB80", VA = "0x1B5EB80")]
		[DebuggerHidden]
		public <ShowMessageBox>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1B60FC8", Offset = "0x1B60FC8", VA = "0x1B60FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1B60FCC", Offset = "0x1B60FCC", VA = "0x1B60FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1B616C0", Offset = "0x1B616C0", VA = "0x1B616C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039B")]
	[CompilerGenerated]
	private sealed class <ShowMenu>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageUIController <>4__this;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Message message;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x1B617E0", Offset = "0x1B617E0", VA = "0x1B617E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x1B61828", Offset = "0x1B61828", VA = "0x1B61828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1B5F6A4", Offset = "0x1B5F6A4", VA = "0x1B5F6A4")]
		[DebuggerHidden]
		public <ShowMenu>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1B61708", Offset = "0x1B61708", VA = "0x1B61708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1B6170C", Offset = "0x1B6170C", VA = "0x1B6170C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1B617E8", Offset = "0x1B617E8", VA = "0x1B617E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039C")]
	[CompilerGenerated]
	private sealed class <AddHelmetMessageCoroutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageUIController <>4__this;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float timeToHide;

		[Token(Token = "0x170002B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x1B61A74", Offset = "0x1B61A74", VA = "0x1B61A74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x1B61ABC", Offset = "0x1B61ABC", VA = "0x1B61ABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1B5FCDC", Offset = "0x1B5FCDC", VA = "0x1B5FCDC")]
		[DebuggerHidden]
		public <AddHelmetMessageCoroutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1B61830", Offset = "0x1B61830", VA = "0x1B61830", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1B61834", Offset = "0x1B61834", VA = "0x1B61834", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1B61A7C", Offset = "0x1B61A7C", VA = "0x1B61A7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039D")]
	[CompilerGenerated]
	private sealed class <HideHelmetMessageCoroutine>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToHide;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MessageUIController <>4__this;

		[Token(Token = "0x170002BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x1B61B88", Offset = "0x1B61B88", VA = "0x1B61B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x1B61BD0", Offset = "0x1B61BD0", VA = "0x1B61BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1B5FF48", Offset = "0x1B5FF48", VA = "0x1B5FF48")]
		[DebuggerHidden]
		public <HideHelmetMessageCoroutine>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1B61AC4", Offset = "0x1B61AC4", VA = "0x1B61AC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1B61AC8", Offset = "0x1B61AC8", VA = "0x1B61AC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1B61B90", Offset = "0x1B61B90", VA = "0x1B61B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039E")]
	[CompilerGenerated]
	private sealed class <QueuedMessagePopUp>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string text;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite img;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float timeToHide;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MessageUIController <>4__this;

		[Token(Token = "0x170002BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x1B61E84", Offset = "0x1B61E84", VA = "0x1B61E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x1B61ECC", Offset = "0x1B61ECC", VA = "0x1B61ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1B60334", Offset = "0x1B60334", VA = "0x1B60334")]
		[DebuggerHidden]
		public <QueuedMessagePopUp>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1B61BD8", Offset = "0x1B61BD8", VA = "0x1B61BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1B61BDC", Offset = "0x1B61BDC", VA = "0x1B61BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1B61E8C", Offset = "0x1B61E8C", VA = "0x1B61E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource AppearMessageSound;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas MessageCanvas;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RegularMessageBox;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SmallMessageBox;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject DealMessageBox;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup MessageBoxCanvasGroup;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI TitleText;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI MessageText;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI ButtonSubtitleText;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Small message")]
	public TextMeshProUGUI SmallMessageText;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button2 SmallMessageYesButton;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button2 SmallMessageNoButton;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button2 SmallMessageOkButton;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Deal message")]
	public TextMeshProUGUI DealMessageText;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SaleObject;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Yes or No")]
	public Button2 YesButton;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button2 NoButton;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Ok")]
	public Button2 OkButton;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Pause")]
	public Button2 MenuButton;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button2 PlayButton;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Button2 RestartButton;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button2 ConfigButton;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button2 LobbyButton;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Remote Pause")]
	public Button2 DisconnectButton;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button2 RemotePauseMenuButton;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool AccessedByConfig;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Message> messages;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Message currentMessage;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private YieldInstruction waitFrame;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private MeshCollider _meshCollider;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Message currentDiscordMessage;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine showMessageCoroutine;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool InTransition;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine hideHelmetMessageCoroutine;

	[Token(Token = "0x40019AC")]
	private const float POPUP_TIMETOHIDE = 5f;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<HelmetPopUp> popupQueue;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Coroutine popUpCoroutine;

	[Token(Token = "0x170002B3")]
	public bool IsShowing
	{
		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1B5DC58", Offset = "0x1B5DC58", VA = "0x1B5DC58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B4")]
	private MeshCollider MeshCollider
	{
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1B5DCD0", Offset = "0x1B5DCD0", VA = "0x1B5DCD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x1B5DD84", Offset = "0x1B5DD84", VA = "0x1B5DD84")]
	public void SetConvex()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x1B5DDA4", Offset = "0x1B5DDA4", VA = "0x1B5DDA4")]
	public void SetCanvasEnabled(bool enabled, bool small)
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x1B5DE54", Offset = "0x1B5DE54", VA = "0x1B5DE54", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x1B5DF88", Offset = "0x1B5DF88", VA = "0x1B5DF88")]
	public void Update()
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x1B5E02C", Offset = "0x1B5E02C", VA = "0x1B5E02C")]
	public Message AddLobbyMessage()
	{
		return null;
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x1B5E4B4", Offset = "0x1B5E4B4", VA = "0x1B5E4B4")]
	public Message AddYesNoMessage(string title, string message, bool small = true)
	{
		return null;
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x1B5E4C8", Offset = "0x1B5E4C8", VA = "0x1B5E4C8")]
	public Message AddDiscordMessage()
	{
		return null;
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x1B5E650", Offset = "0x1B5E650", VA = "0x1B5E650")]
	public Message AddOkMessage(string title, string message, bool small = true)
	{
		return null;
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x1B5E664", Offset = "0x1B5E664", VA = "0x1B5E664")]
	public Message AddTimerMessage(string title, string message, float timeToHide, bool showCounter, bool smallMessage = false)
	{
		return null;
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x1B5E6A8", Offset = "0x1B5E6A8", VA = "0x1B5E6A8")]
	public Message AddNoButtonMessage(string title, string message)
	{
		return null;
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0x1B5E6BC", Offset = "0x1B5E6BC", VA = "0x1B5E6BC")]
	public Message AddPauseMessage()
	{
		return null;
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0x1B5E880", Offset = "0x1B5E880", VA = "0x1B5E880")]
	public Message AddRemotePauseMessage(string playerPausedName)
	{
		return null;
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0x1B5E94C", Offset = "0x1B5E94C", VA = "0x1B5E94C")]
	public Message AddDealMessage(string message)
	{
		return null;
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x1B5E9BC", Offset = "0x1B5E9BC", VA = "0x1B5E9BC")]
	public Message AddVersionMessage(string title, string description)
	{
		return null;
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0x1B5E18C", Offset = "0x1B5E18C", VA = "0x1B5E18C")]
	private Message AddNewMessage(string title, string message, MessageType messageType, float timeToHide, float counter, bool small)
	{
		return null;
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x1B5EA68", Offset = "0x1B5EA68", VA = "0x1B5EA68")]
	public void RemovePauseMessages()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x1B5E9D8", Offset = "0x1B5E9D8", VA = "0x1B5E9D8")]
	[IteratorStateMachine(typeof(<ShowMessageBox>d__55))]
	public IEnumerator ShowMessageBox(Message message)
	{
		return null;
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x1B5EBA8", Offset = "0x1B5EBA8", VA = "0x1B5EBA8")]
	private void ShowSmallTimerPanel(Message message)
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x1B5EC0C", Offset = "0x1B5EC0C", VA = "0x1B5EC0C")]
	private void ShowDealPanel(Message message)
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x1B5EC70", Offset = "0x1B5EC70", VA = "0x1B5EC70")]
	private void ShowTimerPanel(Message message)
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x1B5ED74", Offset = "0x1B5ED74", VA = "0x1B5ED74")]
	private void ShowYesNoPanel(Message message)
	{
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x1B5EE14", Offset = "0x1B5EE14", VA = "0x1B5EE14")]
	private void ShowPausePanel(Message message)
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x1B5EF68", Offset = "0x1B5EF68", VA = "0x1B5EF68")]
	private void ShowRemotePausePanel(Message message)
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x1B5F020", Offset = "0x1B5F020", VA = "0x1B5F020")]
	private void ShowOkPanel(Message message)
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x1B5F080", Offset = "0x1B5F080", VA = "0x1B5F080")]
	private void ShowVersionPanel(Message message)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x1B5EC74", Offset = "0x1B5EC74", VA = "0x1B5EC74")]
	public void SetTextOfMessage(Message message)
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x1B5F0C8", Offset = "0x1B5F0C8", VA = "0x1B5F0C8")]
	public void HideMessageIfTypeMatches(MessageType messageType)
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x1B5F0EC", Offset = "0x1B5F0EC", VA = "0x1B5F0EC")]
	public void HideMessage()
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x1B5F3B8", Offset = "0x1B5F3B8", VA = "0x1B5F3B8")]
	public void HideMessageStarter(Message message, bool fromRestart = false)
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x1B5F0F8", Offset = "0x1B5F0F8", VA = "0x1B5F0F8")]
	public void HideMessage(Message message, bool fromRestart = false)
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x1B5DF84", Offset = "0x1B5DF84", VA = "0x1B5DF84")]
	private void PlaySound(bool show, bool playSound = true)
	{
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x1B5F3C0", Offset = "0x1B5F3C0", VA = "0x1B5F3C0")]
	public void HideWhileMainMenuIsOpened()
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x1B5F3E8", Offset = "0x1B5F3E8", VA = "0x1B5F3E8")]
	public void ShowAgainAfterMainMenuIsClosed()
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x1B5F488", Offset = "0x1B5F488", VA = "0x1B5F488")]
	public void BackToMainMenu()
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x1B5F4B0", Offset = "0x1B5F4B0", VA = "0x1B5F4B0")]
	public bool IsShowingPauseMessage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x1B5F4DC", Offset = "0x1B5F4DC", VA = "0x1B5F4DC")]
	public void Ok_OnClick()
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x1B5F520", Offset = "0x1B5F520", VA = "0x1B5F520")]
	public void Yes_OnClick()
	{
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x1B5F564", Offset = "0x1B5F564", VA = "0x1B5F564")]
	public void No_OnClick()
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x1B5F5A8", Offset = "0x1B5F5A8", VA = "0x1B5F5A8")]
	public void Menu_OnClick()
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x1B5F614", Offset = "0x1B5F614", VA = "0x1B5F614")]
	[IteratorStateMachine(typeof(<ShowMenu>d__79))]
	private IEnumerator ShowMenu(Message message)
	{
		return null;
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x1B5F6CC", Offset = "0x1B5F6CC", VA = "0x1B5F6CC")]
	public void Play_OnClick()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x1B5F718", Offset = "0x1B5F718", VA = "0x1B5F718")]
	public void Restart_OnClick()
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x1B5F764", Offset = "0x1B5F764", VA = "0x1B5F764")]
	public void OkVersion_OnClick()
	{
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x1B5F788", Offset = "0x1B5F788", VA = "0x1B5F788")]
	public void Disconnect_OnClick()
	{
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x1B5F7CC", Offset = "0x1B5F7CC", VA = "0x1B5F7CC")]
	public void DiscordLink_OnClick()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x1B5F810", Offset = "0x1B5F810", VA = "0x1B5F810")]
	public void Config_OnClick()
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x1B5F874", Offset = "0x1B5F874", VA = "0x1B5F874")]
	public void Lobby_OnClick()
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x1B5F878", Offset = "0x1B5F878", VA = "0x1B5F878")]
	private void Lobby_OnNo_Clicked(Message msg)
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x1B5F9EC", Offset = "0x1B5F9EC", VA = "0x1B5F9EC")]
	private void Lobby_OnYes_Clicked(Message msg)
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x1B5FA84", Offset = "0x1B5FA84", VA = "0x1B5FA84")]
	public void ChangeText_OnHover(string text = "")
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x1B5FB80", Offset = "0x1B5FB80", VA = "0x1B5FB80")]
	public void Discord_OnYesClicked(Message msg)
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x1B5FBEC", Offset = "0x1B5FBEC", VA = "0x1B5FBEC")]
	public void Discord_OnNoClicked(Message msg)
	{
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x1B5FC1C", Offset = "0x1B5FC1C", VA = "0x1B5FC1C")]
	public void AddHelmetMessage(string text, float timeToHide = 3f)
	{
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x1B5FC3C", Offset = "0x1B5FC3C", VA = "0x1B5FC3C")]
	[IteratorStateMachine(typeof(<AddHelmetMessageCoroutine>d__94))]
	public IEnumerator AddHelmetMessageCoroutine(string text, float timeToHide = 3f)
	{
		return null;
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x1B5FD04", Offset = "0x1B5FD04", VA = "0x1B5FD04")]
	public void AddHelmetMessage(string username, string rideName, string gameMode, float timeToHide = 3f)
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x1B5FDA0", Offset = "0x1B5FDA0", VA = "0x1B5FDA0")]
	public void HideHelmetMessage(bool doAnimation = true)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x1B5FDD8", Offset = "0x1B5FDD8", VA = "0x1B5FDD8")]
	[IteratorStateMachine(typeof(<HideHelmetMessageCoroutine>d__97))]
	private IEnumerator HideHelmetMessageCoroutine(float timeToHide)
	{
		return null;
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x1B5FE5C", Offset = "0x1B5FE5C", VA = "0x1B5FE5C")]
	private void HideHelmetMessage()
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x1B5FF70", Offset = "0x1B5FF70", VA = "0x1B5FF70")]
	public void PauseHelmetMessage(bool pause)
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x1B60018", Offset = "0x1B60018", VA = "0x1B60018")]
	public void AddMessagePopUp(string text, Sprite img, float timeToHide = 5f)
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x1B6023C", Offset = "0x1B6023C", VA = "0x1B6023C")]
	[IteratorStateMachine(typeof(<QueuedMessagePopUp>d__105))]
	private IEnumerator QueuedMessagePopUp(string text, Sprite img, float timeToHide)
	{
		return null;
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x1B6035C", Offset = "0x1B6035C", VA = "0x1B6035C")]
	public MessageUIController()
	{
	}
}
[Token(Token = "0x200039F")]
public class QuickMessageUIController : IController<QuickMessageUIController>
{
	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Subtitle")]
	public Canvas SubtitleCanvas;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SubtitleMessageBox;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI SubtitleText;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("OptionBox")]
	public Canvas OptionCanvas;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject OptionMessageBox;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI OptionsTitle;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI Option1Text;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI Option2Text;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button2 Option1;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button2 Option2;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action option1Action;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action option2Action;

	[Token(Token = "0x170002BF")]
	public bool IsShowingOptions
	{
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1B61ED4", Offset = "0x1B61ED4", VA = "0x1B61ED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x1B61F7C", Offset = "0x1B61F7C", VA = "0x1B61F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x1B6202C", Offset = "0x1B6202C", VA = "0x1B6202C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x1B620DC", Offset = "0x1B620DC", VA = "0x1B620DC")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x1B62124", Offset = "0x1B62124", VA = "0x1B62124")]
	public void Hide()
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x1B6219C", Offset = "0x1B6219C", VA = "0x1B6219C")]
	public void SetSubtitles(string subtitle)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x1B623B4", Offset = "0x1B623B4", VA = "0x1B623B4")]
	public void AddOptionMessage(string title, KeyValuePair<string, Action> option1, KeyValuePair<string, Action> option2)
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x1B62730", Offset = "0x1B62730", VA = "0x1B62730")]
	public void OnChosenOption()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x1B62970", Offset = "0x1B62970", VA = "0x1B62970")]
	public void CloseOptionMessage()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x1B629FC", Offset = "0x1B629FC", VA = "0x1B629FC")]
	public QuickMessageUIController()
	{
	}
}
[Token(Token = "0x20003A0")]
public class ModeUIController : IController<ModeUIController>
{
	[Token(Token = "0x20003A1")]
	[CompilerGenerated]
	private sealed class <Show>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIController <>4__this;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170002C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x1B639F4", Offset = "0x1B639F4", VA = "0x1B639F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x1B63A3C", Offset = "0x1B63A3C", VA = "0x1B63A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1B62EE8", Offset = "0x1B62EE8", VA = "0x1B62EE8")]
		[DebuggerHidden]
		public <Show>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1B633AC", Offset = "0x1B633AC", VA = "0x1B633AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1B633B0", Offset = "0x1B633B0", VA = "0x1B633B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1B639FC", Offset = "0x1B639FC", VA = "0x1B639FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A2")]
	[CompilerGenerated]
	private sealed class <Hide>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIController <>4__this;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x170002C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x1B63FF0", Offset = "0x1B63FF0", VA = "0x1B63FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x1B64038", Offset = "0x1B64038", VA = "0x1B64038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1B62F98", Offset = "0x1B62F98", VA = "0x1B62F98")]
		[DebuggerHidden]
		public <Hide>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1B63A44", Offset = "0x1B63A44", VA = "0x1B63A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1B63A48", Offset = "0x1B63A48", VA = "0x1B63A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1B63FF8", Offset = "0x1B63FF8", VA = "0x1B63FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas ModeCanvas;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HorizontalLayoutGroup LayoutGroup;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ModeUIItem[] ModeUIs;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] ShowModesPosition;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HiddenPosition;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float SLIDE_ANIMATION_TIME;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ModeUIItem currentModeUIItem;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CoasterType currentGameMode;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x170002C0")]
	public CoasterType CurrentGameMode
	{
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1B62A44", Offset = "0x1B62A44", VA = "0x1B62A44")]
		get
		{
			return default(CoasterType);
		}
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1B62A4C", Offset = "0x1B62A4C", VA = "0x1B62A4C")]
		set
		{
		}
	}

	[Token(Token = "0x170002C1")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1B62AB4", Offset = "0x1B62AB4", VA = "0x1B62AB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x1B62B70", Offset = "0x1B62B70", VA = "0x1B62B70")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x1B62BD8", Offset = "0x1B62BD8", VA = "0x1B62BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x1B62E74", Offset = "0x1B62E74", VA = "0x1B62E74")]
	[IteratorStateMachine(typeof(<Show>d__16))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x1B62F10", Offset = "0x1B62F10", VA = "0x1B62F10")]
	[IteratorStateMachine(typeof(<Hide>d__17))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x1B62FC0", Offset = "0x1B62FC0", VA = "0x1B62FC0")]
	public void Select(CoasterType coasterType, ModeUIItem modeUIItem)
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x1B631A0", Offset = "0x1B631A0", VA = "0x1B631A0")]
	public Sprite GetSprite(CoasterType coasterType)
	{
		return null;
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x1B6320C", Offset = "0x1B6320C", VA = "0x1B6320C")]
	public string GetCurrentModeName()
	{
		return null;
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x1B63304", Offset = "0x1B63304", VA = "0x1B63304")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x1B6330C", Offset = "0x1B6330C", VA = "0x1B6330C")]
	public ModeUIController()
	{
	}
}
[Token(Token = "0x20003A3")]
public class ModeUIItem : MonoBehaviour
{
	[Token(Token = "0x20003A4")]
	[CompilerGenerated]
	private sealed class <EnterQueue>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIItem <>4__this;

		[Token(Token = "0x170002C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x1B646A0", Offset = "0x1B646A0", VA = "0x1B646A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x1B646E8", Offset = "0x1B646E8", VA = "0x1B646E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1B642D0", Offset = "0x1B642D0", VA = "0x1B642D0")]
		[DebuggerHidden]
		public <EnterQueue>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1B6458C", Offset = "0x1B6458C", VA = "0x1B6458C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1B64590", Offset = "0x1B64590", VA = "0x1B64590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1B646A8", Offset = "0x1B646A8", VA = "0x1B646A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A5")]
	[CompilerGenerated]
	private sealed class <ExitQueue>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIItem <>4__this;

		[Token(Token = "0x170002C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1B64804", Offset = "0x1B64804", VA = "0x1B64804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1B6484C", Offset = "0x1B6484C", VA = "0x1B6484C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1B642F8", Offset = "0x1B642F8", VA = "0x1B642F8")]
		[DebuggerHidden]
		public <ExitQueue>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1B646F0", Offset = "0x1B646F0", VA = "0x1B646F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1B646F4", Offset = "0x1B646F4", VA = "0x1B646F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1B6480C", Offset = "0x1B6480C", VA = "0x1B6480C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	[CompilerGenerated]
	private sealed class <Enter>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIItem <>4__this;

		[Token(Token = "0x170002CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1B64A8C", Offset = "0x1B64A8C", VA = "0x1B64A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1B64AD4", Offset = "0x1B64AD4", VA = "0x1B64AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1B64320", Offset = "0x1B64320", VA = "0x1B64320")]
		[DebuggerHidden]
		public <Enter>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1B64854", Offset = "0x1B64854", VA = "0x1B64854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1B64858", Offset = "0x1B64858", VA = "0x1B64858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1B64A94", Offset = "0x1B64A94", VA = "0x1B64A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A7")]
	[CompilerGenerated]
	private sealed class <Exit>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModeUIItem <>4__this;

		[Token(Token = "0x170002CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1B64C8C", Offset = "0x1B64C8C", VA = "0x1B64C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1B64CD4", Offset = "0x1B64CD4", VA = "0x1B64CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x1B64348", Offset = "0x1B64348", VA = "0x1B64348")]
		[DebuggerHidden]
		public <Exit>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x1B64ADC", Offset = "0x1B64ADC", VA = "0x1B64ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1B64AE0", Offset = "0x1B64AE0", VA = "0x1B64AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1B64C94", Offset = "0x1B64C94", VA = "0x1B64C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CoasterType RelatedCoasterType;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SelectedGameMode;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform MaskRectTransform;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SelectedWidth;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image UnselectedModeImage;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image UnselectedModeLabelImage;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI UnselectedModeText;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image SelectedModeImage;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image SelectedModeLabelImage;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI SelectedModeText;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI SelectedModeDescriptionText;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image MainImage;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float maskInitialWidth;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool IsModeDetailed;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isEntering;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool isExiting;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine queue;

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x1B64040", Offset = "0x1B64040", VA = "0x1B64040")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0x1B640BC", Offset = "0x1B640BC", VA = "0x1B640BC")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0x1B64118", Offset = "0x1B64118", VA = "0x1B64118")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x1B641F4", Offset = "0x1B641F4", VA = "0x1B641F4")]
	public void OnExit()
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x1B64180", Offset = "0x1B64180", VA = "0x1B64180")]
	[IteratorStateMachine(typeof(<EnterQueue>d__22))]
	private IEnumerator EnterQueue()
	{
		return null;
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x1B6425C", Offset = "0x1B6425C", VA = "0x1B6425C")]
	[IteratorStateMachine(typeof(<ExitQueue>d__23))]
	private IEnumerator ExitQueue()
	{
		return null;
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x1B63980", Offset = "0x1B63980", VA = "0x1B63980")]
	[IteratorStateMachine(typeof(<Enter>d__24))]
	public IEnumerator Enter()
	{
		return null;
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x1B6312C", Offset = "0x1B6312C", VA = "0x1B6312C")]
	[IteratorStateMachine(typeof(<Exit>d__25))]
	public IEnumerator Exit()
	{
		return null;
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x1B64370", Offset = "0x1B64370", VA = "0x1B64370")]
	private void Exit_OnComplete()
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x1B63650", Offset = "0x1B63650", VA = "0x1B63650")]
	public void FadeIn(float time)
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x1B63CC4", Offset = "0x1B63CC4", VA = "0x1B63CC4")]
	public void FadeOut(float time)
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x1B62D24", Offset = "0x1B62D24", VA = "0x1B62D24")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x1B64414", Offset = "0x1B64414", VA = "0x1B64414")]
	public ModeUIItem()
	{
	}
}
[Token(Token = "0x20003A8")]
public class MultiplayerFriendSeatChooserUILine : MonoBehaviour
{
	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SeatType SeatType;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage UserImage;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI UsernameText;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button2 UserButton;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button2 SwapButton;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string UserID;

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool selected;

	[Token(Token = "0x170002CE")]
	public bool IsSelected
	{
		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1B64CDC", Offset = "0x1B64CDC", VA = "0x1B64CDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x1B64CE4", Offset = "0x1B64CE4", VA = "0x1B64CE4")]
	public void Config(string userID, string name, string imageURL)
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0x1B64DE8", Offset = "0x1B64DE8", VA = "0x1B64DE8")]
	public void Config(string userID, string name, Texture texture)
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0x1B64E54", Offset = "0x1B64E54", VA = "0x1B64E54")]
	public void ShowSwapButton()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0x1B64E80", Offset = "0x1B64E80", VA = "0x1B64E80")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x1B64EC4", Offset = "0x1B64EC4", VA = "0x1B64EC4")]
	public void SelectUser_OnClick()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x1B64FA4", Offset = "0x1B64FA4", VA = "0x1B64FA4")]
	public void Swap_OnClick()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x1B650F4", Offset = "0x1B650F4", VA = "0x1B650F4")]
	public MultiplayerFriendSeatChooserUILine()
	{
	}
}
[Token(Token = "0x20003A9")]
public class MultiplayerFriendUILine : MonoBehaviour
{
	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button2 AddPlayerButton;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage UserImage;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image LeaderImage;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI UserNameText;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI StatusText;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button2 RemovePlayerButton;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public string UserID;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public string Token;

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x1B650FC", Offset = "0x1B650FC", VA = "0x1B650FC")]
	public void Config()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0x1B6515C", Offset = "0x1B6515C", VA = "0x1B6515C")]
	public void Config(string userID, string imageURL, string name, RemotePlayer.RemotePlayerStatus status, bool isLeader)
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x1B656A4", Offset = "0x1B656A4", VA = "0x1B656A4")]
	public void Disconnect_OnClick()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x1B65758", Offset = "0x1B65758", VA = "0x1B65758")]
	public void AddUser_OnClick()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x1B657FC", Offset = "0x1B657FC", VA = "0x1B657FC")]
	public void Mute_OnClick()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x1B65800", Offset = "0x1B65800", VA = "0x1B65800")]
	public MultiplayerFriendUILine()
	{
	}
}
[Token(Token = "0x20003AA")]
public class MultiplayerUIController : IController<MultiplayerUIController>
{
	[Token(Token = "0x20003AB")]
	private enum MessageType
	{
		[Token(Token = "0x4001A4C")]
		KICK_USER,
		[Token(Token = "0x4001A4D")]
		MICROPHONE
	}

	[Serializable]
	[Token(Token = "0x20003AC")]
	public struct FriendUI
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RawImage FriendImage;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI UsernameText;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool InUse;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong UserID;
	}

	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MultiplayerPanel;

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image StatusImage;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RosterButton;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MicrophoneButton;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Multiplayer Panel")]
	public GameObject MultiplayerSelectionPanel;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultiplayerFriendUILine[] FriendLines;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button2 RandomConnectionButton;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button2 ExitLobbyButton;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Waiting Connection Message")]
	public GameObject WaitingConnectionMessagePanel;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI MessageTextBox;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI InvitesSentTextBox;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Multiplayer Settings")]
	public GameObject MultiplayerSettingsPanel;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject MultiplayerSettingsButton;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MultiplayerFriendSeatChooserUILine[] Seats;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Toggle AnyoneCanConnectRoomToggle;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Confirm action")]
	public GameObject ConfirmPanel;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI MessageText;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RemotePlayer playerToRemove;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MessageType currentMessageType;

	[Token(Token = "0x170002CF")]
	private bool HasMicrophonePermission
	{
		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1B65808", Offset = "0x1B65808", VA = "0x1B65808")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x1B6584C", Offset = "0x1B6584C", VA = "0x1B6584C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x1B659AC", Offset = "0x1B659AC", VA = "0x1B659AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x1B65974", Offset = "0x1B65974", VA = "0x1B65974")]
	private void UpdateInterface(bool shouldShowMicrophoneMessage)
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x1B65A68", Offset = "0x1B65A68", VA = "0x1B65A68")]
	private void UpdateInterface()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x1B6666C", Offset = "0x1B6666C", VA = "0x1B6666C")]
	private void VerifyMicrophoneButton()
	{
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0x1B6652C", Offset = "0x1B6652C", VA = "0x1B6652C")]
	private void ShowWaitingConnectionPanel()
	{
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0x1B65F0C", Offset = "0x1B65F0C", VA = "0x1B65F0C")]
	private void ShowMultiplayerPanel()
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0x1B66698", Offset = "0x1B66698", VA = "0x1B66698")]
	private void ShowMultiplayerSettingsPanel()
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0x1B65DB0", Offset = "0x1B65DB0", VA = "0x1B65DB0")]
	private void ShowMessagePanel(MessageType messageType)
	{
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x1B64F40", Offset = "0x1B64F40", VA = "0x1B64F40")]
	public void UpdateSwapButtons()
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x1B64FFC", Offset = "0x1B64FFC", VA = "0x1B64FFC")]
	public void SwapSeats(MultiplayerFriendSeatChooserUILine placeToSwapFor)
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x1B65730", Offset = "0x1B65730", VA = "0x1B65730")]
	public void DisconnectPlayer(RemotePlayer player)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x1B666F8", Offset = "0x1B666F8", VA = "0x1B666F8")]
	private MultiplayerFriendSeatChooserUILine GetSelectedPlayerToSwap()
	{
		return null;
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x1B6658C", Offset = "0x1B6658C", VA = "0x1B6658C")]
	private void UpdateStatusColor()
	{
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x1B66750", Offset = "0x1B66750", VA = "0x1B66750")]
	private void AskMicPermission()
	{
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x1B668B4", Offset = "0x1B668B4", VA = "0x1B668B4")]
	internal void PermissionCallbacks_PermissionDeniedAndDontAskAgain(string permissionName)
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x1B668B8", Offset = "0x1B668B8", VA = "0x1B668B8")]
	internal void PermissionCallbacks_PermissionGranted(string permissionName)
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x1B668BC", Offset = "0x1B668BC", VA = "0x1B668BC")]
	internal void PermissionCallbacks_PermissionDenied(string permissionName)
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x1B668C0", Offset = "0x1B668C0", VA = "0x1B668C0")]
	public void SearchRandom_OnClick()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x1B657A8", Offset = "0x1B657A8", VA = "0x1B657A8")]
	public void InviteToApp_OnClick()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x1B66914", Offset = "0x1B66914", VA = "0x1B66914")]
	public void Cancel_OnClick()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x1B6696C", Offset = "0x1B6696C", VA = "0x1B6696C")]
	public void LaunchRoster_OnClick()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x1B669C0", Offset = "0x1B669C0", VA = "0x1B669C0")]
	public void Disconnect_OnClick()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x1B66A9C", Offset = "0x1B66A9C", VA = "0x1B66A9C")]
	public void MicPermission_OnClick()
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x1B66AA0", Offset = "0x1B66AA0", VA = "0x1B66AA0")]
	public void PrivateRoom_OnClick()
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x1B66B04", Offset = "0x1B66B04", VA = "0x1B66B04")]
	public void MultiplayerSettings_OnClick()
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x1B66B08", Offset = "0x1B66B08", VA = "0x1B66B08")]
	public void SaveSeat_OnClick()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x1B66D28", Offset = "0x1B66D28", VA = "0x1B66D28")]
	public void YesMessage_OnClick()
	{
	}

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x1B66DCC", Offset = "0x1B66DCC", VA = "0x1B66DCC")]
	public void CancelMessage_OnClick()
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x1B66E14", Offset = "0x1B66E14", VA = "0x1B66E14")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x1B66E18", Offset = "0x1B66E18", VA = "0x1B66E18")]
	public MultiplayerUIController()
	{
	}
}
[Token(Token = "0x20003AD")]
public class NotificationUI : MonoBehaviour
{
	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image NotificationImage;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI DescriptionText;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI DateText;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isEmptyNotification;

	[Token(Token = "0x170002D0")]
	public bool IsEmptyNotification
	{
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1B66E60", Offset = "0x1B66E60", VA = "0x1B66E60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x1B66E68", Offset = "0x1B66E68", VA = "0x1B66E68")]
	public void Config(Sprite notificationImage, Color spriteColor, string description, DateTime date, bool isEmpty = false)
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0x1B66FB8", Offset = "0x1B66FB8", VA = "0x1B66FB8")]
	public NotificationUI()
	{
	}
}
[Token(Token = "0x20003AE")]
public class NotificationUIController : IController<NotificationUIController>
{
	[Token(Token = "0x20003B0")]
	[CompilerGenerated]
	private sealed class <Show>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NotificationUIController <>4__this;

		[Token(Token = "0x170002D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x1B67AC0", Offset = "0x1B67AC0", VA = "0x1B67AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x1B67B08", Offset = "0x1B67B08", VA = "0x1B67B08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1B6783C", Offset = "0x1B6783C", VA = "0x1B6783C")]
		[DebuggerHidden]
		public <Show>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1B679D8", Offset = "0x1B679D8", VA = "0x1B679D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1B679DC", Offset = "0x1B679DC", VA = "0x1B679DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1B67AC8", Offset = "0x1B67AC8", VA = "0x1B67AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B1")]
	[CompilerGenerated]
	private sealed class <Hide>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NotificationUIController <>4__this;

		[Token(Token = "0x170002D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x1B67B84", Offset = "0x1B67B84", VA = "0x1B67B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1B67BCC", Offset = "0x1B67BCC", VA = "0x1B67BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x1B678D8", Offset = "0x1B678D8", VA = "0x1B678D8")]
		[DebuggerHidden]
		public <Hide>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1B67B10", Offset = "0x1B67B10", VA = "0x1B67B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1B67B14", Offset = "0x1B67B14", VA = "0x1B67B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1B67B8C", Offset = "0x1B67B8C", VA = "0x1B67B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas NotificationCanvas;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite NoNotificationSprite;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite ErrorSprite;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite WarningSprite;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite SuccessSprite;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite ServerSprite;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite MultiplayerSprite;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject NotificationElement;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform NotificationsParent;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<NotificationUI> uiNotifications;

	[Token(Token = "0x6001832")]
	[Address(RVA = "0x1B66FC0", Offset = "0x1B66FC0", VA = "0x1B66FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0x1B67070", Offset = "0x1B67070", VA = "0x1B67070")]
	public void Config()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0x1B674AC", Offset = "0x1B674AC", VA = "0x1B674AC")]
	private void OnNewNotificationAdded(NotificationController.Notification notification)
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x1B67274", Offset = "0x1B67274", VA = "0x1B67274")]
	private void CreateNoticationUI(NotificationController.Notification notification, bool isEmpty = false)
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0x1B67520", Offset = "0x1B67520", VA = "0x1B67520")]
	private Sprite GetNotificationImage(NotificationController.NotificationType type)
	{
		return null;
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0x1B67578", Offset = "0x1B67578", VA = "0x1B67578")]
	private Color GetImageColor(NotificationController.NotificationType type)
	{
		return default(Color);
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0x1B675BC", Offset = "0x1B675BC", VA = "0x1B675BC")]
	private void RemoveEmptyNotification()
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0x1B677C8", Offset = "0x1B677C8", VA = "0x1B677C8")]
	[IteratorStateMachine(typeof(<Show>d__17))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600183A")]
	[Address(RVA = "0x1B67864", Offset = "0x1B67864", VA = "0x1B67864")]
	[IteratorStateMachine(typeof(<Hide>d__18))]
	public IEnumerator Hide()
	{
		return null;
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0x1B67900", Offset = "0x1B67900", VA = "0x1B67900")]
	public NotificationUIController()
	{
	}
}
[Token(Token = "0x20003B2")]
public class PhotoAlbumUIController : IController<PhotoAlbumUIController>
{
	[Token(Token = "0x20003B3")]
	public enum PhotoAlbumState
	{
		[Token(Token = "0x4001A80")]
		MIN_PHOTOS,
		[Token(Token = "0x4001A81")]
		MAX_PHOTO
	}

	[Token(Token = "0x20003B4")]
	[CompilerGenerated]
	private sealed class <Show>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotoAlbumUIController <>4__this;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x1B69B0C", Offset = "0x1B69B0C", VA = "0x1B69B0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x1B69B54", Offset = "0x1B69B54", VA = "0x1B69B54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1B67FDC", Offset = "0x1B67FDC", VA = "0x1B67FDC")]
		[DebuggerHidden]
		public <Show>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1B697F4", Offset = "0x1B697F4", VA = "0x1B697F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1B697F8", Offset = "0x1B697F8", VA = "0x1B697F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1B69B14", Offset = "0x1B69B14", VA = "0x1B69B14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B5")]
	[CompilerGenerated]
	private sealed class <Hide>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotoAlbumUIController <>4__this;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x170002D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x1B69E34", Offset = "0x1B69E34", VA = "0x1B69E34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0x1B69E7C", Offset = "0x1B69E7C", VA = "0x1B69E7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1B6808C", Offset = "0x1B6808C", VA = "0x1B6808C")]
		[DebuggerHidden]
		public <Hide>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1B69B5C", Offset = "0x1B69B5C", VA = "0x1B69B5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1B69B60", Offset = "0x1B69B60", VA = "0x1B69B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x1B69E3C", Offset = "0x1B69E3C", VA = "0x1B69E3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[CompilerGenerated]
	private sealed class <SavePhoto>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x1B69ED8", Offset = "0x1B69ED8", VA = "0x1B69ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0x1B69F20", Offset = "0x1B69F20", VA = "0x1B69F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1B68114", Offset = "0x1B68114", VA = "0x1B68114")]
		[DebuggerHidden]
		public <SavePhoto>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x1B69E84", Offset = "0x1B69E84", VA = "0x1B69E84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x1B69E88", Offset = "0x1B69E88", VA = "0x1B69E88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1B69EE0", Offset = "0x1B69EE0", VA = "0x1B69EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B8")]
	[CompilerGenerated]
	private sealed class <LoadImages>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string imageName;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isBig;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage image;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PhotoAlbumUIController <>4__this;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x1B6A3E8", Offset = "0x1B6A3E8", VA = "0x1B6A3E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x1B6A430", Offset = "0x1B6A430", VA = "0x1B6A430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1B68810", Offset = "0x1B68810", VA = "0x1B68810")]
		[DebuggerHidden]
		public <LoadImages>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1B69FD0", Offset = "0x1B69FD0", VA = "0x1B69FD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1B69FEC", Offset = "0x1B69FEC", VA = "0x1B69FEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1B6A338", Offset = "0x1B6A338", VA = "0x1B6A338")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1B6A3F0", Offset = "0x1B6A3F0", VA = "0x1B6A3F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A68")]
	private const int NUMBER_OF_ITEMS_PER_PAGE = 10;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas PhotoAlbumCanvas;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup PhotoAlbumCanvasGroup;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Max Photos")]
	public GameObject MaxImagesParent;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RawImage PrincipalPhoto;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject MaxLeftArrow;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject MaxRightArrow;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Min Photos")]
	public GameObject MinImagesParent;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PhotoUI[] MinPhotos;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MinLeftArrow;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MinRightArrow;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject FacebookButton;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject DeleteButton;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("No Photos")]
	public GameObject NoImageFound;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Pagination pagination;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FileInfo[] photosFilesName;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int selectedImageIndex;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int lastPageMin;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PhotoAlbumState currentPhotoAlbumState;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Scenario currentPictureScenario;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool canChangePage;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly string[] permissions;

	[Token(Token = "0x170002D5")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1B67BD4", Offset = "0x1B67BD4", VA = "0x1B67BD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x1B67C90", Offset = "0x1B67C90", VA = "0x1B67C90")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0x1B67CF8", Offset = "0x1B67CF8", VA = "0x1B67CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0x1B67DF0", Offset = "0x1B67DF0", VA = "0x1B67DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0x1B67F68", Offset = "0x1B67F68", VA = "0x1B67F68")]
	[IteratorStateMachine(typeof(<Show>d__29))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0x1B68004", Offset = "0x1B68004", VA = "0x1B68004")]
	[IteratorStateMachine(typeof(<Hide>d__30))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0x1B680B4", Offset = "0x1B680B4", VA = "0x1B680B4")]
	[IteratorStateMachine(typeof(<SavePhoto>d__31))]
	public IEnumerator SavePhoto()
	{
		return null;
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0x1B6813C", Offset = "0x1B6813C", VA = "0x1B6813C")]
	private void RequestPermissions()
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0x1B68140", Offset = "0x1B68140", VA = "0x1B68140")]
	private void CaptureAndSaveEventListener_onSuccess(string msg)
	{
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0x1B681D0", Offset = "0x1B681D0", VA = "0x1B681D0")]
	private void CaptureAndSaveEventListener_onError(string err)
	{
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0x1B68280", Offset = "0x1B68280", VA = "0x1B68280")]
	private void ConfigPhotoAlbum(int page, GameObject leftButton, GameObject rightButton, int numberOfItemsPerPage = 10)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0x1B68700", Offset = "0x1B68700", VA = "0x1B68700")]
	private void ShowNoImageFound()
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0x1B67DEC", Offset = "0x1B67DEC", VA = "0x1B67DEC")]
	public void ShowOrHideAlbum(bool show)
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0x1B68758", Offset = "0x1B68758", VA = "0x1B68758")]
	[IteratorStateMachine(typeof(<LoadImages>d__38))]
	private IEnumerator LoadImages(string imageName, RawImage image, bool isBig = false, int index = -1)
	{
		return null;
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x1B68838", Offset = "0x1B68838", VA = "0x1B68838")]
	public void ChangePhoto(int index)
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x1B688DC", Offset = "0x1B688DC", VA = "0x1B688DC")]
	private void ChangePrincipalPhoto()
	{
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x1B68A08", Offset = "0x1B68A08", VA = "0x1B68A08")]
	private void VerifyRideOfCurrentPicture(string filename)
	{
	}

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x1B67D88", Offset = "0x1B67D88", VA = "0x1B67D88")]
	private void ShowOrHideMinAndMaxImage()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x1B68BD0", Offset = "0x1B68BD0", VA = "0x1B68BD0")]
	public void SharePhoto(string path)
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x1B68BD4", Offset = "0x1B68BD4", VA = "0x1B68BD4")]
	private void DeleteAllPhoto()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x1B68D5C", Offset = "0x1B68D5C", VA = "0x1B68D5C")]
	private void DeletePhoto()
	{
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x1B68F04", Offset = "0x1B68F04", VA = "0x1B68F04")]
	public void Back()
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0x1B688A4", Offset = "0x1B688A4", VA = "0x1B688A4")]
	public GameObject GetLeftButton()
	{
		return null;
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0x1B688C0", Offset = "0x1B688C0", VA = "0x1B688C0")]
	public GameObject GetRightButton()
	{
		return null;
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0x1B68FE8", Offset = "0x1B68FE8", VA = "0x1B68FE8")]
	public void ExitPhotoAlbum()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0x1B691A8", Offset = "0x1B691A8", VA = "0x1B691A8")]
	public void PhotoSelected_OnClick(PhotoUI photo)
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0x1B691C0", Offset = "0x1B691C0", VA = "0x1B691C0")]
	public void CanChangePage()
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0x1B67EF8", Offset = "0x1B67EF8", VA = "0x1B67EF8")]
	public void AlbumRightButton_OnClick()
	{
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0x1B67F30", Offset = "0x1B67F30", VA = "0x1B67F30")]
	public void AlbumLeftButton_OnClick()
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0x1B691CC", Offset = "0x1B691CC", VA = "0x1B691CC")]
	public void ShareFacebookButton_OnClick()
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0x1B691D0", Offset = "0x1B691D0", VA = "0x1B691D0")]
	private void GallerySaveButtonInteractiveItem_OnClick()
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0x1B691F0", Offset = "0x1B691F0", VA = "0x1B691F0")]
	public void DeletePhotoButton_OnClick()
	{
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0x1B691F4", Offset = "0x1B691F4", VA = "0x1B691F4")]
	public void DeleteAllPhotosButton_OnClick()
	{
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0x1B69378", Offset = "0x1B69378", VA = "0x1B69378")]
	private void DeleteAllPhotos_OnYes(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0x1B69400", Offset = "0x1B69400", VA = "0x1B69400")]
	private void DeleteAllPhotos_OnNo(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0x1B6947C", Offset = "0x1B6947C", VA = "0x1B6947C")]
	private void Pagination_OnElementReadyToShow(int i)
	{
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0x1B696A4", Offset = "0x1B696A4", VA = "0x1B696A4")]
	public PhotoAlbumUIController()
	{
	}
}
[Token(Token = "0x20003B9")]
public class PhotoUI : MonoBehaviour
{
	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Path;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage Image;

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x1B6A438", Offset = "0x1B6A438", VA = "0x1B6A438")]
	public PhotoUI()
	{
	}
}
[Token(Token = "0x20003BA")]
public class PlayItemUI : MonoBehaviour
{
	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color SHADOWCOLOR;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIGameStateEnum RelatedMenuState;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image ButtonImage;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image BackgroundImage;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image ShadowImage;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI TitleLabel;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int SiblingIndex;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 defaultSizeDelta;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RectTransform rectTransform;

	[Token(Token = "0x170002DE")]
	private RectTransform RectTransform
	{
		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1B6A440", Offset = "0x1B6A440", VA = "0x1B6A440")]
		get
		{
			return null;
		}
		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1B6A568", Offset = "0x1B6A568", VA = "0x1B6A568")]
		set
		{
		}
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x1B6A570", Offset = "0x1B6A570", VA = "0x1B6A570")]
	private void Start()
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x1B6A604", Offset = "0x1B6A604", VA = "0x1B6A604")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x1B6A628", Offset = "0x1B6A628", VA = "0x1B6A628")]
	public void SetImage(Sprite sprite)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0x1B6A644", Offset = "0x1B6A644", VA = "0x1B6A644")]
	public void SetImageHalfSize(bool half)
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x1B6A704", Offset = "0x1B6A704", VA = "0x1B6A704")]
	public void FadeIn(float time)
	{
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x1B6AA48", Offset = "0x1B6AA48", VA = "0x1B6AA48")]
	public void FadeOut(float time)
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x1B6AD8C", Offset = "0x1B6AD8C", VA = "0x1B6AD8C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x1B6AEA0", Offset = "0x1B6AEA0", VA = "0x1B6AEA0")]
	public PlayItemUI()
	{
	}
}
[Token(Token = "0x20003BB")]
public class PlayUIController : IController<PlayUIController>
{
	[Token(Token = "0x20003BC")]
	[CompilerGenerated]
	private sealed class <Show>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayUIController <>4__this;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] <positions>5__2;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170002E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x1B6C2D4", Offset = "0x1B6C2D4", VA = "0x1B6C2D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x1B6C31C", Offset = "0x1B6C31C", VA = "0x1B6C31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1B6B1C8", Offset = "0x1B6B1C8", VA = "0x1B6B1C8")]
		[DebuggerHidden]
		public <Show>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1B6B570", Offset = "0x1B6B570", VA = "0x1B6B570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1B6B574", Offset = "0x1B6B574", VA = "0x1B6B574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1B6C2DC", Offset = "0x1B6C2DC", VA = "0x1B6C2DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BD")]
	[CompilerGenerated]
	private sealed class <Hide>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayUIController <>4__this;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayItemUI[] <>7__wrap1;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x170002E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x1B6C6AC", Offset = "0x1B6C6AC", VA = "0x1B6C6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x1B6C6F4", Offset = "0x1B6C6F4", VA = "0x1B6C6F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1B6B278", Offset = "0x1B6B278", VA = "0x1B6B278")]
		[DebuggerHidden]
		public <Hide>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1B6C324", Offset = "0x1B6C324", VA = "0x1B6C324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1B6C328", Offset = "0x1B6C328", VA = "0x1B6C328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1B6C6B4", Offset = "0x1B6C6B4", VA = "0x1B6C6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas PlayCanvas;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HorizontalLayoutGroup LayoutGroup;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayItemUI[] PlayItems;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HiddenPosition;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button2 PlayButton;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioClip _lastPlayOnClickClip;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float SLIDE_ANIMATION_TIME;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 defaultSizeDelta;

	[Token(Token = "0x170002DF")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1B6AFD4", Offset = "0x1B6AFD4", VA = "0x1B6AFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x1B6B090", Offset = "0x1B6B090", VA = "0x1B6B090")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x1B6B0F8", Offset = "0x1B6B0F8", VA = "0x1B6B0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x1B6B154", Offset = "0x1B6B154", VA = "0x1B6B154")]
	[IteratorStateMachine(typeof(<Show>d__13))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x1B6B1F0", Offset = "0x1B6B1F0", VA = "0x1B6B1F0")]
	[IteratorStateMachine(typeof(<Hide>d__14))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x1B6B2A0", Offset = "0x1B6B2A0", VA = "0x1B6B2A0")]
	public void ChangeState_Mode()
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x1B6B310", Offset = "0x1B6B310", VA = "0x1B6B310")]
	public void ChangeState_Scenario()
	{
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x1B6B380", Offset = "0x1B6B380", VA = "0x1B6B380")]
	public void ChangeState_Cart()
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x1B6B3F0", Offset = "0x1B6B3F0", VA = "0x1B6B3F0")]
	public void ChangeState_Weapon()
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x1B6B460", Offset = "0x1B6B460", VA = "0x1B6B460")]
	public void ChangeState_Companion()
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x1B6B4D0", Offset = "0x1B6B4D0", VA = "0x1B6B4D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x1B6B4D8", Offset = "0x1B6B4D8", VA = "0x1B6B4D8")]
	public PlayUIController()
	{
	}
}
[Token(Token = "0x20003BE")]
public class ProgressBarAnimator : MonoBehaviour
{
	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] ProgressImages;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int showingBars;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int newBarsToShow;

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0x1B6C6FC", Offset = "0x1B6C6FC", VA = "0x1B6C6FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0x1B6C860", Offset = "0x1B6C860", VA = "0x1B6C860")]
	public void SetProgress(float progress)
	{
	}

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0x1B6CB20", Offset = "0x1B6CB20", VA = "0x1B6CB20")]
	private void OnShowingNewBars(float value)
	{
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x1B6CC38", Offset = "0x1B6CC38", VA = "0x1B6CC38")]
	private void OnHidingNewBars(float value)
	{
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0x1B6CD88", Offset = "0x1B6CD88", VA = "0x1B6CD88")]
	public ProgressBarAnimator()
	{
	}
}
[Token(Token = "0x20003BF")]
public class RecordsUIController : IController<RecordsUIController>
{
	[Token(Token = "0x20003C0")]
	[CompilerGenerated]
	private sealed class <Show>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordsUIController <>4__this;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x1B6D178", Offset = "0x1B6D178", VA = "0x1B6D178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x1B6D1C0", Offset = "0x1B6D1C0", VA = "0x1B6D1C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1B6CE98", Offset = "0x1B6CE98", VA = "0x1B6CE98")]
		[DebuggerHidden]
		public <Show>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1B6D01C", Offset = "0x1B6D01C", VA = "0x1B6D01C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x1B6D020", Offset = "0x1B6D020", VA = "0x1B6D020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1B6D180", Offset = "0x1B6D180", VA = "0x1B6D180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C1")]
	[CompilerGenerated]
	private sealed class <Hide>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordsUIController <>4__this;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x1B6D2D4", Offset = "0x1B6D2D4", VA = "0x1B6D2D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x1B6D31C", Offset = "0x1B6D31C", VA = "0x1B6D31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1B6CEC0", Offset = "0x1B6CEC0", VA = "0x1B6CEC0")]
		[DebuggerHidden]
		public <Hide>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1B6D1C8", Offset = "0x1B6D1C8", VA = "0x1B6D1C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1B6D1CC", Offset = "0x1B6D1CC", VA = "0x1B6D1CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1B6D2DC", Offset = "0x1B6D2DC", VA = "0x1B6D2DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	[CompilerGenerated]
	private sealed class <DisplayRecords>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RecordsUIController <>4__this;

		[Token(Token = "0x170002E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x1B6DF14", Offset = "0x1B6DF14", VA = "0x1B6DF14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x1B6DF5C", Offset = "0x1B6DF5C", VA = "0x1B6DF5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1B6CF5C", Offset = "0x1B6CF5C", VA = "0x1B6CF5C")]
		[DebuggerHidden]
		public <DisplayRecords>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1B6D324", Offset = "0x1B6D324", VA = "0x1B6D324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1B6D328", Offset = "0x1B6D328", VA = "0x1B6D328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1B6DF1C", Offset = "0x1B6DF1C", VA = "0x1B6DF1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas RecordsCanvas;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Favorite Ride")]
	public TextMeshProUGUI FavoriteRideLabel;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI FavoriteRideName;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI FavoriteRideCategory;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI FavoriteRideTimesRiddenLabel;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI FavoriteRideTimesRidden;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Time Played")]
	public TextMeshProUGUI TotalTimePlayedLabel;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TotalTimePlayed;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI TotalTimePlayedSub;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Rides Taken")]
	public TextMeshProUGUI TotalRidesTakenLabel;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI TotalRidesTaken;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Favorite Cart")]
	public TextMeshProUGUI FavoriteCartLabel;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI FavoriteCartName;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI FavoriteCartTimesRidden;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI FavoriteCartTimesRiddenLabel;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image FavoriteCartImage;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Hitting Streak")]
	public TextMeshProUGUI HittingStreakLabel;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI HittingStreak;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI HittingStreakSub;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Favorite Mode")]
	public TextMeshProUGUI FavoriteModeLabel;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI FavoriteMode;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshProUGUI FavoriteModeTimesRidden;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI FavoriteModeTimesRiddenLabel;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Targets Hit")]
	public TextMeshProUGUI TargetsHitLabel;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI TargetsHit;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI TargetsHitSub;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x170002E4")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1B6CDDC", Offset = "0x1B6CDDC", VA = "0x1B6CDDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x1B5D5AC", Offset = "0x1B5D5AC", VA = "0x1B5D5AC")]
	[IteratorStateMachine(typeof(<Show>d__30))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x1B5D524", Offset = "0x1B5D524", VA = "0x1B5D524")]
	[IteratorStateMachine(typeof(<Hide>d__31))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x1B6CEE8", Offset = "0x1B6CEE8", VA = "0x1B6CEE8")]
	[IteratorStateMachine(typeof(<DisplayRecords>d__32))]
	public IEnumerator DisplayRecords()
	{
		return null;
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0x1B6CF84", Offset = "0x1B6CF84", VA = "0x1B6CF84")]
	public RecordsUIController()
	{
	}
}
[Token(Token = "0x20003C3")]
public class SaleUIController : IController<SaleUIController>
{
	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _alreadyShowedSale;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> alreadyShowdMessageAtThesePlays;

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0x1B6DF64", Offset = "0x1B6DF64", VA = "0x1B6DF64")]
	public void VerifyToShowSale()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0x1B6E330", Offset = "0x1B6E330", VA = "0x1B6E330")]
	public void ClearShowedSale()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0x1B6E338", Offset = "0x1B6E338", VA = "0x1B6E338")]
	private void Message_OnYes_Clicked(MessageUIController.Message obj)
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0x1B6E3C0", Offset = "0x1B6E3C0", VA = "0x1B6E3C0")]
	private void Message_OnNo_Clicked(MessageUIController.Message obj)
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0x1B6E248", Offset = "0x1B6E248", VA = "0x1B6E248")]
	public bool ShouldShowSale()
	{
		return default(bool);
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0x1B6E418", Offset = "0x1B6E418", VA = "0x1B6E418")]
	public SaleUIController()
	{
	}
}
[Token(Token = "0x20003C4")]
public class ScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Object to animate")]
	public GameObject ElementToScale;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 MaxScale;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 MinScale;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Text to animate")]
	public TextMeshProUGUI TextToScale;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxFontSize;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MinFontSize;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Commom")]
	public float TimeOfScale;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _lastTimeScaled;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _up;

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0x1B6E460", Offset = "0x1B6E460", VA = "0x1B6E460")]
	private void Update()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0x1B6E6B8", Offset = "0x1B6E6B8", VA = "0x1B6E6B8")]
	public ScaleAnimation()
	{
	}
}
[Token(Token = "0x20003C5")]
public class ScenarioUIController : IController<ScenarioUIController>
{
	[Token(Token = "0x20003C6")]
	private enum OrderOptions
	{
		[Token(Token = "0x4001B19")]
		PRICE,
		[Token(Token = "0x4001B1A")]
		INTENSITY,
		[Token(Token = "0x4001B1B")]
		VELOCITY
	}

	[Token(Token = "0x20003C7")]
	[CompilerGenerated]
	private sealed class <Show>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUIController <>4__this;

		[Token(Token = "0x170002ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0x1B72FC0", Offset = "0x1B72FC0", VA = "0x1B72FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0x1B73008", Offset = "0x1B73008", VA = "0x1B73008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1B72CC8", Offset = "0x1B72CC8", VA = "0x1B72CC8")]
		[DebuggerHidden]
		public <Show>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x1B72CF0", Offset = "0x1B72CF0", VA = "0x1B72CF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1B72CF4", Offset = "0x1B72CF4", VA = "0x1B72CF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x1B72FC8", Offset = "0x1B72FC8", VA = "0x1B72FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	[CompilerGenerated]
	private sealed class <Hide>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUIController <>4__this;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0x1B73168", Offset = "0x1B73168", VA = "0x1B73168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x1B731B0", Offset = "0x1B731B0", VA = "0x1B731B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x1B73010", Offset = "0x1B73010", VA = "0x1B73010")]
		[DebuggerHidden]
		public <Hide>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1B73038", Offset = "0x1B73038", VA = "0x1B73038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x1B7303C", Offset = "0x1B7303C", VA = "0x1B7303C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x1B73170", Offset = "0x1B73170", VA = "0x1B73170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C9")]
	[CompilerGenerated]
	private sealed class <FadeOutSceneriosUI>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUI[] uis;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScenarioUI[] <>7__wrap1;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1B73648", Offset = "0x1B73648", VA = "0x1B73648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1B73690", Offset = "0x1B73690", VA = "0x1B73690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x1B731B8", Offset = "0x1B731B8", VA = "0x1B731B8")]
		[DebuggerHidden]
		public <FadeOutSceneriosUI>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1B731E0", Offset = "0x1B731E0", VA = "0x1B731E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1B731E4", Offset = "0x1B731E4", VA = "0x1B731E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1B73650", Offset = "0x1B73650", VA = "0x1B73650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CA")]
	[CompilerGenerated]
	private sealed class <FadeInSceneriosUI>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUI[] uis;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScenarioUI[] <>7__wrap1;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1B73B80", Offset = "0x1B73B80", VA = "0x1B73B80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x1B73BC8", Offset = "0x1B73BC8", VA = "0x1B73BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1B73698", Offset = "0x1B73698", VA = "0x1B73698")]
		[DebuggerHidden]
		public <FadeInSceneriosUI>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1B736C0", Offset = "0x1B736C0", VA = "0x1B736C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x1B736C4", Offset = "0x1B736C4", VA = "0x1B736C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1B73B88", Offset = "0x1B73B88", VA = "0x1B73B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CB")]
	[CompilerGenerated]
	private sealed class <FadeInSceneriosUI>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUIController <>4__this;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScenarioUI[] uis;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> done;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x1B73C80", Offset = "0x1B73C80", VA = "0x1B73C80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x1B73CC8", Offset = "0x1B73CC8", VA = "0x1B73CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1B73BD0", Offset = "0x1B73BD0", VA = "0x1B73BD0")]
		[DebuggerHidden]
		public <FadeInSceneriosUI>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1B73BF8", Offset = "0x1B73BF8", VA = "0x1B73BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1B73BFC", Offset = "0x1B73BFC", VA = "0x1B73BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1B73C88", Offset = "0x1B73C88", VA = "0x1B73C88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CC")]
	[CompilerGenerated]
	private sealed class <SelectScenarioCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUIController <>4__this;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario scenario;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite detailImage;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite iconImage;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x1B73EAC", Offset = "0x1B73EAC", VA = "0x1B73EAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x1B73EF4", Offset = "0x1B73EF4", VA = "0x1B73EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1B73CD0", Offset = "0x1B73CD0", VA = "0x1B73CD0")]
		[DebuggerHidden]
		public <SelectScenarioCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1B73CF8", Offset = "0x1B73CF8", VA = "0x1B73CF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1B73CFC", Offset = "0x1B73CFC", VA = "0x1B73CFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x1B73EB4", Offset = "0x1B73EB4", VA = "0x1B73EB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[CompilerGenerated]
	private sealed class <UpdateAlternativeDownload>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScenarioUIController <>4__this;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Scenario> <scenariosToDownload>5__2;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x1B74770", Offset = "0x1B74770", VA = "0x1B74770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x1B747B8", Offset = "0x1B747B8", VA = "0x1B747B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x1B74184", Offset = "0x1B74184", VA = "0x1B74184")]
		[DebuggerHidden]
		public <UpdateAlternativeDownload>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1B741AC", Offset = "0x1B741AC", VA = "0x1B741AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1B741B0", Offset = "0x1B741B0", VA = "0x1B741B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1B74778", Offset = "0x1B74778", VA = "0x1B74778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float ZOOM_ANIMATION_TIME;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color DISABLED_COLOR;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Color ENABLED_COLOR;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Background")]
	public Canvas ScenarioCanvas;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup ScenarioCanvasGroup;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ScenarioImage;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform DetailRectTransform;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform BackgroundImageRectTransform;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Elements")]
	public ScrollRect ScenariosScroll;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image BackgroundImage;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image ScenarioDetailImage;

	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI DescriptionText;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI TimeText;

	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI IntensityText;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI TopSpeedText;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI ButtonText;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button2 InteractionButton;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button2 CloseButton;

	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image CloseButtonIcon;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image ScenarioIcon;

	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Scenarios UI")]
	public ScenarioUI[] ScenariosUI;

	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Order by")]
	public TextMeshProUGUI OrderByText;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OrderOptions CurrentOrder;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Multiplayer panels")]
	public GameObject SelectedScenarioMultiplayerPanel;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI BlockedScenarioMultiplayerText;

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Animation")]
	public float InitialDetailYPosition;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 DetailShowPosition;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 DetailHidePosition;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector2 DetailShowSize;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector2 DetailHideSize;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[Header("Intensity Color")]
	public Color ComfortableColor;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color MediumColor;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Color IntenseColor;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Alternative Download")]
	public Button2 AlternativeDownloadButton;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshProUGUI AlternativeDownloadText;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Scenario> downloadingScenarios;

	[Token(Token = "0x4001B10")]
	private const string percent = "%";

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _isSetToAlternativeServer;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private static bool _alreadyCanceled;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Color _alternativeServerColor;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Scenario currentScenario;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool isAnimationDone;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool _isHoveringInteractionButton;

	[Token(Token = "0x170002EB")]
	public Scenario CurrentScenario
	{
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1B6E700", Offset = "0x1B6E700", VA = "0x1B6E700")]
		get
		{
			return null;
		}
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1B6E708", Offset = "0x1B6E708", VA = "0x1B6E708")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x1B6E77C", Offset = "0x1B6E77C", VA = "0x1B6E77C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0x1B6E830", Offset = "0x1B6E830", VA = "0x1B6E830")]
	private void IsAnimationDone(bool done)
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0x1B6E83C", Offset = "0x1B6E83C", VA = "0x1B6E83C")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0x1B6E8A4", Offset = "0x1B6E8A4", VA = "0x1B6E8A4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0x1B6EDB4", Offset = "0x1B6EDB4", VA = "0x1B6EDB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0x1B6EDB8", Offset = "0x1B6EDB8", VA = "0x1B6EDB8")]
	public void SelectScenarioFromDeeplink()
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0x1B6EFD8", Offset = "0x1B6EFD8", VA = "0x1B6EFD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0x1B6F1FC", Offset = "0x1B6F1FC", VA = "0x1B6F1FC")]
	[IteratorStateMachine(typeof(<Show>d__58))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0x1B6F270", Offset = "0x1B6F270", VA = "0x1B6F270")]
	[IteratorStateMachine(typeof(<Hide>d__59))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0x1B6F2F8", Offset = "0x1B6F2F8", VA = "0x1B6F2F8")]
	[IteratorStateMachine(typeof(<FadeOutSceneriosUI>d__60))]
	public IEnumerator FadeOutSceneriosUI(ScenarioUI[] uis)
	{
		return null;
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0x1B6F36C", Offset = "0x1B6F36C", VA = "0x1B6F36C")]
	[IteratorStateMachine(typeof(<FadeInSceneriosUI>d__61))]
	public IEnumerator FadeInSceneriosUI(ScenarioUI[] uis)
	{
		return null;
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0x1B6F3E0", Offset = "0x1B6F3E0", VA = "0x1B6F3E0")]
	[IteratorStateMachine(typeof(<FadeInSceneriosUI>d__62))]
	public IEnumerator FadeInSceneriosUI(ScenarioUI[] uis, Action<bool> done)
	{
		return null;
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0x1B6F484", Offset = "0x1B6F484", VA = "0x1B6F484")]
	public void SetForFadeIn(ScenarioUI[] uis)
	{
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0x1B6F4E4", Offset = "0x1B6F4E4", VA = "0x1B6F4E4")]
	public bool IsShowingDetails()
	{
		return default(bool);
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0x1B6F544", Offset = "0x1B6F544", VA = "0x1B6F544")]
	public void NextStep()
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0x1B6F598", Offset = "0x1B6F598", VA = "0x1B6F598")]
	public ScenarioUI GetScenarioUI(RideType ride)
	{
		return null;
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0x1B6C2B8", Offset = "0x1B6C2B8", VA = "0x1B6C2B8")]
	public Sprite GetSprite(RideType rideType)
	{
		return null;
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0x1B6F5F4", Offset = "0x1B6F5F4", VA = "0x1B6F5F4")]
	public Sprite GetIcon(RideType rideType)
	{
		return null;
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0x1B6F610", Offset = "0x1B6F610", VA = "0x1B6F610")]
	public void SelectScenario(Scenario scenario, Sprite detailImage, Sprite iconImage)
	{
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0x1B6F630", Offset = "0x1B6F630", VA = "0x1B6F630")]
	[IteratorStateMachine(typeof(<SelectScenarioCoroutine>d__70))]
	public IEnumerator SelectScenarioCoroutine(Scenario scenario, Sprite detailImage, Sprite iconImage)
	{
		return null;
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0x1B6F6F0", Offset = "0x1B6F6F0", VA = "0x1B6F6F0")]
	private void SetLockerImageVisibility(ScenarioUI[] scenarios)
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0x1B6F820", Offset = "0x1B6F820", VA = "0x1B6F820")]
	private void SetMenuVisibility(ScenarioUI[] scenarios)
	{
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0x1B6F92C", Offset = "0x1B6F92C", VA = "0x1B6F92C")]
	private void OpenDetailAnimation()
	{
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0x1B6EB30", Offset = "0x1B6EB30", VA = "0x1B6EB30")]
	private void CloseDetail()
	{
	}

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0x1B6F930", Offset = "0x1B6F930", VA = "0x1B6F930")]
	private void CloseDetailAnimation()
	{
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0x1B6F938", Offset = "0x1B6F938", VA = "0x1B6F938")]
	private void SetTimeText()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0x1B6FB28", Offset = "0x1B6FB28", VA = "0x1B6FB28")]
	private void SetIntensityText()
	{
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0x1B7002C", Offset = "0x1B7002C", VA = "0x1B7002C")]
	private void SetTopSpeedText()
	{
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0x1B702BC", Offset = "0x1B702BC", VA = "0x1B702BC")]
	private void SetButtonText()
	{
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0x1B6EB38", Offset = "0x1B6EB38", VA = "0x1B6EB38")]
	public void EnableDetails(bool enable)
	{
	}

	[Token(Token = "0x6001901")]
	[Address(RVA = "0x1B708B0", Offset = "0x1B708B0", VA = "0x1B708B0")]
	public void EnableBackgroundScenarios(bool enable)
	{
	}

	[Token(Token = "0x6001902")]
	[Address(RVA = "0x1B7096C", Offset = "0x1B7096C", VA = "0x1B7096C")]
	public void Close_OnClick()
	{
	}

	[Token(Token = "0x6001903")]
	[Address(RVA = "0x1B70998", Offset = "0x1B70998", VA = "0x1B70998")]
	public void InteractionButton_OnClick()
	{
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0x1B70EFC", Offset = "0x1B70EFC", VA = "0x1B70EFC")]
	public void InteractionButton_OnEnter()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0x1B70FB0", Offset = "0x1B70FB0", VA = "0x1B70FB0")]
	public void InteractionButton_OnExit()
	{
	}

	[Token(Token = "0x6001906")]
	[Address(RVA = "0x1B70FB8", Offset = "0x1B70FB8", VA = "0x1B70FB8")]
	public void AlternativeServerButton_OnClick()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0x1B710E8", Offset = "0x1B710E8", VA = "0x1B710E8")]
	private void OnDownloadFinished(Scenario scenario)
	{
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0x1B71074", Offset = "0x1B71074", VA = "0x1B71074")]
	[IteratorStateMachine(typeof(<UpdateAlternativeDownload>d__88))]
	private IEnumerator UpdateAlternativeDownload()
	{
		return null;
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0x1B706C8", Offset = "0x1B706C8", VA = "0x1B706C8")]
	private void UpdateAlternativeDownloadButtonUI()
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0x1B71284", Offset = "0x1B71284", VA = "0x1B71284")]
	public void OrderByScenarios()
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0x1B712CC", Offset = "0x1B712CC", VA = "0x1B712CC")]
	private void ReorderList(bool reorderUI = false)
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x1B7196C", Offset = "0x1B7196C", VA = "0x1B7196C")]
	private void ReorderUI()
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0x1B71848", Offset = "0x1B71848", VA = "0x1B71848")]
	private void ChangeOrderText()
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0x1B719DC", Offset = "0x1B719DC", VA = "0x1B719DC")]
	public string GetCurrentScenarioName()
	{
		return null;
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0x1B71A78", Offset = "0x1B71A78", VA = "0x1B71A78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0x1B71BFC", Offset = "0x1B71BFC", VA = "0x1B71BFC")]
	public ScenarioUIController()
	{
	}
}
[Token(Token = "0x20003CF")]
public class SpinningAnimation : MonoBehaviour
{
	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ANIMATIONS_TIME;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform BeforePreviousRectTransform;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image BeforePreviousImage;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RawImage BeforePreviousRawImage;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform PreviousRectTransform;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image PreviousImage;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage PreviousRawImage;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform CurrentRectTransform;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image CurrentImage;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RawImage CurrentRawImage;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform NextRectTransform;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image NextImage;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RawImage NextRawImage;

	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform AfterNextRectTransform;

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image AfterNextImage;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RawImage AfterNextRawImage;

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 PreviousAndNextImageScale;

	[Token(Token = "0x4001B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 CurrentImageScale;

	[Token(Token = "0x4001B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Range(0f, 1f)]
	public float PreviousAndNextImageAlpha;

	[Token(Token = "0x4001B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[Range(0f, 1f)]
	public float CurrentImageAlpha;

	[Token(Token = "0x4001B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool IsAnimating;

	[Token(Token = "0x4001B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector2 beforePreviousInitialAnchoredPosition;

	[Token(Token = "0x4001B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector2 previousInitialAnchoredPosition;

	[Token(Token = "0x4001B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector2 currentInitialAnchoredPosition;

	[Token(Token = "0x4001B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector2 nextInitialAnchoredPosition;

	[Token(Token = "0x4001B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector2 afterNextInitialAnchoredPosition;

	[Token(Token = "0x4001B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Sprite newBeforePrevious;

	[Token(Token = "0x4001B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Sprite newAfterNext;

	[Token(Token = "0x4001B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Texture newBeforePreviousRaw;

	[Token(Token = "0x4001B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Texture newAfterNextRaw;

	[Token(Token = "0x6001946")]
	[Address(RVA = "0x1B747C0", Offset = "0x1B747C0", VA = "0x1B747C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x1B7483C", Offset = "0x1B7483C", VA = "0x1B7483C")]
	public void StartSpinningAnimations(Sprite beforePreviousSprite, Sprite previousSprite, Sprite currentSprite, Sprite nextSprite, Sprite afterNextSprite)
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x1B748CC", Offset = "0x1B748CC", VA = "0x1B748CC")]
	public void StartSpinningAnimations(Texture beforePreviousSprite, Texture previousSprite, Texture currentSprite, Texture nextSprite, Texture afterNextSprite)
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x1B7495C", Offset = "0x1B7495C", VA = "0x1B7495C")]
	public void Previous(Sprite newAfterNext)
	{
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0x1B74E84", Offset = "0x1B74E84", VA = "0x1B74E84")]
	public void Previous(Texture newAfterNext)
	{
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0x1B74980", Offset = "0x1B74980", VA = "0x1B74980")]
	private void Previous()
	{
	}

	[Token(Token = "0x600194C")]
	[Address(RVA = "0x1B74EA8", Offset = "0x1B74EA8", VA = "0x1B74EA8")]
	private void OnCurrentImageTurnsToPrevious(Color color)
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0x1B74F94", Offset = "0x1B74F94", VA = "0x1B74F94")]
	private void OnNextImageTurnsToCurrent(Color color)
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0x1B74FB8", Offset = "0x1B74FB8", VA = "0x1B74FB8")]
	public void Next(Sprite newBeforePrevious)
	{
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x1B754E8", Offset = "0x1B754E8", VA = "0x1B754E8")]
	public void Next(Texture newBeforePrevious)
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x1B74FDC", Offset = "0x1B74FDC", VA = "0x1B74FDC")]
	private void Next()
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0x1B7550C", Offset = "0x1B7550C", VA = "0x1B7550C")]
	private void OnPreviousImageTurnsToCurrent(Color color)
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0x1B755F8", Offset = "0x1B755F8", VA = "0x1B755F8")]
	private void OnCurrentImageTurnsToNext(Color color)
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0x1B756E4", Offset = "0x1B756E4", VA = "0x1B756E4")]
	private void Previous_OnComplete()
	{
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0x1B75AA4", Offset = "0x1B75AA4", VA = "0x1B75AA4")]
	private void Next_OnComplete()
	{
	}

	[Token(Token = "0x6001955")]
	[Address(RVA = "0x1B757F0", Offset = "0x1B757F0", VA = "0x1B757F0")]
	private void ResetPositions(Sprite beforePreviousSprite, Sprite previousSprite, Sprite currentSprite, Sprite nextSprite, Sprite afterNextSprite)
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0x1B75940", Offset = "0x1B75940", VA = "0x1B75940")]
	private void ResetPositions(Texture beforePreviousSprite, Texture previousSprite, Texture currentSprite, Texture nextSprite, Texture afterNextSprite)
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0x1B75BB0", Offset = "0x1B75BB0", VA = "0x1B75BB0")]
	private void ResetPositon(RectTransform rect, Image image, Vector2 position, Vector3 scale, Sprite sprite, float alpha)
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0x1B75C90", Offset = "0x1B75C90", VA = "0x1B75C90")]
	private void ResetPositon(RectTransform rect, RawImage image, Vector2 position, Vector3 scale, Texture texture, float alpha)
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0x1B75D70", Offset = "0x1B75D70", VA = "0x1B75D70")]
	public SpinningAnimation()
	{
	}
}
[Token(Token = "0x20003D0")]
public class StoreUIController : IController<StoreUIController>
{
	[Token(Token = "0x20003D1")]
	[CompilerGenerated]
	private sealed class <Show>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreUIController <>4__this;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1B76C38", Offset = "0x1B76C38", VA = "0x1B76C38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x1B76C80", Offset = "0x1B76C80", VA = "0x1B76C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1B75EA8", Offset = "0x1B75EA8", VA = "0x1B75EA8")]
		[DebuggerHidden]
		public <Show>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1B7617C", Offset = "0x1B7617C", VA = "0x1B7617C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1B76180", Offset = "0x1B76180", VA = "0x1B76180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1B76C40", Offset = "0x1B76C40", VA = "0x1B76C40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D2")]
	[CompilerGenerated]
	private sealed class <Hide>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreUIController <>4__this;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x1B76E30", Offset = "0x1B76E30", VA = "0x1B76E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x1B76E78", Offset = "0x1B76E78", VA = "0x1B76E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1B75F58", Offset = "0x1B75F58", VA = "0x1B75F58")]
		[DebuggerHidden]
		public <Hide>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1B76C88", Offset = "0x1B76C88", VA = "0x1B76C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1B76C8C", Offset = "0x1B76C8C", VA = "0x1B76C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1B76E38", Offset = "0x1B76E38", VA = "0x1B76E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas StoreCanvas;

	[Token(Token = "0x4001B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup StoreUICanvasGroup;

	[Token(Token = "0x4001B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StoreUIItem[] Items;

	[Token(Token = "0x4001B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject StorePanel;

	[Token(Token = "0x4001B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StoreItemDetailed;

	[Token(Token = "0x4001B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Detailed Panel")]
	public Image StoreItemImage;

	[Token(Token = "0x4001B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x4001B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI DescriptionText;

	[Token(Token = "0x4001B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI BuyDealScenarioLabelText;

	[Token(Token = "0x4001B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI BuyOnlyScenarioLabelText;

	[Token(Token = "0x4001B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image[] IconsScenariosImages;

	[Token(Token = "0x4001B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("No Offer")]
	public GameObject NoOfferPanel;

	[Token(Token = "0x4001B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Scenario ScenarioToBuy;

	[Token(Token = "0x4001B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public StoreItem DealToBuy;

	[Token(Token = "0x600195B")]
	[Address(RVA = "0x1B75E34", Offset = "0x1B75E34", VA = "0x1B75E34")]
	[IteratorStateMachine(typeof(<Show>d__14))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x1B75ED0", Offset = "0x1B75ED0", VA = "0x1B75ED0")]
	[IteratorStateMachine(typeof(<Hide>d__15))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x1B75F80", Offset = "0x1B75F80", VA = "0x1B75F80")]
	public void BuyBundleDetailed_OnClick()
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x1B7603C", Offset = "0x1B7603C", VA = "0x1B7603C")]
	public void BuyOnlyScenarioDetailed_OnClick()
	{
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0x1B760EC", Offset = "0x1B760EC", VA = "0x1B760EC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0x1B76134", Offset = "0x1B76134", VA = "0x1B76134")]
	public StoreUIController()
	{
	}
}
[Token(Token = "0x20003D3")]
public class StoreUIItem : MonoBehaviour
{
	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StoreItemType RelatedStoreItemType;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ItemPanel;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI TitleText;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI DescriptionText;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI Discount;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image CoverImage;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StoreItem relatedStoreItem;

	[Token(Token = "0x170002FF")]
	public StoreItem RelatedStoreItem
	{
		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1B76E80", Offset = "0x1B76E80", VA = "0x1B76E80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0x1B76774", Offset = "0x1B76774", VA = "0x1B76774")]
	public bool UpdateUI()
	{
		return default(bool);
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0x1B76F3C", Offset = "0x1B76F3C", VA = "0x1B76F3C")]
	private string ConcatScenariosName(List<Scenario> scenarios)
	{
		return null;
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0x1B77030", Offset = "0x1B77030", VA = "0x1B77030")]
	public void Buy_OnClick()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0x1B770FC", Offset = "0x1B770FC", VA = "0x1B770FC")]
	public StoreUIItem()
	{
	}
}
[Token(Token = "0x20003D4")]
public class TutorialUIController
{
	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string CASUAL;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string ARCADE;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string SHOOTER;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string SELFIE;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string BRAKE;

	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string SLOMO;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float TIME;

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float WAIT;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float WAIT_CASUAL;

	[Token(Token = "0x4001B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float SPEED;

	[Token(Token = "0x4001B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float SLOW;

	[Token(Token = "0x6001972")]
	[Address(RVA = "0x1B77104", Offset = "0x1B77104", VA = "0x1B77104")]
	public static void RestartTutorial()
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0x1B77170", Offset = "0x1B77170", VA = "0x1B77170")]
	public static void StartTutorial()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0x1B777CC", Offset = "0x1B777CC", VA = "0x1B777CC")]
	public static void WhilePlayingTutorial()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0x1B77E80", Offset = "0x1B77E80", VA = "0x1B77E80")]
	public static void CloseTutorial()
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0x1B77F14", Offset = "0x1B77F14", VA = "0x1B77F14")]
	public static void StartArcadeTutorial()
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0x1B772E8", Offset = "0x1B772E8", VA = "0x1B772E8")]
	private static void CasualTutorial()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0x1B778A0", Offset = "0x1B778A0", VA = "0x1B778A0")]
	public static void SelfieTutorial()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0x1B77440", Offset = "0x1B77440", VA = "0x1B77440")]
	private static void ArcadeTutorial()
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0x1B77AAC", Offset = "0x1B77AAC", VA = "0x1B77AAC")]
	public static void BrakeTutorial()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0x1B77630", Offset = "0x1B77630", VA = "0x1B77630")]
	private static void ShooterTutorial()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x1B77CB8", Offset = "0x1B77CB8", VA = "0x1B77CB8")]
	public static void SloMoTutorial()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x1B77FD0", Offset = "0x1B77FD0", VA = "0x1B77FD0")]
	public TutorialUIController()
	{
	}
}
[Token(Token = "0x20003D5")]
public class CameraController : IController<CameraController>
{
	[Token(Token = "0x20003D6")]
	[CompilerGenerated]
	private sealed class <EnterLoaded>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraController <>4__this;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player player;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x1B7BA28", Offset = "0x1B7BA28", VA = "0x1B7BA28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x1B7BA70", Offset = "0x1B7BA70", VA = "0x1B7BA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1B78988", Offset = "0x1B78988", VA = "0x1B78988")]
		[DebuggerHidden]
		public <EnterLoaded>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x1B7B904", Offset = "0x1B7B904", VA = "0x1B7B904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1B7B908", Offset = "0x1B7B908", VA = "0x1B7B908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1B7BA30", Offset = "0x1B7BA30", VA = "0x1B7BA30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[CompilerGenerated]
	private sealed class <ExitLoaded>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateEnum NewState;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CameraController <>4__this;

		[Token(Token = "0x17000305")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x1B7BAEC", Offset = "0x1B7BAEC", VA = "0x1B7BAEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1B7BB34", Offset = "0x1B7BB34", VA = "0x1B7BB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1B78A34", Offset = "0x1B78A34", VA = "0x1B78A34")]
		[DebuggerHidden]
		public <ExitLoaded>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1B7BA78", Offset = "0x1B7BA78", VA = "0x1B7BA78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1B7BA7C", Offset = "0x1B7BA7C", VA = "0x1B7BA7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x1B7BAF4", Offset = "0x1B7BAF4", VA = "0x1B7BAF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[CompilerGenerated]
	private sealed class <EnterPlaying>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x1B7BB90", Offset = "0x1B7BB90", VA = "0x1B7BB90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x1B7BBD8", Offset = "0x1B7BBD8", VA = "0x1B7BBD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x1B78ABC", Offset = "0x1B78ABC", VA = "0x1B78ABC")]
		[DebuggerHidden]
		public <EnterPlaying>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x1B7BB3C", Offset = "0x1B7BB3C", VA = "0x1B7BB3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1B7BB40", Offset = "0x1B7BB40", VA = "0x1B7BB40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1B7BB98", Offset = "0x1B7BB98", VA = "0x1B7BB98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[CompilerGenerated]
	private sealed class <ExitPlaying>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateEnum NewState;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CameraController <>4__this;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x1B7BC54", Offset = "0x1B7BC54", VA = "0x1B7BC54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1B7BC9C", Offset = "0x1B7BC9C", VA = "0x1B7BC9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1B78B68", Offset = "0x1B78B68", VA = "0x1B78B68")]
		[DebuggerHidden]
		public <ExitPlaying>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1B7BBE0", Offset = "0x1B7BBE0", VA = "0x1B7BBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1B7BBE4", Offset = "0x1B7BBE4", VA = "0x1B7BBE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x1B7BC5C", Offset = "0x1B7BC5C", VA = "0x1B7BC5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color NewBlack;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int LastTiledMultiResLevel;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera MainCamera;

	[Token(Token = "0x4001B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TrackingSpace;

	[Token(Token = "0x4001B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform CenterEyeAnchor;

	[Token(Token = "0x4001B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.SpatialTracking.TrackedPoseDriver TrackedPoseDriver;

	[Token(Token = "0x4001B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera[] cameras;

	[Token(Token = "0x4001B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<XRInputSubsystem> s_inputSubsystems;

	[Token(Token = "0x4001B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XROrigin xrRig;

	[Token(Token = "0x4001B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform CameraRotationOffset;

	[Token(Token = "0x4001B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera oldPlayerCamera;

	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> InGameRemoveLayers;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<string> LobbyRemoveLayers;

	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FlareLayer flareLayer;

	[Token(Token = "0x17000300")]
	public Camera[] Cameras
	{
		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1B78144", Offset = "0x1B78144", VA = "0x1B78144")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000301")]
	public XROrigin XRRig
	{
		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1B78364", Offset = "0x1B78364", VA = "0x1B78364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000302")]
	public Transform CameraOffset
	{
		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1B7840C", Offset = "0x1B7840C", VA = "0x1B7840C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x1B781C8", Offset = "0x1B781C8", VA = "0x1B781C8")]
	public static XRInputSubsystem GetCurrentInputSubsystem()
	{
		return null;
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0x1B78430", Offset = "0x1B78430", VA = "0x1B78430")]
	private void Start()
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0x1B78538", Offset = "0x1B78538", VA = "0x1B78538")]
	public void DelayedStart()
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0x1B78860", Offset = "0x1B78860", VA = "0x1B78860")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0x1B788F8", Offset = "0x1B788F8", VA = "0x1B788F8", Slot = "6")]
	[IteratorStateMachine(typeof(<EnterLoaded>d__24))]
	public virtual IEnumerator EnterLoaded(Player player)
	{
		return null;
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0x1B789B0", Offset = "0x1B789B0", VA = "0x1B789B0", Slot = "7")]
	[IteratorStateMachine(typeof(<ExitLoaded>d__25))]
	public virtual IEnumerator ExitLoaded(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0x1B78A5C", Offset = "0x1B78A5C", VA = "0x1B78A5C", Slot = "8")]
	[IteratorStateMachine(typeof(<EnterPlaying>d__26))]
	public virtual IEnumerator EnterPlaying()
	{
		return null;
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x1B78AE4", Offset = "0x1B78AE4", VA = "0x1B78AE4", Slot = "9")]
	[IteratorStateMachine(typeof(<ExitPlaying>d__27))]
	public virtual IEnumerator ExitPlaying(GameStateEnum NewState)
	{
		return null;
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x1B78B90", Offset = "0x1B78B90", VA = "0x1B78B90")]
	private void Display_RecenteredPose()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x1B78B94", Offset = "0x1B78B94", VA = "0x1B78B94")]
	public void Recenter()
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x1B78CA4", Offset = "0x1B78CA4", VA = "0x1B78CA4")]
	protected void RecenterRotation(Transform objToRecenter)
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0x1B788DC", Offset = "0x1B788DC", VA = "0x1B788DC")]
	public void RecenterPosition()
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0x1B78DD4", Offset = "0x1B78DD4", VA = "0x1B78DD4")]
	protected void RecenterPosition(Transform objToRecenter)
	{
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0x1B78604", Offset = "0x1B78604", VA = "0x1B78604")]
	private void CreateCameraRotationOffset()
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0x1B78FA8", Offset = "0x1B78FA8", VA = "0x1B78FA8")]
	public void ResetDefaultGraphicsConfig()
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0x1B790F0", Offset = "0x1B790F0", VA = "0x1B790F0", Slot = "10")]
	public virtual void AdjustRenderScale(float renderScale)
	{
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0x1B7912C", Offset = "0x1B7912C", VA = "0x1B7912C", Slot = "11")]
	public virtual void AdjustQuality()
	{
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0x1B79030", Offset = "0x1B79030", VA = "0x1B79030")]
	public void ChangeTiledMultiResLevel(int level)
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0x1B7948C", Offset = "0x1B7948C", VA = "0x1B7948C")]
	public void ChangeParent(Transform tr)
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0x1B794F8", Offset = "0x1B794F8", VA = "0x1B794F8")]
	private void ReplicateToLeftAndRight()
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0x1B795E4", Offset = "0x1B795E4", VA = "0x1B795E4")]
	public void ConfigIntroductionCamera()
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0x1B7965C", Offset = "0x1B7965C", VA = "0x1B7965C")]
	public void ConfigInGameCamera()
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0x1B79D80", Offset = "0x1B79D80", VA = "0x1B79D80")]
	public void ConfigPauseCamera()
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0x1B7A134", Offset = "0x1B7A134", VA = "0x1B7A134")]
	public void ConfigLoadingCamera()
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0x1B7A358", Offset = "0x1B7A358", VA = "0x1B7A358")]
	public void ConfigPictureCamera(Camera camera, PictureTaker.PhotoType photoType)
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0x1B7A810", Offset = "0x1B7A810", VA = "0x1B7A810")]
	public void ConfigVRScreenshotCamera(Camera cameraCubemap)
	{
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0x1B7AB24", Offset = "0x1B7AB24", VA = "0x1B7AB24")]
	public void ConfigCrashVRScreenshotCamera(Camera cameraCubemap)
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0x1B7ACC8", Offset = "0x1B7ACC8", VA = "0x1B7ACC8")]
	public void ConfigFocusLostCamera()
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0x1B7AE18", Offset = "0x1B7AE18", VA = "0x1B7AE18")]
	public void ConfigFocusAcquiredCamera()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0x1B7AE8C", Offset = "0x1B7AE8C", VA = "0x1B7AE8C")]
	public void ConfigMultiplayerRaceLayer(bool showRemoteAvatar)
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0x1B7AFBC", Offset = "0x1B7AFBC", VA = "0x1B7AFBC")]
	public void ShowCursorLayer()
	{
	}

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0x1B7B108", Offset = "0x1B7B108", VA = "0x1B7B108")]
	public void HideCursorLayer()
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0x1B7B2A8", Offset = "0x1B7B2A8", VA = "0x1B7B2A8")]
	public void ClearCamera()
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0x1B79D04", Offset = "0x1B79D04", VA = "0x1B79D04")]
	public void SetCullingMask(int cullingMask)
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0x1B79C80", Offset = "0x1B79C80", VA = "0x1B79C80")]
	public void SetNearClipPlane(float near)
	{
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0x1B7A2D4", Offset = "0x1B7A2D4", VA = "0x1B7A2D4")]
	public void SetFarClipPlane(float far)
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0x1B7B324", Offset = "0x1B7B324", VA = "0x1B7B324")]
	public void SetStereoTargetEye(StereoTargetEyeMask targetEyeMask)
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0x1B7B3A0", Offset = "0x1B7B3A0", VA = "0x1B7B3A0")]
	public void SetFieldOfView(float fieldOfView)
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0x1B79B60", Offset = "0x1B79B60", VA = "0x1B79B60")]
	public void SetClearFlags(CameraClearFlags cameraClearFlags)
	{
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0x1B79BDC", Offset = "0x1B79BDC", VA = "0x1B79BDC")]
	public void SetBackgroundColor(Color color)
	{
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0x1B7B424", Offset = "0x1B7B424", VA = "0x1B7B424")]
	public CameraController()
	{
	}
}
[Token(Token = "0x20003DA")]
public enum UIGameStateEnum
{
	[Token(Token = "0x4001BA7")]
	NONE = 0,
	[Token(Token = "0x4001BA8")]
	MODE = 1,
	[Token(Token = "0x4001BA9")]
	SCENARIO = 2,
	[Token(Token = "0x4001BAA")]
	CART = 3,
	[Token(Token = "0x4001BAB")]
	WEAPON = 4,
	[Token(Token = "0x4001BAC")]
	PLAY = 5,
	[Token(Token = "0x4001BAD")]
	COMPANION_CHARACTER = 6,
	[Token(Token = "0x4001BAE")]
	SETTINGS = 8,
	[Token(Token = "0x4001BAF")]
	PHOTO_ALBUM = 9,
	[Token(Token = "0x4001BB0")]
	BUY = 10,
	[Token(Token = "0x4001BB1")]
	GAME_OVER = 11,
	[Token(Token = "0x4001BB2")]
	HIDDEN = 12,
	[Token(Token = "0x4001BB3")]
	PREMIUM_BUNDLE = 13,
	[Token(Token = "0x4001BB4")]
	AVATAR_EDITOR = 14,
	[Token(Token = "0x4001BB5")]
	NOTIFICATION = 16,
	[Token(Token = "0x4001BB6")]
	STORE = 17
}
[Token(Token = "0x20003DB")]
public class AvatarUIItem : MonoBehaviour
{
	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ID;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite AvatarImage;

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0x1B7BCA4", Offset = "0x1B7BCA4", VA = "0x1B7BCA4")]
	public AvatarUIItem()
	{
	}
}
[Token(Token = "0x20003DC")]
public class CartUI : MonoBehaviour
{
	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CartIdType CartType;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite CartImage;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private B4TGames.MenuObjects.Cart relatedCart;

	[Token(Token = "0x1700030B")]
	public B4TGames.MenuObjects.Cart RelatedCart
	{
		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1B7BCAC", Offset = "0x1B7BCAC", VA = "0x1B7BCAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x1B7BDA8", Offset = "0x1B7BDA8", VA = "0x1B7BDA8")]
	public CartUI()
	{
	}
}
[Token(Token = "0x20003DD")]
public class CompanionCharacterUI : MonoBehaviour
{
	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompanionCharacter.CompanionCharacterType CompanionCharacterType;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite CompanionCharacterImage;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CompanionCharacter relatedCompanionCharacter;

	[Token(Token = "0x1700030C")]
	public CompanionCharacter RelatedCompanionCharacter
	{
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1B7BDB0", Offset = "0x1B7BDB0", VA = "0x1B7BDB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x1B7BEAC", Offset = "0x1B7BEAC", VA = "0x1B7BEAC")]
	public CompanionCharacterUI()
	{
	}
}
[Token(Token = "0x20003DE")]
public class ScenarioUI : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3 MIN_SCALE;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 MAX_SCALE;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Color DISABLED_COLOR;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static Color ENABLED_COLOR;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static Color HIDE_COLOR;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RideType Ride;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform RectTransform;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button2 ScenarioButton;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image Image;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image LockerImage;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite SpriteOnPointerEnter;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite SpriteOnPointerClick;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite SpritePlay;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite Icon;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float SelectedWidth;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SelectedHeight;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI TitleText;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform TitleRectTransform;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float TitleWidth;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float TitleHeight;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TitleXPosition;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float TitleYPosition;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float initialWidth;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float initialHeight;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float initialTitleHeight;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float initialTitleWidth;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float initialTitleXPosition;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float initialTitleYPosition;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Scenario relatedScenario;

	[Token(Token = "0x1700030D")]
	public Sprite InitialSprite
	{
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x1B7BEB4", Offset = "0x1B7BEB4", VA = "0x1B7BEB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1B7BEBC", Offset = "0x1B7BEBC", VA = "0x1B7BEBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700030E")]
	public Scenario RelatedScenario
	{
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1B73FB0", Offset = "0x1B73FB0", VA = "0x1B73FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0x1B7BEC4", Offset = "0x1B7BEC4", VA = "0x1B7BEC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0x1B7BF64", Offset = "0x1B7BF64", VA = "0x1B7BF64", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0x1B7C0F8", Offset = "0x1B7C0F8", VA = "0x1B7C0F8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0x1B7C28C", Offset = "0x1B7C28C", VA = "0x1B7C28C", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0x1B7C32C", Offset = "0x1B7C32C", VA = "0x1B7C32C")]
	private void StarCoroutine(IEnumerator enumerator)
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0x1B73344", Offset = "0x1B73344", VA = "0x1B73344")]
	public void ZoomInFadeOut(float time)
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0x1B7C36C", Offset = "0x1B7C36C", VA = "0x1B7C36C")]
	public void ZoomInFadeOut()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0x1B7387C", Offset = "0x1B7387C", VA = "0x1B7387C")]
	public void ZoomOutFadeIn(float time)
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0x1B7C46C", Offset = "0x1B7C46C", VA = "0x1B7C46C")]
	public void Enable(bool enable, float time)
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0x1B7C8C8", Offset = "0x1B7C8C8", VA = "0x1B7C8C8")]
	private void OnLockerImageEnableScenario(Color color)
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0x1B7C8EC", Offset = "0x1B7C8EC", VA = "0x1B7C8EC")]
	private void OnImageEnableScenario(Color color)
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0x1B7C910", Offset = "0x1B7C910", VA = "0x1B7C910")]
	private void OnTitleTextEnableScenario(Color color)
	{
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0x1B7C934", Offset = "0x1B7C934", VA = "0x1B7C934")]
	private void ImageScale(Vector3 scale)
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0x1B7C984", Offset = "0x1B7C984", VA = "0x1B7C984")]
	public ScenarioUI()
	{
	}
}
[Token(Token = "0x20003DF")]
public class WeaponUI : MonoBehaviour
{
	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponType WeaponType;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite WeaponImage;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private B4TGames.MenuObjects.Weapon relatedWeapon;

	[Token(Token = "0x1700030F")]
	public B4TGames.MenuObjects.Weapon RelatedWeapon
	{
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1B7CA80", Offset = "0x1B7CA80", VA = "0x1B7CA80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0x1B7CB7C", Offset = "0x1B7CB7C", VA = "0x1B7CB7C")]
	public WeaponUI()
	{
	}
}
[Token(Token = "0x20003E0")]
public class UISideAnimation : MonoBehaviour
{
	[Token(Token = "0x20003E1")]
	[CompilerGenerated]
	private sealed class <Show>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doAnimation;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISideAnimation <>4__this;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float animationTime;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x1B7CEF0", Offset = "0x1B7CEF0", VA = "0x1B7CEF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x1B7CF38", Offset = "0x1B7CF38", VA = "0x1B7CF38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1B7CC1C", Offset = "0x1B7CC1C", VA = "0x1B7CC1C")]
		[DebuggerHidden]
		public <Show>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1B7CD74", Offset = "0x1B7CD74", VA = "0x1B7CD74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1B7CD78", Offset = "0x1B7CD78", VA = "0x1B7CD78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x1B7CEF8", Offset = "0x1B7CEF8", VA = "0x1B7CEF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[CompilerGenerated]
	private sealed class <Hide>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doAnimation;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISideAnimation <>4__this;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float animationTime;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x1B7D0BC", Offset = "0x1B7D0BC", VA = "0x1B7D0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1B7D104", Offset = "0x1B7D104", VA = "0x1B7D104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x1B7CCDC", Offset = "0x1B7CCDC", VA = "0x1B7CCDC")]
		[DebuggerHidden]
		public <Hide>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1B7CF40", Offset = "0x1B7CF40", VA = "0x1B7CF40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1B7CF44", Offset = "0x1B7CF44", VA = "0x1B7CF44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x1B7D0C4", Offset = "0x1B7D0C4", VA = "0x1B7D0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform Element;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform ShowedPosition;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform HiddenPosition;

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0x1B7CB84", Offset = "0x1B7CB84", VA = "0x1B7CB84")]
	[IteratorStateMachine(typeof(<Show>d__3))]
	public IEnumerator Show(bool doAnimation, float animationTime = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x1B7CC44", Offset = "0x1B7CC44", VA = "0x1B7CC44")]
	[IteratorStateMachine(typeof(<Hide>d__4))]
	public IEnumerator Hide(bool doAnimation, float animationTime = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0x1B7CD04", Offset = "0x1B7CD04", VA = "0x1B7CD04")]
	public void ShowWithoutAnimation()
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0x1B7CD38", Offset = "0x1B7CD38", VA = "0x1B7CD38")]
	public void HideWithoutAnimation()
	{
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0x1B7CD6C", Offset = "0x1B7CD6C", VA = "0x1B7CD6C")]
	public UISideAnimation()
	{
	}
}
[Token(Token = "0x20003E3")]
public class UIStateMachine : IController<UIStateMachine>
{
	[Token(Token = "0x20003E4")]
	[CompilerGenerated]
	private sealed class <CreateUI>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x1700031C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x1B80290", Offset = "0x1B80290", VA = "0x1B80290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x1B802D8", Offset = "0x1B802D8", VA = "0x1B802D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x1B7E28C", Offset = "0x1B7E28C", VA = "0x1B7E28C")]
		[DebuggerHidden]
		public <CreateUI>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x1B7FEEC", Offset = "0x1B7FEEC", VA = "0x1B7FEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x1B7FEF0", Offset = "0x1B7FEF0", VA = "0x1B7FEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x1B80298", Offset = "0x1B80298", VA = "0x1B80298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E5")]
	[CompilerGenerated]
	private sealed class <DestroyUI>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x1700031E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1B8046C", Offset = "0x1B8046C", VA = "0x1B8046C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x1B804B4", Offset = "0x1B804B4", VA = "0x1B804B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x1B7E328", Offset = "0x1B7E328", VA = "0x1B7E328")]
		[DebuggerHidden]
		public <DestroyUI>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1B802E0", Offset = "0x1B802E0", VA = "0x1B802E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1B802E4", Offset = "0x1B802E4", VA = "0x1B802E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x1B80474", Offset = "0x1B80474", VA = "0x1B80474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E6")]
	[CompilerGenerated]
	private sealed class <CreateGameMenu>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x17000320")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x1B806E8", Offset = "0x1B806E8", VA = "0x1B806E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0x1B80730", Offset = "0x1B80730", VA = "0x1B80730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x1B7E800", Offset = "0x1B7E800", VA = "0x1B7E800")]
		[DebuggerHidden]
		public <CreateGameMenu>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x1B804BC", Offset = "0x1B804BC", VA = "0x1B804BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x1B804C0", Offset = "0x1B804C0", VA = "0x1B804C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x1B806F0", Offset = "0x1B806F0", VA = "0x1B806F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E7")]
	[CompilerGenerated]
	private sealed class <CreateGameOver>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x17000322")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x1B80910", Offset = "0x1B80910", VA = "0x1B80910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x1B80958", Offset = "0x1B80958", VA = "0x1B80958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x1B7E89C", Offset = "0x1B7E89C", VA = "0x1B7E89C")]
		[DebuggerHidden]
		public <CreateGameOver>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1B80738", Offset = "0x1B80738", VA = "0x1B80738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x1B8073C", Offset = "0x1B8073C", VA = "0x1B8073C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x1B80918", Offset = "0x1B80918", VA = "0x1B80918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E8")]
	[CompilerGenerated]
	private sealed class <CreateMessageBox>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x17000324")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x1B80B90", Offset = "0x1B80B90", VA = "0x1B80B90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x1B80BD8", Offset = "0x1B80BD8", VA = "0x1B80BD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1B7E938", Offset = "0x1B7E938", VA = "0x1B7E938")]
		[DebuggerHidden]
		public <CreateMessageBox>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1B80960", Offset = "0x1B80960", VA = "0x1B80960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1B80964", Offset = "0x1B80964", VA = "0x1B80964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x1B80B98", Offset = "0x1B80B98", VA = "0x1B80B98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E9")]
	[CompilerGenerated]
	private sealed class <CreateQuickMessage>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x17000326")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x1B80E04", Offset = "0x1B80E04", VA = "0x1B80E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x1B80E4C", Offset = "0x1B80E4C", VA = "0x1B80E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1B7E9D4", Offset = "0x1B7E9D4", VA = "0x1B7E9D4")]
		[DebuggerHidden]
		public <CreateQuickMessage>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1B80BE0", Offset = "0x1B80BE0", VA = "0x1B80BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1B80BE4", Offset = "0x1B80BE4", VA = "0x1B80BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1B80E0C", Offset = "0x1B80E0C", VA = "0x1B80E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EA")]
	[CompilerGenerated]
	private sealed class <CreateKeyboard>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<GameObject> <async>5__2;

		[Token(Token = "0x17000328")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x1B80FA8", Offset = "0x1B80FA8", VA = "0x1B80FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x1B80FF0", Offset = "0x1B80FF0", VA = "0x1B80FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x1B7EBB0", Offset = "0x1B7EBB0", VA = "0x1B7EBB0")]
		[DebuggerHidden]
		public <CreateKeyboard>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1B80E54", Offset = "0x1B80E54", VA = "0x1B80E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1B80E58", Offset = "0x1B80E58", VA = "0x1B80E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1B80FB0", Offset = "0x1B80FB0", VA = "0x1B80FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EB")]
	[CompilerGenerated]
	private sealed class <ChangeStateQueue>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIGameStateEnum uiGameState;

		[Token(Token = "0x1700032A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x1B81088", Offset = "0x1B81088", VA = "0x1B81088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x1B810D0", Offset = "0x1B810D0", VA = "0x1B810D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1B7EF0C", Offset = "0x1B7EF0C", VA = "0x1B7EF0C")]
		[DebuggerHidden]
		public <ChangeStateQueue>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x1B80FF8", Offset = "0x1B80FF8", VA = "0x1B80FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1B80FFC", Offset = "0x1B80FFC", VA = "0x1B80FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x1B81090", Offset = "0x1B81090", VA = "0x1B81090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EC")]
	[CompilerGenerated]
	private sealed class <ChangeStateCoroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIGameStateEnum uiGameState;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UIGameStateEnum <oldState>5__2;

		[Token(Token = "0x1700032C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x1B81498", Offset = "0x1B81498", VA = "0x1B81498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x1B814E0", Offset = "0x1B814E0", VA = "0x1B814E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x1B7EFB8", Offset = "0x1B7EFB8", VA = "0x1B7EFB8")]
		[DebuggerHidden]
		public <ChangeStateCoroutine>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x1B810D8", Offset = "0x1B810D8", VA = "0x1B810D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1B810DC", Offset = "0x1B810DC", VA = "0x1B810DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1B814A0", Offset = "0x1B814A0", VA = "0x1B814A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003ED")]
	[CompilerGenerated]
	private sealed class <EnterNewState>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIGameStateEnum uiGameState;

		[Token(Token = "0x1700032E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0x1B82470", Offset = "0x1B82470", VA = "0x1B82470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x1B824B8", Offset = "0x1B824B8", VA = "0x1B824B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1B7F280", Offset = "0x1B7F280", VA = "0x1B7F280")]
		[DebuggerHidden]
		public <EnterNewState>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x1B814E8", Offset = "0x1B814E8", VA = "0x1B814E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x1B814EC", Offset = "0x1B814EC", VA = "0x1B814EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x1B82478", Offset = "0x1B82478", VA = "0x1B82478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EE")]
	[CompilerGenerated]
	private sealed class <ExitOldState>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIGameStateEnum uiGameState;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x1B82B04", Offset = "0x1B82B04", VA = "0x1B82B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1B82B4C", Offset = "0x1B82B4C", VA = "0x1B82B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x1B7F3D8", Offset = "0x1B7F3D8", VA = "0x1B7F3D8")]
		[DebuggerHidden]
		public <ExitOldState>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1B824C0", Offset = "0x1B824C0", VA = "0x1B824C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x1B824C4", Offset = "0x1B824C4", VA = "0x1B824C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x1B82B0C", Offset = "0x1B82B0C", VA = "0x1B82B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EF")]
	[CompilerGenerated]
	private sealed class <HideAll>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x17000332")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x1B83180", Offset = "0x1B83180", VA = "0x1B83180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x1B831C8", Offset = "0x1B831C8", VA = "0x1B831C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1B7FC3C", Offset = "0x1B7FC3C", VA = "0x1B7FC3C")]
		[DebuggerHidden]
		public <HideAll>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1B82B54", Offset = "0x1B82B54", VA = "0x1B82B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1B82B58", Offset = "0x1B82B58", VA = "0x1B82B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x1B83188", Offset = "0x1B83188", VA = "0x1B83188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F0")]
	[CompilerGenerated]
	private sealed class <NewPlayerJoinedCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIStateMachine <>4__this;

		[Token(Token = "0x17000334")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x1B832A8", Offset = "0x1B832A8", VA = "0x1B832A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x1B832F0", Offset = "0x1B832F0", VA = "0x1B832F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x1B7FD80", Offset = "0x1B7FD80", VA = "0x1B7FD80")]
		[DebuggerHidden]
		public <NewPlayerJoinedCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1B831D0", Offset = "0x1B831D0", VA = "0x1B831D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x1B831D4", Offset = "0x1B831D4", VA = "0x1B831D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x1B832B0", Offset = "0x1B832B0", VA = "0x1B832B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float MENU_DEPTH;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference GameMenu;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference RotoVRMenu;

	[Token(Token = "0x4001BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference GameOver;

	[Token(Token = "0x4001BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference MessageBox;

	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetReference QuickMessage;

	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AssetReference Keyboard;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SafetyEvent OnHideUI;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentGameMenu;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject currentGameOver;

	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentMessageBox;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentDroneInterface;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject currentQuickMessage;

	[Token(Token = "0x4001BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentKeyboard;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _alreadyRecenter;

	[Token(Token = "0x4001BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UIGameStateEnum lastState;

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool AlreadyCreatedUIOnce;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	[HideInInspector]
	public bool IsFirstTimeOnMenu;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	private bool showingFromMultiplayer;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine queue;

	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject eventSystem;

	[Token(Token = "0x17000314")]
	public UIGameStateEnum CurrentState
	{
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1B7D10C", Offset = "0x1B7D10C", VA = "0x1B7D10C")]
		[CompilerGenerated]
		get
		{
			return default(UIGameStateEnum);
		}
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1B7D114", Offset = "0x1B7D114", VA = "0x1B7D114")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000315")]
	public UIGameStateEnum LastState
	{
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1B7D11C", Offset = "0x1B7D11C", VA = "0x1B7D11C")]
		get
		{
			return default(UIGameStateEnum);
		}
		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1B7D45C", Offset = "0x1B7D45C", VA = "0x1B7D45C")]
		set
		{
		}
	}

	[Token(Token = "0x17000316")]
	public bool InTransition
	{
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1B7D464", Offset = "0x1B7D464", VA = "0x1B7D464")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1B7D46C", Offset = "0x1B7D46C", VA = "0x1B7D46C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000317")]
	[HideInInspector]
	public bool ShowingFromMultiplayer
	{
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x1B7D478", Offset = "0x1B7D478", VA = "0x1B7D478")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x1B7D480", Offset = "0x1B7D480", VA = "0x1B7D480")]
		set
		{
		}
	}

	[Token(Token = "0x17000318")]
	public bool ShowingFromGameOver
	{
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1B7D48C", Offset = "0x1B7D48C", VA = "0x1B7D48C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000319")]
	private GameObject EventSystem
	{
		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1B7D55C", Offset = "0x1B7D55C", VA = "0x1B7D55C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700031A")]
	public static bool UISelectEnabled
	{
		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x1B7FDA8", Offset = "0x1B7FDA8", VA = "0x1B7FDA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700031B")]
	public GameObject CurrentGameOver
	{
		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x1B7FE4C", Offset = "0x1B7FE4C", VA = "0x1B7FE4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x1B7D5F8", Offset = "0x1B7D5F8", VA = "0x1B7D5F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0x1B7D6B8", Offset = "0x1B7D6B8", VA = "0x1B7D6B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0x1B7D81C", Offset = "0x1B7D81C", VA = "0x1B7D81C")]
	public void Update()
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0x1B7DAC0", Offset = "0x1B7DAC0", VA = "0x1B7DAC0")]
	public void ParentUIsOnPlayer()
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0x1B7E1E0", Offset = "0x1B7E1E0", VA = "0x1B7E1E0")]
	public void UnParentUIs()
	{
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0x1B7E218", Offset = "0x1B7E218", VA = "0x1B7E218")]
	[IteratorStateMachine(typeof(<CreateUI>d__44))]
	public IEnumerator CreateUI()
	{
		return null;
	}

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0x1B7E2B4", Offset = "0x1B7E2B4", VA = "0x1B7E2B4")]
	[IteratorStateMachine(typeof(<DestroyUI>d__45))]
	public IEnumerator DestroyUI()
	{
		return null;
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0x1B7E350", Offset = "0x1B7E350", VA = "0x1B7E350")]
	public bool IsMainMenuVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0x1B7E3F0", Offset = "0x1B7E3F0", VA = "0x1B7E3F0")]
	public bool IsGameOverVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0x1B7D148", Offset = "0x1B7D148", VA = "0x1B7D148")]
	public bool IsAllowedLastState(UIGameStateEnum lastState)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0x1B7D90C", Offset = "0x1B7D90C", VA = "0x1B7D90C")]
	public bool IsAnyClickableObjectAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0x1B7E478", Offset = "0x1B7E478", VA = "0x1B7E478")]
	public bool IsAnyInterfaceVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0x1B7D298", Offset = "0x1B7D298", VA = "0x1B7D298")]
	public UIGameStateEnum GetAllowedLastState()
	{
		return default(UIGameStateEnum);
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0x1B7E78C", Offset = "0x1B7E78C", VA = "0x1B7E78C")]
	[IteratorStateMachine(typeof(<CreateGameMenu>d__52))]
	private IEnumerator CreateGameMenu()
	{
		return null;
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0x1B7DAF8", Offset = "0x1B7DAF8", VA = "0x1B7DAF8")]
	private void UpdateGameMenuPosition(bool parentOnPlayer = true)
	{
	}

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0x1B7E828", Offset = "0x1B7E828", VA = "0x1B7E828")]
	[IteratorStateMachine(typeof(<CreateGameOver>d__54))]
	private IEnumerator CreateGameOver()
	{
		return null;
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0x1B7DCDC", Offset = "0x1B7DCDC", VA = "0x1B7DCDC")]
	private void UpdateGameOverPosition(bool parentOnPlayer = true)
	{
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0x1B7E8C4", Offset = "0x1B7E8C4", VA = "0x1B7E8C4")]
	[IteratorStateMachine(typeof(<CreateMessageBox>d__56))]
	private IEnumerator CreateMessageBox(bool parentOnPlayer = true)
	{
		return null;
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0x1B7DE10", Offset = "0x1B7DE10", VA = "0x1B7DE10")]
	private void UpdateMessageBoxPosition(bool parentOnPlayer = true)
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0x1B7E960", Offset = "0x1B7E960", VA = "0x1B7E960")]
	[IteratorStateMachine(typeof(<CreateQuickMessage>d__58))]
	private IEnumerator CreateQuickMessage()
	{
		return null;
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0x1B7E9FC", Offset = "0x1B7E9FC", VA = "0x1B7E9FC")]
	private void UpdateQuickMessagePosition(bool parentOnPlayer = true)
	{
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0x1B7EB3C", Offset = "0x1B7EB3C", VA = "0x1B7EB3C")]
	[IteratorStateMachine(typeof(<CreateKeyboard>d__60))]
	private IEnumerator CreateKeyboard()
	{
		return null;
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0x1B7DFF0", Offset = "0x1B7DFF0", VA = "0x1B7DFF0")]
	private void UpdateKeyboardPosition(bool parentOnPlayer = true)
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0x1B7EBD8", Offset = "0x1B7EBD8", VA = "0x1B7EBD8")]
	public void HideQuickMessage()
	{
	}

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x1B7EC04", Offset = "0x1B7EC04", VA = "0x1B7EC04")]
	public void ChangeState(UIGameStateEnum uiGameState)
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x1B7EE88", Offset = "0x1B7EE88", VA = "0x1B7EE88")]
	[IteratorStateMachine(typeof(<ChangeStateQueue>d__64))]
	private IEnumerator ChangeStateQueue(UIGameStateEnum uiGameState)
	{
		return null;
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x1B7EF34", Offset = "0x1B7EF34", VA = "0x1B7EF34")]
	[IteratorStateMachine(typeof(<ChangeStateCoroutine>d__65))]
	private IEnumerator ChangeStateCoroutine(UIGameStateEnum uiGameState)
	{
		return null;
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x1B7EFE0", Offset = "0x1B7EFE0", VA = "0x1B7EFE0")]
	public bool LobbyButtonAllowed(UIGameStateEnum uiGameState)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x1B7F0B4", Offset = "0x1B7F0B4", VA = "0x1B7F0B4")]
	public void ShowFromDeeplink()
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x1B7F1FC", Offset = "0x1B7F1FC", VA = "0x1B7F1FC")]
	[IteratorStateMachine(typeof(<EnterNewState>d__68))]
	private IEnumerator EnterNewState(UIGameStateEnum uiGameState)
	{
		return null;
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x1B7F2A8", Offset = "0x1B7F2A8", VA = "0x1B7F2A8")]
	private void PlaySoundOnChangeToStep(UIGameStateEnum step)
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x1B7F354", Offset = "0x1B7F354", VA = "0x1B7F354")]
	[IteratorStateMachine(typeof(<ExitOldState>d__70))]
	private IEnumerator ExitOldState(UIGameStateEnum uiGameState)
	{
		return null;
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x1B7F400", Offset = "0x1B7F400", VA = "0x1B7F400")]
	public void NextState()
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x1B7F630", Offset = "0x1B7F630", VA = "0x1B7F630")]
	public void PreviousState()
	{
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x1B7F798", Offset = "0x1B7F798", VA = "0x1B7F798")]
	private void UpdateStepsInText()
	{
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x1B7EC7C", Offset = "0x1B7EC7C", VA = "0x1B7EC7C")]
	private bool IsAllAllowedToPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0x1B7F85C", Offset = "0x1B7F85C", VA = "0x1B7F85C")]
	public void PlayGame()
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x1B7FAE4", Offset = "0x1B7FAE4", VA = "0x1B7FAE4")]
	public void UpdateAfterBuy()
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x1B7FBC8", Offset = "0x1B7FBC8", VA = "0x1B7FBC8")]
	[IteratorStateMachine(typeof(<HideAll>d__77))]
	private IEnumerator HideAll()
	{
		return null;
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x1B7FC64", Offset = "0x1B7FC64", VA = "0x1B7FC64")]
	private void OnMenuButton_Clicked()
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x1B7FCEC", Offset = "0x1B7FCEC", VA = "0x1B7FCEC")]
	private void OnNewPlayerJoined()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x1B7FD0C", Offset = "0x1B7FD0C", VA = "0x1B7FD0C")]
	[IteratorStateMachine(typeof(<NewPlayerJoinedCoroutine>d__80))]
	private IEnumerator NewPlayerJoinedCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x1B7FE54", Offset = "0x1B7FE54", VA = "0x1B7FE54")]
	public UIStateMachine()
	{
	}
}
[Token(Token = "0x20003F1")]
public class WeaponUIController : IController<WeaponUIController>
{
	[Token(Token = "0x20003F2")]
	[CompilerGenerated]
	private sealed class <Show>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponUIController <>4__this;

		[Token(Token = "0x17000338")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x1B8490C", Offset = "0x1B8490C", VA = "0x1B8490C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x1B84954", Offset = "0x1B84954", VA = "0x1B84954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1B8341C", Offset = "0x1B8341C", VA = "0x1B8341C")]
		[DebuggerHidden]
		public <Show>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1B844E0", Offset = "0x1B844E0", VA = "0x1B844E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1B844E4", Offset = "0x1B844E4", VA = "0x1B844E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1B84914", Offset = "0x1B84914", VA = "0x1B84914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F3")]
	[CompilerGenerated]
	private sealed class <Hide>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponUIController <>4__this;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x1700033A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x1B84D48", Offset = "0x1B84D48", VA = "0x1B84D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x1B84D90", Offset = "0x1B84D90", VA = "0x1B84D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1B83444", Offset = "0x1B83444", VA = "0x1B83444")]
		[DebuggerHidden]
		public <Hide>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x1B8495C", Offset = "0x1B8495C", VA = "0x1B8495C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1B84960", Offset = "0x1B84960", VA = "0x1B84960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1B84D50", Offset = "0x1B84D50", VA = "0x1B84D50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	[CompilerGenerated]
	private sealed class <ChangeScenarioIcon>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponUIController <>4__this;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x1B8502C", Offset = "0x1B8502C", VA = "0x1B8502C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x1B85074", Offset = "0x1B85074", VA = "0x1B85074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x1B836B4", Offset = "0x1B836B4", VA = "0x1B836B4")]
		[DebuggerHidden]
		public <ChangeScenarioIcon>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x1B84DBC", Offset = "0x1B84DBC", VA = "0x1B84DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1B84DC0", Offset = "0x1B84DC0", VA = "0x1B84DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1B85034", Offset = "0x1B85034", VA = "0x1B85034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ANIMATION_TIME;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Color MAX_COLOR;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Color MIN_COLOR;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Color MAX_COLOR_MIDDLE;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas WeaponCanvas;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup WeaponCanvasGroup;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponUI[] WeaponsUI;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpinningAnimation SpinningAnimation;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI WeaponName;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI FireRangeProgressLabel;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ProgressBarAnimator FireRangeProgressBarAnimator;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI FireRateProgressLabel;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ProgressBarAnimator FireRateProgressBarAnimator;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image ScenarioIcon;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image LockerIcon;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI BuyLabel;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button2 NextButton;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button2 BuyButton;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentIndex;

	[Token(Token = "0x4001C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector2 thumbstick;

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BaseRaycaster graphicRaycaster;

	[Token(Token = "0x17000336")]
	public B4TGames.MenuObjects.Weapon CurrentWeapon
	{
		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x1B7E6FC", Offset = "0x1B7E6FC", VA = "0x1B7E6FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000337")]
	private BaseRaycaster GraphicRaycaster
	{
		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1B832F8", Offset = "0x1B832F8", VA = "0x1B832F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0x1B833B4", Offset = "0x1B833B4", VA = "0x1B833B4")]
	public static string TITLE()
	{
		return null;
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0x1B823FC", Offset = "0x1B823FC", VA = "0x1B823FC")]
	[IteratorStateMachine(typeof(<Show>d__26))]
	public IEnumerator Show()
	{
		return null;
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x1B82A7C", Offset = "0x1B82A7C", VA = "0x1B82A7C")]
	[IteratorStateMachine(typeof(<Hide>d__27))]
	public IEnumerator Hide(bool animate = false)
	{
		return null;
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0x1B8346C", Offset = "0x1B8346C", VA = "0x1B8346C")]
	private void Fade(Image image, Color initial, Color final)
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0x1B83640", Offset = "0x1B83640", VA = "0x1B83640")]
	[IteratorStateMachine(typeof(<ChangeScenarioIcon>d__29))]
	private IEnumerator ChangeScenarioIcon()
	{
		return null;
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0x1B836DC", Offset = "0x1B836DC", VA = "0x1B836DC")]
	public void Previous_OnClick()
	{
	}

	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0x1B83D88", Offset = "0x1B83D88", VA = "0x1B83D88")]
	public void Next_OnClick()
	{
	}

	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0x1B83E54", Offset = "0x1B83E54", VA = "0x1B83E54")]
	private void ChangeSpinningAnimation()
	{
	}

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0x1B83794", Offset = "0x1B83794", VA = "0x1B83794")]
	private void UpdateCurrentWeaponDescription()
	{
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x1B83F94", Offset = "0x1B83F94", VA = "0x1B83F94")]
	private void ToggleWeaponInfos(bool show)
	{
	}

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0x1B84030", Offset = "0x1B84030", VA = "0x1B84030")]
	private void GetCurrentIndex()
	{
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0x1B7F79C", Offset = "0x1B7F79C", VA = "0x1B7F79C")]
	public bool IsCurrentWeaponAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0x1B84190", Offset = "0x1B84190", VA = "0x1B84190")]
	public Sprite GetSprite(WeaponType weaponType)
	{
		return null;
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0x1B84364", Offset = "0x1B84364", VA = "0x1B84364")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0x1B8436C", Offset = "0x1B8436C", VA = "0x1B8436C")]
	public string GetCurrentWeaponName()
	{
		return null;
	}

	[Token(Token = "0x6001A85")]
	[Address(RVA = "0x1B84418", Offset = "0x1B84418", VA = "0x1B84418")]
	public WeaponUIController()
	{
	}
}
[Token(Token = "0x20003F8")]
public class AreaSwipeDetection : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ThumbstickDeadZone;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnSwipeLeft;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnSwipeRight;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSwipeUp;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSwipeDown;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 savedDelta;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSelected;

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x1B85130", Offset = "0x1B85130", VA = "0x1B85130")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x1B853F4", Offset = "0x1B853F4", VA = "0x1B853F4")]
	public void SwipeLeft()
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x1B853E0", Offset = "0x1B853E0", VA = "0x1B853E0")]
	public void SwipeRight()
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x1B85408", Offset = "0x1B85408", VA = "0x1B85408")]
	public void SwipeUp()
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x1B8541C", Offset = "0x1B8541C", VA = "0x1B8541C")]
	public void SwipeDown()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x1B85430", Offset = "0x1B85430", VA = "0x1B85430", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x1B8543C", Offset = "0x1B8543C", VA = "0x1B8543C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x1B85444", Offset = "0x1B85444", VA = "0x1B85444")]
	public AreaSwipeDetection()
	{
	}
}
[Token(Token = "0x20003F9")]
public class BakeTextures : MonoBehaviour
{
	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialPropertyBlock materialProps;

	[Token(Token = "0x4001C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int color1RShaderID;

	[Token(Token = "0x4001C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int color2GShaderID;

	[Token(Token = "0x4001C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int color3BShaderID;

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int color4AShaderID;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Color Color1R;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Color Color2G;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Color Color3B;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Color Color4A;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("On Builds this is always Enabled")]
	[Space(5f)]
	public bool UseBakedTexture;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("[Editor, just for Reference]")]
	[Space(15f)]
	public Texture2D[] BakedTextures;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material[] materialsToBake;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool alreadyAppliedBakedTexture;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material[] materialsBackup;

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x1B8549C", Offset = "0x1B8549C", VA = "0x1B8549C")]
	public MaterialPropertyBlock GetMaterialProps()
	{
		return null;
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x1B85514", Offset = "0x1B85514", VA = "0x1B85514")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x1B855E0", Offset = "0x1B855E0", VA = "0x1B855E0")]
	public void ApplyBakedTexture()
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x1B85C78", Offset = "0x1B85C78", VA = "0x1B85C78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x1B85D2C", Offset = "0x1B85D2C", VA = "0x1B85D2C")]
	[ContextMenu("Bake Material")]
	public void ConfigAndBakeTexture()
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x1B868F0", Offset = "0x1B868F0", VA = "0x1B868F0")]
	public void SetMaterials(Material[] materials)
	{
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x1B86000", Offset = "0x1B86000", VA = "0x1B86000")]
	public void SetColors(Color color1R, Color color2G, Color color3B, Color color4A)
	{
	}

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x1B8601C", Offset = "0x1B8601C", VA = "0x1B8601C")]
	public void BakeTexture()
	{
	}

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x1B868F8", Offset = "0x1B868F8", VA = "0x1B868F8")]
	public BakeTextures()
	{
	}
}
[Token(Token = "0x20003FB")]
public static class CameraUtils
{
	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x1BAF02C", Offset = "0x1BAF02C", VA = "0x1BAF02C")]
	public static void Copy(Camera from, Camera to)
	{
	}
}
[Token(Token = "0x20003FC")]
public static class Converter
{
	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x1BAF2E0", Offset = "0x1BAF2E0", VA = "0x1BAF2E0")]
	public static float KmphToMph(float kmph)
	{
		return default(float);
	}

	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x1BAF2F0", Offset = "0x1BAF2F0", VA = "0x1BAF2F0")]
	public static float MphTOKmph(float mph)
	{
		return default(float);
	}
}
[Token(Token = "0x20003FD")]
public static class ExtensionMethods
{
	[Token(Token = "0x20003FE")]
	public class GameObjectDeactivateSection : IDisposable
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject go;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool oldState;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1BAF364", Offset = "0x1BAF364", VA = "0x1BAF364")]
		public GameObjectDeactivateSection(GameObject aGo)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x1BAF680", Offset = "0x1BAF680", VA = "0x1BAF680", Slot = "4")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x1BAF300", Offset = "0x1BAF300", VA = "0x1BAF300")]
	public static void ReplaceMaterials(this IReplaceMaterials i, Renderer[] renderers, Material[] fromMaterials, Material[] toMaterials)
	{
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x1BAF304", Offset = "0x1BAF304", VA = "0x1BAF304")]
	public static IDisposable Deactivate(this GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x1BAF3CC", Offset = "0x1BAF3CC", VA = "0x1BAF3CC")]
	public static void ChangeLayer(this GameObject obj, int newLayer)
	{
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x1BAF4E0", Offset = "0x1BAF4E0", VA = "0x1BAF4E0")]
	public static void ChangeMaterialsShader(this GameObject obj, Shader newShader, int newRenderQueue)
	{
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x1BAF5CC", Offset = "0x1BAF5CC", VA = "0x1BAF5CC")]
	public static void ChangeMaterialsRenderQueue(this GameObject obj, int newRenderQueue)
	{
	}
}
[Token(Token = "0x20003FF")]
public static class GameConfiguration
{
	[Token(Token = "0x2000400")]
	public class SettingsCollection
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Setting[] info;

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1BB24B8", Offset = "0x1BB24B8", VA = "0x1BB24B8")]
		public SettingsCollection()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000401")]
	public class Setting
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ID;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Allowed;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Value;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EnumValue;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool IsNewConfiguration;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1BB24C0", Offset = "0x1BB24C0", VA = "0x1BB24C0")]
		public Setting()
		{
		}
	}

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string SOUND_TRACK_VOLUME;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string RC_CHAINS_VOLUME;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string SHOW_SHADOW;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string SHOW_TUTORIAL;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string HAVE_SEEN_CASUAL_TUTORIAL;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string HAVE_SEEN_RACE_TUTORIAL;

	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string HAVE_SEEN_SHOOTER_TUTORIAL;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string SHOW_HUD;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string RENDER_SCALE_VALUE;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AUTO_EYE_LEVEL;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string HELMET_TYPE;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string ALREADY_PLAYED_GAME;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string DEFAULT_QUALITY;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string DEFAULT_FREQUENCY;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string LAST_VERSION;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string PLAYED_INTRODUCTION;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string SHOW_CROSSHAIR;

	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string SHOW_CROSSHAIR_TUTORIAL;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string SHOW_SELFIESTICK_TUTORIAL;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string CAMERA_SMOOTHING;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string SHOW_LASER_SIGHT;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string ENABLE_BHAPTICS;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string ALLOW_HAPTICS_FEEDBACK;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string AVATAR_ID;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string RECOIL_ON_VEST;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string ENABLE_3DOF;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static bool Is3DOFEnabled;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public static int TOTAL_CONFIGURATIONS;

	[Token(Token = "0x4001C8F")]
	private const string TELEMETRY_IP_ADDRESS_YAW = "TELEMETRY_IP_ADDRESS_YAW";

	[Token(Token = "0x4001C90")]
	private const string TELEMETRY_TCP_PORT_YAW = "TELEMETRY_TCP_PORT_YAW";

	[Token(Token = "0x4001C91")]
	private const string TELEMETRY_UDP_PORT_YAW = "TELEMETRY_UDP_PORT_YAW";

	[Token(Token = "0x4001C92")]
	private const string YAWVR_AUTO_START_STOP_SIMULATOR = "YAWVR_AUTO_START_STOP_SIMULATOR";

	[Token(Token = "0x4001C93")]
	private const string YAWVR_AUTO_PARK_SIMULATOR = "YAWVR_AUTO_PARK_SIMULATOR";

	[Token(Token = "0x4001C94")]
	private const string YAWVR_DEVICE_TYPE = "YAWVR_AUTO_PARK_SIMULATOR";

	[Token(Token = "0x4001C95")]
	private const string TELEMETRY_IP_ADDRESS = "TELEMETRY_IP_ADDRESS";

	[Token(Token = "0x4001C96")]
	private const string TELEMETRY_UDP_PORT = "TELEMETRY_UDP_PORT";

	[Token(Token = "0x4001C97")]
	private const string SRS_IP_ADDRESS = "SRS_IP_ADDRESS";

	[Token(Token = "0x4001C98")]
	private const string SRS_UDP_PORT = "SRS_UDP_PORT";

	[Token(Token = "0x4001C99")]
	private const string ENABLE_VR_ARCADE_MODE = "ENABLE_VR_ARCADE_MODE";

	[Token(Token = "0x4001C9A")]
	private const string REMOTE_CONTROL_IP_ADDRESS = "REMOTE_CONTROL_IP_ADDRESS";

	[Token(Token = "0x4001C9B")]
	private const string REMOTE_CONTROL_TCP_PORT = "REMOTE_CONTROL_TCP_PORT";

	[Token(Token = "0x4001C9C")]
	public const string REMOTE_PLAYER_TIME_WIN = "REMOTE_PLAYER_TIME_WIN";

	[Token(Token = "0x4001C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static float RESOLUTION_SCALE;

	[Token(Token = "0x4001C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public static int TotalPlays;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string FileName;

	[Token(Token = "0x4001CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static SettingsCollection Settings;

	[Token(Token = "0x4001CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static string TARGETS_HIT;

	[Token(Token = "0x4001CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static string HITTING_STREAK;

	[Token(Token = "0x4001CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static string TIMES_RIDDEN;

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static string TOTAL_TIME;

	[Token(Token = "0x1700033E")]
	public static bool HasTelemetry
	{
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x1BAF884", Offset = "0x1BAF884", VA = "0x1BAF884")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700033F")]
	public static bool HasBHaptics
	{
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x1BAF88C", Offset = "0x1BAF88C", VA = "0x1BAF88C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000340")]
	public static bool IsPlayingFromMenu
	{
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x1BAF8B4", Offset = "0x1BAF8B4", VA = "0x1BAF8B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000341")]
	public static bool IsChristmas
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1BAF92C", Offset = "0x1BAF92C", VA = "0x1BAF92C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000342")]
	public static string FileNameComplete
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x1BB2224", Offset = "0x1BB2224", VA = "0x1BB2224")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400002C")]
	public static event Action<Helmet.HelmetType> OnHelmetTypeChanged
	{
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x1BAF6A4", Offset = "0x1BAF6A4", VA = "0x1BAF6A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1BAF794", Offset = "0x1BAF794", VA = "0x1BAF794")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x1BAF934", Offset = "0x1BAF934", VA = "0x1BAF934")]
	public static bool IsPlayingTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x1BAFB58", Offset = "0x1BAFB58", VA = "0x1BAFB58")]
	public static bool IsHMDPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x1BAFD54", Offset = "0x1BAFD54", VA = "0x1BAFD54")]
	public static void AddPlayNumber()
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x1BAFDB4", Offset = "0x1BAFDB4", VA = "0x1BAFDB4")]
	public static void SetSoundTrackVolume(float volume)
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x1BB032C", Offset = "0x1BB032C", VA = "0x1BB032C")]
	public static float GetSoundTrackVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x1BB044C", Offset = "0x1BB044C", VA = "0x1BB044C")]
	public static void SetRCChainsVolume(float volume)
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x1BB04FC", Offset = "0x1BB04FC", VA = "0x1BB04FC")]
	public static float GetRCChainsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x1BB0558", Offset = "0x1BB0558", VA = "0x1BB0558")]
	public static void SetShowShadow(bool show)
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x1BB060C", Offset = "0x1BB060C", VA = "0x1BB060C")]
	public static void SetDefaultShowShadow()
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0x1BB0864", Offset = "0x1BB0864", VA = "0x1BB0864")]
	public static bool GetShowShadow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0x1BB0974", Offset = "0x1BB0974", VA = "0x1BB0974")]
	public static void SetShowTutorial(bool show)
	{
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0x1BB0A28", Offset = "0x1BB0A28", VA = "0x1BB0A28")]
	public static bool GetShowTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0x1BB0A84", Offset = "0x1BB0A84", VA = "0x1BB0A84")]
	public static void SetHaveSeenCasualTutorial(bool haveSeen)
	{
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0x1BB0AE8", Offset = "0x1BB0AE8", VA = "0x1BB0AE8")]
	public static bool GetHaveSeenCasualTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0x1BB0B54", Offset = "0x1BB0B54", VA = "0x1BB0B54")]
	public static void SetHaveSeenRaceTutorial(bool haveSeen)
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x1BB0BB8", Offset = "0x1BB0BB8", VA = "0x1BB0BB8")]
	public static bool GetHaveSeenRaceTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x1BB0C24", Offset = "0x1BB0C24", VA = "0x1BB0C24")]
	public static void SetHaveSeenShooterTutorial(bool haveSeen)
	{
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x1BB0C88", Offset = "0x1BB0C88", VA = "0x1BB0C88")]
	public static bool GetHaveSeenShooterTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0x1BB0CF4", Offset = "0x1BB0CF4", VA = "0x1BB0CF4")]
	public static void SetShowHUD(bool show)
	{
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x1BB0DA8", Offset = "0x1BB0DA8", VA = "0x1BB0DA8")]
	public static bool GetShowHUD()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x1BB0E04", Offset = "0x1BB0E04", VA = "0x1BB0E04")]
	public static void SetDefaultComfort(Helmet.HelmetType comfortDefault)
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x1BB0EDC", Offset = "0x1BB0EDC", VA = "0x1BB0EDC")]
	public static Helmet.HelmetType GetDefaultComfort()
	{
		return default(Helmet.HelmetType);
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x1BB1224", Offset = "0x1BB1224", VA = "0x1BB1224")]
	public static void SetDefaultQuality(int quality)
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x1BB12C8", Offset = "0x1BB12C8", VA = "0x1BB12C8")]
	public static int GetDefaultQuality()
	{
		return default(int);
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0x1BB13E4", Offset = "0x1BB13E4", VA = "0x1BB13E4")]
	public static void SetDefaultFrequency(int quality)
	{
	}

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0x1BB1488", Offset = "0x1BB1488", VA = "0x1BB1488")]
	public static int GetDefaultFrequencyOption()
	{
		return default(int);
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0x1BB14E4", Offset = "0x1BB14E4", VA = "0x1BB14E4")]
	public static bool HasRenderScale()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0x1BB15B0", Offset = "0x1BB15B0", VA = "0x1BB15B0")]
	public static void SetRenderScale(float renderScale)
	{
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x1BB134C", Offset = "0x1BB134C", VA = "0x1BB134C")]
	public static float GetRenderScale()
	{
		return default(float);
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x1BB16DC", Offset = "0x1BB16DC", VA = "0x1BB16DC")]
	public static void SetAutoAdjustHeight(bool auto)
	{
	}

	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0x1BB1790", Offset = "0x1BB1790", VA = "0x1BB1790")]
	public static bool GetAutoAdjustHeight()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0x1BB17EC", Offset = "0x1BB17EC", VA = "0x1BB17EC")]
	public static void SetAlreadyPlayedGame()
	{
	}

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x1BB188C", Offset = "0x1BB188C", VA = "0x1BB188C")]
	public static void SetEnableBHaptics(bool enable)
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x1BB1940", Offset = "0x1BB1940", VA = "0x1BB1940")]
	public static bool GetEnableBHaptics()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x1BB199C", Offset = "0x1BB199C", VA = "0x1BB199C")]
	public static void SetBHapticsRecoilOnVest(bool recoilOnVest)
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x1BB1A50", Offset = "0x1BB1A50", VA = "0x1BB1A50")]
	public static bool GetBHapticsRecoilOnVest()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0x1BB1AAC", Offset = "0x1BB1AAC", VA = "0x1BB1AAC")]
	public static void SetSRSIpAddress(string value)
	{
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0x1BB1AF8", Offset = "0x1BB1AF8", VA = "0x1BB1AF8")]
	public static string GetSRSIpAddress()
	{
		return null;
	}

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x1BB1BC8", Offset = "0x1BB1BC8", VA = "0x1BB1BC8")]
	public static void SetSRSUdpPort(int value)
	{
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x1BB1C14", Offset = "0x1BB1C14", VA = "0x1BB1C14")]
	public static int GetSRSUdpPort()
	{
		return default(int);
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x1BB1C5C", Offset = "0x1BB1C5C", VA = "0x1BB1C5C")]
	public static void SetGenericTelemetryIpAddress(string value)
	{
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x1BB1CA8", Offset = "0x1BB1CA8", VA = "0x1BB1CA8")]
	public static string GetGenericTelemetryIpAddress()
	{
		return null;
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x1BB1D78", Offset = "0x1BB1D78", VA = "0x1BB1D78")]
	public static void SetGenericTelemetryUdpPort(int value)
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x1BB1DC4", Offset = "0x1BB1DC4", VA = "0x1BB1DC4")]
	public static int GetGenericTelemetryUdpPort()
	{
		return default(int);
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x1BB1E80", Offset = "0x1BB1E80", VA = "0x1BB1E80")]
	public static void SetYawVrAutoStartStop(bool value)
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x1BB1ECC", Offset = "0x1BB1ECC", VA = "0x1BB1ECC")]
	public static bool GetYawVrAutoStartStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0x1BB1F20", Offset = "0x1BB1F20", VA = "0x1BB1F20")]
	public static void SetYawVrAutoPark(bool value)
	{
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0x1BB1F6C", Offset = "0x1BB1F6C", VA = "0x1BB1F6C")]
	public static bool GetYawVrAutoPark()
	{
		return default(bool);
	}

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0x1BB1FC0", Offset = "0x1BB1FC0", VA = "0x1BB1FC0")]
	public static void SetYawVrIpAddress(string value)
	{
	}

	[Token(Token = "0x6001AF6")]
	[Address(RVA = "0x1BB200C", Offset = "0x1BB200C", VA = "0x1BB200C")]
	public static string GetYawVrIpAddress()
	{
		return null;
	}

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0x1BB2068", Offset = "0x1BB2068", VA = "0x1BB2068")]
	public static void SetYawVrTcpPort(int value)
	{
	}

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x1BB20B4", Offset = "0x1BB20B4", VA = "0x1BB20B4")]
	public static int GetYawVrTcpPort()
	{
		return default(int);
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x1BB20FC", Offset = "0x1BB20FC", VA = "0x1BB20FC")]
	public static void SetYawVrUdpPort(int value)
	{
	}

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x1BB2148", Offset = "0x1BB2148", VA = "0x1BB2148")]
	public static int GetYawVrUdpPort()
	{
		return default(int);
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x1BB2190", Offset = "0x1BB2190", VA = "0x1BB2190")]
	public static void SetYawVrDeviceType(int value)
	{
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x1BB21DC", Offset = "0x1BB21DC", VA = "0x1BB21DC")]
	public static int GetYawVrDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x1BB22B0", Offset = "0x1BB22B0", VA = "0x1BB22B0")]
	public static void GetSettings()
	{
	}

	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x1BB238C", Offset = "0x1BB238C", VA = "0x1BB238C")]
	public static void Save()
	{
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x1BAFF6C", Offset = "0x1BAFF6C", VA = "0x1BAFF6C")]
	private static void SaveProductOnCloudStorage(string id, bool allowed, float value = -1f, int enumValue = -1)
	{
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x1BB06C8", Offset = "0x1BB06C8", VA = "0x1BB06C8")]
	private static Setting GetSettingOnCloudStorage(string id)
	{
		return null;
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x1BAFE64", Offset = "0x1BAFE64", VA = "0x1BAFE64")]
	private static bool UseCloudStorage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x1BB24C8", Offset = "0x1BB24C8", VA = "0x1BB24C8")]
	public static void SetLastGameVersion(string version)
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x1BB252C", Offset = "0x1BB252C", VA = "0x1BB252C")]
	public static string GetLastGameVersion()
	{
		return null;
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x1BB25A8", Offset = "0x1BB25A8", VA = "0x1BB25A8")]
	public static void SetAvatarID(string id)
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x1BB260C", Offset = "0x1BB260C", VA = "0x1BB260C")]
	public static string GetAvatarID()
	{
		return null;
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x1BB2680", Offset = "0x1BB2680", VA = "0x1BB2680")]
	public static void SetPlayedIntroduction(bool playedIntroduction)
	{
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x1BAFAFC", Offset = "0x1BAFAFC", VA = "0x1BAFAFC")]
	public static bool GetPlayedIntroduction()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x1BB26E4", Offset = "0x1BB26E4", VA = "0x1BB26E4")]
	public static void SetShowCrosshair(bool show)
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x1BB2798", Offset = "0x1BB2798", VA = "0x1BB2798")]
	public static bool GetShowCrosshair()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x1BB27F4", Offset = "0x1BB27F4", VA = "0x1BB27F4")]
	public static void SetShowCrosshairTutorial(bool show)
	{
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0x1BB28A8", Offset = "0x1BB28A8", VA = "0x1BB28A8")]
	public static bool GetShowCrosshairTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0x1BB2904", Offset = "0x1BB2904", VA = "0x1BB2904")]
	public static void SetShowSelfieTutorial(bool show)
	{
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x1BB29B8", Offset = "0x1BB29B8", VA = "0x1BB29B8")]
	public static bool GetShowSelfieStickTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x1BB2A14", Offset = "0x1BB2A14", VA = "0x1BB2A14")]
	public static int GetTargetsHit()
	{
		return default(int);
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x1BB2A70", Offset = "0x1BB2A70", VA = "0x1BB2A70")]
	public static void SetTargetsHit(int value)
	{
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0x1BB2B14", Offset = "0x1BB2B14", VA = "0x1BB2B14")]
	public static int GetHittingStreak()
	{
		return default(int);
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0x1BB2B70", Offset = "0x1BB2B70", VA = "0x1BB2B70")]
	public static void SetHittingStreak(int value)
	{
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0x1BB2C14", Offset = "0x1BB2C14", VA = "0x1BB2C14")]
	public static int GetRecordTimesRidden(string dictionary, string type)
	{
		return default(int);
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0x1BB2C90", Offset = "0x1BB2C90", VA = "0x1BB2C90")]
	public static void SetRecordTimesRidden(string dictionary, string type, int value)
	{
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0x1BB2D68", Offset = "0x1BB2D68", VA = "0x1BB2D68")]
	public static float GetRecordTotalTime()
	{
		return default(float);
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0x1BB2DC4", Offset = "0x1BB2DC4", VA = "0x1BB2DC4")]
	public static void SetRecordTotalTime(float value)
	{
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0x1BB2E74", Offset = "0x1BB2E74", VA = "0x1BB2E74")]
	public static void SetCameraSmoothing(float value)
	{
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0x1BB2F24", Offset = "0x1BB2F24", VA = "0x1BB2F24")]
	public static float GetCameraSmoothing()
	{
		return default(float);
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x1BB2F84", Offset = "0x1BB2F84", VA = "0x1BB2F84")]
	public static void SetShowLaserSight(bool show)
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x1BB3198", Offset = "0x1BB3198", VA = "0x1BB3198")]
	public static bool GetShowLaserSight()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x1BB31F4", Offset = "0x1BB31F4", VA = "0x1BB31F4")]
	public static void SetAllowHapitcsFeedback(bool allow)
	{
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x1BB3338", Offset = "0x1BB3338", VA = "0x1BB3338")]
	public static bool GetAllowHapitcsFeedback()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x1BB3394", Offset = "0x1BB3394", VA = "0x1BB3394")]
	public static void SetEnable3DOF(bool allow)
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x1BB341C", Offset = "0x1BB341C", VA = "0x1BB341C")]
	public static bool GetEnable3DOF()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x1BB3488", Offset = "0x1BB3488", VA = "0x1BB3488")]
	public static void SetEnableVRArcadeMode(bool value)
	{
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x1BB353C", Offset = "0x1BB353C", VA = "0x1BB353C")]
	public static bool GetEnableVRArcadeMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x1BB35A4", Offset = "0x1BB35A4", VA = "0x1BB35A4")]
	public static void SetRemoteControlIpAddress(string value)
	{
	}

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x1BB35F0", Offset = "0x1BB35F0", VA = "0x1BB35F0")]
	public static string GetRemoteControlIpAddress()
	{
		return null;
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x1BB364C", Offset = "0x1BB364C", VA = "0x1BB364C")]
	public static void SetRemoteControlTcpPort(int value)
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x1BB3698", Offset = "0x1BB3698", VA = "0x1BB3698")]
	public static int GetRemoteControlTcpPort()
	{
		return default(int);
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x1BB115C", Offset = "0x1BB115C", VA = "0x1BB115C")]
	private static int GetInt(string settingID, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x1BB03A0", Offset = "0x1BB03A0", VA = "0x1BB03A0")]
	private static float GetFloat(string settingID, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x1BB08C0", Offset = "0x1BB08C0", VA = "0x1BB08C0")]
	private static bool GetBool(string settingID, int defaultValue)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000402")]
public abstract class IController<T> : MonoBehaviour where T : IController<T>
{
	[Token(Token = "0x4001CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static T Instance;

	[Token(Token = "0x6001B2B")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6001B2C")]
	public virtual void Awake(bool destroyAll, bool destroyNothing = false)
	{
	}

	[Token(Token = "0x6001B2D")]
	protected IController()
	{
	}
}
[Token(Token = "0x2000403")]
public interface IReplaceMaterials
{
}
[Token(Token = "0x2000404")]
public class Pagination : MonoBehaviour
{
	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int numberOfItemsPerPage;

	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int numberOfItems;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentPageNumber;

	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int totalPages;

	[Token(Token = "0x4001CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject leftButton;

	[Token(Token = "0x4001CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rightButton;

	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isCircularPagination;

	[Token(Token = "0x1400002D")]
	public event Action<int> OnElementReadyToShow
	{
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1BB3C4C", Offset = "0x1BB3C4C", VA = "0x1BB3C4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1BB3CFC", Offset = "0x1BB3CFC", VA = "0x1BB3CFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x1BB3DAC", Offset = "0x1BB3DAC", VA = "0x1BB3DAC")]
	private void ShowElement(int i)
	{
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x1BB3DC8", Offset = "0x1BB3DC8", VA = "0x1BB3DC8")]
	public int GetCurrentPage()
	{
		return default(int);
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x1BB3DD0", Offset = "0x1BB3DD0", VA = "0x1BB3DD0")]
	public void Configure(int numberOfItemsPerPage, int numberOfItems, GameObject leftButton, GameObject rightButton, int page, bool isCircularPagination = true)
	{
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x1BB3ED0", Offset = "0x1BB3ED0", VA = "0x1BB3ED0")]
	public void NextPage(bool plus, bool changePageNumber = true)
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x1BB4364", Offset = "0x1BB4364", VA = "0x1BB4364")]
	private void ShowPageElements()
	{
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x1BB43C8", Offset = "0x1BB43C8", VA = "0x1BB43C8")]
	public Pagination()
	{
	}
}
[Token(Token = "0x2000405")]
public class ParentChanger : MonoBehaviour
{
	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _newParent;

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x1BB43D0", Offset = "0x1BB43D0", VA = "0x1BB43D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x1BB45D8", Offset = "0x1BB45D8", VA = "0x1BB45D8")]
	public ParentChanger()
	{
	}
}
[Token(Token = "0x2000406")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4001CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0x1BB45E0", Offset = "0x1BB45E0", VA = "0x1BB45E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x1BB465C", Offset = "0x1BB465C", VA = "0x1BB465C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x1BB47CC", Offset = "0x1BB47CC", VA = "0x1BB47CC")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000407")]
public class SafetyEvent
{
	[Token(Token = "0x2000408")]
	public delegate void EventDelegate<T>();

	[Token(Token = "0x4001CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<EventDelegate<Action>> delegates;

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x1BB47D4", Offset = "0x1BB47D4", VA = "0x1BB47D4")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x1BB4844", Offset = "0x1BB4844", VA = "0x1BB4844")]
	public void AddListener(EventDelegate<Action> action)
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x1BB492C", Offset = "0x1BB492C", VA = "0x1BB492C")]
	public void RemoveListener(EventDelegate<Action> action)
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x1BB49BC", Offset = "0x1BB49BC", VA = "0x1BB49BC")]
	public void Raise()
	{
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x1BB4A54", Offset = "0x1BB4A54", VA = "0x1BB4A54")]
	public SafetyEvent()
	{
	}
}
[Token(Token = "0x2000409")]
public class ScrollSwipe : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Tooltip("Deadzone for stick to prevent accidental scrolling")]
	private static float ThumbstickDeadZone;

	[Token(Token = "0x4001CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rectTransform;

	[Token(Token = "0x4001CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4001CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float xSpeed;

	[Token(Token = "0x4001CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float ySpeed;

	[Token(Token = "0x4001CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float hPos;

	[Token(Token = "0x4001CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float vPos;

	[Token(Token = "0x4001CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hSpeedMultiplier;

	[Token(Token = "0x4001CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float vSpeedMultiplier;

	[Token(Token = "0x4001CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 scrollDelta;

	[Token(Token = "0x4001CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSelected;

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0x1BB4ADC", Offset = "0x1BB4ADC", VA = "0x1BB4ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0x1BB4B6C", Offset = "0x1BB4B6C", VA = "0x1BB4B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0x1BB4E78", Offset = "0x1BB4E78", VA = "0x1BB4E78")]
	public void SwipeLeft()
	{
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0x1BB4E88", Offset = "0x1BB4E88", VA = "0x1BB4E88")]
	public void SwipeRight()
	{
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0x1BB4E98", Offset = "0x1BB4E98", VA = "0x1BB4E98")]
	public void SwipeDown()
	{
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0x1BB4EA8", Offset = "0x1BB4EA8", VA = "0x1BB4EA8")]
	public void SwipeUp()
	{
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0x1BB4EB8", Offset = "0x1BB4EB8", VA = "0x1BB4EB8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0x1BB50CC", Offset = "0x1BB50CC", VA = "0x1BB50CC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0x1BB52DC", Offset = "0x1BB52DC", VA = "0x1BB52DC")]
	public ScrollSwipe()
	{
	}
}
[Token(Token = "0x200040A")]
public class ShadersRefresher : MonoBehaviour
{
	[Token(Token = "0x4001CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, Material> listOfMaterials;

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x1BB5334", Offset = "0x1BB5334", VA = "0x1BB5334")]
	public static void Refresh()
	{
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x1BB53A8", Offset = "0x1BB53A8", VA = "0x1BB53A8")]
	public static void Refresh(Renderer renderer)
	{
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0x1BB53A0", Offset = "0x1BB53A0", VA = "0x1BB53A0")]
	private static bool ShouldRefresh()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0x1BB545C", Offset = "0x1BB545C", VA = "0x1BB545C")]
	public ShadersRefresher()
	{
	}
}
[Token(Token = "0x200040B")]
public class TagSelectorAttribute : PropertyAttribute
{
	[Token(Token = "0x4001CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseDefaultTagFieldDrawer;

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0x1BB54FC", Offset = "0x1BB54FC", VA = "0x1BB54FC")]
	public TagSelectorAttribute()
	{
	}
}
[Token(Token = "0x200040C")]
public class TextLocalization : MonoBehaviour
{
	[Token(Token = "0x4001CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DoTranslation;

	[Token(Token = "0x4001CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Upper;

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x1BB5504", Offset = "0x1BB5504", VA = "0x1BB5504")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x1BB569C", Offset = "0x1BB569C", VA = "0x1BB569C")]
	public TextLocalization()
	{
	}
}
[Token(Token = "0x200040D")]
public class TextureScaler
{
	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x1BB56A4", Offset = "0x1BB56A4", VA = "0x1BB56A4")]
	public static Texture2D scaled(Texture2D src, int width, int height, FilterMode mode = FilterMode.Trilinear)
	{
		return null;
	}

	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x1BB58EC", Offset = "0x1BB58EC", VA = "0x1BB58EC")]
	public static void scale(Texture2D tex, int width, int height, FilterMode mode = FilterMode.Bilinear)
	{
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x1BB57A0", Offset = "0x1BB57A0", VA = "0x1BB57A0")]
	private static void _gpu_scale(Texture2D src, int width, int height, FilterMode fmode)
	{
	}

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x1BB5998", Offset = "0x1BB5998", VA = "0x1BB5998")]
	public TextureScaler()
	{
	}
}
[Token(Token = "0x200040E")]
[ExecuteInEditMode]
public class TransformMirror : MonoBehaviour
{
	[Token(Token = "0x4001CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform From;

	[Token(Token = "0x4001CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform To;

	[Token(Token = "0x4001CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Run;

	[Token(Token = "0x4001CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Space(25f)]
	public bool RunReverse;

	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0x1BB59A0", Offset = "0x1BB59A0", VA = "0x1BB59A0")]
	public TransformMirror()
	{
	}
}
[Token(Token = "0x200040F")]
public class VersionUIController : IController<VersionUIController>
{
	[Token(Token = "0x4001CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Version;

	[Token(Token = "0x4001CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea(15, 20)]
	public string VersionDescription;

	[Token(Token = "0x4001CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MessageUIController.Message currentMessage;

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x1BB59A8", Offset = "0x1BB59A8", VA = "0x1BB59A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x1BB5A14", Offset = "0x1BB5A14", VA = "0x1BB5A14")]
	public void VerifyVersion()
	{
	}

	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x1BB5BEC", Offset = "0x1BB5BEC", VA = "0x1BB5BEC")]
	private void OnOk(MessageUIController.Message message)
	{
	}

	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x1BB5CD0", Offset = "0x1BB5CD0", VA = "0x1BB5CD0")]
	public VersionUIController()
	{
	}
}
[Token(Token = "0x2000410")]
public class GyroController : MonoBehaviour
{
	[Token(Token = "0x4001CCD")]
	private const float DRAG_RATE = 0.1f;

	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float dragYawDegrees;

	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float dragRollDegrees;

	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFixed;

	[Token(Token = "0x4001CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool useGyro;

	[Token(Token = "0x4001CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform tr;

	[Token(Token = "0x4001CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform parent;

	[Token(Token = "0x4001CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 startPos;

	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0x1BB5D18", Offset = "0x1BB5D18", VA = "0x1BB5D18")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x1BB5F80", Offset = "0x1BB5F80", VA = "0x1BB5F80")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x1BB61C0", Offset = "0x1BB61C0", VA = "0x1BB61C0")]
	private void CheckDrag()
	{
	}

	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x1BB62E8", Offset = "0x1BB62E8", VA = "0x1BB62E8")]
	public GyroController()
	{
	}
}
[Token(Token = "0x2000411")]
[RequireComponent(typeof(XRGrabInteractableSpecific))]
[RequireComponent(typeof(HingeJoint))]
public class RaceLeversGrababble : MonoBehaviour
{
	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(5f)]
	public Shader MobileOutline;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shader regularShader;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected RaceStick raceStick;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float offset;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected IXRInteractor interactor;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private new Transform transform;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initPos;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRGrabInteractableSpecific interactable;

	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HingeJoint joint;

	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rotation;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isHover;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.XR.Interaction.Toolkit.XRController interactorController;

	[Token(Token = "0x17000343")]
	public bool IsGrabbed
	{
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1BB62F0", Offset = "0x1BB62F0", VA = "0x1BB62F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x1BB6300", Offset = "0x1BB6300", VA = "0x1BB6300")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x1BB6388", Offset = "0x1BB6388", VA = "0x1BB6388")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x1BB646C", Offset = "0x1BB646C", VA = "0x1BB646C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x1BB69A4", Offset = "0x1BB69A4", VA = "0x1BB69A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x1BB6C04", Offset = "0x1BB6C04", VA = "0x1BB6C04")]
	private void Grabbable_OnGrabbedObject(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x1BB6E64", Offset = "0x1BB6E64", VA = "0x1BB6E64")]
	private void Grabbable_OnReleasedObject(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0x1BB71C0", Offset = "0x1BB71C0", VA = "0x1BB71C0")]
	private void Grabbable_OnHoverEnterObject(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x1BB7338", Offset = "0x1BB7338", VA = "0x1BB7338")]
	private void Grabbable_OnHoverExitObject(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x1BB71D8", Offset = "0x1BB71D8", VA = "0x1BB71D8")]
	private void ApplyOutline()
	{
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x1BB70C8", Offset = "0x1BB70C8", VA = "0x1BB70C8")]
	private void RemoveOutline()
	{
	}

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x1BB734C", Offset = "0x1BB734C", VA = "0x1BB734C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x1BB7670", Offset = "0x1BB7670", VA = "0x1BB7670")]
	public float SphericalValue(float v)
	{
		return default(float);
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x1BB76AC", Offset = "0x1BB76AC", VA = "0x1BB76AC")]
	public RaceLeversGrababble()
	{
	}
}
[Token(Token = "0x2000412")]
[RequireComponent(typeof(XRGrabInteractableSpecific))]
[RequireComponent(typeof(HingeJoint))]
public class SafetyBarsGrabbable : MonoBehaviour
{
	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource AudioSource;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip soundFxLeverAudioClip;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float clickInterval;

	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(5f)]
	public Shader MobileOutline;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader regularShader;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected SafetyBar safetyBar;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected IXRInteractor interactor;

	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float deslocation;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected XRGrabInteractableSpecific interactable;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private new Transform transform;

	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isHover;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.XR.Interaction.Toolkit.XRController interactorController;

	[Token(Token = "0x17000344")]
	private bool SomeHandIsPinching
	{
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x1BB76C0", Offset = "0x1BB76C0", VA = "0x1BB76C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0x1BB76C8", Offset = "0x1BB76C8", VA = "0x1BB76C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x1BB7788", Offset = "0x1BB7788", VA = "0x1BB7788")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0x1BB79A4", Offset = "0x1BB79A4", VA = "0x1BB79A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x1BB7C04", Offset = "0x1BB7C04", VA = "0x1BB7C04")]
	private void Grabbable_OnGrabbedObject(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x1BB7EC0", Offset = "0x1BB7EC0", VA = "0x1BB7EC0")]
	private void Grabbable_OnReleasedObject(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x1BB8158", Offset = "0x1BB8158", VA = "0x1BB8158")]
	private void Grabbable_OnHoverEnterObject(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x1BB8374", Offset = "0x1BB8374", VA = "0x1BB8374")]
	private void Grabbable_OnHoverExitObject(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x1BB8214", Offset = "0x1BB8214", VA = "0x1BB8214")]
	private void ApplyOutline()
	{
	}

	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x1BB8060", Offset = "0x1BB8060", VA = "0x1BB8060")]
	public void RemoveOutline()
	{
	}

	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x1BB8408", Offset = "0x1BB8408", VA = "0x1BB8408")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0x1BB8648", Offset = "0x1BB8648", VA = "0x1BB8648")]
	private void LeverVibration(bool playSoundFx)
	{
	}

	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x1BB86A8", Offset = "0x1BB86A8", VA = "0x1BB86A8")]
	public SafetyBarsGrabbable()
	{
	}
}
[Token(Token = "0x2000413")]
public class XRControllerWrapper : UnityEngine.XR.Interaction.Toolkit.XRController
{
	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x1BB86B8", Offset = "0x1BB86B8", VA = "0x1BB86B8", Slot = "18")]
	protected override bool IsPressed(InputHelpers.Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x1BB8748", Offset = "0x1BB8748", VA = "0x1BB8748")]
	public XRControllerWrapper()
	{
	}
}
[Token(Token = "0x2000414")]
public class XRGrabInteractableSpecific : XRGrabInteractable
{
	[Token(Token = "0x6001B80")]
	[Address(RVA = "0x1BB6380", Offset = "0x1BB6380", VA = "0x1BB6380")]
	public void ForceDeselect(IXRSelectInteractor current)
	{
	}

	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x1BB8750", Offset = "0x1BB8750", VA = "0x1BB8750")]
	public XRGrabInteractableSpecific()
	{
	}
}
[Token(Token = "0x2000415")]
[ExecuteInEditMode]
public class RenderDepth : MonoBehaviour
{
	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 3f)]
	public float depthLevel;

	[Token(Token = "0x4001CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shader _shader;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x17000345")]
	private Shader shader
	{
		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1BB87A8", Offset = "0x1BB87A8", VA = "0x1BB87A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000346")]
	private Material material
	{
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1BB8850", Offset = "0x1BB8850", VA = "0x1BB8850")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x1BB8930", Offset = "0x1BB8930", VA = "0x1BB8930")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x1BB8A8C", Offset = "0x1BB8A8C", VA = "0x1BB8A8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x1BB8B1C", Offset = "0x1BB8B1C", VA = "0x1BB8B1C")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0x1BB8C44", Offset = "0x1BB8C44", VA = "0x1BB8C44")]
	public RenderDepth()
	{
	}
}
[Token(Token = "0x2000416")]
[CreateAssetMenu]
public class RampAsset : ScriptableObject
{
	[Token(Token = "0x4001CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient gradient;

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int size;

	[Token(Token = "0x4001CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool up;

	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool overwriteExisting;

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0x1BB8C54", Offset = "0x1BB8C54", VA = "0x1BB8C54")]
	public RampAsset()
	{
	}
}
[Token(Token = "0x2000417")]
public class AdjustTimeScale : MonoBehaviour
{
	[Token(Token = "0x4001CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI textMesh;

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x1BB8CD8", Offset = "0x1BB8CD8", VA = "0x1BB8CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0x1BB8D30", Offset = "0x1BB8D30", VA = "0x1BB8D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x1BB8F34", Offset = "0x1BB8F34", VA = "0x1BB8F34")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x1BB8F58", Offset = "0x1BB8F58", VA = "0x1BB8F58")]
	public AdjustTimeScale()
	{
	}
}
[Token(Token = "0x2000418")]
public class ProximityActivate : MonoBehaviour
{
	[Token(Token = "0x4001CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform distanceActivator;

	[Token(Token = "0x4001CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAtActivator;

	[Token(Token = "0x4001CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x4001CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform activator;

	[Token(Token = "0x4001CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool activeState;

	[Token(Token = "0x4001CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup target;

	[Token(Token = "0x4001CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtCamera;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool enableInfoPanel;

	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject infoIcon;

	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float alpha;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CanvasGroup infoPanel;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion originRotation;

	[Token(Token = "0x4001D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion targetRotation;

	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x1BB8F60", Offset = "0x1BB8F60", VA = "0x1BB8F60")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0x1BB9070", Offset = "0x1BB9070", VA = "0x1BB9070")]
	private bool IsTargetNear()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x1BB9428", Offset = "0x1BB9428", VA = "0x1BB9428")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x1BB96E0", Offset = "0x1BB96E0", VA = "0x1BB96E0")]
	public ProximityActivate()
	{
	}
}
[Token(Token = "0x2000419")]
[RequireComponent(typeof(CharacterController))]
public class SimpleCharacterMotor : MonoBehaviour
{
	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CursorLockMode cursorLockMode;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool cursorVisible;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Movement")]
	public float walkSpeed;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float runSpeed;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	[Header("Look")]
	public Transform cameraPivot;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lookSpeed;

	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invertY;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	[Header("Smoothing")]
	public float movementAcceleration;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController controller;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 movement;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 finalMovement;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion targetRotation;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion targetPivotRotation;

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x1BB96F0", Offset = "0x1BB96F0", VA = "0x1BB96F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B92")]
	[Address(RVA = "0x1BB97B0", Offset = "0x1BB97B0", VA = "0x1BB97B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x1BB9978", Offset = "0x1BB9978", VA = "0x1BB9978")]
	private void UpdateLookRotation()
	{
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x1BB97C8", Offset = "0x1BB97C8", VA = "0x1BB97C8")]
	private void UpdateTranslation()
	{
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x1BB9D18", Offset = "0x1BB9D18", VA = "0x1BB9D18")]
	public SimpleCharacterMotor()
	{
	}
}
[Token(Token = "0x200041A")]
[AddComponentMenu("Volumetric Audio/VA Change Spiral")]
[RequireComponent(typeof(VA_Spiral))]
public class VA_ChangeSpiral : MonoBehaviour
{
	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The minimum AngleStep value")]
	public float AngleStepA;

	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The maximum AngleStep value")]
	public float AngleStepB;

	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The amount of seconds it takes to go from AngleStep A and B")]
	public float Interval;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float position;

	[NonSerialized]
	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VA_Spiral spiral;

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x1BB9D54", Offset = "0x1BB9D54", VA = "0x1BB9D54", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001B97")]
	[Address(RVA = "0x1BBA414", Offset = "0x1BBA414", VA = "0x1BBA414")]
	public VA_ChangeSpiral()
	{
	}
}
[Token(Token = "0x200041B")]
[ExecuteInEditMode]
[AddComponentMenu("Volumetric Audio/VA Freeflight")]
public class VA_Freeflight : MonoBehaviour
{
	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The current Euler rotation in degrees")]
	public Vector3 EulerAngles;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The maximum linear speed")]
	public float LinearSpeed;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The speed at which the maximum linear speed is reached")]
	public float LinearDampening;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The maximum angular speed")]
	public float AngularSpeed;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The speed at which the maximum angular speed is reached")]
	public float AngularDampening;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Vector3 linearVelocity;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 angularVelocity;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool lastMouseDown;

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x1BBA430", Offset = "0x1BBA430", VA = "0x1BBA430", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001B99")]
	[Address(RVA = "0x1BBAA3C", Offset = "0x1BBAA3C", VA = "0x1BBAA3C")]
	public VA_Freeflight()
	{
	}
}
[Token(Token = "0x200041C")]
public class VA_Gui : MonoBehaviour
{
	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Header;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Footer;

	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0x1BBAA50", Offset = "0x1BBAA50", VA = "0x1BBAA50")]
	public void ClickReload()
	{
	}

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x1BBAB20", Offset = "0x1BBAB20", VA = "0x1BBAB20")]
	public void ClickPrev()
	{
	}

	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x1BBAB90", Offset = "0x1BBAB90", VA = "0x1BBAB90")]
	public void ClickNext()
	{
	}

	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x1BBAA60", Offset = "0x1BBAA60", VA = "0x1BBAA60")]
	private static int GetCurrentLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x1BBAB40", Offset = "0x1BBAB40", VA = "0x1BBAB40")]
	private static int GetLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x1BBAAC8", Offset = "0x1BBAAC8", VA = "0x1BBAAC8")]
	private static void LoadLevel(int index)
	{
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x1BBABBC", Offset = "0x1BBABBC", VA = "0x1BBABBC")]
	public VA_Gui()
	{
	}
}
[Token(Token = "0x200041D")]
[AddComponentMenu("Volumetric Audio/VA Press To Throw")]
public class VA_PressToThrow : MonoBehaviour
{
	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The camera the throw will come from (default = MainCamera)")]
	public Camera Camera;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The key that must be held down to mouse look")]
	public KeyCode Requires;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("The layer mask used when raycasting into the scene")]
	public float Speed;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The prefabs that will be thrown")]
	public List<GameObject> Prefabs;

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x1BBABC4", Offset = "0x1BBABC4", VA = "0x1BBABC4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0x1BBAF08", Offset = "0x1BBAF08", VA = "0x1BBAF08")]
	public VA_PressToThrow()
	{
	}
}
[Token(Token = "0x200041E")]
[AddComponentMenu("Volumetric Audio/VA Spin")]
public class VA_Spin : MonoBehaviour
{
	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The amount of degrees this GameObject is rotated by each second in world space")]
	public Vector3 DegreesPerSecond;

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0x1BBAF1C", Offset = "0x1BBAF1C", VA = "0x1BBAF1C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0x1BBAF78", Offset = "0x1BBAF78", VA = "0x1BBAF78")]
	public VA_Spin()
	{
	}
}
[Token(Token = "0x200041F")]
[RequireComponent(typeof(MeshFilter))]
[AddComponentMenu("Volumetric Audio/VA Spiral")]
[ExecuteInEditMode]
public class VA_Spiral : MonoBehaviour
{
	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Amount of segments in the spiral")]
	public int SegmentCount;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Thickness of the spiral in local space")]
	public float SegmentThickness;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Initial angle of the spiral edge in degrees")]
	public float InitialAngle;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Initial distance of the spiral inner edge in local space")]
	public float InitialDistance;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Angle increment of each spiral segment in degrees")]
	public float AngleStep;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Distance increment of each spiral segment in local space")]
	public float DistanceStep;

	[NonSerialized]
	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] positions;

	[NonSerialized]
	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2[] uvs;

	[NonSerialized]
	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] indices;

	[NonSerialized]
	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter cachedMeshFilter;

	[Token(Token = "0x17000347")]
	public bool InvalidSegmentCount
	{
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1BBAF80", Offset = "0x1BBAF80", VA = "0x1BBAF80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0x1BB9E9C", Offset = "0x1BB9E9C", VA = "0x1BB9E9C")]
	public void Regenerate()
	{
	}

	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0x1BBB024", Offset = "0x1BBB024", VA = "0x1BBB024", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0x1BBB028", Offset = "0x1BBB028", VA = "0x1BBB028", Slot = "5")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x1BBB02C", Offset = "0x1BBB02C", VA = "0x1BBB02C", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0x1BBB030", Offset = "0x1BBB030", VA = "0x1BBB030", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x1BBB0E0", Offset = "0x1BBB0E0", VA = "0x1BBB0E0")]
	public VA_Spiral()
	{
	}
}
[Token(Token = "0x2000420")]
[AddComponentMenu("Volumetric Audio/VA Audio Listener")]
[ExecuteInEditMode]
public class VA_AudioListener : MonoBehaviour
{
	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<VA_AudioListener> Instances;

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x1BBB10C", Offset = "0x1BBB10C", VA = "0x1BBB10C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x1BBB2A4", Offset = "0x1BBB2A4", VA = "0x1BBB2A4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x1BBB324", Offset = "0x1BBB324", VA = "0x1BBB324")]
	public VA_AudioListener()
	{
	}
}
[Token(Token = "0x2000421")]
[AddComponentMenu("Volumetric Audio/VA Audio Source")]
[ExecuteInEditMode]
public class VA_AudioSource : MonoBehaviour
{
	[Token(Token = "0x2000422")]
	public enum OccludeType
	{
		[Token(Token = "0x4001D4A")]
		Raycast,
		[Token(Token = "0x4001D4B")]
		RaycastAll
	}

	[Serializable]
	[Token(Token = "0x2000423")]
	public class OccludeGroup
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask Layers;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Volume;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x1BBC864", Offset = "0x1BBC864", VA = "0x1BBC864")]
		public OccludeGroup()
		{
		}
	}

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Should this sound have its position update?")]
	public bool Position;

	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("The speed at which the sound position changes (0 = instant)")]
	public float PositionDampening;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The shapes you want the audio source to emit from")]
	public List<VA_Shape> Shapes;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The shapes you want the audio source to be excluded from")]
	public List<VA_VolumetricShape> ExcludedShapes;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Should this sound have its Spatial Blend update?")]
	public bool Blend;

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The distance at which the sound becomes fuly mono")]
	public float BlendMinDistance;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The distance at which the sound becomes fuly stereo")]
	public float BlendMaxDistance;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The distribution of the mono to stereo ratio")]
	public AnimationCurve BlendCurve;

	[Token(Token = "0x4001D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Should this sound have its volume update?")]
	public bool Volume;

	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("The base volume of the audio source")]
	[Range(0f, 1f)]
	public float BaseVolume;

	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The zone this sound is associated with")]
	public VA_Zone Zone;

	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Should the volume fade based on distance?")]
	[FormerlySerializedAs("Volume")]
	public bool Fade;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("The distance at which the sound fades to maximum volume")]
	[FormerlySerializedAs("VolumeMinDistance")]
	public float FadeMinDistance;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("VolumeMaxDistance")]
	[Tooltip("The distance at which the sound fades to minimum volume")]
	public float FadeMaxDistance;

	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[FormerlySerializedAs("VolumeCurve")]
	[Tooltip("The distribution of volume based on its scaled distance")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Should this sound be blocked when behind other objects?")]
	public bool Occlude;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("The raycast style against the occlusion groups")]
	public OccludeType OccludeMethod;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Check for VA_Material instances attached to the occlusion object")]
	public bool OccludeMaterial;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("How quickly the sound fades in/out when behind an object")]
	[FormerlySerializedAs("OccludeSpeed")]
	public float OccludeDampening;

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("The amount of occlusion checks")]
	public List<OccludeGroup> OccludeGroups;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float OccludeAmount;

	[NonSerialized]
	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x4001D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Keyframe[] defaultBlendCurveKeys;

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Keyframe[] defaultVolumeCurveKeys;

	[Token(Token = "0x17000348")]
	public bool HasVolumetricShape
	{
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1BBB3C4", Offset = "0x1BBB3C4", VA = "0x1BBB3C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x1BBB6A0", Offset = "0x1BBB6A0", VA = "0x1BBB6A0", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x1BBB7BC", Offset = "0x1BBB7BC", VA = "0x1BBB7BC", Slot = "5")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x1BBC2D4", Offset = "0x1BBC2D4", VA = "0x1BBC2D4")]
	private float GetOcclusionVolume(OccludeGroup group, RaycastHit hit)
	{
		return default(float);
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x1BBC448", Offset = "0x1BBC448", VA = "0x1BBC448", Slot = "6")]
	protected virtual void SetPanLevel(float newPanLevel)
	{
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x1BBC548", Offset = "0x1BBC548", VA = "0x1BBC548", Slot = "7")]
	protected virtual void SetVolume(float newVolume)
	{
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x1BBC648", Offset = "0x1BBC648", VA = "0x1BBC648")]
	public VA_AudioSource()
	{
	}
}
[Token(Token = "0x2000424")]
[ExecuteInEditMode]
[AddComponentMenu("Volumetric Audio/VA Box")]
public class VA_Box : VA_VolumetricShape
{
	[Token(Token = "0x4001D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("If you set this, then all shape settings will automatically be copied from the collider")]
	public BoxCollider BoxCollider;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The center of the box shape (if you set BoxCollider, this will be automatically overwritten)")]
	public Vector3 Center;

	[Token(Token = "0x4001D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("The size of the box shape (if you set BoxCollider, this will be automatically overwritten)")]
	public Vector3 Size;

	[Token(Token = "0x4001D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Matrix4x4 cachedMatrix;

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x1BBC86C", Offset = "0x1BBC86C", VA = "0x1BBC86C")]
	public void RebuildMatrix()
	{
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x1BBCA60", Offset = "0x1BBCA60", VA = "0x1BBCA60", Slot = "8")]
	public override bool LocalPointInShape(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x1BBCAF4", Offset = "0x1BBCAF4", VA = "0x1BBCAF4", Slot = "9")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x1BBCB4C", Offset = "0x1BBCB4C", VA = "0x1BBCB4C", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x1BBCD24", Offset = "0x1BBCD24", VA = "0x1BBCD24")]
	private void UpdateFields()
	{
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x1BBCAB0", Offset = "0x1BBCAB0", VA = "0x1BBCAB0")]
	private bool LocalPointInBox(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x1BBCDC0", Offset = "0x1BBCDC0", VA = "0x1BBCDC0")]
	private Vector3 SnapLocalPoint(Vector3 localPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0x1BBD0A8", Offset = "0x1BBD0A8", VA = "0x1BBD0A8")]
	private Vector3 ClipLocalPoint(Vector3 localPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0x1BBD184", Offset = "0x1BBD184", VA = "0x1BBD184")]
	public VA_Box()
	{
	}
}
[Token(Token = "0x2000425")]
[ExecuteInEditMode]
[AddComponentMenu("Volumetric Audio/VA Capsule")]
public class VA_Capsule : VA_VolumetricShape
{
	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("If you set this, then all shape settings will automatically be copied from the collider")]
	public CapsuleCollider CapsuleCollider;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The center of the capsule shape (if you set CapsuleCollider, this will be automatically overwritten)")]
	public Vector3 Center;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("The radius of the capsule shape (if you set CapsuleCollider, this will be automatically overwritten)")]
	public float Radius;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("The height of the capsule shape (if you set CapsuleCollider, this will be automatically overwritten)")]
	public float Height;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("The direction of the capsule shape (if you set CapsuleCollider, this will be automatically overwritten)")]
	[VA_Popup(new string[] { "X-Axis", "Y-Axis", "Z-Axis" })]
	public int Direction;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Quaternion RotationX;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Quaternion RotationY;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Quaternion RotationZ;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Matrix4x4 cachedMatrix;

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0x1BBD234", Offset = "0x1BBD234", VA = "0x1BBD234")]
	public void RebuildMatrix()
	{
	}

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0x1BBD520", Offset = "0x1BBD520", VA = "0x1BBD520", Slot = "8")]
	public override bool LocalPointInShape(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x1BBD594", Offset = "0x1BBD594", VA = "0x1BBD594", Slot = "9")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x1BBD5EC", Offset = "0x1BBD5EC", VA = "0x1BBD5EC", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x1BBD80C", Offset = "0x1BBD80C", VA = "0x1BBD80C")]
	private void UpdateFields()
	{
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x1BBD53C", Offset = "0x1BBD53C", VA = "0x1BBD53C")]
	private bool LocalPointInCapsule(Vector3 localPoint, float halfHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x1BBD940", Offset = "0x1BBD940", VA = "0x1BBD940")]
	private Vector3 SnapLocalPoint(Vector3 localPoint, float halfHeight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x1BBDBC4", Offset = "0x1BBDBC4", VA = "0x1BBDBC4")]
	public VA_Capsule()
	{
	}
}
[Token(Token = "0x2000426")]
public static class VA_Helper
{
	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MeshVertexLimit;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AudioListener cachedAudioListener;

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x1BBC038", Offset = "0x1BBC038", VA = "0x1BBC038")]
	public static bool GetListenerPosition(ref Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0x1BBAE78", Offset = "0x1BBAE78", VA = "0x1BBAE78")]
	public static Camera GetCamera([Optional] Camera camera)
	{
		return null;
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0x1BBB008", Offset = "0x1BBB008", VA = "0x1BBB008")]
	public static Vector2 SinCos(float a)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0x1BBB088", Offset = "0x1BBB088", VA = "0x1BBB088")]
	public static void Destroy(UnityEngine.Object o)
	{
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0x1BBC250", Offset = "0x1BBC250", VA = "0x1BBC250")]
	public static bool Enabled(Behaviour b)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x1BBD8CC", Offset = "0x1BBD8CC", VA = "0x1BBD8CC")]
	public static float Divide(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x1BBD110", Offset = "0x1BBD110", VA = "0x1BBD110")]
	public static float Reciprocal(float v)
	{
		return default(float);
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x1BBDD10", Offset = "0x1BBDD10", VA = "0x1BBDD10")]
	public static bool Zero(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x1BBC998", Offset = "0x1BBC998", VA = "0x1BBC998")]
	public static void MatrixTrs(Vector3 t, Quaternion q, Vector3 s, ref Matrix4x4 m)
	{
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x1BBDD90", Offset = "0x1BBDD90", VA = "0x1BBDD90")]
	public static Matrix4x4 RotationMatrix(Quaternion q)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x1BBDE84", Offset = "0x1BBDE84", VA = "0x1BBDE84")]
	public static Matrix4x4 TranslationMatrix(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x1BBDF40", Offset = "0x1BBDF40", VA = "0x1BBDF40")]
	public static Matrix4x4 TranslationMatrix(float x, float y, float z)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x1BBDFC4", Offset = "0x1BBDFC4", VA = "0x1BBDFC4")]
	public static Matrix4x4 ScalingMatrix(float xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x1BBE11C", Offset = "0x1BBE11C", VA = "0x1BBE11C")]
	public static Matrix4x4 ScalingMatrix(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x1BBE04C", Offset = "0x1BBE04C", VA = "0x1BBE04C")]
	public static Matrix4x4 ScalingMatrix(float x, float y, float z)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0x1BBE1B4", Offset = "0x1BBE1B4", VA = "0x1BBE1B4")]
	public static float DampenFactor(float dampening, float elapsed)
	{
		return default(float);
	}

	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0x1BBE1D8", Offset = "0x1BBE1D8", VA = "0x1BBE1D8")]
	public static Quaternion Dampen(Quaternion current, Quaternion target, float dampening, float elapsed, float minStep = 0f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BDC")]
	[Address(RVA = "0x1BBC3A0", Offset = "0x1BBC3A0", VA = "0x1BBC3A0")]
	public static float Dampen(float current, float target, float dampening, float elapsed, float minStep = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6001BDD")]
	[Address(RVA = "0x1BBA880", Offset = "0x1BBA880", VA = "0x1BBA880")]
	public static Vector3 Dampen3(Vector3 current, Vector3 target, float dampening, float elapsed, float minStep = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x1BBE32C", Offset = "0x1BBE32C", VA = "0x1BBE32C")]
	public static Quaternion MoveTowards(Quaternion current, Quaternion target, float maxDelta)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0x1BBE448", Offset = "0x1BBE448", VA = "0x1BBE448")]
	public static float MoveTowards(float current, float target, float maxDelta)
	{
		return default(float);
	}

	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0x1BBE4E4", Offset = "0x1BBE4E4", VA = "0x1BBE4E4")]
	public static Vector3 ClosestPointToLineSegment(Vector3 a, Vector3 b, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x1BBE674", Offset = "0x1BBE674", VA = "0x1BBE674")]
	public static bool PointLeftOfLine(Vector2 a, Vector2 b, Vector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x1BBE69C", Offset = "0x1BBE69C", VA = "0x1BBE69C")]
	public static bool PointLeftOfLine(float ax, float ay, float bx, float by, float px, float py)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x1BBE6C4", Offset = "0x1BBE6C4", VA = "0x1BBE6C4")]
	public static bool PointRightOfLine(Vector2 a, Vector2 b, Vector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x1BBE6EC", Offset = "0x1BBE6EC", VA = "0x1BBE6EC")]
	public static Vector2 VectorXY(Vector3 xyz)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x2000427")]
public class VA_Material : MonoBehaviour
{
	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Tooltip("The volume multiplier when this material is blocking the VA_AudioSource")]
	public float OcclusionVolume;

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x1BBE73C", Offset = "0x1BBE73C", VA = "0x1BBE73C")]
	public VA_Material()
	{
	}
}
[Token(Token = "0x2000428")]
[AddComponentMenu("Volumetric Audio/VA Mesh")]
[ExecuteInEditMode]
public class VA_Mesh : VA_VolumetricShape
{
	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("If you set this, then all shape settings will automatically be copied from the collider")]
	public MeshCollider MeshCollider;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("If you set this, then all shape settings will automatically be copied from the collider")]
	public MeshFilter MeshFilter;

	[Token(Token = "0x4001D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("The mesh of the mesh shape (if you set MeshCollider or MeshFilter, this will be automatically overwritten)")]
	public Mesh Mesh;

	[Token(Token = "0x4001D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("The interval between each mesh update in seconds (-1 = no updates)")]
	public float MeshUpdateInterval;

	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("How far apart each volume checking ray should be separated to avoid miscalculations. This value should be based on the size of your mesh, but be kept quite low")]
	public float RaySeparation;

	[Token(Token = "0x4001D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private VA_MeshTree tree;

	[NonSerialized]
	[Token(Token = "0x4001D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VA_MeshLinear linear;

	[NonSerialized]
	[Token(Token = "0x4001D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float meshUpdateCooldown;

	[Token(Token = "0x17000349")]
	public bool IsBaked
	{
		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1BBE750", Offset = "0x1BBE750", VA = "0x1BBE750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x1BBE7AC", Offset = "0x1BBE7AC", VA = "0x1BBE7AC")]
	public void ClearBake()
	{
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x1BBE864", Offset = "0x1BBE864", VA = "0x1BBE864")]
	public void Bake()
	{
	}

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x1BBEB88", Offset = "0x1BBEB88", VA = "0x1BBEB88", Slot = "8")]
	public override bool LocalPointInShape(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x1BBECF0", Offset = "0x1BBECF0", VA = "0x1BBECF0", Slot = "9")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x1BBED88", Offset = "0x1BBED88", VA = "0x1BBED88", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001BED")]
	[Address(RVA = "0x1BBF370", Offset = "0x1BBF370", VA = "0x1BBF370")]
	private Vector3 FindClosestLocalPoint(Vector3 localPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x1BBF29C", Offset = "0x1BBF29C", VA = "0x1BBF29C")]
	private void UpdateFields()
	{
	}

	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x1BBF840", Offset = "0x1BBF840", VA = "0x1BBF840")]
	private int RaycastHitCount(Vector3 origin, Vector3 direction, float separation)
	{
		return default(int);
	}

	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x1BBEBF4", Offset = "0x1BBEBF4", VA = "0x1BBEBF4")]
	private bool PointInMesh(Vector3 localPoint, Vector3 worldPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0x1BBF36C", Offset = "0x1BBF36C", VA = "0x1BBF36C")]
	private Vector3 SnapLocalPoint(Vector3 localPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x1BBFB88", Offset = "0x1BBFB88", VA = "0x1BBFB88")]
	public VA_Mesh()
	{
	}
}
[Token(Token = "0x2000429")]
public class VA_MeshLinear
{
	[Token(Token = "0x4001D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<VA_Triangle> triangles;

	[Token(Token = "0x1700034A")]
	public bool HasTriangles
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1BBF6C8", Offset = "0x1BBF6C8", VA = "0x1BBF6C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0x1BBEB1C", Offset = "0x1BBEB1C", VA = "0x1BBEB1C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0x1BBF00C", Offset = "0x1BBF00C", VA = "0x1BBF00C")]
	public void Update(Mesh mesh)
	{
	}

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0x1BBF71C", Offset = "0x1BBF71C", VA = "0x1BBF71C")]
	public Vector3 FindClosestPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0x1BBFB9C", Offset = "0x1BBFB9C", VA = "0x1BBFB9C")]
	private VA_Triangle GetTriangle(int triangleCount)
	{
		return null;
	}

	[Token(Token = "0x6001BF8")]
	[Address(RVA = "0x1BBF6C0", Offset = "0x1BBF6C0", VA = "0x1BBF6C0")]
	public VA_MeshLinear()
	{
	}
}
[Serializable]
[Token(Token = "0x200042A")]
public class VA_MeshTree
{
	[Serializable]
	[Token(Token = "0x200042B")]
	public class Node
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds Bound;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int PositiveIndex;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int NegativeIndex;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TriangleIndex;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int TriangleCount;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1BC002C", Offset = "0x1BC002C", VA = "0x1BC002C")]
		public Node()
		{
		}
	}

	[Token(Token = "0x4001D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Node> Nodes;

	[Token(Token = "0x4001D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<VA_Triangle> Triangles;

	[Token(Token = "0x4001D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<VA_Triangle> searchResults;

	[Token(Token = "0x4001D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float searchRange;

	[Token(Token = "0x4001D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float searchMaximum;

	[Token(Token = "0x4001D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 searchPoint;

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0x1BBE7BC", Offset = "0x1BBE7BC", VA = "0x1BBE7BC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x1BBE9D4", Offset = "0x1BBE9D4", VA = "0x1BBE9D4")]
	public void Update(Mesh mesh)
	{
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x1BBF4A4", Offset = "0x1BBF4A4", VA = "0x1BBF4A4")]
	public Vector3 FindClosestPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x1BC0C78", Offset = "0x1BC0C78", VA = "0x1BC0C78")]
	private void Search(Node node)
	{
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x1BC0F8C", Offset = "0x1BC0F8C", VA = "0x1BC0F8C")]
	private float MaximumDistance(Vector3 min, Vector3 max)
	{
		return default(float);
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0x1BC10A0", Offset = "0x1BC10A0", VA = "0x1BC10A0")]
	private static void FarSqrDistance(float x, float y, float z)
	{
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x1BC0E50", Offset = "0x1BC0E50", VA = "0x1BC0E50")]
	private void AddToResults(Node node)
	{
	}

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0x1BC0034", Offset = "0x1BC0034", VA = "0x1BC0034")]
	private List<VA_Triangle> GetAllTriangles(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x1BC02BC", Offset = "0x1BC02BC", VA = "0x1BC02BC")]
	private void Pack(Node node, List<VA_Triangle> tris)
	{
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x1BC115C", Offset = "0x1BC115C", VA = "0x1BC115C")]
	private void CalculateBound(Node node, List<VA_Triangle> tris)
	{
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x1BC138C", Offset = "0x1BC138C", VA = "0x1BC138C")]
	private void CalculateAxisAndPivot(List<VA_Triangle> tris, ref int axis, ref float pivot)
	{
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x1BBE8FC", Offset = "0x1BBE8FC", VA = "0x1BBE8FC")]
	public VA_MeshTree()
	{
	}
}
[Token(Token = "0x200042C")]
[ExecuteInEditMode]
[AddComponentMenu("Volumetric Audio/VA Path")]
public class VA_Path : VA_Shape
{
	[Token(Token = "0x4001D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The local space points for the path")]
	public List<Vector3> Points;

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x1BC1868", Offset = "0x1BC1868", VA = "0x1BC1868", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x1BC1ACC", Offset = "0x1BC1ACC", VA = "0x1BC1ACC")]
	public VA_Path()
	{
	}
}
[Serializable]
[Token(Token = "0x200042D")]
public class VA_Plane
{
	[Token(Token = "0x4001D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Normal;

	[Token(Token = "0x4001D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Distance;

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x1BC1B5C", Offset = "0x1BC1B5C", VA = "0x1BC1B5C")]
	public VA_Plane(Vector3 a, Vector3 b, Vector3 c)
	{
	}

	[Token(Token = "0x6001C0A")]
	[Address(RVA = "0x1BC1CE0", Offset = "0x1BC1CE0", VA = "0x1BC1CE0")]
	public bool SideOf(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x1BC1D0C", Offset = "0x1BC1D0C", VA = "0x1BC1D0C")]
	public float DistanceTo(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x1BC1D30", Offset = "0x1BC1D30", VA = "0x1BC1D30")]
	public Vector3 ClosestTo(Vector3 p)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200042E")]
public class VA_PopupAttribute : PropertyAttribute
{
	[Token(Token = "0x4001D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] Names;

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x1BC1D6C", Offset = "0x1BC1D6C", VA = "0x1BC1D6C")]
	public VA_PopupAttribute(params string[] newNames)
	{
	}
}
[Token(Token = "0x200042F")]
public abstract class VA_Shape : MonoBehaviour
{
	[Token(Token = "0x4001D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OuterPointSet;

	[Token(Token = "0x4001D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 OuterPoint;

	[Token(Token = "0x4001D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OuterPointDistance;

	[Token(Token = "0x1700034B")]
	public virtual bool FinalPointSet
	{
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x1BC1D9C", Offset = "0x1BC1D9C", VA = "0x1BC1D9C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700034C")]
	public virtual Vector3 FinalPoint
	{
		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1BC1DA4", Offset = "0x1BC1DA4", VA = "0x1BC1DA4", Slot = "5")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700034D")]
	public virtual float FinalPointDistance
	{
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1BC1DB0", Offset = "0x1BC1DB0", VA = "0x1BC1DB0", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x1BBCE8C", Offset = "0x1BBCE8C", VA = "0x1BBCE8C")]
	public void SetOuterPoint(Vector3 newOuterPoint)
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x1BC1AC4", Offset = "0x1BC1AC4", VA = "0x1BC1AC4", Slot = "7")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x1BC1B54", Offset = "0x1BC1B54", VA = "0x1BC1B54")]
	protected VA_Shape()
	{
	}
}
[Token(Token = "0x2000430")]
[AddComponentMenu("Volumetric Audio/VA Sphere")]
[ExecuteInEditMode]
public class VA_Sphere : VA_VolumetricShape
{
	[Token(Token = "0x4001D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("If you set this, then all shape settings will automatically be copied from the collider")]
	public SphereCollider SphereCollider;

	[Token(Token = "0x4001D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The center of the sphere shape (if you set SphereCollider, this will be automatically overwritten)")]
	public Vector3 Center;

	[Token(Token = "0x4001D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("The radius of the sphere shape (if you set SphereCollider, this will be automatically overwritten)")]
	public float Radius;

	[Token(Token = "0x4001D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Matrix4x4 cachedMatrix;

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x1BC1DB8", Offset = "0x1BC1DB8", VA = "0x1BC1DB8")]
	public void RebuildMatrix()
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0x1BC1EE0", Offset = "0x1BC1EE0", VA = "0x1BC1EE0", Slot = "8")]
	public override bool LocalPointInShape(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x1BC1F30", Offset = "0x1BC1F30", VA = "0x1BC1F30", Slot = "9")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x1BC1F88", Offset = "0x1BC1F88", VA = "0x1BC1F88", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x1BC2140", Offset = "0x1BC2140", VA = "0x1BC2140")]
	private void UpdateFields()
	{
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0x1BC1F08", Offset = "0x1BC1F08", VA = "0x1BC1F08")]
	private bool LocalPointInSphere(Vector3 localPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0x1BC21D8", Offset = "0x1BC21D8", VA = "0x1BC21D8")]
	private Vector3 SnapLocalPoint(Vector3 localPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x1BC22C4", Offset = "0x1BC22C4", VA = "0x1BC22C4")]
	public VA_Sphere()
	{
	}
}
[Serializable]
[Token(Token = "0x2000431")]
public class VA_Triangle
{
	[Token(Token = "0x4001D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 A;

	[Token(Token = "0x4001D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 B;

	[Token(Token = "0x4001D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 C;

	[Token(Token = "0x4001D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VA_Plane PlaneABC;

	[Token(Token = "0x4001D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VA_Plane PlaneAB;

	[Token(Token = "0x4001D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VA_Plane PlaneBC;

	[Token(Token = "0x4001D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VA_Plane PlaneCA;

	[Token(Token = "0x1700034E")]
	public Vector3 Min
	{
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1BC1740", Offset = "0x1BC1740", VA = "0x1BC1740")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700034F")]
	public Vector3 Max
	{
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1BC1788", Offset = "0x1BC1788", VA = "0x1BC1788")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000350")]
	public float MidX
	{
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1BC16E0", Offset = "0x1BC16E0", VA = "0x1BC16E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000351")]
	public float MidY
	{
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1BC1700", Offset = "0x1BC1700", VA = "0x1BC1700")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000352")]
	public float MidZ
	{
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1BC1720", Offset = "0x1BC1720", VA = "0x1BC1720")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x1BBFCC4", Offset = "0x1BBFCC4", VA = "0x1BBFCC4")]
	public void CalculatePlanes()
	{
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x1BBFEF0", Offset = "0x1BBFEF0", VA = "0x1BBFEF0")]
	public Vector3 ClosestTo(Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x1BC232C", Offset = "0x1BC232C", VA = "0x1BC232C")]
	private Vector3 ClosestPointToLineSegment(Vector3 a, Vector3 b, Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x1BC0024", Offset = "0x1BC0024", VA = "0x1BC0024")]
	public VA_Triangle()
	{
	}
}
[Token(Token = "0x2000432")]
public abstract class VA_VolumetricShape : VA_Shape
{
	[Token(Token = "0x4001D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("If you set this, then sound will only emit from the thin shell around the shape, else it will emit from inside too")]
	public bool IsHollow;

	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool InnerPointSet;

	[Token(Token = "0x4001D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 InnerPoint;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float InnerPointDistance;

	[Token(Token = "0x4001D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool InnerPointInside;

	[Token(Token = "0x17000353")]
	public override bool FinalPointSet
	{
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1BC23BC", Offset = "0x1BC23BC", VA = "0x1BC23BC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000354")]
	public override Vector3 FinalPoint
	{
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1BC23D8", Offset = "0x1BC23D8", VA = "0x1BC23D8", Slot = "5")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000355")]
	public override float FinalPointDistance
	{
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1BC2414", Offset = "0x1BC2414", VA = "0x1BC2414", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001C28")]
	[Address(RVA = "0x1BC2430", Offset = "0x1BC2430", VA = "0x1BC2430")]
	public bool PointInShape(Vector3 worldPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C29")]
	public abstract bool LocalPointInShape(Vector3 localPoint);

	[Token(Token = "0x6001C2A")]
	[Address(RVA = "0x1BBCF90", Offset = "0x1BBCF90", VA = "0x1BBCF90")]
	public void SetInnerPoint(Vector3 newInnerPoint, bool inside)
	{
	}

	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0x1BBD0CC", Offset = "0x1BBD0CC", VA = "0x1BBD0CC")]
	public void SetInnerOuterPoint(Vector3 newInnerOuterPoint, bool inside)
	{
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0x1BBCD18", Offset = "0x1BBCD18", VA = "0x1BBCD18", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0x1BBD22C", Offset = "0x1BBD22C", VA = "0x1BBD22C")]
	protected VA_VolumetricShape()
	{
	}
}
[Token(Token = "0x2000433")]
[AddComponentMenu("Volumetric Audio/VA Zone")]
[ExecuteInEditMode]
public class VA_Zone : MonoBehaviour
{
	[Token(Token = "0x4001D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The radius of this zone")]
	public float Radius;

	[Token(Token = "0x4001D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Should the ")]
	public bool DeactivateGameObjects;

	[Token(Token = "0x4001D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("The speed at which the volume changes")]
	public float VolumeDampening;

	[Token(Token = "0x4001D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Volume;

	[Token(Token = "0x4001D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The audio sources this zone is associated with")]
	public List<VA_AudioSource> AudioSources;

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x1BC248C", Offset = "0x1BC248C", VA = "0x1BC248C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x1BC2760", Offset = "0x1BC2760", VA = "0x1BC2760")]
	public VA_Zone()
	{
	}
}
[Token(Token = "0x2000434")]
public class BatteryLevelUI : MonoBehaviour
{
	[Token(Token = "0x2000435")]
	[CompilerGenerated]
	private sealed class <UpdateUI>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatteryLevelUI <>4__this;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x17000356")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x1BC29E0", Offset = "0x1BC29E0", VA = "0x1BC29E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x1BC2A28", Offset = "0x1BC2A28", VA = "0x1BC2A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x1BC28C0", Offset = "0x1BC28C0", VA = "0x1BC28C0")]
		[DebuggerHidden]
		public <UpdateUI>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1BC28F0", Offset = "0x1BC28F0", VA = "0x1BC28F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1BC28F4", Offset = "0x1BC28F4", VA = "0x1BC28F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1BC29E8", Offset = "0x1BC29E8", VA = "0x1BC29E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider slider;

	[Token(Token = "0x4001D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private YawController yawController;

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x1BC2778", Offset = "0x1BC2778", VA = "0x1BC2778")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x1BC27D0", Offset = "0x1BC27D0", VA = "0x1BC27D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x1BC284C", Offset = "0x1BC284C", VA = "0x1BC284C")]
	[IteratorStateMachine(typeof(<UpdateUI>d__4))]
	private IEnumerator UpdateUI()
	{
		return null;
	}

	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x1BC28E8", Offset = "0x1BC28E8", VA = "0x1BC28E8")]
	public BatteryLevelUI()
	{
	}
}
[Token(Token = "0x2000436")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4001D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color stoppedColor;

	[Token(Token = "0x4001D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color startedColor;

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x1BC2A30", Offset = "0x1BC2A30", VA = "0x1BC2A30")]
	public void StateChanged(DeviceState state)
	{
	}

	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0x1BC2B18", Offset = "0x1BC2B18", VA = "0x1BC2B18")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x2000437")]
public class SimpleOrientationCopy : MonoBehaviour
{
	[Token(Token = "0x4001D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YawController yawController;

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0x1BC2B20", Offset = "0x1BC2B20", VA = "0x1BC2B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x1BC2B84", Offset = "0x1BC2B84", VA = "0x1BC2B84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0x1BC2BC0", Offset = "0x1BC2BC0", VA = "0x1BC2BC0")]
	public SimpleOrientationCopy()
	{
	}
}
[Token(Token = "0x2000438")]
[RequireComponent(typeof(Rigidbody))]
public class VelocityController : MonoBehaviour
{
	[Token(Token = "0x4001D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YawController yawController;

	[Token(Token = "0x4001D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rigid;

	[Token(Token = "0x4001D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 multiplier;

	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0x1BC2BC8", Offset = "0x1BC2BC8", VA = "0x1BC2BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x1BC2C20", Offset = "0x1BC2C20", VA = "0x1BC2C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x1BC2C84", Offset = "0x1BC2C84", VA = "0x1BC2C84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x1BC2CFC", Offset = "0x1BC2CFC", VA = "0x1BC2CFC")]
	public VelocityController()
	{
	}
}
[Token(Token = "0x2000439")]
public class ActionBus : MonoBehaviour
{
	[Token(Token = "0x4001D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Queue<Action> actionQueue;

	[Token(Token = "0x4001D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ActionBus instance;

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x1BC2D18", Offset = "0x1BC2D18", VA = "0x1BC2D18")]
	public static ActionBus Instance()
	{
		return null;
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x1BC2E14", Offset = "0x1BC2E14", VA = "0x1BC2E14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x1BC2ED8", Offset = "0x1BC2ED8", VA = "0x1BC2ED8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x1BC2F34", Offset = "0x1BC2F34", VA = "0x1BC2F34")]
	public void Update()
	{
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x1BC30D8", Offset = "0x1BC30D8", VA = "0x1BC30D8")]
	public void Add(Action action)
	{
	}

	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x1BC3218", Offset = "0x1BC3218", VA = "0x1BC3218")]
	public ActionBus()
	{
	}
}
[Token(Token = "0x200043A")]
public class Orientation : MonoBehaviour
{
	[Token(Token = "0x17000358")]
	private Vector3 pitchYawRoll
	{
		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1BC32CC", Offset = "0x1BC32CC", VA = "0x1BC32CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1BC356C", Offset = "0x1BC356C", VA = "0x1BC356C")]
		set
		{
		}
	}

	[Token(Token = "0x17000359")]
	public float pitch
	{
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1BC330C", Offset = "0x1BC330C", VA = "0x1BC330C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1BC3770", Offset = "0x1BC3770", VA = "0x1BC3770")]
		set
		{
		}
	}

	[Token(Token = "0x1700035A")]
	public float yaw
	{
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1BC3354", Offset = "0x1BC3354", VA = "0x1BC3354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1BC3914", Offset = "0x1BC3914", VA = "0x1BC3914")]
		set
		{
		}
	}

	[Token(Token = "0x1700035B")]
	public float roll
	{
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1BC3524", Offset = "0x1BC3524", VA = "0x1BC3524")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x1BC3950", Offset = "0x1BC3950", VA = "0x1BC3950")]
		set
		{
		}
	}

	[Token(Token = "0x1700035C")]
	public float attitude
	{
		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1BC398C", Offset = "0x1BC398C", VA = "0x1BC398C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1BC3990", Offset = "0x1BC3990", VA = "0x1BC3990")]
		set
		{
		}
	}

	[Token(Token = "0x1700035D")]
	public float heading
	{
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1BC3994", Offset = "0x1BC3994", VA = "0x1BC3994")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1BC3998", Offset = "0x1BC3998", VA = "0x1BC3998")]
		set
		{
		}
	}

	[Token(Token = "0x1700035E")]
	public float bank
	{
		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1BC399C", Offset = "0x1BC399C", VA = "0x1BC399C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1BC39A0", Offset = "0x1BC39A0", VA = "0x1BC39A0")]
		set
		{
		}
	}

	[Token(Token = "0x6001C58")]
	[Address(RVA = "0x1BC37B4", Offset = "0x1BC37B4", VA = "0x1BC37B4")]
	private float EvalAltYaw()
	{
		return default(float);
	}

	[Token(Token = "0x6001C59")]
	[Address(RVA = "0x1BC37AC", Offset = "0x1BC37AC", VA = "0x1BC37AC")]
	private Vector3 Ground(Vector3 u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0x1BC3750", Offset = "0x1BC3750", VA = "0x1BC3750")]
	private float UnaryTrim(float w)
	{
		return default(float);
	}

	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0x1BC39A4", Offset = "0x1BC39A4", VA = "0x1BC39A4")]
	public Orientation()
	{
	}
}
[Serializable]
[Token(Token = "0x200043B")]
[Flags]
public enum CartsType
{
	[Token(Token = "0x4001D9D")]
	Original = 1,
	[Token(Token = "0x4001D9E")]
	NotOriginal = 2
}
[Token(Token = "0x200043C")]
public enum CartType
{
	[Token(Token = "0x4001DA0")]
	ORIGINAL,
	[Token(Token = "0x4001DA1")]
	NOT_ORIGINAL,
	[Token(Token = "0x4001DA2")]
	BOTH
}
[Serializable]
[Token(Token = "0x200043D")]
[Flags]
public enum GameModeType
{
	[Token(Token = "0x4001DA4")]
	Classic = 1,
	[Token(Token = "0x4001DA5")]
	Race = 2,
	[Token(Token = "0x4001DA6")]
	Shooter = 4
}
[Token(Token = "0x200043E")]
public enum CoasterType
{
	[Token(Token = "0x4001DA8")]
	RACE,
	[Token(Token = "0x4001DA9")]
	CASUAL,
	[Token(Token = "0x4001DAA")]
	ALL,
	[Token(Token = "0x4001DAB")]
	SHOOTER,
	[Token(Token = "0x4001DAC")]
	NONE
}
[Token(Token = "0x200043F")]
public class DreamTrack : MonoBehaviour
{
	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Quality;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZenFulcrum.Track.Track track;

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x1BC39AC", Offset = "0x1BC39AC", VA = "0x1BC39AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x1BC3A04", Offset = "0x1BC3A04", VA = "0x1BC3A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x1BC3C40", Offset = "0x1BC3C40", VA = "0x1BC3C40")]
	public DreamTrack()
	{
	}
}
[Token(Token = "0x2000440")]
[ExecuteInEditMode]
public class FixTrackSiblings : MonoBehaviour
{
	[Token(Token = "0x4001DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ZenFulcrum.Track.Track startedTrack;

	[Token(Token = "0x4001DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZenFulcrum.Track.Track FirstTrack;

	[Token(Token = "0x4001DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseNextTrackAfterJump;

	[Token(Token = "0x4001DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Space(15f)]
	public bool Run;

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x1BC3C50", Offset = "0x1BC3C50", VA = "0x1BC3C50")]
	public FixTrackSiblings()
	{
	}
}
[Token(Token = "0x2000441")]
public class TrackColors : MonoBehaviour
{
	[Token(Token = "0x4001DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color1R;

	[Token(Token = "0x4001DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color Color2G;

	[Token(Token = "0x4001DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color Color3B;

	[Token(Token = "0x4001DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color Color4A;

	[Token(Token = "0x4001DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MaterialPropertyBlock materialProps;

	[Token(Token = "0x4001DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int color1RShaderID;

	[Token(Token = "0x4001DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly int color2GShaderID;

	[Token(Token = "0x4001DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int color3BShaderID;

	[Token(Token = "0x4001DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private readonly int color4AShaderID;

	[Token(Token = "0x4001DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isUsingBakedTextures;

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x1BC3C58", Offset = "0x1BC3C58", VA = "0x1BC3C58")]
	public MaterialPropertyBlock GetMaterialProps()
	{
		return null;
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x1BC3CD0", Offset = "0x1BC3CD0", VA = "0x1BC3CD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C62")]
	[Address(RVA = "0x1BC3CF0", Offset = "0x1BC3CF0", VA = "0x1BC3CF0")]
	public void ApplyColors(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x1BC3E50", Offset = "0x1BC3E50", VA = "0x1BC3E50")]
	protected void ApplyColor(ref MaterialPropertyBlock materialProps)
	{
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0x1BC3EE0", Offset = "0x1BC3EE0", VA = "0x1BC3EE0")]
	public TrackColors()
	{
	}
}
[Token(Token = "0x2000442")]
public class TrackFollower : MonoBehaviour
{
	[Token(Token = "0x4001DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool ShouldDrawGizmos;

	[Token(Token = "0x4001DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool ShouldSnapOnTrack;

	[Token(Token = "0x4001DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public Color GizmoColor;

	[Token(Token = "0x4001DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public ZenFulcrum.Track.Track LastNearestTrack;

	[Token(Token = "0x4001DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool MoveChildren;

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0x1BC3FB4", Offset = "0x1BC3FB4", VA = "0x1BC3FB4")]
	public void SnapOnPath(Vector3 point)
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x1BC46C8", Offset = "0x1BC46C8", VA = "0x1BC46C8")]
	public void SnapOnPath(ZenFulcrum.Track.Track track, SimpleTransform result)
	{
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x1BC448C", Offset = "0x1BC448C", VA = "0x1BC448C")]
	public void SnapOnPath(ZenFulcrum.Track.Track track, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x1BC4784", Offset = "0x1BC4784", VA = "0x1BC4784")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack)
	{
		return null;
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x1BC42A0", Offset = "0x1BC42A0", VA = "0x1BC42A0")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0x1BC4034", Offset = "0x1BC4034", VA = "0x1BC4034")]
	public static ZenFulcrum.Track.Track FindNearestTrack(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0x1BC47B0", Offset = "0x1BC47B0", VA = "0x1BC47B0")]
	public TrackFollower()
	{
	}
}
[Token(Token = "0x2000443")]
[ExecuteInEditMode]
public class TrackObjectPositioner : MonoBehaviour
{
	[Token(Token = "0x4001DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectPrefab;

	[Token(Token = "0x4001DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZenFulcrum.Track.Track FirstTrack;

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ObjectInterval;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int TotalObjects;

	[Token(Token = "0x4001DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Offset;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Space]
	[Tooltip("WARNING! This action will lose all the previous changes on the TrackSupports")]
	public bool Spread;

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x1BC47D4", Offset = "0x1BC47D4", VA = "0x1BC47D4")]
	public TrackObjectPositioner()
	{
	}
}
[Token(Token = "0x2000444")]
public class FloatingTrackSupport : TrackFollower
{
	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] Joints;

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0x1B869CC", Offset = "0x1B869CC", VA = "0x1B869CC")]
	public void RotateJoints()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x1B86A74", Offset = "0x1B86A74", VA = "0x1B86A74")]
	public FloatingTrackSupport()
	{
	}
}
[Token(Token = "0x2000445")]
[ExecuteInEditMode]
public class FloatingTrackSupportManager : MonoBehaviour
{
	[Token(Token = "0x4001DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatingTrackSupport SupportPrefab;

	[Token(Token = "0x4001DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZenFulcrum.Track.Track FirstTrack;

	[Token(Token = "0x4001DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SupportInterval;

	[Token(Token = "0x4001DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("WARNING! This action will lose all the previous changes on the TrackSupports")]
	[Space]
	public bool Spread;

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x1B86A7C", Offset = "0x1B86A7C", VA = "0x1B86A7C")]
	public FloatingTrackSupportManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000446")]
[SelectionBase]
public class TrackSupport : MonoBehaviour
{
	[Token(Token = "0x4001DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color GizmoColor;

	[Token(Token = "0x4001DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RotateObject;

	[Token(Token = "0x4001DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ZenFulcrum.Track.Track LastNearestTrack;

	[Token(Token = "0x4001DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Pivot;

	[Token(Token = "0x4001DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackSupportType JointType;

	[Token(Token = "0x4001DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackSupportModel HeadPrefab;

	[Token(Token = "0x4001DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject PipePrefab;

	[Token(Token = "0x4001DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BasePrefab;

	[Token(Token = "0x4001DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject RingPrefab;

	[Token(Token = "0x4001DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrackSupportModel Joint22Prefab;

	[Token(Token = "0x4001DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrackSupportModel Joint45Prefab;

	[Token(Token = "0x4001DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TrackSupportModel Joint90Prefab;

	[Token(Token = "0x4001DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TrackSupportModel Joint180Prefab;

	[Token(Token = "0x4001DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TrackSupportModel JointDoublePrefab;

	[Token(Token = "0x4001DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TrackSupportModel JointDouble22Prefab;

	[Token(Token = "0x4001DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TrackSupportModel JointDouble45Prefab;

	[Token(Token = "0x4001DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TrackSupportModel JointDouble90Prefab;

	[Token(Token = "0x4001DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TrackSupportModel JointDouble180Prefab;

	[Token(Token = "0x4001DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool ScalePipes;

	[Token(Token = "0x4001DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float HeadRotation;

	[Token(Token = "0x4001DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float PipeRotation;

	[Token(Token = "0x4001DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float JointRotation;

	[Token(Token = "0x4001DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2 BaseOffset;

	[Token(Token = "0x4001DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector2 RingInterval;

	[Token(Token = "0x4001DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool MoveToSnappedTrackOnAwake;

	[Token(Token = "0x4001DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float PipeScaleToMaterialDefault;

	[Token(Token = "0x4001DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float PipeScaleToMaterialMedium;

	[Token(Token = "0x4001DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material PipeMaterialDefault;

	[Token(Token = "0x4001DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material PipeMaterialMedium;

	[Token(Token = "0x4001DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material PipeMaterialLarge;

	[Token(Token = "0x4001DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TrackSupportModel headObj;

	[Token(Token = "0x4001DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private TrackSupportModel jointObj;

	[Token(Token = "0x4001DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Transform[] pipesObj;

	[Token(Token = "0x4001DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Transform[] baseObj;

	[Token(Token = "0x4001DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform[] ringsObj0;

	[Token(Token = "0x4001DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform[] ringsObj1;

	[Token(Token = "0x4001DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private TrackSupportType lastJointType;

	[Token(Token = "0x1700035F")]
	public Transform[] Bases
	{
		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1B86A8C", Offset = "0x1B86A8C", VA = "0x1B86A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x1B86A94", Offset = "0x1B86A94", VA = "0x1B86A94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x1B86B94", Offset = "0x1B86B94", VA = "0x1B86B94", Slot = "4")]
	public virtual void SnapOnPath(Vector3 point)
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x1B870E8", Offset = "0x1B870E8", VA = "0x1B870E8")]
	public void SnapOnPath(ZenFulcrum.Track.Track track, SimpleTransform result)
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x1B87088", Offset = "0x1B87088", VA = "0x1B87088")]
	public void Rotate()
	{
	}

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x1B87230", Offset = "0x1B87230", VA = "0x1B87230")]
	public void RotatePipe()
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x1B870E4", Offset = "0x1B870E4", VA = "0x1B870E4")]
	public void Scale()
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x1B87234", Offset = "0x1B87234", VA = "0x1B87234")]
	private void SetMaterial(Renderer[] renderers, Material material)
	{
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x1B8729C", Offset = "0x1B8729C", VA = "0x1B8729C")]
	public void Rebuild(bool rebuildRings = false, bool rebuildHead = false)
	{
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x1B872A0", Offset = "0x1B872A0", VA = "0x1B872A0")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack)
	{
		return null;
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x1B86E9C", Offset = "0x1B86E9C", VA = "0x1B86E9C")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x1B86C34", Offset = "0x1B86C34", VA = "0x1B86C34")]
	public ZenFulcrum.Track.Track FindNearestTrack(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x1B877C8", Offset = "0x1B877C8", VA = "0x1B877C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x1B877CC", Offset = "0x1B877CC", VA = "0x1B877CC")]
	public TrackSupport()
	{
	}
}
[Serializable]
[Token(Token = "0x2000447")]
[SelectionBase]
public class TrackSupportCustom : TrackSupport
{
	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x1B87800", Offset = "0x1B87800", VA = "0x1B87800", Slot = "4")]
	public override void SnapOnPath(Vector3 point)
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x1B87804", Offset = "0x1B87804", VA = "0x1B87804")]
	public TrackSupportCustom()
	{
	}
}
[Token(Token = "0x2000448")]
[SelectionBase]
public class TrackSupportHelper : MonoBehaviour
{
	[Token(Token = "0x4001DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color GizmoColor;

	[Token(Token = "0x4001DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RotateObject;

	[Token(Token = "0x4001DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ZenFulcrum.Track.Track LastNearestTrack;

	[Token(Token = "0x4001DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ScaleChildren;

	[Token(Token = "0x4001DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Support;

	[Token(Token = "0x4001DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Base;

	[Token(Token = "0x4001DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Cano;

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x1B87838", Offset = "0x1B87838", VA = "0x1B87838")]
	public void SnapOnPath(Vector3 point)
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x1B880D0", Offset = "0x1B880D0", VA = "0x1B880D0")]
	public void SnapOnPath(ZenFulcrum.Track.Track track, SimpleTransform result)
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x1B87BB8", Offset = "0x1B87BB8", VA = "0x1B87BB8")]
	private void Scale()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x1B8817C", Offset = "0x1B8817C", VA = "0x1B8817C")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack)
	{
		return null;
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x1B87B0C", Offset = "0x1B87B0C", VA = "0x1B87B0C")]
	public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x1B878DC", Offset = "0x1B878DC", VA = "0x1B878DC")]
	public ZenFulcrum.Track.Track FindNearestTrack(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x1B881A8", Offset = "0x1B881A8", VA = "0x1B881A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x1B881AC", Offset = "0x1B881AC", VA = "0x1B881AC")]
	public TrackSupportHelper()
	{
	}
}
[Token(Token = "0x2000449")]
[ExecuteInEditMode]
public class TrackSupportManager : MonoBehaviour
{
	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackSupport SupportPrefab;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZenFulcrum.Track.Track FirstTrack;

	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SupportInterval;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Space]
	[Tooltip("WARNING! This action will lose all the previous changes on the TrackSupports")]
	public bool Spread;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[Tooltip("This action will only force the TrackSupports to be Rebuilt, no previous changes will be lost")]
	[Space]
	public bool Rebuild;

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x1B881C0", Offset = "0x1B881C0", VA = "0x1B881C0")]
	public TrackSupportManager()
	{
	}
}
[Token(Token = "0x200044A")]
public class TrackSupportModel : MonoBehaviour
{
	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackSupportType Type;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Joints;

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x1B881D0", Offset = "0x1B881D0", VA = "0x1B881D0")]
	public TrackSupportModel()
	{
	}
}
[Token(Token = "0x200044B")]
public enum TrackSupportType
{
	[Token(Token = "0x4001E01")]
	Straight = 0,
	[Token(Token = "0x4001E02")]
	Curve22 = 8,
	[Token(Token = "0x4001E03")]
	Curve45 = 1,
	[Token(Token = "0x4001E04")]
	Curve90 = 2,
	[Token(Token = "0x4001E05")]
	Curve180 = 3,
	[Token(Token = "0x4001E06")]
	DoubleStraight = 4,
	[Token(Token = "0x4001E07")]
	DoubleCurve22 = 9,
	[Token(Token = "0x4001E08")]
	DoubleCurve45 = 5,
	[Token(Token = "0x4001E09")]
	DoubleCurve90 = 6,
	[Token(Token = "0x4001E0A")]
	DoubleCurve180 = 7
}
namespace ZenFulcrum.Track
{
	[Serializable]
	[Token(Token = "0x200044C")]
	public class CartSoundClipInfo
	{
		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Clip to play")]
		public AudioClip clip;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[Tooltip("When the cart is moving at this fraction of maxSpeed, the clip will play at its natural pitch.")]
		public float referenceSpeedPercent;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("How much the pitch of this clip changes with cart speed.")]
		public float speedScale;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How loud this clip is in respect to cart speed.")]
		public AnimationCurve volumeVsSpeed;

		[NonSerialized]
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal AudioSource currentSource;

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x1B881D8", Offset = "0x1B881D8", VA = "0x1B881D8")]
		public CartSoundClipInfo()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1B88200", Offset = "0x1B88200", VA = "0x1B88200")]
		public void GenerateCurve()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1B88388", Offset = "0x1B88388", VA = "0x1B88388")]
		public static implicit operator bool(CartSoundClipInfo b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044D")]
	[RequireComponent(typeof(Rigidbody))]
	internal class CharacterRidesCart : MonoBehaviour
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Character controller for the user. If none is given it will be inferred from the main camera.")]
		public Transform character;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How close do we need to be to the cart to get in?")]
		public float enterDistance;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("When riding, where is the user's head positioned?")]
		public Vector3 headPosition;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("When exiting, how far from the cart should the character be positioned (relative to the cart)?")]
		public Vector3 exitOffset;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Input axis to listen for to get into the cart")]
		public string enterCartButton;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Input axis to listen for to get out of the cart")]
		public string exitCartButton;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("How strong is the cart's motor? (Track pieces can provide additional boots and brakes.)")]
		public float moveForce;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("How cast can the cart's motor go? (Track pieces can provide additional boots and brakes.)")]
		public float moveSpeed;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lookSpeed;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Camera camera;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Rigidbody rigidbody;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform normalCameraParent;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 normalHeadPosition;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool isInCart;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected List<MonoBehaviour> lookScripts;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float lookUpDown;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1B88394", Offset = "0x1B88394", VA = "0x1B88394")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1B887B8", Offset = "0x1B887B8", VA = "0x1B887B8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1B89008", Offset = "0x1B89008", VA = "0x1B89008")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1B88B9C", Offset = "0x1B88B9C", VA = "0x1B88B9C")]
		public void EnterCart()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1B88D8C", Offset = "0x1B88D8C", VA = "0x1B88D8C")]
		public void ExitCart()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1B89140", Offset = "0x1B89140", VA = "0x1B89140")]
		public CharacterRidesCart()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public static class ListExtensions
	{
		[Token(Token = "0x6001C97")]
		public static void EnsureSpace<T>(this List<T> list, int neededCount)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public class SimpleTransform
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SimpleTransform identity;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x17000360")]
		public Vector3 forward
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x1B89C60", Offset = "0x1B89C60", VA = "0x1B89C60")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000361")]
		public Vector3 backward
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x1B89CD0", Offset = "0x1B89CD0", VA = "0x1B89CD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000362")]
		public Vector3 up
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x1B89D40", Offset = "0x1B89D40", VA = "0x1B89D40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000363")]
		public Vector3 down
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x1B89DB0", Offset = "0x1B89DB0", VA = "0x1B89DB0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000364")]
		public Vector3 right
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x1B89E20", Offset = "0x1B89E20", VA = "0x1B89E20")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000365")]
		public Vector3 left
		{
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x1B89E90", Offset = "0x1B89E90", VA = "0x1B89E90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1B892E0", Offset = "0x1B892E0", VA = "0x1B892E0")]
		public SimpleTransform([Optional] Vector3 position, [Optional] Quaternion rotation)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1B89360", Offset = "0x1B89360", VA = "0x1B89360")]
		public SimpleTransform(SimpleTransform other)
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1B893A4", Offset = "0x1B893A4", VA = "0x1B893A4")]
		public SimpleTransform(Transform other)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1B893F8", Offset = "0x1B893F8", VA = "0x1B893F8")]
		public SimpleTransform Clone()
		{
			return null;
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1B89474", Offset = "0x1B89474", VA = "0x1B89474")]
		public SimpleTransform MakeValid()
		{
			return null;
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1B89808", Offset = "0x1B89808", VA = "0x1B89808")]
		public void ApplyTo(Transform t)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1B89850", Offset = "0x1B89850", VA = "0x1B89850")]
		public void SetIdentity()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1B898A8", Offset = "0x1B898A8", VA = "0x1B898A8")]
		public SimpleTransform AboutFace()
		{
			return null;
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1B8999C", Offset = "0x1B8999C", VA = "0x1B8999C")]
		public SimpleTransform AboutFaced()
		{
			return null;
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x1B89A18", Offset = "0x1B89A18", VA = "0x1B89A18")]
		public SimpleTransform Scale(Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1B89A38", Offset = "0x1B89A38", VA = "0x1B89A38")]
		public SimpleTransform Scaled(Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x1B871B0", Offset = "0x1B871B0", VA = "0x1B871B0")]
		public SimpleTransform LocalToAbsolute(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x1B89F00", Offset = "0x1B89F00", VA = "0x1B89F00", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x1B8A140", Offset = "0x1B8A140", VA = "0x1B8A140")]
		public static SimpleTransform Lerp(SimpleTransform a, SimpleTransform b, float percent)
		{
			return null;
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x1B8A258", Offset = "0x1B8A258", VA = "0x1B8A258")]
		public static Vector3 operator *(SimpleTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1B89AF0", Offset = "0x1B89AF0", VA = "0x1B89AF0")]
		public static SimpleTransform operator *(Transform a, SimpleTransform b)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1B8A2A0", Offset = "0x1B8A2A0", VA = "0x1B8A2A0")]
		public static SimpleTransform operator *(SimpleTransform a, Transform b)
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x1B8A424", Offset = "0x1B8A424", VA = "0x1B8A424")]
		public static SimpleTransform operator *(SimpleTransform a, SimpleTransform b)
		{
			return null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x1B8A574", Offset = "0x1B8A574", VA = "0x1B8A574")]
		public static bool operator ==(SimpleTransform a, SimpleTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x1B8A610", Offset = "0x1B8A610", VA = "0x1B8A610")]
		public static bool operator !=(SimpleTransform a, SimpleTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x1B8A680", Offset = "0x1B8A680", VA = "0x1B8A680")]
		public static implicit operator bool(SimpleTransform t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000451")]
	[RequireComponent(typeof(Track))]
	public class Station : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		[CompilerGenerated]
		private sealed class <WaitForCart>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Station <>4__this;

			[Token(Token = "0x17000366")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC8")]
				[Address(RVA = "0x1B8B71C", Offset = "0x1B8B71C", VA = "0x1B8B71C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000367")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCA")]
				[Address(RVA = "0x1B8B764", Offset = "0x1B8B764", VA = "0x1B8B764", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1B8AEE4", Offset = "0x1B8AEE4", VA = "0x1B8AEE4")]
			[DebuggerHidden]
			public <WaitForCart>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x1B8B534", Offset = "0x1B8B534", VA = "0x1B8B534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1B8B538", Offset = "0x1B8B538", VA = "0x1B8B538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x1B8B724", Offset = "0x1B8B724", VA = "0x1B8B724", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000453")]
		[CompilerGenerated]
		private sealed class <StopTheCart>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Station <>4__this;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Rigidbody <rb>5__2;

			[Token(Token = "0x17000368")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCE")]
				[Address(RVA = "0x1B8B970", Offset = "0x1B8B970", VA = "0x1B8B970", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000369")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD0")]
				[Address(RVA = "0x1B8B9B8", Offset = "0x1B8B9B8", VA = "0x1B8B9B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x1B8AF80", Offset = "0x1B8AF80", VA = "0x1B8AF80")]
			[DebuggerHidden]
			public <StopTheCart>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0x1B8B76C", Offset = "0x1B8B76C", VA = "0x1B8B76C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x1B8B770", Offset = "0x1B8B770", VA = "0x1B8B770", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x1B8B978", Offset = "0x1B8B978", VA = "0x1B8B978", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000454")]
		[CompilerGenerated]
		private sealed class <WaitForLoading>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Station <>4__this;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <_waitTime>5__2;

			[Token(Token = "0x1700036A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD4")]
				[Address(RVA = "0x1B8BB24", Offset = "0x1B8BB24", VA = "0x1B8BB24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD6")]
				[Address(RVA = "0x1B8BB6C", Offset = "0x1B8BB6C", VA = "0x1B8BB6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x1B8B01C", Offset = "0x1B8B01C", VA = "0x1B8B01C")]
			[DebuggerHidden]
			public <WaitForLoading>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0x1B8B9C0", Offset = "0x1B8B9C0", VA = "0x1B8B9C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x1B8B9C4", Offset = "0x1B8B9C4", VA = "0x1B8B9C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x1B8BB2C", Offset = "0x1B8BB2C", VA = "0x1B8BB2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000455")]
		[CompilerGenerated]
		private sealed class <StartTheCart>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Station <>4__this;

			[Token(Token = "0x1700036C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDA")]
				[Address(RVA = "0x1B8BCEC", Offset = "0x1B8BCEC", VA = "0x1B8BCEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDC")]
				[Address(RVA = "0x1B8BD34", Offset = "0x1B8BD34", VA = "0x1B8BD34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0x1B8B100", Offset = "0x1B8B100", VA = "0x1B8B100")]
			[DebuggerHidden]
			public <StartTheCart>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x1B8BB74", Offset = "0x1B8BB74", VA = "0x1B8BB74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x1B8BB78", Offset = "0x1B8BB78", VA = "0x1B8BB78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x1B8BCF4", Offset = "0x1B8BCF4", VA = "0x1B8BCF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("How long should we wait with a cart before sending it off, in seconds? Set to negative to never send it off automatically.")]
		public float waitTime;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackCart[] cartsToStop;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Track.SpeedAndForce startingForce;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Track.SpeedAndForce stoppingForce;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speedTolerance;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Track track;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TrackCart currentCart;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float waitStartTime;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool holdCart;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Player player;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audio;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly WaitForFixedUpdate fixedWait;

		[Token(Token = "0x1400002E")]
		public event Action<TrackCart> onCartArriving
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x1B8A714", Offset = "0x1B8A714", VA = "0x1B8A714")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1B8A7C4", Offset = "0x1B8A7C4", VA = "0x1B8A7C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<TrackCart> onCartArrived
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x1B8A874", Offset = "0x1B8A874", VA = "0x1B8A874")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1B8A924", Offset = "0x1B8A924", VA = "0x1B8A924")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<TrackCart> onCartLeaving
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1B8A9D4", Offset = "0x1B8A9D4", VA = "0x1B8A9D4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1B8AA84", Offset = "0x1B8AA84", VA = "0x1B8AA84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<TrackCart> onCartLeft
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x1B8AB34", Offset = "0x1B8AB34", VA = "0x1B8AB34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1B8ABE4", Offset = "0x1B8ABE4", VA = "0x1B8ABE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1B8AC94", Offset = "0x1B8AC94", VA = "0x1B8AC94")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1B8AE00", Offset = "0x1B8AE00", VA = "0x1B8AE00")]
		private bool VerifyCart()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1B8AD8C", Offset = "0x1B8AD8C", VA = "0x1B8AD8C")]
		[IteratorStateMachine(typeof(<WaitForCart>d__26))]
		private IEnumerator WaitForCart()
		{
			return null;
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1B8AF0C", Offset = "0x1B8AF0C", VA = "0x1B8AF0C")]
		[IteratorStateMachine(typeof(<StopTheCart>d__27))]
		private IEnumerator StopTheCart()
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x1B8AFA8", Offset = "0x1B8AFA8", VA = "0x1B8AFA8")]
		[IteratorStateMachine(typeof(<WaitForLoading>d__28))]
		private IEnumerator WaitForLoading()
		{
			return null;
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x1B8B044", Offset = "0x1B8B044", VA = "0x1B8B044")]
		public void Send()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x1B8B08C", Offset = "0x1B8B08C", VA = "0x1B8B08C")]
		[IteratorStateMachine(typeof(<StartTheCart>d__30))]
		private IEnumerator StartTheCart()
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x1B8B128", Offset = "0x1B8B128", VA = "0x1B8B128")]
		private void CloseBars()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x1B8B1A8", Offset = "0x1B8B1A8", VA = "0x1B8B1A8")]
		public Station()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[SelectionBase]
	[ExecuteInEditMode]
	public class Track : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		public enum EndOfLineBehavior
		{
			[Token(Token = "0x4001E75")]
			FallOffTrack,
			[Token(Token = "0x4001E76")]
			ContinueStraight,
			[Token(Token = "0x4001E77")]
			EndStop
		}

		[Serializable]
		[Token(Token = "0x2000459")]
		public class SpeedAndForce
		{
			[Token(Token = "0x200045A")]
			public enum ActDirection
			{
				[Token(Token = "0x4001E7C")]
				Both,
				[Token(Token = "0x4001E7D")]
				Forward,
				[Token(Token = "0x4001E7E")]
				Backward
			}

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float targetSpeed;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxForce;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ActDirection direction;

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1B8E900", Offset = "0x1B8E900", VA = "0x1B8E900")]
			public int IsActive(float forwardSpeed)
			{
				return default(int);
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x1B8B52C", Offset = "0x1B8B52C", VA = "0x1B8B52C")]
			public SpeedAndForce()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200045B")]
		[Flags]
		public enum CapabilityType
		{
			[Token(Token = "0x4001E80")]
			Rail = 1,
			[Token(Token = "0x4001E81")]
			Tie = 2,
			[Token(Token = "0x4001E82")]
			Chain = 8,
			[Token(Token = "0x4001E83")]
			Brake = 0x20
		}

		[Token(Token = "0x200045C")]
		private delegate int I_V3(Vector3 v);

		[Token(Token = "0x200045D")]
		private delegate void V_III(int a, int b, int c);

		[Token(Token = "0x200045E")]
		private delegate GameObject Go_T(SimpleTransform transform, float length);

		[Token(Token = "0x4001E49")]
		private const float connectTolerance = 0.001f;

		[Token(Token = "0x4001E4A")]
		private const float connectAngleTolerance = 0.1f;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool DontUpdate;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleTransform endTransform;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackCurve.CurveType curveType;

		[Token(Token = "0x4001E4E")]
		public const float DefaultCurveStrength = 1.4142135f;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float curveStartStrength;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float curveEndStrength;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Track _prevTrack;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Track _nextTrack;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Used to calculate the whole path lenght")]
		public Track NextTrackAfterJump;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EndOfLineBehavior outOfTrack;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private CapabilityType lastCapabilities;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CapabilityType Capabilities;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpeedAndForce acceleration;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpeedAndForce brakes;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float originalTargetSpeed;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float originalMaxForce;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh[] railMeshes;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Mesh[] tieMeshes;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Mesh[] chainTieMeshes;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Mesh[] brakeMeshes;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Material[] railMaterials;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material[] chainMaterials;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Material[] brakeMaterials;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 chainOffset;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 brakeOffset;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector2 chainMinMaxValues;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 brakeMinMaxValues;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool allowDynamicTieInterval;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float tieInterval;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool allowDynamicResolution;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float resolution;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool forceEndCaps;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Mesh[] generatedMeshes;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected LODGroup lodGroup;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected bool isStartup;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected List<Collider> ignoredColliders;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected TrackMeshGenerator meshGenerator;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected TrackCurve _curve;

		[NonSerialized]
		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool _dirty;

		[Token(Token = "0x1700036E")]
		public Vector3 AddonOffset
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x1B8BEEC", Offset = "0x1B8BEEC", VA = "0x1B8BEEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700036F")]
		public Vector2 AddonLenght
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x1B8BF28", Offset = "0x1B8BF28", VA = "0x1B8BF28")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000370")]
		public Vector3 Centeroid
		{
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x1B8CB00", Offset = "0x1B8CB00", VA = "0x1B8CB00")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000371")]
		public float Length
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x1B8CC10", Offset = "0x1B8CC10", VA = "0x1B8CC10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000372")]
		public float LengthAbsolute
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x1B8CC2C", Offset = "0x1B8CC2C", VA = "0x1B8CC2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000373")]
		public float Distance
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x1B8CC70", Offset = "0x1B8CC70", VA = "0x1B8CC70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000374")]
		public float DistanceAbsolute
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x1B8CCF8", Offset = "0x1B8CCF8", VA = "0x1B8CCF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000375")]
		public TrackCurve Curve
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x1B872DC", Offset = "0x1B872DC", VA = "0x1B872DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x1B8CF50", Offset = "0x1B8CF50", VA = "0x1B8CF50")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public Track PrevTrack
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x1B8CF60", Offset = "0x1B8CF60", VA = "0x1B8CF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x1B8CF68", Offset = "0x1B8CF68", VA = "0x1B8CF68")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public Track NextTrack
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x1B8D6C8", Offset = "0x1B8D6C8", VA = "0x1B8D6C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x1B8D6D0", Offset = "0x1B8D6D0", VA = "0x1B8D6D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public SimpleTransform TrackStart
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x1B8D7C4", Offset = "0x1B8D7C4", VA = "0x1B8D7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public SimpleTransform TrackAbsoluteStart
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x1B8D838", Offset = "0x1B8D838", VA = "0x1B8D838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x1B8D91C", Offset = "0x1B8D91C", VA = "0x1B8D91C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public SimpleTransform TrackEnd
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x1B8DABC", Offset = "0x1B8DABC", VA = "0x1B8DABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0x1B8CF1C", Offset = "0x1B8CF1C", VA = "0x1B8CF1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public SimpleTransform TrackAbsoluteEnd
		{
			[Token(Token = "0x6001D02")]
			[Address(RVA = "0x1B8CB74", Offset = "0x1B8CB74", VA = "0x1B8CB74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x1B8D9AC", Offset = "0x1B8D9AC", VA = "0x1B8D9AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public bool Dirty
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x1B8DD34", Offset = "0x1B8DD34", VA = "0x1B8DD34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x1B8D694", Offset = "0x1B8D694", VA = "0x1B8D694")]
			set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action<TrackCart> onCartEnter
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x1B8BF54", Offset = "0x1B8BF54", VA = "0x1B8BF54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x1B8C004", Offset = "0x1B8C004", VA = "0x1B8C004")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<TrackCart> onCartLeave
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x1B8C0B4", Offset = "0x1B8C0B4", VA = "0x1B8C0B4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1B8C164", Offset = "0x1B8C164", VA = "0x1B8C164")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1B8BDC4", Offset = "0x1B8BDC4", VA = "0x1B8BDC4")]
		public static bool IsAligned(SimpleTransform a, SimpleTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1B8C214", Offset = "0x1B8C214", VA = "0x1B8C214")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x1B8C2D0", Offset = "0x1B8C2D0", VA = "0x1B8C2D0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1B8C2D4", Offset = "0x1B8C2D4", VA = "0x1B8C2D4")]
		protected Mesh[] TryToFindGeneratedMeshes()
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1B8C554", Offset = "0x1B8C554", VA = "0x1B8C554")]
		private void FindOrCreateMeshes()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x1B8C6D4", Offset = "0x1B8C6D4", VA = "0x1B8C6D4")]
		private int GetTotalLODs([Optional] Track track)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x1B8C7C0", Offset = "0x1B8C7C0", VA = "0x1B8C7C0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1B8C84C", Offset = "0x1B8C84C", VA = "0x1B8C84C")]
		public bool IsSourceMeshesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1B8C8E4", Offset = "0x1B8C8E4", VA = "0x1B8C8E4")]
		public bool IsSourceMeshesValid(out string errorMsg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1B8DAC4", Offset = "0x1B8DAC4", VA = "0x1B8DAC4")]
		public void ConnectTo(Track next)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1B8DB98", Offset = "0x1B8DB98", VA = "0x1B8DB98")]
		public bool IsStartNearest(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1B8DCC8", Offset = "0x1B8DCC8", VA = "0x1B8DCC8")]
		public SimpleTransform NearestPoint(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1B8774C", Offset = "0x1B8774C", VA = "0x1B8774C")]
		public SimpleTransform NearestPointAbsolute(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1B8DAD0", Offset = "0x1B8DAD0", VA = "0x1B8DAD0")]
		public void SnapTogether(Track target, bool snapMe, bool snapEnd)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1B8C848", Offset = "0x1B8C848", VA = "0x1B8C848")]
		protected void UpdatePath()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1B8DD3C", Offset = "0x1B8DD3C", VA = "0x1B8DD3C")]
		protected void GenerateCollider()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1B8DEF0", Offset = "0x1B8DEF0", VA = "0x1B8DEF0")]
		public void ResetMeshGenerator()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1B8DF24", Offset = "0x1B8DF24", VA = "0x1B8DF24")]
		public Track GetNext(Track prev)
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1B8E03C", Offset = "0x1B8E03C", VA = "0x1B8E03C")]
		public void IgnoreCollisionsWith(Collider other)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1B8E2DC", Offset = "0x1B8E2DC", VA = "0x1B8E2DC")]
		public void ResumeCollisionsWith(Collider other)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x1B8D378", Offset = "0x1B8D378", VA = "0x1B8D378")]
		protected void RefreshIgnoredColliders()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1B8D05C", Offset = "0x1B8D05C", VA = "0x1B8D05C")]
		protected void DisableIgnoredColliders()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1B8E178", Offset = "0x1B8E178", VA = "0x1B8E178")]
		protected void __ignoreCollisions(Collider other, bool ignore)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1B8E3D8", Offset = "0x1B8E3D8", VA = "0x1B8E3D8")]
		protected void _IgnoreCollisionIfAble(Collider a, Collider b, bool ignore)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1B8E624", Offset = "0x1B8E624", VA = "0x1B8E624", Slot = "4")]
		internal virtual void FireCartEnter(TrackCart cart)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x1B8E648", Offset = "0x1B8E648", VA = "0x1B8E648", Slot = "5")]
		internal virtual void FireCartLeave(TrackCart cart)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1B8E66C", Offset = "0x1B8E66C", VA = "0x1B8E66C")]
		public Track()
		{
		}
	}
	[Token(Token = "0x2000461")]
	[RequireComponent(typeof(Rigidbody))]
	public class TrackCart : MonoBehaviour
	{
		[Token(Token = "0x2000462")]
		private delegate float F_msds(float mass, float speed, float desiredSpeed);

		[Token(Token = "0x2000463")]
		[CompilerGenerated]
		private sealed class <DeferredSetVelocity>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackCart <>4__this;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 vel;

			[Token(Token = "0x17000384")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6A")]
				[Address(RVA = "0x1B944C4", Offset = "0x1B944C4", VA = "0x1B944C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000385")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6C")]
				[Address(RVA = "0x1B9450C", Offset = "0x1B9450C", VA = "0x1B9450C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x1B92958", Offset = "0x1B92958", VA = "0x1B92958")]
			[DebuggerHidden]
			public <DeferredSetVelocity>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x1B94404", Offset = "0x1B94404", VA = "0x1B94404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x1B94408", Offset = "0x1B94408", VA = "0x1B94408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x1B944CC", Offset = "0x1B944CC", VA = "0x1B944CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool DebugDrawTracking;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool DebugDrawSpeed;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[FormerlySerializedAs("currentTrack")]
		protected Track _currentTrack;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clearingDistance;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool prorateForces;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool cartReversed;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[Tooltip("How much speed to preserve when going around corners.\r\nHigher values keep more speed on curves, but also removes an implicit dampening that keeps the Cart from speeding up due to accumulated error.")]
		public float curvePreservation;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastVelocityBeforeJumping;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float RotationFactor;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SnapOnTrackSoundFx;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IsOverBoosting;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Obsolete("Please use the Player.CurrentRollerCoasterMode instead")]
		public CoasterType CoasterMode;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float CoasterDirection;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MaxForceX;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MaxForceY;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float MaxAccelerationForce;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float MaxDesaccelerationForce;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float MinSecsOfAcceleration;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float MinSecsOfDesacceleration;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float MaxTargetSpeed;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsRemovedFromTrack;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool IsTeleporting;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 StartPositionRemovedFromTrack;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float TimeFromRemovedFromTrack;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioSource DefeatSoundFx;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool alreadyPlayedDefeatSoundFx;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Collider CartCollider;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform BackWheelColliders;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform FrontWheelColliders;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider[] backWheelColliders;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Collider[] frontWheelColliders;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float multiply;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float LastAccelerationForce;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float LastDesaccelerationForce;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string MetricsSufix;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float MetricsMultiplier;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUI SpeedHUD;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float MaxDistanceOutOffTrack;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject guide;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ConfigurableJoint trackJoint;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ConfigurableJoint guideJoint;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private FixedJoint brakeJoint;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ConfigurableJoint endJoint;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Rigidbody cartRB;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Rigidbody trackRB;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int brakesCooldown;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SimpleTransform t;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Transform cartTransform;

		[Token(Token = "0x4001EBB")]
		private const float leadFactor = 1f;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool AlreadyCrashed;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool alreadyDerailed;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float gravityScale;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float globalGravity;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float explosionForce;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float explosionRadius;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float explosionUpModifier;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float immunityAfterJump;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 lastLocalVelocity;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Track lastTrack;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int lastVelocity;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int velocity;

		[Token(Token = "0x1700037D")]
		[Obsolete("Field currentTrack has been removed. Use CurrentTrack instead.", true)]
		public Track currentTrack
		{
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x1B8EFEC", Offset = "0x1B8EFEC", VA = "0x1B8EFEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public Track CurrentTrack
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x1B8EFF4", Offset = "0x1B8EFF4", VA = "0x1B8EFF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x1B8EFFC", Offset = "0x1B8EFFC", VA = "0x1B8EFFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		private Player player
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1B8F908", Offset = "0x1B8F908", VA = "0x1B8F908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public bool IsOutOffTrack
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1B8FABC", Offset = "0x1B8FABC", VA = "0x1B8FABC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000381")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x1B8FB38", Offset = "0x1B8FB38", VA = "0x1B8FB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public SimpleTransform LastTangent
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x1B8FB40", Offset = "0x1B8FB40", VA = "0x1B8FB40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x1B8FB48", Offset = "0x1B8FB48", VA = "0x1B8FB48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public Vector3 LastLocalVelocity
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x1B8FB58", Offset = "0x1B8FB58", VA = "0x1B8FB58")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<Vector3, Vector3, Track> OnCartChangesTracks
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x1B8F95C", Offset = "0x1B8F95C", VA = "0x1B8F95C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x1B8FA0C", Offset = "0x1B8FA0C", VA = "0x1B8FA0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1B8FB68", Offset = "0x1B8FB68", VA = "0x1B8FB68")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1B8FBDC", Offset = "0x1B8FBDC", VA = "0x1B8FBDC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1B8FC78", Offset = "0x1B8FC78", VA = "0x1B8FC78")]
		public void Config()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1B8F744", Offset = "0x1B8F744", VA = "0x1B8F744")]
		private void IgnoreWheelsCollisions()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1B8F618", Offset = "0x1B8F618", VA = "0x1B8F618")]
		private void ResumeWheelsCollisions()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1B90040", Offset = "0x1B90040", VA = "0x1B90040")]
		private void KillByCollision()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1B90064", Offset = "0x1B90064", VA = "0x1B90064")]
		public void Killed(bool immediateKill = false)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1B901F8", Offset = "0x1B901F8", VA = "0x1B901F8")]
		public void ResetCrash()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1B90258", Offset = "0x1B90258", VA = "0x1B90258")]
		private bool VerifyToKillByDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1B90338", Offset = "0x1B90338", VA = "0x1B90338")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x1B92520", Offset = "0x1B92520", VA = "0x1B92520")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x1B90B28", Offset = "0x1B90B28", VA = "0x1B90B28")]
		protected void UpdateTrackSlider(out SimpleTransform trackTangent)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x1B916B0", Offset = "0x1B916B0", VA = "0x1B916B0")]
		protected void PreserveCurve(SimpleTransform trackTangent)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x1B8F3B0", Offset = "0x1B8F3B0", VA = "0x1B8F3B0")]
		protected void RepairVelocity(SimpleTransform trackTangent)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1B928C0", Offset = "0x1B928C0", VA = "0x1B928C0")]
		[IteratorStateMachine(typeof(<DeferredSetVelocity>d__88))]
		protected IEnumerator DeferredSetVelocity(Vector3 vel)
		{
			return null;
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1B918D0", Offset = "0x1B918D0", VA = "0x1B918D0")]
		protected void PushThings(SimpleTransform trackTangent, out float forwardness)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1B92EC0", Offset = "0x1B92EC0", VA = "0x1B92EC0")]
		private bool IsUpsideDownTooSlow(Vector3 localVelocity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1B9330C", Offset = "0x1B9330C", VA = "0x1B9330C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1B93604", Offset = "0x1B93604", VA = "0x1B93604")]
		public void SnapToTrack(Track track, bool playSound = true)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1B93670", Offset = "0x1B93670", VA = "0x1B93670")]
		public void SnapToTrack(Track track, Vector3 velocityScale, bool playSound = true)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x1B9385C", Offset = "0x1B9385C", VA = "0x1B9385C")]
		public void SnapToTrackFeedback(bool playSound)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1B93100", Offset = "0x1B93100", VA = "0x1B93100")]
		public void AddForceFromTrack(Vector3 force)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1B921E0", Offset = "0x1B921E0", VA = "0x1B921E0")]
		protected void UpdateEndStop(SimpleTransform trackTangent, float forwardness)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x1B927F4", Offset = "0x1B927F4", VA = "0x1B927F4")]
		protected Vector3 GetTrackVelocityAt(SimpleTransform trackTangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1B93D68", Offset = "0x1B93D68", VA = "0x1B93D68")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1B93988", Offset = "0x1B93988", VA = "0x1B93988")]
		public Vector3 GetLocalVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1B93E1C", Offset = "0x1B93E1C", VA = "0x1B93E1C")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1B92980", Offset = "0x1B92980", VA = "0x1B92980")]
		public Vector3 GetVelocityOnTrack([Optional] SimpleTransform trackTangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1B93A50", Offset = "0x1B93A50", VA = "0x1B93A50")]
		protected void BlockMovement(SimpleTransform trackTangent, Vector3 trackEnd)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1B93EC8", Offset = "0x1B93EC8", VA = "0x1B93EC8")]
		public void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1B90730", Offset = "0x1B90730", VA = "0x1B90730")]
		protected void SetupGuide()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1B8F870", Offset = "0x1B8F870", VA = "0x1B8F870")]
		protected void DestroyJoint()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x1B93ED4", Offset = "0x1B93ED4", VA = "0x1B93ED4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1B93E50", Offset = "0x1B93E50", VA = "0x1B93E50")]
		protected static void setAllAxies(ConfigurableJoint joint, ConfigurableJointMotion motion)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1B927EC", Offset = "0x1B927EC", VA = "0x1B927EC")]
		public void RemoveFromTrack()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1B926EC", Offset = "0x1B926EC", VA = "0x1B926EC")]
		protected void RollToNextTrack(bool offEnd)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1B93F6C", Offset = "0x1B93F6C", VA = "0x1B93F6C")]
		public void SetAccelerationConfigurations(float maxAccelerationForce, float minSecsOfAcceleration, float maxTargetSpeed)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1B93F7C", Offset = "0x1B93F7C", VA = "0x1B93F7C")]
		public void SetDesaccelerationConfigurations(float maxDesaccelerationForce, float minSecsOfDesacceleration)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1B90540", Offset = "0x1B90540", VA = "0x1B90540")]
		public void ChangeSpeedByCommand()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x1B93F88", Offset = "0x1B93F88", VA = "0x1B93F88")]
		public void VerifyAccelerationByCommand()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x1B94120", Offset = "0x1B94120", VA = "0x1B94120")]
		public void VerifyDesaccelerationByCommand()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x1B941FC", Offset = "0x1B941FC", VA = "0x1B941FC")]
		[Obsolete("Use the CurrentTrack property instead.")]
		public void SwitchCurrentSectionTo(Track track)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1B94200", Offset = "0x1B94200", VA = "0x1B94200")]
		public TrackCart()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class TrackCartFollow : MonoBehaviour
	{
		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSmoothFollow;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSmoothFollow;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxSpeed;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TrackCart cart;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cartTr;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform tr;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float smoothFollow;

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x1B945B8", Offset = "0x1B945B8", VA = "0x1B945B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1B94654", Offset = "0x1B94654", VA = "0x1B94654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1B94674", Offset = "0x1B94674", VA = "0x1B94674")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1B94718", Offset = "0x1B94718", VA = "0x1B94718")]
		private void FollowTrackCart()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1B94950", Offset = "0x1B94950", VA = "0x1B94950")]
		public TrackCartFollow()
		{
		}
	}
	[Token(Token = "0x2000466")]
	[RequireComponent(typeof(TrackCart))]
	[RequireComponent(typeof(AudioSource))]
	public class TrackCartSound : MonoBehaviour
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Highest cart speed we are concerned with providing sounds for.\r\nIf the cart goes faster than this, all sounds will play as if the cart is only going this fast.\r\nThis top speed corresponds to the right edge of the volumeVsSpeed curve.")]
		public float maxSpeed;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("How much louder the sound gets when doing a barrel roll..")]
		public float rotationAmplification;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How much louder the sound gets when rounding a corner at speed.")]
		public float accelerationAmplification;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Sound used when cart brakes")]
		public AudioClip BrakeClip;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<CartSoundClipInfo> clips;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected AudioSource brakeSource;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected AudioSource primarySource;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected TrackCart cart;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Rigidbody cartRB;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float baseVolume;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float trackiness;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 lastVelocity;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion lastRotation;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<AudioSource> sources;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float lastBrakeForce;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1B9496C", Offset = "0x1B9496C", VA = "0x1B9496C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1B94970", Offset = "0x1B94970", VA = "0x1B94970")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1B94E98", Offset = "0x1B94E98", VA = "0x1B94E98")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1B95668", Offset = "0x1B95668", VA = "0x1B95668")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x1B95408", Offset = "0x1B95408", VA = "0x1B95408")]
		protected float GetIntensityModifier()
		{
			return default(float);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1B94B04", Offset = "0x1B94B04", VA = "0x1B94B04")]
		protected AudioSource AllocSource()
		{
			return null;
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1B957D0", Offset = "0x1B957D0", VA = "0x1B957D0")]
		public TrackCartSound()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class TrackCurve
	{
		[Token(Token = "0x2000468")]
		public enum CurveType
		{
			[Token(Token = "0x4001EEE")]
			Hermite = 2,
			[Token(Token = "0x4001EEF")]
			HermiteV2
		}

		[Token(Token = "0x2000469")]
		protected struct PathPoint
		{
			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fraction;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float distance;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SimpleTransform pos;
		}

		[Token(Token = "0x200046A")]
		protected struct Moment
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;
		}

		[Token(Token = "0x200046B")]
		[CompilerGenerated]
		private sealed class <GetIntervals>d__16 : IEnumerable<SimpleTransform>, IEnumerable, IEnumerator<SimpleTransform>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private SimpleTransform <>2__current;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float interval;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float <>3__interval;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float offset;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float <>3__offset;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TrackCurve <>4__this;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <position>5__2;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <idx>5__3;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <lastPointFraction>5__4;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <lastPointDistance>5__5;

			[Token(Token = "0x17000387")]
			private SimpleTransform System.Collections.Generic.IEnumerator<ZenFulcrum.Track.SimpleTransform>.Current
			{
				[Token(Token = "0x6001D8A")]
				[Address(RVA = "0x1B96AD4", Offset = "0x1B96AD4", VA = "0x1B96AD4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D8C")]
				[Address(RVA = "0x1B96B1C", Offset = "0x1B96B1C", VA = "0x1B96B1C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x1B96450", Offset = "0x1B96450", VA = "0x1B96450")]
			[DebuggerHidden]
			public <GetIntervals>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x1B968A8", Offset = "0x1B968A8", VA = "0x1B968A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x1B968AC", Offset = "0x1B968AC", VA = "0x1B968AC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x1B96ADC", Offset = "0x1B96ADC", VA = "0x1B96ADC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x1B96B24", Offset = "0x1B96B24", VA = "0x1B96B24", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<SimpleTransform> System.Collections.Generic.IEnumerable<ZenFulcrum.Track.SimpleTransform>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x1B96BE0", Offset = "0x1B96BE0", VA = "0x1B96BE0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001EE4")]
		public const int DistanceQuality = 10;

		[Token(Token = "0x4001EE5")]
		private const float TooSmall = 1E-06f;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected CurveType curveType;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SimpleTransform end;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float startStrength;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float endStrength;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected PathPoint[] pathData;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected float _length;

		[Token(Token = "0x4001EEC")]
		private const float sqrt2 = 1.4142135f;

		[Token(Token = "0x17000386")]
		public float Length
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x1B960C8", Offset = "0x1B960C8", VA = "0x1B960C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1B8CDA0", Offset = "0x1B8CDA0", VA = "0x1B8CDA0")]
		public TrackCurve(CurveType curveType, SimpleTransform end, float startStrength, float endStrength)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1B958C0", Offset = "0x1B958C0", VA = "0x1B958C0")]
		protected void CalculateData(int steps = -1)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x1B87504", Offset = "0x1B87504", VA = "0x1B87504")]
		public float GetFraction(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x1B963B4", Offset = "0x1B963B4", VA = "0x1B963B4")]
		[IteratorStateMachine(typeof(<GetIntervals>d__16))]
		public IEnumerable<SimpleTransform> GetIntervals(float offset, float interval)
		{
			return null;
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x1B96484", Offset = "0x1B96484", VA = "0x1B96484")]
		public static Vector3 CalcHermite(Vector3 p1, Vector3 t1, Vector3 p2, Vector3 t2, float percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x1B96524", Offset = "0x1B96524", VA = "0x1B96524")]
		protected Quaternion GetRotation(Moment moment, float percent)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x1B95EA8", Offset = "0x1B95EA8", VA = "0x1B95EA8")]
		protected Moment GetMoment(float percent)
		{
			return default(Moment);
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1B87648", Offset = "0x1B87648", VA = "0x1B87648")]
		public SimpleTransform GetPointAt(float percent)
		{
			return null;
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x1B960D0", Offset = "0x1B960D0", VA = "0x1B960D0")]
		public static float NearestPartOfSegment(Vector3 point, Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x1B962BC", Offset = "0x1B962BC", VA = "0x1B962BC")]
		public static float DistanceFromSegment(Vector3 point, Vector3 a, Vector3 b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200046C")]
	public class TrackMeshGenerator
	{
		[Token(Token = "0x200046D")]
		protected struct Vertex
		{
			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 uv;
		}

		[Token(Token = "0x200046E")]
		protected class MiniMesh
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vertex> verts;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<int> tris;

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x1B97414", Offset = "0x1B97414", VA = "0x1B97414")]
			public MiniMesh()
			{
			}
		}

		[Token(Token = "0x200046F")]
		private delegate void _addFaceSig(int v1, int v2, int v3, Dictionary<int, int> mapping, MiniMesh dest);

		[Token(Token = "0x4001F01")]
		private const int MaxTiesCount = 800;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Mesh sourceRailMesh;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Mesh tieMesh;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MiniMesh railMesh;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected MiniMesh capMesh;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Mesh[] sourceRailMeshes;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Mesh[] tieMeshes;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Mesh[] sourceExtraRailMeshes;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Mesh[] addonMeshes;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected MiniMesh[] railMeshes;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected MiniMesh[] capMeshes;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected MiniMesh[] extraRailMeshes;

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1B96BE4", Offset = "0x1B96BE4", VA = "0x1B96BE4")]
		protected float[] GetSteps(Track track, int lodIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x1B96EC4", Offset = "0x1B96EC4", VA = "0x1B96EC4")]
		public void SetMeshes(Mesh[] sourceRailMeshes, Mesh[] tieMeshes, Mesh[] addonMeshes)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1B975C8", Offset = "0x1B975C8", VA = "0x1B975C8")]
		public void GenerateMesh(Mesh[] meshes, Track track, LODGroup lodGroup)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x1B99C98", Offset = "0x1B99C98", VA = "0x1B99C98")]
		public TrackMeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000471")]
	[RequireComponent(typeof(Track))]
	public class TrackSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000472")]
		public enum SwitchSide
		{
			[Token(Token = "0x4001F20")]
			SwitchStart,
			[Token(Token = "0x4001F21")]
			SwitchEnd
		}

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Which tracks can we switch to?")]
		public Track[] positions;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("When asked to switch, how quickly should we switch to the next piece?")]
		public float switchSpeed;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Which side of *this* track will be switched?")]
		public SwitchSide switchSide;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Track track;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool switching;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int desiredPosition;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected SimpleTransform lastPosition;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected SimpleTransform targetPosition;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float switchStartTime;

		[Token(Token = "0x17000389")]
		private bool endSwitching
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x1BC5898", Offset = "0x1BC5898", VA = "0x1BC5898")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1BC5840", Offset = "0x1BC5840", VA = "0x1BC5840")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1BC58A8", Offset = "0x1BC58A8", VA = "0x1BC58A8")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1BC5A5C", Offset = "0x1BC5A5C", VA = "0x1BC5A5C")]
		public void Switch(int index)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1BC5B38", Offset = "0x1BC5B38", VA = "0x1BC5B38")]
		public void Switch()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1BC5B64", Offset = "0x1BC5B64", VA = "0x1BC5B64")]
		public TrackSwitcher()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class WheelSpin : MonoBehaviour
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float wheelRadius;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TrackCart cart;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody rb;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform tr;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform targetTr;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LobbySplineCart splineCart;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool lobby;

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1BC5B78", Offset = "0x1BC5B78", VA = "0x1BC5B78")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1BC5E90", Offset = "0x1BC5E90", VA = "0x1BC5E90")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1BC613C", Offset = "0x1BC613C", VA = "0x1BC613C")]
		public WheelSpin()
		{
		}
	}
}
namespace YawVR
{
	[Token(Token = "0x2000474")]
	public class BuzzerSample : MonoBehaviour
	{
		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Buzzer buzzerData;

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1BC614C", Offset = "0x1BC614C", VA = "0x1BC614C")]
		public void OneShot(float time)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1BC625C", Offset = "0x1BC625C", VA = "0x1BC625C")]
		private void DisableBuzzer()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1BC61F4", Offset = "0x1BC61F4", VA = "0x1BC61F4")]
		private Buzzer GetBuzzer()
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1BC6374", Offset = "0x1BC6374", VA = "0x1BC6374")]
		public BuzzerSample()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class Blinking : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		[CompilerGenerated]
		private sealed class <BlinkingCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Blinking <>4__this;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <b>5__2;

			[Token(Token = "0x1700038A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x1BC6940", Offset = "0x1BC6940", VA = "0x1BC6940", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB2")]
				[Address(RVA = "0x1BC6988", Offset = "0x1BC6988", VA = "0x1BC6988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x1BC64D0", Offset = "0x1BC64D0", VA = "0x1BC64D0")]
			[DebuggerHidden]
			public <BlinkingCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1BC6508", Offset = "0x1BC6508", VA = "0x1BC6508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x1BC650C", Offset = "0x1BC650C", VA = "0x1BC650C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x1BC6948", Offset = "0x1BC6948", VA = "0x1BC6948", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine cor;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float blinkDelay;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds delay;

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x1BC637C", Offset = "0x1BC637C", VA = "0x1BC637C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1BC63F4", Offset = "0x1BC63F4", VA = "0x1BC63F4")]
		public void StartBlinking()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x1BC6448", Offset = "0x1BC6448", VA = "0x1BC6448")]
		public void StopBlinking()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x1BC645C", Offset = "0x1BC645C", VA = "0x1BC645C")]
		[IteratorStateMachine(typeof(<BlinkingCoroutine>d__7))]
		private IEnumerator BlinkingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1BC64F8", Offset = "0x1BC64F8", VA = "0x1BC64F8")]
		public Blinking()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class ColorTransition : MonoBehaviour
	{
		[Token(Token = "0x2000478")]
		[CompilerGenerated]
		private sealed class <EffectCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorTransition <>4__this;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <index>5__3;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nextIndex>5__4;

			[Token(Token = "0x1700038C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBB")]
				[Address(RVA = "0x1BC6FD0", Offset = "0x1BC6FD0", VA = "0x1BC6FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBD")]
				[Address(RVA = "0x1BC7018", Offset = "0x1BC7018", VA = "0x1BC7018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x1BC6AE4", Offset = "0x1BC6AE4", VA = "0x1BC6AE4")]
			[DebuggerHidden]
			public <EffectCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x1BC6B1C", Offset = "0x1BC6B1C", VA = "0x1BC6B1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x1BC6B20", Offset = "0x1BC6B20", VA = "0x1BC6B20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x1BC6FD8", Offset = "0x1BC6FD8", VA = "0x1BC6FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float time;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds delay;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine cor;

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1BC6990", Offset = "0x1BC6990", VA = "0x1BC6990")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x1BC6A08", Offset = "0x1BC6A08", VA = "0x1BC6A08")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1BC6A1C", Offset = "0x1BC6A1C", VA = "0x1BC6A1C")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x1BC6A70", Offset = "0x1BC6A70", VA = "0x1BC6A70")]
		[IteratorStateMachine(typeof(<EffectCoroutine>d__7))]
		private IEnumerator EffectCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x1BC6B0C", Offset = "0x1BC6B0C", VA = "0x1BC6B0C")]
		public ColorTransition()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class Rainbow : MonoBehaviour
	{
		[Token(Token = "0x200047A")]
		[CompilerGenerated]
		private sealed class <RainbowCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rainbow <>4__this;

			[Token(Token = "0x1700038E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC7")]
				[Address(RVA = "0x1BC7518", Offset = "0x1BC7518", VA = "0x1BC7518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC9")]
				[Address(RVA = "0x1BC7560", Offset = "0x1BC7560", VA = "0x1BC7560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x1BC7174", Offset = "0x1BC7174", VA = "0x1BC7174")]
			[DebuggerHidden]
			public <RainbowCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x1BC7270", Offset = "0x1BC7270", VA = "0x1BC7270", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x1BC7274", Offset = "0x1BC7274", VA = "0x1BC7274", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x1BC7520", Offset = "0x1BC7520", VA = "0x1BC7520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine coroutine;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color32[] colors;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] bytes;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double multiplier;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ushort counter;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float loopDelay;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds delay;

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1BC7020", Offset = "0x1BC7020", VA = "0x1BC7020")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1BC7098", Offset = "0x1BC7098", VA = "0x1BC7098")]
		public void StartRainbow()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1BC70EC", Offset = "0x1BC70EC", VA = "0x1BC70EC")]
		public void StopRainbow()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1BC7100", Offset = "0x1BC7100", VA = "0x1BC7100")]
		[IteratorStateMachine(typeof(<RainbowCoroutine>d__10))]
		private IEnumerator RainbowCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1BC719C", Offset = "0x1BC719C", VA = "0x1BC719C")]
		private double X(int i)
		{
			return default(double);
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1BC71C0", Offset = "0x1BC71C0", VA = "0x1BC71C0")]
		public Rainbow()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class SimpleColor : MonoBehaviour
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color32 color;

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1BC7568", Offset = "0x1BC7568", VA = "0x1BC7568")]
		public void SetSimpleColor(Color c)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1BC7888", Offset = "0x1BC7888", VA = "0x1BC7888")]
		public void SetSimpleColor()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x1BC78E8", Offset = "0x1BC78E8", VA = "0x1BC78E8")]
		public SimpleColor()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public static class CommandIds
	{
		[Token(Token = "0x4001F47")]
		public const byte CHECK_IN = 48;

		[Token(Token = "0x4001F48")]
		public const byte START = 161;

		[Token(Token = "0x4001F49")]
		public const byte STOP = 162;

		[Token(Token = "0x4001F4A")]
		public const byte CALIBRATE = 85;

		[Token(Token = "0x4001F4B")]
		public const byte GET_ALL_APP_PARAMS = 246;

		[Token(Token = "0x4001F4C")]
		public const byte EXIT = 163;

		[Token(Token = "0x4001F4D")]
		public const byte RESET_PORTS = 1;

		[Token(Token = "0x4001F4E")]
		public const byte SET_SIMU_INPUT_PORT = 16;

		[Token(Token = "0x4001F4F")]
		public const byte SET_GAME_INPUT_PORT = 17;

		[Token(Token = "0x4001F50")]
		public const byte SET_GAME_IP_ADDRESS = 164;

		[Token(Token = "0x4001F51")]
		public const byte SET_OUTPUT_PORT = 18;

		[Token(Token = "0x4001F52")]
		public const byte SET_POWER = 50;

		[Token(Token = "0x4001F53")]
		public const byte CHECK_IN_ANS = 49;

		[Token(Token = "0x4001F54")]
		public const byte ERROR = 165;

		[Token(Token = "0x4001F55")]
		public const byte GET_TEMPS = 228;

		[Token(Token = "0x4001F56")]
		public const byte GET_STATE = 229;

		[Token(Token = "0x4001F57")]
		public const byte UDP_LED_CMD = 178;
	}
	[Token(Token = "0x200047D")]
	public static class Commands
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte[] DEVICE_DISCOVERY;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ushort udpLedCounter;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static byte[] START;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static byte[] CALIBRATE;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static byte STOP;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static byte[] EXIT;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1BC78F0", Offset = "0x1BC78F0", VA = "0x1BC78F0")]
		private static void FromShort(ushort number, out byte byte1, out byte byte2)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1BC7900", Offset = "0x1BC7900", VA = "0x1BC7900")]
		public static byte[] UDP_LED_CMD(Color32[] colors)
		{
			return null;
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x1BC7A90", Offset = "0x1BC7A90", VA = "0x1BC7A90")]
		public static byte[] UDP_LED_CMD(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1BC7BD4", Offset = "0x1BC7BD4", VA = "0x1BC7BD4")]
		public static byte[] MOTION_DATA(float yaw, float pitch, float roll, Buzzer buzzer, byte smartPlug)
		{
			return null;
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1BC7FB4", Offset = "0x1BC7FB4", VA = "0x1BC7FB4")]
		public static byte[] CHECK_IN(int udpListeningPort, string gameName)
		{
			return null;
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1BC8168", Offset = "0x1BC8168", VA = "0x1BC8168")]
		private static byte[] AddByteToArray(byte[] bArray, byte newByte)
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1BC7F0C", Offset = "0x1BC7F0C", VA = "0x1BC7F0C")]
		private static string FormatRotation(float f)
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1BC80D4", Offset = "0x1BC80D4", VA = "0x1BC80D4")]
		private static byte[] IntToByteArray(int intValue)
		{
			return null;
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1BC81F4", Offset = "0x1BC81F4", VA = "0x1BC81F4")]
		private static byte[] FloatToByteArray(float floatValue)
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1BC8290", Offset = "0x1BC8290", VA = "0x1BC8290")]
		public static int ByteArrayToInt(byte[] intBytes, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1BC83F8", Offset = "0x1BC83F8", VA = "0x1BC83F8")]
		public static float ByteArrayToFloat(byte[] floatBytes, int startIndex)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200047E")]
	public class DynamicDisable : MonoBehaviour
	{
		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool yaw1;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool yaw2;

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1BC86BC", Offset = "0x1BC86BC", VA = "0x1BC86BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1BC87DC", Offset = "0x1BC87DC", VA = "0x1BC87DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x1BC87E0", Offset = "0x1BC87E0", VA = "0x1BC87E0")]
		private void OnConnected()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1BC88E4", Offset = "0x1BC88E4", VA = "0x1BC88E4")]
		public DynamicDisable()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public enum ConnectType
	{
		[Token(Token = "0x4001F61")]
		CONNECT_FIRST_FOUND_DEVICE,
		[Token(Token = "0x4001F62")]
		DEBUG_CONNECT_TO_IP,
		[Token(Token = "0x4001F63")]
		NO_AUTO_CONNECT
	}
	[Token(Token = "0x2000480")]
	public enum DeviceStatus
	{
		[Token(Token = "0x4001F65")]
		Available,
		[Token(Token = "0x4001F66")]
		Reserved,
		[Token(Token = "0x4001F67")]
		Unknown
	}
	[Token(Token = "0x2000481")]
	public enum Result
	{
		[Token(Token = "0x4001F69")]
		Success,
		[Token(Token = "0x4001F6A")]
		Error
	}
	[Token(Token = "0x2000482")]
	public enum ControllerState
	{
		[Token(Token = "0x4001F6C")]
		Initial,
		[Token(Token = "0x4001F6D")]
		Connecting,
		[Token(Token = "0x4001F6E")]
		Connected,
		[Token(Token = "0x4001F6F")]
		Starting,
		[Token(Token = "0x4001F70")]
		Started,
		[Token(Token = "0x4001F71")]
		Stopping,
		[Token(Token = "0x4001F72")]
		Disconnecting
	}
	[Token(Token = "0x2000483")]
	public static class Helpers
	{
		[Token(Token = "0x6001DDD")]
		public static T[] SubArray<T>(this T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x1BC88EC", Offset = "0x1BC88EC", VA = "0x1BC88EC")]
		public static float decodeFloat(byte[] msg, int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1BC8AB0", Offset = "0x1BC8AB0", VA = "0x1BC8AB0")]
		public static void FromShort(ushort number, out byte byte1, out byte byte2)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1BC8AC0", Offset = "0x1BC8AC0", VA = "0x1BC8AC0")]
		public static string RandomString(int size, bool lowerCase)
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1BC8C4C", Offset = "0x1BC8C4C", VA = "0x1BC8C4C")]
		public static bool ContainsAny(string haystack, params string[] needles)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1BC8CD0", Offset = "0x1BC8CD0", VA = "0x1BC8CD0")]
		public static float ReadSingle(byte[] data, int offset, bool littleEndian)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1BC8DEC", Offset = "0x1BC8DEC", VA = "0x1BC8DEC")]
		public static uint ReadInt(byte[] data, int offset, bool littleEndian)
		{
			return default(uint);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1BC8F08", Offset = "0x1BC8F08", VA = "0x1BC8F08")]
		public static float Clamp01(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1BC8F24", Offset = "0x1BC8F24", VA = "0x1BC8F24")]
		public static float ReadSingle(float roll)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1BC8F64", Offset = "0x1BC8F64", VA = "0x1BC8F64")]
		public static float Lerp(float a, float b, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1BC8994", Offset = "0x1BC8994", VA = "0x1BC8994")]
		public static float floatConversion(byte[] bytes)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1BC8F88", Offset = "0x1BC8F88", VA = "0x1BC8F88")]
		public static float ClampBetween(float v, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1BC8FA4", Offset = "0x1BC8FA4", VA = "0x1BC8FA4")]
		public static float Clamp(float v, float limit)
		{
			return default(float);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1BC8FD4", Offset = "0x1BC8FD4", VA = "0x1BC8FD4")]
		public static float NormalizeAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1BC9030", Offset = "0x1BC9030", VA = "0x1BC9030")]
		public static string StringToFilename(string s)
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1BC9150", Offset = "0x1BC9150", VA = "0x1BC9150")]
		public static double RadianToDegree(double angle)
		{
			return default(double);
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x1BC9160", Offset = "0x1BC9160", VA = "0x1BC9160")]
		public static float ByteArrayToFloat(byte[] floatBytes, int startIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1BC92C8", Offset = "0x1BC92C8", VA = "0x1BC92C8")]
		public static byte[] AddByteToArray(byte[] bArray, byte newByte)
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1BC9354", Offset = "0x1BC9354", VA = "0x1BC9354")]
		public static byte[] IntToByteArray(int intValue)
		{
			return null;
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x1BC93E8", Offset = "0x1BC93E8", VA = "0x1BC93E8")]
		public static byte[] FloatToByteArray(float floatValue)
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1BC9484", Offset = "0x1BC9484", VA = "0x1BC9484")]
		public static byte[] BoolToByteArray(bool boolValue)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1BC94DC", Offset = "0x1BC94DC", VA = "0x1BC94DC")]
		public static int ByteArrayToInt(byte[] intBytes, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x1BC9644", Offset = "0x1BC9644", VA = "0x1BC9644")]
		public static bool ByteArrayToBool(byte[] boolBytes, int startIndex)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000485")]
	public class MotionCompensation : MonoBehaviour
	{
		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform cameraOffsetTransform;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private YawController yawController;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 0.9f)]
		[SerializeField]
		private float smoothing;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 simData;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 offset;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x1BC972C", Offset = "0x1BC972C", VA = "0x1BC972C")]
		public void UpdateOffset()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x1BC9738", Offset = "0x1BC9738", VA = "0x1BC9738")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x1BC98F0", Offset = "0x1BC98F0", VA = "0x1BC98F0")]
		public MotionCompensation()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class SampleYawControllerDelegateImplementation : MonoBehaviour, YawControllerDelegate
	{
		[Token(Token = "0x2000487")]
		[CompilerGenerated]
		private sealed class <SearchForDevices>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SampleYawControllerDelegateImplementation <>4__this;

			[Token(Token = "0x17000390")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1A")]
				[Address(RVA = "0x1BCBEF0", Offset = "0x1BCBEF0", VA = "0x1BCBEF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000391")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0x1BCBF38", Offset = "0x1BCBF38", VA = "0x1BCBF38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x1BCA11C", Offset = "0x1BCA11C", VA = "0x1BCA11C")]
			[DebuggerHidden]
			public <SearchForDevices>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x1BCBCE8", Offset = "0x1BCBCE8", VA = "0x1BCBCE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x1BCBCEC", Offset = "0x1BCBCEC", VA = "0x1BCBCEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x1BCBEF8", Offset = "0x1BCBEF8", VA = "0x1BCBEF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000489")]
		[CompilerGenerated]
		private sealed class <ClearError>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int duration;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SampleYawControllerDelegateImplementation <>4__this;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E22")]
				[Address(RVA = "0x1BCC040", Offset = "0x1BCC040", VA = "0x1BCC040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E24")]
				[Address(RVA = "0x1BCC088", Offset = "0x1BCC088", VA = "0x1BCC088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x1BCB218", Offset = "0x1BCB218", VA = "0x1BCB218")]
			[DebuggerHidden]
			public <ClearError>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x1BCBF60", Offset = "0x1BCBF60", VA = "0x1BCBF60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x1BCBF64", Offset = "0x1BCBF64", VA = "0x1BCBF64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x1BCC048", Offset = "0x1BCC048", VA = "0x1BCC048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text setupTitleLabel;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject deviceListScrollViewContent;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject DeviceListItemPrefab;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button connectButton;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField ipAddressInputField;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField udpPortInputField;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InputField tcpPortInputField;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button disconnectButton;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text errorText;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int? udpPort;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int? tcpPort;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IPAddress ipAddress;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private YawDevice selectedDevice;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject settingsPanel;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject buttonSample;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<IPAddress> foundIps;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine searchCoroutine;

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x1BC9904", Offset = "0x1BC9904", VA = "0x1BC9904")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x1BC9F50", Offset = "0x1BC9F50", VA = "0x1BC9F50", Slot = "7")]
		public void DeviceStoppedFromApp()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x1BC9FB8", Offset = "0x1BC9FB8", VA = "0x1BC9FB8", Slot = "8")]
		public void DeviceStartedFromApp()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x1BCA020", Offset = "0x1BCA020", VA = "0x1BCA020")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1BCA0A8", Offset = "0x1BCA0A8", VA = "0x1BCA0A8")]
		[IteratorStateMachine(typeof(<SearchForDevices>d__21))]
		private IEnumerator SearchForDevices()
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x1BCA144", Offset = "0x1BCA144", VA = "0x1BCA144")]
		private void UDPPortInputFieldTextDidChange(InputField inputField)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1BCA318", Offset = "0x1BCA318", VA = "0x1BCA318")]
		private void TCPPortInputFieldTextDidChange(InputField inputField)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1BCA3C4", Offset = "0x1BCA3C4", VA = "0x1BCA3C4")]
		private void IPAddressInputFieldTextDidChange(InputField inputField)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1BCA1F0", Offset = "0x1BCA1F0", VA = "0x1BCA1F0")]
		private void SetDeviceFromPortAndIp()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x1BCA55C", Offset = "0x1BCA55C", VA = "0x1BCA55C")]
		private void ConnectButtonPressed()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1BCA978", Offset = "0x1BCA978", VA = "0x1BCA978")]
		private void DisconnectButtonPressed()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x1BCAC1C", Offset = "0x1BCAC1C", VA = "0x1BCAC1C")]
		private void DeviceListItemPressed(YawDevice device)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1BCAD44", Offset = "0x1BCAD44", VA = "0x1BCAD44", Slot = "5")]
		public void DidFoundDevice(YawDevice device)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1BCA684", Offset = "0x1BCA684", VA = "0x1BCA684")]
		private bool SameDevice(YawDevice device, YawDevice toDevice)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1BCB078", Offset = "0x1BCB078", VA = "0x1BCB078", Slot = "6")]
		public void DidDisconnectFrom(YawDevice device)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1BCB190", Offset = "0x1BCB190", VA = "0x1BCB190", Slot = "4")]
		public void ControllerStateChanged(ControllerState state)
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1BC9C0C", Offset = "0x1BC9C0C", VA = "0x1BC9C0C")]
		private void RefreshLayout(ControllerState state)
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x1BCB0C4", Offset = "0x1BCB0C4", VA = "0x1BCB0C4")]
		private void ShowError(string error, int duration = 10)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1BCB194", Offset = "0x1BCB194", VA = "0x1BCB194")]
		[IteratorStateMachine(typeof(<ClearError>d__35))]
		private IEnumerator ClearError(int duration)
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1BCB240", Offset = "0x1BCB240", VA = "0x1BCB240")]
		public void ParkDevice()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1BCB448", Offset = "0x1BCB448", VA = "0x1BCB448")]
		public void StartDevice()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1BCB5EC", Offset = "0x1BCB5EC", VA = "0x1BCB5EC")]
		public void CalibrateDevice()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1BCB768", Offset = "0x1BCB768", VA = "0x1BCB768")]
		public void HideShowPanel()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1BCB860", Offset = "0x1BCB860", VA = "0x1BCB860")]
		private void ClearList()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1BCBBFC", Offset = "0x1BCBBFC", VA = "0x1BCBBFC")]
		public SampleYawControllerDelegateImplementation()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class RotationLimitsPanel : MonoBehaviour
	{
		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputField yaw;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputField pitch;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField roll;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YawController controller;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x1BCC090", Offset = "0x1BCC090", VA = "0x1BCC090")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x1BCC0F0", Offset = "0x1BCC0F0", VA = "0x1BCC0F0")]
		public void OnChange()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x1BCC258", Offset = "0x1BCC258", VA = "0x1BCC258")]
		public RotationLimitsPanel()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class RotationPanel : MonoBehaviour
	{
		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputField yaw;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputField pitch;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField roll;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YawController controller;

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x1BCC260", Offset = "0x1BCC260", VA = "0x1BCC260")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x1BCC2C0", Offset = "0x1BCC2C0", VA = "0x1BCC2C0")]
		public void OnChange()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x1BCC408", Offset = "0x1BCC408", VA = "0x1BCC408")]
		public RotationPanel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public struct OVector
	{
		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float yaw;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float pitch;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float roll;

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x1BCC410", Offset = "0x1BCC410", VA = "0x1BCC410")]
		public OVector(float yaw, float pitch, float roll)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048D")]
	public struct Parameters
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte Power;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte RollLimit;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte PitchLimitF;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte PitchLimitB;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint YawLimit;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool hasYawLimit;
	}
	[Serializable]
	[Token(Token = "0x200048E")]
	public class Buzzer
	{
		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isOn;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int right_amp;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int center_amp;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int left_amp;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int hz;

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x1BC6250", Offset = "0x1BC6250", VA = "0x1BC6250")]
		public void SetBuzzerAmps(int right, int center, int left)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1BCC41C", Offset = "0x1BCC41C", VA = "0x1BCC41C")]
		public void SetHz(int buzzerHz)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x1BCC424", Offset = "0x1BCC424", VA = "0x1BCC424")]
		public void SetOn(bool b)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x1BCC430", Offset = "0x1BCC430", VA = "0x1BCC430")]
		public Buzzer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048F")]
	public class Limits
	{
		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yaw;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pitch;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float roll;

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1BCC438", Offset = "0x1BCC438", VA = "0x1BCC438")]
		public Limits(float yaw, float pitch, float roll)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public interface YawControllerDelegate
	{
		[Token(Token = "0x6001E31")]
		void ControllerStateChanged(ControllerState state);

		[Token(Token = "0x6001E32")]
		void DidFoundDevice(YawDevice device);

		[Token(Token = "0x6001E33")]
		void DidDisconnectFrom(YawDevice device);

		[Token(Token = "0x6001E34")]
		void DeviceStoppedFromApp();

		[Token(Token = "0x6001E35")]
		void DeviceStartedFromApp();
	}
	[Token(Token = "0x2000491")]
	public interface YawControllerType
	{
		[Token(Token = "0x17000394")]
		ControllerState State
		{
			[Token(Token = "0x6001E36")]
			get;
		}

		[Token(Token = "0x17000395")]
		YawDevice Device
		{
			[Token(Token = "0x6001E37")]
			get;
		}

		[Token(Token = "0x17000396")]
		YawControllerDelegate ControllerDelegate
		{
			[Token(Token = "0x6001E38")]
			get;
			[Token(Token = "0x6001E39")]
			set;
		}

		[Token(Token = "0x17000397")]
		Vector3 RotationMultiplier
		{
			[Token(Token = "0x6001E3A")]
			get;
		}

		[Token(Token = "0x17000398")]
		Limits Limits
		{
			[Token(Token = "0x6001E3B")]
			get;
		}

		[Token(Token = "0x17000399")]
		Buzzer Buzzer
		{
			[Token(Token = "0x6001E3C")]
			get;
		}

		[Token(Token = "0x6001E3D")]
		void SetGameName(string gameName);

		[Token(Token = "0x6001E3E")]
		void DiscoverDevices(int onPort);

		[Token(Token = "0x6001E3F")]
		void SetTiltLimits(float yawLimit, float pitchLimit, float rollLimit);

		[Token(Token = "0x6001E40")]
		void ConnectToDevice(YawDevice yawDevice, Action onSuccess, Action<string> onError);

		[Token(Token = "0x6001E41")]
		void StartDevice(Action onSuccess, Action<string> onError);

		[Token(Token = "0x6001E42")]
		void StopDevice(bool park, Action onSuccess, Action<string> onError);

		[Token(Token = "0x6001E43")]
		void DisconnectFromDevice(Action onSuccess, Action<string> onError);

		[Token(Token = "0x6001E44")]
		void CalibrateDevice(bool allAxis);

		[Token(Token = "0x6001E45")]
		void SetRotationMultiplier(float yaw, float pitch, float roll);
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class StateChangeEvent : UnityEvent<DeviceState>
	{
		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x1BCC484", Offset = "0x1BCC484", VA = "0x1BCC484")]
		public StateChangeEvent()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class YawController : MonoBehaviour, YawControllerType, YawTCPClientDelegate, YawUDPClientDelegate
	{
		[Token(Token = "0x2000494")]
		private struct CallBacks
		{
			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action connectingSuccess;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Action<string> connectingError;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action startSuccess;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<string> startError;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action stopSuccess;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<string> stopError;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action exitSuccess;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> exitError;
		}

		[Token(Token = "0x2000495")]
		private struct CallbackTimeouts
		{
			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Coroutine connectingTimeout;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Coroutine startTimeout;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Coroutine stopTimeout;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Coroutine exitTimeout;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Coroutine tcpConnectionAttemptTimeout;
		}

		[Token(Token = "0x2000498")]
		[CompilerGenerated]
		private sealed class <ResponseTimeout>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<string> onError;

			[Token(Token = "0x170003A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7C")]
				[Address(RVA = "0x1BCF6D4", Offset = "0x1BCF6D4", VA = "0x1BCF6D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0x1BCF71C", Offset = "0x1BCF71C", VA = "0x1BCF71C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x1BCEC7C", Offset = "0x1BCEC7C", VA = "0x1BCEC7C")]
			[DebuggerHidden]
			public <ResponseTimeout>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1BCF5F8", Offset = "0x1BCF5F8", VA = "0x1BCF5F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1BCF5FC", Offset = "0x1BCF5FC", VA = "0x1BCF5FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1BCF6DC", Offset = "0x1BCF6DC", VA = "0x1BCF6DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000499")]
		[CompilerGenerated]
		private sealed class <DeviceDiscoveryCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YawController <>4__this;

			[Token(Token = "0x170003A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E82")]
				[Address(RVA = "0x1BCF7D4", Offset = "0x1BCF7D4", VA = "0x1BCF7D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E84")]
				[Address(RVA = "0x1BCF81C", Offset = "0x1BCF81C", VA = "0x1BCF81C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x1BCED30", Offset = "0x1BCED30", VA = "0x1BCED30")]
			[DebuggerHidden]
			public <DeviceDiscoveryCoroutine>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1BCF724", Offset = "0x1BCF724", VA = "0x1BCF724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1BCF728", Offset = "0x1BCF728", VA = "0x1BCF728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1BCF7DC", Offset = "0x1BCF7DC", VA = "0x1BCF7DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049A")]
		[CompilerGenerated]
		private sealed class <DeviceHeartbeat>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YawController <>4__this;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x170003A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0x1BCF9E0", Offset = "0x1BCF9E0", VA = "0x1BCF9E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8A")]
				[Address(RVA = "0x1BCFA28", Offset = "0x1BCFA28", VA = "0x1BCFA28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1BCEDCC", Offset = "0x1BCEDCC", VA = "0x1BCEDCC")]
			[DebuggerHidden]
			public <DeviceHeartbeat>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x1BCF824", Offset = "0x1BCF824", VA = "0x1BCF824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x1BCF828", Offset = "0x1BCF828", VA = "0x1BCF828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x1BCF9E8", Offset = "0x1BCF9E8", VA = "0x1BCF9E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static YawController instance;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<Action> OnConnectReceivers;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YawTCPClient tcpCLient;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YawUDPClient udpClient;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private YawDevice device;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ControllerState state;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int discoveryPort;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CallBacks callBacks;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CallbackTimeouts callbackTimeouts;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Orientation orientation;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private YawTracker yawTracker;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform referenceTransform;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string gameName;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ConnectType connectType;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string debug_ipAddress;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private int udpClientPort;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private OVector referenceRotation;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Vector3 rotationMultiplier;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Limits gameLimits;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Buzzer buzzer;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private byte smartPlug;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[Header("Camera Cancellation")]
		private MotionCompensation cancellation;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[Header("Events")]
		private UnityEvent onConnected;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UnityEvent onDisconnected;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private StateChangeEvent onStateChanged;

		[Token(Token = "0x1700039A")]
		public YawTracker TrackerObject
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x1BCC4CC", Offset = "0x1BCC4CC", VA = "0x1BCC4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public ControllerState State
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x1BCC4D4", Offset = "0x1BCC4D4", VA = "0x1BCC4D4", Slot = "4")]
			get
			{
				return default(ControllerState);
			}
		}

		[Token(Token = "0x1700039C")]
		public YawDevice Device
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x1BCC4DC", Offset = "0x1BCC4DC", VA = "0x1BCC4DC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public YawControllerDelegate ControllerDelegate
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x1BCC4E4", Offset = "0x1BCC4E4", VA = "0x1BCC4E4", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x1BCC4EC", Offset = "0x1BCC4EC", VA = "0x1BCC4EC", Slot = "7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public Vector3 RotationMultiplier
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x1BCC4F4", Offset = "0x1BCC4F4", VA = "0x1BCC4F4", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700039F")]
		public Limits Limits
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x1BCC500", Offset = "0x1BCC500", VA = "0x1BCC500", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public Buzzer Buzzer
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x1BCC508", Offset = "0x1BCC508", VA = "0x1BCC508", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x1BC6278", Offset = "0x1BC6278", VA = "0x1BC6278")]
		public static YawController Instance()
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x1BCC510", Offset = "0x1BCC510", VA = "0x1BCC510")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x1BCCA60", Offset = "0x1BCCA60", VA = "0x1BCCA60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x1BCCC00", Offset = "0x1BCCC00", VA = "0x1BCCC00")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x1BCCCBC", Offset = "0x1BCCCBC", VA = "0x1BCCCBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1BCD030", Offset = "0x1BCD030", VA = "0x1BCD030")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x1BCD080", Offset = "0x1BCD080", VA = "0x1BCD080", Slot = "11")]
		public void SetGameName(string gameName)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x1BCBE70", Offset = "0x1BCBE70", VA = "0x1BCBE70", Slot = "12")]
		public void DiscoverDevices(int onPort)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x1BCA6EC", Offset = "0x1BCA6EC", VA = "0x1BCA6EC", Slot = "14")]
		public void ConnectToDevice(YawDevice yawDevice, Action onSuccess, Action<string> onError)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x1BCB4D8", Offset = "0x1BCB4D8", VA = "0x1BCB4D8", Slot = "15")]
		public void StartDevice([Optional] Action onSuccess, [Optional] Action<string> onError)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x1BCB2D4", Offset = "0x1BCB2D4", VA = "0x1BCB2D4", Slot = "16")]
		public void StopDevice(bool park, [Optional] Action onSuccess, [Optional] Action<string> onError)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x1BCB674", Offset = "0x1BCB674", VA = "0x1BCB674", Slot = "18")]
		public void CalibrateDevice(bool allAxis)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x1BCAA5C", Offset = "0x1BCAA5C", VA = "0x1BCAA5C", Slot = "17")]
		public void DisconnectFromDevice(Action onSuccess, Action<string> onError)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x1BCD670", Offset = "0x1BCD670", VA = "0x1BCD670", Slot = "22")]
		public void DidRecieveUDPMessage(string message, IPEndPoint remoteEndPoint)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x1BCDF70", Offset = "0x1BCDF70", VA = "0x1BCDF70", Slot = "20")]
		public void DidRecieveTCPMessage(byte[] data)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x1BCE908", Offset = "0x1BCE908", VA = "0x1BCE908", Slot = "21")]
		public void DidLostServerConnection()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x1BCC238", Offset = "0x1BCC238", VA = "0x1BCC238", Slot = "13")]
		public void SetTiltLimits(float yawLimit, float pitchLimit, float rollLimit)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x1BCC3FC", Offset = "0x1BCC3FC", VA = "0x1BCC3FC", Slot = "19")]
		public void SetRotationMultiplier(float yaw, float pitch, float roll)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x1BCCC70", Offset = "0x1BCCC70", VA = "0x1BCCC70")]
		private void SendMotionData()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x1BCEA34", Offset = "0x1BCEA34", VA = "0x1BCEA34")]
		private void SendRotation(OVector rotation)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x1BC748C", Offset = "0x1BC748C", VA = "0x1BC748C")]
		public void SendLED(Color32[] colors)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x1BC68C8", Offset = "0x1BC68C8", VA = "0x1BC68C8")]
		public void SendLED(Color32 color)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x1BCEC04", Offset = "0x1BCEC04", VA = "0x1BCEC04")]
		public void UpdateIMUOffset()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x1BCD284", Offset = "0x1BCD284", VA = "0x1BCD284")]
		private void SetState(ControllerState newState)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x1BCD368", Offset = "0x1BCD368", VA = "0x1BCD368")]
		[IteratorStateMachine(typeof(<ResponseTimeout>d__65))]
		private IEnumerator ResponseTimeout(Action<string> onError)
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x1BCEA14", Offset = "0x1BCEA14", VA = "0x1BCEA14")]
		private float SignedForm(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x1BCECA4", Offset = "0x1BCECA4", VA = "0x1BCECA4")]
		private float UnsignedForm(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x1BCCB7C", Offset = "0x1BCCB7C", VA = "0x1BCCB7C")]
		private void AutoConnectFirst()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x1BCECBC", Offset = "0x1BCECBC", VA = "0x1BCECBC")]
		[IteratorStateMachine(typeof(<DeviceDiscoveryCoroutine>d__71))]
		private IEnumerator DeviceDiscoveryCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x1BCED58", Offset = "0x1BCED58", VA = "0x1BCED58")]
		[IteratorStateMachine(typeof(<DeviceHeartbeat>d__72))]
		private IEnumerator DeviceHeartbeat()
		{
			return null;
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x1BCEDF4", Offset = "0x1BCEDF4", VA = "0x1BCEDF4")]
		private void DidFoundDevice(YawDevice device)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x1BCF04C", Offset = "0x1BCF04C", VA = "0x1BCF04C")]
		public YawController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public enum DeviceType
	{
		[Token(Token = "0x4001FE8")]
		YAW1,
		[Token(Token = "0x4001FE9")]
		YAW2
	}
	[Serializable]
	[Token(Token = "0x200049D")]
	public enum DeviceState
	{
		[Token(Token = "0x4001FEB")]
		STOPPED,
		[Token(Token = "0x4001FEC")]
		STARTED,
		[Token(Token = "0x4001FED")]
		NOTRACKER,
		[Token(Token = "0x4001FEE")]
		PARKING
	}
	[Serializable]
	[Token(Token = "0x200049E")]
	public class YawDevice
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPAddress ipAddress;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int tcpPort;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int udpPort;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string id;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string name;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DeviceStatus status;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float batteryVoltage;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float batteryPercent;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OVector ActualPosition;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Parameters deviceParams;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public DeviceType type;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public byte[] temps;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DeviceState State;

		[Token(Token = "0x170003A7")]
		public IPAddress IPAddress
		{
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x1BCFB78", Offset = "0x1BCFB78", VA = "0x1BCFB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public int TCPPort
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x1BCFB80", Offset = "0x1BCFB80", VA = "0x1BCFB80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A9")]
		public int UDPPort
		{
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x1BCFB88", Offset = "0x1BCFB88", VA = "0x1BCFB88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AA")]
		public string Id
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x1BCFB90", Offset = "0x1BCFB90", VA = "0x1BCFB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public string Name
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x1BCFB98", Offset = "0x1BCFB98", VA = "0x1BCFB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public DeviceStatus Status
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x1BCFBA0", Offset = "0x1BCFBA0", VA = "0x1BCFBA0")]
			get
			{
				return default(DeviceStatus);
			}
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1BCA47C", Offset = "0x1BCA47C", VA = "0x1BCA47C")]
		public YawDevice(IPAddress ipAddress, DeviceType type, int tcpPort, int udpPort, string id, string name, DeviceStatus status)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x1BCFBA8", Offset = "0x1BCFBA8", VA = "0x1BCFBA8")]
		public void SetStatus(DeviceStatus status)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public interface YawTCPClientDelegate
	{
		[Token(Token = "0x6001E97")]
		void DidRecieveTCPMessage(byte[] data);

		[Token(Token = "0x6001E98")]
		void DidLostServerConnection();
	}
	[Token(Token = "0x20004A0")]
	public class YawTCPClient
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TcpClient tcpClient;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YawTCPClientDelegate tcpDelegate;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool connected;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action onConnectionSuccess;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<string> onConnectionError;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IAsyncResult ar;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread connectionThread;

		[Token(Token = "0x170003AD")]
		public bool Connected
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x1BCFBB0", Offset = "0x1BCFBB0", VA = "0x1BCFBB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x1BCD3DC", Offset = "0x1BCD3DC", VA = "0x1BCD3DC")]
		public void Initialize(string ip, int port, Action onConnectionSuccess, Action<string> onConnectionError)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x1BCFBC0", Offset = "0x1BCFBC0", VA = "0x1BCFBC0")]
		private void Connection(string ip, int port)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x1BCF1B8", Offset = "0x1BCF1B8", VA = "0x1BCF1B8")]
		public void StopConnecting()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x1BCF3B4", Offset = "0x1BCF3B4", VA = "0x1BCF3B4")]
		public void BeginRead()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x1BCFED0", Offset = "0x1BCFED0", VA = "0x1BCFED0")]
		public void EndRead(IAsyncResult result)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1BCD5A4", Offset = "0x1BCD5A4", VA = "0x1BCD5A4")]
		public void BeginSend(byte[] data)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x1BD0168", Offset = "0x1BD0168", VA = "0x1BD0168")]
		public void EndSend(IAsyncResult result)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1BCCDB8", Offset = "0x1BCCDB8", VA = "0x1BCCDB8")]
		public void CloseConnection()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1BCC7D4", Offset = "0x1BCC7D4", VA = "0x1BCC7D4")]
		public YawTCPClient()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class YawTracker : MonoBehaviour
	{
		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YawController yawController;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x1BD05C8", Offset = "0x1BD05C8", VA = "0x1BD05C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x1BD063C", Offset = "0x1BD063C", VA = "0x1BD063C")]
		public void SetRotation(Vector3 rot)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x1BD0704", Offset = "0x1BD0704", VA = "0x1BD0704")]
		private Vector3 ApplyMultipliers(Vector3 rot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1BD0730", Offset = "0x1BD0730", VA = "0x1BD0730")]
		private Vector3 ApplyLimits(Vector3 rot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1BD06CC", Offset = "0x1BD06CC", VA = "0x1BD06CC")]
		private Vector3 SignedVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x1BD07CC", Offset = "0x1BD07CC", VA = "0x1BD07CC")]
		public YawTracker()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public interface YawUDPClientDelegate
	{
		[Token(Token = "0x6001EB1")]
		void DidRecieveUDPMessage(string message, IPEndPoint remoteEndPoint);
	}
	[Token(Token = "0x20004A6")]
	public class YawUDPClient
	{
		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int listeningPort;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UdpClient udpClient;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint remoteEndPoint;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YawUDPClientDelegate udpDelegate;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IAsyncResult ar_;

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x1BCC7DC", Offset = "0x1BCC7DC", VA = "0x1BCC7DC")]
		public YawUDPClient(int listeningPort)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x1BCE888", Offset = "0x1BCE888", VA = "0x1BCE888")]
		public void SetRemoteEndPoint(IPAddress ipAddress, int port)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x1BCC95C", Offset = "0x1BCC95C", VA = "0x1BCC95C")]
		public void StartListening()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1BCCF1C", Offset = "0x1BCCF1C", VA = "0x1BCCF1C")]
		public void StopListening()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x1BD07D4", Offset = "0x1BD07D4", VA = "0x1BD07D4")]
		private void StartListeningToMessages()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x1BD08A8", Offset = "0x1BD08A8", VA = "0x1BD08A8")]
		private void Receive(IAsyncResult ar)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x1BCD088", Offset = "0x1BCD088", VA = "0x1BCD088")]
		public void SendBroadcast(int port, byte[] data)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1BCEAD4", Offset = "0x1BCEAD4", VA = "0x1BCEAD4")]
		public void Send(byte[] data)
		{
		}
	}
}
namespace VehicleBehaviour
{
	[Token(Token = "0x20004A8")]
	[RequireComponent(typeof(Rigidbody))]
	public class WheelVehicle : MonoBehaviour
	{
		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Inputs")]
		[SerializeField]
		private bool isPlayer;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string throttleInput;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string brakeInput;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string turnInput;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string jumpInput;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string driftInput;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string boostInput;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve turnInputCurve;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Wheels")]
		[SerializeField]
		private WheelCollider[] driveWheel;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private WheelCollider[] turnWheel;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isGrounded;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int lastGroundCheck;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Header("Behaviour")]
		private AnimationCurve motorTorque;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(2f, 16f)]
		[SerializeField]
		private float diffGearing;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float brakeForce;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 50f)]
		[SerializeField]
		private float steerAngle;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[Range(0.001f, 1f)]
		private float steerSpeed;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Range(1f, 1.5f)]
		[SerializeField]
		private float jumpVel;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[Range(0f, 2f)]
		private float driftIntensity;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 spawnPosition;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion spawnRotation;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform centerOfMass;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[Range(0.5f, 10f)]
		private float downforce;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float steering;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float throttle;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private bool handbrake;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		[HideInInspector]
		public bool allowDrift;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		private bool drift;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool jumping;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem[] boostParticles;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip boostClip;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioSource boostSource;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Rigidbody _rb;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private WheelCollider[] wheels;

		[Token(Token = "0x170003AE")]
		public bool IsPlayer
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x1BD0B70", Offset = "0x1BD0B70", VA = "0x1BD0B70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x1BD0B78", Offset = "0x1BD0B78", VA = "0x1BD0B78")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public WheelCollider[] DriveWheel
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x1BD0B84", Offset = "0x1BD0B84", VA = "0x1BD0B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public WheelCollider[] TurnWheel
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x1BD0B8C", Offset = "0x1BD0B8C", VA = "0x1BD0B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public bool IsGrounded
		{
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x1BD0B94", Offset = "0x1BD0B94", VA = "0x1BD0B94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public float DiffGearing
		{
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x1BD0C5C", Offset = "0x1BD0C5C", VA = "0x1BD0C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x1BD0C64", Offset = "0x1BD0C64", VA = "0x1BD0C64")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public float BrakeForce
		{
			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x1BD0C6C", Offset = "0x1BD0C6C", VA = "0x1BD0C6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x1BD0C74", Offset = "0x1BD0C74", VA = "0x1BD0C74")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public float SteerAngle
		{
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x1BD0C7C", Offset = "0x1BD0C7C", VA = "0x1BD0C7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x1BD0C84", Offset = "0x1BD0C84", VA = "0x1BD0C84")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public float SteerSpeed
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x1BD0CA4", Offset = "0x1BD0CA4", VA = "0x1BD0CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x1BD0CAC", Offset = "0x1BD0CAC", VA = "0x1BD0CAC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public float JumpVel
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x1BD0CCC", Offset = "0x1BD0CCC", VA = "0x1BD0CCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1BD0CD4", Offset = "0x1BD0CD4", VA = "0x1BD0CD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public float DriftIntensity
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x1BD0CF0", Offset = "0x1BD0CF0", VA = "0x1BD0CF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x1BD0CF8", Offset = "0x1BD0CF8", VA = "0x1BD0CF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public float Downforce
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x1BD0D14", Offset = "0x1BD0D14", VA = "0x1BD0D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x1BD0D1C", Offset = "0x1BD0D1C", VA = "0x1BD0D1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public float Steering
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x1BD0D38", Offset = "0x1BD0D38", VA = "0x1BD0D38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x1BD0D40", Offset = "0x1BD0D40", VA = "0x1BD0D40")]
			set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		public float Throttle
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x1BD0D5C", Offset = "0x1BD0D5C", VA = "0x1BD0D5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x1BD0D64", Offset = "0x1BD0D64", VA = "0x1BD0D64")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public bool Handbrake
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x1BD0D80", Offset = "0x1BD0D80", VA = "0x1BD0D80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x1BD0D88", Offset = "0x1BD0D88", VA = "0x1BD0D88")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public bool Drift
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x1BD0D94", Offset = "0x1BD0D94", VA = "0x1BD0D94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x1BD0D9C", Offset = "0x1BD0D9C", VA = "0x1BD0D9C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public float Speed
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x1BD0DA8", Offset = "0x1BD0DA8", VA = "0x1BD0DA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1BD0DB0", Offset = "0x1BD0DB0", VA = "0x1BD0DB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x1BD0FA0", Offset = "0x1BD0FA0", VA = "0x1BD0FA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x1BD162C", Offset = "0x1BD162C", VA = "0x1BD162C")]
		public void ResetPos()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x1BD1714", Offset = "0x1BD1714", VA = "0x1BD1714")]
		public void toogleHandbrake(bool h)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x1BD1620", Offset = "0x1BD1620", VA = "0x1BD1620")]
		private float GetInput(string input)
		{
			return default(float);
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1BD1720", Offset = "0x1BD1720", VA = "0x1BD1720")]
		public WheelVehicle()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x20004A9")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	[AddComponentMenu("Kino Image Effects/Ramp")]
	public class Ramp : MonoBehaviour
	{
		[Token(Token = "0x20004AA")]
		public enum BlendMode
		{
			[Token(Token = "0x4002041")]
			Multiply,
			[Token(Token = "0x4002042")]
			Screen,
			[Token(Token = "0x4002043")]
			Overlay,
			[Token(Token = "0x4002044")]
			HardLight,
			[Token(Token = "0x4002045")]
			SoftLight
		}

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _color1;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Range(-180f, 180f)]
		private float _angle;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _opacity;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BlendMode _blendMode;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _debug;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _material;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] _blendModeKeywords;

		[Token(Token = "0x170003BE")]
		public Color color1
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x1BD1A18", Offset = "0x1BD1A18", VA = "0x1BD1A18")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x1BD1A24", Offset = "0x1BD1A24", VA = "0x1BD1A24")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public Color color2
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x1BD1A30", Offset = "0x1BD1A30", VA = "0x1BD1A30")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x1BD1A3C", Offset = "0x1BD1A3C", VA = "0x1BD1A3C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public float angle
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1BD1A48", Offset = "0x1BD1A48", VA = "0x1BD1A48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x1BD1A50", Offset = "0x1BD1A50", VA = "0x1BD1A50")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public float opacity
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x1BD1A58", Offset = "0x1BD1A58", VA = "0x1BD1A58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x1BD1A60", Offset = "0x1BD1A60", VA = "0x1BD1A60")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public BlendMode blendMode
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x1BD1A68", Offset = "0x1BD1A68", VA = "0x1BD1A68")]
			get
			{
				return default(BlendMode);
			}
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x1BD1A70", Offset = "0x1BD1A70", VA = "0x1BD1A70")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x1BD1A78", Offset = "0x1BD1A78", VA = "0x1BD1A78")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1BD1E00", Offset = "0x1BD1E00", VA = "0x1BD1E00")]
		public Ramp()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x20004AB")]
	public struct InputDeviceWrapper
	{
		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private InputDevice m_inputDevice;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XRNode m_deviceNode;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isSteamVR;

		[Token(Token = "0x170003C3")]
		public bool isValid
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x1BD214C", Offset = "0x1BD214C", VA = "0x1BD214C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C4")]
		public string name
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x1BD2154", Offset = "0x1BD2154", VA = "0x1BD2154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		[Obsolete("This API has been marked as deprecated and will be removed in future versions. Please use InputDevice.characteristics instead.")]
		public InputDeviceRole role
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x1BD215C", Offset = "0x1BD215C", VA = "0x1BD215C")]
			get
			{
				return default(InputDeviceRole);
			}
		}

		[Token(Token = "0x170003C6")]
		public string manufacturer
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x1BD2164", Offset = "0x1BD2164", VA = "0x1BD2164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		public string serialNumber
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x1BD216C", Offset = "0x1BD216C", VA = "0x1BD216C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public InputDeviceCharacteristics characteristics
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x1BD2174", Offset = "0x1BD2174", VA = "0x1BD2174")]
			get
			{
				return default(InputDeviceCharacteristics);
			}
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1BD208C", Offset = "0x1BD208C", VA = "0x1BD208C")]
		public InputDeviceWrapper(XRNode deviceNode)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1BD217C", Offset = "0x1BD217C", VA = "0x1BD217C")]
		public bool SendHapticImpulse(uint channel, float amplitude, float duration = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1BD2184", Offset = "0x1BD2184", VA = "0x1BD2184")]
		public bool SendHapticBuffer(uint channel, byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1BD218C", Offset = "0x1BD218C", VA = "0x1BD218C")]
		public bool TryGetHapticCapabilities(out HapticCapabilities capabilities)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1BD2194", Offset = "0x1BD2194", VA = "0x1BD2194")]
		public void StopHaptics()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1BD219C", Offset = "0x1BD219C", VA = "0x1BD219C")]
		public bool TryGetFeatureUsages(List<InputFeatureUsage> featureUsages)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1BD21A4", Offset = "0x1BD21A4", VA = "0x1BD21A4")]
		public bool TryGetFeatureValue(InputFeatureUsage<bool> usage, out bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1BD21AC", Offset = "0x1BD21AC", VA = "0x1BD21AC")]
		public bool TryGetFeatureValue(InputFeatureUsage<uint> usage, out uint value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1BD21B4", Offset = "0x1BD21B4", VA = "0x1BD21B4")]
		public bool TryGetFeatureValue(InputFeatureUsage<float> usage, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x1BD21BC", Offset = "0x1BD21BC", VA = "0x1BD21BC")]
		public bool TryGetFeatureValue(InputFeatureUsage<Vector2> usage, out Vector2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1BD21C4", Offset = "0x1BD21C4", VA = "0x1BD21C4")]
		public bool TryGetFeatureValue(InputFeatureUsage<Vector3> usage, out Vector3 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x1BD21CC", Offset = "0x1BD21CC", VA = "0x1BD21CC")]
		public bool TryGetFeatureValue(InputFeatureUsage<Quaternion> usage, out Quaternion value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x1BD21D4", Offset = "0x1BD21D4", VA = "0x1BD21D4")]
		public bool TryGetFeatureValue(InputFeatureUsage<Hand> usage, out Hand value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1BD21DC", Offset = "0x1BD21DC", VA = "0x1BD21DC")]
		public bool TryGetFeatureValue(InputFeatureUsage<Bone> usage, out Bone value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1BD21E4", Offset = "0x1BD21E4", VA = "0x1BD21E4")]
		public bool TryGetFeatureValue(InputFeatureUsage<Eyes> usage, out Eyes value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x1BD21EC", Offset = "0x1BD21EC", VA = "0x1BD21EC")]
		public bool TryGetFeatureValue(InputFeatureUsage<byte[]> usage, byte[] value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x1BD21F4", Offset = "0x1BD21F4", VA = "0x1BD21F4")]
		public bool TryGetFeatureValue(InputFeatureUsage<InputTrackingState> usage, out InputTrackingState value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1BD21FC", Offset = "0x1BD21FC", VA = "0x1BD21FC")]
		public bool TryGetFeatureValue(InputFeatureUsage<bool> usage, DateTime time, out bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1BD2204", Offset = "0x1BD2204", VA = "0x1BD2204")]
		public bool TryGetFeatureValue(InputFeatureUsage<uint> usage, DateTime time, out uint value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x1BD220C", Offset = "0x1BD220C", VA = "0x1BD220C")]
		public bool TryGetFeatureValue(InputFeatureUsage<float> usage, DateTime time, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1BD2214", Offset = "0x1BD2214", VA = "0x1BD2214")]
		public bool TryGetFeatureValue(InputFeatureUsage<Vector2> usage, DateTime time, out Vector2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1BD221C", Offset = "0x1BD221C", VA = "0x1BD221C")]
		public bool TryGetFeatureValue(InputFeatureUsage<Vector3> usage, DateTime time, out Vector3 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1BD2224", Offset = "0x1BD2224", VA = "0x1BD2224")]
		public bool TryGetFeatureValue(InputFeatureUsage<Quaternion> usage, DateTime time, out Quaternion value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1BD222C", Offset = "0x1BD222C", VA = "0x1BD222C")]
		public bool TryGetFeatureValue(InputFeatureUsage<InputTrackingState> usage, DateTime time, out InputTrackingState value)
		{
			return default(bool);
		}
	}
}
namespace HauntedCastle
{
	[Token(Token = "0x20004AC")]
	public class ChangeTexture : MonoBehaviour
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture DefaultTexture;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture NewTexture;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PointLight;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture originalTexture;

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1BD2234", Offset = "0x1BD2234", VA = "0x1BD2234")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1BD22F8", Offset = "0x1BD22F8", VA = "0x1BD22F8")]
		public void Change()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x1BD2394", Offset = "0x1BD2394", VA = "0x1BD2394")]
		public ChangeTexture()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class JumpScare : MonoBehaviour
	{
		[Token(Token = "0x20004AE")]
		[CompilerGenerated]
		private sealed class <WaitForUserLookCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JumpScare <>4__this;

			[Token(Token = "0x170003C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F13")]
				[Address(RVA = "0x1BD2594", Offset = "0x1BD2594", VA = "0x1BD2594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F15")]
				[Address(RVA = "0x1BD25DC", Offset = "0x1BD25DC", VA = "0x1BD25DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x1BD2430", Offset = "0x1BD2430", VA = "0x1BD2430")]
			[DebuggerHidden]
			public <WaitForUserLookCoroutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x1BD2468", Offset = "0x1BD2468", VA = "0x1BD2468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x1BD246C", Offset = "0x1BD246C", VA = "0x1BD246C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x1BD259C", Offset = "0x1BD259C", VA = "0x1BD259C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayableDirector JumpScareTimeline;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ObjectToLookAt;

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x1BD239C", Offset = "0x1BD239C", VA = "0x1BD239C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x1BD23BC", Offset = "0x1BD23BC", VA = "0x1BD23BC")]
		[IteratorStateMachine(typeof(<WaitForUserLookCoroutine>d__3))]
		private IEnumerator WaitForUserLookCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1BD2458", Offset = "0x1BD2458", VA = "0x1BD2458")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1BD2460", Offset = "0x1BD2460", VA = "0x1BD2460")]
		public JumpScare()
		{
		}
	}
}
namespace EpicRC.WyvernSiege
{
	[Token(Token = "0x20004AF")]
	public class TriggerBrokenFence : MonoBehaviour
	{
		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Force;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audio;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AlreadyTriggered;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool AlreadyInitialized;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CoasterType CoasterMode;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CartType CartType;

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x1BD25E4", Offset = "0x1BD25E4", VA = "0x1BD25E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x1BD2690", Offset = "0x1BD2690", VA = "0x1BD2690")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x1BD28D8", Offset = "0x1BD28D8", VA = "0x1BD28D8")]
		public bool VerifyConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1BD29BC", Offset = "0x1BD29BC", VA = "0x1BD29BC")]
		public TriggerBrokenFence()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class TriggerChangeShader : MonoBehaviour
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Object;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader StartShader;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader NewShader;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AlreadyTriggered;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool AlreadyInitialized;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CoasterType CoasterMode;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CartType CartType;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer renderer;

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1BD29E0", Offset = "0x1BD29E0", VA = "0x1BD29E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1BD2AD4", Offset = "0x1BD2AD4", VA = "0x1BD2AD4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1BD2BCC", Offset = "0x1BD2BCC", VA = "0x1BD2BCC")]
		public bool VerifyConditions()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x1BD2CB0", Offset = "0x1BD2CB0", VA = "0x1BD2CB0")]
		public TriggerChangeShader()
		{
		}
	}
}
namespace EpicRC.NeonRider
{
	[Token(Token = "0x20004B1")]
	public class FinalSpaceShip : MonoBehaviour
	{
		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Parent;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool ready;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cartTr;

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1BD2CC0", Offset = "0x1BD2CC0", VA = "0x1BD2CC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1BD2D38", Offset = "0x1BD2D38", VA = "0x1BD2D38")]
		public void SetParent()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1BD2E00", Offset = "0x1BD2E00", VA = "0x1BD2E00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1BD2F80", Offset = "0x1BD2F80", VA = "0x1BD2F80")]
		public void EndRide()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1BD2FD4", Offset = "0x1BD2FD4", VA = "0x1BD2FD4")]
		public FinalSpaceShip()
		{
		}
	}
}
namespace EpicRC.LostForest
{
	[Token(Token = "0x20004B2")]
	public class FinalCreature : MonoBehaviour
	{
		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform InitialParent;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandParent;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool ready;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cartTr;

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1BD2FDC", Offset = "0x1BD2FDC", VA = "0x1BD2FDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1BD3054", Offset = "0x1BD3054", VA = "0x1BD3054")]
		private void SetInitialParent()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x1BD316C", Offset = "0x1BD316C", VA = "0x1BD316C")]
		private void SetHandParent()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x1BD3234", Offset = "0x1BD3234", VA = "0x1BD3234")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1BD33EC", Offset = "0x1BD33EC", VA = "0x1BD33EC")]
		public void EndRide()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x1BD3448", Offset = "0x1BD3448", VA = "0x1BD3448")]
		public FinalCreature()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class TriggerChangePropeler : MonoBehaviour
	{
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool StartEngine;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool StopEngine;

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x1BD3450", Offset = "0x1BD3450", VA = "0x1BD3450")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1BD3454", Offset = "0x1BD3454", VA = "0x1BD3454")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x1BD3458", Offset = "0x1BD3458", VA = "0x1BD3458")]
		public TriggerChangePropeler()
		{
		}
	}
}
namespace EpicRC.Halloween
{
	[Token(Token = "0x20004B4")]
	public class TriggerBatsBlackEyes : MonoBehaviour
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture texture;

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x1BD3460", Offset = "0x1BD3460", VA = "0x1BD3460")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x1BD3500", Offset = "0x1BD3500", VA = "0x1BD3500")]
		public TriggerBatsBlackEyes()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class TriggerBrokenFence : MonoBehaviour
	{
		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Force;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audio;

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x1BD3508", Offset = "0x1BD3508", VA = "0x1BD3508")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1BD35B8", Offset = "0x1BD35B8", VA = "0x1BD35B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x1BD37BC", Offset = "0x1BD37BC", VA = "0x1BD37BC")]
		public TriggerBrokenFence()
		{
		}
	}
}
namespace EpicRC.DreadBlood
{
	[Token(Token = "0x20004B6")]
	public class Guilhoutine : MonoBehaviour
	{
		[Token(Token = "0x20004B7")]
		[CompilerGenerated]
		private sealed class <WaitForUserLookCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Guilhoutine <>4__this;

			[Token(Token = "0x170003CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F39")]
				[Address(RVA = "0x1BD3AC0", Offset = "0x1BD3AC0", VA = "0x1BD3AC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F3B")]
				[Address(RVA = "0x1BD3B08", Offset = "0x1BD3B08", VA = "0x1BD3B08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x1BD39AC", Offset = "0x1BD39AC", VA = "0x1BD39AC")]
			[DebuggerHidden]
			public <WaitForUserLookCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x1BD39EC", Offset = "0x1BD39EC", VA = "0x1BD39EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x1BD39F0", Offset = "0x1BD39F0", VA = "0x1BD39F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x1BD3AC8", Offset = "0x1BD3AC8", VA = "0x1BD3AC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoasterType CoasterMode;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public CartType CartType;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector guilhoutineTimeline;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FrontOfGuilhoutine;

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1BD37D8", Offset = "0x1BD37D8", VA = "0x1BD37D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1BD38B4", Offset = "0x1BD38B4", VA = "0x1BD38B4")]
		public void WaitForUserLook()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1BD3938", Offset = "0x1BD3938", VA = "0x1BD3938")]
		[IteratorStateMachine(typeof(<WaitForUserLookCoroutine>d__6))]
		private IEnumerator WaitForUserLookCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x1BD39D4", Offset = "0x1BD39D4", VA = "0x1BD39D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1BD39DC", Offset = "0x1BD39DC", VA = "0x1BD39DC")]
		public Guilhoutine()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class HeadRolling : MonoBehaviour
	{
		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1BD3B10", Offset = "0x1BD3B10", VA = "0x1BD3B10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1BD3DC4", Offset = "0x1BD3DC4", VA = "0x1BD3DC4")]
		public HeadRolling()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class InitCart : MonoBehaviour
	{
		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InitLights lightsController;

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1BD3DCC", Offset = "0x1BD3DCC", VA = "0x1BD3DCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1BD41C0", Offset = "0x1BD41C0", VA = "0x1BD41C0")]
		private void StartEngine()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1BD41C4", Offset = "0x1BD41C4", VA = "0x1BD41C4")]
		public InitCart()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class InitLights : MonoBehaviour
	{
		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoasterType CoasterMode;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public CartType CartType;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] Materials;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color darkColor;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader b4t;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader b4tColor;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader b4tCutout;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader b4tCutoutColor;

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1BD41CC", Offset = "0x1BD41CC", VA = "0x1BD41CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1BD41D0", Offset = "0x1BD41D0", VA = "0x1BD41D0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1BD42E4", Offset = "0x1BD42E4", VA = "0x1BD42E4")]
		public void TurnLightsOff()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1BD3E64", Offset = "0x1BD3E64", VA = "0x1BD3E64")]
		public void TurnLightsOn()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1BD45BC", Offset = "0x1BD45BC", VA = "0x1BD45BC")]
		public InitLights()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class LiftControl : MonoBehaviour
	{
		[Token(Token = "0x20004BC")]
		[CompilerGenerated]
		private sealed class <RunLogic>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftControl <>4__this;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <en>5__2;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F57")]
				[Address(RVA = "0x1BD5138", Offset = "0x1BD5138", VA = "0x1BD5138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F59")]
				[Address(RVA = "0x1BD5180", Offset = "0x1BD5180", VA = "0x1BD5180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x1BD4790", Offset = "0x1BD4790", VA = "0x1BD4790")]
			[DebuggerHidden]
			public <RunLogic>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x1BD4FF4", Offset = "0x1BD4FF4", VA = "0x1BD4FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x1BD4FF8", Offset = "0x1BD4FF8", VA = "0x1BD4FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1BD5140", Offset = "0x1BD5140", VA = "0x1BD5140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		[CompilerGenerated]
		private sealed class <get_lifterTracks>d__18 : IEnumerable<ZenFulcrum.Track.Track>, IEnumerable, IEnumerator<ZenFulcrum.Track.Track>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ZenFulcrum.Track.Track <>2__current;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LiftControl <>4__this;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ZenFulcrum.Track.Track <t>5__2;

			[Token(Token = "0x170003D0")]
			private ZenFulcrum.Track.Track System.Collections.Generic.IEnumerator<ZenFulcrum.Track.Track>.Current
			{
				[Token(Token = "0x6001F5D")]
				[Address(RVA = "0x1BD5300", Offset = "0x1BD5300", VA = "0x1BD5300", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F5F")]
				[Address(RVA = "0x1BD5348", Offset = "0x1BD5348", VA = "0x1BD5348", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x1BD4B68", Offset = "0x1BD4B68", VA = "0x1BD4B68")]
			[DebuggerHidden]
			public <get_lifterTracks>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x1BD5188", Offset = "0x1BD5188", VA = "0x1BD5188", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x1BD518C", Offset = "0x1BD518C", VA = "0x1BD518C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x1BD5308", Offset = "0x1BD5308", VA = "0x1BD5308", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x1BD5350", Offset = "0x1BD5350", VA = "0x1BD5350", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ZenFulcrum.Track.Track> System.Collections.Generic.IEnumerable<ZenFulcrum.Track.Track>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x1BD53FC", Offset = "0x1BD53FC", VA = "0x1BD53FC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20004BE")]
		[CompilerGenerated]
		private sealed class <TravelToBottom>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftControl <>4__this;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <en>5__2;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F65")]
				[Address(RVA = "0x1BD5630", Offset = "0x1BD5630", VA = "0x1BD5630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F67")]
				[Address(RVA = "0x1BD5678", Offset = "0x1BD5678", VA = "0x1BD5678", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x1BD4C10", Offset = "0x1BD4C10", VA = "0x1BD4C10")]
			[DebuggerHidden]
			public <TravelToBottom>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x1BD5400", Offset = "0x1BD5400", VA = "0x1BD5400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x1BD5404", Offset = "0x1BD5404", VA = "0x1BD5404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x1BD5638", Offset = "0x1BD5638", VA = "0x1BD5638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		[CompilerGenerated]
		private sealed class <TravelToTop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftControl <>4__this;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator <en>5__2;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Rigidbody <cartRb>5__3;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <elevatorLastPos>5__4;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <cartLastPos>5__5;

			[Token(Token = "0x170003D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6B")]
				[Address(RVA = "0x1BD5C9C", Offset = "0x1BD5C9C", VA = "0x1BD5C9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F6D")]
				[Address(RVA = "0x1BD5CE4", Offset = "0x1BD5CE4", VA = "0x1BD5CE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x1BD4CAC", Offset = "0x1BD4CAC", VA = "0x1BD4CAC")]
			[DebuggerHidden]
			public <TravelToTop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x1BD5680", Offset = "0x1BD5680", VA = "0x1BD5680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x1BD5684", Offset = "0x1BD5684", VA = "0x1BD5684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x1BD5CA4", Offset = "0x1BD5CA4", VA = "0x1BD5CA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C0")]
		[CompilerGenerated]
		private sealed class <TravelToX>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LiftControl <>4__this;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <targetHeight>5__2;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <currentHeight>5__3;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0x1BD5F38", Offset = "0x1BD5F38", VA = "0x1BD5F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F73")]
				[Address(RVA = "0x1BD5F80", Offset = "0x1BD5F80", VA = "0x1BD5F80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1BD4D6C", Offset = "0x1BD4D6C", VA = "0x1BD4D6C")]
			[DebuggerHidden]
			public <TravelToX>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x1BD5CEC", Offset = "0x1BD5CEC", VA = "0x1BD5CEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x1BD5CF0", Offset = "0x1BD5CF0", VA = "0x1BD5CF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x1BD5F40", Offset = "0x1BD5F40", VA = "0x1BD5F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C1")]
		[CompilerGenerated]
		private sealed class <WaitForCart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftControl <>4__this;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Action<TrackCart> <onGain>5__2;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F77")]
				[Address(RVA = "0x1BD649C", Offset = "0x1BD649C", VA = "0x1BD649C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F79")]
				[Address(RVA = "0x1BD64E4", Offset = "0x1BD64E4", VA = "0x1BD64E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x1BD4E08", Offset = "0x1BD4E08", VA = "0x1BD4E08")]
			[DebuggerHidden]
			public <WaitForCart>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x1BD5F88", Offset = "0x1BD5F88", VA = "0x1BD5F88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x1BD5F8C", Offset = "0x1BD5F8C", VA = "0x1BD5F8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x1BD64A4", Offset = "0x1BD64A4", VA = "0x1BD64A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C2")]
		[CompilerGenerated]
		private sealed class <WaitForCartToLeave>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LiftControl <>4__this;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Action<TrackCart> <onLose>5__2;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F7D")]
				[Address(RVA = "0x1BD6760", Offset = "0x1BD6760", VA = "0x1BD6760", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7F")]
				[Address(RVA = "0x1BD67A8", Offset = "0x1BD67A8", VA = "0x1BD67A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x1BD4EA4", Offset = "0x1BD4EA4", VA = "0x1BD4EA4")]
			[DebuggerHidden]
			public <WaitForCartToLeave>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x1BD64EC", Offset = "0x1BD64EC", VA = "0x1BD64EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x1BD64F0", Offset = "0x1BD64F0", VA = "0x1BD64F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x1BD6768", Offset = "0x1BD6768", VA = "0x1BD6768", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ZenFulcrum.Track.Track feedInTrack;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZenFulcrum.Track.Track feedOutTrack;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZenFulcrum.Track.Track liftedTrack;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackCart lifterCart;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected TrackCart passengerCart;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float liftSpeed;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PlayableDirector downsideDoorTimeline;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PlayableDirector upsideDoorTimeline;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource elevatorLoop;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool elevatorFall;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody lifterCartRb;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Func<IEnumerator> stateAction;

		[Token(Token = "0x170003CD")]
		protected IEnumerable<ZenFulcrum.Track.Track> lifterTracks
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x1BD4AE4", Offset = "0x1BD4AE4", VA = "0x1BD4AE4")]
			[IteratorStateMachine(typeof(<get_lifterTracks>d__18))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1BD45D8", Offset = "0x1BD45D8", VA = "0x1BD45D8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1BD471C", Offset = "0x1BD471C", VA = "0x1BD471C")]
		[IteratorStateMachine(typeof(<RunLogic>d__13))]
		public IEnumerator RunLogic()
		{
			return null;
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1BD47B8", Offset = "0x1BD47B8", VA = "0x1BD47B8")]
		protected void SetLifterToMove(float deltaHeight)
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1BD47F8", Offset = "0x1BD47F8", VA = "0x1BD47F8")]
		protected void SetLiferSpeed(float speed)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1BD46D8", Offset = "0x1BD46D8", VA = "0x1BD46D8")]
		protected void SetTrackSpeed(ZenFulcrum.Track.Track track, float speed, float force = 1000f)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x1BD4B9C", Offset = "0x1BD4B9C", VA = "0x1BD4B9C")]
		[IteratorStateMachine(typeof(<TravelToBottom>d__19))]
		protected IEnumerator TravelToBottom()
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1BD4C38", Offset = "0x1BD4C38", VA = "0x1BD4C38")]
		[IteratorStateMachine(typeof(<TravelToTop>d__20))]
		protected IEnumerator TravelToTop()
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x1BD4CD4", Offset = "0x1BD4CD4", VA = "0x1BD4CD4")]
		[IteratorStateMachine(typeof(<TravelToX>d__21))]
		protected IEnumerator TravelToX(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1BD4D94", Offset = "0x1BD4D94", VA = "0x1BD4D94")]
		[IteratorStateMachine(typeof(<WaitForCart>d__22))]
		protected IEnumerator WaitForCart()
		{
			return null;
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1BD4E30", Offset = "0x1BD4E30", VA = "0x1BD4E30")]
		[IteratorStateMachine(typeof(<WaitForCartToLeave>d__23))]
		protected IEnumerator WaitForCartToLeave()
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1BD4ECC", Offset = "0x1BD4ECC", VA = "0x1BD4ECC")]
		public LiftControl()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class WaterSplash : MonoBehaviour
	{
		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject WaterSplashClone;

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1BD67B0", Offset = "0x1BD67B0", VA = "0x1BD67B0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x1BD6A74", Offset = "0x1BD6A74", VA = "0x1BD6A74")]
		public WaterSplash()
		{
		}
	}
}
namespace EpicRC.Armageddon
{
	[Token(Token = "0x20004C4")]
	public class TriggerBrokenWall : MonoBehaviour
	{
		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audio;

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x1BD6A7C", Offset = "0x1BD6A7C", VA = "0x1BD6A7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x1BD6B2C", Offset = "0x1BD6B2C", VA = "0x1BD6B2C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1BD6D44", Offset = "0x1BD6D44", VA = "0x1BD6D44")]
		public TriggerBrokenWall()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class TriggerChangeCarFlames : MonoBehaviour
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinRange;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxRange;

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x1BD6D4C", Offset = "0x1BD6D4C", VA = "0x1BD6D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1BD6D50", Offset = "0x1BD6D50", VA = "0x1BD6D50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x1BD6D54", Offset = "0x1BD6D54", VA = "0x1BD6D54")]
		public TriggerChangeCarFlames()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class TriggerZombieFalloff : MonoBehaviour
	{
		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody body;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audio;

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1BD6D68", Offset = "0x1BD6D68", VA = "0x1BD6D68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x1BD6DC0", Offset = "0x1BD6DC0", VA = "0x1BD6DC0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x1BD6EC0", Offset = "0x1BD6EC0", VA = "0x1BD6EC0")]
		public TriggerZombieFalloff()
		{
		}
	}
}
namespace B4TGames
{
	[Token(Token = "0x20004C7")]
	public static class Devices
	{
		[Token(Token = "0x20004C8")]
		public enum LoadedDeviceType
		{
			[Token(Token = "0x40020B7")]
			None,
			[Token(Token = "0x40020B8")]
			OpenXR,
			[Token(Token = "0x40020B9")]
			Other
		}

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LoadedDeviceType LoadedDevice;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float lastFoundGPUPower;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool UnknowDevice;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int masterTextureLimit;

		[Token(Token = "0x170003DC")]
		public static int MasterTextureLimit
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x1BD6EC8", Offset = "0x1BD6EC8", VA = "0x1BD6EC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003DD")]
		public static bool IsOpenVR
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x1BD77CC", Offset = "0x1BD77CC", VA = "0x1BD77CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DE")]
		public static bool IsOculus
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x1BD77B4", Offset = "0x1BD77B4", VA = "0x1BD77B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DF")]
		public static bool IsOculusGo
		{
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x1BD856C", Offset = "0x1BD856C", VA = "0x1BD856C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E0")]
		public static bool IsOculusQuest
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x1BD8574", Offset = "0x1BD8574", VA = "0x1BD8574")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E1")]
		public static bool IsOculusQuest2
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x1BD857C", Offset = "0x1BD857C", VA = "0x1BD857C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E2")]
		public static bool IsOculusRiftS
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x1BD8584", Offset = "0x1BD8584", VA = "0x1BD8584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E3")]
		public static bool IsPicoNeo2
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x1BD858C", Offset = "0x1BD858C", VA = "0x1BD858C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E4")]
		public static bool IsPicoNeo3
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x1BD8594", Offset = "0x1BD8594", VA = "0x1BD8594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E5")]
		public static bool Is6DOF
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x1BD85B0", Offset = "0x1BD85B0", VA = "0x1BD85B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E6")]
		public static bool IsHuawei
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x1BD85B8", Offset = "0x1BD85B8", VA = "0x1BD85B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E7")]
		public static bool IsNolo
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x1BD77C4", Offset = "0x1BD77C4", VA = "0x1BD77C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E8")]
		public static bool IsPSVR
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x1BD77D4", Offset = "0x1BD77D4", VA = "0x1BD77D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public static bool IsPSVR2
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x1BD85C0", Offset = "0x1BD85C0", VA = "0x1BD85C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EA")]
		public static bool IsPS5
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x1BD85C8", Offset = "0x1BD85C8", VA = "0x1BD85C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EB")]
		public static bool IsPS4Pro
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x1BD85D0", Offset = "0x1BD85D0", VA = "0x1BD85D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EC")]
		public static bool IsJioglass
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x1BD77DC", Offset = "0x1BD77DC", VA = "0x1BD77DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003ED")]
		public static bool IsArcadeVR
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x1BD85D8", Offset = "0x1BD85D8", VA = "0x1BD85D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EE")]
		public static bool IsAndroid
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x1BD85E0", Offset = "0x1BD85E0", VA = "0x1BD85E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EF")]
		public static bool IsPico
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x1BD77BC", Offset = "0x1BD77BC", VA = "0x1BD77BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x1BD6F28", Offset = "0x1BD6F28", VA = "0x1BD6F28")]
		public static float GetGPUPower()
		{
			return default(float);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x1BD7560", Offset = "0x1BD7560", VA = "0x1BD7560")]
		private static float GetGPUPower_iOS()
		{
			return default(float);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1BD7014", Offset = "0x1BD7014", VA = "0x1BD7014")]
		private static float GetGPUPower_Android()
		{
			return default(float);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x1BD7700", Offset = "0x1BD7700", VA = "0x1BD7700")]
		public static void ReportDeviceFPS(string scenarioID, float averageFPS, float totalTime)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1BD772C", Offset = "0x1BD772C", VA = "0x1BD772C")]
		public static string GetPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x1BD77E4", Offset = "0x1BD77E4", VA = "0x1BD77E4")]
		public static string GetSystemOS()
		{
			return null;
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1BD7888", Offset = "0x1BD7888", VA = "0x1BD7888")]
		private static float GetGPUPower_PC()
		{
			return default(float);
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1BD85E8", Offset = "0x1BD85E8", VA = "0x1BD85E8")]
		public static bool PlayerSettingsHasCardboard()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004C9")]
	public static class ResolutionSettings
	{
		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float DefaultResolutionScale;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool HasShadowSupport;

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1BD85F0", Offset = "0x1BD85F0", VA = "0x1BD85F0")]
		public static float GetBestResolutionScale(float contextMultiplier, float shadowLowResMultiplier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1BD8750", Offset = "0x1BD8750", VA = "0x1BD8750")]
		public static void ApplyBestResolutionScale(float contextMultiplier = 1f)
		{
		}
	}
}
namespace B4TGames.RollerCoasters
{
	[Token(Token = "0x20004CA")]
	public class Cart : MonoBehaviour, IReplaceMaterials
	{
		[Token(Token = "0x20004CB")]
		[CompilerGenerated]
		private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cart <>4__this;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FBA")]
				[Address(RVA = "0x1C19240", Offset = "0x1C19240", VA = "0x1C19240", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FBC")]
				[Address(RVA = "0x1C19288", Offset = "0x1C19288", VA = "0x1C19288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x1C18CA0", Offset = "0x1C18CA0", VA = "0x1C18CA0")]
			[DebuggerHidden]
			public <Start>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x1C18CC8", Offset = "0x1C18CC8", VA = "0x1C18CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x1C18CCC", Offset = "0x1C18CCC", VA = "0x1C18CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x1C19248", Offset = "0x1C19248", VA = "0x1C19248", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject SeatPrefab;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject SeatEmptyPrefab;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform SeatCenterFrontPivot;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform SeatRightFrontPivot;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform SeatLeftFrontPivot;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform SeatCenterBackPivot;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform SeatRightBackPivot;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform SeatLeftBackPivot;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space(5f)]
		[Header("Cart Colors")]
		[Tooltip("Color1R from Chassis material")]
		public Color FloorColor;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Color2G from Chassis material")]
		public Color SeatColor;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Color3B from Chassis material")]
		public Color ReTruckColor;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Color4A from Chassis material")]
		public Color TruckColor;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("Color1R from Stick material")]
		public Color StickColor;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Header("Cart Specifications")]
		[Space(5f)]
		public SeatType StartSeat;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject RaceStickPrefab;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform RaceStickPivot;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Space(5f)]
		public Transform CrossHairPivot;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Space(5f)]
		public Material ChassisMobile;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material StickMobile;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material[] BodyShellMobile;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Space(5f)]
		public Renderer ChassisRenderer;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Renderer BodyShellRenderer;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Animator BodyShellAnimator;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Space(5f)]
		public Collider CartCollider;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform BackWheelColliders;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform FrontWheelColliders;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioSource SnapOnTrackSoundFx;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform[] GazeTargetSpawnpoints;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public List<Seat> Seats;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Seat PlayerSeat;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public RaceStick RaceStick;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool areSeatsReady;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private readonly int color1RShaderID;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly int color2GShaderID;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private readonly int color3BShaderID;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly int color4AShaderID;

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1BD8808", Offset = "0x1BD8808", VA = "0x1BD8808")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1BD8E6C", Offset = "0x1BD8E6C", VA = "0x1BD8E6C")]
		[IteratorStateMachine(typeof(<Start>d__33))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x1BD8BE0", Offset = "0x1BD8BE0", VA = "0x1BD8BE0")]
		public Seat InstantiateSeat(SeatType seatVenue)
		{
			return null;
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x1BD8EE0", Offset = "0x1BD8EE0", VA = "0x1BD8EE0")]
		public void MoveSeat(Seat seat, SeatType newVenue)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x1BD9024", Offset = "0x1BD9024", VA = "0x1BD9024")]
		public void DestroySeat(Seat seat)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x1BD90F4", Offset = "0x1BD90F4", VA = "0x1BD90F4")]
		public void UpdateLobbySeatsPosition()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x1BD92B4", Offset = "0x1BD92B4", VA = "0x1BD92B4")]
		public RaceStick InstantiateRaceStick()
		{
			return null;
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x1BD9450", Offset = "0x1BD9450", VA = "0x1BD9450")]
		public Crosshair InstantiateCrossHair()
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x1BD9458", Offset = "0x1BD9458", VA = "0x1BD9458")]
		public void CloseSafetyBars()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1BD9610", Offset = "0x1BD9610", VA = "0x1BD9610")]
		public void OpenSafetyBars()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1BD97C4", Offset = "0x1BD97C4", VA = "0x1BD97C4")]
		public void ApplyColors(Renderer renderer, bool isChassis = true, int index = 0)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1BD98E0", Offset = "0x1BD98E0", VA = "0x1BD98E0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1BD98F0", Offset = "0x1BD98F0", VA = "0x1BD98F0")]
		public Cart()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class Crosshair : MonoBehaviour, IReplaceMaterials
	{
		[Token(Token = "0x20004CD")]
		[CompilerGenerated]
		private sealed class <HideTutorial>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Crosshair <>4__this;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCE")]
				[Address(RVA = "0x1C1A0FC", Offset = "0x1C1A0FC", VA = "0x1C1A0FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD0")]
				[Address(RVA = "0x1C1A144", Offset = "0x1C1A144", VA = "0x1C1A144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x1C19BB4", Offset = "0x1C19BB4", VA = "0x1C19BB4")]
			[DebuggerHidden]
			public <HideTutorial>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x1C1A008", Offset = "0x1C1A008", VA = "0x1C1A008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x1C1A00C", Offset = "0x1C1A00C", VA = "0x1C1A00C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x1C1A104", Offset = "0x1C1A104", VA = "0x1C1A104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CE")]
		[CompilerGenerated]
		private sealed class <FadeImage>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image image;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float aTime;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float aValue;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <colorAux>5__2;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <alpha>5__3;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <t>5__4;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD4")]
				[Address(RVA = "0x1C1A280", Offset = "0x1C1A280", VA = "0x1C1A280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD6")]
				[Address(RVA = "0x1C1A2C8", Offset = "0x1C1A2C8", VA = "0x1C1A2C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1C19C94", Offset = "0x1C19C94", VA = "0x1C19C94")]
			[DebuggerHidden]
			public <FadeImage>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x1C1A14C", Offset = "0x1C1A14C", VA = "0x1C1A14C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x1C1A150", Offset = "0x1C1A150", VA = "0x1C1A150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x1C1A288", Offset = "0x1C1A288", VA = "0x1C1A288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004CF")]
		[CompilerGenerated]
		private sealed class <FadeText>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProUGUI text;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float aTime;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float aValue;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <colorAux>5__2;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <alpha>5__3;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <t>5__4;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDA")]
				[Address(RVA = "0x1C1A404", Offset = "0x1C1A404", VA = "0x1C1A404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDC")]
				[Address(RVA = "0x1C1A44C", Offset = "0x1C1A44C", VA = "0x1C1A44C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x1C19CBC", Offset = "0x1C19CBC", VA = "0x1C19CBC")]
			[DebuggerHidden]
			public <FadeText>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x1C1A2D0", Offset = "0x1C1A2D0", VA = "0x1C1A2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x1C1A2D4", Offset = "0x1C1A2D4", VA = "0x1C1A2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x1C1A40C", Offset = "0x1C1A40C", VA = "0x1C1A40C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Canvas;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image ArrowImage;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image BackgroundImage;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI Text;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material[] MobileMaterials;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer crosshairRenderer;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool alreadyStarted;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool alreadyHidden;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool raceModeTutorialWait;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float startedTime;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float HIDE_TIME;

		[Token(Token = "0x170003F2")]
		private Renderer CrosshairRenderer
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x1C19290", Offset = "0x1C19290", VA = "0x1C19290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1C19348", Offset = "0x1C19348", VA = "0x1C19348")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1C194D4", Offset = "0x1C194D4", VA = "0x1C194D4")]
		public void StartCrosshair()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1C19650", Offset = "0x1C19650", VA = "0x1C19650")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1C19918", Offset = "0x1C19918", VA = "0x1C19918")]
		private void ShowTutorial()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1C195CC", Offset = "0x1C195CC", VA = "0x1C195CC")]
		[IteratorStateMachine(typeof(<HideTutorial>d__17))]
		private IEnumerator HideTutorial(float time = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1C19BDC", Offset = "0x1C19BDC", VA = "0x1C19BDC")]
		private void OnHideUI()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1C19AA4", Offset = "0x1C19AA4", VA = "0x1C19AA4")]
		[IteratorStateMachine(typeof(<FadeImage>d__19))]
		private IEnumerator FadeImage(Image image, float aValue, float aTime)
		{
			return null;
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1C19B2C", Offset = "0x1C19B2C", VA = "0x1C19B2C")]
		[IteratorStateMachine(typeof(<FadeText>d__20))]
		private IEnumerator FadeText(TextMeshProUGUI text, float aValue, float aTime)
		{
			return null;
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1C19CE4", Offset = "0x1C19CE4", VA = "0x1C19CE4")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1C19DA4", Offset = "0x1C19DA4", VA = "0x1C19DA4")]
		private void OnPause(bool pause)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1C19E70", Offset = "0x1C19E70", VA = "0x1C19E70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1C19FB4", Offset = "0x1C19FB4", VA = "0x1C19FB4")]
		public Crosshair()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class CheckpointSettings : MonoBehaviour
	{
		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		public AudioClip SoundEffect;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audio;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animation;

		[Token(Token = "0x170003F9")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x1C1A454", Offset = "0x1C1A454", VA = "0x1C1A454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		public Animator Animator
		{
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x1C1A45C", Offset = "0x1C1A45C", VA = "0x1C1A45C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1C1A464", Offset = "0x1C1A464", VA = "0x1C1A464")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1C1A4F4", Offset = "0x1C1A4F4", VA = "0x1C1A4F4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1C1A5B0", Offset = "0x1C1A5B0", VA = "0x1C1A5B0")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1C1A660", Offset = "0x1C1A660", VA = "0x1C1A660")]
		public CheckpointSettings()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class RaceStick : MonoBehaviour
	{
		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRGrabInteractableSpecific Grabbable;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(5f)]
		public Transform Stick;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform PushedRef;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform PulledRef;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(5f)]
		public Renderer Renderer;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected RaceLeversGrababble RaceStickGrabbable;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform localPivot;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Avatar Left Custom Pose (also used for Right)")]
		[Space(5f)]
		public Transform CustomHandLeftPose;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected new Transform transform;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool triggerPressing;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool onePressing;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool AlreadyPressedTrigger;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool AlreadyPressedGrabber;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1C1A668", Offset = "0x1C1A668", VA = "0x1C1A668")]
		public void ApplyMaterial(Material stick, Cart cart)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1C1A6B0", Offset = "0x1C1A6B0", VA = "0x1C1A6B0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1C1A744", Offset = "0x1C1A744", VA = "0x1C1A744")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1C1AB44", Offset = "0x1C1AB44", VA = "0x1C1AB44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x1C1ADEC", Offset = "0x1C1ADEC", VA = "0x1C1ADEC")]
		private void InputManager_OnTriggerDown(InputController.Hand obj)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1C1AF58", Offset = "0x1C1AF58", VA = "0x1C1AF58")]
		private void InputManager_OnTriggerUp(InputController.Hand obj)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1C1B0A4", Offset = "0x1C1B0A4", VA = "0x1C1B0A4")]
		private void InputManager_OnOneDown(InputController.Hand obj)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1C1B13C", Offset = "0x1C1B13C", VA = "0x1C1B13C")]
		private void InputManager_OnGrabberDown(InputController.Hand obj)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1C1B208", Offset = "0x1C1B208", VA = "0x1C1B208")]
		private void DelayedOnePressing()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1C1AE88", Offset = "0x1C1AE88", VA = "0x1C1AE88")]
		private void InputManager_OnOneUp(InputController.Hand obj)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1C1B274", Offset = "0x1C1B274", VA = "0x1C1B274")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1C1B384", Offset = "0x1C1B384", VA = "0x1C1B384")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1C1AFF8", Offset = "0x1C1AFF8", VA = "0x1C1AFF8")]
		public void UpdateLeversRotation(float t)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1C1B43C", Offset = "0x1C1B43C", VA = "0x1C1B43C")]
		public RaceStick()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class SafetyBar : MonoBehaviour
	{
		[Token(Token = "0x20004D3")]
		[CompilerGenerated]
		private sealed class <AnimateBars>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SafetyBar <>4__this;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform bar;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform target;

			[Token(Token = "0x170003FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002002")]
				[Address(RVA = "0x1C1BEE8", Offset = "0x1C1BEE8", VA = "0x1C1BEE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002004")]
				[Address(RVA = "0x1C1BF30", Offset = "0x1C1BF30", VA = "0x1C1BF30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x1C1BBFC", Offset = "0x1C1BBFC", VA = "0x1C1BBFC")]
			[DebuggerHidden]
			public <AnimateBars>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002000")]
			[Address(RVA = "0x1C1BD3C", Offset = "0x1C1BD3C", VA = "0x1C1BD3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002001")]
			[Address(RVA = "0x1C1BD40", Offset = "0x1C1BD40", VA = "0x1C1BD40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0x1C1BEF0", Offset = "0x1C1BEF0", VA = "0x1C1BEF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRGrabInteractableSpecific Grabbable;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Bar;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform ClosedRef;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform OpenedRef;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float BarSpeed;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float BarThreshold;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip HapticImpactAudioClip;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(5f)]
		public Renderer Renderer;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(5f)]
		public AudioSource AudioSource;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip SoundFxLeverClink;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Avatar Left Custom Pose (also used for Right)")]
		public Transform CustomHandLeftPose;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AnimationCurve hapticsCurve;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isAnimating;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool already;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected new Transform transform;

		[Token(Token = "0x170003FB")]
		public Seat Seat
		{
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x1C1B444", Offset = "0x1C1B444", VA = "0x1C1B444")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x1C1B44C", Offset = "0x1C1B44C", VA = "0x1C1B44C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1C1B454", Offset = "0x1C1B454", VA = "0x1C1B454")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1C1B4D8", Offset = "0x1C1B4D8", VA = "0x1C1B4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1C1B5F8", Offset = "0x1C1B5F8", VA = "0x1C1B5F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1C1B5B4", Offset = "0x1C1B5B4", VA = "0x1C1B5B4")]
		public void ApplyMaterial(Material safetyBar)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1C191D4", Offset = "0x1C191D4", VA = "0x1C191D4")]
		public void Close(bool instantly = false)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1C1B878", Offset = "0x1C1B878", VA = "0x1C1B878")]
		public void DestroyGrabbable()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1C1BBD4", Offset = "0x1C1BBD4", VA = "0x1C1BBD4")]
		public void Open()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1C1BB30", Offset = "0x1C1BB30", VA = "0x1C1BB30")]
		[IteratorStateMachine(typeof(<AnimateBars>d__26))]
		private IEnumerator AnimateBars(Transform bar, Transform target)
		{
			return null;
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x1C1B808", Offset = "0x1C1B808", VA = "0x1C1B808")]
		public float SphericalSignedValue(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1C1BC24", Offset = "0x1C1BC24", VA = "0x1C1BC24")]
		public void VibrationImpact(InputController.Hand hand = InputController.Hand.Both)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1C1B848", Offset = "0x1C1B848", VA = "0x1C1B848")]
		public void PlayClinkSound()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1C1BD28", Offset = "0x1C1BD28", VA = "0x1C1BD28")]
		public SafetyBar()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public enum SeatType
	{
		[Token(Token = "0x4002128")]
		CenterFront,
		[Token(Token = "0x4002129")]
		RightFront,
		[Token(Token = "0x400212A")]
		LeftFront,
		[Token(Token = "0x400212B")]
		CenterBack,
		[Token(Token = "0x400212C")]
		RightBack,
		[Token(Token = "0x400212D")]
		LeftBack
	}
	[Token(Token = "0x20004D5")]
	public class Seat : MonoBehaviour
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject SafetyBarPrefab;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SafetyBarPivot;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(5f)]
		public Transform FloorLevel;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform EyeLevel;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Space(5f)]
		public MeshRenderer Renderer;

		[Token(Token = "0x170003FE")]
		public SafetyBar SafetyBar
		{
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x1C1BF38", Offset = "0x1C1BF38", VA = "0x1C1BF38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x1C1BF40", Offset = "0x1C1BF40", VA = "0x1C1BF40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		public SeatType Venue
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x1C1BF48", Offset = "0x1C1BF48", VA = "0x1C1BF48")]
			[CompilerGenerated]
			get
			{
				return default(SeatType);
			}
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x1C1BF50", Offset = "0x1C1BF50", VA = "0x1C1BF50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public Cart Cart
		{
			[Token(Token = "0x6002009")]
			[Address(RVA = "0x1C1BF58", Offset = "0x1C1BF58", VA = "0x1C1BF58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600200A")]
			[Address(RVA = "0x1C1BF60", Offset = "0x1C1BF60", VA = "0x1C1BF60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1C1BF68", Offset = "0x1C1BF68", VA = "0x1C1BF68")]
		private void Start()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1C1C05C", Offset = "0x1C1C05C", VA = "0x1C1C05C")]
		public void ApplyMaterials(Material chassis, Material stick)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1C19024", Offset = "0x1C19024", VA = "0x1C19024")]
		public SafetyBar InstantiateSafetyBar()
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1C1C1CC", Offset = "0x1C1C1CC", VA = "0x1C1C1CC")]
		public void DestroySafetyBar()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1C1C280", Offset = "0x1C1C280", VA = "0x1C1C280")]
		public Seat()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class AudioSourceVolumeEventTrigger : GenericTrigger
	{
		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource[] AudioSource;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Duration in seconds")]
		public float Duration;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Space(10f)]
		[Tooltip("Volume behavior over time")]
		[Header("Curve")]
		public AnimationCurve Curve;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Sets maximum curve value to volume on Audio Source; recommended for turning sounds on")]
		public bool NormalizeWithMaxVolume;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[Tooltip("Sets maximum curve value to volume at time of activation; recommended for turning sounds off")]
		public bool NormalizeWithCurrentVolume;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[Tooltip("Starts playing when volume leaves 0")]
		[Header("State Conditions")]
		[Space(10f)]
		public bool PlayWhenLeavesZero;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[Tooltip("If behavior ends at zero, Audio Source stops")]
		public bool StopIfEndsAtZero;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("If behavior ends at zero, Audio Source pauses")]
		public bool PauseIfEndsAtZero;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] originalVolume;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float startTime;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float endTime;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<float> multiplier;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector2 curveValue;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool audioSourceWasOff;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool inAction;

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1C1C288", Offset = "0x1C1C288", VA = "0x1C1C288", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1C1C5F4", Offset = "0x1C1C5F4", VA = "0x1C1C5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1C1C918", Offset = "0x1C1C918", VA = "0x1C1C918", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1C1CB30", Offset = "0x1C1CB30", VA = "0x1C1CB30", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x1C1CB34", Offset = "0x1C1CB34", VA = "0x1C1CB34")]
		public AudioSourceVolumeEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class CameraEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004D8")]
		[CompilerGenerated]
		private sealed class <DoActionSlowly>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Camera camera;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CameraEventTrigger <>4__this;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <initialColor>5__2;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <initialDefaultClipPlane>5__3;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <initialSmalClipPlane>5__4;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <initialBigClipPlane>5__5;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <interval>5__6;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timeToGo>5__7;

			[Token(Token = "0x17000401")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600201D")]
				[Address(RVA = "0x1C1D6EC", Offset = "0x1C1D6EC", VA = "0x1C1D6EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600201F")]
				[Address(RVA = "0x1C1D734", Offset = "0x1C1D734", VA = "0x1C1D734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x1C1D3F8", Offset = "0x1C1D3F8", VA = "0x1C1D3F8")]
			[DebuggerHidden]
			public <DoActionSlowly>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0x1C1D43C", Offset = "0x1C1D43C", VA = "0x1C1D43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0x1C1D440", Offset = "0x1C1D440", VA = "0x1C1D440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0x1C1D6F4", Offset = "0x1C1D6F4", VA = "0x1C1D6F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color GizmoColor;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool ChangeBackgroundColor;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color BackgroundColor;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float Transition;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool ChangeCullingDistances;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float DefaultClipPlane;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float SmallClipPlane;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float BigClipPlane;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int smallObjectsLayer;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int bigObjectsLayer;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float[] cullingDistances;

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1C1CBDC", Offset = "0x1C1CBDC", VA = "0x1C1CBDC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1C1CFE4", Offset = "0x1C1CFE4", VA = "0x1C1CFE4", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1C1D250", Offset = "0x1C1D250", VA = "0x1C1D250", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1C1D1C0", Offset = "0x1C1D1C0", VA = "0x1C1D1C0")]
		[IteratorStateMachine(typeof(<DoActionSlowly>d__14))]
		public IEnumerator DoActionSlowly(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1C1D420", Offset = "0x1C1D420", VA = "0x1C1D420")]
		public CameraEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class CartEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004DA")]
		public enum ActionType
		{
			[Token(Token = "0x400215D")]
			Start,
			[Token(Token = "0x400215E")]
			Stop
		}

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ActionType Action;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ZenFulcrum.Track.Track.SpeedAndForce Force;

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1C1D73C", Offset = "0x1C1D73C", VA = "0x1C1D73C", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x1C1D838", Offset = "0x1C1D838", VA = "0x1C1D838", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1C1D83C", Offset = "0x1C1D83C", VA = "0x1C1D83C")]
		public CartEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class CheckpointCountdownEventTrigger : CheckpointEventTrigger
	{
		[Token(Token = "0x20004DC")]
		[CompilerGenerated]
		private sealed class <DoActionDelayed>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckpointCountdownEventTrigger <>4__this;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202C")]
				[Address(RVA = "0x1C1DE88", Offset = "0x1C1DE88", VA = "0x1C1DE88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202E")]
				[Address(RVA = "0x1C1DED0", Offset = "0x1C1DED0", VA = "0x1C1DED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x1C1D988", Offset = "0x1C1D988", VA = "0x1C1D988")]
			[DebuggerHidden]
			public <DoActionDelayed>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x1C1DCC0", Offset = "0x1C1DCC0", VA = "0x1C1DCC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0x1C1DCC4", Offset = "0x1C1DCC4", VA = "0x1C1DCC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0x1C1DE90", Offset = "0x1C1DE90", VA = "0x1C1DE90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float countdownDelay;

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1C1D8D0", Offset = "0x1C1D8D0", VA = "0x1C1D8D0", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1C1D8DC", Offset = "0x1C1D8DC", VA = "0x1C1D8DC", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1C1D914", Offset = "0x1C1D914", VA = "0x1C1D914")]
		[IteratorStateMachine(typeof(<DoActionDelayed>d__3))]
		private IEnumerator DoActionDelayed()
		{
			return null;
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1C1D9B0", Offset = "0x1C1D9B0", VA = "0x1C1D9B0")]
		public CheckpointCountdownEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class CheckpointEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004DE")]
		public enum CheckpointType
		{
			[Token(Token = "0x400216D")]
			Start,
			[Token(Token = "0x400216E")]
			Middle,
			[Token(Token = "0x400216F")]
			Finish
		}

		[Token(Token = "0x20004DF")]
		[CompilerGenerated]
		private sealed class <InstantiateCheckpoint>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckpointEventTrigger <>4__this;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x17000406")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002040")]
				[Address(RVA = "0x1C1EF8C", Offset = "0x1C1EF8C", VA = "0x1C1EF8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000407")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002042")]
				[Address(RVA = "0x1C1EFD4", Offset = "0x1C1EFD4", VA = "0x1C1EFD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600203D")]
			[Address(RVA = "0x1C1E20C", Offset = "0x1C1E20C", VA = "0x1C1E20C")]
			[DebuggerHidden]
			public <InstantiateCheckpoint>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600203E")]
			[Address(RVA = "0x1C1ECA4", Offset = "0x1C1ECA4", VA = "0x1C1ECA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x1C1ECA8", Offset = "0x1C1ECA8", VA = "0x1C1ECA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002041")]
			[Address(RVA = "0x1C1EF94", Offset = "0x1C1EF94", VA = "0x1C1EF94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private sealed class <PlayAudioDelayed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckpointEventTrigger <>4__this;

			[Token(Token = "0x17000408")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002046")]
				[Address(RVA = "0x1C1F1B8", Offset = "0x1C1F1B8", VA = "0x1C1F1B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000409")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002048")]
				[Address(RVA = "0x1C1F200", Offset = "0x1C1F200", VA = "0x1C1F200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002043")]
			[Address(RVA = "0x1C1E4AC", Offset = "0x1C1E4AC", VA = "0x1C1E4AC")]
			[DebuggerHidden]
			public <PlayAudioDelayed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x1C1EFDC", Offset = "0x1C1EFDC", VA = "0x1C1EFDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002045")]
			[Address(RVA = "0x1C1EFE0", Offset = "0x1C1EFE0", VA = "0x1C1EFE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x1C1F1C0", Offset = "0x1C1F1C0", VA = "0x1C1F1C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CheckpointType Type;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Header("Game Properties")]
		public bool IsNext;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float PlayerMinDistance;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float PlayerMaxDistance;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool AlreadyChecked;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[HideInInspector]
		public bool AlreadyStarted;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[HideInInspector]
		public bool JustRespawnedHere;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected CheckpointSettings settings;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform tr;

		[Token(Token = "0x17000405")]
		public bool IsCountdown
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x1C1DED8", Offset = "0x1C1DED8", VA = "0x1C1DED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1C1DF80", Offset = "0x1C1DF80", VA = "0x1C1DF80", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1C1E0D8", Offset = "0x1C1E0D8", VA = "0x1C1E0D8")]
		[IteratorStateMachine(typeof(<InstantiateCheckpoint>d__13))]
		public IEnumerator InstantiateCheckpoint()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1C1E234", Offset = "0x1C1E234", VA = "0x1C1E234", Slot = "5")]
		protected override void OnTriggerEnter(Collider obj)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1C1E3F8", Offset = "0x1C1E3F8", VA = "0x1C1E3F8")]
		public bool IsPlayerBackwards()
		{
			return default(bool);
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1C1DA54", Offset = "0x1C1DA54", VA = "0x1C1DA54", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1C1E438", Offset = "0x1C1E438", VA = "0x1C1E438")]
		[IteratorStateMachine(typeof(<PlayAudioDelayed>d__17))]
		private IEnumerator PlayAudioDelayed()
		{
			return null;
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x1C1E4D4", Offset = "0x1C1E4D4", VA = "0x1C1E4D4")]
		public void SetAsEnded()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1C1E5A8", Offset = "0x1C1E5A8", VA = "0x1C1E5A8")]
		public void SetAsNext()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1C1E658", Offset = "0x1C1E658", VA = "0x1C1E658")]
		private void Update()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1C1EBDC", Offset = "0x1C1EBDC", VA = "0x1C1EBDC")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1C1EC40", Offset = "0x1C1EC40", VA = "0x1C1EC40", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1C1D9D4", Offset = "0x1C1D9D4", VA = "0x1C1D9D4")]
		public CheckpointEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class ForceLODEventTrigger : GenericTrigger
	{
		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform GroupToForce;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int StartWithLOD;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int IndexToForce;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LODGroup[] lodGroups;

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1C1F208", Offset = "0x1C1F208", VA = "0x1C1F208", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1C1F354", Offset = "0x1C1F354", VA = "0x1C1F354", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1C1F484", Offset = "0x1C1F484", VA = "0x1C1F484", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1C1F560", Offset = "0x1C1F560", VA = "0x1C1F560")]
		public ForceLODEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public enum EventType
	{
		[Token(Token = "0x400217C")]
		OnStart = 1,
		[Token(Token = "0x400217D")]
		OnPlayerConfigured = 2,
		[Token(Token = "0x400217E")]
		OnPlayerStarted = 3,
		[Token(Token = "0x400217F")]
		OnPlayerTriggered = 0,
		[Token(Token = "0x4002180")]
		OnCalibrate = 5,
		[Token(Token = "0x4002181")]
		UsedAsChained = 4,
		[Token(Token = "0x4002182")]
		OnFinishedLoadedTemp = 6
	}
	[Token(Token = "0x20004E3")]
	[RequireComponent(typeof(TrackFollower))]
	public abstract class GenericTrigger : SmartTrigger
	{
		[Token(Token = "0x20004E4")]
		[CompilerGenerated]
		private sealed class <InternalActionDelayed>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GenericTrigger <>4__this;

			[Token(Token = "0x1700040C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600205F")]
				[Address(RVA = "0x1C20214", Offset = "0x1C20214", VA = "0x1C20214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002061")]
				[Address(RVA = "0x1C2025C", Offset = "0x1C2025C", VA = "0x1C2025C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x1C1FD40", Offset = "0x1C1FD40", VA = "0x1C1FD40")]
			[DebuggerHidden]
			public <InternalActionDelayed>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600205D")]
			[Address(RVA = "0x1C201B0", Offset = "0x1C201B0", VA = "0x1C201B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x1C201B4", Offset = "0x1C201B4", VA = "0x1C201B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x1C2021C", Offset = "0x1C2021C", VA = "0x1C2021C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		[CompilerGenerated]
		private sealed class <JoinTriggerEventRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GenericTrigger <>4__this;

			[Token(Token = "0x1700040E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002065")]
				[Address(RVA = "0x1C20354", Offset = "0x1C20354", VA = "0x1C20354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002067")]
				[Address(RVA = "0x1C2039C", Offset = "0x1C2039C", VA = "0x1C2039C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x1C1FE84", Offset = "0x1C1FE84", VA = "0x1C1FE84")]
			[DebuggerHidden]
			public <JoinTriggerEventRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x1C20264", Offset = "0x1C20264", VA = "0x1C20264", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x1C20268", Offset = "0x1C20268", VA = "0x1C20268", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x1C2035C", Offset = "0x1C2035C", VA = "0x1C2035C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TrackFollower trackFollower;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameModeType GameMode;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public CartsType CartType;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public GameObject ChainMasterRef;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool JoinAnotherEventTrigger;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public GenericTrigger TriggerEventChained;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float DelayUntilCallChainedTrigger;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public EventType EventType;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		private EventType lastEventType;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		[SerializeField]
		private bool lastShouldSnapOnTrack;

		[Token(Token = "0x1700040A")]
		public TrackFollower TrackFollower
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x1C1E14C", Offset = "0x1C1E14C", VA = "0x1C1E14C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		[HideInInspector]
		public int UniqueID
		{
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x1C1F578", Offset = "0x1C1F578", VA = "0x1C1F578")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1C1CC5C", Offset = "0x1C1CC5C", VA = "0x1C1CC5C", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1C1C5AC", Offset = "0x1C1C5AC", VA = "0x1C1C5AC", Slot = "13")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1C1F5A0", Offset = "0x1C1F5A0", VA = "0x1C1F5A0")]
		protected bool DoActionCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1C1F720", Offset = "0x1C1F720", VA = "0x1C1F720")]
		public void ConfigureTrigger()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1C1FCD8", Offset = "0x1C1FCD8", VA = "0x1C1FCD8")]
		private void OnCalibrate(bool shouldSync)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1C1FBC8", Offset = "0x1C1FBC8", VA = "0x1C1FBC8")]
		[IteratorStateMachine(typeof(<InternalActionDelayed>d__19))]
		private IEnumerator InternalActionDelayed()
		{
			return null;
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1C1FD08", Offset = "0x1C1FD08", VA = "0x1C1FD08")]
		private void InternalAction()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1C1FD68", Offset = "0x1C1FD68", VA = "0x1C1FD68")]
		protected void JoinTriggerEvent()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1C1FE10", Offset = "0x1C1FE10", VA = "0x1C1FE10", Slot = "14")]
		[IteratorStateMachine(typeof(<JoinTriggerEventRoutine>d__22))]
		protected virtual IEnumerator JoinTriggerEventRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1C1CB24", Offset = "0x1C1CB24", VA = "0x1C1CB24", Slot = "15")]
		public virtual void DoAction()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1C1F838", Offset = "0x1C1F838", VA = "0x1C1F838")]
		public bool UpdateTransformValidate()
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1C1FEAC", Offset = "0x1C1FEAC", VA = "0x1C1FEAC", Slot = "16")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1C1CBCC", Offset = "0x1C1CBCC", VA = "0x1C1CBCC")]
		protected GenericTrigger()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class LightEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004E7")]
		[CompilerGenerated]
		private sealed class <DoActionSlowly>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightEventTrigger <>4__this;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <initialColor>5__2;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <initialIntensity>5__3;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <initialShadowStrength>5__4;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <interval>5__5;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeToGo>5__6;

			[Token(Token = "0x17000410")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600206F")]
				[Address(RVA = "0x1C20864", Offset = "0x1C20864", VA = "0x1C20864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000411")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002071")]
				[Address(RVA = "0x1C208AC", Offset = "0x1C208AC", VA = "0x1C208AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x1C20618", Offset = "0x1C20618", VA = "0x1C20618")]
			[DebuggerHidden]
			public <DoActionSlowly>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x1C20650", Offset = "0x1C20650", VA = "0x1C20650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x1C20654", Offset = "0x1C20654", VA = "0x1C20654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x1C2086C", Offset = "0x1C2086C", VA = "0x1C2086C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Light Object;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool Enabled;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool ChangeColor;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color Color;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool ChangeIntensity;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float Intensity;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool ChangeShadowStrength;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float ShadowStrength;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float Transition;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool ChangeShadowResolution;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Tooltip("Will be rounded to the nearest power of two and capped by memory and hardware limits.")]
		public int ShadowResolution;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1C203A4", Offset = "0x1C203A4", VA = "0x1C203A4", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1C204F4", Offset = "0x1C204F4", VA = "0x1C204F4", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1C20480", Offset = "0x1C20480", VA = "0x1C20480")]
		[IteratorStateMachine(typeof(<DoActionSlowly>d__13))]
		public IEnumerator DoActionSlowly()
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1C20640", Offset = "0x1C20640", VA = "0x1C20640")]
		public LightEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class TimelineSyncController : IController<TimelineSyncController>
	{
		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<TimelineEventTrigger> Triggers;

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1C208B4", Offset = "0x1C208B4", VA = "0x1C208B4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x1C20958", Offset = "0x1C20958", VA = "0x1C20958")]
		public void Add(TimelineEventTrigger trigger)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1C20A40", Offset = "0x1C20A40", VA = "0x1C20A40")]
		public void Remove(TimelineEventTrigger trigger)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1C20AD0", Offset = "0x1C20AD0", VA = "0x1C20AD0")]
		public Dictionary<int, double> ToNetwork()
		{
			return null;
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1C20DE4", Offset = "0x1C20DE4", VA = "0x1C20DE4")]
		public void FromNetwork(Dictionary<int, double> timelines)
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1C20FB8", Offset = "0x1C20FB8", VA = "0x1C20FB8")]
		public void SetCurrentTime(TimelineEventTrigger trigger, double currentTime)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1C210AC", Offset = "0x1C210AC", VA = "0x1C210AC")]
		public TimelineSyncController()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class ObjectEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004EA")]
		public enum ActionType
		{
			[Token(Token = "0x40021AA")]
			Enable,
			[Token(Token = "0x40021AB")]
			Disable
		}

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Object Properties")]
		public GameObject Object;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ActionType Action;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x1C210F4", Offset = "0x1C210F4", VA = "0x1C210F4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1C21128", Offset = "0x1C21128", VA = "0x1C21128", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1C2120C", Offset = "0x1C2120C", VA = "0x1C2120C", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x1C212E8", Offset = "0x1C212E8", VA = "0x1C212E8")]
		public ObjectEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class QualitySettingsEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int PixelLightCount;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float LODBias;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int MaximumLODLevel;

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1C212F8", Offset = "0x1C212F8", VA = "0x1C212F8", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1C21340", Offset = "0x1C21340", VA = "0x1C21340", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1C21370", Offset = "0x1C21370", VA = "0x1C21370", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1C21444", Offset = "0x1C21444", VA = "0x1C21444")]
		public QualitySettingsEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class RendererEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004ED")]
		public enum ActionType
		{
			[Token(Token = "0x40021BA")]
			Enable,
			[Token(Token = "0x40021BB")]
			Disable
		}

		[Token(Token = "0x20004EE")]
		[CompilerGenerated]
		private sealed class <UpdateSlowly>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int id;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RendererEventTrigger <>4__this;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000412")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208C")]
				[Address(RVA = "0x1C23598", Offset = "0x1C23598", VA = "0x1C23598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000413")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208E")]
				[Address(RVA = "0x1C235E0", Offset = "0x1C235E0", VA = "0x1C235E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1C226E8", Offset = "0x1C226E8", VA = "0x1C226E8")]
			[DebuggerHidden]
			public <UpdateSlowly>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0x1C22A40", Offset = "0x1C22A40", VA = "0x1C22A40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1C22A44", Offset = "0x1C22A44", VA = "0x1C22A44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208D")]
			[Address(RVA = "0x1C235A0", Offset = "0x1C235A0", VA = "0x1C235A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Object Properties")]
		public Transform RenderTransform;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ActionType Action;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Dictionary<int, Renderer[]> listOfRenderList;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<int, SplineFollower[]> listOfSplineFollowers;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<int, SplineFollowerTimeline[]> listOfSplineFollowerTimelines;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<int, VA_Mesh[]> listOfVaMeshList;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Dictionary<int, PlayableDirector> listOfTimelines;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Dictionary<int, Light[]> listOfLightsList;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool alreadyInitialized;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int maxInteractions;

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1C21460", Offset = "0x1C21460", VA = "0x1C21460")]
		public static void ResetLists()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1C216AC", Offset = "0x1C216AC", VA = "0x1C216AC", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1C216C4", Offset = "0x1C216C4", VA = "0x1C216C4")]
		public void Init()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1C225A8", Offset = "0x1C225A8", VA = "0x1C225A8", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1C22664", Offset = "0x1C22664", VA = "0x1C22664")]
		[IteratorStateMachine(typeof(<UpdateSlowly>d__15))]
		private IEnumerator UpdateSlowly(int id)
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1C22710", Offset = "0x1C22710", VA = "0x1C22710", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x1C227EC", Offset = "0x1C227EC", VA = "0x1C227EC")]
		public RendererEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class RenderSettingsEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004F0")]
		[CompilerGenerated]
		private sealed class <DoActionSlowly>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderSettingsEventTrigger <>4__this;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color <initialColor>5__2;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <initialStartDistance>5__3;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <initialEndDistance>5__4;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <initialFogDensity>5__5;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <interval>5__6;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <timeToGo>5__7;

			[Token(Token = "0x17000414")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002096")]
				[Address(RVA = "0x1C23C84", Offset = "0x1C23C84", VA = "0x1C23C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000415")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002098")]
				[Address(RVA = "0x1C23CCC", Offset = "0x1C23CCC", VA = "0x1C23CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002093")]
			[Address(RVA = "0x1C23A28", Offset = "0x1C23A28", VA = "0x1C23A28")]
			[DebuggerHidden]
			public <DoActionSlowly>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002094")]
			[Address(RVA = "0x1C23A60", Offset = "0x1C23A60", VA = "0x1C23A60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x1C23A64", Offset = "0x1C23A64", VA = "0x1C23A64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x1C23C8C", Offset = "0x1C23C8C", VA = "0x1C23C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool EnableFog;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool ChangeSkyColor;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color SkyColor;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool ChangeColor;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color Color;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool ChangeMode;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FogMode Mode;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool ChangeStartDistance;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float StartDistance;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool ChangeEndDistance;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float EndDistance;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool ChangeDensity;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float Density;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float Transition;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool ExcludeSkybox;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material SetSkybox;

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1C235E8", Offset = "0x1C235E8", VA = "0x1C235E8", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1C238BC", Offset = "0x1C238BC", VA = "0x1C238BC", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1C23848", Offset = "0x1C23848", VA = "0x1C23848")]
		[IteratorStateMachine(typeof(<DoActionSlowly>d__18))]
		public IEnumerator DoActionSlowly()
		{
			return null;
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1C23A50", Offset = "0x1C23A50", VA = "0x1C23A50")]
		public RenderSettingsEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class ShadowEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ShadowQuality Shadows;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public ShadowResolution Resolution;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float Distance;

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x1C23CD4", Offset = "0x1C23CD4", VA = "0x1C23CD4", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x1C23CF8", Offset = "0x1C23CF8", VA = "0x1C23CF8", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x1C23DC0", Offset = "0x1C23DC0", VA = "0x1C23DC0", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x1C23EA0", Offset = "0x1C23EA0", VA = "0x1C23EA0")]
		public ShadowEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public abstract class SmartTrigger : MonoBehaviour
	{
		[Token(Token = "0x20004F3")]
		public enum Direction
		{
			[Token(Token = "0x40021EB")]
			Both,
			[Token(Token = "0x40021EC")]
			Forward,
			[Token(Token = "0x40021ED")]
			Backward
		}

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool ShouldCreateCollider;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Direction TrackDirection;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Vector3 Size;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool WorkOnce;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool AlreadyConfigured;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool AlreadyTriggered;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool IsInvertedTrigger;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool IsFromCheckpoint;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool playerAfterOnEnter;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool playerBeforeOnEnter;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SmartTrigger invertedTrigger;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoxCollider collider;

		[Token(Token = "0x14000035")]
		public event Action OnTriggerFired
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x1C1FC3C", Offset = "0x1C1FC3C", VA = "0x1C1FC3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x1C23EB8", Offset = "0x1C23EB8", VA = "0x1C23EB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1C1E418", Offset = "0x1C1E418", VA = "0x1C1E418")]
		protected bool IsPlayerBackward()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1C1F848", Offset = "0x1C1F848", VA = "0x1C1F848", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1C1E2A4", Offset = "0x1C1E2A4", VA = "0x1C1E2A4", Slot = "5")]
		protected virtual void OnTriggerEnter(Collider obj)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1C23F54", Offset = "0x1C23F54", VA = "0x1C23F54", Slot = "6")]
		protected virtual void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1C24058", Offset = "0x1C24058", VA = "0x1C24058", Slot = "7")]
		protected virtual void PlayerAfterOnEnter(Transform other)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1C24064", Offset = "0x1C24064", VA = "0x1C24064", Slot = "8")]
		protected virtual void PlayerBeforeOnEnter(Transform obj, bool isFromCheckpoint = false)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1C24288", Offset = "0x1C24288", VA = "0x1C24288", Slot = "9")]
		protected virtual void PlayerAfterOnExit(Transform other)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1C242B8", Offset = "0x1C242B8", VA = "0x1C242B8", Slot = "10")]
		protected virtual void PlayerBeforeOnExit(Transform obj, bool isFromCheckpoint = false)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1C240D8", Offset = "0x1C240D8", VA = "0x1C240D8")]
		private void HandleCheckpoints(bool isFromCheckpoint = false)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1C24350", Offset = "0x1C24350", VA = "0x1C24350")]
		public void FromCheckpoint(Transform obj, bool backwards)
		{
		}

		[Token(Token = "0x60020A9")]
		protected abstract void ConfigureReverseTrigger();

		[Token(Token = "0x60020AA")]
		protected virtual T CreateReverseTrigger<T>() where T : SmartTrigger
		{
			return null;
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x1C20148", Offset = "0x1C20148", VA = "0x1C20148")]
		protected SmartTrigger()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class SoundEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource AudioSource;

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1C243C8", Offset = "0x1C243C8", VA = "0x1C243C8", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x1C24484", Offset = "0x1C24484", VA = "0x1C24484", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x1C24488", Offset = "0x1C24488", VA = "0x1C24488")]
		public SoundEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class SoundtrackEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("The Audio Source where the Soundtrack(s) will be played.")]
		public AudioSource Soundtrack;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Optional playlist of AudioClips. If none is attached the audio clip from the Soundtrack Audio Source will be played.")]
		public SoundtrackPlaylist Playlist;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float Volume;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int SamplesOffset;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Check this if the SoundTrack was recorded with Player's 'Speed Should Affect Time Scale' checked.")]
		public bool IgnorePlayerSpeed;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool wasPlayingBeforePause;

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x1C24498", Offset = "0x1C24498", VA = "0x1C24498", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x1C244C4", Offset = "0x1C244C4", VA = "0x1C244C4", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1C247E0", Offset = "0x1C247E0", VA = "0x1C247E0")]
		public void UpdateAudioPitches_Event(float timeScale, float timeScaleBySpeed)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x1C247FC", Offset = "0x1C247FC", VA = "0x1C247FC", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x1C248DC", Offset = "0x1C248DC", VA = "0x1C248DC")]
		public void OnPause(bool pause)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x1C24A0C", Offset = "0x1C24A0C", VA = "0x1C24A0C", Slot = "16")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1C24B14", Offset = "0x1C24B14", VA = "0x1C24B14")]
		public SoundtrackEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class TeleportEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform Teleport;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool CartReversed;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 NewVelocityScale;

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1C24B2C", Offset = "0x1C24B2C", VA = "0x1C24B2C", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1C24BB4", Offset = "0x1C24BB4", VA = "0x1C24BB4")]
		private void SnapToTrack()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1C24CFC", Offset = "0x1C24CFC", VA = "0x1C24CFC", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1C24D00", Offset = "0x1C24D00", VA = "0x1C24D00")]
		public TeleportEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class TimelineEventTrigger : GenericTrigger
	{
		[Token(Token = "0x20004F8")]
		public enum ActionType
		{
			[Token(Token = "0x40021FD")]
			Play,
			[Token(Token = "0x40021FE")]
			Stop
		}

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Playable Properties")]
		public PlayableDirector Timeline;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ActionType Action;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Header("Optimization Properties")]
		public bool EnableRenderersBeforeStartPlaying;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		public bool DisableRenderersAfterFinishPlaying;

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1C24D68", Offset = "0x1C24D68", VA = "0x1C24D68", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1C25218", Offset = "0x1C25218", VA = "0x1C25218", Slot = "13")]
		public override void Start()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1C252D0", Offset = "0x1C252D0", VA = "0x1C252D0", Slot = "16")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1C25388", Offset = "0x1C25388", VA = "0x1C25388")]
		private void PrepareToPlayAgain(PlayableDirector obj)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1C24EFC", Offset = "0x1C24EFC", VA = "0x1C24EFC")]
		private void PrepareToEnable()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1C253A8", Offset = "0x1C253A8", VA = "0x1C253A8")]
		private void PrepareToDisable(PlayableDirector obj)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1C25634", Offset = "0x1C25634", VA = "0x1C25634", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1C25754", Offset = "0x1C25754", VA = "0x1C25754", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1C25830", Offset = "0x1C25830", VA = "0x1C25830")]
		public TimelineEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class TimeScaleEventTrigger : GenericTrigger
	{
		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float TimeScale;

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x1C25840", Offset = "0x1C25840", VA = "0x1C25840", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1C25874", Offset = "0x1C25874", VA = "0x1C25874", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1C25944", Offset = "0x1C25944", VA = "0x1C25944")]
		public TimeScaleEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class UnityEventTrigger : GenericTrigger
	{
		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent TriggerEventList;

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1C2595C", Offset = "0x1C2595C", VA = "0x1C2595C", Slot = "15")]
		public override void DoAction()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1C2598C", Offset = "0x1C2598C", VA = "0x1C2598C", Slot = "11")]
		protected override void ConfigureReverseTrigger()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1C25990", Offset = "0x1C25990", VA = "0x1C25990")]
		public UnityEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class WeaponEventTrigger : MonoBehaviour
	{
		[Token(Token = "0x20004FC")]
		public enum ActionType
		{
			[Token(Token = "0x4002205")]
			None,
			[Token(Token = "0x4002206")]
			Both,
			[Token(Token = "0x4002207")]
			Left,
			[Token(Token = "0x4002208")]
			Right
		}

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActionType WeaponType;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem ParticleFx;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource AudioFx;

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x1C259A0", Offset = "0x1C259A0", VA = "0x1C259A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1C25A14", Offset = "0x1C25A14", VA = "0x1C25A14")]
		public ActionType Trigger()
		{
			return default(ActionType);
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1C25C34", Offset = "0x1C25C34", VA = "0x1C25C34")]
		public WeaponEventTrigger()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class SoundtrackPlaylist : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004FE")]
		public struct Clip
		{
			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AudioClip AudioClip;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool IsLoop;
		}

		[Token(Token = "0x20004FF")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundtrackPlaylist <>4__this;

			[Token(Token = "0x17000416")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D4")]
				[Address(RVA = "0x1C264D8", Offset = "0x1C264D8", VA = "0x1C264D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000417")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D6")]
				[Address(RVA = "0x1C26520", Offset = "0x1C26520", VA = "0x1C26520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x1C262AC", Offset = "0x1C262AC", VA = "0x1C262AC")]
			[DebuggerHidden]
			public <PlayCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x1C263D0", Offset = "0x1C263D0", VA = "0x1C263D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x1C263D4", Offset = "0x1C263D4", VA = "0x1C263D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x1C264E0", Offset = "0x1C264E0", VA = "0x1C264E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Clip[] Clips;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audioSourceReference;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource[] audioSources;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentClipIndex;

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1C247A8", Offset = "0x1C247A8", VA = "0x1C247A8")]
		public void Play(AudioSource audioSource)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1C26238", Offset = "0x1C26238", VA = "0x1C26238")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__6))]
		private IEnumerator PlayCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1C262D4", Offset = "0x1C262D4", VA = "0x1C262D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1C25C3C", Offset = "0x1C25C3C", VA = "0x1C25C3C")]
		private void ConfigureAudioSources()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1C263C8", Offset = "0x1C263C8", VA = "0x1C263C8")]
		public SoundtrackPlaylist()
		{
		}
	}
}
namespace B4TGames.RollerCoasters.Tracks.Support2
{
	[Serializable]
	[Token(Token = "0x2000500")]
	[SelectionBase]
	public class TrackSupport : MonoBehaviour
	{
		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Color GizmoColor;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RotateObject;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ZenFulcrum.Track.Track LastNearestTrack;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Pivot;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TrackSupportModel SinglePrefab;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TrackSupportModel DoublePrefab;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TrackSupportType ModelType;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool ScalePipes;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 HeadRotation;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool LockJoints;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector2 JointRotation;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector2 Joint2Rotation;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector2 BaseRotation;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector2 BaseTilt;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float BaseMaxTilt;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 PipeLength;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 RingInterval;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool MoveToSnappedTrackOnAwake;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool[] baseCustomTilt;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float[] baseTiltOffset;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TrackSupportModel modelObj;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TrackSupportType lastJointType;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private readonly int tillingShaderID;

		[Token(Token = "0x17000418")]
		public bool[] BaseCustomTilt
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x1C26528", Offset = "0x1C26528", VA = "0x1C26528")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x1C26530", Offset = "0x1C26530", VA = "0x1C26530")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public Transform[] Bases
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x1C26538", Offset = "0x1C26538", VA = "0x1C26538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041A")]
		public Transform[] Pipes
		{
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0x1C26554", Offset = "0x1C26554", VA = "0x1C26554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1C26570", Offset = "0x1C26570", VA = "0x1C26570")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1C26670", Offset = "0x1C26670", VA = "0x1C26670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1C26778", Offset = "0x1C26778", VA = "0x1C26778", Slot = "4")]
		public virtual void SnapOnPath(Vector3 point)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1C26C88", Offset = "0x1C26C88", VA = "0x1C26C88")]
		public void SnapOnPath(ZenFulcrum.Track.Track track, SimpleTransform result)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1C26C84", Offset = "0x1C26C84", VA = "0x1C26C84")]
		public void Rotate()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1C26678", Offset = "0x1C26678", VA = "0x1C26678")]
		public void Scale(bool onlySetMaterial = false)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1C26D5C", Offset = "0x1C26D5C", VA = "0x1C26D5C")]
		private void SetMaterial(Renderer[] renderers, float pipeScale)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1C26E88", Offset = "0x1C26E88", VA = "0x1C26E88")]
		public void Rebuild(bool force = false)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x1C26E8C", Offset = "0x1C26E8C", VA = "0x1C26E8C")]
		public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack)
		{
			return null;
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1C26A88", Offset = "0x1C26A88", VA = "0x1C26A88")]
		public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1C2681C", Offset = "0x1C2681C", VA = "0x1C2681C")]
		public ZenFulcrum.Track.Track FindNearestTrack(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x1C26EC8", Offset = "0x1C26EC8", VA = "0x1C26EC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1C26ECC", Offset = "0x1C26ECC", VA = "0x1C26ECC")]
		public TrackSupport()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000501")]
	[SelectionBase]
	public class TrackSupportCustom : TrackSupport
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1C27068", Offset = "0x1C27068", VA = "0x1C27068", Slot = "4")]
		public override void SnapOnPath(Vector3 point)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1C27070", Offset = "0x1C27070", VA = "0x1C27070")]
		public TrackSupportCustom()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class TrackSupportDouble : TrackSupportModel
	{
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1C27074", Offset = "0x1C27074", VA = "0x1C27074")]
		public TrackSupportDouble()
		{
		}
	}
	[Token(Token = "0x2000503")]
	[SelectionBase]
	public class TrackSupportHelper : MonoBehaviour
	{
		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color GizmoColor;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RotateObject;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ZenFulcrum.Track.Track LastNearestTrack;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ScaleChildren;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Support;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform Base;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform Cano;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1C27084", Offset = "0x1C27084", VA = "0x1C27084")]
		public void SnapOnPath(Vector3 point)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1C27930", Offset = "0x1C27930", VA = "0x1C27930")]
		public void SnapOnPath(ZenFulcrum.Track.Track track, SimpleTransform result)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1C27418", Offset = "0x1C27418", VA = "0x1C27418")]
		private void Scale()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1C279E0", Offset = "0x1C279E0", VA = "0x1C279E0")]
		public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack)
		{
			return null;
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1C2735C", Offset = "0x1C2735C", VA = "0x1C2735C")]
		public SimpleTransform Evaluate(ZenFulcrum.Track.Track nearestTrack, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1C27128", Offset = "0x1C27128", VA = "0x1C27128")]
		public ZenFulcrum.Track.Track FindNearestTrack(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1C27A0C", Offset = "0x1C27A0C", VA = "0x1C27A0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1C27A10", Offset = "0x1C27A10", VA = "0x1C27A10")]
		public TrackSupportHelper()
		{
		}
	}
	[Token(Token = "0x2000504")]
	[ExecuteInEditMode]
	public class TrackSupportManager : MonoBehaviour
	{
		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackSupport SupportPrefab;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZenFulcrum.Track.Track FirstTrack;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float SupportInterval;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("WARNING! This action will lose all the previous changes on the TrackSupports")]
		[Space]
		public bool Spread;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[Tooltip("This action will only force the TrackSupports to be Rebuilt, no previous changes will be lost")]
		[Space]
		public bool Rebuild;

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1C27A24", Offset = "0x1C27A24", VA = "0x1C27A24")]
		public TrackSupportManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class TrackSupportModel : MonoBehaviour, IReplaceMaterials
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackSupportType Type;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TrackSupportLOD LOD;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Head;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Joint1;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] Joints2;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform[] Joints3;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] Pipes;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform[] Bases;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform[] BasesRing;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Space(5f)]
		public Material[] MobileMaterials;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform[] BasePivot;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private Transform[] ringsObj0;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private Transform[] ringsObj1;

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1C27A34", Offset = "0x1C27A34", VA = "0x1C27A34", Slot = "4")]
		public virtual void Config(bool isMobile)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x1C27CE4", Offset = "0x1C27CE4", VA = "0x1C27CE4", Slot = "5")]
		public virtual void UpdateRings(int index, float pipeScale, Vector2 ringInterval)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1C280F0", Offset = "0x1C280F0", VA = "0x1C280F0", Slot = "6")]
		public virtual void CleanAllRings()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1C2707C", Offset = "0x1C2707C", VA = "0x1C2707C")]
		public TrackSupportModel()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class TrackSupportSingle : TrackSupportModel
	{
		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1C282A4", Offset = "0x1C282A4", VA = "0x1C282A4")]
		public TrackSupportSingle()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public enum TrackSupportType
	{
		[Token(Token = "0x4002243")]
		Single = 0,
		[Token(Token = "0x4002244")]
		Double = 4
	}
	[Token(Token = "0x2000508")]
	public enum TrackSupportLOD
	{
		[Token(Token = "0x4002246")]
		LOD0,
		[Token(Token = "0x4002247")]
		LOD1
	}
}
namespace B4TGames.RollerCoasters.Tutorial
{
	[Token(Token = "0x2000509")]
	public class DroneAnimationEvent : StateMachineBehaviour
	{
		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1C282AC", Offset = "0x1C282AC", VA = "0x1C282AC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1C284B8", Offset = "0x1C284B8", VA = "0x1C284B8", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1C2850C", Offset = "0x1C2850C", VA = "0x1C2850C", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1C2861C", Offset = "0x1C2861C", VA = "0x1C2861C")]
		public DroneAnimationEvent()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class DroneController : IController<DroneController>
	{
		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Animator DroneAnimator;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource DroneAudioSource;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OVRLipSyncContextCanned LipSyncContext;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem Portal_1;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ParticleSystem Portal_2;

		[Token(Token = "0x1700041B")]
		public bool IsPlayingAudioSource
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x1C2900C", Offset = "0x1C2900C", VA = "0x1C2900C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OnCurrentAnimationEnd
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x1C28624", Offset = "0x1C28624", VA = "0x1C28624")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x1C286C0", Offset = "0x1C286C0", VA = "0x1C286C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action OnCurrentAnimationStarted
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x1C2875C", Offset = "0x1C2875C", VA = "0x1C2875C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1C287F8", Offset = "0x1C287F8", VA = "0x1C287F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action OnNextState
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0x1C28894", Offset = "0x1C28894", VA = "0x1C28894")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1C28930", Offset = "0x1C28930", VA = "0x1C28930")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<string> OnSubtitle
		{
			[Token(Token = "0x6002103")]
			[Address(RVA = "0x1C289CC", Offset = "0x1C289CC", VA = "0x1C289CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x1C28A7C", Offset = "0x1C28A7C", VA = "0x1C28A7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action OnBlindersOn
		{
			[Token(Token = "0x6002105")]
			[Address(RVA = "0x1C28B2C", Offset = "0x1C28B2C", VA = "0x1C28B2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x1C28BC8", Offset = "0x1C28BC8", VA = "0x1C28BC8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnBlindersOut
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x1C28C64", Offset = "0x1C28C64", VA = "0x1C28C64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x1C28D00", Offset = "0x1C28D00", VA = "0x1C28D00")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action OnHelmetOut
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x1C28D9C", Offset = "0x1C28D9C", VA = "0x1C28D9C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1C28E38", Offset = "0x1C28E38", VA = "0x1C28E38")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnIncreaseSmoothness
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x1C28ED4", Offset = "0x1C28ED4", VA = "0x1C28ED4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x1C28F70", Offset = "0x1C28F70", VA = "0x1C28F70")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1C29028", Offset = "0x1C29028", VA = "0x1C29028")]
		public void CurrentAnimationStarted()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1C29044", Offset = "0x1C29044", VA = "0x1C29044")]
		public void CurrentAnimationEnd()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1C29060", Offset = "0x1C29060", VA = "0x1C29060")]
		public void NextState()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1C2907C", Offset = "0x1C2907C", VA = "0x1C2907C")]
		public void Subtitle(string subtitle)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1C29098", Offset = "0x1C29098", VA = "0x1C29098")]
		public void BlindersOn()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1C290B4", Offset = "0x1C290B4", VA = "0x1C290B4")]
		public void BlindersOut()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1C290D0", Offset = "0x1C290D0", VA = "0x1C290D0")]
		public void HelmetOut()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1C290EC", Offset = "0x1C290EC", VA = "0x1C290EC")]
		public void IncreaseSmothness()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1C29108", Offset = "0x1C29108", VA = "0x1C29108")]
		public void PlayPortal_1()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1C29124", Offset = "0x1C29124", VA = "0x1C29124")]
		public void PlayPortal_2()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x1C29140", Offset = "0x1C29140", VA = "0x1C29140")]
		public DroneController()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public enum Level
	{
		[Token(Token = "0x4002256")]
		Level_01,
		[Token(Token = "0x4002257")]
		Level_02,
		[Token(Token = "0x4002258")]
		Level_03
	}
	[Token(Token = "0x200050C")]
	public class LevelChooser : IController<LevelChooser>
	{
		[Token(Token = "0x200050D")]
		[CompilerGenerated]
		private sealed class <ChangeLevelCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelChooser <>4__this;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Level level;

			[Token(Token = "0x1700041C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002120")]
				[Address(RVA = "0x1C2986C", Offset = "0x1C2986C", VA = "0x1C2986C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002122")]
				[Address(RVA = "0x1C298B4", Offset = "0x1C298B4", VA = "0x1C298B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0x1C2922C", Offset = "0x1C2922C", VA = "0x1C2922C")]
			[DebuggerHidden]
			public <ChangeLevelCoroutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600211E")]
			[Address(RVA = "0x1C29534", Offset = "0x1C29534", VA = "0x1C29534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1C29538", Offset = "0x1C29538", VA = "0x1C29538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002121")]
			[Address(RVA = "0x1C29874", Offset = "0x1C29874", VA = "0x1C29874", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool changingLevel;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackFollower[] Teleports;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1C29188", Offset = "0x1C29188", VA = "0x1C29188")]
		public void ChangeLevel(Level level)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1C291A8", Offset = "0x1C291A8", VA = "0x1C291A8")]
		[IteratorStateMachine(typeof(<ChangeLevelCoroutine>d__3))]
		private IEnumerator ChangeLevelCoroutine(Level level)
		{
			return null;
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1C29254", Offset = "0x1C29254", VA = "0x1C29254")]
		private void SnapToTrack(Level level)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1C294B4", Offset = "0x1C294B4", VA = "0x1C294B4")]
		public LevelChooser()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class MotionSicknessTutorialController : IController<MotionSicknessTutorialController>
	{
		[Token(Token = "0x200050F")]
		public enum DroneLineState
		{
			[Token(Token = "0x40022A0")]
			WELCOME,
			[Token(Token = "0x40022A1")]
			LEAVE_WELCOME,
			[Token(Token = "0x40022A2")]
			FIRST_STOP,
			[Token(Token = "0x40022A3")]
			FIRST_STOP_GOOD,
			[Token(Token = "0x40022A4")]
			FIRST_STOP_BAD,
			[Token(Token = "0x40022A5")]
			FIRST_STOP_NEXT,
			[Token(Token = "0x40022A6")]
			ENTER,
			[Token(Token = "0x40022A7")]
			SECOND_STOP,
			[Token(Token = "0x40022A8")]
			SECOND_STOP_GOOD,
			[Token(Token = "0x40022A9")]
			SECOND_STOP_GOOD_SECOND_TIME,
			[Token(Token = "0x40022AA")]
			SECOND_STOP_BAD,
			[Token(Token = "0x40022AB")]
			SECOND_STOP_BAD_NO_BLINDER,
			[Token(Token = "0x40022AC")]
			SECOND_STOP_BAD_WITH_BLINDER,
			[Token(Token = "0x40022AD")]
			SECOND_STOP_NEXT,
			[Token(Token = "0x40022AE")]
			SECOND_STOP_QUIT,
			[Token(Token = "0x40022AF")]
			THIRD_STOP,
			[Token(Token = "0x40022B0")]
			THIRD_STOP_GOOD_NO_SICKNESS,
			[Token(Token = "0x40022B1")]
			THIRD_STOP_GOOD_REMOVE,
			[Token(Token = "0x40022B2")]
			THIRD_STOP_GOOD_KEEP,
			[Token(Token = "0x40022B3")]
			THIRD_STOP_GOOD_SOME_SICKNESS,
			[Token(Token = "0x40022B4")]
			THIRD_STOP_GOOD_NEXT,
			[Token(Token = "0x40022B5")]
			THIRD_STOP_BAD,
			[Token(Token = "0x40022B6")]
			THIRD_STOP_BAD_NEXT,
			[Token(Token = "0x40022B7")]
			THIRD_STOP_BAD_QUIT,
			[Token(Token = "0x40022B8")]
			EXIT_WELCOME,
			[Token(Token = "0x40022B9")]
			NEXT_WELCOME
		}

		[Serializable]
		[Token(Token = "0x2000510")]
		public struct AnimationSubtitle
		{
			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string _text;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float _timeStamp;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string _event;
		}

		[Serializable]
		[Token(Token = "0x2000511")]
		public struct DroneAnimation
		{
			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string _animation;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string _state;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip _sound;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OVRLipSyncSequence _lipSync;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationSubtitle[] _subtitle;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool _useCustomTimeForNextState;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _customTimeForNextState;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool _playOnAnimationEnd;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool _doNextLineOnAnimationEnd;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool _clearSubtitleOnAnimationEnd;
		}

		[Serializable]
		[Token(Token = "0x2000512")]
		public struct DroneLine
		{
			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DroneLineState _droneLineState;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string _animatorTrigger;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string _animationToStartCart;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DroneAnimation[] _animationsAndSound;
		}

		[Token(Token = "0x2000517")]
		[CompilerGenerated]
		private sealed class <GetInputCorroutine>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action option1;

			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action option2;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600216C")]
				[Address(RVA = "0x1BDAB78", Offset = "0x1BDAB78", VA = "0x1BDAB78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216E")]
				[Address(RVA = "0x1BDABC0", Offset = "0x1BDABC0", VA = "0x1BDABC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002169")]
			[Address(RVA = "0x1BDAAC4", Offset = "0x1BDAAC4", VA = "0x1BDAAC4")]
			[DebuggerHidden]
			public <GetInputCorroutine>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x600216A")]
			[Address(RVA = "0x1BDAAEC", Offset = "0x1BDAAEC", VA = "0x1BDAAEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0x1BDAAF0", Offset = "0x1BDAAF0", VA = "0x1BDAAF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0x1BDAB80", Offset = "0x1BDAB80", VA = "0x1BDAB80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000518")]
		[CompilerGenerated]
		private sealed class <TriggerAnimation>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MotionSicknessTutorialController <>4__this;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002172")]
				[Address(RVA = "0x1BDAE20", Offset = "0x1BDAE20", VA = "0x1BDAE20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002174")]
				[Address(RVA = "0x1BDAE68", Offset = "0x1BDAE68", VA = "0x1BDAE68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216F")]
			[Address(RVA = "0x1BDABC8", Offset = "0x1BDABC8", VA = "0x1BDABC8")]
			[DebuggerHidden]
			public <TriggerAnimation>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0x1BDABF0", Offset = "0x1BDABF0", VA = "0x1BDABF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0x1BDABF4", Offset = "0x1BDABF4", VA = "0x1BDABF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x1BDAE28", Offset = "0x1BDAE28", VA = "0x1BDAE28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000519")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__122 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002178")]
				[Address(RVA = "0x1BDAF6C", Offset = "0x1BDAF6C", VA = "0x1BDAF6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600217A")]
				[Address(RVA = "0x1BDAFB4", Offset = "0x1BDAFB4", VA = "0x1BDAFB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x1BDAE70", Offset = "0x1BDAE70", VA = "0x1BDAE70")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__122(int <>1__state)
			{
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x1BDAE98", Offset = "0x1BDAE98", VA = "0x1BDAE98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x1BDAE9C", Offset = "0x1BDAE9C", VA = "0x1BDAE9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0x1BDAF74", Offset = "0x1BDAF74", VA = "0x1BDAF74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string LINE_02_QUESTION;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string LINE_05_QUESTION;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string LINE_09_QUESTION;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string LINE_11_QUESTION;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string LINE_12_QUESTION;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string LINE_15_QUESTION;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string LINE_17_QUESTION;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string LINE_18_QUESTION;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string ANSWER_GOOD;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string ANSWER_BAD;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string ANSWER_AGAIN;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string ANSWER_MOVEON;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static string ANSWER_LETSGO;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static string ANSWER_BLINDERS;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static string ANSWER_YES;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static string ANSWER_NO;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static string ANSWER_YES_CRAZY;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static string ANSWER_NO_CRAZY;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static string ANSWER_LATER;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool DroneExiting;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform DroneSpawnPoint;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DroneLine WelcomeLine;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DroneLine ExitWelcomeLine;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DroneLine NextWelcomeLine;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DroneLine LeaveWelcomeLine;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public DroneLine FirstStopLine;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public DroneLine FirstStopGoodLine;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public DroneLine FirstStopBadLine;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public DroneLine FirstStopNextLine;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public DroneLine EnterLine;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public DroneLine SecondStopLine;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public DroneLine SecondStopGoodLine;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public DroneLine SecondStopGoodSecondTimeLine;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public DroneLine SecondStopBadLine;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public DroneLine SecondStopBadNoBlinderLine;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public DroneLine SecondStopBadWithBlinderLine;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public DroneLine SecondStopNextLine;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public DroneLine SecondStopQuitLine;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public DroneLine ThirdStopLine;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public DroneLine ThirdStopGoodNoSicknessLine;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public DroneLine ThirdStopGoodRemoveLine;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public DroneLine ThirdStopGoodKeepLine;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public DroneLine ThirdStopGoodSomeSicknessLine;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public DroneLine ThirdStopGoodNextLine;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public DroneLine ThirdStopBadLine;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public DroneLine ThirdStopBadNextLine;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public DroneLine ThirdStopBadQuitLine;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private DroneLine currentAction;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Level scheduledLevel;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		private bool secondPartDoneOnce;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38D")]
		private bool areBlindersOn;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38E")]
		private bool noMotionSickness;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private string _lastTrigger;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private bool alreadyShowedMessageForExit;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[Header("for Debug porpouse")]
		public Text subtitle;

		[Token(Token = "0x1700041E")]
		public bool PlayAllowed
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x1C298BC", Offset = "0x1C298BC", VA = "0x1C298BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1C298E4", Offset = "0x1C298E4", VA = "0x1C298E4")]
			set
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<string, KeyValuePair<string, Action>, KeyValuePair<string, Action>> Message
		{
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x1C29930", Offset = "0x1C29930", VA = "0x1C29930")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x1C299E4", Offset = "0x1C299E4", VA = "0x1C299E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<string> Subtitle
		{
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x1C29A98", Offset = "0x1C29A98", VA = "0x1C29A98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x1C29B4C", Offset = "0x1C29B4C", VA = "0x1C29B4C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event Action BlindersOn
		{
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x1C29C00", Offset = "0x1C29C00", VA = "0x1C29C00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x1C29CA0", Offset = "0x1C29CA0", VA = "0x1C29CA0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action BlindersOut
		{
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x1C29D40", Offset = "0x1C29D40", VA = "0x1C29D40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x1C29DE0", Offset = "0x1C29DE0", VA = "0x1C29DE0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action HelmetOut
		{
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x1C29E80", Offset = "0x1C29E80", VA = "0x1C29E80")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x1C29F20", Offset = "0x1C29F20", VA = "0x1C29F20")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action IncreaseSmoothness
		{
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x1C29FC0", Offset = "0x1C29FC0", VA = "0x1C29FC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x1C2A060", Offset = "0x1C2A060", VA = "0x1C2A060")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action ExitTutorial
		{
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x1C2A100", Offset = "0x1C2A100", VA = "0x1C2A100")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x1C2A1A0", Offset = "0x1C2A1A0", VA = "0x1C2A1A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action ExitGame
		{
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1C2A240", Offset = "0x1C2A240", VA = "0x1C2A240")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002137")]
			[Address(RVA = "0x1C2A2E0", Offset = "0x1C2A2E0", VA = "0x1C2A2E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action StartTutorial
		{
			[Token(Token = "0x6002138")]
			[Address(RVA = "0x1C2A380", Offset = "0x1C2A380", VA = "0x1C2A380")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002139")]
			[Address(RVA = "0x1C2A420", Offset = "0x1C2A420", VA = "0x1C2A420")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1C29914", Offset = "0x1C29914", VA = "0x1C29914")]
		private void _BlindersOn()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1C29920", Offset = "0x1C29920", VA = "0x1C29920")]
		private void _BlindersOut()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1C29928", Offset = "0x1C29928", VA = "0x1C29928")]
		private void HadMotionSickness()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1C2A4C0", Offset = "0x1C2A4C0", VA = "0x1C2A4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1C2A7F4", Offset = "0x1C2A7F4", VA = "0x1C2A7F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1C2A7F8", Offset = "0x1C2A7F8", VA = "0x1C2A7F8")]
		public void DoWelcome()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1C297F0", Offset = "0x1C297F0", VA = "0x1C297F0")]
		public void DoEnter()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1C2B058", Offset = "0x1C2B058", VA = "0x1C2B058")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1C2B11C", Offset = "0x1C2B11C", VA = "0x1C2B11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1C2B3BC", Offset = "0x1C2B3BC", VA = "0x1C2B3BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1C2B65C", Offset = "0x1C2B65C", VA = "0x1C2B65C")]
		public void SetCurrentDroneTrigger(TriggerDroneAnimation droneTrigger)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1C2B674", Offset = "0x1C2B674", VA = "0x1C2B674")]
		public void NextState()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x1C2BD44", Offset = "0x1C2BD44", VA = "0x1C2BD44")]
		private KeyValuePair<string, Action> CreateOption(string text, DroneLineState line)
		{
			return default(KeyValuePair<string, Action>);
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1C2BF6C", Offset = "0x1C2BF6C", VA = "0x1C2BF6C")]
		private KeyValuePair<string, Action> CreateOption(string text, Level level, DroneLineState line)
		{
			return default(KeyValuePair<string, Action>);
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1C2C07C", Offset = "0x1C2C07C", VA = "0x1C2C07C")]
		private KeyValuePair<string, Action> CreateOption(string text, Action action, Level level, DroneLineState line)
		{
			return default(KeyValuePair<string, Action>);
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1C2BE50", Offset = "0x1C2BE50", VA = "0x1C2BE50")]
		private KeyValuePair<string, Action> CreateOption(string text, Action action, DroneLineState line)
		{
			return default(KeyValuePair<string, Action>);
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x1C2C19C", Offset = "0x1C2C19C", VA = "0x1C2C19C")]
		public void LeaveWelcome()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x1C2C248", Offset = "0x1C2C248", VA = "0x1C2C248")]
		private void DebugBlindersOn()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1C2C2B0", Offset = "0x1C2C2B0", VA = "0x1C2C2B0")]
		private void DebugBlindersOut()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x1C2C318", Offset = "0x1C2C318", VA = "0x1C2C318")]
		private void DebugHelmetOut()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1C2C380", Offset = "0x1C2C380", VA = "0x1C2C380")]
		private void DebugIncreaseSmoothness()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x1C2C3E8", Offset = "0x1C2C3E8", VA = "0x1C2C3E8")]
		private void GetInput(string message, KeyValuePair<string, Action> option1, KeyValuePair<string, Action> option2)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1C2C640", Offset = "0x1C2C640", VA = "0x1C2C640")]
		[IteratorStateMachine(typeof(<GetInputCorroutine>d__110))]
		private IEnumerator GetInputCorroutine(Action option1, Action option2)
		{
			return null;
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1C2C6D0", Offset = "0x1C2C6D0", VA = "0x1C2C6D0")]
		private void SetSubtitles(string subtitle)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1C2A800", Offset = "0x1C2A800", VA = "0x1C2A800")]
		private void DoState(DroneLineState lineState)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1C2CA50", Offset = "0x1C2CA50", VA = "0x1C2CA50")]
		[IteratorStateMachine(typeof(<TriggerAnimation>d__114))]
		private IEnumerator TriggerAnimation()
		{
			return null;
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1C2C770", Offset = "0x1C2C770", VA = "0x1C2C770")]
		private void UndoState()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1C2CAC4", Offset = "0x1C2CAC4", VA = "0x1C2CAC4")]
		public void OnSubtitle(string subtitle)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1C2CAE0", Offset = "0x1C2CAE0", VA = "0x1C2CAE0")]
		public void OnBlindersOn()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1C2CAFC", Offset = "0x1C2CAFC", VA = "0x1C2CAFC")]
		public void OnBlindersOut()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1C2CB18", Offset = "0x1C2CB18", VA = "0x1C2CB18")]
		public void OnHelmetOut()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1C2CB34", Offset = "0x1C2CB34", VA = "0x1C2CB34")]
		public void OnIncreaseSmoothness()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1C28330", Offset = "0x1C28330", VA = "0x1C28330")]
		public void OnAnimationEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1C2CB50", Offset = "0x1C2CB50", VA = "0x1C2CB50")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__122))]
		private IEnumerator PlaySoundDelayed()
		{
			return null;
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1C28508", Offset = "0x1C28508", VA = "0x1C28508")]
		public void OnAnimationUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1C28590", Offset = "0x1C28590", VA = "0x1C28590")]
		public void OnAnimationExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1C2C934", Offset = "0x1C2C934", VA = "0x1C2C934")]
		private DroneLine GetDroneActionByState(DroneLineState lineState)
		{
			return default(DroneLine);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1C2CBB0", Offset = "0x1C2CBB0", VA = "0x1C2CBB0")]
		private void StartCart()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x1C2CC70", Offset = "0x1C2CC70", VA = "0x1C2CC70")]
		private void OnCurrentAnimationStart()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x1C2CC74", Offset = "0x1C2CC74", VA = "0x1C2CC74")]
		private void OnCurrentAnimationEnd()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1C2CC7C", Offset = "0x1C2CC7C", VA = "0x1C2CC7C")]
		public MotionSicknessTutorialController()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class TriggerDroneAnimation : TrackFollower
	{
		[Token(Token = "0x200051B")]
		[CompilerGenerated]
		private sealed class <TriggerExitCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerDroneAnimation <>4__this;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002183")]
				[Address(RVA = "0x1BDB310", Offset = "0x1BDB310", VA = "0x1BDB310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002185")]
				[Address(RVA = "0x1BDB358", Offset = "0x1BDB358", VA = "0x1BDB358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002180")]
			[Address(RVA = "0x1BDB200", Offset = "0x1BDB200", VA = "0x1BDB200")]
			[DebuggerHidden]
			public <TriggerExitCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002181")]
			[Address(RVA = "0x1BDB258", Offset = "0x1BDB258", VA = "0x1BDB258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0x1BDB25C", Offset = "0x1BDB25C", VA = "0x1BDB25C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0x1BDB318", Offset = "0x1BDB318", VA = "0x1BDB318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200051C")]
		[CompilerGenerated]
		private sealed class <SendDroneTrigger>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeToWait;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriggerDroneAnimation <>4__this;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002189")]
				[Address(RVA = "0x1BDB448", Offset = "0x1BDB448", VA = "0x1BDB448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600218B")]
				[Address(RVA = "0x1BDB490", Offset = "0x1BDB490", VA = "0x1BDB490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0x1BDB228", Offset = "0x1BDB228", VA = "0x1BDB228")]
			[DebuggerHidden]
			public <SendDroneTrigger>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x1BDB360", Offset = "0x1BDB360", VA = "0x1BDB360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0x1BDB364", Offset = "0x1BDB364", VA = "0x1BDB364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0x1BDB450", Offset = "0x1BDB450", VA = "0x1BDB450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool alreadyTriggered;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public MotionSicknessTutorialController.DroneLineState _droneState;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TimeToWait;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool OnlyForTesting;

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x1BDAFBC", Offset = "0x1BDAFBC", VA = "0x1BDAFBC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1BDB10C", Offset = "0x1BDB10C", VA = "0x1BDB10C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1BDB18C", Offset = "0x1BDB18C", VA = "0x1BDB18C")]
		[IteratorStateMachine(typeof(<TriggerExitCoroutine>d__6))]
		private IEnumerator TriggerExitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1BDB088", Offset = "0x1BDB088", VA = "0x1BDB088")]
		[IteratorStateMachine(typeof(<SendDroneTrigger>d__7))]
		public IEnumerator SendDroneTrigger(float timeToWait)
		{
			return null;
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x1BDB250", Offset = "0x1BDB250", VA = "0x1BDB250")]
		public TriggerDroneAnimation()
		{
		}
	}
}
namespace B4TGames.RollerCoasters.TargetShooting
{
	[Token(Token = "0x200051D")]
	public class Gun : Weapon, IReplaceMaterials
	{
		[Token(Token = "0x200051E")]
		[CompilerGenerated]
		private sealed class <InternalShootRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Gun <>4__this;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 shotPos;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <totalTime>5__2;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <hittedSomething>5__3;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private bool <missedShot>5__4;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002198")]
				[Address(RVA = "0x1BDD218", Offset = "0x1BDD218", VA = "0x1BDD218", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600219A")]
				[Address(RVA = "0x1BDD260", Offset = "0x1BDD260", VA = "0x1BDD260", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0x1BDC404", Offset = "0x1BDC404", VA = "0x1BDC404")]
			[DebuggerHidden]
			public <InternalShootRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002196")]
			[Address(RVA = "0x1BDC594", Offset = "0x1BDC594", VA = "0x1BDC594", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0x1BDC598", Offset = "0x1BDC598", VA = "0x1BDC598", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1BDD220", Offset = "0x1BDD220", VA = "0x1BDD220", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Space(5f)]
		[Header("Gun Properties")]
		public ParticleSystem MuzzleFlashFx;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LineRenderer LaserBeanFx;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Gun Materials")]
		[Space(5f)]
		public Material[] GunMobile;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Space(5f)]
		public Renderer GunRenderer;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool ShouldInvertOnLeftHand;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[Space(5f)]
		public bool IsAutomatic;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[Header("Automatic Only")]
		public float SpeedMultiplier;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int BulletLimitToCooldown;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public GameObject MuzzleFlashLight;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float LaserBeanDuration;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform startPoint;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 remoteStartPointPos;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion remoteStartPointRot;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 remoteShotPos;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Coroutine internalShootRoutine;

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1BDB498", Offset = "0x1BDB498", VA = "0x1BDB498", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1BDB9D0", Offset = "0x1BDB9D0", VA = "0x1BDB9D0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1BDBB84", Offset = "0x1BDBB84", VA = "0x1BDBB84", Slot = "7")]
		public override void Shoot()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1BDC040", Offset = "0x1BDC040", VA = "0x1BDC040", Slot = "8")]
		public override void RemoteShoot(Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos, InputController.Hand hand)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1BDC134", Offset = "0x1BDC134", VA = "0x1BDC134", Slot = "9")]
		public virtual void InternalShoot()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1BDC36C", Offset = "0x1BDC36C", VA = "0x1BDC36C")]
		[IteratorStateMachine(typeof(<InternalShootRoutine>d__20))]
		protected IEnumerator InternalShootRoutine(Vector3 shotPos)
		{
			return null;
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x1BDC42C", Offset = "0x1BDC42C", VA = "0x1BDC42C", Slot = "10")]
		protected virtual bool CheckForHit(Vector3 start, Vector3 end, out RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1BDB8C0", Offset = "0x1BDB8C0", VA = "0x1BDB8C0")]
		protected void HideLightBean()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x1BDC558", Offset = "0x1BDC558", VA = "0x1BDC558")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public abstract class Weapon : MonoBehaviour
	{
		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputController.Hand Hand;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Offset")]
		public Transform Offset;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AimBeam;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Avatar Left Custom Poses (also used for Right)")]
		public Transform LeftHandCustomPose;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandCustomPoseSqueezed;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Weapon Properties")]
		public float Range;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform FirePivot;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip[] ShotSoundFx;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] ReloadSoundFx;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AnimationCurve[] HapticsCurves;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Space(5f)]
		public WeaponAnimator Animator;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Space(5f)]
		public WeaponTriggerAnimator TriggerAnimator;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public new Transform transform;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AvatarCustomHands customHandsController;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isRemote;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AudioSource shotAudioSource;

		[Token(Token = "0x1700042B")]
		public AvatarCustomHands CustomHandsController
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1BDD314", Offset = "0x1BDD314", VA = "0x1BDD314")]
			get
			{
				return null;
			}
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1BDD268", Offset = "0x1BDD268", VA = "0x1BDD268")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public bool IsRemote
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1BDD31C", Offset = "0x1BDD31C", VA = "0x1BDD31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x1BDD324", Offset = "0x1BDD324", VA = "0x1BDD324")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		protected Player Player
		{
			[Token(Token = "0x600219F")]
			[Address(RVA = "0x1BDD3C4", Offset = "0x1BDD3C4", VA = "0x1BDD3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1BDB6FC", Offset = "0x1BDB6FC", VA = "0x1BDB6FC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1BDB9D4", Offset = "0x1BDB9D4", VA = "0x1BDB9D4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1BDD460", Offset = "0x1BDD460", VA = "0x1BDD460")]
		public void ShowLaserSight()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x1BDD51C", Offset = "0x1BDD51C", VA = "0x1BDD51C")]
		private void SceneManager_sceneUnloaded(Scene arg0)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1BDD588", Offset = "0x1BDD588", VA = "0x1BDD588", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60021A5")]
		public abstract void Shoot();

		[Token(Token = "0x60021A6")]
		public abstract void RemoteShoot(Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos, InputController.Hand hand);

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1BDBDBC", Offset = "0x1BDBDBC", VA = "0x1BDBDBC")]
		protected void PlayShotSoundFx()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1BDD62C", Offset = "0x1BDD62C", VA = "0x1BDD62C")]
		public void TriggerAnimation(float index, InputController.Hand hand)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1BDC57C", Offset = "0x1BDC57C", VA = "0x1BDC57C")]
		protected Weapon()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class WeaponAnimationEvents : MonoBehaviour
	{
		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int bulletCount;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The MeshRenderer to get the Material from")]
		public Renderer Renderer;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MaterialIndex;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Gun targetShootingGun;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material materialToOffset;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int shotAttribute;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int speedAttribute;

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1BDDB5C", Offset = "0x1BDDB5C", VA = "0x1BDDB5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1BDDC0C", Offset = "0x1BDDC0C", VA = "0x1BDDC0C")]
		public void Shot()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1BDDD10", Offset = "0x1BDDD10", VA = "0x1BDDD10")]
		public void Pulled()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1BDDEEC", Offset = "0x1BDDEEC", VA = "0x1BDDEEC")]
		public void SetMaterialOffsetX(float offsetX)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x1BDE064", Offset = "0x1BDE064", VA = "0x1BDE064")]
		public WeaponAnimationEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000521")]
	public struct WeaponAnimator
	{
		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Animator Animator;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool HasSpeedAnimation;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[HideInInspector]
		public bool IsReady;

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1BDB944", Offset = "0x1BDB944", VA = "0x1BDB944")]
		public void Config()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1BDBFA0", Offset = "0x1BDBFA0", VA = "0x1BDBFA0")]
		public void ShotAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000522")]
	public struct WeaponTriggerAnimator
	{
		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Trigger Poses")]
		public Transform Trigger;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform ReleasedRef;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform PulledRef;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform[] leftHandCustomPoseIndexJoints;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion[] leftHandReleasedIndexJoints;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] leftHandSqueezedIndexJoints;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Weapon weaponRef;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] lastHandIndex;

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1BDE0E8", Offset = "0x1BDE0E8", VA = "0x1BDE0E8")]
		public void Config(Weapon weapon)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1BDD644", Offset = "0x1BDD644", VA = "0x1BDD644")]
		public void UpdateAnimation(float index, InputController.Hand hand)
		{
		}
	}
	[Token(Token = "0x2000523")]
	public interface ITarget
	{
		[Token(Token = "0x60021B3")]
		void Hit(Vector3 closestPoint, [Optional] Rigidbody hittedBody);
	}
	[Token(Token = "0x2000524")]
	public class JumpTarget : MonoBehaviour, ITarget
	{
		[Token(Token = "0x2000525")]
		public enum JumpTargetType
		{
			[Token(Token = "0x400233A")]
			Rail,
			[Token(Token = "0x400233B")]
			Ground
		}

		[Token(Token = "0x2000526")]
		[CompilerGenerated]
		private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JumpTarget <>4__this;

			[Token(Token = "0x1700042F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C4")]
				[Address(RVA = "0x1BDFFBC", Offset = "0x1BDFFBC", VA = "0x1BDFFBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C6")]
				[Address(RVA = "0x1BE0004", Offset = "0x1BE0004", VA = "0x1BE0004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x1BDE32C", Offset = "0x1BDE32C", VA = "0x1BDE32C")]
			[DebuggerHidden]
			public <Start>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x1BDF9D8", Offset = "0x1BDF9D8", VA = "0x1BDF9D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x1BDF9DC", Offset = "0x1BDF9DC", VA = "0x1BDF9DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x1BDFFC4", Offset = "0x1BDFFC4", VA = "0x1BDFFC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000527")]
		[CompilerGenerated]
		private sealed class <InstantiateJumpTarget>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JumpTarget <>4__this;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021CA")]
				[Address(RVA = "0x1BE0204", Offset = "0x1BE0204", VA = "0x1BE0204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021CC")]
				[Address(RVA = "0x1BE024C", Offset = "0x1BE024C", VA = "0x1BE024C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x1BDE3C8", Offset = "0x1BDE3C8", VA = "0x1BDE3C8")]
			[DebuggerHidden]
			public <InstantiateJumpTarget>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x1BE000C", Offset = "0x1BE000C", VA = "0x1BE000C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1BE0010", Offset = "0x1BE0010", VA = "0x1BE0010", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x1BE020C", Offset = "0x1BE020C", VA = "0x1BE020C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000528")]
		[CompilerGenerated]
		private sealed class <UpdateAnimation>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JumpTarget <>4__this;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion from;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion to;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float time;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool open;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000433")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D0")]
				[Address(RVA = "0x1BE0564", Offset = "0x1BE0564", VA = "0x1BE0564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D2")]
				[Address(RVA = "0x1BE05AC", Offset = "0x1BE05AC", VA = "0x1BE05AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x1BDF8AC", Offset = "0x1BDF8AC", VA = "0x1BDF8AC")]
			[DebuggerHidden]
			public <UpdateAnimation>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x1BE0254", Offset = "0x1BE0254", VA = "0x1BE0254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x1BE0258", Offset = "0x1BE0258", VA = "0x1BE0258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x1BE056C", Offset = "0x1BE056C", VA = "0x1BE056C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpTargetType Type;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PlayerMinDistance;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxTimeOpened;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Offset;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody[] targetRigidbodies;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] targetColliders;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer[] targetRenderers;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JumpTargetSettings settings;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private new Transform transform;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer renderer;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 hitPoint;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform silhouete;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform silhoueteRoot;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool hasEmissive;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color emissionColor;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LODGroup lodGroup;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly YieldInstruction waitEndFrame;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isOpened;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isAnimating;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock props;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int emissionColorID;

		[Token(Token = "0x1700042E")]
		private bool isReady
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x1BDE0F0", Offset = "0x1BDE0F0", VA = "0x1BDE0F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1BDE1B8", Offset = "0x1BDE1B8", VA = "0x1BDE1B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1BDE2B8", Offset = "0x1BDE2B8", VA = "0x1BDE2B8")]
		[IteratorStateMachine(typeof(<Start>d__26))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1BDE354", Offset = "0x1BDE354", VA = "0x1BDE354")]
		[IteratorStateMachine(typeof(<InstantiateJumpTarget>d__27))]
		public IEnumerator InstantiateJumpTarget()
		{
			return null;
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1BDE3F0", Offset = "0x1BDE3F0", VA = "0x1BDE3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1BDEB50", Offset = "0x1BDEB50", VA = "0x1BDEB50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1BDEDC0", Offset = "0x1BDEDC0", VA = "0x1BDEDC0", Slot = "4")]
		public void Hit(Vector3 closestPoint, [Optional] Rigidbody hittedBody)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1BDE61C", Offset = "0x1BDE61C", VA = "0x1BDE61C")]
		public void Open()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1BDE918", Offset = "0x1BDE918", VA = "0x1BDE918")]
		private void Close()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1BDF710", Offset = "0x1BDF710", VA = "0x1BDF710")]
		[IteratorStateMachine(typeof(<UpdateAnimation>d__33))]
		public IEnumerator UpdateAnimation(Quaternion from, Quaternion to, float time, bool open)
		{
			return null;
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1BDF57C", Offset = "0x1BDF57C", VA = "0x1BDF57C")]
		private void SetEmissiveColor(Renderer renderer, Color color)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1BDF8D4", Offset = "0x1BDF8D4", VA = "0x1BDF8D4")]
		public JumpTarget()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class JumpTargetSettings : MonoBehaviour, IReplaceMaterials
	{
		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Base;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Arm;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform ArmOpenedRef;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ArmClosedRef;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform TargetHolder;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float HitForce;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(5f)]
		public Material[] MaterialsMobile;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(5f)]
		public AudioClip HitSoundEffect;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip RaiseSoundEffect;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip LowerSoundEffect;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audio;

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x1BE05B4", Offset = "0x1BE05B4", VA = "0x1BE05B4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1BDEB88", Offset = "0x1BDEB88", VA = "0x1BDEB88")]
		public void LookAt(bool isOpened, bool alreadyOpenedBefore, Renderer renderer)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1BDF404", Offset = "0x1BDF404", VA = "0x1BDF404")]
		public void PlayHitSoundEffect()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1BDF658", Offset = "0x1BDF658", VA = "0x1BDF658")]
		public void PlayRaiseSoundEffect()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1BDF7F4", Offset = "0x1BDF7F4", VA = "0x1BDF7F4")]
		public void PlayLowerSoundEffect()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1BE060C", Offset = "0x1BE060C", VA = "0x1BE060C")]
		public JumpTargetSettings()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class SilhoueteSettings : MonoBehaviour, IReplaceMaterials
	{
		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		public Material[] MaterialsMobile;

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1BE061C", Offset = "0x1BE061C", VA = "0x1BE061C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1BE0620", Offset = "0x1BE0620", VA = "0x1BE0620")]
		public SilhoueteSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052B")]
	public struct SlowMotionProperties
	{
		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip SoundFx_Start;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioClip SoundFx_Stop;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public AudioSource AudioSourceFx;

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x1BE0628", Offset = "0x1BE0628", VA = "0x1BE0628")]
		public void Start()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1BE09E0", Offset = "0x1BE09E0", VA = "0x1BE09E0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1BE0758", Offset = "0x1BE0758", VA = "0x1BE0758")]
		private void UpdateTimeScale(bool input)
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class Target : MonoBehaviour, ITarget, IReplaceMaterials
	{
		[Token(Token = "0x200052D")]
		[CompilerGenerated]
		private sealed class <Inflate>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target <>4__this;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform tr;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F2")]
				[Address(RVA = "0x1BE238C", Offset = "0x1BE238C", VA = "0x1BE238C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021F4")]
				[Address(RVA = "0x1BE23D4", Offset = "0x1BE23D4", VA = "0x1BE23D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x1BE1474", Offset = "0x1BE1474", VA = "0x1BE1474")]
			[DebuggerHidden]
			public <Inflate>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x1BE21F0", Offset = "0x1BE21F0", VA = "0x1BE21F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x1BE21F4", Offset = "0x1BE21F4", VA = "0x1BE21F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x1BE2394", Offset = "0x1BE2394", VA = "0x1BE2394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052E")]
		[CompilerGenerated]
		private sealed class <Deflate>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target <>4__this;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform tr;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalTime>5__2;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F8")]
				[Address(RVA = "0x1BE24F0", Offset = "0x1BE24F0", VA = "0x1BE24F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021FA")]
				[Address(RVA = "0x1BE2538", Offset = "0x1BE2538", VA = "0x1BE2538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x1BE15FC", Offset = "0x1BE15FC", VA = "0x1BE15FC")]
			[DebuggerHidden]
			public <Deflate>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x1BE23DC", Offset = "0x1BE23DC", VA = "0x1BE23DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x1BE23E0", Offset = "0x1BE23E0", VA = "0x1BE23E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x1BE24F8", Offset = "0x1BE24F8", VA = "0x1BE24F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool IsDisabling;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TargetZoneID;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TargetID;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] FloatingTargetsRenderers;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] FloatingTargetsHitEffects;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer[] FixedTargetsRenderers;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] FixedTargetsHitEffects;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(5f)]
		public Material[] TargetsMobile;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool DoNotRotateOnZAxis;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DistanceFromPlayer;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip HitSoundEffect;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float HitForce;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float EmissionMultiplier;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int ChosenTarget;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private new Transform transform;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Collider collider;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audio;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lookAt;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 hitPoint;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Renderer Model3DRenderer;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject HitEffect;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color emissionColor;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MaterialPropertyBlock props;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int emissionColorID;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 tempScale;

		[Token(Token = "0x17000435")]
		public bool IsAtive
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x1BE0AB0", Offset = "0x1BE0AB0", VA = "0x1BE0AB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x1BE0AA4", Offset = "0x1BE0AA4", VA = "0x1BE0AA4")]
			set
			{
			}
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1BE0AB8", Offset = "0x1BE0AB8", VA = "0x1BE0AB8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1BE0D80", Offset = "0x1BE0D80", VA = "0x1BE0D80")]
		protected void Start()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x1BE0F20", Offset = "0x1BE0F20", VA = "0x1BE0F20")]
		public void Config(Transform parent, bool isFixed, int chosenTarget = -1)
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1BE13E4", Offset = "0x1BE13E4", VA = "0x1BE13E4")]
		[IteratorStateMachine(typeof(<Inflate>d__31))]
		private IEnumerator Inflate(Transform tr)
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1BE149C", Offset = "0x1BE149C", VA = "0x1BE149C")]
		private void SetEmissiveColor(Color color)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1BE156C", Offset = "0x1BE156C", VA = "0x1BE156C")]
		[IteratorStateMachine(typeof(<Deflate>d__33))]
		private IEnumerator Deflate(Transform tr)
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1BE1624", Offset = "0x1BE1624", VA = "0x1BE1624")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1BE196C", Offset = "0x1BE196C", VA = "0x1BE196C")]
		private void Show()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1BE19D0", Offset = "0x1BE19D0", VA = "0x1BE19D0", Slot = "4")]
		public void Hit(Vector3 closestPoint, [Optional] Rigidbody hittedBody)
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1BE1BF8", Offset = "0x1BE1BF8", VA = "0x1BE1BF8")]
		protected void DisableByHit(bool hit)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1BE2040", Offset = "0x1BE2040", VA = "0x1BE2040")]
		protected void DisableByTimeOrDistance()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1BE0B60", Offset = "0x1BE0B60", VA = "0x1BE0B60")]
		public void Disable()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1BE208C", Offset = "0x1BE208C", VA = "0x1BE208C")]
		private void DisableCompletely()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1BE20B0", Offset = "0x1BE20B0", VA = "0x1BE20B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1BE2184", Offset = "0x1BE2184", VA = "0x1BE2184")]
		public Target()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class TargetShooterController : IController<TargetShooterController>
	{
		[Token(Token = "0x2000530")]
		[CompilerGenerated]
		private sealed class <Config>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetShooterController <>4__this;

			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private JumpTarget[] <jumpTargets>5__2;

			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000442")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600222E")]
				[Address(RVA = "0x1BE5A10", Offset = "0x1BE5A10", VA = "0x1BE5A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002230")]
				[Address(RVA = "0x1BE5A58", Offset = "0x1BE5A58", VA = "0x1BE5A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600222B")]
			[Address(RVA = "0x1BE3AD0", Offset = "0x1BE3AD0", VA = "0x1BE3AD0")]
			[DebuggerHidden]
			public <Config>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x600222C")]
			[Address(RVA = "0x1BE53F4", Offset = "0x1BE53F4", VA = "0x1BE53F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600222D")]
			[Address(RVA = "0x1BE53F8", Offset = "0x1BE53F8", VA = "0x1BE53F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600222F")]
			[Address(RVA = "0x1BE5A18", Offset = "0x1BE5A18", VA = "0x1BE5A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000531")]
		[CompilerGenerated]
		private sealed class <GunConfig>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetShooterController <>4__this;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x17000444")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002234")]
				[Address(RVA = "0x1BE6268", Offset = "0x1BE6268", VA = "0x1BE6268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002236")]
				[Address(RVA = "0x1BE62B0", Offset = "0x1BE62B0", VA = "0x1BE62B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x1BE3C70", Offset = "0x1BE3C70", VA = "0x1BE3C70")]
			[DebuggerHidden]
			public <GunConfig>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6002232")]
			[Address(RVA = "0x1BE5A60", Offset = "0x1BE5A60", VA = "0x1BE5A60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002233")]
			[Address(RVA = "0x1BE5A64", Offset = "0x1BE5A64", VA = "0x1BE5A64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002235")]
			[Address(RVA = "0x1BE6270", Offset = "0x1BE6270", VA = "0x1BE6270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[CompilerGenerated]
		private sealed class <RemoteGunConfigCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetShooterController <>4__this;

			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RemotePlayer <remotePlayer>5__2;

			[Token(Token = "0x40023C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000446")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600223A")]
				[Address(RVA = "0x1BE66A8", Offset = "0x1BE66A8", VA = "0x1BE66A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600223C")]
				[Address(RVA = "0x1BE66F0", Offset = "0x1BE66F0", VA = "0x1BE66F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002237")]
			[Address(RVA = "0x1BE3ED0", Offset = "0x1BE3ED0", VA = "0x1BE3ED0")]
			[DebuggerHidden]
			public <RemoteGunConfigCoroutine>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6002238")]
			[Address(RVA = "0x1BE62B8", Offset = "0x1BE62B8", VA = "0x1BE62B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x1BE62BC", Offset = "0x1BE62BC", VA = "0x1BE62BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600223B")]
			[Address(RVA = "0x1BE66B0", Offset = "0x1BE66B0", VA = "0x1BE66B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[CompilerGenerated]
		private sealed class <SendRemoteFinalTime>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float totalRideTime;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float totalGameTime;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TargetShooterController <>4__this;

			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lastSend>5__2;

			[Token(Token = "0x17000448")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002240")]
				[Address(RVA = "0x1BE6828", Offset = "0x1BE6828", VA = "0x1BE6828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000449")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002242")]
				[Address(RVA = "0x1BE6870", Offset = "0x1BE6870", VA = "0x1BE6870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600223D")]
			[Address(RVA = "0x1BE42F8", Offset = "0x1BE42F8", VA = "0x1BE42F8")]
			[DebuggerHidden]
			public <SendRemoteFinalTime>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x600223E")]
			[Address(RVA = "0x1BE66F8", Offset = "0x1BE66F8", VA = "0x1BE66F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600223F")]
			[Address(RVA = "0x1BE66FC", Offset = "0x1BE66FC", VA = "0x1BE66FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0x1BE6830", Offset = "0x1BE6830", VA = "0x1BE6830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002380")]
		public const float TARGET_HIT = 10f;

		[Token(Token = "0x4002381")]
		public const float TARGET_HIT_IN_A_ROW = 5f;

		[Token(Token = "0x4002382")]
		public const float TARGET_HIT_MAX_SCORE = 50f;

		[Token(Token = "0x4002383")]
		public const float REWARD_JUMP_TARGET = 50f;

		[Token(Token = "0x4002384")]
		public const float MAX_TIME_HIT_IN_A_ROW = 3f;

		[Token(Token = "0x4002385")]
		public const float PENALTY = -10f;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MAX_HITS_IN_A_ROW_PF;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string TARGETS_HIT_PF;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string REWARDS_PF;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string TARGETS_MISSED_PF;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string SHOTS_MISSED_PF;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string PENALTIES_PF;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string SCORE_PF;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Gun Properties")]
		public bool ShowDebugRay;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string GunAddressableName;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public LayerMask ShootingLayers;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public TextMeshProUGUI CurrentTimeHUD;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TextMeshProUGUI CurrentHitsHUD;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Gun GunRight;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Gun GunLeft;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<Target> Targets;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(5f)]
		public SlowMotionProperties SlowMotion;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Target Properties")]
		public Target TargetPrefab;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int MaxTargetsPerZone;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TargetZone[] TargetZones;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int NextTargetZone;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Jump Target Properties")]
		public SilhoueteSettings[] Silhouetes;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Things that are not Target and will increase the Score.")]
		[Header("Score Properties")]
		public int RewardsHits;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("Things that are not Target and will decrease the Score.")]
		public int PenaltiesHits;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int ShotsMissed;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int TargetsHitted;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int TargetsMissed;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int HitsInARow;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int MaxHitsInARow;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int TotalTargets;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float TotalRideTime;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float TotalGameTime;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float TotalPauseTime;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public bool LastSlowInput;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool remoteServerFinished;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool remoteClientReceivedTime;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int hitsInARow;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float lastHitTime;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float Score;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool readSlowMotionFromRemote;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool hasListeners;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly YieldInstruction waitEndFrame;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float lastTimeSentRemoteSlowMotion;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool AlreadySloMoed;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float totalPausedTime;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float lastTime;

		[Token(Token = "0x1700043A")]
		public int LastTargetZone
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x1BE26A0", Offset = "0x1BE26A0", VA = "0x1BE26A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700043B")]
		public int TotalShots
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x1BE26D4", Offset = "0x1BE26D4", VA = "0x1BE26D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700043C")]
		public bool ShootInputLeft
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x1BE26E0", Offset = "0x1BE26E0", VA = "0x1BE26E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public bool ShootInputRight
		{
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x1BE27F0", Offset = "0x1BE27F0", VA = "0x1BE27F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public bool ShootInput
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x1BE28AC", Offset = "0x1BE28AC", VA = "0x1BE28AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public bool SlowmotionInput
		{
			[Token(Token = "0x6002202")]
			[Address(RVA = "0x1BE2968", Offset = "0x1BE2968", VA = "0x1BE2968")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		private Player Player
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0x1BE279C", Offset = "0x1BE279C", VA = "0x1BE279C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		public bool LostCombo
		{
			[Token(Token = "0x6002224")]
			[Address(RVA = "0x1BDD1D4", Offset = "0x1BDD1D4", VA = "0x1BDD1D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000047")]
		public event Action<InputController.Hand> OnShoot
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x1BE2540", Offset = "0x1BE2540", VA = "0x1BE2540")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x1BE25F0", Offset = "0x1BE25F0", VA = "0x1BE25F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1BE2C28", Offset = "0x1BE2C28", VA = "0x1BE2C28", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1BE2C80", Offset = "0x1BE2C80", VA = "0x1BE2C80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1BE30AC", Offset = "0x1BE30AC", VA = "0x1BE30AC")]
		private bool AddListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1BE2EB4", Offset = "0x1BE2EB4", VA = "0x1BE2EB4")]
		private bool RemoveListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1BE32A4", Offset = "0x1BE32A4", VA = "0x1BE32A4")]
		public void OnPause(bool pause)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1BE3380", Offset = "0x1BE3380", VA = "0x1BE3380")]
		private void InputManager_OnShot(InputController.Hand obj)
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x1BE33A0", Offset = "0x1BE33A0", VA = "0x1BE33A0")]
		private void InputManager_OnSlowmotionStart(InputController.Hand obj)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1BE3458", Offset = "0x1BE3458", VA = "0x1BE3458")]
		private void InputManager_OnSlowmotionEnd(InputController.Hand obj)
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1BE3504", Offset = "0x1BE3504", VA = "0x1BE3504")]
		private void Start()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1BE37BC", Offset = "0x1BE37BC", VA = "0x1BE37BC")]
		public void ShowRemoteTarget(int targtZoneIndex, int spawnPoint, int chosenTarget)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1BE3748", Offset = "0x1BE3748", VA = "0x1BE3748")]
		[IteratorStateMachine(typeof(<Config>d__77))]
		public IEnumerator Config()
		{
			return null;
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1BE3AF8", Offset = "0x1BE3AF8", VA = "0x1BE3AF8")]
		public void StartShooter()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1BE3BFC", Offset = "0x1BE3BFC", VA = "0x1BE3BFC")]
		[IteratorStateMachine(typeof(<GunConfig>d__79))]
		public IEnumerator GunConfig()
		{
			return null;
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1BE3C98", Offset = "0x1BE3C98", VA = "0x1BE3C98")]
		public void FixWeapon()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1BE3D48", Offset = "0x1BE3D48", VA = "0x1BE3D48")]
		public void RemoveGunFromAvatar()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1BE3E3C", Offset = "0x1BE3E3C", VA = "0x1BE3E3C")]
		public void RemoteGunConfig()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1BE3E5C", Offset = "0x1BE3E5C", VA = "0x1BE3E5C")]
		[IteratorStateMachine(typeof(<RemoteGunConfigCoroutine>d__83))]
		public IEnumerator RemoteGunConfigCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1BE3EF8", Offset = "0x1BE3EF8", VA = "0x1BE3EF8")]
		public void DestroyRemotePlayerGuns(RemotePlayer remotePlayer)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1BDCB90", Offset = "0x1BDCB90", VA = "0x1BDCB90")]
		public void SendRemoteShoot(Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos, InputController.Hand hand)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1BE4018", Offset = "0x1BE4018", VA = "0x1BE4018")]
		public void RemoteShoot(RemotePlayer remotePlayer, Vector3 startPointPos, Quaternion startPointRot, Vector3 shotPos, InputController.Hand hand)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1BE2B44", Offset = "0x1BE2B44", VA = "0x1BE2B44")]
		public void SendRemoteSlowMotion()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1BE41A4", Offset = "0x1BE41A4", VA = "0x1BE41A4")]
		public void ReadRemoteSlowMotion(bool isSlowMotion)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x1BE4270", Offset = "0x1BE4270", VA = "0x1BE4270")]
		[IteratorStateMachine(typeof(<SendRemoteFinalTime>d__89))]
		public IEnumerator SendRemoteFinalTime(float totalRideTime, float totalGameTime)
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1BE4320", Offset = "0x1BE4320", VA = "0x1BE4320")]
		public void ReadRemoteFinalTime(RemotePlayer remotePlayer, float totalRideTime, float totalGameTime)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x1BE4740", Offset = "0x1BE4740", VA = "0x1BE4740")]
		public void ReadRemoteFinalTimeReceived()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1BE474C", Offset = "0x1BE474C", VA = "0x1BE474C")]
		private void Update()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x1BE4A3C", Offset = "0x1BE4A3C", VA = "0x1BE4A3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1BDCCE4", Offset = "0x1BDCCE4", VA = "0x1BDCCE4")]
		public bool ProcessShot(RaycastHit hit, Transform gunFirePivot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x1BE4E6C", Offset = "0x1BE4E6C", VA = "0x1BE4E6C")]
		public void RemoteUpdatePontuation(float score, int maxHitsInARow, int targetsHitted, int rewardsHits, int shotsMissed, int penaltiesHits)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x1BE4FA0", Offset = "0x1BE4FA0", VA = "0x1BE4FA0")]
		public void RemoteSendUpdatePontuation()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x1BE50AC", Offset = "0x1BE50AC", VA = "0x1BE50AC")]
		public bool VerifyIfChangePontuation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x1BDF270", Offset = "0x1BDF270", VA = "0x1BDF270")]
		public float ShotHitted(float distance)
		{
			return default(float);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x1BDD1E4", Offset = "0x1BDD1E4", VA = "0x1BDD1E4")]
		public void ShotMissed()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x1BDF464", Offset = "0x1BDF464", VA = "0x1BDF464")]
		public void RewardHitted(Vector3 closestPoint, float score)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x1BE4D70", Offset = "0x1BE4D70", VA = "0x1BE4D70")]
		public void PenaltyHitted(Vector3 closestPoint)
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x1BE4418", Offset = "0x1BE4418", VA = "0x1BE4418")]
		public void FinishLine()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1BE5170", Offset = "0x1BE5170", VA = "0x1BE5170")]
		public TargetShooterController()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class TargetType : MonoBehaviour
	{
		[Token(Token = "0x2000535")]
		public enum Type
		{
			[Token(Token = "0x40023C9")]
			Reward,
			[Token(Token = "0x40023CA")]
			Penalty
		}

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type Category;

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x1BE6878", Offset = "0x1BE6878", VA = "0x1BE6878")]
		public void Start()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x1BE6B0C", Offset = "0x1BE6B0C", VA = "0x1BE6B0C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x1BE6B18", Offset = "0x1BE6B18", VA = "0x1BE6B18")]
		public TargetType()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class TargetZone : MonoBehaviour
	{
		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FixedTargets;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int TargetZoneIndex;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Transform> spawnPoints;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool alreadyShowed;

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x1BE6B20", Offset = "0x1BE6B20", VA = "0x1BE6B20")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1BE3700", Offset = "0x1BE3700", VA = "0x1BE3700")]
		public int TotalSpawnPoints()
		{
			return default(int);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x1BE58EC", Offset = "0x1BE58EC", VA = "0x1BE58EC")]
		public void Show()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x1BE6C28", Offset = "0x1BE6C28", VA = "0x1BE6C28")]
		protected void ShowTargets()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1BE3808", Offset = "0x1BE3808", VA = "0x1BE3808")]
		public void CreateTarget(int chosenIndex, int chosenTarget = -1)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1BE6D5C", Offset = "0x1BE6D5C", VA = "0x1BE6D5C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x1BE6E20", Offset = "0x1BE6E20", VA = "0x1BE6E20")]
		public TargetZone()
		{
		}
	}
}
namespace B4TGames.RollerCoasters.Timeline
{
	[Serializable]
	[Token(Token = "0x2000537")]
	public class SkyboxBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ShaderPropertyID;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ShaderPropertyValue;

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1BE6EB4", Offset = "0x1BE6EB4", VA = "0x1BE6EB4")]
		public SkyboxBehaviour()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class SkyboxClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ShaderPropertyID;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ShaderPropertyValue;

		[Token(Token = "0x1700044A")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0x1BE6F14", Offset = "0x1BE6F14", VA = "0x1BE6F14", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1BE6F1C", Offset = "0x1BE6F1C", VA = "0x1BE6F1C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1BE701C", Offset = "0x1BE701C", VA = "0x1BE701C")]
		public SkyboxClip()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class SkyboxMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6002252")]
		[Address(RVA = "0x1BE707C", Offset = "0x1BE707C", VA = "0x1BE707C", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x1BE72EC", Offset = "0x1BE72EC", VA = "0x1BE72EC")]
		public SkyboxMixerBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053A")]
	[TrackColor(0.772f, 1f, 0f)]
	[TrackClipType(typeof(SkyboxClip))]
	public class SkyboxTrack : TrackAsset
	{
		[Token(Token = "0x6002254")]
		[Address(RVA = "0x1BE72F4", Offset = "0x1BE72F4", VA = "0x1BE72F4", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x1BE7394", Offset = "0x1BE7394", VA = "0x1BE7394")]
		public SkyboxTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053B")]
	public class TrackCartFollowerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int TotalClips;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform playerCart;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform lastParent;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastSibling;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SmoothPosition;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float SmoothRotation;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool CopyPlayersLocation;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool KeepPlayersTrack;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 velocity;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 lastPosition;

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x1BE73EC", Offset = "0x1BE73EC", VA = "0x1BE73EC", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x1BE74AC", Offset = "0x1BE74AC", VA = "0x1BE74AC", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x1BE75F8", Offset = "0x1BE75F8", VA = "0x1BE75F8", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x1BE77C0", Offset = "0x1BE77C0", VA = "0x1BE77C0", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1BE7B38", Offset = "0x1BE7B38", VA = "0x1BE7B38")]
		public TrackCartFollowerBehaviour()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class TrackCartFollowerClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("How fast the TrackCart will be in the exactly same position as the Object it's following.")]
		[Range(0f, 1f)]
		[Header("Follow Settings")]
		public float SmoothPosition;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("How fast the TrackCart will be in the exactly same rotation as the Object it's following.")]
		[Range(0f, 1f)]
		public float SmoothRotation;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("If enabled, the Object to follow will be placed exact where the Player is located at the first frame of the animation.")]
		[Header("Elevator Mode Settings")]
		public bool CopyPlayersLocation;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("If enabled, the Player's Track will not be released.")]
		public bool KeepPlayersTrack;

		[Token(Token = "0x1700044B")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600225B")]
			[Address(RVA = "0x1BE7B40", Offset = "0x1BE7B40", VA = "0x1BE7B40", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x1BE7B48", Offset = "0x1BE7B48", VA = "0x1BE7B48", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x1BE7C44", Offset = "0x1BE7C44", VA = "0x1BE7C44")]
		public TrackCartFollowerClip()
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class TrackCartFollowerMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x600225E")]
		[Address(RVA = "0x1BE7C58", Offset = "0x1BE7C58", VA = "0x1BE7C58")]
		public TrackCartFollowerMixerBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	[TrackColor(0.772f, 0.22f, 0.37f)]
	[TrackBindingType(typeof(Transform))]
	[TrackClipType(typeof(TrackCartFollowerClip))]
	public class TrackCartFollowerTrack : TrackAsset
	{
		[Token(Token = "0x600225F")]
		[Address(RVA = "0x1BE7C60", Offset = "0x1BE7C60", VA = "0x1BE7C60")]
		public TrackCartFollowerTrack()
		{
		}
	}
}
namespace B4TGames.RollerCoasters.GlobalColor
{
	[Serializable]
	[Token(Token = "0x200053F")]
	public class GlobalColorBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int TotalClips;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color GlobalColor;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string USE_GLOBAL_COLOR;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int GLOBAL_COLOR;

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x1BE7CB8", Offset = "0x1BE7CB8", VA = "0x1BE7CB8", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1BE7D00", Offset = "0x1BE7D00", VA = "0x1BE7D00", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x1BE7D70", Offset = "0x1BE7D70", VA = "0x1BE7D70", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x1BE7DE4", Offset = "0x1BE7DE4", VA = "0x1BE7DE4")]
		public GlobalColorBehaviour()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class GlobalColorClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color GlobalColor;

		[Token(Token = "0x1700044C")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0x1BE7E70", Offset = "0x1BE7E70", VA = "0x1BE7E70", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x1BE7E78", Offset = "0x1BE7E78", VA = "0x1BE7E78", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1BE7F6C", Offset = "0x1BE7F6C", VA = "0x1BE7F6C")]
		public GlobalColorClip()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class GlobalColorMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6002267")]
		[Address(RVA = "0x1BE7F7C", Offset = "0x1BE7F7C", VA = "0x1BE7F7C", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x1BE819C", Offset = "0x1BE819C", VA = "0x1BE819C")]
		public GlobalColorMixerBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000542")]
	[TrackColor(0.972f, 1f, 0.972f)]
	[TrackClipType(typeof(GlobalColorClip))]
	public class GlobalColorTrack : TrackAsset
	{
		[Token(Token = "0x6002269")]
		[Address(RVA = "0x1BE81A4", Offset = "0x1BE81A4", VA = "0x1BE81A4", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1BE8244", Offset = "0x1BE8244", VA = "0x1BE8244")]
		public GlobalColorTrack()
		{
		}
	}
}
namespace B4TGames.RollerCoasters.Haptics
{
	[Serializable]
	[Token(Token = "0x2000543")]
	public class BHapticsBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HapticClip HapticClip;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Intensity;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Duration;

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x1BE829C", Offset = "0x1BE829C", VA = "0x1BE829C", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x1BE82D8", Offset = "0x1BE82D8", VA = "0x1BE82D8")]
		public BHapticsBehaviour()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class BHapticsClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip HapticClip;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 5f)]
		public float Intensity;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 5f)]
		public float Duration;

		[Token(Token = "0x1700044D")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0x1BE82E0", Offset = "0x1BE82E0", VA = "0x1BE82E0", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1BE82E8", Offset = "0x1BE82E8", VA = "0x1BE82E8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1BE83D8", Offset = "0x1BE83D8", VA = "0x1BE83D8")]
		public BHapticsClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000545")]
	[TrackColor(0f, 0.772f, 1f)]
	[TrackClipType(typeof(BHapticsClip))]
	public class BHapticsTrack : TrackAsset
	{
		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1BE83E8", Offset = "0x1BE83E8", VA = "0x1BE83E8")]
		public BHapticsTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000546")]
	public class HapticsBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve HapticsCurve;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticsOutputMode Output;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1BE8440", Offset = "0x1BE8440", VA = "0x1BE8440", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x1BE8454", Offset = "0x1BE8454", VA = "0x1BE8454")]
		public HapticsBehaviour()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class HapticsClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve HapticsCurve;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsOutputMode Output;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Editor Helper")]
		[Tooltip("If this AudioClip is set then the Haptics Curve will be created based on it.")]
		[Space(5f)]
		public AudioClip HapticAudioClip;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float KeysPerSecond;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SmoothWeight;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool Normalize;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool UseAverage;

		[Token(Token = "0x1700044E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6002273")]
			[Address(RVA = "0x1BE845C", Offset = "0x1BE845C", VA = "0x1BE845C", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1BE8464", Offset = "0x1BE8464", VA = "0x1BE8464", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1BE8564", Offset = "0x1BE8564", VA = "0x1BE8564")]
		public void CreateCurveFromAudioClip()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x1BE8598", Offset = "0x1BE8598", VA = "0x1BE8598")]
		public HapticsClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000548")]
	[TrackColor(0.772f, 1f, 0f)]
	[TrackClipType(typeof(HapticsClip))]
	public class HapticsTrack : TrackAsset
	{
		[Token(Token = "0x6002277")]
		[Address(RVA = "0x1BE85B0", Offset = "0x1BE85B0", VA = "0x1BE85B0")]
		public HapticsTrack()
		{
		}
	}
}
namespace B4TGames.VRArcade
{
	[Token(Token = "0x2000549")]
	public class RemoteControl : IController<RemoteControl>
	{
		[Token(Token = "0x200054A")]
		public struct RemoteData
		{
			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameStateEnum CurrentState;

			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public RideType CurrentRideType;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CoasterType CurrentGameMode;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public CartIdType CurrentCart;

			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WeaponType CurrentWeapon;
		}

		[Token(Token = "0x200054B")]
		private enum MessageType : byte
		{
			[Token(Token = "0x400240B")]
			PlayerState = 8,
			[Token(Token = "0x400240C")]
			Alive = 28
		}

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Port;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string IpAddress;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TcpClient server;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool IsRunning;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool ExitSignal;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool TryToConnectAgain;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastTimeSendedAliveMessage;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Queue<RemoteData> DataPool;

		[Token(Token = "0x40023FD")]
		private const byte MESSAGE_TYPE_USER = 1;

		[Token(Token = "0x40023FE")]
		private const byte PLAYER_STATE_MESSAGE_SIZE = 32;

		[Token(Token = "0x40023FF")]
		protected const byte VECTOR3 = 12;

		[Token(Token = "0x4002400")]
		protected const byte QUATERNION = 16;

		[Token(Token = "0x4002401")]
		protected const byte ULONG = 8;

		[Token(Token = "0x4002402")]
		protected const byte INT = 4;

		[Token(Token = "0x4002403")]
		protected const byte FLOAT = 4;

		[Token(Token = "0x4002404")]
		protected const byte BOOL = 1;

		[Token(Token = "0x1700044F")]
		public static bool IsConnected
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0x1BE8608", Offset = "0x1BE8608", VA = "0x1BE8608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x1BE86BC", Offset = "0x1BE86BC", VA = "0x1BE86BC")]
		public void Start()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x1BE8900", Offset = "0x1BE8900", VA = "0x1BE8900")]
		public void Update()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x1BE89D8", Offset = "0x1BE89D8", VA = "0x1BE89D8")]
		public void ChangeState(GameStateEnum state, RideType rideType, CoasterType coasterType, CartIdType cartType, WeaponType weaponType)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x1BE86C0", Offset = "0x1BE86C0", VA = "0x1BE86C0")]
		public void Connect()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x1BE9038", Offset = "0x1BE9038", VA = "0x1BE9038", Slot = "6")]
		public virtual void Run()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x1BE92A4", Offset = "0x1BE92A4", VA = "0x1BE92A4")]
		private void ConnectionLooper()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x1BE9530", Offset = "0x1BE9530", VA = "0x1BE9530")]
		protected int GetRemotePackets(byte[] receivedBuffer, int offset, out byte[] bufferSpare)
		{
			return default(int);
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x1BE9814", Offset = "0x1BE9814", VA = "0x1BE9814")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x1BE8F20", Offset = "0x1BE8F20", VA = "0x1BE8F20")]
		public void Disconnect(bool tryToConnectAgain = true)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x1BE8BD8", Offset = "0x1BE8BD8", VA = "0x1BE8BD8")]
		public void SendAliveMessage()
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x1BE9908", Offset = "0x1BE9908", VA = "0x1BE9908")]
		public void SendPlayerStateMessage(GameStateEnum playerState, RideType currentRideType, CoasterType currentCoasterType, CartIdType CartIdType, WeaponType currentWeaponType)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x1BE981C", Offset = "0x1BE981C", VA = "0x1BE981C")]
		private void SendToServer(byte[] data)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1BE966C", Offset = "0x1BE966C", VA = "0x1BE966C")]
		public void ReadPlayerStateMessage(ref byte[] packet, ref int offset)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x1BE9EE4", Offset = "0x1BE9EE4", VA = "0x1BE9EE4")]
		protected void PackByte(byte b, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x1BE9634", Offset = "0x1BE9634", VA = "0x1BE9634")]
		protected byte ReadByte(byte[] buf, ref int offset)
		{
			return default(byte);
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x1BE9FB0", Offset = "0x1BE9FB0", VA = "0x1BE9FB0")]
		protected void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x1BEA0C4", Offset = "0x1BEA0C4", VA = "0x1BEA0C4")]
		protected float ReadFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x1BEA140", Offset = "0x1BEA140", VA = "0x1BEA140")]
		protected void PackULong(ulong u, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x1BEA1D0", Offset = "0x1BEA1D0", VA = "0x1BEA1D0")]
		protected ulong ReadULong(byte[] buf, ref int offset)
		{
			return default(ulong);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x1BE9F20", Offset = "0x1BE9F20", VA = "0x1BE9F20")]
		protected void PackUInt32(uint u, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x1BEA048", Offset = "0x1BEA048", VA = "0x1BEA048")]
		protected uint ReadUInt32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x1BEA24C", Offset = "0x1BEA24C", VA = "0x1BEA24C")]
		protected void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x1BEA288", Offset = "0x1BEA288", VA = "0x1BEA288")]
		protected bool ReadBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x1BEA2C8", Offset = "0x1BEA2C8", VA = "0x1BEA2C8")]
		public RemoteControl()
		{
		}
	}
}
namespace B4TGames.Multiplayer
{
	[Token(Token = "0x200054C")]
	public class PhotonPlayer : LoadBalancingClient
	{
		[Token(Token = "0x17000450")]
		public TimeKeeper MoveInterval
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0x1BEA350", Offset = "0x1BEA350", VA = "0x1BEA350")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002293")]
			[Address(RVA = "0x1BEA358", Offset = "0x1BEA358", VA = "0x1BEA358")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public TimeKeeper DispatchInterval
		{
			[Token(Token = "0x6002294")]
			[Address(RVA = "0x1BEA368", Offset = "0x1BEA368", VA = "0x1BEA368")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002295")]
			[Address(RVA = "0x1BEA370", Offset = "0x1BEA370", VA = "0x1BEA370")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public TimeKeeper SendInterval
		{
			[Token(Token = "0x6002296")]
			[Address(RVA = "0x1BEA380", Offset = "0x1BEA380", VA = "0x1BEA380")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x1BEA388", Offset = "0x1BEA388", VA = "0x1BEA388")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public TimeKeeper UpdateOthersInterval
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1BEA398", Offset = "0x1BEA398", VA = "0x1BEA398")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x1BEA3A0", Offset = "0x1BEA3A0", VA = "0x1BEA3A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x1BEA3B0", Offset = "0x1BEA3B0", VA = "0x1BEA3B0")]
		public PhotonPlayer(string appId, string appVersion, string playerNickName, string playerUserId, string playerAvatarURL)
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x1BEA674", Offset = "0x1BEA674", VA = "0x1BEA674")]
		public void Loop()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1BEA6D4", Offset = "0x1BEA6D4", VA = "0x1BEA6D4")]
		private void OnStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x1BEA6D8", Offset = "0x1BEA6D8", VA = "0x1BEA6D8", Slot = "17")]
		public override void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x1BEA8C0", Offset = "0x1BEA8C0", VA = "0x1BEA8C0")]
		private void UpdateRemotePlayers()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1BEAF24", Offset = "0x1BEAF24", VA = "0x1BEAF24")]
		public void SendMessage(byte messageCode, ExitGames.Client.Photon.Hashtable message)
		{
		}
	}
}
namespace B4TGames.MenuObjects
{
	[Token(Token = "0x200054D")]
	public class Cart : MonoBehaviour
	{
		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CartIdType Type;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario OriginalScenario;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite Image;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Name;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsEventCart;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool IsPaid;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Identifications")]
		public string SKU_Oculus;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string SKU_Steam;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string SKU_Pico;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string SKU_Playstation;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] OtherSKUsAllowed;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IsBought;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AssetReference CartAssetReference;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Cart Specifications")]
		public float MaxForceX;

		[Token(Token = "0x4002420")]
		private const float MinForceX = 0.5f;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float MaxForceY;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float MaxAccelerationForce;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float MaxDesaccelerationForce;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float MinSecsOfAcceleration;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float MinSecsOfDesacceleration;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float MaxTargetSpeed;

		[Token(Token = "0x17000454")]
		public string SKU
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x1BEB020", Offset = "0x1BEB020", VA = "0x1BEB020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		public bool IsAllowed
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x1BEB028", Offset = "0x1BEB028", VA = "0x1BEB028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000456")]
		public float Derail
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x1BEB0F8", Offset = "0x1BEB0F8", VA = "0x1BEB0F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1BEB10C", Offset = "0x1BEB10C", VA = "0x1BEB10C")]
		public Cart()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class CartController : IController<CartController>
	{
		[Token(Token = "0x200054F")]
		[CompilerGenerated]
		private sealed class <InstantiateCurrentCart>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400242F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CartController <>4__this;

			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x1700045C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B5")]
				[Address(RVA = "0x1BEBC28", Offset = "0x1BEBC28", VA = "0x1BEBC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B7")]
				[Address(RVA = "0x1BEBC70", Offset = "0x1BEBC70", VA = "0x1BEBC70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x1BEB738", Offset = "0x1BEB738", VA = "0x1BEB738")]
			[DebuggerHidden]
			public <InstantiateCurrentCart>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x1BEB8D4", Offset = "0x1BEB8D4", VA = "0x1BEB8D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x1BEB8D8", Offset = "0x1BEB8D8", VA = "0x1BEB8D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x1BEBC30", Offset = "0x1BEBC30", VA = "0x1BEBC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cart EmptyCart;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cart[] Carts;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Cart[] EventCarts;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Cart currentCart;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public GameObject CartInstance;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Cart defaultCart;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Cart shooterModeCart;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float maxSpeed;

		[Token(Token = "0x17000457")]
		public Cart CurrentCart
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x1BEB134", Offset = "0x1BEB134", VA = "0x1BEB134")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x1BEB13C", Offset = "0x1BEB13C", VA = "0x1BEB13C")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public Cart DefaultCart
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x1BEB144", Offset = "0x1BEB144", VA = "0x1BEB144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		public Cart ShooterModeCart
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x1BEB2C4", Offset = "0x1BEB2C4", VA = "0x1BEB2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		public float MaxSpeed
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x1BEB358", Offset = "0x1BEB358", VA = "0x1BEB358")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045B")]
		public bool IsCurrentCartScenarioOriginal
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x1BEB3C4", Offset = "0x1BEB3C4", VA = "0x1BEB3C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x1BEB500", Offset = "0x1BEB500", VA = "0x1BEB500")]
		public void SetDefaultShooterCart()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x1BEB520", Offset = "0x1BEB520", VA = "0x1BEB520")]
		public void SetCartDefaultByScenario(Scenario scenario)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1BEB1D8", Offset = "0x1BEB1D8", VA = "0x1BEB1D8")]
		public Cart GetCartByScenario(RideType scenarioRideType)
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1BE8EC4", Offset = "0x1BE8EC4", VA = "0x1BE8EC4")]
		public Cart GetCartByCartType(CartIdType cartType)
		{
			return null;
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1BEB5CC", Offset = "0x1BEB5CC", VA = "0x1BEB5CC")]
		public Cart GetCartByCartID(string id)
		{
			return null;
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1BEB6C4", Offset = "0x1BEB6C4", VA = "0x1BEB6C4")]
		[IteratorStateMachine(typeof(<InstantiateCurrentCart>d__24))]
		public IEnumerator InstantiateCurrentCart()
		{
			return null;
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1BEB760", Offset = "0x1BEB760", VA = "0x1BEB760")]
		public List<Cart> GetAllPaidCars()
		{
			return null;
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1BEB88C", Offset = "0x1BEB88C", VA = "0x1BEB88C")]
		public CartController()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class CompanionCharacter : MonoBehaviour
	{
		[Token(Token = "0x2000551")]
		public enum CompanionCharacterType
		{
			[Token(Token = "0x400243A")]
			SOLDIER = 1,
			[Token(Token = "0x400243B")]
			WARRIOR,
			[Token(Token = "0x400243C")]
			CRAZY_ZOMBIE,
			[Token(Token = "0x400243D")]
			WARRIOR_ZOMBIE,
			[Token(Token = "0x400243E")]
			PRISIONER_ZOMBIE,
			[Token(Token = "0x400243F")]
			GOBLIN,
			[Token(Token = "0x4002440")]
			CYBORG,
			[Token(Token = "0x4002441")]
			MUMMY,
			[Token(Token = "0x4002442")]
			SKELETON,
			[Token(Token = "0x4002443")]
			NONE,
			[Token(Token = "0x4002444")]
			SANTA_CLAUS,
			[Token(Token = "0x4002445")]
			HOPPER
		}

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompanionCharacterType Type;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ID;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsFree;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AssetReference CompanionAssetReference;

		[Token(Token = "0x1700045E")]
		public string TranslatedName
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x1BEBC78", Offset = "0x1BEBC78", VA = "0x1BEBC78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x1BEBD64", Offset = "0x1BEBD64", VA = "0x1BEBD64")]
		public CompanionCharacter()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class CompanionCharacterController : IController<CompanionCharacterController>
	{
		[Token(Token = "0x2000553")]
		[CompilerGenerated]
		private sealed class <InstantiateCurrentCompanionCharacter>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionCharacterController <>4__this;

			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform parent;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x17000462")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C3")]
				[Address(RVA = "0x1BEC334", Offset = "0x1BEC334", VA = "0x1BEC334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000463")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C5")]
				[Address(RVA = "0x1BEC37C", Offset = "0x1BEC37C", VA = "0x1BEC37C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x1BEBFEC", Offset = "0x1BEBFEC", VA = "0x1BEBFEC")]
			[DebuggerHidden]
			public <InstantiateCurrentCompanionCharacter>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x1BEC05C", Offset = "0x1BEC05C", VA = "0x1BEC05C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x1BEC060", Offset = "0x1BEC060", VA = "0x1BEC060", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x1BEC33C", Offset = "0x1BEC33C", VA = "0x1BEC33C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompanionCharacter[] CompanionCharacters;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CompanionCharacter currentCompanionCharacter;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject CompanionCharacterInstance;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CompanionCharacterConfiguration currentCompanionCharacterConfiguration;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Seat CurrentCompanionCharacterSeat;

		[Token(Token = "0x1700045F")]
		public CompanionCharacter CurrentCompanionCharacter
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x1BEBD7C", Offset = "0x1BEBD7C", VA = "0x1BEBD7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x1BEBD84", Offset = "0x1BEBD84", VA = "0x1BEBD84")]
			set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public CompanionCharacterConfiguration CurrentCompanionCharacterConfiguration
		{
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x1BEBD8C", Offset = "0x1BEBD8C", VA = "0x1BEBD8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		public bool ShouldShowCompanionCharacter
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x1BEBE64", Offset = "0x1BEBE64", VA = "0x1BEBE64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1BEBF5C", Offset = "0x1BEBF5C", VA = "0x1BEBF5C")]
		[IteratorStateMachine(typeof(<InstantiateCurrentCompanionCharacter>d__12))]
		public IEnumerator InstantiateCurrentCompanionCharacter(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1BEC014", Offset = "0x1BEC014", VA = "0x1BEC014")]
		public CompanionCharacterController()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class StoreController : IController<StoreController>
	{
		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StoreItem[] StoreItems;

		[Token(Token = "0x17000464")]
		public bool HasAnyItemUnlocked
		{
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x1BEC384", Offset = "0x1BEC384", VA = "0x1BEC384")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000465")]
		public bool ShouldShowOffers
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x1BEC424", Offset = "0x1BEC424", VA = "0x1BEC424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1BEC42C", Offset = "0x1BEC42C", VA = "0x1BEC42C")]
		public void VerifyAllowedStoreItems()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1BEC6CC", Offset = "0x1BEC6CC", VA = "0x1BEC6CC")]
		public StoreItem GetStoreItemByID(StoreItemType storeType)
		{
			return null;
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1BEC728", Offset = "0x1BEC728", VA = "0x1BEC728")]
		public StoreItem FindBestDealForScenario(Scenario scenario)
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1BEC968", Offset = "0x1BEC968", VA = "0x1BEC968")]
		public StoreController()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public enum StoreItemType
	{
		[Token(Token = "0x4002452")]
		REALISTIC_BUNDLE,
		[Token(Token = "0x4002453")]
		FANTASY_BUNDLE,
		[Token(Token = "0x4002454")]
		HYPER_CART,
		[Token(Token = "0x4002455")]
		STONEHENGE,
		[Token(Token = "0x4002456")]
		PREMIUM_BUNDLE,
		[Token(Token = "0x4002457")]
		CANDYLAND
	}
	[Token(Token = "0x2000556")]
	public enum StoreItemCategory
	{
		[Token(Token = "0x4002459")]
		BUNDLE,
		[Token(Token = "0x400245A")]
		SCENARIO,
		[Token(Token = "0x400245B")]
		CART
	}
	[Token(Token = "0x2000557")]
	public class StoreItem : MonoBehaviour
	{
		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StoreItemType ID;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StoreItemCategory Category;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Bundle Indentification")]
		public string SKU_Oculus;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SKU_Steam;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SKU_Pico;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SKU_Playstation;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] OtherSKUsAllowed;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Scenario related - Only for direct purchase of scenarios")]
		public RideType RelatedScenarioRideType;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Scenario relatedScenario;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Cart related - Only for direct purchase of carts")]
		public CartIdType RelatedCartType;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Cart relatedCart;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Purchasable Information")]
		public string Name;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Description;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public string Price;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public float FormattedPrice;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public bool IsAllowed;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		[Header("File changes")]
		public bool ShouldChangeScenarioFilename;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string BundleSuffix;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Purchasable Items that are not purchasable anymore")]
		public bool Inactive;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Scenario> scenarioUnlockedByThisPurchasable;

		[Token(Token = "0x17000466")]
		public string SKU
		{
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x1BEC9B0", Offset = "0x1BEC9B0", VA = "0x1BEC9B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		public Scenario RelatedScenario
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x1BECA44", Offset = "0x1BECA44", VA = "0x1BECA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		private Cart RelatedCart
		{
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x1BECB08", Offset = "0x1BECB08", VA = "0x1BECB08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		public bool ExistsAtThisPlatform
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x1BEC4EC", Offset = "0x1BEC4EC", VA = "0x1BEC4EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046A")]
		public List<Scenario> ScenarioUnlockedByThisPurchasable
		{
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x1BECBCC", Offset = "0x1BECBCC", VA = "0x1BECBCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		public int SalesDiscount
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x1BEC960", Offset = "0x1BEC960", VA = "0x1BEC960")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1BECF8C", Offset = "0x1BECF8C", VA = "0x1BECF8C")]
		private int CalculateSalesDiscount()
		{
			return default(int);
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x1BEC544", Offset = "0x1BEC544", VA = "0x1BEC544")]
		public void VerifyAllowed()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1BED0E0", Offset = "0x1BED0E0", VA = "0x1BED0E0")]
		private void UpdateRelatedItemsAllowed()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1BED0FC", Offset = "0x1BED0FC", VA = "0x1BED0FC")]
		private void UpdateScenariosAllowed()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x1BED22C", Offset = "0x1BED22C", VA = "0x1BED22C")]
		private void UpdateCartsAllowed()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x1BEC814", Offset = "0x1BEC814", VA = "0x1BEC814")]
		public bool IsScenarioAtBundle(Scenario scenario)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1BED2C0", Offset = "0x1BED2C0", VA = "0x1BED2C0")]
		public StoreItem()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class Scenario : MonoBehaviour
	{
		[Token(Token = "0x200055A")]
		public enum Intensity
		{
			[Token(Token = "0x400249F")]
			COMFORTABLE = 1,
			[Token(Token = "0x40024A0")]
			MEDIUM,
			[Token(Token = "0x40024A1")]
			INTENSE
		}

		[Token(Token = "0x200055B")]
		[CompilerGenerated]
		private sealed class <LoadBundle>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Scenario <>4__this;

			[Token(Token = "0x40024A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x40024A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AssetBundleCreateRequest <myLoadedAssetBundle>5__3;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022FA")]
				[Address(RVA = "0x1BEE1E8", Offset = "0x1BEE1E8", VA = "0x1BEE1E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022FC")]
				[Address(RVA = "0x1BEE230", Offset = "0x1BEE230", VA = "0x1BEE230", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x1BEDB20", Offset = "0x1BEDB20", VA = "0x1BEDB20")]
			[DebuggerHidden]
			public <LoadBundle>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0x1BEDF84", Offset = "0x1BEDF84", VA = "0x1BEDF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x1BEDF88", Offset = "0x1BEDF88", VA = "0x1BEDF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x1BEE1F0", Offset = "0x1BEE1F0", VA = "0x1BEE1F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055C")]
		[CompilerGenerated]
		private sealed class <LoadScene>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Scenario <>4__this;

			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool activateScene;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <lastProgres>5__2;

			[Token(Token = "0x17000477")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002300")]
				[Address(RVA = "0x1BEE448", Offset = "0x1BEE448", VA = "0x1BEE448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000478")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002302")]
				[Address(RVA = "0x1BEE490", Offset = "0x1BEE490", VA = "0x1BEE490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x1BEDBD0", Offset = "0x1BEDBD0", VA = "0x1BEDBD0")]
			[DebuggerHidden]
			public <LoadScene>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x1BEE238", Offset = "0x1BEE238", VA = "0x1BEE238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x1BEE23C", Offset = "0x1BEE23C", VA = "0x1BEE23C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002301")]
			[Address(RVA = "0x1BEE450", Offset = "0x1BEE450", VA = "0x1BEE450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055D")]
		[CompilerGenerated]
		private sealed class <ActivateScene>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Scenario <>4__this;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002306")]
				[Address(RVA = "0x1BEE598", Offset = "0x1BEE598", VA = "0x1BEE598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002308")]
				[Address(RVA = "0x1BEE5E0", Offset = "0x1BEE5E0", VA = "0x1BEE5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x1BEDC6C", Offset = "0x1BEDC6C", VA = "0x1BEDC6C")]
			[DebuggerHidden]
			public <ActivateScene>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002304")]
			[Address(RVA = "0x1BEE498", Offset = "0x1BEE498", VA = "0x1BEE498", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x1BEE49C", Offset = "0x1BEE49C", VA = "0x1BEE49C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0x1BEE5A0", Offset = "0x1BEE5A0", VA = "0x1BEE5A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200055E")]
		[CompilerGenerated]
		private sealed class <UnloadBundle>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Scenario <>4__this;

			[Token(Token = "0x1700047B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600230C")]
				[Address(RVA = "0x1BEE6C4", Offset = "0x1BEE6C4", VA = "0x1BEE6C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600230E")]
				[Address(RVA = "0x1BEE70C", Offset = "0x1BEE70C", VA = "0x1BEE70C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x1BEDD08", Offset = "0x1BEDD08", VA = "0x1BEDD08")]
			[DebuggerHidden]
			public <UnloadBundle>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x1BEE5E8", Offset = "0x1BEE5E8", VA = "0x1BEE5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x1BEE5EC", Offset = "0x1BEE5EC", VA = "0x1BEE5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x1BEE6CC", Offset = "0x1BEE6CC", VA = "0x1BEE6CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RideType RideType;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DurableBundleType DurableBundleType;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetReference ScreenshotAssetReference;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ScreenshotRotation;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Identifications")]
		public string SKU_Oculus;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string SKU_Steam;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string SKU_Pico;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string SKU_Playstation;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] OtherSKUsAllowed;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Name;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Subtitle;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string SmallDescription;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Intensity ScenarioIntensity;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float ScenarioTime;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float TopSpeed;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Sprite Icon;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Header("Permissions")]
		public bool IsAllowed;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[HideInInspector]
		public bool IsRemoteAllowed;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool IsFree;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool IsEmbedded;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("Mostly used for Commercial Licenses on VR Arcades")]
		public bool IsAvailable;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string Price;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float FormattedPrice;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Download")]
		public string FileName;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public string OriginalFileName;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string FolderName;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("New Scenarios")]
		public bool Spotlight;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public ulong OculusAssetFileID;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public string OculusAssetFilePath;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public string OculusAssetStatus;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public UnityWebRequest WwwFromAws;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public string PS4BundlePath;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Header("Graphics")]
		public float RenderScale;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public QualitySettingsScriptableObject QualitySettings;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Header("Stars Parameter")]
		public float ShooterParameter;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Header("Safety")]
		public CRCScriptableObject CRCSetting;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Header("Game Modes")]
		public GameAddonsSettings GameAddonsSettings;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Header("Shader WarmUp")]
		public ShaderWarmupSettingsScriptableObject ShaderWarmup;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public AssetBundle CurrentAssetBundle;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SCENE_NAME;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AsyncOperation SceneAsync;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool IsDownloading;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public float DownloadProgress;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int buildIndex;

		[Token(Token = "0x1700046C")]
		public bool UsingAWS
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x1BED2F4", Offset = "0x1BED2F4", VA = "0x1BED2F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046D")]
		public bool IsInstalled
		{
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x1BED35C", Offset = "0x1BED35C", VA = "0x1BED35C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046E")]
		public string FilePath
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x1BED3F4", Offset = "0x1BED3F4", VA = "0x1BED3F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		public bool IsRollerCoaster
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x1BED740", Offset = "0x1BED740", VA = "0x1BED740")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000470")]
		public string SKU
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x1BED754", Offset = "0x1BED754", VA = "0x1BED754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		public Hash128 AssetBundleHash
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x1BED320", Offset = "0x1BED320", VA = "0x1BED320")]
			get
			{
				return default(Hash128);
			}
		}

		[Token(Token = "0x17000472")]
		public string EmbeddedFilePath
		{
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x1BED4C4", Offset = "0x1BED4C4", VA = "0x1BED4C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		public string SceneName
		{
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x1BED75C", Offset = "0x1BED75C", VA = "0x1BED75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		public bool IsAtBuildSettings
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x1BED860", Offset = "0x1BED860", VA = "0x1BED860")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000048")]
		[HideInInspector]
		public event Action<Scenario> OnDownloadFinished
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x1BED5D8", Offset = "0x1BED5D8", VA = "0x1BED5D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x1BED68C", Offset = "0x1BED68C", VA = "0x1BED68C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x1BED7B4", Offset = "0x1BED7B4", VA = "0x1BED7B4")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1BED7D4", Offset = "0x1BED7D4", VA = "0x1BED7D4")]
		public bool IsAvailableForUse()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1BED870", Offset = "0x1BED870", VA = "0x1BED870")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x1BED87C", Offset = "0x1BED87C", VA = "0x1BED87C")]
		protected void Start()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1BED968", Offset = "0x1BED968", VA = "0x1BED968")]
		public string GetLeaderboardID(CoasterType coasterType, bool isOriginal, bool isMultiplayer)
		{
			return null;
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1BEDA84", Offset = "0x1BEDA84", VA = "0x1BEDA84")]
		public int GetLeaderboardNumberID(CoasterType coasterType, bool isOriginal, bool isMultiplayer)
		{
			return default(int);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x1BEDA8C", Offset = "0x1BEDA8C", VA = "0x1BEDA8C")]
		public void FinishedDownloading()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1BEDAAC", Offset = "0x1BEDAAC", VA = "0x1BEDAAC")]
		[IteratorStateMachine(typeof(<LoadBundle>d__73))]
		public IEnumerator LoadBundle()
		{
			return null;
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1BEDB48", Offset = "0x1BEDB48", VA = "0x1BEDB48")]
		[IteratorStateMachine(typeof(<LoadScene>d__74))]
		public IEnumerator LoadScene(bool activateScene = true)
		{
			return null;
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x1BEDBF8", Offset = "0x1BEDBF8", VA = "0x1BEDBF8")]
		[IteratorStateMachine(typeof(<ActivateScene>d__75))]
		public IEnumerator ActivateScene()
		{
			return null;
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x1BEDC94", Offset = "0x1BEDC94", VA = "0x1BEDC94")]
		[IteratorStateMachine(typeof(<UnloadBundle>d__76))]
		public IEnumerator UnloadBundle()
		{
			return null;
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x1BEDD30", Offset = "0x1BEDD30", VA = "0x1BEDD30")]
		private void CorruptedDLCFile()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1BEDDE8", Offset = "0x1BEDDE8", VA = "0x1BEDDE8")]
		public float GetShooterStars(float score)
		{
			return default(float);
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1BEDE34", Offset = "0x1BEDE34", VA = "0x1BEDE34")]
		public float GetRaceStars(float time)
		{
			return default(float);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1BEDE7C", Offset = "0x1BEDE7C", VA = "0x1BEDE7C")]
		public void Warmup()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x1BEDF00", Offset = "0x1BEDF00", VA = "0x1BEDF00")]
		public Scenario()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class ScenarioController : IController<ScenarioController>
	{
		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scenario[] Scenarios;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scenario TutorialScenario;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario LobbyScenario;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] BundlesIDs;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Scenario currentScenario;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Scenario scenarioToLoad;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Scenario> scenariosRealistic;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Scenario> scenariosFantansy;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool LoadingFromMultiplayer;

		[Token(Token = "0x1700047D")]
		public Scenario CurrentScenario
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0x1BEE714", Offset = "0x1BEE714", VA = "0x1BEE714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x1BEE71C", Offset = "0x1BEE71C", VA = "0x1BEE71C")]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public Scenario ScenarioToLoad
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x1BEE724", Offset = "0x1BEE724", VA = "0x1BEE724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x1BE8CD8", Offset = "0x1BE8CD8", VA = "0x1BE8CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public List<Scenario> ScenariosRealistic
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0x1BEEB68", Offset = "0x1BEEB68", VA = "0x1BEEB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		public List<Scenario> ScenariosFantansy
		{
			[Token(Token = "0x6002314")]
			[Address(RVA = "0x1BEECD8", Offset = "0x1BEECD8", VA = "0x1BEECD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		public static bool IsAtLobby
		{
			[Token(Token = "0x6002317")]
			[Address(RVA = "0x1BEBB40", Offset = "0x1BEBB40", VA = "0x1BEBB40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000482")]
		public static bool IsAtTutorial
		{
			[Token(Token = "0x6002318")]
			[Address(RVA = "0x1BEEF18", Offset = "0x1BEEF18", VA = "0x1BEEF18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1BEC674", Offset = "0x1BEC674", VA = "0x1BEC674")]
		public void VerifyPurchaseInformation()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1BEEE48", Offset = "0x1BEEE48", VA = "0x1BEEE48")]
		public void VerifyScenarioPurchaseInformation(Scenario scenario)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1BE8C48", Offset = "0x1BE8C48", VA = "0x1BE8C48")]
		public Scenario GetScenarioByRideType(RideType rideType, bool considerTutorial = false)
		{
			return null;
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1BEF000", Offset = "0x1BEF000", VA = "0x1BEF000")]
		public string GetScenarioNameByRideType(RideType rideType, bool considerTutorial = false)
		{
			return null;
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1BEF0BC", Offset = "0x1BEF0BC", VA = "0x1BEF0BC")]
		public byte[] GetAvailableRollerCoastersForMultiplayer()
		{
			return null;
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1BEF190", Offset = "0x1BEF190", VA = "0x1BEF190")]
		public void LoadLobby(bool isFromMultiplayer = false)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1BEF2B8", Offset = "0x1BEF2B8", VA = "0x1BEF2B8")]
		public void MakeAllScenariosUnavailable()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1BECD40", Offset = "0x1BECD40", VA = "0x1BECD40")]
		public List<Scenario> GetScenariosUnlockedBySKU(string sku)
		{
			return null;
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x1BEF308", Offset = "0x1BEF308", VA = "0x1BEF308")]
		public ScenarioController()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class Weapon : MonoBehaviour
	{
		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponType Type;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ID;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scenario OriginalScenario;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Name;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetReference WeaponAssetReference;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Weapon Specifications")]
		public float Range;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CoolDown;

		[Token(Token = "0x40024C2")]
		private const float MaxRange = 300f;

		[Token(Token = "0x40024C3")]
		private const float MinCoolDown = 0.22f;

		[Token(Token = "0x40024C4")]
		private const float MaxCoolDown = 0.55f;

		[Token(Token = "0x17000483")]
		public float CoolDownFormatted
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x1C60A9C", Offset = "0x1C60A9C", VA = "0x1C60A9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000484")]
		public float RangeFormatted
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x1C60AD0", Offset = "0x1C60AD0", VA = "0x1C60AD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000485")]
		public bool IsAllowed
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x1C60AF8", Offset = "0x1C60AF8", VA = "0x1C60AF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1C60B80", Offset = "0x1C60B80", VA = "0x1C60B80")]
		public Weapon()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class WeaponController : IController<WeaponController>
	{
		[Token(Token = "0x2000562")]
		[CompilerGenerated]
		private sealed class <InstantiateCurrentWeapon>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponController <>4__this;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform parent;

			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x17000489")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002335")]
				[Address(RVA = "0x1C61A04", Offset = "0x1C61A04", VA = "0x1C61A04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002337")]
				[Address(RVA = "0x1C61A4C", Offset = "0x1C61A4C", VA = "0x1C61A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002332")]
			[Address(RVA = "0x1C61498", Offset = "0x1C61498", VA = "0x1C61498")]
			[DebuggerHidden]
			public <InstantiateCurrentWeapon>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002333")]
			[Address(RVA = "0x1C616DC", Offset = "0x1C616DC", VA = "0x1C616DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x1C616E0", Offset = "0x1C616E0", VA = "0x1C616E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002336")]
			[Address(RVA = "0x1C61A0C", Offset = "0x1C61A0C", VA = "0x1C61A0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000563")]
		[CompilerGenerated]
		private sealed class <InstantiateFeedback>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponController <>4__this;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600233B")]
				[Address(RVA = "0x1C61BDC", Offset = "0x1C61BDC", VA = "0x1C61BDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233D")]
				[Address(RVA = "0x1C61C24", Offset = "0x1C61C24", VA = "0x1C61C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x1C61534", Offset = "0x1C61534", VA = "0x1C61534")]
			[DebuggerHidden]
			public <InstantiateFeedback>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002339")]
			[Address(RVA = "0x1C61A54", Offset = "0x1C61A54", VA = "0x1C61A54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x1C61A58", Offset = "0x1C61A58", VA = "0x1C61A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x1C61BE4", Offset = "0x1C61BE4", VA = "0x1C61BE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000564")]
		[CompilerGenerated]
		private sealed class <InstantiateHitEffects>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponController <>4__this;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameObject> <async>5__2;

			[Token(Token = "0x1700048D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002341")]
				[Address(RVA = "0x1C61DB4", Offset = "0x1C61DB4", VA = "0x1C61DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002343")]
				[Address(RVA = "0x1C61DFC", Offset = "0x1C61DFC", VA = "0x1C61DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x1C615D0", Offset = "0x1C615D0", VA = "0x1C615D0")]
			[DebuggerHidden]
			public <InstantiateHitEffects>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0x1C61C2C", Offset = "0x1C61C2C", VA = "0x1C61C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x1C61C30", Offset = "0x1C61C30", VA = "0x1C61C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x1C61DBC", Offset = "0x1C61DBC", VA = "0x1C61DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000565")]
		[CompilerGenerated]
		private sealed class <DestroyInstantiatedGun>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject gun;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002347")]
				[Address(RVA = "0x1C61EE4", Offset = "0x1C61EE4", VA = "0x1C61EE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002349")]
				[Address(RVA = "0x1C61F2C", Offset = "0x1C61F2C", VA = "0x1C61F2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002344")]
			[Address(RVA = "0x1C6166C", Offset = "0x1C6166C", VA = "0x1C6166C")]
			[DebuggerHidden]
			public <DestroyInstantiatedGun>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002345")]
			[Address(RVA = "0x1C61E04", Offset = "0x1C61E04", VA = "0x1C61E04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0x1C61E08", Offset = "0x1C61E08", VA = "0x1C61E08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0x1C61EEC", Offset = "0x1C61EEC", VA = "0x1C61EEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon[] Weapons;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetReference ScoreFeedbacAssetReference;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetReference HitEffectsAssetReference;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Weapon defaultWeapon;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Weapon currentWeapon;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Gun LastGunInstantiated;

		[Token(Token = "0x17000486")]
		public Weapon DefaultWeapon
		{
			[Token(Token = "0x6002324")]
			[Address(RVA = "0x1C60B94", Offset = "0x1C60B94", VA = "0x1C60B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		public Weapon CurrentWeapon
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x1C60D14", Offset = "0x1C60D14", VA = "0x1C60D14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002326")]
			[Address(RVA = "0x1C60D1C", Offset = "0x1C60D1C", VA = "0x1C60D1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000488")]
		public bool IsCurrentWeaponScenarioOriginal
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x1C60D24", Offset = "0x1C60D24", VA = "0x1C60D24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1C60E60", Offset = "0x1C60E60", VA = "0x1C60E60")]
		public void SetWeaponDefaultByScenario(Scenario scenario)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1C60C28", Offset = "0x1C60C28", VA = "0x1C60C28")]
		public Weapon GetWeaponByScenario(RideType scenarioRideType)
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x1C60F00", Offset = "0x1C60F00", VA = "0x1C60F00")]
		public Weapon GetWeaponByScenarioName(string name)
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x1C612B4", Offset = "0x1C612B4", VA = "0x1C612B4")]
		public Weapon GetWeaponByWeaponType(WeaponType weaponType)
		{
			return null;
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1C61310", Offset = "0x1C61310", VA = "0x1C61310")]
		public Weapon GetWeaponByWeaponID(string id)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x1C61408", Offset = "0x1C61408", VA = "0x1C61408")]
		[IteratorStateMachine(typeof(<InstantiateCurrentWeapon>d__18))]
		public IEnumerator InstantiateCurrentWeapon(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1C614C0", Offset = "0x1C614C0", VA = "0x1C614C0")]
		[IteratorStateMachine(typeof(<InstantiateFeedback>d__19))]
		public IEnumerator InstantiateFeedback()
		{
			return null;
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1C6155C", Offset = "0x1C6155C", VA = "0x1C6155C")]
		[IteratorStateMachine(typeof(<InstantiateHitEffects>d__20))]
		public IEnumerator InstantiateHitEffects()
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x1C615F8", Offset = "0x1C615F8", VA = "0x1C615F8")]
		[IteratorStateMachine(typeof(<DestroyInstantiatedGun>d__21))]
		public IEnumerator DestroyInstantiatedGun(GameObject gun)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x1C61694", Offset = "0x1C61694", VA = "0x1C61694")]
		public WeaponController()
		{
		}
	}
}
namespace B4TGames.MenuObjects.Lobby
{
	[Token(Token = "0x2000566")]
	public class InteractableTarget : MonoBehaviour
	{
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider col;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource hitAudio;

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1C61F34", Offset = "0x1C61F34", VA = "0x1C61F34")]
		public void Hit()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x1C61FAC", Offset = "0x1C61FAC", VA = "0x1C61FAC")]
		public InteractableTarget()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public class PickableItem : MonoBehaviour
	{
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Items that the player will interact with, like a snowball")]
		public GameObject[] Interactables;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] clips;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSource;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Avatar Left Custom Pose (also used for Right)")]
		public Transform CustomHandLeftPose;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ThrowableItem currentRightHandRemoteItem;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ThrowableItem currentLeftHandRemoteItem;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ThrowableItem currentRightHandSnowball;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ThrowableItem currentLeftHandSnowball;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool shouldVerifyRightHand;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool shouldVerifyLeftHand;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastHandToTrigger;

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x1C61FB4", Offset = "0x1C61FB4", VA = "0x1C61FB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x1C62318", Offset = "0x1C62318", VA = "0x1C62318")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x1C62434", Offset = "0x1C62434", VA = "0x1C62434")]
		public GameObject GetSnowball()
		{
			return null;
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x1C625B4", Offset = "0x1C625B4", VA = "0x1C625B4")]
		public void OnSnowballSelected()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1C62798", Offset = "0x1C62798", VA = "0x1C62798")]
		public void RemotePickup(Transform parent, InputController.Hand hand)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x1C62930", Offset = "0x1C62930", VA = "0x1C62930")]
		private ThrowableItem InstantiateSnowBall(GameObject snowballPrefab, Transform parent, InputController.Hand hand, bool isRemote)
		{
			return null;
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1C6209C", Offset = "0x1C6209C", VA = "0x1C6209C")]
		public void GrabSnowball(InputController.Hand hand)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x1C62C80", Offset = "0x1C62C80", VA = "0x1C62C80")]
		public void ThrowRemotePickupSnowball(Vector3 velocity, Vector3 angularVelocity, bool isRightHand)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1C62B9C", Offset = "0x1C62B9C", VA = "0x1C62B9C")]
		public void PlayAudioClip()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x1C62D78", Offset = "0x1C62D78", VA = "0x1C62D78")]
		public PickableItem()
		{
		}
	}
	[Token(Token = "0x2000568")]
	public class ThrowableItem : MonoBehaviour
	{
		[Token(Token = "0x2000569")]
		[CompilerGenerated]
		private sealed class <Destroy>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ThrowableItem <>4__this;

			[Token(Token = "0x17000492")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002361")]
				[Address(RVA = "0x1C63580", Offset = "0x1C63580", VA = "0x1C63580", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000493")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002363")]
				[Address(RVA = "0x1C635C8", Offset = "0x1C635C8", VA = "0x1C635C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x1C63468", Offset = "0x1C63468", VA = "0x1C63468")]
			[DebuggerHidden]
			public <Destroy>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x1C634A0", Offset = "0x1C634A0", VA = "0x1C634A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x1C634A4", Offset = "0x1C634A4", VA = "0x1C634A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x1C63588", Offset = "0x1C63588", VA = "0x1C63588", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public InputController.Hand hand;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool isRemote;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float power;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource throwAudio;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource hitAudio;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject mesh;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 velocity;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 angularVelocity;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 oldPosition;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion oldRotation;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool wasThrown;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool alreadyHit;

		[Token(Token = "0x17000491")]
		public bool IsGrabbed
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x1C62788", Offset = "0x1C62788", VA = "0x1C62788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1C62D80", Offset = "0x1C62D80", VA = "0x1C62D80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1C62DD8", Offset = "0x1C62DD8", VA = "0x1C62DD8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1C62FC8", Offset = "0x1C62FC8", VA = "0x1C62FC8")]
		internal void Throw()
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1C62D68", Offset = "0x1C62D68", VA = "0x1C62D68")]
		public void RemoteThrow(Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1C6326C", Offset = "0x1C6326C", VA = "0x1C6326C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1C633F4", Offset = "0x1C633F4", VA = "0x1C633F4")]
		[IteratorStateMachine(typeof(<Destroy>d__20))]
		private IEnumerator Destroy()
		{
			return null;
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x1C63490", Offset = "0x1C63490", VA = "0x1C63490")]
		public ThrowableItem()
		{
		}
	}
}
namespace AndroidRuntimePermissionsNamespace
{
	[Token(Token = "0x200056A")]
	public class PermissionCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object threadLock;

		[Token(Token = "0x17000494")]
		public string Result
		{
			[Token(Token = "0x6002364")]
			[Address(RVA = "0x1C635D0", Offset = "0x1C635D0", VA = "0x1C635D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x1C635D8", Offset = "0x1C635D8", VA = "0x1C635D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1C635E0", Offset = "0x1C635E0", VA = "0x1C635E0")]
		public PermissionCallback(object threadLock)
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1C6367C", Offset = "0x1C6367C", VA = "0x1C6367C")]
		public void OnPermissionResult(string result)
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class PermissionCallbackAsync : AndroidJavaProxy
	{
		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string[] permissions;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AndroidRuntimePermissions.PermissionResultMultiple callback;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly PermissionCallbackHelper callbackHelper;

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x1C63750", Offset = "0x1C63750", VA = "0x1C63750")]
		public PermissionCallbackAsync(string[] permissions, AndroidRuntimePermissions.PermissionResultMultiple callback)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x1C63868", Offset = "0x1C63868", VA = "0x1C63868")]
		public void OnPermissionResult(string result)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1C63954", Offset = "0x1C63954", VA = "0x1C63954")]
		private void ExecuteCallback(string result)
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class PermissionCallbackHelper : MonoBehaviour
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action mainThreadAction;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1C63AAC", Offset = "0x1C63AAC", VA = "0x1C63AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1C63B18", Offset = "0x1C63B18", VA = "0x1C63B18")]
		private void Update()
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1C63B4C", Offset = "0x1C63B4C", VA = "0x1C63B4C")]
		public void CallOnMainThread(Action function)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1C63B54", Offset = "0x1C63B54", VA = "0x1C63B54")]
		public PermissionCallbackHelper()
		{
		}
	}
}
namespace Assets.Scripts.Dumper
{
	[Token(Token = "0x200056E")]
	internal sealed class Dumper : MonoBehaviour
	{
		[Token(Token = "0x200056F")]
		[CompilerGenerated]
		private sealed class <UpdateCorutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dumper <>4__this;

			[Token(Token = "0x17000495")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600237A")]
				[Address(RVA = "0x1C63EB8", Offset = "0x1C63EB8", VA = "0x1C63EB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600237C")]
				[Address(RVA = "0x1C63F00", Offset = "0x1C63F00", VA = "0x1C63F00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002377")]
			[Address(RVA = "0x1C63C78", Offset = "0x1C63C78", VA = "0x1C63C78")]
			[DebuggerHidden]
			public <UpdateCorutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0x1C63D34", Offset = "0x1C63D34", VA = "0x1C63D34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x1C63D38", Offset = "0x1C63D38", VA = "0x1C63D38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x1C63EC0", Offset = "0x1C63EC0", VA = "0x1C63EC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ChangeStartPosition;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve DumpingOverTime;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Fps;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LifeTime;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _originalStartPosition;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _animationStartTime;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isCoCanceled;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isCoStarted;

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1C63B5C", Offset = "0x1C63B5C", VA = "0x1C63B5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1C63B60", Offset = "0x1C63B60", VA = "0x1C63B60")]
		private void StartEffect()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1C63C04", Offset = "0x1C63C04", VA = "0x1C63C04")]
		[IteratorStateMachine(typeof(<UpdateCorutine>d__10))]
		private IEnumerator UpdateCorutine()
		{
			return null;
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1C63CA0", Offset = "0x1C63CA0", VA = "0x1C63CA0")]
		private void StopEffect()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1C63CC4", Offset = "0x1C63CC4", VA = "0x1C63CC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1C63CE8", Offset = "0x1C63CE8", VA = "0x1C63CE8")]
		public Dumper()
		{
		}
	}
}
namespace Assets.Scripts.Utils
{
	[Token(Token = "0x2000570")]
	internal sealed class DemoInputConrtoller : MonoBehaviour
	{
		[Token(Token = "0x400250C")]
		private const string SpaceButton = "space";

		[Token(Token = "0x400250D")]
		private const string LightButton = "f";

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DemoPrefabController _demoPrefabController;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light Light;

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1C63F08", Offset = "0x1C63F08", VA = "0x1C63F08")]
		public void EnableLigh()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1C63F28", Offset = "0x1C63F28", VA = "0x1C63F28")]
		public void DisableLight()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1C63F48", Offset = "0x1C63F48", VA = "0x1C63F48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1C63FA0", Offset = "0x1C63FA0", VA = "0x1C63FA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1C64090", Offset = "0x1C64090", VA = "0x1C64090")]
		public DemoInputConrtoller()
		{
		}
	}
	[Token(Token = "0x2000571")]
	internal sealed class DemoPrefabController : MonoBehaviour
	{
		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int StartNum;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] Prefabs;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _currentInstance;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentPrefabNum;

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1C64054", Offset = "0x1C64054", VA = "0x1C64054")]
		public void Next()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1C641A4", Offset = "0x1C641A4", VA = "0x1C641A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1C64098", Offset = "0x1C64098", VA = "0x1C64098")]
		private void ChangePrefab(int num)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x1C641B0", Offset = "0x1C641B0", VA = "0x1C641B0")]
		public DemoPrefabController()
		{
		}
	}
	[Token(Token = "0x2000572")]
	[RequireComponent(typeof(Light))]
	internal sealed class ManualLightBehavior : MonoBehaviour
	{
		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve LightCurve;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GraphScaleX;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GraphScaleY;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isLightAnimationStarted;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _startTime;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light _lightSource;

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1C641B8", Offset = "0x1C641B8", VA = "0x1C641B8")]
		public void Play()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x1C641F0", Offset = "0x1C641F0", VA = "0x1C641F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1C64248", Offset = "0x1C64248", VA = "0x1C64248")]
		private void Update()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1C642B4", Offset = "0x1C642B4", VA = "0x1C642B4")]
		public ManualLightBehavior()
		{
		}
	}
	[Token(Token = "0x2000573")]
	internal sealed class MouseOrbitController : MonoBehaviour
	{
		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Distance;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float XSpeed;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float YSpeed;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float YMinLimit;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YMaxLimit;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DistanceMin;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DistanceMax;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _x;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _y;

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x1C642BC", Offset = "0x1C642BC", VA = "0x1C642BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x1C642E8", Offset = "0x1C642E8", VA = "0x1C642E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x1C64520", Offset = "0x1C64520", VA = "0x1C64520")]
		private static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x1C6455C", Offset = "0x1C6455C", VA = "0x1C6455C")]
		public MouseOrbitController()
		{
		}
	}
	[Token(Token = "0x2000574")]
	[RequireComponent(typeof(Projector))]
	internal sealed class ProjectorTextureAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000575")]
		[CompilerGenerated]
		private sealed class <UpdateCorutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectorTextureAnimation <>4__this;

			[Token(Token = "0x17000497")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239A")]
				[Address(RVA = "0x1C64C30", Offset = "0x1C64C30", VA = "0x1C64C30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239C")]
				[Address(RVA = "0x1C64C78", Offset = "0x1C64C78", VA = "0x1C64C78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002397")]
			[Address(RVA = "0x1C64930", Offset = "0x1C64930", VA = "0x1C64930")]
			[DebuggerHidden]
			public <UpdateCorutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002398")]
			[Address(RVA = "0x1C64B08", Offset = "0x1C64B08", VA = "0x1C64B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x1C64B0C", Offset = "0x1C64B0C", VA = "0x1C64B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x1C64C38", Offset = "0x1C64C38", VA = "0x1C64C38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TilesX;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TilesY;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Fps;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve FrameOverTime;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Projector _projector;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _projectorMaterial;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _originalMaterial;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _animationLifeTime;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _index;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _countOfTextures;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _currentNumOfTexture;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isStarted;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _isCanceled;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _animationStartTime;

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x1C64584", Offset = "0x1C64584", VA = "0x1C64584")]
		private void Start()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x1C64698", Offset = "0x1C64698", VA = "0x1C64698")]
		private void Play()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x1C648BC", Offset = "0x1C648BC", VA = "0x1C648BC")]
		[IteratorStateMachine(typeof(<UpdateCorutine>d__16))]
		private IEnumerator UpdateCorutine()
		{
			return null;
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x1C64958", Offset = "0x1C64958", VA = "0x1C64958")]
		private void UpdateFrame()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x1C64A78", Offset = "0x1C64A78", VA = "0x1C64A78")]
		private void Stop()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x1C64AAC", Offset = "0x1C64AAC", VA = "0x1C64AAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1C64AB0", Offset = "0x1C64AB0", VA = "0x1C64AB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x1C64AB4", Offset = "0x1C64AB4", VA = "0x1C64AB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x1C64AB8", Offset = "0x1C64AB8", VA = "0x1C64AB8")]
		public ProjectorTextureAnimation()
		{
		}
	}
	[Token(Token = "0x2000576")]
	internal class UvAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000577")]
		[CompilerGenerated]
		private sealed class <UpdateCorutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UvAnimation <>4__this;

			[Token(Token = "0x17000499")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AB")]
				[Address(RVA = "0x1C656C0", Offset = "0x1C656C0", VA = "0x1C656C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0x1C65708", Offset = "0x1C65708", VA = "0x1C65708", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x1C65164", Offset = "0x1C65164", VA = "0x1C65164")]
			[DebuggerHidden]
			public <UpdateCorutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x1C65554", Offset = "0x1C65554", VA = "0x1C65554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x1C65558", Offset = "0x1C65558", VA = "0x1C65558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x1C656C8", Offset = "0x1C656C8", VA = "0x1C656C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TilesX;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TilesY;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Fps;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int StartFrameOffset;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsLoop;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float StartDelay;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsReverse;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool IsBump;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve FrameOverTime;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInizialised;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _index;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _count;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _allCount;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _animationLifeTime;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isVisible;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool _isCorutineStarted;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer _currentRenderer;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _instanceMaterial;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _animationStartTime;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _animationStoped;

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x1C64C80", Offset = "0x1C64C80", VA = "0x1C64C80")]
		private void Start()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1C64CF4", Offset = "0x1C64CF4", VA = "0x1C64CF4")]
		private void InitDefaultVariables()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x1C64FB4", Offset = "0x1C64FB4", VA = "0x1C64FB4")]
		private void Play()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x1C650B8", Offset = "0x1C650B8", VA = "0x1C650B8")]
		private void PlayDelay()
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x1C650D8", Offset = "0x1C650D8", VA = "0x1C650D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1C65108", Offset = "0x1C65108", VA = "0x1C65108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1C65044", Offset = "0x1C65044", VA = "0x1C65044")]
		[IteratorStateMachine(typeof(<UpdateCorutine>d__26))]
		private IEnumerator UpdateCorutine()
		{
			return null;
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1C6518C", Offset = "0x1C6518C", VA = "0x1C6518C")]
		private void UpdateFrame()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1C652F4", Offset = "0x1C652F4", VA = "0x1C652F4")]
		private void UpdateFrameReversed()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1C6545C", Offset = "0x1C6545C", VA = "0x1C6545C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x1C654FC", Offset = "0x1C654FC", VA = "0x1C654FC")]
		public UvAnimation()
		{
		}
	}
}
namespace Assets.Scripts.Materialization
{
	[Token(Token = "0x2000578")]
	internal sealed class ShaderParameterSetter : MonoBehaviour
	{
		[Token(Token = "0x400254C")]
		private const string ShaderName = "QFX/SF_VFX/Materialization";

		[Token(Token = "0x400254D")]
		private const string ParameterName = "_Center";

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 ParameterOffset;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _rend;

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x1C65710", Offset = "0x1C65710", VA = "0x1C65710")]
		private void Start()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1C657B8", Offset = "0x1C657B8", VA = "0x1C657B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x1C65850", Offset = "0x1C65850", VA = "0x1C65850")]
		public ShaderParameterSetter()
		{
		}
	}
}
namespace Assets.Scripts.Engine
{
	[Token(Token = "0x2000579")]
	internal sealed class EngineController : MonoBehaviour
	{
		[Token(Token = "0x4002550")]
		private const float SpeedIntencity = 1f;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] EngineParticleSystems;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] MaxParticleSystemsAlpha;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Material> _enginePsMaterials;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _speed;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isButtonHold;

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x1C65858", Offset = "0x1C65858", VA = "0x1C65858")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x1C65B38", Offset = "0x1C65B38", VA = "0x1C65B38")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x1C6597C", Offset = "0x1C6597C", VA = "0x1C6597C")]
		private void UpdateColorBySpeed()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x1C65BC8", Offset = "0x1C65BC8", VA = "0x1C65BC8")]
		public EngineController()
		{
		}
	}
}
namespace Assets.Scripts.BlasterWeapon
{
	[Token(Token = "0x200057A")]
	[RequireComponent(typeof(TrailRenderer))]
	internal sealed class BlasterBullet : MonoBehaviour
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float Speed;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float LifeTime;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float LifeTimeAfterCollision;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool DestroyOnCollision;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ImpactEffect;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _transform;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isCollisionDetected;

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x1C65C50", Offset = "0x1C65C50", VA = "0x1C65C50")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x1C65CE8", Offset = "0x1C65CE8", VA = "0x1C65CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x1C65FB4", Offset = "0x1C65FB4", VA = "0x1C65FB4")]
		public BlasterBullet()
		{
		}
	}
	[Token(Token = "0x200057B")]
	internal sealed class BlasterWeapon : MonoBehaviour
	{
		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Bullet;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem MuzzleFlashPs;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ManualLightBehavior ManualLightBehavior;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float BulletSpeed;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LifeTime;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LifeTimeAfterCollision;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Duration;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool DestroyOnCollision;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isEnabled;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem[] _muzzleFlashParticleSystems;

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1C65FD8", Offset = "0x1C65FD8", VA = "0x1C65FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x1C6604C", Offset = "0x1C6604C", VA = "0x1C6604C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x1C660A0", Offset = "0x1C660A0", VA = "0x1C660A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1C66134", Offset = "0x1C66134", VA = "0x1C66134")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1C66140", Offset = "0x1C66140", VA = "0x1C66140")]
		private void Fire()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x1C6618C", Offset = "0x1C6618C", VA = "0x1C6618C")]
		private void InstantiateBullet(GameObject bullet)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1C660B0", Offset = "0x1C660B0", VA = "0x1C660B0")]
		private void EnableParticleSystems(bool isEnabled)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x1C662DC", Offset = "0x1C662DC", VA = "0x1C662DC")]
		public BlasterWeapon()
		{
		}
	}
}
namespace Assets.Scripts.BeamWeapon
{
	[Token(Token = "0x200057C")]
	internal sealed class BeamPositionSetter : MonoBehaviour
	{
		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x1C66300", Offset = "0x1C66300", VA = "0x1C66300")]
		public void Set(Vector3 startPosition, Vector3 endPosition)
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x1C663F0", Offset = "0x1C663F0", VA = "0x1C663F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x1C66448", Offset = "0x1C66448", VA = "0x1C66448")]
		public BeamPositionSetter()
		{
		}
	}
	[Token(Token = "0x200057D")]
	internal sealed class BeamWeapon : MonoBehaviour
	{
		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Beam;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactSparks;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ImpactFlash;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve WidthOverTime;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxDistance;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask LayerMask;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _laserBeam;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _impactFlash;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _impactSparks;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _colorAnimationStartTime;

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x1C66450", Offset = "0x1C66450", VA = "0x1C66450")]
		private void Start()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x1C66454", Offset = "0x1C66454", VA = "0x1C66454")]
		private void InstantiateBeam()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1C6660C", Offset = "0x1C6660C", VA = "0x1C6660C")]
		private void InstantiateImpactEffect(Vector3 hitPoint, Vector3 hitNormal)
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1C6677C", Offset = "0x1C6677C", VA = "0x1C6677C")]
		private void InstantiateImpactFlash(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1C668AC", Offset = "0x1C668AC", VA = "0x1C668AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x1C66D90", Offset = "0x1C66D90", VA = "0x1C66D90")]
		private void SetWidthOverTime(float time)
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1C66DE0", Offset = "0x1C66DE0", VA = "0x1C66DE0")]
		private void SetLineRendererPosition(Vector3 startPosition, Vector3 endPosition)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x1C66E40", Offset = "0x1C66E40", VA = "0x1C66E40")]
		public BeamWeapon()
		{
		}
	}
}
namespace Assets.MaterializationFX.Scripts.Utils
{
	[Token(Token = "0x200057E")]
	internal sealed class ShaderParameterSetter : MonoBehaviour
	{
		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ShaderName;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ParameterName;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 ParameterOffset;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetObjects;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ChangeChilds;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer[] _rends;

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x1C66E98", Offset = "0x1C66E98", VA = "0x1C66E98")]
		private void Start()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x1C67018", Offset = "0x1C67018", VA = "0x1C67018")]
		private void Update()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x1C670D0", Offset = "0x1C670D0", VA = "0x1C670D0")]
		public ShaderParameterSetter()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x200057F")]
	public class DisableAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x2000580")]
		[CompilerGenerated]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisableAfterDelay <>4__this;

			[Token(Token = "0x1700049B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D3")]
				[Address(RVA = "0x1C672D4", Offset = "0x1C672D4", VA = "0x1C672D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D5")]
				[Address(RVA = "0x1C6731C", Offset = "0x1C6731C", VA = "0x1C6731C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x1C671C8", Offset = "0x1C671C8", VA = "0x1C671C8")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x1C67200", Offset = "0x1C67200", VA = "0x1C67200", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x1C67204", Offset = "0x1C67204", VA = "0x1C67204", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1C672DC", Offset = "0x1C672DC", VA = "0x1C672DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x1C67154", Offset = "0x1C67154", VA = "0x1C67154")]
		[IteratorStateMachine(typeof(<Start>d__1))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x1C671F0", Offset = "0x1C671F0", VA = "0x1C671F0")]
		public DisableAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class InstructionsManager : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[CompilerGenerated]
		private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionsManager <>4__this;

			[Token(Token = "0x1700049D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DD")]
				[Address(RVA = "0x1C67738", Offset = "0x1C67738", VA = "0x1C67738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DF")]
				[Address(RVA = "0x1C67780", Offset = "0x1C67780", VA = "0x1C67780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x1C67448", Offset = "0x1C67448", VA = "0x1C67448")]
			[DebuggerHidden]
			public <BeginGameCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x1C67480", Offset = "0x1C67480", VA = "0x1C67480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x1C67484", Offset = "0x1C67484", VA = "0x1C67484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x1C67740", Offset = "0x1C67740", VA = "0x1C67740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup instructionsCanvasGroup;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HasStarted;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1C67324", Offset = "0x1C67324", VA = "0x1C67324")]
		private void Start()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1C6739C", Offset = "0x1C6739C", VA = "0x1C6739C")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x1C673D4", Offset = "0x1C673D4", VA = "0x1C673D4")]
		[IteratorStateMachine(typeof(<BeginGameCoroutine>d__6))]
		private IEnumerator BeginGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1C67470", Offset = "0x1C67470", VA = "0x1C67470")]
		public InstructionsManager()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class LookAtTarget : MonoBehaviour
	{
		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtTarget;

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1C67788", Offset = "0x1C67788", VA = "0x1C67788")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1C6781C", Offset = "0x1C6781C", VA = "0x1C6781C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1C678AC", Offset = "0x1C678AC", VA = "0x1C678AC")]
		public LookAtTarget()
		{
		}
	}
	[Token(Token = "0x2000584")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000585")]
		[CompilerGenerated]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023ED")]
				[Address(RVA = "0x1C67DA0", Offset = "0x1C67DA0", VA = "0x1C67DA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023EF")]
				[Address(RVA = "0x1C67DE8", Offset = "0x1C67DE8", VA = "0x1C67DE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x1C67928", Offset = "0x1C67928", VA = "0x1C67928")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x1C67C48", Offset = "0x1C67C48", VA = "0x1C67C48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x1C67C4C", Offset = "0x1C67C4C", VA = "0x1C67C4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x1C67DA8", Offset = "0x1C67DA8", VA = "0x1C67DA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000586")]
		[CompilerGenerated]
		private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x170004A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0x1C67F50", Offset = "0x1C67F50", VA = "0x1C67F50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F5")]
				[Address(RVA = "0x1C67F98", Offset = "0x1C67F98", VA = "0x1C67F98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x1C67AAC", Offset = "0x1C67AAC", VA = "0x1C67AAC")]
			[DebuggerHidden]
			public <FadeDownRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x1C67DF0", Offset = "0x1C67DF0", VA = "0x1C67DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x1C67DF4", Offset = "0x1C67DF4", VA = "0x1C67DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x1C67F58", Offset = "0x1C67F58", VA = "0x1C67F58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[CompilerGenerated]
		private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400258D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0x1C68180", Offset = "0x1C68180", VA = "0x1C68180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0x1C681C8", Offset = "0x1C681C8", VA = "0x1C681C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x1C67B58", Offset = "0x1C67B58", VA = "0x1C67B58")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x1C67FA0", Offset = "0x1C67FA0", VA = "0x1C67FA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x1C67FA4", Offset = "0x1C67FA4", VA = "0x1C67FA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x1C68188", Offset = "0x1C68188", VA = "0x1C68188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[CompilerGenerated]
		private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4002594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x170004A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023FF")]
				[Address(RVA = "0x1C683B0", Offset = "0x1C683B0", VA = "0x1C683B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002401")]
				[Address(RVA = "0x1C683F8", Offset = "0x1C683F8", VA = "0x1C683F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x1C67C10", Offset = "0x1C67C10", VA = "0x1C67C10")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60023FD")]
			[Address(RVA = "0x1C681D0", Offset = "0x1C681D0", VA = "0x1C681D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x1C681D4", Offset = "0x1C681D4", VA = "0x1C681D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x1C683B8", Offset = "0x1C683B8", VA = "0x1C683B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1C678B4", Offset = "0x1C678B4", VA = "0x1C678B4")]
		[IteratorStateMachine(typeof(<Start>d__2))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1C67950", Offset = "0x1C67950", VA = "0x1C67950")]
		public void SwitchToScene(int sceneIndex)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1C679DC", Offset = "0x1C679DC", VA = "0x1C679DC")]
		public void SwitchToScene(string sceneName)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1C67A38", Offset = "0x1C67A38", VA = "0x1C67A38")]
		[IteratorStateMachine(typeof(<FadeDownRoutine>d__5))]
		private IEnumerator FadeDownRoutine()
		{
			return null;
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1C67AD4", Offset = "0x1C67AD4", VA = "0x1C67AD4")]
		[IteratorStateMachine(typeof(<SwitchToSceneRoutine>d__6))]
		private IEnumerator SwitchToSceneRoutine(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1C67B80", Offset = "0x1C67B80", VA = "0x1C67B80")]
		[IteratorStateMachine(typeof(<SwitchToSceneRoutine>d__7))]
		private IEnumerator SwitchToSceneRoutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1C67C38", Offset = "0x1C67C38", VA = "0x1C67C38")]
		public SceneSwitcher()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x200058A")]
		[CompilerGenerated]
		private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreManager <>4__this;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600240F")]
				[Address(RVA = "0x1C68BCC", Offset = "0x1C68BCC", VA = "0x1C68BCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002411")]
				[Address(RVA = "0x1C68C14", Offset = "0x1C68C14", VA = "0x1C68C14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0x1C688A0", Offset = "0x1C688A0", VA = "0x1C688A0")]
			[DebuggerHidden]
			public <EndTimer>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x1C68A14", Offset = "0x1C68A14", VA = "0x1C68A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0x1C68A18", Offset = "0x1C68A18", VA = "0x1C68A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x1C68BD4", Offset = "0x1C68BD4", VA = "0x1C68BD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerText;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image timerDisplay;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text scoreText;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text accuracyText;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text highScoreText;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float totalTime;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int scoreValue;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_TheScore;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Accuracy;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_RollingScore;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_CurrentTime;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_TimerIsRunning;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetsManager m_TargetsManager;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1C68400", Offset = "0x1C68400", VA = "0x1C68400")]
		private void Start()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x1C685B4", Offset = "0x1C685B4", VA = "0x1C685B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1C68670", Offset = "0x1C68670", VA = "0x1C68670")]
		private void Timer()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x1C685FC", Offset = "0x1C685FC", VA = "0x1C685FC")]
		[IteratorStateMachine(typeof(<EndTimer>d__18))]
		private IEnumerator EndTimer()
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x1C68720", Offset = "0x1C68720", VA = "0x1C68720")]
		private void UpdateScoreDisplay()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x1C67720", Offset = "0x1C67720", VA = "0x1C67720")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1C688C8", Offset = "0x1C688C8", VA = "0x1C688C8")]
		private void CalculateAccuracy()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1C68958", Offset = "0x1C68958", VA = "0x1C68958")]
		public void IncreaseScore()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1C68968", Offset = "0x1C68968", VA = "0x1C68968")]
		public void Quit()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1C689F8", Offset = "0x1C689F8", VA = "0x1C689F8")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool local;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowManual;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowAutomatic;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool lockZ;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoTimer;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spinDirection;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_GoAutomaticTime;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_AutoSpinDirection;

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x1C68C1C", Offset = "0x1C68C1C", VA = "0x1C68C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1C68C30", Offset = "0x1C68C30", VA = "0x1C68C30")]
		private void Update()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x1C68D28", Offset = "0x1C68D28", VA = "0x1C68D28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x1C68F10", Offset = "0x1C68F10", VA = "0x1C68F10")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class TargetObject : MonoBehaviour
	{
		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject explosionEffect;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidTarget;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject brokenTarget;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClipSpawned;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audioClipHit;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float destructionForce;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float debisDestroyDelay;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_AudioPlayer;

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x1C68F88", Offset = "0x1C68F88", VA = "0x1C68F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x1C69050", Offset = "0x1C69050", VA = "0x1C69050")]
		public void DestroyTarget()
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1C6953C", Offset = "0x1C6953C", VA = "0x1C6953C")]
		public TargetObject()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class TargetsManager : MonoBehaviour
	{
		[Token(Token = "0x200058E")]
		[CompilerGenerated]
		private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetsManager <>4__this;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002424")]
				[Address(RVA = "0x1C69984", Offset = "0x1C69984", VA = "0x1C69984", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002426")]
				[Address(RVA = "0x1C699CC", Offset = "0x1C699CC", VA = "0x1C699CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x1C69700", Offset = "0x1C69700", VA = "0x1C69700")]
			[DebuggerHidden]
			public <SpawnTarget>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x1C69870", Offset = "0x1C69870", VA = "0x1C69870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0x1C69874", Offset = "0x1C69874", VA = "0x1C69874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002425")]
			[Address(RVA = "0x1C6998C", Offset = "0x1C6998C", VA = "0x1C6998C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnRateMin;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRateMax;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetPrefab;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform spawnPoint;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 spawnArea;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxSpawnedObjects;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_AllowSpawning;

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1C676F8", Offset = "0x1C676F8", VA = "0x1C676F8")]
		public void BeginSpawning()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1C68BC0", Offset = "0x1C68BC0", VA = "0x1C68BC0")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1C694FC", Offset = "0x1C694FC", VA = "0x1C694FC")]
		public void SpawnTargetImmediately()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1C69550", Offset = "0x1C69550", VA = "0x1C69550")]
		[IteratorStateMachine(typeof(<SpawnTarget>d__10))]
		private IEnumerator SpawnTarget()
		{
			return null;
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1C695C4", Offset = "0x1C695C4", VA = "0x1C695C4")]
		private void Spawn()
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1C697B8", Offset = "0x1C697B8", VA = "0x1C697B8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x1C69728", Offset = "0x1C69728", VA = "0x1C69728")]
		private Vector3 RandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1C69800", Offset = "0x1C69800", VA = "0x1C69800")]
		public TargetsManager()
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class InputVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000590")]
		public class Controller
		{
			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform buttonCross;

			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform buttonCircle;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform buttonSquare;

			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform buttonTriangle;

			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform buttonOptions;

			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform buttonTouchpad;

			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform dpadDown;

			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform dpadRight;

			[Token(Token = "0x40025CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform dpadUp;

			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform dpadLeft;

			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Transform buttonL1;

			[Token(Token = "0x40025D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform buttonR1;

			[Token(Token = "0x40025D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform buttonR12;

			[Token(Token = "0x40025D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform triggerL2;

			[Token(Token = "0x40025D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Transform triggerR2;

			[Token(Token = "0x40025D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Transform thumbstickL3;

			[Token(Token = "0x40025D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Transform thumbstickR3;

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x1C6A514", Offset = "0x1C6A514", VA = "0x1C6A514")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Controller controller;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonPressDistance;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float triggerPullAngle;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thumbstickAngle;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1C699D4", Offset = "0x1C699D4", VA = "0x1C699D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x1C6A50C", Offset = "0x1C6A50C", VA = "0x1C6A50C")]
		public InputVisualiser()
		{
		}
	}
	[Token(Token = "0x2000591")]
	[RequireComponent(typeof(LineRenderer))]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_Line;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1C6A51C", Offset = "0x1C6A51C", VA = "0x1C6A51C")]
		private void Start()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x1C6A574", Offset = "0x1C6A574", VA = "0x1C6A574")]
		private void Update()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1C6A688", Offset = "0x1C6A688", VA = "0x1C6A688")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class WeaponController : MonoBehaviour
	{
		[Token(Token = "0x2000593")]
		[CompilerGenerated]
		private sealed class <Vibrate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002437")]
				[Address(RVA = "0x1C6AAB0", Offset = "0x1C6AAB0", VA = "0x1C6AAB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002439")]
				[Address(RVA = "0x1C6AAF8", Offset = "0x1C6AAF8", VA = "0x1C6AAF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0x1C6A9D0", Offset = "0x1C6A9D0", VA = "0x1C6A9D0")]
			[DebuggerHidden]
			public <Vibrate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0x1C6AA08", Offset = "0x1C6AA08", VA = "0x1C6AA08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x1C6AA0C", Offset = "0x1C6AA0C", VA = "0x1C6AA0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0x1C6AAB8", Offset = "0x1C6AAB8", VA = "0x1C6AAB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fireRate;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem shotEmitter;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMoveController;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSecondaryMoveController;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isAimController;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource shotSound;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource missSound;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer m_LaserPointer;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_Hit;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_LastShotTime;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_CanShoot;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_HasShootInput;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int shotsFired;

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1C6A690", Offset = "0x1C6A690", VA = "0x1C6A690")]
		private void Start()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1C6A71C", Offset = "0x1C6A71C", VA = "0x1C6A71C")]
		private void Update()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x1C6A76C", Offset = "0x1C6A76C", VA = "0x1C6A76C")]
		private bool CheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1C6A7B0", Offset = "0x1C6A7B0", VA = "0x1C6A7B0")]
		private void Fire()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x1C6A970", Offset = "0x1C6A970", VA = "0x1C6A970")]
		[IteratorStateMachine(typeof(<Vibrate>d__17))]
		private IEnumerator Vibrate()
		{
			return null;
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1C676BC", Offset = "0x1C676BC", VA = "0x1C676BC")]
		public void WeaponCanShoot(bool shootBool)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1C6A9F8", Offset = "0x1C6A9F8", VA = "0x1C6A9F8")]
		public WeaponController()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Token(Token = "0x2000595")]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x40025EE")]
			DualShock4 = 1,
			[Token(Token = "0x40025EF")]
			Aim = 2,
			[Token(Token = "0x40025F0")]
			Move = 4
		}

		[Serializable]
		[Token(Token = "0x2000596")]
		public class TrackedDevice
		{
			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x600244B")]
			[Address(RVA = "0x1C6AEBC", Offset = "0x1C6AEBC", VA = "0x1C6AEBC")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x2000597")]
		[CompilerGenerated]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackedPlayStationDevices <>4__this;

			[Token(Token = "0x170004AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600244F")]
				[Address(RVA = "0x1C6B200", Offset = "0x1C6B200", VA = "0x1C6B200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002451")]
				[Address(RVA = "0x1C6B248", Offset = "0x1C6B248", VA = "0x1C6B248", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0x1C6AB74", Offset = "0x1C6AB74", VA = "0x1C6AB74")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0x1C6AF5C", Offset = "0x1C6AF5C", VA = "0x1C6AF5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600244E")]
			[Address(RVA = "0x1C6AF60", Offset = "0x1C6AF60", VA = "0x1C6AF60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002450")]
			[Address(RVA = "0x1C6B208", Offset = "0x1C6B208", VA = "0x1C6B208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000598")]
		[CompilerGenerated]
		private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002455")]
				[Address(RVA = "0x1C6B2A4", Offset = "0x1C6B2A4", VA = "0x1C6B2A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002457")]
				[Address(RVA = "0x1C6B2EC", Offset = "0x1C6B2EC", VA = "0x1C6B2EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0x1C6AE28", Offset = "0x1C6AE28", VA = "0x1C6AE28")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002453")]
			[Address(RVA = "0x1C6B250", Offset = "0x1C6B250", VA = "0x1C6B250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002454")]
			[Address(RVA = "0x1C6B254", Offset = "0x1C6B254", VA = "0x1C6B254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002456")]
			[Address(RVA = "0x1C6B2AC", Offset = "0x1C6B2AC", VA = "0x1C6B2AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000599")]
		[CompilerGenerated]
		private sealed class <RegisterAimController>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600245B")]
				[Address(RVA = "0x1C6B348", Offset = "0x1C6B348", VA = "0x1C6B348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600245D")]
				[Address(RVA = "0x1C6B390", Offset = "0x1C6B390", VA = "0x1C6B390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002458")]
			[Address(RVA = "0x1C6AE50", Offset = "0x1C6AE50", VA = "0x1C6AE50")]
			[DebuggerHidden]
			public <RegisterAimController>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x1C6B2F4", Offset = "0x1C6B2F4", VA = "0x1C6B2F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600245A")]
			[Address(RVA = "0x1C6B2F8", Offset = "0x1C6B2F8", VA = "0x1C6B2F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x1C6B350", Offset = "0x1C6B350", VA = "0x1C6B350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059A")]
		[CompilerGenerated]
		private sealed class <RegisterMoveControllers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002461")]
				[Address(RVA = "0x1C6B3EC", Offset = "0x1C6B3EC", VA = "0x1C6B3EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002463")]
				[Address(RVA = "0x1C6B434", Offset = "0x1C6B434", VA = "0x1C6B434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0x1C6AE78", Offset = "0x1C6AE78", VA = "0x1C6AE78")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x1C6B398", Offset = "0x1C6B398", VA = "0x1C6B398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002460")]
			[Address(RVA = "0x1C6B39C", Offset = "0x1C6B39C", VA = "0x1C6B39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0x1C6B3F4", Offset = "0x1C6B3F4", VA = "0x1C6B3F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1C6AB00", Offset = "0x1C6AB00", VA = "0x1C6AB00")]
		[IteratorStateMachine(typeof(<Start>d__7))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1C6AB9C", Offset = "0x1C6AB9C", VA = "0x1C6AB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1C6AC40", Offset = "0x1C6AC40", VA = "0x1C6AC40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1C6AC7C", Offset = "0x1C6AC7C", VA = "0x1C6AC7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1C6AC80", Offset = "0x1C6AC80", VA = "0x1C6AC80")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1C6AC34", Offset = "0x1C6AC34", VA = "0x1C6AC34")]
		private void UpdateDualShock4Transforms()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1C6AC38", Offset = "0x1C6AC38", VA = "0x1C6AC38")]
		private void UpdateAimTransforms()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1C6AC3C", Offset = "0x1C6AC3C", VA = "0x1C6AC3C")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1C6AC98", Offset = "0x1C6AC98", VA = "0x1C6AC98")]
		public void RegisterDevices()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1C6AD08", Offset = "0x1C6AD08", VA = "0x1C6AD08")]
		[IteratorStateMachine(typeof(<RegisterDualShock4Controller>d__16))]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1C6AD68", Offset = "0x1C6AD68", VA = "0x1C6AD68")]
		[IteratorStateMachine(typeof(<RegisterAimController>d__17))]
		private IEnumerator RegisterAimController()
		{
			return null;
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1C6ADC8", Offset = "0x1C6ADC8", VA = "0x1C6ADC8")]
		[IteratorStateMachine(typeof(<RegisterMoveControllers>d__18))]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1C6AC44", Offset = "0x1C6AC44", VA = "0x1C6AC44")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1C6AEA0", Offset = "0x1C6AEA0", VA = "0x1C6AEA0")]
		private void UnregisterDualShock4()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1C6AEA4", Offset = "0x1C6AEA4", VA = "0x1C6AEA4")]
		private void UnregisterAimController()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1C6AEA8", Offset = "0x1C6AEA8", VA = "0x1C6AEA8")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1C6AEAC", Offset = "0x1C6AEAC", VA = "0x1C6AEAC")]
		public TrackedPlayStationDevices()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class VRDeviceNames
	{
		[Token(Token = "0x40025FF")]
		public const string None = "None";

		[Token(Token = "0x4002600")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x4002601")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x4002602")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1C6B43C", Offset = "0x1C6B43C", VA = "0x1C6B43C")]
		public VRDeviceNames()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class VRPlaySpace : MonoBehaviour
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_ShowFrustum;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x1C6B444", Offset = "0x1C6B444", VA = "0x1C6B444")]
		private void Start()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1C6B4BC", Offset = "0x1C6B4BC", VA = "0x1C6B4BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1C6B4C0", Offset = "0x1C6B4C0", VA = "0x1C6B4C0")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x1C6B4C4", Offset = "0x1C6B4C4", VA = "0x1C6B4C4")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1C6B610", Offset = "0x1C6B610", VA = "0x1C6B610")]
		public VRPlaySpace()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class VRPostReprojection : MonoBehaviour
	{
		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject busySpinner;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject reticle;

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1C6B624", Offset = "0x1C6B624", VA = "0x1C6B624")]
		public VRPostReprojection()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class VRUIComplete : MonoBehaviour
	{
		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableColliderAfterUse;

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x1C6B62C", Offset = "0x1C6B62C", VA = "0x1C6B62C")]
		public void Complete()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x1C6B6FC", Offset = "0x1C6B6FC", VA = "0x1C6B6FC")]
		public VRUIComplete()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask uiLayerMask;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_SliderFillSpeed;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider m_CurrentSlider;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_AudioSrc;

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x1C6B754", Offset = "0x1C6B754", VA = "0x1C6B754")]
		private void Start()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1C6B7AC", Offset = "0x1C6B7AC", VA = "0x1C6B7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x1C6BCD0", Offset = "0x1C6BCD0", VA = "0x1C6BCD0")]
		public VRUIController()
		{
		}
	}
}
namespace Photon.Realtime
{
	[Serializable]
	[Token(Token = "0x20005A0")]
	public class AppSettings
	{
		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AppIdRealtime;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppIdFusion;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AppIdChat;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string AppIdVoice;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string AppVersion;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UseNameServer;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string FixedRegion;

		[NonSerialized]
		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string BestRegionSummaryFromStorage;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string Server;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int Port;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string ProxyServer;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ConnectionProtocol Protocol;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool EnableProtocolFallback;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AuthModeOption AuthMode;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool EnableLobbyStatistics;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public DebugLevel NetworkLogging;

		[Token(Token = "0x170004B5")]
		public bool IsMasterServerAddress
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x1C6BCE0", Offset = "0x1C6BCE0", VA = "0x1C6BCE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public bool IsBestRegion
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x1C6BCF0", Offset = "0x1C6BCF0", VA = "0x1C6BCF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B7")]
		public bool IsDefaultNameServer
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x1C6BD0C", Offset = "0x1C6BD0C", VA = "0x1C6BD0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public bool IsDefaultPort
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x1C6BD28", Offset = "0x1C6BD28", VA = "0x1C6BD28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1C6BD38", Offset = "0x1C6BD38", VA = "0x1C6BD38")]
		public string ToStringFull()
		{
			return null;
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1C6C484", Offset = "0x1C6C484", VA = "0x1C6C484")]
		public static bool IsAppId(string val)
		{
			return default(bool);
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1C6C3F4", Offset = "0x1C6C3F4", VA = "0x1C6C3F4")]
		private string HideAppId(string appId)
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x1C6C524", Offset = "0x1C6C524", VA = "0x1C6C524")]
		public AppSettings CopyTo(AppSettings d)
		{
			return null;
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1C6C614", Offset = "0x1C6C614", VA = "0x1C6C614")]
		public AppSettings()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class ConnectionHandler : MonoBehaviour
	{
		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DisconnectAfterKeepAlive;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int KeepAliveInBackground;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ApplyDontDestroyOnLoad;

		[NonSerialized]
		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool AppQuits;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private byte fallbackThreadId;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool didSendAcks;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Stopwatch backgroundStopwatch;

		[Token(Token = "0x170004B9")]
		public LoadBalancingClient Client
		{
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x1C6C62C", Offset = "0x1C6C62C", VA = "0x1C6C62C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600247A")]
			[Address(RVA = "0x1C6C634", Offset = "0x1C6C634", VA = "0x1C6C634")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		public int CountSendAcksOnly
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x1C6C63C", Offset = "0x1C6C63C", VA = "0x1C6C63C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x1C6C644", Offset = "0x1C6C644", VA = "0x1C6C644")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		public bool FallbackThreadRunning
		{
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x1C6C64C", Offset = "0x1C6C64C", VA = "0x1C6C64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x1C6C65C", Offset = "0x1C6C65C", VA = "0x1C6C65C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void StaticReset()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x1C6C6A4", Offset = "0x1C6C6A4", VA = "0x1C6C6A4")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1C6C6F0", Offset = "0x1C6C6F0", VA = "0x1C6C6F0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1C6C770", Offset = "0x1C6C770", VA = "0x1C6C770", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1C6CC30", Offset = "0x1C6CC30", VA = "0x1C6CC30")]
		public void StartFallbackSendAckThread()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1C6C844", Offset = "0x1C6C844", VA = "0x1C6C844")]
		public void StopFallbackSendAckThread()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1C6CD0C", Offset = "0x1C6CD0C", VA = "0x1C6CD0C")]
		public bool RealtimeFallbackThread()
		{
			return default(bool);
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1C6CE18", Offset = "0x1C6CE18", VA = "0x1C6CE18")]
		public ConnectionHandler()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	internal static class CustomTypesUnity
	{
		[Token(Token = "0x4002631")]
		private const int SizeV2 = 8;

		[Token(Token = "0x4002632")]
		private const int SizeV3 = 12;

		[Token(Token = "0x4002633")]
		private const int SizeQuat = 16;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly byte[] memVector3;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly byte[] memVector2;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly byte[] memQuarternion;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1C6CE9C", Offset = "0x1C6CE9C", VA = "0x1C6CE9C")]
		internal static void Register()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1C6D140", Offset = "0x1C6D140", VA = "0x1C6D140")]
		private static short SerializeVector3(StreamBuffer outStream, object customobject)
		{
			return default(short);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1C6D350", Offset = "0x1C6D350", VA = "0x1C6D350")]
		private static object DeserializeVector3(StreamBuffer inStream, short length)
		{
			return null;
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1C6D590", Offset = "0x1C6D590", VA = "0x1C6D590")]
		private static short SerializeVector2(StreamBuffer outStream, object customobject)
		{
			return default(short);
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1C6D780", Offset = "0x1C6D780", VA = "0x1C6D780")]
		private static object DeserializeVector2(StreamBuffer inStream, short length)
		{
			return null;
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1C6D994", Offset = "0x1C6D994", VA = "0x1C6D994")]
		private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
		{
			return default(short);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1C6DBC0", Offset = "0x1C6DBC0", VA = "0x1C6DBC0")]
		private static object DeserializeQuaternion(StreamBuffer inStream, short length)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A3")]
	public static class Extensions
	{
		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<object> keysWithNullValue;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x1C6DEFC", Offset = "0x1C6DEFC", VA = "0x1C6DEFC")]
		public static void Merge(this IDictionary target, IDictionary addHash)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x1C6E33C", Offset = "0x1C6E33C", VA = "0x1C6E33C")]
		public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x1C6E7A4", Offset = "0x1C6E7A4", VA = "0x1C6E7A4")]
		public static string ToStringFull(this IDictionary origin)
		{
			return null;
		}

		[Token(Token = "0x6002491")]
		public static string ToStringFull<T>(this List<T> data)
		{
			return null;
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1C6E800", Offset = "0x1C6E800", VA = "0x1C6E800")]
		public static string ToStringFull(this object[] data)
		{
			return null;
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x1C6E968", Offset = "0x1C6E968", VA = "0x1C6E968")]
		public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
		{
			return null;
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x1C6ED8C", Offset = "0x1C6ED8C", VA = "0x1C6ED8C")]
		public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this ExitGames.Client.Photon.Hashtable original)
		{
			return null;
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x1C6EF18", Offset = "0x1C6EF18", VA = "0x1C6EF18")]
		public static void StripKeysWithNullValues(this IDictionary original)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1C6F530", Offset = "0x1C6F530", VA = "0x1C6F530")]
		public static void StripKeysWithNullValues(this ExitGames.Client.Photon.Hashtable original)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1C6F8D0", Offset = "0x1C6F8D0", VA = "0x1C6F8D0")]
		public static bool Contains(this int[] target, int nr)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005A4")]
	public class FriendInfo
	{
		[Token(Token = "0x170004BC")]
		[Obsolete("Use UserId.")]
		public string Name
		{
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x1C6F9BC", Offset = "0x1C6F9BC", VA = "0x1C6F9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		public string UserId
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x1C6F9C4", Offset = "0x1C6F9C4", VA = "0x1C6F9C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x1C6F9CC", Offset = "0x1C6F9CC", VA = "0x1C6F9CC")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004BE")]
		public bool IsOnline
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x1C6F9D4", Offset = "0x1C6F9D4", VA = "0x1C6F9D4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x1C6F9DC", Offset = "0x1C6F9DC", VA = "0x1C6F9DC")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public string Room
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x1C6F9E8", Offset = "0x1C6F9E8", VA = "0x1C6F9E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x1C6F9F0", Offset = "0x1C6F9F0", VA = "0x1C6F9F0")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public bool IsInRoom
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x1C6F9F8", Offset = "0x1C6F9F8", VA = "0x1C6F9F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1C6FA20", Offset = "0x1C6FA20", VA = "0x1C6FA20", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1C6FADC", Offset = "0x1C6FADC", VA = "0x1C6FADC")]
		public FriendInfo()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public enum ClientState
	{
		[Token(Token = "0x400263C")]
		PeerCreated = 0,
		[Token(Token = "0x400263D")]
		Authenticating = 1,
		[Token(Token = "0x400263E")]
		Authenticated = 2,
		[Token(Token = "0x400263F")]
		JoiningLobby = 3,
		[Token(Token = "0x4002640")]
		JoinedLobby = 4,
		[Token(Token = "0x4002641")]
		DisconnectingFromMasterServer = 5,
		[Token(Token = "0x4002642")]
		[Obsolete("Renamed to DisconnectingFromMasterServer")]
		DisconnectingFromMasterserver = 5,
		[Token(Token = "0x4002643")]
		ConnectingToGameServer = 6,
		[Token(Token = "0x4002644")]
		[Obsolete("Renamed to ConnectingToGameServer")]
		ConnectingToGameserver = 6,
		[Token(Token = "0x4002645")]
		ConnectedToGameServer = 7,
		[Token(Token = "0x4002646")]
		[Obsolete("Renamed to ConnectedToGameServer")]
		ConnectedToGameserver = 7,
		[Token(Token = "0x4002647")]
		Joining = 8,
		[Token(Token = "0x4002648")]
		Joined = 9,
		[Token(Token = "0x4002649")]
		Leaving = 10,
		[Token(Token = "0x400264A")]
		DisconnectingFromGameServer = 11,
		[Token(Token = "0x400264B")]
		[Obsolete("Renamed to DisconnectingFromGameServer")]
		DisconnectingFromGameserver = 11,
		[Token(Token = "0x400264C")]
		ConnectingToMasterServer = 12,
		[Token(Token = "0x400264D")]
		[Obsolete("Renamed to ConnectingToMasterServer.")]
		ConnectingToMasterserver = 12,
		[Token(Token = "0x400264E")]
		Disconnecting = 13,
		[Token(Token = "0x400264F")]
		Disconnected = 14,
		[Token(Token = "0x4002650")]
		ConnectedToMasterServer = 15,
		[Token(Token = "0x4002651")]
		[Obsolete("Renamed to ConnectedToMasterServer.")]
		ConnectedToMasterserver = 15,
		[Token(Token = "0x4002652")]
		[Obsolete("Renamed to ConnectedToMasterServer.")]
		ConnectedToMaster = 15,
		[Token(Token = "0x4002653")]
		ConnectingToNameServer = 16,
		[Token(Token = "0x4002654")]
		ConnectedToNameServer = 17,
		[Token(Token = "0x4002655")]
		DisconnectingFromNameServer = 18,
		[Token(Token = "0x4002656")]
		ConnectWithFallbackProtocol = 19
	}
	[Token(Token = "0x20005A6")]
	internal enum JoinType
	{
		[Token(Token = "0x4002658")]
		CreateRoom,
		[Token(Token = "0x4002659")]
		JoinRoom,
		[Token(Token = "0x400265A")]
		JoinRandomRoom,
		[Token(Token = "0x400265B")]
		JoinRandomOrCreateRoom,
		[Token(Token = "0x400265C")]
		JoinOrCreateRoom
	}
	[Token(Token = "0x20005A7")]
	public enum DisconnectCause
	{
		[Token(Token = "0x400265E")]
		None,
		[Token(Token = "0x400265F")]
		ExceptionOnConnect,
		[Token(Token = "0x4002660")]
		DnsExceptionOnConnect,
		[Token(Token = "0x4002661")]
		ServerAddressInvalid,
		[Token(Token = "0x4002662")]
		Exception,
		[Token(Token = "0x4002663")]
		ServerTimeout,
		[Token(Token = "0x4002664")]
		ClientTimeout,
		[Token(Token = "0x4002665")]
		DisconnectByServerLogic,
		[Token(Token = "0x4002666")]
		DisconnectByServerReasonUnknown,
		[Token(Token = "0x4002667")]
		InvalidAuthentication,
		[Token(Token = "0x4002668")]
		CustomAuthenticationFailed,
		[Token(Token = "0x4002669")]
		AuthenticationTicketExpired,
		[Token(Token = "0x400266A")]
		MaxCcuReached,
		[Token(Token = "0x400266B")]
		InvalidRegion,
		[Token(Token = "0x400266C")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x400266D")]
		DisconnectByClientLogic,
		[Token(Token = "0x400266E")]
		DisconnectByOperationLimit,
		[Token(Token = "0x400266F")]
		DisconnectByDisconnectMessage
	}
	[Token(Token = "0x20005A8")]
	public enum ServerConnection
	{
		[Token(Token = "0x4002671")]
		MasterServer,
		[Token(Token = "0x4002672")]
		GameServer,
		[Token(Token = "0x4002673")]
		NameServer
	}
	[Token(Token = "0x20005A9")]
	public enum ClientAppType
	{
		[Token(Token = "0x4002675")]
		Realtime,
		[Token(Token = "0x4002676")]
		Voice,
		[Token(Token = "0x4002677")]
		Fusion
	}
	[Token(Token = "0x20005AA")]
	public enum EncryptionMode
	{
		[Token(Token = "0x4002679")]
		PayloadEncryption = 0,
		[Token(Token = "0x400267A")]
		DatagramEncryption = 10,
		[Token(Token = "0x400267B")]
		DatagramEncryptionRandomSequence = 11,
		[Token(Token = "0x400267C")]
		DatagramEncryptionGCM = 13
	}
	[Token(Token = "0x20005AB")]
	public struct PhotonPortDefinition
	{
		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly PhotonPortDefinition AlternativeUdpPorts;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ushort NameServerPort;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort MasterServerPort;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort GameServerPort;
	}
	[Token(Token = "0x20005AC")]
	public class LoadBalancingClient : IPhotonPeerListener
	{
		[Token(Token = "0x20005AD")]
		private class EncryptionDataParameters
		{
			[Token(Token = "0x40026B5")]
			public const byte Mode = 0;

			[Token(Token = "0x40026B6")]
			public const byte Secret1 = 1;

			[Token(Token = "0x40026B7")]
			public const byte Secret2 = 2;

			[Token(Token = "0x6002522")]
			[Address(RVA = "0x1BFE2F8", Offset = "0x1BFE2F8", VA = "0x1BFE2F8")]
			public EncryptionDataParameters()
			{
			}
		}

		[Token(Token = "0x20005AE")]
		private class CallbackTargetChange
		{
			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly object Target;

			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly bool AddTarget;

			[Token(Token = "0x6002523")]
			[Address(RVA = "0x1BFE300", Offset = "0x1BFE300", VA = "0x1BFE300")]
			public CallbackTargetChange(object target, bool addTarget)
			{
			}
		}

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AuthModeOption AuthMode;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public EncryptionMode EncryptionMode;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object tokenCache;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string NameServerHost;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public PhotonPortDefinition ServerPortOverrides;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string ProxyServerAddress;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ClientState state;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ConnectionCallbacksContainer ConnectionCallbackTargets;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public MatchMakingCallbacksContainer MatchMakingCallbackTargets;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal InRoomCallbacksContainer InRoomCallbackTargets;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal LobbyCallbacksContainer LobbyCallbackTargets;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal WebRpcCallbacksContainer WebRpcCallbackTargets;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal ErrorInfoCallbacksContainer ErrorInfoCallbackTargets;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool EnableLobbyStatistics;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<TypedLobbyInfo> lobbyStatistics;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private JoinType lastJoinType;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EnterRoomParams enterRoomParamsCache;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private OperationResponse failedRoomEntryOperation;

		[Token(Token = "0x40026AA")]
		private const int FriendRequestListMax = 512;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string[] friendListRequested;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public RegionHandler RegionHandler;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string bestRegionSummaryFromStorage;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public string SummaryToCache;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool connectToBestRegion;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly Queue<CallbackTargetChange> callbackTargetChanges;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly HashSet<object> callbackTargets;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int NameServerPortInAppSettings;

		[Token(Token = "0x170004C1")]
		public LoadBalancingPeer LoadBalancingPeer
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1C6FB3C", Offset = "0x1C6FB3C", VA = "0x1C6FB3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1C6FB44", Offset = "0x1C6FB44", VA = "0x1C6FB44")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public SerializationProtocol SerializationProtocol
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x1C6FB4C", Offset = "0x1C6FB4C", VA = "0x1C6FB4C")]
			get
			{
				return default(SerializationProtocol);
			}
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x1C6FB68", Offset = "0x1C6FB68", VA = "0x1C6FB68")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public string AppVersion
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x1C6FB84", Offset = "0x1C6FB84", VA = "0x1C6FB84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x1C6FB8C", Offset = "0x1C6FB8C", VA = "0x1C6FB8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public string AppId
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x1C6FB94", Offset = "0x1C6FB94", VA = "0x1C6FB94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x1C6FB9C", Offset = "0x1C6FB9C", VA = "0x1C6FB9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public ClientAppType ClientType
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x1C6FBA4", Offset = "0x1C6FBA4", VA = "0x1C6FBA4")]
			[CompilerGenerated]
			get
			{
				return default(ClientAppType);
			}
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x1C6FBAC", Offset = "0x1C6FBAC", VA = "0x1C6FBAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x1C6FBB4", Offset = "0x1C6FBB4", VA = "0x1C6FBB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x1C6FBBC", Offset = "0x1C6FBBC", VA = "0x1C6FBBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		public ConnectionProtocol? ExpectedProtocol
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x1C6FBC4", Offset = "0x1C6FBC4", VA = "0x1C6FBC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x1C6FBCC", Offset = "0x1C6FBCC", VA = "0x1C6FBCC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		private object TokenForInit
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x1C6FBD4", Offset = "0x1C6FBD4", VA = "0x1C6FBD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C9")]
		public bool IsUsingNameServer
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x1C6FBF4", Offset = "0x1C6FBF4", VA = "0x1C6FBF4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x1C6FBFC", Offset = "0x1C6FBFC", VA = "0x1C6FBFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public string NameServerAddress
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x1C6FC08", Offset = "0x1C6FC08", VA = "0x1C6FC08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		[Obsolete("Set port overrides in ServerPortOverrides. Not used anymore!")]
		public bool UseAlternativeUdpPorts
		{
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x1C6FE20", Offset = "0x1C6FE20", VA = "0x1C6FE20")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x1C6FE28", Offset = "0x1C6FE28", VA = "0x1C6FE28")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public bool EnableProtocolFallback
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x1C6FE34", Offset = "0x1C6FE34", VA = "0x1C6FE34")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x1C6FE3C", Offset = "0x1C6FE3C", VA = "0x1C6FE3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public string CurrentServerAddress
		{
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x1C6FE48", Offset = "0x1C6FE48", VA = "0x1C6FE48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		public string MasterServerAddress
		{
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x1C6FE64", Offset = "0x1C6FE64", VA = "0x1C6FE64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x1C6FE6C", Offset = "0x1C6FE6C", VA = "0x1C6FE6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		public string GameServerAddress
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x1C6FE74", Offset = "0x1C6FE74", VA = "0x1C6FE74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x1C6FE7C", Offset = "0x1C6FE7C", VA = "0x1C6FE7C")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public ServerConnection Server
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x1C6FE84", Offset = "0x1C6FE84", VA = "0x1C6FE84")]
			[CompilerGenerated]
			get
			{
				return default(ServerConnection);
			}
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x1C6FE8C", Offset = "0x1C6FE8C", VA = "0x1C6FE8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public ClientState State
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x1C6FE94", Offset = "0x1C6FE94", VA = "0x1C6FE94")]
			get
			{
				return default(ClientState);
			}
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x1C6FE9C", Offset = "0x1C6FE9C", VA = "0x1C6FE9C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public bool IsConnected
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x1C6C8B4", Offset = "0x1C6C8B4", VA = "0x1C6C8B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D3")]
		public bool IsConnectedAndReady
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x1C6FED0", Offset = "0x1C6FED0", VA = "0x1C6FED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D4")]
		public DisconnectCause DisconnectedCause
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x1C70328", Offset = "0x1C70328", VA = "0x1C70328")]
			[CompilerGenerated]
			get
			{
				return default(DisconnectCause);
			}
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x1C70330", Offset = "0x1C70330", VA = "0x1C70330")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		public bool InLobby
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x1C70338", Offset = "0x1C70338", VA = "0x1C70338")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D6")]
		public TypedLobby CurrentLobby
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x1C70348", Offset = "0x1C70348", VA = "0x1C70348")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x1C70350", Offset = "0x1C70350", VA = "0x1C70350")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004D7")]
		public Player LocalPlayer
		{
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x1C70358", Offset = "0x1C70358", VA = "0x1C70358")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x1C70360", Offset = "0x1C70360", VA = "0x1C70360")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004D8")]
		public string NickName
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x1C70370", Offset = "0x1C70370", VA = "0x1C70370")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x1C7038C", Offset = "0x1C7038C", VA = "0x1C7038C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public string UserId
		{
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x1C703A0", Offset = "0x1C703A0", VA = "0x1C703A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x1C703B8", Offset = "0x1C703B8", VA = "0x1C703B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DA")]
		public Room CurrentRoom
		{
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x1C70440", Offset = "0x1C70440", VA = "0x1C70440")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x1C70448", Offset = "0x1C70448", VA = "0x1C70448")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		public bool InRoom
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x1C70458", Offset = "0x1C70458", VA = "0x1C70458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DC")]
		public int PlayersOnMasterCount
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x1C7047C", Offset = "0x1C7047C", VA = "0x1C7047C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x1C70484", Offset = "0x1C70484", VA = "0x1C70484")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public int PlayersInRoomsCount
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x1C7048C", Offset = "0x1C7048C", VA = "0x1C7048C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x1C70494", Offset = "0x1C70494", VA = "0x1C70494")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public int RoomsCount
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x1C7049C", Offset = "0x1C7049C", VA = "0x1C7049C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x1C704A4", Offset = "0x1C704A4", VA = "0x1C704A4")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public bool IsFetchingFriendList
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x1C704AC", Offset = "0x1C704AC", VA = "0x1C704AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E0")]
		public string CloudRegion
		{
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x1C704BC", Offset = "0x1C704BC", VA = "0x1C704BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x1C704C4", Offset = "0x1C704C4", VA = "0x1C704C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		public string CurrentCluster
		{
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x1C704D4", Offset = "0x1C704D4", VA = "0x1C704D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x1C704DC", Offset = "0x1C704DC", VA = "0x1C704DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action<ClientState, ClientState> StateChanged
		{
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x1C6FF08", Offset = "0x1C6FF08", VA = "0x1C6FF08")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x1C6FFB8", Offset = "0x1C6FFB8", VA = "0x1C6FFB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action<EventData> EventReceived
		{
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x1C70068", Offset = "0x1C70068", VA = "0x1C70068")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x1C70118", Offset = "0x1C70118", VA = "0x1C70118")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<OperationResponse> OpResponseReceived
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x1C701C8", Offset = "0x1C701C8", VA = "0x1C701C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x1C70278", Offset = "0x1C70278", VA = "0x1C70278")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1C704EC", Offset = "0x1C704EC", VA = "0x1C704EC")]
		public LoadBalancingClient(ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1C70934", Offset = "0x1C70934", VA = "0x1C70934")]
		public LoadBalancingClient(string masterAddress, string appId, string gameVersion, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x1C6FC0C", Offset = "0x1C6FC0C", VA = "0x1C6FC0C")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x1C70994", Offset = "0x1C70994", VA = "0x1C70994", Slot = "8")]
		public virtual bool ConnectUsingSettings(AppSettings appSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1C70D78", Offset = "0x1C70D78", VA = "0x1C70D78")]
		[Obsolete("Use ConnectToMasterServer() instead.")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1C70D84", Offset = "0x1C70D84", VA = "0x1C70D84", Slot = "9")]
		public virtual bool ConnectToMasterServer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1C70F60", Offset = "0x1C70F60", VA = "0x1C70F60")]
		public bool ConnectToNameServer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1C71170", Offset = "0x1C71170", VA = "0x1C71170")]
		public bool ConnectToRegionMaster(string region)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1C71858", Offset = "0x1C71858", VA = "0x1C71858")]
		[Conditional("UNITY_WEBGL")]
		private void CheckConnectSetupWebGl()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1C7185C", Offset = "0x1C7185C", VA = "0x1C7185C")]
		private bool Connect(string serverAddress, string proxyServerAddress, ServerConnection serverType)
		{
			return default(bool);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1C71AFC", Offset = "0x1C71AFC", VA = "0x1C71AFC")]
		public bool ReconnectToMaster()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1C71CD4", Offset = "0x1C71CD4", VA = "0x1C71CD4")]
		public bool ReconnectAndRejoin()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x1C6C8E0", Offset = "0x1C6C8E0", VA = "0x1C6C8E0")]
		public void Disconnect(DisconnectCause cause = DisconnectCause.DisconnectByClientLogic)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x1C71EC8", Offset = "0x1C71EC8", VA = "0x1C71EC8")]
		private void DisconnectToReconnect()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1C71F94", Offset = "0x1C71F94", VA = "0x1C71F94")]
		public void SimulateConnectionLoss(bool simulateTimeout)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1C71434", Offset = "0x1C71434", VA = "0x1C71434")]
		private bool CallAuthenticate()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x1C723D8", Offset = "0x1C723D8", VA = "0x1C723D8")]
		public void Service()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x1C723F0", Offset = "0x1C723F0", VA = "0x1C723F0")]
		private bool OpGetRegions()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1C72474", Offset = "0x1C72474", VA = "0x1C72474")]
		public bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x1C72890", Offset = "0x1C72890", VA = "0x1C72890")]
		public bool OpJoinLobby(TypedLobby lobby)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1C7299C", Offset = "0x1C7299C", VA = "0x1C7299C")]
		public bool OpLeaveLobby()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1C72A1C", Offset = "0x1C72A1C", VA = "0x1C72A1C")]
		public bool OpJoinRandomRoom([Optional] OpJoinRandomRoomParams opJoinRandomRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1C72B84", Offset = "0x1C72B84", VA = "0x1C72B84")]
		public bool OpJoinRandomOrCreateRoom(OpJoinRandomRoomParams opJoinRandomRoomParams, EnterRoomParams createRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x1C72D08", Offset = "0x1C72D08", VA = "0x1C72D08")]
		public bool OpCreateRoom(EnterRoomParams enterRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x1C72DF8", Offset = "0x1C72DF8", VA = "0x1C72DF8")]
		public bool OpJoinOrCreateRoom(EnterRoomParams enterRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1C72EF4", Offset = "0x1C72EF4", VA = "0x1C72EF4")]
		public bool OpJoinRoom(EnterRoomParams enterRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x1C72FF4", Offset = "0x1C72FF4", VA = "0x1C72FF4")]
		public bool OpRejoinRoom(string roomName)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1C73128", Offset = "0x1C73128", VA = "0x1C73128")]
		public bool OpLeaveRoom(bool becomeInactive, bool sendAuthCookie = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x1C73230", Offset = "0x1C73230", VA = "0x1C73230")]
		public bool OpGetGameList(TypedLobby typedLobby, string sqlLobbyFilter)
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x1C73338", Offset = "0x1C73338", VA = "0x1C73338")]
		public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1C73574", Offset = "0x1C73574", VA = "0x1C73574")]
		protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x1C736EC", Offset = "0x1C736EC", VA = "0x1C736EC")]
		public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1C7398C", Offset = "0x1C7398C", VA = "0x1C7398C")]
		protected internal bool OpSetPropertyOfRoom(byte propCode, object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x1C73840", Offset = "0x1C73840", VA = "0x1C73840")]
		protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x1C73A1C", Offset = "0x1C73A1C", VA = "0x1C73A1C", Slot = "10")]
		public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, RaiseEventOptions raiseEventOptions, SendOptions sendOptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x1C73AD4", Offset = "0x1C73AD4", VA = "0x1C73AD4", Slot = "11")]
		public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x1C73B70", Offset = "0x1C73B70", VA = "0x1C73B70")]
		private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable actorProperties, int targetActorNr)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x1C73F78", Offset = "0x1C73F78", VA = "0x1C73F78")]
		private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
		{
			return null;
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x1C74078", Offset = "0x1C74078", VA = "0x1C74078")]
		public void ChangeLocalID(int newID)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x1C741E0", Offset = "0x1C741E0", VA = "0x1C741E0")]
		private void GameEnteredOnGameServer(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x1C744D8", Offset = "0x1C744D8", VA = "0x1C744D8")]
		private void UpdatedActorList(int[] actorsInGame)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x1C745D4", Offset = "0x1C745D4", VA = "0x1C745D4", Slot = "12")]
		protected internal virtual Player CreatePlayer(string actorName, int actorNumber, bool isLocal, ExitGames.Client.Photon.Hashtable actorProperties)
		{
			return null;
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1C74660", Offset = "0x1C74660", VA = "0x1C74660", Slot = "13")]
		protected internal virtual Room CreateRoom(string roomName, RoomOptions opt)
		{
			return null;
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x1C746D8", Offset = "0x1C746D8", VA = "0x1C746D8")]
		private bool CheckIfOpAllowedOnServer(byte opCode, ServerConnection serverConnection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1C72084", Offset = "0x1C72084", VA = "0x1C72084")]
		private bool CheckIfOpCanBeSent(byte opCode, ServerConnection serverConnection, string opName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1C74804", Offset = "0x1C74804", VA = "0x1C74804")]
		private bool CheckIfClientIsReadyToCallOperation(byte opCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1C74910", Offset = "0x1C74910", VA = "0x1C74910", Slot = "14")]
		public virtual void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1C74A20", Offset = "0x1C74A20", VA = "0x1C74A20")]
		private void CallbackRoomEnterFailed(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1C74AA4", Offset = "0x1C74AA4", VA = "0x1C74AA4", Slot = "15")]
		public virtual void OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x1C7628C", Offset = "0x1C7628C", VA = "0x1C7628C", Slot = "16")]
		public virtual void OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x1C76B9C", Offset = "0x1C76B9C", VA = "0x1C76B9C", Slot = "17")]
		public virtual void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1C77AD0", Offset = "0x1C77AD0", VA = "0x1C77AD0", Slot = "18")]
		public virtual void OnMessage(object message)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1C77B44", Offset = "0x1C77B44", VA = "0x1C77B44")]
		private void OnDisconnectMessageReceived(DisconnectMessage obj)
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1C77C44", Offset = "0x1C77C44", VA = "0x1C77C44")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1C76120", Offset = "0x1C76120", VA = "0x1C76120")]
		protected internal static string ReplacePortWithAlternative(string address, ushort replacementPort)
		{
			return null;
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x1C75EC8", Offset = "0x1C75EC8", VA = "0x1C75EC8")]
		private void SetupEncryption(Dictionary<byte, object> encryptionData)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1C77C9C", Offset = "0x1C77C9C", VA = "0x1C77C9C")]
		public bool OpWebRpc(string uriPath, object parameters, bool sendAuthCookie = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x1C77E78", Offset = "0x1C77E78", VA = "0x1C77E78")]
		public void AddCallbackTarget(object target)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1C77F10", Offset = "0x1C77F10", VA = "0x1C77F10")]
		public void RemoveCallbackTarget(object target)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1C777F0", Offset = "0x1C777F0", VA = "0x1C777F0")]
		protected internal void UpdateCallbackTargets()
		{
		}

		[Token(Token = "0x6002520")]
		private void UpdateCallbackTarget<T>(CallbackTargetChange change, List<T> container) where T : class
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public interface IConnectionCallbacks
	{
		[Token(Token = "0x6002524")]
		void OnConnected();

		[Token(Token = "0x6002525")]
		void OnConnectedToMaster();

		[Token(Token = "0x6002526")]
		void OnDisconnected(DisconnectCause cause);

		[Token(Token = "0x6002527")]
		void OnRegionListReceived(RegionHandler regionHandler);

		[Token(Token = "0x6002528")]
		void OnCustomAuthenticationResponse(Dictionary<string, object> data);

		[Token(Token = "0x6002529")]
		void OnCustomAuthenticationFailed(string debugMessage);
	}
	[Token(Token = "0x20005B0")]
	public interface ILobbyCallbacks
	{
		[Token(Token = "0x600252A")]
		void OnJoinedLobby();

		[Token(Token = "0x600252B")]
		void OnLeftLobby();

		[Token(Token = "0x600252C")]
		void OnRoomListUpdate(List<RoomInfo> roomList);

		[Token(Token = "0x600252D")]
		void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics);
	}
	[Token(Token = "0x20005B1")]
	public interface IMatchmakingCallbacks
	{
		[Token(Token = "0x600252E")]
		void OnFriendListUpdate(List<FriendInfo> friendList);

		[Token(Token = "0x600252F")]
		void OnCreatedRoom();

		[Token(Token = "0x6002530")]
		void OnCreateRoomFailed(short returnCode, string message);

		[Token(Token = "0x6002531")]
		void OnJoinedRoom();

		[Token(Token = "0x6002532")]
		void OnJoinRoomFailed(short returnCode, string message);

		[Token(Token = "0x6002533")]
		void OnJoinRandomFailed(short returnCode, string message);

		[Token(Token = "0x6002534")]
		void OnLeftRoom();
	}
	[Token(Token = "0x20005B2")]
	public interface IInRoomCallbacks
	{
		[Token(Token = "0x6002535")]
		void OnPlayerEnteredRoom(Player newPlayer);

		[Token(Token = "0x6002536")]
		void OnPlayerLeftRoom(Player otherPlayer);

		[Token(Token = "0x6002537")]
		void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

		[Token(Token = "0x6002538")]
		void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps);

		[Token(Token = "0x6002539")]
		void OnMasterClientSwitched(Player newMasterClient);
	}
	[Token(Token = "0x20005B3")]
	public interface IOnEventCallback
	{
		[Token(Token = "0x600253A")]
		void OnEvent(EventData photonEvent);
	}
	[Token(Token = "0x20005B4")]
	public interface IWebRpcCallback
	{
		[Token(Token = "0x600253B")]
		void OnWebRpcResponse(OperationResponse response);
	}
	[Token(Token = "0x20005B5")]
	public interface IErrorInfoCallback
	{
		[Token(Token = "0x600253C")]
		void OnErrorInfo(ErrorInfo errorInfo);
	}
	[Token(Token = "0x20005B6")]
	public class ConnectionCallbacksContainer : List<IConnectionCallbacks>, IConnectionCallbacks
	{
		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LoadBalancingClient client;

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x1BFE33C", Offset = "0x1BFE33C", VA = "0x1BFE33C")]
		public ConnectionCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x1BFE3C4", Offset = "0x1BFE3C4", VA = "0x1BFE3C4", Slot = "35")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x1BFE580", Offset = "0x1BFE580", VA = "0x1BFE580", Slot = "36")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x1BFE740", Offset = "0x1BFE740", VA = "0x1BFE740", Slot = "38")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x1BFE908", Offset = "0x1BFE908", VA = "0x1BFE908", Slot = "37")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x1BFEAD0", Offset = "0x1BFEAD0", VA = "0x1BFEAD0", Slot = "39")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x1BFEC98", Offset = "0x1BFEC98", VA = "0x1BFEC98", Slot = "40")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class MatchMakingCallbacksContainer : List<IMatchmakingCallbacks>, IMatchmakingCallbacks
	{
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LoadBalancingClient client;

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x1BFEE60", Offset = "0x1BFEE60", VA = "0x1BFEE60")]
		public MatchMakingCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x1BFEEE8", Offset = "0x1BFEEE8", VA = "0x1BFEEE8", Slot = "36")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x1BFF0A8", Offset = "0x1BFF0A8", VA = "0x1BFF0A8", Slot = "38")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x1BFF268", Offset = "0x1BFF268", VA = "0x1BFF268", Slot = "37")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x1BFF438", Offset = "0x1BFF438", VA = "0x1BFF438", Slot = "40")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x1BFF608", Offset = "0x1BFF608", VA = "0x1BFF608", Slot = "39")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x1BFF7D8", Offset = "0x1BFF7D8", VA = "0x1BFF7D8", Slot = "41")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x1BFF998", Offset = "0x1BFF998", VA = "0x1BFF998", Slot = "35")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}
	}
	[Token(Token = "0x20005B8")]
	internal class InRoomCallbacksContainer : List<IInRoomCallbacks>, IInRoomCallbacks
	{
		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LoadBalancingClient client;

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x1BFFB5C", Offset = "0x1BFFB5C", VA = "0x1BFFB5C")]
		public InRoomCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x1BFFBE4", Offset = "0x1BFFBE4", VA = "0x1BFFBE4", Slot = "35")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x1BFFDA8", Offset = "0x1BFFDA8", VA = "0x1BFFDA8", Slot = "36")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x1BFFF70", Offset = "0x1BFFF70", VA = "0x1BFFF70", Slot = "37")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x1C00138", Offset = "0x1C00138", VA = "0x1C00138", Slot = "38")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProp)
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x1C00308", Offset = "0x1C00308", VA = "0x1C00308", Slot = "39")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}
	}
	[Token(Token = "0x20005B9")]
	internal class LobbyCallbacksContainer : List<ILobbyCallbacks>, ILobbyCallbacks
	{
		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LoadBalancingClient client;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x1C004D0", Offset = "0x1C004D0", VA = "0x1C004D0")]
		public LobbyCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x1C00558", Offset = "0x1C00558", VA = "0x1C00558", Slot = "35")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x1C00714", Offset = "0x1C00714", VA = "0x1C00714", Slot = "36")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x1C008D4", Offset = "0x1C008D4", VA = "0x1C008D4", Slot = "37")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x1C00A9C", Offset = "0x1C00A9C", VA = "0x1C00A9C", Slot = "38")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}
	}
	[Token(Token = "0x20005BA")]
	internal class WebRpcCallbacksContainer : List<IWebRpcCallback>, IWebRpcCallback
	{
		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LoadBalancingClient client;

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x1C00C64", Offset = "0x1C00C64", VA = "0x1C00C64")]
		public WebRpcCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x1C00CEC", Offset = "0x1C00CEC", VA = "0x1C00CEC", Slot = "35")]
		public void OnWebRpcResponse(OperationResponse response)
		{
		}
	}
	[Token(Token = "0x20005BB")]
	internal class ErrorInfoCallbacksContainer : List<IErrorInfoCallback>, IErrorInfoCallback
	{
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LoadBalancingClient client;

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x1C00EB0", Offset = "0x1C00EB0", VA = "0x1C00EB0")]
		public ErrorInfoCallbacksContainer(LoadBalancingClient client)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x1C00F38", Offset = "0x1C00F38", VA = "0x1C00F38", Slot = "35")]
		public void OnErrorInfo(ErrorInfo errorInfo)
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class ErrorInfo
	{
		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Info;

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x1C010FC", Offset = "0x1C010FC", VA = "0x1C010FC")]
		public ErrorInfo(EventData eventData)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x1C01198", Offset = "0x1C01198", VA = "0x1C01198", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005BD")]
	public class LoadBalancingPeer : PhotonPeer
	{
		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly ExitGames.Client.Photon.Pool<ParameterDictionary> paramDictionaryPool;

		[Token(Token = "0x170004E2")]
		[Obsolete("Use RegionHandler.PingImplementation directly.")]
		protected internal static Type PingImplementation
		{
			[Token(Token = "0x600255D")]
			[Address(RVA = "0x1C011E4", Offset = "0x1C011E4", VA = "0x1C011E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600255E")]
			[Address(RVA = "0x1C0122C", Offset = "0x1C0122C", VA = "0x1C0122C")]
			set
			{
			}
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x1C01284", Offset = "0x1C01284", VA = "0x1C01284")]
		public LoadBalancingPeer(ConnectionProtocol protocolType)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x1C0166C", Offset = "0x1C0166C", VA = "0x1C0166C")]
		public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x1C0149C", Offset = "0x1C0149C", VA = "0x1C0149C")]
		[Conditional("SUPPORTED_UNITY")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x1C016E4", Offset = "0x1C016E4", VA = "0x1C016E4", Slot = "17")]
		public virtual bool OpGetRegions(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x1C017D8", Offset = "0x1C017D8", VA = "0x1C017D8", Slot = "18")]
		public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x1C019DC", Offset = "0x1C019DC", VA = "0x1C019DC", Slot = "19")]
		public virtual bool OpLeaveLobby()
		{
			return default(bool);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x1C01AF4", Offset = "0x1C01AF4", VA = "0x1C01AF4")]
		private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions, bool usePropertiesKey = false)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x1C01F5C", Offset = "0x1C01F5C", VA = "0x1C01F5C", Slot = "20")]
		public virtual bool OpCreateRoom(EnterRoomParams opParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x1C02238", Offset = "0x1C02238", VA = "0x1C02238", Slot = "21")]
		public virtual bool OpJoinRoom(EnterRoomParams opParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1C02588", Offset = "0x1C02588", VA = "0x1C02588", Slot = "22")]
		public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x1C028D0", Offset = "0x1C028D0", VA = "0x1C028D0", Slot = "23")]
		public virtual bool OpJoinRandomOrCreateRoom(OpJoinRandomRoomParams opJoinRandomRoomParams, EnterRoomParams createRoomParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x1C02C84", Offset = "0x1C02C84", VA = "0x1C02C84", Slot = "24")]
		public virtual bool OpLeaveRoom(bool becomeInactive, bool sendAuthCookie = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x1C02DF0", Offset = "0x1C02DF0", VA = "0x1C02DF0", Slot = "25")]
		public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x1C031CC", Offset = "0x1C031CC", VA = "0x1C031CC", Slot = "26")]
		public virtual bool OpFindFriends(string[] friendsToFind, [Optional] FindFriendsOptions options)
		{
			return default(bool);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x1C03360", Offset = "0x1C03360", VA = "0x1C03360")]
		public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x1C033E0", Offset = "0x1C033E0", VA = "0x1C033E0")]
		protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webflags)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x1C03764", Offset = "0x1C03764", VA = "0x1C03764")]
		protected bool OpSetPropertyOfRoom(byte propCode, object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x1C03B18", Offset = "0x1C03B18", VA = "0x1C03B18")]
		public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties)
		{
			return default(bool);
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x1C037F4", Offset = "0x1C037F4", VA = "0x1C037F4")]
		protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webflags)
		{
			return default(bool);
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x1C03B90", Offset = "0x1C03B90", VA = "0x1C03B90", Slot = "27")]
		public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
		{
			return default(bool);
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x1C03ECC", Offset = "0x1C03ECC", VA = "0x1C03ECC", Slot = "28")]
		public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x1C044C4", Offset = "0x1C044C4", VA = "0x1C044C4", Slot = "29")]
		public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x1C04670", Offset = "0x1C04670", VA = "0x1C04670", Slot = "30")]
		public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, RaiseEventOptions raiseEventOptions, SendOptions sendOptions)
		{
			return default(bool);
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x1C0494C", Offset = "0x1C0494C", VA = "0x1C0494C", Slot = "31")]
		public virtual bool OpSettings(bool receiveLobbyStats)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005BF")]
	internal enum RoomOptionBit
	{
		[Token(Token = "0x40026C6")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x40026C7")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x40026C8")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x40026C9")]
		PublishUserId = 8,
		[Token(Token = "0x40026CA")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x40026CB")]
		BroadcastPropsChangeToAll = 0x20,
		[Token(Token = "0x40026CC")]
		SuppressPlayerInfo = 0x40
	}
	[Token(Token = "0x20005C0")]
	public class FindFriendsOptions
	{
		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CreatedOnGs;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool Visible;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool Open;

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x1C03338", Offset = "0x1C03338", VA = "0x1C03338")]
		internal int ToIntFlags()
		{
			return default(int);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x1C04C24", Offset = "0x1C04C24", VA = "0x1C04C24")]
		public FindFriendsOptions()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class OpJoinRandomRoomParams
	{
		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte ExpectedMaxPlayers;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public MatchmakingMode MatchingType;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TypedLobby TypedLobby;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SqlLobbyFilter;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] ExpectedUsers;

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1C04C2C", Offset = "0x1C04C2C", VA = "0x1C04C2C")]
		public OpJoinRandomRoomParams()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class EnterRoomParams
	{
		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RoomName;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomOptions RoomOptions;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TypedLobby Lobby;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExitGames.Client.Photon.Hashtable PlayerProperties;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected internal bool OnGameServer;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected internal JoinMode JoinMode;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] ExpectedUsers;

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x1C04C34", Offset = "0x1C04C34", VA = "0x1C04C34")]
		public EnterRoomParams()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class ErrorCode
	{
		[Token(Token = "0x40026DD")]
		public const int Ok = 0;

		[Token(Token = "0x40026DE")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x40026DF")]
		[Obsolete("Use InvalidOperation.")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x40026E0")]
		public const int InvalidOperation = -2;

		[Token(Token = "0x40026E1")]
		public const int InternalServerError = -1;

		[Token(Token = "0x40026E2")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x40026E3")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x40026E4")]
		public const int GameFull = 32765;

		[Token(Token = "0x40026E5")]
		public const int GameClosed = 32764;

		[Token(Token = "0x40026E6")]
		[Obsolete("No longer used, cause random matchmaking is no longer a process.")]
		public const int AlreadyMatched = 32763;

		[Token(Token = "0x40026E7")]
		public const int ServerFull = 32762;

		[Token(Token = "0x40026E8")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x40026E9")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x40026EA")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x40026EB")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x40026EC")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x40026ED")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x40026EE")]
		public const int AuthenticationTicketExpired = 32753;

		[Token(Token = "0x40026EF")]
		public const int PluginReportedError = 32752;

		[Token(Token = "0x40026F0")]
		public const int PluginMismatch = 32751;

		[Token(Token = "0x40026F1")]
		public const int JoinFailedPeerAlreadyJoined = 32750;

		[Token(Token = "0x40026F2")]
		public const int JoinFailedFoundInactiveJoiner = 32749;

		[Token(Token = "0x40026F3")]
		public const int JoinFailedWithRejoinerNotFound = 32748;

		[Token(Token = "0x40026F4")]
		public const int JoinFailedFoundExcludedUserId = 32747;

		[Token(Token = "0x40026F5")]
		public const int JoinFailedFoundActiveJoiner = 32746;

		[Token(Token = "0x40026F6")]
		public const int HttpLimitReached = 32745;

		[Token(Token = "0x40026F7")]
		public const int ExternalHttpCallFailed = 32744;

		[Token(Token = "0x40026F8")]
		public const int OperationLimitReached = 32743;

		[Token(Token = "0x40026F9")]
		public const int SlotError = 32742;

		[Token(Token = "0x40026FA")]
		public const int InvalidEncryptionParameters = 32741;

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x1C04C44", Offset = "0x1C04C44", VA = "0x1C04C44")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class ActorProperties
	{
		[Token(Token = "0x40026FB")]
		public const byte PlayerName = byte.MaxValue;

		[Token(Token = "0x40026FC")]
		public const byte IsInactive = 254;

		[Token(Token = "0x40026FD")]
		public const byte UserId = 253;

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x1C04C4C", Offset = "0x1C04C4C", VA = "0x1C04C4C")]
		public ActorProperties()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class GamePropertyKey
	{
		[Token(Token = "0x40026FE")]
		public const byte MaxPlayers = byte.MaxValue;

		[Token(Token = "0x40026FF")]
		public const byte IsVisible = 254;

		[Token(Token = "0x4002700")]
		public const byte IsOpen = 253;

		[Token(Token = "0x4002701")]
		public const byte PlayerCount = 252;

		[Token(Token = "0x4002702")]
		public const byte Removed = 251;

		[Token(Token = "0x4002703")]
		public const byte PropsListedInLobby = 250;

		[Token(Token = "0x4002704")]
		public const byte CleanupCacheOnLeave = 249;

		[Token(Token = "0x4002705")]
		public const byte MasterClientId = 248;

		[Token(Token = "0x4002706")]
		public const byte ExpectedUsers = 247;

		[Token(Token = "0x4002707")]
		public const byte PlayerTtl = 246;

		[Token(Token = "0x4002708")]
		public const byte EmptyRoomTtl = 245;

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x1C04C54", Offset = "0x1C04C54", VA = "0x1C04C54")]
		public GamePropertyKey()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class EventCode
	{
		[Token(Token = "0x4002709")]
		public const byte GameList = 230;

		[Token(Token = "0x400270A")]
		public const byte GameListUpdate = 229;

		[Token(Token = "0x400270B")]
		public const byte QueueState = 228;

		[Token(Token = "0x400270C")]
		public const byte Match = 227;

		[Token(Token = "0x400270D")]
		public const byte AppStats = 226;

		[Token(Token = "0x400270E")]
		public const byte LobbyStats = 224;

		[Token(Token = "0x400270F")]
		[Obsolete("TCP routing was removed after becoming obsolete.")]
		public const byte AzureNodeInfo = 210;

		[Token(Token = "0x4002710")]
		public const byte Join = byte.MaxValue;

		[Token(Token = "0x4002711")]
		public const byte Leave = 254;

		[Token(Token = "0x4002712")]
		public const byte PropertiesChanged = 253;

		[Token(Token = "0x4002713")]
		[Obsolete("Use PropertiesChanged now.")]
		public const byte SetProperties = 253;

		[Token(Token = "0x4002714")]
		public const byte ErrorInfo = 251;

		[Token(Token = "0x4002715")]
		public const byte CacheSliceChanged = 250;

		[Token(Token = "0x4002716")]
		public const byte AuthEvent = 223;

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1C04C5C", Offset = "0x1C04C5C", VA = "0x1C04C5C")]
		public EventCode()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class ParameterCode
	{
		[Token(Token = "0x4002717")]
		public const byte SuppressRoomEvents = 237;

		[Token(Token = "0x4002718")]
		public const byte EmptyRoomTTL = 236;

		[Token(Token = "0x4002719")]
		public const byte PlayerTTL = 235;

		[Token(Token = "0x400271A")]
		public const byte EventForward = 234;

		[Token(Token = "0x400271B")]
		[Obsolete("Use: IsInactive")]
		public const byte IsComingBack = 233;

		[Token(Token = "0x400271C")]
		public const byte IsInactive = 233;

		[Token(Token = "0x400271D")]
		public const byte CheckUserOnJoin = 232;

		[Token(Token = "0x400271E")]
		public const byte ExpectedValues = 231;

		[Token(Token = "0x400271F")]
		public const byte Address = 230;

		[Token(Token = "0x4002720")]
		public const byte PeerCount = 229;

		[Token(Token = "0x4002721")]
		public const byte GameCount = 228;

		[Token(Token = "0x4002722")]
		public const byte MasterPeerCount = 227;

		[Token(Token = "0x4002723")]
		public const byte UserId = 225;

		[Token(Token = "0x4002724")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4002725")]
		public const byte Position = 223;

		[Token(Token = "0x4002726")]
		public const byte MatchMakingType = 223;

		[Token(Token = "0x4002727")]
		public const byte GameList = 222;

		[Token(Token = "0x4002728")]
		public const byte Token = 221;

		[Token(Token = "0x4002729")]
		public const byte AppVersion = 220;

		[Token(Token = "0x400272A")]
		[Obsolete("TCP routing was removed after becoming obsolete.")]
		public const byte AzureNodeInfo = 210;

		[Token(Token = "0x400272B")]
		[Obsolete("TCP routing was removed after becoming obsolete.")]
		public const byte AzureLocalNodeId = 209;

		[Token(Token = "0x400272C")]
		[Obsolete("TCP routing was removed after becoming obsolete.")]
		public const byte AzureMasterNodeId = 208;

		[Token(Token = "0x400272D")]
		public const byte RoomName = byte.MaxValue;

		[Token(Token = "0x400272E")]
		public const byte Broadcast = 250;

		[Token(Token = "0x400272F")]
		public const byte ActorList = 252;

		[Token(Token = "0x4002730")]
		public const byte ActorNr = 254;

		[Token(Token = "0x4002731")]
		public const byte PlayerProperties = 249;

		[Token(Token = "0x4002732")]
		public const byte CustomEventContent = 245;

		[Token(Token = "0x4002733")]
		public const byte Data = 245;

		[Token(Token = "0x4002734")]
		public const byte Code = 244;

		[Token(Token = "0x4002735")]
		public const byte GameProperties = 248;

		[Token(Token = "0x4002736")]
		public const byte Properties = 251;

		[Token(Token = "0x4002737")]
		public const byte TargetActorNr = 253;

		[Token(Token = "0x4002738")]
		public const byte ReceiverGroup = 246;

		[Token(Token = "0x4002739")]
		public const byte Cache = 247;

		[Token(Token = "0x400273A")]
		public const byte CleanupCacheOnLeave = 241;

		[Token(Token = "0x400273B")]
		public const byte Group = 240;

		[Token(Token = "0x400273C")]
		public const byte Remove = 239;

		[Token(Token = "0x400273D")]
		public const byte PublishUserId = 239;

		[Token(Token = "0x400273E")]
		public const byte Add = 238;

		[Token(Token = "0x400273F")]
		public const byte Info = 218;

		[Token(Token = "0x4002740")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4002741")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4002742")]
		public const byte JoinMode = 215;

		[Token(Token = "0x4002743")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4002744")]
		public const byte MasterClientId = 203;

		[Token(Token = "0x4002745")]
		public const byte FindFriendsRequestList = 1;

		[Token(Token = "0x4002746")]
		public const byte FindFriendsOptions = 2;

		[Token(Token = "0x4002747")]
		public const byte FindFriendsResponseOnlineList = 1;

		[Token(Token = "0x4002748")]
		public const byte FindFriendsResponseRoomIdList = 2;

		[Token(Token = "0x4002749")]
		public const byte LobbyName = 213;

		[Token(Token = "0x400274A")]
		public const byte LobbyType = 212;

		[Token(Token = "0x400274B")]
		public const byte LobbyStats = 211;

		[Token(Token = "0x400274C")]
		public const byte Region = 210;

		[Token(Token = "0x400274D")]
		public const byte UriPath = 209;

		[Token(Token = "0x400274E")]
		public const byte WebRpcParameters = 208;

		[Token(Token = "0x400274F")]
		public const byte WebRpcReturnCode = 207;

		[Token(Token = "0x4002750")]
		public const byte WebRpcReturnMessage = 206;

		[Token(Token = "0x4002751")]
		public const byte CacheSliceIndex = 205;

		[Token(Token = "0x4002752")]
		public const byte Plugins = 204;

		[Token(Token = "0x4002753")]
		public const byte NickName = 202;

		[Token(Token = "0x4002754")]
		public const byte PluginName = 201;

		[Token(Token = "0x4002755")]
		public const byte PluginVersion = 200;

		[Token(Token = "0x4002756")]
		public const byte Cluster = 196;

		[Token(Token = "0x4002757")]
		public const byte ExpectedProtocol = 195;

		[Token(Token = "0x4002758")]
		public const byte CustomInitData = 194;

		[Token(Token = "0x4002759")]
		public const byte EncryptionMode = 193;

		[Token(Token = "0x400275A")]
		public const byte EncryptionData = 192;

		[Token(Token = "0x400275B")]
		public const byte RoomOptionFlags = 191;

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1C04C64", Offset = "0x1C04C64", VA = "0x1C04C64")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class OperationCode
	{
		[Token(Token = "0x400275C")]
		[Obsolete("Exchanging encrpytion keys is done internally in the lib now. Don't expect this operation-result.")]
		public const byte ExchangeKeysForEncryption = 250;

		[Token(Token = "0x400275D")]
		[Obsolete]
		public const byte Join = byte.MaxValue;

		[Token(Token = "0x400275E")]
		public const byte AuthenticateOnce = 231;

		[Token(Token = "0x400275F")]
		public const byte Authenticate = 230;

		[Token(Token = "0x4002760")]
		public const byte JoinLobby = 229;

		[Token(Token = "0x4002761")]
		public const byte LeaveLobby = 228;

		[Token(Token = "0x4002762")]
		public const byte CreateGame = 227;

		[Token(Token = "0x4002763")]
		public const byte JoinGame = 226;

		[Token(Token = "0x4002764")]
		public const byte JoinRandomGame = 225;

		[Token(Token = "0x4002765")]
		public const byte Leave = 254;

		[Token(Token = "0x4002766")]
		public const byte RaiseEvent = 253;

		[Token(Token = "0x4002767")]
		public const byte SetProperties = 252;

		[Token(Token = "0x4002768")]
		public const byte GetProperties = 251;

		[Token(Token = "0x4002769")]
		public const byte ChangeGroups = 248;

		[Token(Token = "0x400276A")]
		public const byte FindFriends = 222;

		[Token(Token = "0x400276B")]
		public const byte GetLobbyStats = 221;

		[Token(Token = "0x400276C")]
		public const byte GetRegions = 220;

		[Token(Token = "0x400276D")]
		public const byte WebRpc = 219;

		[Token(Token = "0x400276E")]
		public const byte ServerSettings = 218;

		[Token(Token = "0x400276F")]
		public const byte GetGameList = 217;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x1C04C6C", Offset = "0x1C04C6C", VA = "0x1C04C6C")]
		public OperationCode()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public enum JoinMode : byte
	{
		[Token(Token = "0x4002771")]
		Default,
		[Token(Token = "0x4002772")]
		CreateIfNotExists,
		[Token(Token = "0x4002773")]
		JoinOrRejoin,
		[Token(Token = "0x4002774")]
		RejoinOnly
	}
	[Token(Token = "0x20005CA")]
	public enum MatchmakingMode : byte
	{
		[Token(Token = "0x4002776")]
		FillRoom,
		[Token(Token = "0x4002777")]
		SerialMatching,
		[Token(Token = "0x4002778")]
		RandomMatching
	}
	[Token(Token = "0x20005CB")]
	public enum ReceiverGroup : byte
	{
		[Token(Token = "0x400277A")]
		Others,
		[Token(Token = "0x400277B")]
		All,
		[Token(Token = "0x400277C")]
		MasterClient
	}
	[Token(Token = "0x20005CC")]
	public enum EventCaching : byte
	{
		[Token(Token = "0x400277E")]
		DoNotCache = 0,
		[Token(Token = "0x400277F")]
		[Obsolete]
		MergeCache = 1,
		[Token(Token = "0x4002780")]
		[Obsolete]
		ReplaceCache = 2,
		[Token(Token = "0x4002781")]
		[Obsolete]
		RemoveCache = 3,
		[Token(Token = "0x4002782")]
		AddToRoomCache = 4,
		[Token(Token = "0x4002783")]
		AddToRoomCacheGlobal = 5,
		[Token(Token = "0x4002784")]
		RemoveFromRoomCache = 6,
		[Token(Token = "0x4002785")]
		RemoveFromRoomCacheForActorsLeft = 7,
		[Token(Token = "0x4002786")]
		SliceIncreaseIndex = 10,
		[Token(Token = "0x4002787")]
		SliceSetIndex = 11,
		[Token(Token = "0x4002788")]
		SlicePurgeIndex = 12,
		[Token(Token = "0x4002789")]
		SlicePurgeUpToIndex = 13
	}
	[Token(Token = "0x20005CD")]
	[Flags]
	public enum PropertyTypeFlag : byte
	{
		[Token(Token = "0x400278B")]
		None = 0,
		[Token(Token = "0x400278C")]
		Game = 1,
		[Token(Token = "0x400278D")]
		Actor = 2,
		[Token(Token = "0x400278E")]
		GameAndActor = 3
	}
	[Token(Token = "0x20005CE")]
	public class RoomOptions
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isVisible;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool isOpen;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte MaxPlayers;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int PlayerTtl;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int EmptyRoomTtl;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool cleanupCacheOnLeave;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] CustomRoomPropertiesForLobby;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Plugins;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool broadcastPropsChangeToAll;

		[Token(Token = "0x170004E3")]
		public bool IsVisible
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x1C04C74", Offset = "0x1C04C74", VA = "0x1C04C74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x1C04C7C", Offset = "0x1C04C7C", VA = "0x1C04C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public bool IsOpen
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x1C04C88", Offset = "0x1C04C88", VA = "0x1C04C88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002588")]
			[Address(RVA = "0x1C04C90", Offset = "0x1C04C90", VA = "0x1C04C90")]
			set
			{
			}
		}

		[Token(Token = "0x170004E5")]
		public bool CleanupCacheOnLeave
		{
			[Token(Token = "0x6002589")]
			[Address(RVA = "0x1C04C9C", Offset = "0x1C04C9C", VA = "0x1C04C9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600258A")]
			[Address(RVA = "0x1C04CA4", Offset = "0x1C04CA4", VA = "0x1C04CA4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public bool SuppressRoomEvents
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x1C04CB0", Offset = "0x1C04CB0", VA = "0x1C04CB0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600258C")]
			[Address(RVA = "0x1C04CB8", Offset = "0x1C04CB8", VA = "0x1C04CB8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public bool SuppressPlayerInfo
		{
			[Token(Token = "0x600258D")]
			[Address(RVA = "0x1C04CC4", Offset = "0x1C04CC4", VA = "0x1C04CC4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600258E")]
			[Address(RVA = "0x1C04CCC", Offset = "0x1C04CCC", VA = "0x1C04CCC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public bool PublishUserId
		{
			[Token(Token = "0x600258F")]
			[Address(RVA = "0x1C04CD8", Offset = "0x1C04CD8", VA = "0x1C04CD8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002590")]
			[Address(RVA = "0x1C04CE0", Offset = "0x1C04CE0", VA = "0x1C04CE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public bool DeleteNullProperties
		{
			[Token(Token = "0x6002591")]
			[Address(RVA = "0x1C04CEC", Offset = "0x1C04CEC", VA = "0x1C04CEC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002592")]
			[Address(RVA = "0x1C04CF4", Offset = "0x1C04CF4", VA = "0x1C04CF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EA")]
		public bool BroadcastPropsChangeToAll
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0x1C04D00", Offset = "0x1C04D00", VA = "0x1C04D00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002594")]
			[Address(RVA = "0x1C04D08", Offset = "0x1C04D08", VA = "0x1C04D08")]
			set
			{
			}
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1C01EE4", Offset = "0x1C01EE4", VA = "0x1C01EE4")]
		public RoomOptions()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class RaiseEventOptions
	{
		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly RaiseEventOptions Default;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventCaching CachingOption;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte InterestGroup;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] TargetActors;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReceiverGroup Receivers;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Obsolete("Not used where SendOptions are a parameter too. Use SendOptions.Channel instead.")]
		public byte SequenceChannel;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WebFlags Flags;

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x1C04D14", Offset = "0x1C04D14", VA = "0x1C04D14")]
		public RaiseEventOptions()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public enum LobbyType : byte
	{
		[Token(Token = "0x40027A5")]
		Default = 0,
		[Token(Token = "0x40027A6")]
		SqlLobby = 2,
		[Token(Token = "0x40027A7")]
		AsyncRandomLobby = 3
	}
	[Token(Token = "0x20005D1")]
	public class TypedLobby
	{
		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LobbyType Type;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TypedLobby Default;

		[Token(Token = "0x170004EB")]
		public bool IsDefault
		{
			[Token(Token = "0x6002598")]
			[Address(RVA = "0x1C019D0", Offset = "0x1C019D0", VA = "0x1C019D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x1C04DF0", Offset = "0x1C04DF0", VA = "0x1C04DF0")]
		internal TypedLobby()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1C04DF8", Offset = "0x1C04DF8", VA = "0x1C04DF8")]
		public TypedLobby(string name, LobbyType type)
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1C04E34", Offset = "0x1C04E34", VA = "0x1C04E34", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D2")]
	public class TypedLobbyInfo : TypedLobby
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int PlayerCount;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int RoomCount;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x1C04F30", Offset = "0x1C04F30", VA = "0x1C04F30", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x1C0510C", Offset = "0x1C0510C", VA = "0x1C0510C")]
		public TypedLobbyInfo()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public enum AuthModeOption
	{
		[Token(Token = "0x40027AE")]
		Auth,
		[Token(Token = "0x40027AF")]
		AuthOnce,
		[Token(Token = "0x40027B0")]
		AuthOnceWss
	}
	[Token(Token = "0x20005D4")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x40027B2")]
		Custom = 0,
		[Token(Token = "0x40027B3")]
		Steam = 1,
		[Token(Token = "0x40027B4")]
		Facebook = 2,
		[Token(Token = "0x40027B5")]
		Oculus = 3,
		[Token(Token = "0x40027B6")]
		PlayStation4 = 4,
		[Token(Token = "0x40027B7")]
		[Obsolete("Use PlayStation4 or PlayStation5 as needed")]
		PlayStation = 4,
		[Token(Token = "0x40027B8")]
		Xbox = 5,
		[Token(Token = "0x40027B9")]
		Viveport = 10,
		[Token(Token = "0x40027BA")]
		NintendoSwitch = 11,
		[Token(Token = "0x40027BB")]
		PlayStation5 = 12,
		[Token(Token = "0x40027BC")]
		[Obsolete("Use PlayStation4 or PlayStation5 as needed")]
		Playstation5 = 12,
		[Token(Token = "0x40027BD")]
		Epic = 13,
		[Token(Token = "0x40027BE")]
		FacebookGaming = 15,
		[Token(Token = "0x40027BF")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20005D5")]
	public class AuthenticationValues
	{
		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x170004EC")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0x1C05164", Offset = "0x1C05164", VA = "0x1C05164")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x1C0516C", Offset = "0x1C0516C", VA = "0x1C0516C")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public string AuthGetParameters
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x1C05174", Offset = "0x1C05174", VA = "0x1C05174")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x1C0517C", Offset = "0x1C0517C", VA = "0x1C0517C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public object AuthPostData
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x1C05184", Offset = "0x1C05184", VA = "0x1C05184")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x1C0518C", Offset = "0x1C0518C", VA = "0x1C0518C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public object Token
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x1C05194", Offset = "0x1C05194", VA = "0x1C05194")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x1C0519C", Offset = "0x1C0519C", VA = "0x1C0519C")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public string UserId
		{
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x1C051A4", Offset = "0x1C051A4", VA = "0x1C051A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0x1C051AC", Offset = "0x1C051AC", VA = "0x1C051AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x1C051B4", Offset = "0x1C051B4", VA = "0x1C051B4")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x1C051C4", Offset = "0x1C051C4", VA = "0x1C051C4")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x1C051FC", Offset = "0x1C051FC", VA = "0x1C051FC", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1C0523C", Offset = "0x1C0523C", VA = "0x1C0523C", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x1C05244", Offset = "0x1C05244", VA = "0x1C05244", Slot = "6")]
		public virtual void SetAuthPostData(Dictionary<string, object> dictData)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1C0524C", Offset = "0x1C0524C", VA = "0x1C0524C", Slot = "7")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x1C05450", Offset = "0x1C05450", VA = "0x1C05450", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x1C056A8", Offset = "0x1C056A8", VA = "0x1C056A8")]
		public AuthenticationValues CopyTo(AuthenticationValues copy)
		{
			return null;
		}
	}
	[Token(Token = "0x20005D6")]
	public abstract class PhotonPing : IDisposable
	{
		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string DebugString;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Successful;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected internal bool GotResult;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected internal int PingLength;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected internal byte[] PingBytes;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected internal byte PingId;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RandomIdProvider;

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x1C05708", Offset = "0x1C05708", VA = "0x1C05708", Slot = "5")]
		public virtual bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1C05748", Offset = "0x1C05748", VA = "0x1C05748", Slot = "6")]
		public virtual bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1C05788", Offset = "0x1C05788", VA = "0x1C05788", Slot = "7")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1C057C8", Offset = "0x1C057C8", VA = "0x1C057C8")]
		protected internal void Init()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1C05844", Offset = "0x1C05844", VA = "0x1C05844")]
		protected PhotonPing()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class PingMono : PhotonPing
	{
		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket sock;

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x1C05984", Offset = "0x1C05984", VA = "0x1C05984", Slot = "5")]
		public override bool StartPing(string ip)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1C05C38", Offset = "0x1C05C38", VA = "0x1C05C38", Slot = "6")]
		public override bool Done()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1C05E74", Offset = "0x1C05E74", VA = "0x1C05E74", Slot = "7")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1C05F1C", Offset = "0x1C05F1C", VA = "0x1C05F1C")]
		public PingMono()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class Player
	{
		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int actorNumber;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool IsLocal;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string nickName;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public object TagObject;

		[Token(Token = "0x170004F1")]
		protected internal Room RoomReference
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x1C05F70", Offset = "0x1C05F70", VA = "0x1C05F70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x1C05F78", Offset = "0x1C05F78", VA = "0x1C05F78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public int ActorNumber
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x1C05F80", Offset = "0x1C05F80", VA = "0x1C05F80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004F3")]
		public bool HasRejoined
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x1C05F88", Offset = "0x1C05F88", VA = "0x1C05F88")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x1C05F90", Offset = "0x1C05F90", VA = "0x1C05F90")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public string NickName
		{
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x1C05F9C", Offset = "0x1C05F9C", VA = "0x1C05F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x1C05FA4", Offset = "0x1C05FA4", VA = "0x1C05FA4")]
			set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public string UserId
		{
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x1C060CC", Offset = "0x1C060CC", VA = "0x1C060CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x1C060D4", Offset = "0x1C060D4", VA = "0x1C060D4")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		public bool IsMasterClient
		{
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x1C060DC", Offset = "0x1C060DC", VA = "0x1C060DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F7")]
		public bool IsInactive
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x1C06100", Offset = "0x1C06100", VA = "0x1C06100")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x1C06108", Offset = "0x1C06108", VA = "0x1C06108")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004F8")]
		public ExitGames.Client.Photon.Hashtable CustomProperties
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x1C06114", Offset = "0x1C06114", VA = "0x1C06114")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x1C0611C", Offset = "0x1C0611C", VA = "0x1C0611C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x1C06124", Offset = "0x1C06124", VA = "0x1C06124")]
		protected internal Player(string nickName, int actorNumber, bool isLocal)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x1C06130", Offset = "0x1C06130", VA = "0x1C06130")]
		protected internal Player(string nickName, int actorNumber, bool isLocal, ExitGames.Client.Photon.Hashtable playerProperties)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x1C06228", Offset = "0x1C06228", VA = "0x1C06228")]
		public Player Get(int id)
		{
			return null;
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1C06244", Offset = "0x1C06244", VA = "0x1C06244")]
		public Player GetNext()
		{
			return null;
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1C06448", Offset = "0x1C06448", VA = "0x1C06448")]
		public Player GetNextFor(Player currentPlayer)
		{
			return null;
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1C0624C", Offset = "0x1C0624C", VA = "0x1C0624C")]
		public Player GetNextFor(int currentPlayerId)
		{
			return null;
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1C0645C", Offset = "0x1C0645C", VA = "0x1C0645C", Slot = "4")]
		protected internal virtual void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1C06658", Offset = "0x1C06658", VA = "0x1C06658", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1C066E0", Offset = "0x1C066E0", VA = "0x1C066E0")]
		public string ToStringFull()
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1C068EC", Offset = "0x1C068EC", VA = "0x1C068EC", Slot = "0")]
		public override bool Equals(object p)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x1C069A0", Offset = "0x1C069A0", VA = "0x1C069A0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x1C069A8", Offset = "0x1C069A8", VA = "0x1C069A8")]
		protected internal void ChangeLocalID(int newID)
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x1C069B8", Offset = "0x1C069B8", VA = "0x1C069B8")]
		public bool SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x1C06018", Offset = "0x1C06018", VA = "0x1C06018")]
		private bool SetPlayerNameProperty()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005D9")]
	public class Region
	{
		[Token(Token = "0x170004F9")]
		public string Code
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x1C06B98", Offset = "0x1C06B98", VA = "0x1C06B98")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x1C06BA0", Offset = "0x1C06BA0", VA = "0x1C06BA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004FA")]
		public string Cluster
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x1C06BA8", Offset = "0x1C06BA8", VA = "0x1C06BA8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x1C06BB0", Offset = "0x1C06BB0", VA = "0x1C06BB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004FB")]
		public string HostAndPort
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x1C06BB8", Offset = "0x1C06BB8", VA = "0x1C06BB8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x1C06BC0", Offset = "0x1C06BC0", VA = "0x1C06BC0")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004FC")]
		public int Ping
		{
			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x1C06BC8", Offset = "0x1C06BC8", VA = "0x1C06BC8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x1C06BD0", Offset = "0x1C06BD0", VA = "0x1C06BD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004FD")]
		public bool WasPinged
		{
			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x1C06BD8", Offset = "0x1C06BD8", VA = "0x1C06BD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1C06BEC", Offset = "0x1C06BEC", VA = "0x1C06BEC")]
		public Region(string code, string address)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x1C06D2C", Offset = "0x1C06D2C", VA = "0x1C06D2C")]
		public Region(string code, int ping)
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1C06C38", Offset = "0x1C06C38", VA = "0x1C06C38")]
		private void SetCodeAndCluster(string codeAsString)
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x1C06D64", Offset = "0x1C06D64", VA = "0x1C06D64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1C06D6C", Offset = "0x1C06D6C", VA = "0x1C06D6C")]
		public string ToString(bool compact = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20005DA")]
	public class RegionHandler
	{
		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type PingImplementation;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string availableRegionCodes;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Region bestRegionCache;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RegionPinger> pingerList;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<RegionHandler> onCompleteCall;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int previousPing;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string previousSummaryProvided;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected internal static ushort PortToPingOverride;

		[Token(Token = "0x170004FE")]
		public List<Region> EnabledRegions
		{
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x1C06E7C", Offset = "0x1C06E7C", VA = "0x1C06E7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x1C06E84", Offset = "0x1C06E84", VA = "0x1C06E84")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x170004FF")]
		public Region BestRegion
		{
			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x1C06E8C", Offset = "0x1C06E8C", VA = "0x1C06E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		public string SummaryToCache
		{
			[Token(Token = "0x60025E8")]
			[Address(RVA = "0x1C06FF0", Offset = "0x1C06FF0", VA = "0x1C06FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000501")]
		public bool IsPinging
		{
			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x1C07888", Offset = "0x1C07888", VA = "0x1C07888")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0x1C07890", Offset = "0x1C07890", VA = "0x1C07890")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1C071F8", Offset = "0x1C071F8", VA = "0x1C071F8")]
		public string GetResults()
		{
			return null;
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1C0757C", Offset = "0x1C0757C", VA = "0x1C0757C")]
		public void SetRegions(OperationResponse opGetRegions)
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x1C0789C", Offset = "0x1C0789C", VA = "0x1C0789C")]
		public RegionHandler(ushort masterServerPortOverride = 0)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x1C07954", Offset = "0x1C07954", VA = "0x1C07954")]
		public bool PingMinimumOfRegions(Action<RegionHandler> onCompleteCallback, string previousSummary)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x1C08480", Offset = "0x1C08480", VA = "0x1C08480")]
		private void OnPreferredRegionPinged(Region preferredRegion)
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1C07D6C", Offset = "0x1C07D6C", VA = "0x1C07D6C")]
		private bool PingEnabledRegions()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x1C084E0", Offset = "0x1C084E0", VA = "0x1C084E0")]
		private void OnRegionDone(Region region)
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class RegionPinger
	{
		[Token(Token = "0x20005DE")]
		[CompilerGenerated]
		private sealed class <RegionPingCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RegionPinger <>4__this;

			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <rttSum>5__2;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <replyCount>5__3;

			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stopwatch <sw>5__4;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <overtime>5__5;

			[Token(Token = "0x17000503")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002605")]
				[Address(RVA = "0x1C0959C", Offset = "0x1C0959C", VA = "0x1C0959C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002607")]
				[Address(RVA = "0x1C095E4", Offset = "0x1C095E4", VA = "0x1C095E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002602")]
			[Address(RVA = "0x1C09024", Offset = "0x1C09024", VA = "0x1C09024")]
			[DebuggerHidden]
			public <RegionPingCoroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002603")]
			[Address(RVA = "0x1C090AC", Offset = "0x1C090AC", VA = "0x1C090AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0x1C090B0", Offset = "0x1C090B0", VA = "0x1C090B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x1C095A4", Offset = "0x1C095A4", VA = "0x1C095A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int Attempts;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool IgnoreInitialAttempt;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int MaxMilliseconsPerPing;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int PingWhenFailed;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Region region;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string regionAddress;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CurrentAttempt;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<Region> onDoneCall;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhotonPing ping;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> rttResults;

		[Token(Token = "0x17000502")]
		public bool Done
		{
			[Token(Token = "0x60025F7")]
			[Address(RVA = "0x1C08830", Offset = "0x1C08830", VA = "0x1C08830")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0x1C08838", Offset = "0x1C08838", VA = "0x1C08838")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x1C080FC", Offset = "0x1C080FC", VA = "0x1C080FC")]
		public RegionPinger(Region region, Action<Region> onDoneCallback)
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1C08844", Offset = "0x1C08844", VA = "0x1C08844")]
		private PhotonPing GetPingImplementation()
		{
			return null;
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1C081A8", Offset = "0x1C081A8", VA = "0x1C081A8")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1C08C50", Offset = "0x1C08C50", VA = "0x1C08C50")]
		protected internal void RegionPingPooled(object context)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1C08C54", Offset = "0x1C08C54", VA = "0x1C08C54")]
		protected internal bool RegionPingThreaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1C08FB0", Offset = "0x1C08FB0", VA = "0x1C08FB0")]
		[IteratorStateMachine(typeof(<RegionPingCoroutine>d__19))]
		protected internal IEnumerator RegionPingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1C07488", Offset = "0x1C07488", VA = "0x1C07488")]
		public string GetResults()
		{
			return null;
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1C089E8", Offset = "0x1C089E8", VA = "0x1C089E8")]
		public static string ResolveHost(string hostName)
		{
			return null;
		}
	}
	[Token(Token = "0x20005DF")]
	public class Room : RoomInfo
	{
		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isOffline;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<int, Player> players;

		[Token(Token = "0x17000505")]
		public LoadBalancingClient LoadBalancingClient
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0x1C095EC", Offset = "0x1C095EC", VA = "0x1C095EC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002609")]
			[Address(RVA = "0x1C095F4", Offset = "0x1C095F4", VA = "0x1C095F4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		public new string Name
		{
			[Token(Token = "0x600260A")]
			[Address(RVA = "0x1C095FC", Offset = "0x1C095FC", VA = "0x1C095FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600260B")]
			[Address(RVA = "0x1C09604", Offset = "0x1C09604", VA = "0x1C09604")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000507")]
		public bool IsOffline
		{
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x1C0960C", Offset = "0x1C0960C", VA = "0x1C0960C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600260D")]
			[Address(RVA = "0x1C09614", Offset = "0x1C09614", VA = "0x1C09614")]
			private set
			{
			}
		}

		[Token(Token = "0x17000508")]
		public new bool IsOpen
		{
			[Token(Token = "0x600260E")]
			[Address(RVA = "0x1C09620", Offset = "0x1C09620", VA = "0x1C09620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600260F")]
			[Address(RVA = "0x1C09628", Offset = "0x1C09628", VA = "0x1C09628")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public new bool IsVisible
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x1C09708", Offset = "0x1C09708", VA = "0x1C09708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002611")]
			[Address(RVA = "0x1C09710", Offset = "0x1C09710", VA = "0x1C09710")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public new byte MaxPlayers
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0x1C097F0", Offset = "0x1C097F0", VA = "0x1C097F0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002613")]
			[Address(RVA = "0x1C097F8", Offset = "0x1C097F8", VA = "0x1C097F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public new byte PlayerCount
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0x1C098D8", Offset = "0x1C098D8", VA = "0x1C098D8")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700050C")]
		public Dictionary<int, Player> Players
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0x1C09928", Offset = "0x1C09928", VA = "0x1C09928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002616")]
			[Address(RVA = "0x1C09930", Offset = "0x1C09930", VA = "0x1C09930")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public string[] ExpectedUsers
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0x1C09938", Offset = "0x1C09938", VA = "0x1C09938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		public int PlayerTtl
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x1C09940", Offset = "0x1C09940", VA = "0x1C09940")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002619")]
			[Address(RVA = "0x1C09948", Offset = "0x1C09948", VA = "0x1C09948")]
			set
			{
			}
		}

		[Token(Token = "0x1700050F")]
		public int EmptyRoomTtl
		{
			[Token(Token = "0x600261A")]
			[Address(RVA = "0x1C099DC", Offset = "0x1C099DC", VA = "0x1C099DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600261B")]
			[Address(RVA = "0x1C099E4", Offset = "0x1C099E4", VA = "0x1C099E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000510")]
		public int MasterClientId
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0x1C09A78", Offset = "0x1C09A78", VA = "0x1C09A78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000511")]
		public string[] PropertiesListedInLobby
		{
			[Token(Token = "0x600261D")]
			[Address(RVA = "0x1C09A80", Offset = "0x1C09A80", VA = "0x1C09A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600261E")]
			[Address(RVA = "0x1C09A88", Offset = "0x1C09A88", VA = "0x1C09A88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000512")]
		public bool AutoCleanUp
		{
			[Token(Token = "0x600261F")]
			[Address(RVA = "0x1C09A90", Offset = "0x1C09A90", VA = "0x1C09A90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000513")]
		public bool BroadcastPropertiesChangeToAll
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x1C09A98", Offset = "0x1C09A98", VA = "0x1C09A98")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002621")]
			[Address(RVA = "0x1C09AA0", Offset = "0x1C09AA0", VA = "0x1C09AA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000514")]
		public bool SuppressRoomEvents
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x1C09AAC", Offset = "0x1C09AAC", VA = "0x1C09AAC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002623")]
			[Address(RVA = "0x1C09AB4", Offset = "0x1C09AB4", VA = "0x1C09AB4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000515")]
		public bool SuppressPlayerInfo
		{
			[Token(Token = "0x6002624")]
			[Address(RVA = "0x1C09AC0", Offset = "0x1C09AC0", VA = "0x1C09AC0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002625")]
			[Address(RVA = "0x1C09AC8", Offset = "0x1C09AC8", VA = "0x1C09AC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public bool PublishUserId
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0x1C09AD4", Offset = "0x1C09AD4", VA = "0x1C09AD4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002627")]
			[Address(RVA = "0x1C09ADC", Offset = "0x1C09ADC", VA = "0x1C09ADC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public bool DeleteNullProperties
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0x1C09AE8", Offset = "0x1C09AE8", VA = "0x1C09AE8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002629")]
			[Address(RVA = "0x1C09AF0", Offset = "0x1C09AF0", VA = "0x1C09AF0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x1C09AFC", Offset = "0x1C09AFC", VA = "0x1C09AFC")]
		public Room(string roomName, RoomOptions options, bool isOffline = false)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x1C09CA8", Offset = "0x1C09CA8", VA = "0x1C09CA8")]
		internal void InternalCacheRoomFlags(int roomFlags)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x1C09CE0", Offset = "0x1C09CE0", VA = "0x1C09CE0", Slot = "4")]
		protected internal override void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x1C0A208", Offset = "0x1C0A208", VA = "0x1C0A208", Slot = "5")]
		public virtual bool SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, [Optional] WebFlags webFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x1C0A34C", Offset = "0x1C0A34C", VA = "0x1C0A34C")]
		public bool SetPropertiesListedInLobby(string[] lobbyProps)
		{
			return default(bool);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x1C0A3F0", Offset = "0x1C0A3F0", VA = "0x1C0A3F0", Slot = "6")]
		protected internal virtual void RemovePlayer(Player player)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x1C0A45C", Offset = "0x1C0A45C", VA = "0x1C0A45C", Slot = "7")]
		protected internal virtual void RemovePlayer(int id)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x1C0A48C", Offset = "0x1C0A48C", VA = "0x1C0A48C")]
		public bool SetMasterClient(Player masterClientPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x1C0A5AC", Offset = "0x1C0A5AC", VA = "0x1C0A5AC", Slot = "8")]
		public virtual bool AddPlayer(Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x1C0A630", Offset = "0x1C0A630", VA = "0x1C0A630", Slot = "9")]
		public virtual Player StorePlayer(Player player)
		{
			return null;
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x1C0A6A8", Offset = "0x1C0A6A8", VA = "0x1C0A6A8", Slot = "10")]
		public virtual Player GetPlayer(int id, bool findMaster = false)
		{
			return null;
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x1C0A72C", Offset = "0x1C0A72C", VA = "0x1C0A72C")]
		public bool ClearExpectedUsers()
		{
			return default(bool);
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x1C0A898", Offset = "0x1C0A898", VA = "0x1C0A898")]
		public bool SetExpectedUsers(string[] newExpectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x1C0A7A4", Offset = "0x1C0A7A4", VA = "0x1C0A7A4")]
		private bool SetExpectedUsers(string[] newExpectedUsers, string[] oldExpectedUsers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x1C0A928", Offset = "0x1C0A928", VA = "0x1C0A928", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1C0AB88", Offset = "0x1C0AB88", VA = "0x1C0AB88")]
		public new string ToStringFull()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E0")]
	public class RoomInfo
	{
		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool RemovedFromList;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExitGames.Client.Photon.Hashtable customProperties;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected byte maxPlayers;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int emptyRoomTtl;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int playerTtl;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string[] expectedUsers;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool isOpen;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool isVisible;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		protected bool autoCleanUp;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string name;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int masterClientId;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected string[] propertiesListedInLobby;

		[Token(Token = "0x17000518")]
		public ExitGames.Client.Photon.Hashtable CustomProperties
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0x1C0AE54", Offset = "0x1C0AE54", VA = "0x1C0AE54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000519")]
		public string Name
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0x1C0AE5C", Offset = "0x1C0AE5C", VA = "0x1C0AE5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		public int PlayerCount
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0x1C0AE64", Offset = "0x1C0AE64", VA = "0x1C0AE64")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0x1C0AE6C", Offset = "0x1C0AE6C", VA = "0x1C0AE6C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		public byte MaxPlayers
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0x1C0AE74", Offset = "0x1C0AE74", VA = "0x1C0AE74")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700051C")]
		public bool IsOpen
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0x1C0AE7C", Offset = "0x1C0AE7C", VA = "0x1C0AE7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700051D")]
		public bool IsVisible
		{
			[Token(Token = "0x6002640")]
			[Address(RVA = "0x1C0AE84", Offset = "0x1C0AE84", VA = "0x1C0AE84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1C09BF0", Offset = "0x1C09BF0", VA = "0x1C09BF0")]
		protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable roomProperties)
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1C0AE8C", Offset = "0x1C0AE8C", VA = "0x1C0AE8C", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1C0AF2C", Offset = "0x1C0AF2C", VA = "0x1C0AF2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1C0AF4C", Offset = "0x1C0AF4C", VA = "0x1C0AF4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x1C0B1B8", Offset = "0x1C0B1B8", VA = "0x1C0B1B8")]
		public string ToStringFull()
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x1C09D4C", Offset = "0x1C09D4C", VA = "0x1C09D4C", Slot = "4")]
		protected internal virtual void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
		{
		}
	}
	[Token(Token = "0x20005E1")]
	[DisallowMultipleComponent]
	public class SupportLogger : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, IInRoomCallbacks, ILobbyCallbacks, IErrorInfoCallback
	{
		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LogTrafficStats;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient client;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stopwatch startStopwatch;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool initialOnApplicationPauseSkipped;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int pingMax;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int pingMin;

		[Token(Token = "0x1700051E")]
		public LoadBalancingClient Client
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x1C0B490", Offset = "0x1C0B490", VA = "0x1C0B490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002648")]
			[Address(RVA = "0x1C0B498", Offset = "0x1C0B498", VA = "0x1C0B498")]
			set
			{
			}
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x1C0B500", Offset = "0x1C0B500", VA = "0x1C0B500")]
		protected void Start()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1C0BFD0", Offset = "0x1C0BFD0", VA = "0x1C0BFD0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x1C0BFD8", Offset = "0x1C0BFD8", VA = "0x1C0BFD8")]
		protected void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1C0C30C", Offset = "0x1C0C30C", VA = "0x1C0C30C")]
		protected void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x1C0C314", Offset = "0x1C0C314", VA = "0x1C0C314")]
		public void StartLogStats()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x1C0C368", Offset = "0x1C0C368", VA = "0x1C0C368")]
		public void StopLogStats()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x1C0C3B4", Offset = "0x1C0C3B4", VA = "0x1C0C3B4")]
		private void StartTrackValues()
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x1C0C408", Offset = "0x1C0C408", VA = "0x1C0C408")]
		private void StopTrackValues()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1C0C12C", Offset = "0x1C0C12C", VA = "0x1C0C12C")]
		private string GetFormattedTimestamp()
		{
			return null;
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x1C0C454", Offset = "0x1C0C454", VA = "0x1C0C454")]
		private void TrackValues()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x1C0C4A0", Offset = "0x1C0C4A0", VA = "0x1C0C4A0")]
		public void LogStats()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x1C0B594", Offset = "0x1C0B594", VA = "0x1C0B594")]
		private void LogBasics()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x1C0C6C0", Offset = "0x1C0C6C0", VA = "0x1C0C6C0", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x1C0C7CC", Offset = "0x1C0C7CC", VA = "0x1C0C7CC", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1C0C85C", Offset = "0x1C0C85C", VA = "0x1C0C85C", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1C0C8EC", Offset = "0x1C0C8EC", VA = "0x1C0C8EC", Slot = "22")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1C0C9CC", Offset = "0x1C0C9CC", VA = "0x1C0C9CC", Slot = "23")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1C0CA5C", Offset = "0x1C0CA5C", VA = "0x1C0CA5C", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1C0CCE0", Offset = "0x1C0CCE0", VA = "0x1C0CCE0", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x1C0CFE8", Offset = "0x1C0CFE8", VA = "0x1C0CFE8", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x1C0D26C", Offset = "0x1C0D26C", VA = "0x1C0D26C", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x1C0D4F0", Offset = "0x1C0D4F0", VA = "0x1C0D4F0", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1C0D7F8", Offset = "0x1C0D7F8", VA = "0x1C0D7F8", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1C0D888", Offset = "0x1C0D888", VA = "0x1C0D888", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x1C0D9A4", Offset = "0x1C0D9A4", VA = "0x1C0D9A4", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1C0DA34", Offset = "0x1C0DA34", VA = "0x1C0DA34", Slot = "24")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x1C0DB04", Offset = "0x1C0DB04", VA = "0x1C0DB04", Slot = "17")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x1C0DBDC", Offset = "0x1C0DBDC", VA = "0x1C0DBDC", Slot = "18")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x1C0DCB4", Offset = "0x1C0DCB4", VA = "0x1C0DCB4", Slot = "19")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1C0DD44", Offset = "0x1C0DD44", VA = "0x1C0DD44", Slot = "20")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x1C0DDD4", Offset = "0x1C0DDD4", VA = "0x1C0DDD4", Slot = "21")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1C0DEAC", Offset = "0x1C0DEAC", VA = "0x1C0DEAC", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x1C0DFA0", Offset = "0x1C0DFA0", VA = "0x1C0DFA0", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x1C0E058", Offset = "0x1C0E058", VA = "0x1C0E058", Slot = "25")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x1C0E0E8", Offset = "0x1C0E0E8", VA = "0x1C0E0E8", Slot = "26")]
		public void OnErrorInfo(ErrorInfo errorInfo)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x1C0E160", Offset = "0x1C0E160", VA = "0x1C0E160")]
		public SupportLogger()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class WebRpcResponse
	{
		[Token(Token = "0x1700051F")]
		public string Name
		{
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x1C0E170", Offset = "0x1C0E170", VA = "0x1C0E170")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600266E")]
			[Address(RVA = "0x1C0E178", Offset = "0x1C0E178", VA = "0x1C0E178")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000520")]
		public int ResultCode
		{
			[Token(Token = "0x600266F")]
			[Address(RVA = "0x1C0E180", Offset = "0x1C0E180", VA = "0x1C0E180")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x1C0E188", Offset = "0x1C0E188", VA = "0x1C0E188")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000521")]
		[Obsolete("Use ResultCode instead")]
		public int ReturnCode
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0x1C0E190", Offset = "0x1C0E190", VA = "0x1C0E190")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000522")]
		public string Message
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0x1C0E198", Offset = "0x1C0E198", VA = "0x1C0E198")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002673")]
			[Address(RVA = "0x1C0E1A0", Offset = "0x1C0E1A0", VA = "0x1C0E1A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000523")]
		[Obsolete("Use Message instead")]
		public string DebugMessage
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0x1C0E1A8", Offset = "0x1C0E1A8", VA = "0x1C0E1A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000524")]
		public Dictionary<string, object> Parameters
		{
			[Token(Token = "0x6002675")]
			[Address(RVA = "0x1C0E1B0", Offset = "0x1C0E1B0", VA = "0x1C0E1B0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002676")]
			[Address(RVA = "0x1C0E1B8", Offset = "0x1C0E1B8", VA = "0x1C0E1B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1C0E1C0", Offset = "0x1C0E1C0", VA = "0x1C0E1C0")]
		public WebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x1C0E394", Offset = "0x1C0E394", VA = "0x1C0E394")]
		public string ToStringFull()
		{
			return null;
		}
	}
	[Token(Token = "0x20005E3")]
	public class WebFlags
	{
		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly WebFlags Default;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte WebhookFlags;

		[Token(Token = "0x400281A")]
		public const byte HttpForwardConst = 1;

		[Token(Token = "0x400281B")]
		public const byte SendAuthCookieConst = 2;

		[Token(Token = "0x400281C")]
		public const byte SendSyncConst = 4;

		[Token(Token = "0x400281D")]
		public const byte SendStateConst = 8;

		[Token(Token = "0x17000525")]
		public bool HttpForward
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0x1C03758", Offset = "0x1C03758", VA = "0x1C03758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600267A")]
			[Address(RVA = "0x1C0E564", Offset = "0x1C0E564", VA = "0x1C0E564")]
			set
			{
			}
		}

		[Token(Token = "0x17000526")]
		public bool SendAuthCookie
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0x1C0E580", Offset = "0x1C0E580", VA = "0x1C0E580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x1C0E58C", Offset = "0x1C0E58C", VA = "0x1C0E58C")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public bool SendSync
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x1C0E5A8", Offset = "0x1C0E5A8", VA = "0x1C0E5A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600267E")]
			[Address(RVA = "0x1C0E5B4", Offset = "0x1C0E5B4", VA = "0x1C0E5B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public bool SendState
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0x1C0E5D0", Offset = "0x1C0E5D0", VA = "0x1C0E5D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002680")]
			[Address(RVA = "0x1C0E5DC", Offset = "0x1C0E5DC", VA = "0x1C0E5DC")]
			set
			{
			}
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x1C0E5F8", Offset = "0x1C0E5F8", VA = "0x1C0E5F8")]
		public WebFlags(byte webhookFlags)
		{
		}
	}
}
namespace Photon.Chat
{
	[Token(Token = "0x20005E4")]
	public class ChannelCreationOptions
	{
		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ChannelCreationOptions Default;

		[Token(Token = "0x17000529")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6002683")]
			[Address(RVA = "0x1C0E694", Offset = "0x1C0E694", VA = "0x1C0E694")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x1C0E69C", Offset = "0x1C0E69C", VA = "0x1C0E69C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052A")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x1C0E6A8", Offset = "0x1C0E6A8", VA = "0x1C0E6A8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x1C0E6B0", Offset = "0x1C0E6B0", VA = "0x1C0E6B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x1C0E6B8", Offset = "0x1C0E6B8", VA = "0x1C0E6B8")]
		public ChannelCreationOptions()
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class ChannelWellKnownProperties
	{
		[Token(Token = "0x4002821")]
		public const byte MaxSubscribers = byte.MaxValue;

		[Token(Token = "0x4002822")]
		public const byte PublishSubscribers = 254;

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1C0E730", Offset = "0x1C0E730", VA = "0x1C0E730")]
		public ChannelWellKnownProperties()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E6")]
	public class ChatAppSettings
	{
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[FormerlySerializedAs("AppId")]
		public string AppIdChat;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppVersion;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string FixedRegion;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Server;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ushort Port;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public ConnectionProtocol Protocol;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool EnableProtocolFallback;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DebugLevel NetworkLogging;

		[Token(Token = "0x1700052B")]
		public bool IsDefaultNameServer
		{
			[Token(Token = "0x600268A")]
			[Address(RVA = "0x1C0E738", Offset = "0x1C0E738", VA = "0x1C0E738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700052C")]
		[Obsolete("Use AppIdChat instead.")]
		public string AppId
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0x1C0E744", Offset = "0x1C0E744", VA = "0x1C0E744")]
			get
			{
				return null;
			}
			[Token(Token = "0x600268C")]
			[Address(RVA = "0x1C0E74C", Offset = "0x1C0E74C", VA = "0x1C0E74C")]
			set
			{
			}
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x1C0E754", Offset = "0x1C0E754", VA = "0x1C0E754")]
		public ChatAppSettings()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class ChatChannel
	{
		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int ChannelID;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<object, object> properties;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly HashSet<string> Subscribers;

		[Token(Token = "0x1700052D")]
		public bool IsPrivate
		{
			[Token(Token = "0x600268E")]
			[Address(RVA = "0x1C0E764", Offset = "0x1C0E764", VA = "0x1C0E764")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600268F")]
			[Address(RVA = "0x1C0E76C", Offset = "0x1C0E76C", VA = "0x1C0E76C")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x1700052E")]
		public int MessageCount
		{
			[Token(Token = "0x6002690")]
			[Address(RVA = "0x1C0E778", Offset = "0x1C0E778", VA = "0x1C0E778")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700052F")]
		public int LastMsgId
		{
			[Token(Token = "0x6002691")]
			[Address(RVA = "0x1C0E7C0", Offset = "0x1C0E7C0", VA = "0x1C0E7C0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002692")]
			[Address(RVA = "0x1C0E7C8", Offset = "0x1C0E7C8", VA = "0x1C0E7C8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000530")]
		public bool PublishSubscribers
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0x1C0E7D0", Offset = "0x1C0E7D0", VA = "0x1C0E7D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002694")]
			[Address(RVA = "0x1C0E7D8", Offset = "0x1C0E7D8", VA = "0x1C0E7D8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public int MaxSubscribers
		{
			[Token(Token = "0x6002695")]
			[Address(RVA = "0x1C0E7E4", Offset = "0x1C0E7E4", VA = "0x1C0E7E4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002696")]
			[Address(RVA = "0x1C0E7EC", Offset = "0x1C0E7EC", VA = "0x1C0E7EC")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1C0E7F4", Offset = "0x1C0E7F4", VA = "0x1C0E7F4")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x1C0E938", Offset = "0x1C0E938", VA = "0x1C0E938")]
		public void Add(string sender, object message, int msgId)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1C0EB38", Offset = "0x1C0EB38", VA = "0x1C0EB38")]
		public void Add(string[] senders, object[] messages, int lastMsgId)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x1C0EA7C", Offset = "0x1C0EA7C", VA = "0x1C0EA7C")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x1C0EBD4", Offset = "0x1C0EBD4", VA = "0x1C0EBD4")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1C0EC7C", Offset = "0x1C0EC7C", VA = "0x1C0EC7C")]
		public string ToStringMessages()
		{
			return null;
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1C0EDB8", Offset = "0x1C0EDB8", VA = "0x1C0EDB8")]
		internal void ReadChannelProperties(Dictionary<object, object> newProperties)
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x1C0F154", Offset = "0x1C0F154", VA = "0x1C0F154")]
		internal void AddSubscribers(string[] users)
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x4002836")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x4002837")]
		public const int DefaultMaxSubscribers = 100;

		[Token(Token = "0x4002838")]
		private const byte HttpForwardWebFlag = 1;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string chatRegion;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int MessageLimit;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int PrivateChatHistoryLength;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ChatPeer chatPeer;

		[Token(Token = "0x4002849")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool didAuthenticate;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int? statusToSetWhenConnected;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object messageToSetWhenConnected;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x17000532")]
		public bool EnableProtocolFallback
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0x1C0F1F0", Offset = "0x1C0F1F0", VA = "0x1C0F1F0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x1C0F1F8", Offset = "0x1C0F1F8", VA = "0x1C0F1F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public string NameServerAddress
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x1C0F204", Offset = "0x1C0F204", VA = "0x1C0F204")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x1C0F20C", Offset = "0x1C0F20C", VA = "0x1C0F20C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public string FrontendAddress
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x1C0F214", Offset = "0x1C0F214", VA = "0x1C0F214")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x1C0F21C", Offset = "0x1C0F21C", VA = "0x1C0F21C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000535")]
		public string ChatRegion
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x1C0F224", Offset = "0x1C0F224", VA = "0x1C0F224")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x1C0F22C", Offset = "0x1C0F22C", VA = "0x1C0F22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000536")]
		public ChatState State
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x1C0F234", Offset = "0x1C0F234", VA = "0x1C0F234")]
			[CompilerGenerated]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x1C0F23C", Offset = "0x1C0F23C", VA = "0x1C0F23C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0x1C0F244", Offset = "0x1C0F244", VA = "0x1C0F244")]
			[CompilerGenerated]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x1C0F24C", Offset = "0x1C0F24C", VA = "0x1C0F24C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000538")]
		public bool CanChat
		{
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x1C0F254", Offset = "0x1C0F254", VA = "0x1C0F254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000539")]
		private bool HasPeer
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x1C0F278", Offset = "0x1C0F278", VA = "0x1C0F278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700053A")]
		public string AppVersion
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x1C0F334", Offset = "0x1C0F334", VA = "0x1C0F334")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x1C0F33C", Offset = "0x1C0F33C", VA = "0x1C0F33C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		public string AppId
		{
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x1C0F344", Offset = "0x1C0F344", VA = "0x1C0F344")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x1C0F34C", Offset = "0x1C0F34C", VA = "0x1C0F34C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x1C0F354", Offset = "0x1C0F354", VA = "0x1C0F354")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x1C0F35C", Offset = "0x1C0F35C", VA = "0x1C0F35C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public string UserId
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x1C0F364", Offset = "0x1C0F364", VA = "0x1C0F364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x1C0F37C", Offset = "0x1C0F37C", VA = "0x1C0F37C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700053E")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x1C0F41C", Offset = "0x1C0F41C", VA = "0x1C0F41C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x1C0F424", Offset = "0x1C0F424", VA = "0x1C0F424")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700053F")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x1C0F430", Offset = "0x1C0F430", VA = "0x1C0F430")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x1C0F44C", Offset = "0x1C0F44C", VA = "0x1C0F44C")]
			set
			{
			}
		}

		[Token(Token = "0x17000540")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x1C0F5EC", Offset = "0x1C0F5EC", VA = "0x1C0F5EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000541")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x1C10488", Offset = "0x1C10488", VA = "0x1C10488")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x1C0F9C8", Offset = "0x1C0F9C8", VA = "0x1C0F9C8")]
			set
			{
			}
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x1C0F288", Offset = "0x1C0F288", VA = "0x1C0F288")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x1C0F608", Offset = "0x1C0F608", VA = "0x1C0F608")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x1C0F864", Offset = "0x1C0F864", VA = "0x1C0F864")]
		public bool ConnectUsingSettings(ChatAppSettings appSettings)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1C0F9E4", Offset = "0x1C0F9E4", VA = "0x1C0F9E4")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x1C0FD00", Offset = "0x1C0FD00", VA = "0x1C0FD00")]
		public bool ConnectAndSetStatus(string appId, string appVersion, AuthenticationValues authValues, int status = 2, [Optional] object message)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1C0FDB0", Offset = "0x1C0FDB0", VA = "0x1C0FDB0")]
		public void Service()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x1C0FE28", Offset = "0x1C0FE28", VA = "0x1C0FE28")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x1C0FE5C", Offset = "0x1C0FE5C", VA = "0x1C0FE5C")]
		[Obsolete("Better use UseBackgroundWorkerForSending and Service().")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x1C0FE78", Offset = "0x1C0FE78", VA = "0x1C0FE78")]
		public void Disconnect(ChatDisconnectCause cause = ChatDisconnectCause.DisconnectByClientLogic)
		{
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x1C0FED4", Offset = "0x1C0FED4", VA = "0x1C0FED4")]
		public void StopThread()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x1C0FEEC", Offset = "0x1C0FEEC", VA = "0x1C0FEEC")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x1C100A0", Offset = "0x1C100A0", VA = "0x1C100A0")]
		public bool Subscribe(string[] channels, int[] lastMsgIds)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x1C0FEF4", Offset = "0x1C0FEF4", VA = "0x1C0FEF4")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1C105F4", Offset = "0x1C105F4", VA = "0x1C105F4")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1C107F0", Offset = "0x1C107F0", VA = "0x1C107F0")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1C10ABC", Offset = "0x1C10ABC", VA = "0x1C10ABC")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x1C107FC", Offset = "0x1C107FC", VA = "0x1C107FC")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x1C10AC8", Offset = "0x1C10AC8", VA = "0x1C10AC8")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x1C10AD8", Offset = "0x1C10AD8", VA = "0x1C10AD8")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x1C10DB4", Offset = "0x1C10DB4", VA = "0x1C10DB4")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x1C10AE8", Offset = "0x1C10AE8", VA = "0x1C10AE8")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x1C10DC4", Offset = "0x1C10DC4", VA = "0x1C10DC4")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x1C1102C", Offset = "0x1C1102C", VA = "0x1C1102C")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x1C11038", Offset = "0x1C11038", VA = "0x1C11038")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x1C11040", Offset = "0x1C11040", VA = "0x1C11040")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x1C11358", Offset = "0x1C11358", VA = "0x1C11358")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x1C11670", Offset = "0x1C11670", VA = "0x1C11670")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x1C116D4", Offset = "0x1C116D4", VA = "0x1C116D4")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x1C1174C", Offset = "0x1C1174C", VA = "0x1C1174C")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x1C117E4", Offset = "0x1C117E4", VA = "0x1C117E4")]
		public bool TryGetPrivateChannelByUser(string userId, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x1C11850", Offset = "0x1C11850", VA = "0x1C11850", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x1C11908", Offset = "0x1C11908", VA = "0x1C11908", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x1C12DF0", Offset = "0x1C12DF0", VA = "0x1C12DF0", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x1C1372C", Offset = "0x1C1372C", VA = "0x1C1372C", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x1C13D4C", Offset = "0x1C13D4C", VA = "0x1C13D4C")]
		private void TryAuthenticateOnNameServer()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x1C104A4", Offset = "0x1C104A4", VA = "0x1C104A4")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x1C11C90", Offset = "0x1C11C90", VA = "0x1C11C90")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x1C11978", Offset = "0x1C11978", VA = "0x1C11978")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x1C120D0", Offset = "0x1C120D0", VA = "0x1C120D0")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x1C12458", Offset = "0x1C12458", VA = "0x1C12458")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x1C13004", Offset = "0x1C13004", VA = "0x1C13004")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x1C11F34", Offset = "0x1C11F34", VA = "0x1C11F34")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x1C140FC", Offset = "0x1C140FC", VA = "0x1C140FC")]
		private bool ConnectToFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x1C13E88", Offset = "0x1C13E88", VA = "0x1C13E88")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x1C12A70", Offset = "0x1C12A70", VA = "0x1C12A70")]
		private void HandleUserUnsubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1C125EC", Offset = "0x1C125EC", VA = "0x1C125EC")]
		private void HandleUserSubscribedEvent(EventData eventData)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x1C14570", Offset = "0x1C14570", VA = "0x1C14570")]
		public bool Subscribe(string channel, int lastMsgId = 0, int messagesFromHistory = -1, [Optional] ChannelCreationOptions creationOptions)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005E9")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x4002851")]
		None,
		[Token(Token = "0x4002852")]
		ExceptionOnConnect,
		[Token(Token = "0x4002853")]
		DisconnectByServerLogic,
		[Token(Token = "0x4002854")]
		DisconnectByServerReasonUnknown,
		[Token(Token = "0x4002855")]
		ServerTimeout,
		[Token(Token = "0x4002856")]
		ClientTimeout,
		[Token(Token = "0x4002857")]
		Exception,
		[Token(Token = "0x4002858")]
		InvalidAuthentication,
		[Token(Token = "0x4002859")]
		MaxCcuReached,
		[Token(Token = "0x400285A")]
		InvalidRegion,
		[Token(Token = "0x400285B")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x400285C")]
		CustomAuthenticationFailed,
		[Token(Token = "0x400285D")]
		AuthenticationTicketExpired,
		[Token(Token = "0x400285E")]
		DisconnectByClientLogic
	}
	[Token(Token = "0x20005EA")]
	public class ChatEventCode
	{
		[Token(Token = "0x400285F")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x4002860")]
		public const byte Users = 1;

		[Token(Token = "0x4002861")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x4002862")]
		public const byte FriendsList = 3;

		[Token(Token = "0x4002863")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x4002864")]
		public const byte Subscribe = 5;

		[Token(Token = "0x4002865")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x4002866")]
		public const byte PropertiesChanged = 7;

		[Token(Token = "0x4002867")]
		public const byte UserSubscribed = 8;

		[Token(Token = "0x4002868")]
		public const byte UserUnsubscribed = 9;

		[Token(Token = "0x4002869")]
		public const byte ErrorInfo = 10;

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x1C14C60", Offset = "0x1C14C60", VA = "0x1C14C60")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x20005EB")]
	public class ChatOperationCode
	{
		[Token(Token = "0x400286A")]
		public const byte Authenticate = 230;

		[Token(Token = "0x400286B")]
		public const byte Subscribe = 0;

		[Token(Token = "0x400286C")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x400286D")]
		public const byte Publish = 2;

		[Token(Token = "0x400286E")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x400286F")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x4002870")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x4002871")]
		public const byte AddFriends = 6;

		[Token(Token = "0x4002872")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x4002873")]
		public const byte SetProperties = 8;

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x1C14C68", Offset = "0x1C14C68", VA = "0x1C14C68")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class ChatParameterCode
	{
		[Token(Token = "0x4002874")]
		public const byte Channels = 0;

		[Token(Token = "0x4002875")]
		public const byte Channel = 1;

		[Token(Token = "0x4002876")]
		public const byte Messages = 2;

		[Token(Token = "0x4002877")]
		public const byte Message = 3;

		[Token(Token = "0x4002878")]
		public const byte Senders = 4;

		[Token(Token = "0x4002879")]
		public const byte Sender = 5;

		[Token(Token = "0x400287A")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x400287B")]
		public const byte UserId = 225;

		[Token(Token = "0x400287C")]
		public const byte MsgId = 8;

		[Token(Token = "0x400287D")]
		public const byte MsgIds = 9;

		[Token(Token = "0x400287E")]
		public const byte Secret = 221;

		[Token(Token = "0x400287F")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x4002880")]
		public const byte Status = 10;

		[Token(Token = "0x4002881")]
		public const byte Friends = 11;

		[Token(Token = "0x4002882")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x4002883")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x4002884")]
		public const byte DebugMessage = 17;

		[Token(Token = "0x4002885")]
		public const byte WebFlags = 21;

		[Token(Token = "0x4002886")]
		public const byte Properties = 22;

		[Token(Token = "0x4002887")]
		public const byte ChannelSubscribers = 23;

		[Token(Token = "0x4002888")]
		public const byte DebugData = 24;

		[Token(Token = "0x4002889")]
		public const byte ExpectedValues = 25;

		[Token(Token = "0x400288A")]
		public const byte Broadcast = 26;

		[Token(Token = "0x400288B")]
		public const byte UserProperties = 28;

		[Token(Token = "0x400288C")]
		public const byte UniqueRoomId = 29;

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x1C14C70", Offset = "0x1C14C70", VA = "0x1C14C70")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string NameServerHost;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ushort NameServerPortOverride;

		[Token(Token = "0x17000542")]
		public string NameServerAddress
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x1C0FBD8", Offset = "0x1C0FBD8", VA = "0x1C0FBD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000543")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0x1C14EE8", Offset = "0x1C14EE8", VA = "0x1C14EE8", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x1C0F7C0", Offset = "0x1C0F7C0", VA = "0x1C0F7C0")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x1C14F08", Offset = "0x1C14F08", VA = "0x1C14F08")]
		[Conditional("SUPPORTED_UNITY")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x1C14C78", Offset = "0x1C14C78", VA = "0x1C14C78")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x1C0FBDC", Offset = "0x1C0FBDC", VA = "0x1C0FBDC")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x1C142DC", Offset = "0x1C142DC", VA = "0x1C142DC")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005EE")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x4002891")]
		Custom = 0,
		[Token(Token = "0x4002892")]
		Steam = 1,
		[Token(Token = "0x4002893")]
		Facebook = 2,
		[Token(Token = "0x4002894")]
		Oculus = 3,
		[Token(Token = "0x4002895")]
		PlayStation4 = 4,
		[Token(Token = "0x4002896")]
		[Obsolete("Use PlayStation4 or PlayStation5 as needed")]
		PlayStation = 4,
		[Token(Token = "0x4002897")]
		Xbox = 5,
		[Token(Token = "0x4002898")]
		Viveport = 10,
		[Token(Token = "0x4002899")]
		NintendoSwitch = 11,
		[Token(Token = "0x400289A")]
		PlayStation5 = 12,
		[Token(Token = "0x400289B")]
		[Obsolete("Use PlayStation4 or PlayStation5 as needed")]
		Playstation5 = 12,
		[Token(Token = "0x400289C")]
		Epic = 13,
		[Token(Token = "0x400289D")]
		FacebookGaming = 15,
		[Token(Token = "0x400289E")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20005EF")]
	public class AuthenticationValues
	{
		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x17000544")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x1C151D4", Offset = "0x1C151D4", VA = "0x1C151D4")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x1C151DC", Offset = "0x1C151DC", VA = "0x1C151DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000545")]
		public string AuthGetParameters
		{
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x1C151E4", Offset = "0x1C151E4", VA = "0x1C151E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1C151EC", Offset = "0x1C151EC", VA = "0x1C151EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000546")]
		public object AuthPostData
		{
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1C151F4", Offset = "0x1C151F4", VA = "0x1C151F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x1C151FC", Offset = "0x1C151FC", VA = "0x1C151FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000547")]
		public object Token
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1C15204", Offset = "0x1C15204", VA = "0x1C15204")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x1C1520C", Offset = "0x1C1520C", VA = "0x1C1520C")]
			[CompilerGenerated]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000548")]
		public string UserId
		{
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x1C15214", Offset = "0x1C15214", VA = "0x1C15214")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1C1521C", Offset = "0x1C1521C", VA = "0x1C1521C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x1C0F40C", Offset = "0x1C0F40C", VA = "0x1C0F40C")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x1C15224", Offset = "0x1C15224", VA = "0x1C15224")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x1C1525C", Offset = "0x1C1525C", VA = "0x1C1525C", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x1C1529C", Offset = "0x1C1529C", VA = "0x1C1529C", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1C152A4", Offset = "0x1C152A4", VA = "0x1C152A4", Slot = "6")]
		public virtual void SetAuthPostData(Dictionary<string, object> dictData)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1C152AC", Offset = "0x1C152AC", VA = "0x1C152AC", Slot = "7")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1C154B0", Offset = "0x1C154B0", VA = "0x1C154B0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1C15678", Offset = "0x1C15678", VA = "0x1C15678")]
		public AuthenticationValues CopyTo(AuthenticationValues copy)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F0")]
	public class ParameterCode
	{
		[Token(Token = "0x40028A4")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x40028A5")]
		public const byte Secret = 221;

		[Token(Token = "0x40028A6")]
		public const byte AppVersion = 220;

		[Token(Token = "0x40028A7")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x40028A8")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x40028A9")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x40028AA")]
		public const byte Region = 210;

		[Token(Token = "0x40028AB")]
		public const byte Address = 230;

		[Token(Token = "0x40028AC")]
		public const byte UserId = 225;

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1C156D8", Offset = "0x1C156D8", VA = "0x1C156D8")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public class ErrorCode
	{
		[Token(Token = "0x40028AD")]
		public const int Ok = 0;

		[Token(Token = "0x40028AE")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x40028AF")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x40028B0")]
		public const int InternalServerError = -1;

		[Token(Token = "0x40028B1")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x40028B2")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x40028B3")]
		public const int GameFull = 32765;

		[Token(Token = "0x40028B4")]
		public const int GameClosed = 32764;

		[Token(Token = "0x40028B5")]
		public const int ServerFull = 32762;

		[Token(Token = "0x40028B6")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x40028B7")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x40028B8")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x40028B9")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x40028BA")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x40028BB")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x40028BC")]
		public const int AuthenticationTicketExpired = 32753;

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x1C156E0", Offset = "0x1C156E0", VA = "0x1C156E0")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public enum ChatState
	{
		[Token(Token = "0x40028BE")]
		Uninitialized,
		[Token(Token = "0x40028BF")]
		ConnectingToNameServer,
		[Token(Token = "0x40028C0")]
		ConnectedToNameServer,
		[Token(Token = "0x40028C1")]
		Authenticating,
		[Token(Token = "0x40028C2")]
		Authenticated,
		[Token(Token = "0x40028C3")]
		DisconnectingFromNameServer,
		[Token(Token = "0x40028C4")]
		ConnectingToFrontEnd,
		[Token(Token = "0x40028C5")]
		ConnectedToFrontEnd,
		[Token(Token = "0x40028C6")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x40028C7")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x40028C8")]
		Disconnecting,
		[Token(Token = "0x40028C9")]
		Disconnected,
		[Token(Token = "0x40028CA")]
		ConnectWithFallbackProtocol
	}
	[Token(Token = "0x20005F3")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x40028CB")]
		public const int Offline = 0;

		[Token(Token = "0x40028CC")]
		public const int Invisible = 1;

		[Token(Token = "0x40028CD")]
		public const int Online = 2;

		[Token(Token = "0x40028CE")]
		public const int Away = 3;

		[Token(Token = "0x40028CF")]
		public const int DND = 4;

		[Token(Token = "0x40028D0")]
		public const int LFG = 5;

		[Token(Token = "0x40028D1")]
		public const int Playing = 6;
	}
	[Token(Token = "0x20005F4")]
	public interface IChatClientListener
	{
		[Token(Token = "0x600270A")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x600270B")]
		void OnDisconnected();

		[Token(Token = "0x600270C")]
		void OnConnected();

		[Token(Token = "0x600270D")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x600270E")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x600270F")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6002710")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6002711")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6002712")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);

		[Token(Token = "0x6002713")]
		void OnUserSubscribed(string channel, string user);

		[Token(Token = "0x6002714")]
		void OnUserUnsubscribed(string channel, string user);
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x20005F5")]
	public static class DemoConstants
	{
		[Token(Token = "0x20005F6")]
		public enum MapType
		{
			[Token(Token = "0x40028D7")]
			Forest,
			[Token(Token = "0x40028D8")]
			Town,
			[Token(Token = "0x40028D9")]
			Sea
		}

		[Token(Token = "0x40028D2")]
		public const byte EvColor = 1;

		[Token(Token = "0x40028D3")]
		public const byte EvPosition = 2;

		[Token(Token = "0x40028D4")]
		public const string GridSizeProp = "s";

		[Token(Token = "0x40028D5")]
		public const string MapProp = "m";
	}
	[Token(Token = "0x20005F7")]
	public delegate void EventPlayerListChangeDelegate(ParticlePlayer particlePlayer);
	[Token(Token = "0x20005F8")]
	public class GameLogic : LoadBalancingClient
	{
		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public EventPlayerListChangeDelegate OnEventJoin;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public EventPlayerListChangeDelegate OnEventLeave;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool UpdateVisuals;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool SendReliable;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool JoinRandomGame;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly string[] RoomPropsInLobby;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public StringBuilder Log;

		[Token(Token = "0x17000549")]
		public new ParticlePlayer LocalPlayer
		{
			[Token(Token = "0x6002719")]
			[Address(RVA = "0x1C15864", Offset = "0x1C15864", VA = "0x1C15864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054A")]
		public ParticleRoom LocalRoom
		{
			[Token(Token = "0x600271A")]
			[Address(RVA = "0x1C158DC", Offset = "0x1C158DC", VA = "0x1C158DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054B")]
		public int GridSize
		{
			[Token(Token = "0x600271B")]
			[Address(RVA = "0x1C15954", Offset = "0x1C15954", VA = "0x1C15954")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700054C")]
		public bool UseInterestGroups
		{
			[Token(Token = "0x600271C")]
			[Address(RVA = "0x1C1598C", Offset = "0x1C1598C", VA = "0x1C1598C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600271D")]
			[Address(RVA = "0x1C15994", Offset = "0x1C15994", VA = "0x1C15994")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700054D")]
		public TimeKeeper MoveInterval
		{
			[Token(Token = "0x600271E")]
			[Address(RVA = "0x1C159A0", Offset = "0x1C159A0", VA = "0x1C159A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600271F")]
			[Address(RVA = "0x1C159A8", Offset = "0x1C159A8", VA = "0x1C159A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700054E")]
		public TimeKeeper UpdateOthersInterval
		{
			[Token(Token = "0x6002720")]
			[Address(RVA = "0x1C159B8", Offset = "0x1C159B8", VA = "0x1C159B8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002721")]
			[Address(RVA = "0x1C159C0", Offset = "0x1C159C0", VA = "0x1C159C0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		public TimeKeeper DispatchInterval
		{
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1C159D0", Offset = "0x1C159D0", VA = "0x1C159D0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1C159D8", Offset = "0x1C159D8", VA = "0x1C159D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public TimeKeeper SendInterval
		{
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1C159E8", Offset = "0x1C159E8", VA = "0x1C159E8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1C159F0", Offset = "0x1C159F0", VA = "0x1C159F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000551")]
		public static int Timestamp
		{
			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1C15A00", Offset = "0x1C15A00", VA = "0x1C15A00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x1C15A08", Offset = "0x1C15A08", VA = "0x1C15A08")]
		public GameLogic(string appId, string gameVersion)
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1C15CBC", Offset = "0x1C15CBC", VA = "0x1C15CBC")]
		public void CallConnect()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x1C15D8C", Offset = "0x1C15D8C", VA = "0x1C15D8C")]
		public bool SetMasterAddress(string yourMasterServerAddress)
		{
			return default(bool);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1C15DE4", Offset = "0x1C15DE4", VA = "0x1C15DE4")]
		private void OnStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x1C1602C", Offset = "0x1C1602C", VA = "0x1C1602C", Slot = "12")]
		protected internal override global::Photon.Realtime.Player CreatePlayer(string actorName, int actorNumber, bool isLocal, ExitGames.Client.Photon.Hashtable actorProperties)
		{
			return null;
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x1C160F8", Offset = "0x1C160F8", VA = "0x1C160F8", Slot = "13")]
		protected internal override global::Photon.Realtime.Room CreateRoom(string roomName, global::Photon.Realtime.RoomOptions opt)
		{
			return null;
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1C1616C", Offset = "0x1C1616C", VA = "0x1C1616C")]
		public void UpdateLoop()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x1C1654C", Offset = "0x1C1654C", VA = "0x1C1654C")]
		public void SetUseInterestGroups(bool useGroups)
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1C16464", Offset = "0x1C16464", VA = "0x1C16464")]
		private void UpdateInterestGroups()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1C1634C", Offset = "0x1C1634C", VA = "0x1C1634C")]
		private void SendPositionUpdate()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1C16744", Offset = "0x1C16744", VA = "0x1C16744", Slot = "17")]
		public override void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1C16D48", Offset = "0x1C16D48", VA = "0x1C16D48", Slot = "15")]
		public override void OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1C17000", Offset = "0x1C17000", VA = "0x1C17000", Slot = "16")]
		public override void OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1C17320", Offset = "0x1C17320", VA = "0x1C17320", Slot = "14")]
		public override void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1C17368", Offset = "0x1C17368", VA = "0x1C17368")]
		public void ChangeGridSize()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1C17484", Offset = "0x1C17484", VA = "0x1C17484")]
		public void ChangeLocalPlayercolor()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1C15DFC", Offset = "0x1C15DFC", VA = "0x1C15DFC")]
		public void CreateParticleDemoRoom(DemoConstants.MapType maptype, int gridSize)
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class ParticlePlayer : global::Photon.Realtime.Player
	{
		[Token(Token = "0x17000552")]
		public int PosX
		{
			[Token(Token = "0x6002739")]
			[Address(RVA = "0x1C17708", Offset = "0x1C17708", VA = "0x1C17708")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600273A")]
			[Address(RVA = "0x1C17710", Offset = "0x1C17710", VA = "0x1C17710")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000553")]
		public int PosY
		{
			[Token(Token = "0x600273B")]
			[Address(RVA = "0x1C17718", Offset = "0x1C17718", VA = "0x1C17718")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600273C")]
			[Address(RVA = "0x1C17720", Offset = "0x1C17720", VA = "0x1C17720")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000554")]
		public int Color
		{
			[Token(Token = "0x600273D")]
			[Address(RVA = "0x1C17728", Offset = "0x1C17728", VA = "0x1C17728")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600273E")]
			[Address(RVA = "0x1C17730", Offset = "0x1C17730", VA = "0x1C17730")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000555")]
		private int LastUpdateTimestamp
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x1C17738", Offset = "0x1C17738", VA = "0x1C17738")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1C17740", Offset = "0x1C17740", VA = "0x1C17740")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000556")]
		public int UpdateAge
		{
			[Token(Token = "0x6002741")]
			[Address(RVA = "0x1C17748", Offset = "0x1C17748", VA = "0x1C17748")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000557")]
		public byte VisibleGroup
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1C177A8", Offset = "0x1C177A8", VA = "0x1C177A8")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1C177B0", Offset = "0x1C177B0", VA = "0x1C177B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1C160C0", Offset = "0x1C160C0", VA = "0x1C160C0")]
		public ParticlePlayer(string nickName, int actorID, bool isLocal, ExitGames.Client.Photon.Hashtable actorProperties)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x1C17564", Offset = "0x1C17564", VA = "0x1C17564")]
		internal void RandomizeColor()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x1C16E84", Offset = "0x1C16E84", VA = "0x1C16E84")]
		internal void RandomizePosition()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x1C16288", Offset = "0x1C16288", VA = "0x1C16288")]
		internal void MoveRandom()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x1C177B8", Offset = "0x1C177B8", VA = "0x1C177B8")]
		public void ClampPosition()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x1C1787C", Offset = "0x1C1787C", VA = "0x1C1787C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x1C16688", Offset = "0x1C16688", VA = "0x1C16688")]
		public ExitGames.Client.Photon.Hashtable WriteEvMove()
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x1C16A18", Offset = "0x1C16A18", VA = "0x1C16A18")]
		public void ReadEvMove(ExitGames.Client.Photon.Hashtable evContent)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x1C16F5C", Offset = "0x1C16F5C", VA = "0x1C16F5C")]
		public ExitGames.Client.Photon.Hashtable WriteEvColor()
		{
			return null;
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x1C16BF4", Offset = "0x1C16BF4", VA = "0x1C16BF4")]
		public void ReadEvColor(ExitGames.Client.Photon.Hashtable evContent)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x1C165F0", Offset = "0x1C165F0", VA = "0x1C165F0")]
		public byte GetGroup()
		{
			return default(byte);
		}
	}
	[Token(Token = "0x20005FA")]
	public class ParticleRoom : global::Photon.Realtime.Room
	{
		[Token(Token = "0x40028EB")]
		public const int GridSizeDefault = 16;

		[Token(Token = "0x17000558")]
		public int GridSize
		{
			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1C473E0", Offset = "0x1C473E0", VA = "0x1C473E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000559")]
		public string Map
		{
			[Token(Token = "0x6002750")]
			[Address(RVA = "0x1C474A8", Offset = "0x1C474A8", VA = "0x1C474A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1C47590", Offset = "0x1C47590", VA = "0x1C47590")]
		protected internal ParticleRoom(string roomName, global::Photon.Realtime.RoomOptions opt)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1C4759C", Offset = "0x1C4759C", VA = "0x1C4759C")]
		public byte GetGroup(int x, int y)
		{
			return default(byte);
		}
	}
	[Token(Token = "0x20005FB")]
	public class TimeKeeper
	{
		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x1700055A")]
		public int Interval
		{
			[Token(Token = "0x6002753")]
			[Address(RVA = "0x1C475D8", Offset = "0x1C475D8", VA = "0x1C475D8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x1C475E0", Offset = "0x1C475E0", VA = "0x1C475E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700055B")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1C475E8", Offset = "0x1C475E8", VA = "0x1C475E8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x1C475F0", Offset = "0x1C475F0", VA = "0x1C475F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700055C")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6002757")]
			[Address(RVA = "0x1C475FC", Offset = "0x1C475FC", VA = "0x1C475FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002758")]
			[Address(RVA = "0x1C47648", Offset = "0x1C47648", VA = "0x1C47648")]
			set
			{
			}
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x1C47654", Offset = "0x1C47654", VA = "0x1C47654")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x1C47694", Offset = "0x1C47694", VA = "0x1C47694")]
		public void Reset()
		{
		}
	}
}
namespace ArabicSupport
{
	[Token(Token = "0x20005FC")]
	public class ArabicFixer
	{
		[Token(Token = "0x600275B")]
		[Address(RVA = "0x1C476B4", Offset = "0x1C476B4", VA = "0x1C476B4")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1C47920", Offset = "0x1C47920", VA = "0x1C47920")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x1C476C0", Offset = "0x1C476C0", VA = "0x1C476C0")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x1C47B20", Offset = "0x1C47B20", VA = "0x1C47B20")]
		public ArabicFixer()
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x20005FD")]
	public class LeanDummy
	{
		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1C47B28", Offset = "0x1C47B28", VA = "0x1C47B28")]
		public LeanDummy()
		{
		}
	}
}
namespace DitzelGames.FastIK
{
	[Token(Token = "0x20005FE")]
	public class FastIKFabric : MonoBehaviour
	{
		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ChainLength;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Target;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Pole;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Solver Parameters")]
		public int Iterations;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Delta;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0f, 1f)]
		public float SnapBackStrength;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float[] BonesLength;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float CompleteLength;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] Bones;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3[] Positions;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3[] StartDirectionSucc;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Quaternion[] StartRotationBone;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Quaternion StartRotationTarget;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform Root;

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x1C47B30", Offset = "0x1C47B30", VA = "0x1C47B30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x1C47B34", Offset = "0x1C47B34", VA = "0x1C47B34")]
		private void Init()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x1C48438", Offset = "0x1C48438", VA = "0x1C48438")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x1C4843C", Offset = "0x1C4843C", VA = "0x1C4843C")]
		private void ResolveIK()
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x1C480CC", Offset = "0x1C480CC", VA = "0x1C480CC")]
		private Vector3 GetPositionRootSpace(Transform current)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x1C48204", Offset = "0x1C48204", VA = "0x1C48204")]
		private void SetPositionRootSpace(Transform current, Vector3 position)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x1C48304", Offset = "0x1C48304", VA = "0x1C48304")]
		private Quaternion GetRotationRootSpace(Transform current)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1C491F8", Offset = "0x1C491F8", VA = "0x1C491F8")]
		private void SetRotationRootSpace(Transform current, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1C49334", Offset = "0x1C49334", VA = "0x1C49334")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1C49338", Offset = "0x1C49338", VA = "0x1C49338")]
		public FastIKFabric()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	public class FastIKLook : MonoBehaviour
	{
		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 StartDirection;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Quaternion StartRotation;

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1C4935C", Offset = "0x1C4935C", VA = "0x1C4935C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1C49440", Offset = "0x1C49440", VA = "0x1C49440")]
		private void Update()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1C495D0", Offset = "0x1C495D0", VA = "0x1C495D0")]
		public FastIKLook()
		{
		}
	}
	[Token(Token = "0x2000600")]
	internal class SampleProcedualAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] FootTarget;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LookTarget;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HandTarget;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandPole;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Step;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Attraction;

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x1C495D8", Offset = "0x1C495D8", VA = "0x1C495D8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x1C49CB4", Offset = "0x1C49CB4", VA = "0x1C49CB4")]
		public SampleProcedualAnimation()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public class SampleRotator : MonoBehaviour
	{
		[Token(Token = "0x600276F")]
		[Address(RVA = "0x1C49CBC", Offset = "0x1C49CBC", VA = "0x1C49CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x1C49D04", Offset = "0x1C49D04", VA = "0x1C49D04")]
		public SampleRotator()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class SampleSinMover : MonoBehaviour
	{
		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Dir;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 Start;

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x1C49D0C", Offset = "0x1C49D0C", VA = "0x1C49D0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x1C49D3C", Offset = "0x1C49D3C", VA = "0x1C49D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x1C49DA8", Offset = "0x1C49DA8", VA = "0x1C49DA8")]
		public SampleSinMover()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x2000603")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x1C49DB0", Offset = "0x1C49DB0", VA = "0x1C49DB0")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x1C4A810", Offset = "0x1C4A810", VA = "0x1C4A810")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x1C4AC14", Offset = "0x1C4AC14", VA = "0x1C4AC14")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1C4AD0C", Offset = "0x1C4AD0C", VA = "0x1C4AD0C")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x1C4AE28", Offset = "0x1C4AE28", VA = "0x1C4AE28", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1C4AF94", Offset = "0x1C4AF94", VA = "0x1C4AF94", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1C4B1D0", Offset = "0x1C4B1D0", VA = "0x1C4B1D0", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1C4B2CC", Offset = "0x1C4B2CC", VA = "0x1C4B2CC", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1C4B474", Offset = "0x1C4B474", VA = "0x1C4B474", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1C4B508", Offset = "0x1C4B508", VA = "0x1C4B508", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1C4B638", Offset = "0x1C4B638", VA = "0x1C4B638", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x1C4B768", Offset = "0x1C4B768", VA = "0x1C4B768", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1C4BC70", Offset = "0x1C4BC70", VA = "0x1C4BC70", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1C4C23C", Offset = "0x1C4C23C", VA = "0x1C4C23C", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1C4C2C4", Offset = "0x1C4C2C4", VA = "0x1C4C2C4", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1C4C5AC", Offset = "0x1C4C5AC", VA = "0x1C4C5AC", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x1C4C5C4", Offset = "0x1C4C5C4", VA = "0x1C4C5C4", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x1C4C6E0", Offset = "0x1C4C6E0", VA = "0x1C4C6E0", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1C4C91C", Offset = "0x1C4C91C", VA = "0x1C4C91C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x1C4CB34", Offset = "0x1C4CB34", VA = "0x1C4CB34", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x1C4C2E4", Offset = "0x1C4C2E4", VA = "0x1C4C2E4")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1C4CC4C", Offset = "0x1C4CC4C", VA = "0x1C4CC4C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x1C4A704", Offset = "0x1C4A704", VA = "0x1C4A704")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1C4D094", Offset = "0x1C4D094", VA = "0x1C4D094")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1C4D1D4", Offset = "0x1C4D1D4", VA = "0x1C4D1D4")]
		public void PingAll()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1C4D264", Offset = "0x1C4D264", VA = "0x1C4D264")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1C4D35C", Offset = "0x1C4D35C", VA = "0x1C4D35C")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x1C4D3F8", Offset = "0x1C4D3F8", VA = "0x1C4D3F8")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x1C4D550", Offset = "0x1C4D550", VA = "0x1C4D550")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x1C4AD9C", Offset = "0x1C4AD9C", VA = "0x1C4AD9C")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x1C4AC7C", Offset = "0x1C4AC7C", VA = "0x1C4AC7C")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000604")]
	public class HapticDevice
	{
		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x1C4DB24", Offset = "0x1C4DB24", VA = "0x1C4DB24")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x2000606")]
		private class Wrapper<T>
		{
			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x600279E")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000607")]
		private class Device
		{
			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x1C4DDC8", Offset = "0x1C4DDC8", VA = "0x1C4DDC8")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000608")]
		public class StreamHost
		{
			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1C4DDD0", Offset = "0x1C4DDD0", VA = "0x1C4DDD0")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x1C4DB2C", Offset = "0x1C4DB2C", VA = "0x1C4DB2C")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x1C4DB50", Offset = "0x1C4DB50", VA = "0x1C4DB50")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x1C4DCA4", Offset = "0x1C4DCA4", VA = "0x1C4DCA4")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1C4DCCC", Offset = "0x1C4DCCC", VA = "0x1C4DCCC")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002799")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0x1C4DCDC", Offset = "0x1C4DCDC", VA = "0x1C4DCDC")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1C4CF44", Offset = "0x1C4CF44", VA = "0x1C4CF44")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1C4D5EC", Offset = "0x1C4D5EC", VA = "0x1C4D5EC")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1C4D7F4", Offset = "0x1C4D7F4", VA = "0x1C4D7F4")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000609")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Images")]
		private Sprite defaultImage;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1C4DDD8", Offset = "0x1C4DDD8", VA = "0x1C4DDD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1C4DEA0", Offset = "0x1C4DEA0", VA = "0x1C4DEA0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1C4E65C", Offset = "0x1C4E65C", VA = "0x1C4E65C")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1C4E8C4", Offset = "0x1C4E8C4", VA = "0x1C4E8C4")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1C4E950", Offset = "0x1C4E950", VA = "0x1C4E950")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1C4E958", Offset = "0x1C4E958", VA = "0x1C4E958")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x1C4EB30", Offset = "0x1C4EB30", VA = "0x1C4EB30")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x1C4EBF0", Offset = "0x1C4EBF0", VA = "0x1C4EBF0")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x1C4EC8C", Offset = "0x1C4EC8C", VA = "0x1C4EC8C")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[UI]")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("[Sprites]")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1C4EC94", Offset = "0x1C4EC94", VA = "0x1C4EC94")]
		private void Start()
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x1C4ED84", Offset = "0x1C4ED84", VA = "0x1C4ED84")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1C4F088", Offset = "0x1C4F088", VA = "0x1C4F088")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1C4F264", Offset = "0x1C4F264", VA = "0x1C4F264")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x1C4F3BC", Offset = "0x1C4F3BC", VA = "0x1C4F3BC")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x1C4F3C4", Offset = "0x1C4F3C4", VA = "0x1C4F3C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x1C4F434", Offset = "0x1C4F434", VA = "0x1C4F434")]
		public void Hide()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x1C4F454", Offset = "0x1C4F454", VA = "0x1C4F454")]
		public void Show()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x1C4F474", Offset = "0x1C4F474", VA = "0x1C4F474")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x1C4F594", Offset = "0x1C4F594", VA = "0x1C4F594")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x200060D")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("DeviceImages")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x1C4F59C", Offset = "0x1C4F59C", VA = "0x1C4F59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x1C4FAB4", Offset = "0x1C4FAB4", VA = "0x1C4FAB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1C4F788", Offset = "0x1C4F788", VA = "0x1C4F788")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1C4FCB8", Offset = "0x1C4FCB8", VA = "0x1C4FCB8")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x1C4FD54", Offset = "0x1C4FD54", VA = "0x1C4FD54")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1C4FD74", Offset = "0x1C4FD74", VA = "0x1C4FD74")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x1C4FD94", Offset = "0x1C4FD94", VA = "0x1C4FD94")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1C4FDB0", Offset = "0x1C4FDB0", VA = "0x1C4FDB0")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x1C4FBC0", Offset = "0x1C4FBC0", VA = "0x1C4FBC0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x1C500B4", Offset = "0x1C500B4", VA = "0x1C500B4")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060E")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x1C500C4", Offset = "0x1C500C4", VA = "0x1C500C4")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060F")]
	public class IconSetting
	{
		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x1C500CC", Offset = "0x1C500CC", VA = "0x1C500CC")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("UI")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("Connect Menu")]
		private GameObject ConnectMenu;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Header("Disconnect Menu")]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x1C500D4", Offset = "0x1C500D4", VA = "0x1C500D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x1C502B4", Offset = "0x1C502B4", VA = "0x1C502B4")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1C5046C", Offset = "0x1C5046C", VA = "0x1C5046C")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1C504F4", Offset = "0x1C504F4", VA = "0x1C504F4")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1C50564", Offset = "0x1C50564", VA = "0x1C50564")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x1C50364", Offset = "0x1C50364", VA = "0x1C50364")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1C50988", Offset = "0x1C50988", VA = "0x1C50988")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1C509B0", Offset = "0x1C509B0", VA = "0x1C509B0")]
		private void Ping()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1C50A18", Offset = "0x1C50A18", VA = "0x1C50A18")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1C50AEC", Offset = "0x1C50AEC", VA = "0x1C50AEC")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x1C50BC0", Offset = "0x1C50BC0", VA = "0x1C50BC0")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x1C50854", Offset = "0x1C50854", VA = "0x1C50854")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1C507EC", Offset = "0x1C507EC", VA = "0x1C507EC")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1C50820", Offset = "0x1C50820", VA = "0x1C50820")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1C50BF4", Offset = "0x1C50BF4", VA = "0x1C50BF4")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x1C50CF0", Offset = "0x1C50CF0", VA = "0x1C50CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1C511D0", Offset = "0x1C511D0", VA = "0x1C511D0")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x1C5182C", Offset = "0x1C5182C", VA = "0x1C5182C")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1C518B4", Offset = "0x1C518B4", VA = "0x1C518B4")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x1C5193C", Offset = "0x1C5193C", VA = "0x1C5193C")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1C51980", Offset = "0x1C51980", VA = "0x1C51980")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1C519A4", Offset = "0x1C519A4", VA = "0x1C519A4")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1C519C8", Offset = "0x1C519C8", VA = "0x1C519C8")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x1C51A64", Offset = "0x1C51A64", VA = "0x1C51A64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x1C51B78", Offset = "0x1C51B78", VA = "0x1C51B78")]
		private void Start()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x1C51C10", Offset = "0x1C51C10", VA = "0x1C51C10")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x1C4E6B4", Offset = "0x1C4E6B4", VA = "0x1C4E6B4")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x1C4F334", Offset = "0x1C4F334", VA = "0x1C4F334")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x1C4F0FC", Offset = "0x1C4F0FC", VA = "0x1C4F0FC")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x1C52144", Offset = "0x1C52144", VA = "0x1C52144")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x1C4FFB0", Offset = "0x1C4FFB0", VA = "0x1C4FFB0")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x1C4E404", Offset = "0x1C4E404", VA = "0x1C4E404")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x1C521C4", Offset = "0x1C521C4", VA = "0x1C521C4")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x1C4F9DC", Offset = "0x1C4F9DC", VA = "0x1C4F9DC")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x1C52414", Offset = "0x1C52414", VA = "0x1C52414")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x1C524AC", Offset = "0x1C524AC", VA = "0x1C524AC")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x1C52530", Offset = "0x1C52530", VA = "0x1C52530")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x1C525B0", Offset = "0x1C525B0", VA = "0x1C525B0")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x1C5266C", Offset = "0x1C5266C", VA = "0x1C5266C")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1C526EC", Offset = "0x1C526EC", VA = "0x1C526EC")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1C52790", Offset = "0x1C52790", VA = "0x1C52790")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1C52824", Offset = "0x1C52824", VA = "0x1C52824")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1C52948", Offset = "0x1C52948", VA = "0x1C52948")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x1C4EF2C", Offset = "0x1C4EF2C", VA = "0x1C4EF2C")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1C52950", Offset = "0x1C52950", VA = "0x1C52950")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x2000615")]
	public class HapticApi
	{
		[Token(Token = "0x2000616")]
		public struct point
		{
			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000617")]
		public struct status
		{
			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x1C52958", Offset = "0x1C52958", VA = "0x1C52958")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x1C529EC", Offset = "0x1C529EC", VA = "0x1C529EC")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x1C52A98", Offset = "0x1C52A98", VA = "0x1C52A98")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x1C52AFC", Offset = "0x1C52AFC", VA = "0x1C52AFC")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x1C52BA4", Offset = "0x1C52BA4", VA = "0x1C52BA4")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x1C52C50", Offset = "0x1C52C50", VA = "0x1C52C50")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x1C52CFC", Offset = "0x1C52CFC", VA = "0x1C52CFC")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x1C52D88", Offset = "0x1C52D88", VA = "0x1C52D88")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x1C52E1C", Offset = "0x1C52E1C", VA = "0x1C52E1C")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x1C52EF8", Offset = "0x1C52EF8", VA = "0x1C52EF8")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x1C52FBC", Offset = "0x1C52FBC", VA = "0x1C52FBC")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x1C53080", Offset = "0x1C53080", VA = "0x1C53080")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x1C53118", Offset = "0x1C53118", VA = "0x1C53118")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x1C53188", Offset = "0x1C53188", VA = "0x1C53188")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x1C53220", Offset = "0x1C53220", VA = "0x1C53220")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x1C53284", Offset = "0x1C53284", VA = "0x1C53284")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x1C53310", Offset = "0x1C53310", VA = "0x1C53310")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002800")]
		[Address(RVA = "0x1C53370", Offset = "0x1C53370", VA = "0x1C53370")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x6002801")]
		[Address(RVA = "0x1C533D4", Offset = "0x1C533D4", VA = "0x1C533D4")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x6002802")]
		[Address(RVA = "0x1C53434", Offset = "0x1C53434", VA = "0x1C53434")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6002803")]
		[Address(RVA = "0x1C534B8", Offset = "0x1C534B8", VA = "0x1C534B8")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x1C5357C", Offset = "0x1C5357C", VA = "0x1C5357C")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x1C53584", Offset = "0x1C53584", VA = "0x1C53584", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x1C5392C", Offset = "0x1C5392C", VA = "0x1C5392C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x1C53948", Offset = "0x1C53948", VA = "0x1C53948")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6002808")]
		[Address(RVA = "0x1C53970", Offset = "0x1C53970", VA = "0x1C53970")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x1C539A0", Offset = "0x1C539A0", VA = "0x1C539A0", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x1C539A8", Offset = "0x1C539A8", VA = "0x1C539A8", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x1C53A00", Offset = "0x1C53A00", VA = "0x1C53A00", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x1C53A08", Offset = "0x1C53A08", VA = "0x1C53A08", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x1C53A10", Offset = "0x1C53A10", VA = "0x1C53A10", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1C53A14", Offset = "0x1C53A14", VA = "0x1C53A14", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1C53A20", Offset = "0x1C53A20", VA = "0x1C53A20", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1C53A2C", Offset = "0x1C53A2C", VA = "0x1C53A2C", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1C53B2C", Offset = "0x1C53B2C", VA = "0x1C53B2C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x1C53CAC", Offset = "0x1C53CAC", VA = "0x1C53CAC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x1C53CD4", Offset = "0x1C53CD4", VA = "0x1C53CD4", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1C53CFC", Offset = "0x1C53CFC", VA = "0x1C53CFC", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x1C53D04", Offset = "0x1C53D04", VA = "0x1C53D04", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x1C53D10", Offset = "0x1C53D10", VA = "0x1C53D10", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x1C53D18", Offset = "0x1C53D18", VA = "0x1C53D18", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x1C53D1C", Offset = "0x1C53D1C", VA = "0x1C53D1C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1C53D20", Offset = "0x1C53D20", VA = "0x1C53D20", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x200061A")]
	public class BhapticsProject
	{
		[Token(Token = "0x1700055D")]
		public Track[] Tracks
		{
			[Token(Token = "0x600281A")]
			[Address(RVA = "0x1C53D40", Offset = "0x1C53D40", VA = "0x1C53D40")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600281B")]
			[Address(RVA = "0x1C53D48", Offset = "0x1C53D48", VA = "0x1C53D48")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700055E")]
		public Layout Layout
		{
			[Token(Token = "0x600281C")]
			[Address(RVA = "0x1C53D50", Offset = "0x1C53D50", VA = "0x1C53D50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600281D")]
			[Address(RVA = "0x1C53D58", Offset = "0x1C53D58", VA = "0x1C53D58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x1C53D60", Offset = "0x1C53D60", VA = "0x1C53D60")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x1C545EC", Offset = "0x1C545EC", VA = "0x1C545EC")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x1C53FBC", Offset = "0x1C53FBC", VA = "0x1C53FBC")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x1C54B6C", Offset = "0x1C54B6C", VA = "0x1C54B6C")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x1C54C3C", Offset = "0x1C54C3C", VA = "0x1C54C3C")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class Track
	{
		[Token(Token = "0x1700055F")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0x1C54C44", Offset = "0x1C54C44", VA = "0x1C54C44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002824")]
			[Address(RVA = "0x1C54C4C", Offset = "0x1C54C4C", VA = "0x1C54C4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x1C54C54", Offset = "0x1C54C54", VA = "0x1C54C54", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x1C53FC4", Offset = "0x1C53FC4", VA = "0x1C53FC4")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x1C54740", Offset = "0x1C54740", VA = "0x1C54740")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x1C54CD8", Offset = "0x1C54CD8", VA = "0x1C54CD8")]
		public Track()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class HapticEffect
	{
		[Token(Token = "0x17000560")]
		public int StartTime
		{
			[Token(Token = "0x6002829")]
			[Address(RVA = "0x1C55214", Offset = "0x1C55214", VA = "0x1C55214")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600282A")]
			[Address(RVA = "0x1C5521C", Offset = "0x1C5521C", VA = "0x1C5521C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000561")]
		public int OffsetTime
		{
			[Token(Token = "0x600282B")]
			[Address(RVA = "0x1C55224", Offset = "0x1C55224", VA = "0x1C55224")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600282C")]
			[Address(RVA = "0x1C5522C", Offset = "0x1C5522C", VA = "0x1C5522C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000562")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0x1C55234", Offset = "0x1C55234", VA = "0x1C55234")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600282E")]
			[Address(RVA = "0x1C5523C", Offset = "0x1C5523C", VA = "0x1C5523C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x1C55244", Offset = "0x1C55244", VA = "0x1C55244", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x1C54CE0", Offset = "0x1C54CE0", VA = "0x1C54CE0")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x1C54F88", Offset = "0x1C54F88", VA = "0x1C54F88")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x1C55524", Offset = "0x1C55524", VA = "0x1C55524")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class Layout
	{
		[Token(Token = "0x17000563")]
		public string Type
		{
			[Token(Token = "0x6002833")]
			[Address(RVA = "0x1C5581C", Offset = "0x1C5581C", VA = "0x1C5581C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002834")]
			[Address(RVA = "0x1C55824", Offset = "0x1C55824", VA = "0x1C55824")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000564")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6002835")]
			[Address(RVA = "0x1C5582C", Offset = "0x1C5582C", VA = "0x1C5582C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002836")]
			[Address(RVA = "0x1C55834", Offset = "0x1C55834", VA = "0x1C55834")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x1C54204", Offset = "0x1C54204", VA = "0x1C54204")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x1C5485C", Offset = "0x1C5485C", VA = "0x1C5485C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x1C5583C", Offset = "0x1C5583C", VA = "0x1C5583C")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class LayoutObject
	{
		[Token(Token = "0x17000565")]
		public int Index
		{
			[Token(Token = "0x600283A")]
			[Address(RVA = "0x1C55ABC", Offset = "0x1C55ABC", VA = "0x1C55ABC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600283B")]
			[Address(RVA = "0x1C55AC4", Offset = "0x1C55AC4", VA = "0x1C55AC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000566")]
		public float X
		{
			[Token(Token = "0x600283C")]
			[Address(RVA = "0x1C55ACC", Offset = "0x1C55ACC", VA = "0x1C55ACC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600283D")]
			[Address(RVA = "0x1C55AD4", Offset = "0x1C55AD4", VA = "0x1C55AD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000567")]
		public float Y
		{
			[Token(Token = "0x600283E")]
			[Address(RVA = "0x1C55ADC", Offset = "0x1C55ADC", VA = "0x1C55ADC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600283F")]
			[Address(RVA = "0x1C55AE4", Offset = "0x1C55AE4", VA = "0x1C55AE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x1C55844", Offset = "0x1C55844", VA = "0x1C55844")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x1C5597C", Offset = "0x1C5597C", VA = "0x1C5597C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x1C55AEC", Offset = "0x1C55AEC", VA = "0x1C55AEC")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class HapticEffectMode
	{
		[Token(Token = "0x17000568")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6002843")]
			[Address(RVA = "0x1C55AF4", Offset = "0x1C55AF4", VA = "0x1C55AF4")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6002844")]
			[Address(RVA = "0x1C55AFC", Offset = "0x1C55AFC", VA = "0x1C55AFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000569")]
		public DotMode DotMode
		{
			[Token(Token = "0x6002845")]
			[Address(RVA = "0x1C55B04", Offset = "0x1C55B04", VA = "0x1C55B04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002846")]
			[Address(RVA = "0x1C55B0C", Offset = "0x1C55B0C", VA = "0x1C55B0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056A")]
		public PathMode PathMode
		{
			[Token(Token = "0x6002847")]
			[Address(RVA = "0x1C55B14", Offset = "0x1C55B14", VA = "0x1C55B14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002848")]
			[Address(RVA = "0x1C55B1C", Offset = "0x1C55B1C", VA = "0x1C55B1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x1C5552C", Offset = "0x1C5552C", VA = "0x1C5552C")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x1C556A4", Offset = "0x1C556A4", VA = "0x1C556A4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x1C55B24", Offset = "0x1C55B24", VA = "0x1C55B24")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class DotMode
	{
		[Token(Token = "0x1700056B")]
		public bool DotConnected
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x1C56254", Offset = "0x1C56254", VA = "0x1C56254")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x1C5625C", Offset = "0x1C5625C", VA = "0x1C5625C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056C")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x1C56268", Offset = "0x1C56268", VA = "0x1C56268")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x1C56270", Offset = "0x1C56270", VA = "0x1C56270")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x1C55B2C", Offset = "0x1C55B2C", VA = "0x1C55B2C")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x1C55FB8", Offset = "0x1C55FB8", VA = "0x1C55FB8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x1C56278", Offset = "0x1C56278", VA = "0x1C56278")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x1700056D")]
		public int StartTime
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x1C567A0", Offset = "0x1C567A0", VA = "0x1C567A0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x1C567A8", Offset = "0x1C567A8", VA = "0x1C567A8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public int EndTime
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x1C567B0", Offset = "0x1C567B0", VA = "0x1C567B0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x1C567B8", Offset = "0x1C567B8", VA = "0x1C567B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056F")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0x1C567C0", Offset = "0x1C567C0", VA = "0x1C567C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002858")]
			[Address(RVA = "0x1C567C8", Offset = "0x1C567C8", VA = "0x1C567C8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x1C56280", Offset = "0x1C56280", VA = "0x1C56280")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x1C5656C", Offset = "0x1C5656C", VA = "0x1C5656C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x1C567D0", Offset = "0x1C567D0", VA = "0x1C567D0")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class DotModeObject
	{
		[Token(Token = "0x17000570")]
		public int Index
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0x1C56AD4", Offset = "0x1C56AD4", VA = "0x1C56AD4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600285D")]
			[Address(RVA = "0x1C56ADC", Offset = "0x1C56ADC", VA = "0x1C56ADC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000571")]
		public float Intensity
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0x1C56AE4", Offset = "0x1C56AE4", VA = "0x1C56AE4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600285F")]
			[Address(RVA = "0x1C56AEC", Offset = "0x1C56AEC", VA = "0x1C56AEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x1C5691C", Offset = "0x1C5691C", VA = "0x1C5691C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x1C569D4", Offset = "0x1C569D4", VA = "0x1C569D4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x1C56AF4", Offset = "0x1C56AF4", VA = "0x1C56AF4")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x2000624")]
	public class PathMode
	{
		[Token(Token = "0x17000572")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6002863")]
			[Address(RVA = "0x1C56C50", Offset = "0x1C56C50", VA = "0x1C56C50")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002864")]
			[Address(RVA = "0x1C56C58", Offset = "0x1C56C58", VA = "0x1C56C58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x1C55DA0", Offset = "0x1C55DA0", VA = "0x1C55DA0")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x1C56138", Offset = "0x1C56138", VA = "0x1C56138")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x1C56C60", Offset = "0x1C56C60", VA = "0x1C56C60")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x17000573")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6002868")]
			[Address(RVA = "0x1C571A4", Offset = "0x1C571A4", VA = "0x1C571A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002869")]
			[Address(RVA = "0x1C571AC", Offset = "0x1C571AC", VA = "0x1C571AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x1C56C68", Offset = "0x1C56C68", VA = "0x1C56C68")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x1C56F74", Offset = "0x1C56F74", VA = "0x1C56F74")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1C571B4", Offset = "0x1C571B4", VA = "0x1C571B4")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class PathModeObject
	{
		[Token(Token = "0x17000574")]
		public float X
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0x1C57460", Offset = "0x1C57460", VA = "0x1C57460")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600286E")]
			[Address(RVA = "0x1C57468", Offset = "0x1C57468", VA = "0x1C57468")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000575")]
		public float Y
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0x1C57470", Offset = "0x1C57470", VA = "0x1C57470")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002870")]
			[Address(RVA = "0x1C57478", Offset = "0x1C57478", VA = "0x1C57478")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000576")]
		public float Intensity
		{
			[Token(Token = "0x6002871")]
			[Address(RVA = "0x1C57480", Offset = "0x1C57480", VA = "0x1C57480")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x1C57488", Offset = "0x1C57488", VA = "0x1C57488")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000577")]
		public int Time
		{
			[Token(Token = "0x6002873")]
			[Address(RVA = "0x1C57490", Offset = "0x1C57490", VA = "0x1C57490")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002874")]
			[Address(RVA = "0x1C57498", Offset = "0x1C57498", VA = "0x1C57498")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x1C571C4", Offset = "0x1C571C4", VA = "0x1C571C4")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x1C572E0", Offset = "0x1C572E0", VA = "0x1C572E0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x1C574A0", Offset = "0x1C574A0", VA = "0x1C574A0")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x2000627")]
	internal class ParseUtil
	{
		[Token(Token = "0x6002878")]
		[Address(RVA = "0x1C56AFC", Offset = "0x1C56AFC", VA = "0x1C56AFC")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x1C567D8", Offset = "0x1C567D8", VA = "0x1C567D8")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x1C574A8", Offset = "0x1C574A8", VA = "0x1C574A8")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x2000628")]
	public class BhapticsUtils
	{
		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x40029B3")]
		public const string TypeHead = "Head";

		[Token(Token = "0x40029B4")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x40029B5")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x40029B6")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x40029B7")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x40029B8")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x40029B9")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x40029BA")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x600287B")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x1C574B0", Offset = "0x1C574B0", VA = "0x1C574B0")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x1C574F0", Offset = "0x1C574F0", VA = "0x1C574F0")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x1C574F8", Offset = "0x1C574F8", VA = "0x1C574F8")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x1C57500", Offset = "0x1C57500", VA = "0x1C57500")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x1C5751C", Offset = "0x1C5751C", VA = "0x1C5751C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x1C57520", Offset = "0x1C57520", VA = "0x1C57520")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1C576C4", Offset = "0x1C576C4", VA = "0x1C576C4")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x1C5771C", Offset = "0x1C5771C", VA = "0x1C5771C")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x1C4B174", Offset = "0x1C4B174", VA = "0x1C4B174")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x1C5773C", Offset = "0x1C5773C", VA = "0x1C5773C")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6002886")]
		[Address(RVA = "0x1C57744", Offset = "0x1C57744", VA = "0x1C57744")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		public float Intensity;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x17000578")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x1C57758", Offset = "0x1C57758", VA = "0x1C57758")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x1C5781C", Offset = "0x1C5781C", VA = "0x1C5781C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x1C57878", Offset = "0x1C57878", VA = "0x1C57878", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x1C57890", Offset = "0x1C57890", VA = "0x1C57890", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x1C578A8", Offset = "0x1C578A8", VA = "0x1C578A8", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x1C578BC", Offset = "0x1C578BC", VA = "0x1C578BC", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x1C578CC", Offset = "0x1C578CC", VA = "0x1C578CC", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x1C579F0", Offset = "0x1C579F0", VA = "0x1C579F0", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x1C57A64", Offset = "0x1C57A64", VA = "0x1C57A64", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x1C5393C", Offset = "0x1C5393C", VA = "0x1C5393C", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x1C57784", Offset = "0x1C57784", VA = "0x1C57784")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x1C5395C", Offset = "0x1C5395C", VA = "0x1C5395C")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6002893")]
		[Address(RVA = "0x1C57D1C", Offset = "0x1C57D1C", VA = "0x1C57D1C")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x40029C1")]
		None,
		[Token(Token = "0x40029C2")]
		Tactal,
		[Token(Token = "0x40029C3")]
		TactSuit,
		[Token(Token = "0x40029C4")]
		Tactosy_arms,
		[Token(Token = "0x40029C5")]
		Tactosy_hands,
		[Token(Token = "0x40029C6")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x200062D")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x40029C8")]
		VestFront,
		[Token(Token = "0x40029C9")]
		VestBack,
		[Token(Token = "0x40029CA")]
		Head,
		[Token(Token = "0x40029CB")]
		RightForearm,
		[Token(Token = "0x40029CC")]
		LeftForearm,
		[Token(Token = "0x40029CD")]
		LeftHand,
		[Token(Token = "0x40029CE")]
		RightHand,
		[Token(Token = "0x40029CF")]
		LeftFoot,
		[Token(Token = "0x40029D0")]
		RightFoot
	}
	[Token(Token = "0x200062E")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x40029D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x1C57D30", Offset = "0x1C57D30", VA = "0x1C57D30", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x1C57D90", Offset = "0x1C57D90", VA = "0x1C57D90", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x1C57DAC", Offset = "0x1C57DAC", VA = "0x1C57DAC", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x1C57DC4", Offset = "0x1C57DC4", VA = "0x1C57DC4", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x1C57DD8", Offset = "0x1C57DD8", VA = "0x1C57DD8", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x1C57DE8", Offset = "0x1C57DE8", VA = "0x1C57DE8", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x1C57F0C", Offset = "0x1C57F0C", VA = "0x1C57F0C", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x1C57F7C", Offset = "0x1C57F7C", VA = "0x1C57F7C", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x1C57FFC", Offset = "0x1C57FFC", VA = "0x1C57FFC", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x1C58000", Offset = "0x1C58000", VA = "0x1C58000", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x1C580A4", Offset = "0x1C580A4", VA = "0x1C580A4", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x1C58174", Offset = "0x1C58174", VA = "0x1C58174", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x1C58230", Offset = "0x1C58230", VA = "0x1C58230", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x1C57CA4", Offset = "0x1C57CA4", VA = "0x1C57CA4", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x1C58300", Offset = "0x1C58300", VA = "0x1C58300")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x1C57CA8", Offset = "0x1C57CA8", VA = "0x1C57CA8")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x200062F")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x1C58308", Offset = "0x1C58308", VA = "0x1C58308")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x1C58448", Offset = "0x1C58448", VA = "0x1C58448")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x1C585E8", Offset = "0x1C585E8", VA = "0x1C585E8")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x1C58504", Offset = "0x1C58504", VA = "0x1C58504")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x1C587CC", Offset = "0x1C587CC", VA = "0x1C587CC")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x1C587DC", Offset = "0x1C587DC", VA = "0x1C587DC")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x1C586C0", Offset = "0x1C586C0", VA = "0x1C586C0")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x1C58A58", Offset = "0x1C58A58", VA = "0x1C58A58")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x1C58ACC", Offset = "0x1C58ACC", VA = "0x1C58ACC")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x1C58BFC", Offset = "0x1C58BFC", VA = "0x1C58BFC")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x1C58D14", Offset = "0x1C58D14", VA = "0x1C58D14")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x1C587E8", Offset = "0x1C587E8", VA = "0x1C587E8")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x1C58D1C", Offset = "0x1C58D1C", VA = "0x1C58D1C")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public enum PositionTag
	{
		[Token(Token = "0x40029DC")]
		Body,
		[Token(Token = "0x40029DD")]
		Head,
		[Token(Token = "0x40029DE")]
		LeftArm,
		[Token(Token = "0x40029DF")]
		RightArm,
		[Token(Token = "0x40029E0")]
		Default
	}
	[Token(Token = "0x2000632")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x2000633")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028BE")]
				[Address(RVA = "0x1C59780", Offset = "0x1C59780", VA = "0x1C59780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C0")]
				[Address(RVA = "0x1C597C8", Offset = "0x1C597C8", VA = "0x1C597C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x1C59640", Offset = "0x1C59640", VA = "0x1C59640")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x1C59698", Offset = "0x1C59698", VA = "0x1C59698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x1C5969C", Offset = "0x1C5969C", VA = "0x1C5969C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x1C59788", Offset = "0x1C59788", VA = "0x1C59788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000634")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C4")]
				[Address(RVA = "0x1C599BC", Offset = "0x1C599BC", VA = "0x1C599BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C6")]
				[Address(RVA = "0x1C59A04", Offset = "0x1C59A04", VA = "0x1C59A04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x1C59668", Offset = "0x1C59668", VA = "0x1C59668")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x1C597D0", Offset = "0x1C597D0", VA = "0x1C597D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x1C597D4", Offset = "0x1C597D4", VA = "0x1C597D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x1C599C4", Offset = "0x1C599C4", VA = "0x1C599C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x1C58D2C", Offset = "0x1C58D2C", VA = "0x1C58D2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x1C5928C", Offset = "0x1C5928C", VA = "0x1C5928C")]
		public void Play()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x1C58FE8", Offset = "0x1C58FE8", VA = "0x1C58FE8")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x1C59304", Offset = "0x1C59304", VA = "0x1C59304")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x1C594D0", Offset = "0x1C594D0", VA = "0x1C594D0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x1C595B0", Offset = "0x1C595B0", VA = "0x1C595B0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x1C5944C", Offset = "0x1C5944C", VA = "0x1C5944C")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__13))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x1C59124", Offset = "0x1C59124", VA = "0x1C59124")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x1C59290", Offset = "0x1C59290", VA = "0x1C59290")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__15))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x1C59690", Offset = "0x1C59690", VA = "0x1C59690")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x1C59A0C", Offset = "0x1C59A0C", VA = "0x1C59A0C")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public interface IHaptic
	{
		[Token(Token = "0x60028C8")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60028C9")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60028CA")]
		bool IsPlaying(string key);

		[Token(Token = "0x60028CB")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60028CC")]
		bool IsPlaying();

		[Token(Token = "0x60028CD")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60028CE")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60028CF")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60028D0")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60028D1")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60028D2")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60028D3")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60028D4")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60028D5")]
		void TurnOff(string key);

		[Token(Token = "0x60028D6")]
		void TurnOff();

		[Token(Token = "0x60028D7")]
		void Dispose();

		[Token(Token = "0x60028D8")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x2000637")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x1C59A20", Offset = "0x1C59A20", VA = "0x1C59A20", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x1C59F04", Offset = "0x1C59F04", VA = "0x1C59F04", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x1C59C0C", Offset = "0x1C59C0C", VA = "0x1C59C0C")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x1C59D84", Offset = "0x1C59D84", VA = "0x1C59D84")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x1C59FA0", Offset = "0x1C59FA0", VA = "0x1C59FA0")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000638")]
	public class Point
	{
		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x1C5A0D0", Offset = "0x1C5A0D0", VA = "0x1C5A0D0")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000639")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x40029FA")]
		DotMode = 1,
		[Token(Token = "0x40029FB")]
		PathMode
	}
	[Token(Token = "0x200063A")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 360f)]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[Range(-0.5f, 0.5f)]
		protected float TactFileOffsetY;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x1C5A208", Offset = "0x1C5A208", VA = "0x1C5A208", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x1C5A260", Offset = "0x1C5A260", VA = "0x1C5A260", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x1C5A274", Offset = "0x1C5A274", VA = "0x1C5A274", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x1C5A288", Offset = "0x1C5A288", VA = "0x1C5A288", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x1C5A298", Offset = "0x1C5A298", VA = "0x1C5A298", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x1C5A2A8", Offset = "0x1C5A2A8", VA = "0x1C5A2A8", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x1C5A4F4", Offset = "0x1C5A4F4", VA = "0x1C5A4F4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x1C5A504", Offset = "0x1C5A504", VA = "0x1C5A504")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x200063B")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x1C5A5D0", Offset = "0x1C5A5D0", VA = "0x1C5A5D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x1C5A940", Offset = "0x1C5A940", VA = "0x1C5A940")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x1C5A9F8", Offset = "0x1C5A9F8", VA = "0x1C5A9F8")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x1C5ABD8", Offset = "0x1C5ABD8", VA = "0x1C5ABD8")]
		public VisualFeedback()
		{
		}
	}
}
namespace CTI
{
	[Token(Token = "0x200063C")]
	[RequireComponent(typeof(WindZone))]
	public class CTI_CustomWind : MonoBehaviour
	{
		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WindZone m_WindZone;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 WindDirection;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float WindStrength;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float WindTurbulence;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float WindMultiplier;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool init;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int TerrainLODWindPID;

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x1C5ABF0", Offset = "0x1C5ABF0", VA = "0x1C5ABF0")]
		private void Init()
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x1C5AC78", Offset = "0x1C5AC78", VA = "0x1C5AC78")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x1C5AC7C", Offset = "0x1C5AC7C", VA = "0x1C5AC7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x1C5AE74", Offset = "0x1C5AE74", VA = "0x1C5AE74")]
		public CTI_CustomWind()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public static class CTI_Utils
	{
		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x1C5AE84", Offset = "0x1C5AE84", VA = "0x1C5AE84")]
		public static void SetTranslucentLightingFade(float TranslucentLightingRange, float FadeLengthFactor)
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x200063E")]
	internal class Behavior
	{
		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool jettison;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool boundaryMarkers;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool noHoles;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool conformDel;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x1700057D")]
		public static bool NoExact
		{
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x1C5B2C8", Offset = "0x1C5B2C8", VA = "0x1C5B2C8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x1C5B310", Offset = "0x1C5B310", VA = "0x1C5B310")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700057E")]
		public bool Quality
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x1C5B35C", Offset = "0x1C5B35C", VA = "0x1C5B35C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0x1C5B364", Offset = "0x1C5B364", VA = "0x1C5B364")]
			set
			{
			}
		}

		[Token(Token = "0x1700057F")]
		public double MinAngle
		{
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x1C5B378", Offset = "0x1C5B378", VA = "0x1C5B378")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x1C5B380", Offset = "0x1C5B380", VA = "0x1C5B380")]
			set
			{
			}
		}

		[Token(Token = "0x17000580")]
		public double MaxAngle
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x1C5B388", Offset = "0x1C5B388", VA = "0x1C5B388")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0x1C5B390", Offset = "0x1C5B390", VA = "0x1C5B390")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public double MaxArea
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x1C5B398", Offset = "0x1C5B398", VA = "0x1C5B398")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x1C5B3A0", Offset = "0x1C5B3A0", VA = "0x1C5B3A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public bool VarArea
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x1C5B3B4", Offset = "0x1C5B3B4", VA = "0x1C5B3B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x1C5B3BC", Offset = "0x1C5B3BC", VA = "0x1C5B3BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public bool Poly
		{
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x1C5B3C8", Offset = "0x1C5B3C8", VA = "0x1C5B3C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002900")]
			[Address(RVA = "0x1C5B3D0", Offset = "0x1C5B3D0", VA = "0x1C5B3D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000584")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x1C5B3DC", Offset = "0x1C5B3DC", VA = "0x1C5B3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x1C5B3E4", Offset = "0x1C5B3E4", VA = "0x1C5B3E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000585")]
		public bool Convex
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0x1C5B3EC", Offset = "0x1C5B3EC", VA = "0x1C5B3EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002904")]
			[Address(RVA = "0x1C5B3F4", Offset = "0x1C5B3F4", VA = "0x1C5B3F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000586")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x1C5B400", Offset = "0x1C5B400", VA = "0x1C5B400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x1C5B408", Offset = "0x1C5B408", VA = "0x1C5B408")]
			set
			{
			}
		}

		[Token(Token = "0x17000587")]
		public int NoBisect
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0x1C5B414", Offset = "0x1C5B414", VA = "0x1C5B414")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002908")]
			[Address(RVA = "0x1C5B41C", Offset = "0x1C5B41C", VA = "0x1C5B41C")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x6002909")]
			[Address(RVA = "0x1C5B42C", Offset = "0x1C5B42C", VA = "0x1C5B42C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600290A")]
			[Address(RVA = "0x1C5B434", Offset = "0x1C5B434", VA = "0x1C5B434")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public bool NoHoles
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0x1C5B440", Offset = "0x1C5B440", VA = "0x1C5B440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600290C")]
			[Address(RVA = "0x1C5B448", Offset = "0x1C5B448", VA = "0x1C5B448")]
			set
			{
			}
		}

		[Token(Token = "0x1700058A")]
		public bool Jettison
		{
			[Token(Token = "0x600290D")]
			[Address(RVA = "0x1C5B454", Offset = "0x1C5B454", VA = "0x1C5B454")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600290E")]
			[Address(RVA = "0x1C5B45C", Offset = "0x1C5B45C", VA = "0x1C5B45C")]
			set
			{
			}
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x1C5AF04", Offset = "0x1C5AF04", VA = "0x1C5AF04")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x1C5AF68", Offset = "0x1C5AF68", VA = "0x1C5AF68")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class Configuration
	{
		[Token(Token = "0x1700058B")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x6002912")]
			[Address(RVA = "0x1C5B71C", Offset = "0x1C5B71C", VA = "0x1C5B71C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002913")]
			[Address(RVA = "0x1C5B724", Offset = "0x1C5B724", VA = "0x1C5B724")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700058C")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x1C5B72C", Offset = "0x1C5B72C", VA = "0x1C5B72C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x1C5B734", Offset = "0x1C5B734", VA = "0x1C5B734")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x1C5B468", Offset = "0x1C5B468", VA = "0x1C5B468")]
		public Configuration()
		{
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x1C5B62C", Offset = "0x1C5B62C", VA = "0x1C5B62C")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x1C5B5E8", Offset = "0x1C5B5E8", VA = "0x1C5B5E8")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x2000641")]
	public enum VertexType
	{
		[Token(Token = "0x4002A27")]
		InputVertex,
		[Token(Token = "0x4002A28")]
		SegmentVertex,
		[Token(Token = "0x4002A29")]
		FreeVertex,
		[Token(Token = "0x4002A2A")]
		DeadVertex,
		[Token(Token = "0x4002A2B")]
		UndeadVertex
	}
	[Token(Token = "0x2000642")]
	public enum NodeNumbering
	{
		[Token(Token = "0x4002A2D")]
		None,
		[Token(Token = "0x4002A2E")]
		Linear,
		[Token(Token = "0x4002A2F")]
		CuthillMcKee
	}
	[Token(Token = "0x2000643")]
	public enum LocateResult
	{
		[Token(Token = "0x4002A31")]
		InTriangle,
		[Token(Token = "0x4002A32")]
		OnEdge,
		[Token(Token = "0x4002A33")]
		OnVertex,
		[Token(Token = "0x4002A34")]
		Outside
	}
	[Token(Token = "0x2000644")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x4002A36")]
		Successful,
		[Token(Token = "0x4002A37")]
		Encroaching,
		[Token(Token = "0x4002A38")]
		Violating,
		[Token(Token = "0x4002A39")]
		Duplicate
	}
	[Token(Token = "0x2000645")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x4002A3B")]
		Within,
		[Token(Token = "0x4002A3C")]
		Leftcollinear,
		[Token(Token = "0x4002A3D")]
		Rightcollinear
	}
	[Token(Token = "0x2000646")]
	public interface IPredicates
	{
		[Token(Token = "0x600291B")]
		double CounterClockwise(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c);

		[Token(Token = "0x600291C")]
		double InCircle(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c, TriangleNet.Geometry.Point p);

		[Token(Token = "0x600291D")]
		TriangleNet.Geometry.Point FindCircumcenter(TriangleNet.Geometry.Point org, TriangleNet.Geometry.Point dest, TriangleNet.Geometry.Point apex, ref double xi, ref double eta);

		[Token(Token = "0x600291E")]
		TriangleNet.Geometry.Point FindCircumcenter(TriangleNet.Geometry.Point org, TriangleNet.Geometry.Point dest, TriangleNet.Geometry.Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x2000647")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x1700058D")]
		public static bool Verbose
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x1C5B8BC", Offset = "0x1C5B8BC", VA = "0x1C5B8BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002920")]
			[Address(RVA = "0x1C5B914", Offset = "0x1C5B914", VA = "0x1C5B914")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700058E")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x1C5BA5C", Offset = "0x1C5BA5C", VA = "0x1C5BA5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058F")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x1C5BEB4", Offset = "0x1C5BEB4", VA = "0x1C5BEB4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		public LogLevel Level
		{
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x1C5BEBC", Offset = "0x1C5BEBC", VA = "0x1C5BEBC", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x1C5B970", Offset = "0x1C5B970", VA = "0x1C5B970")]
		static Log()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1C5B9D4", Offset = "0x1C5B9D4", VA = "0x1C5B9D4")]
		private Log()
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x1C5BAB4", Offset = "0x1C5BAB4", VA = "0x1C5BAB4", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x1C5BB64", Offset = "0x1C5BB64", VA = "0x1C5BB64", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x1C5BBD4", Offset = "0x1C5BBD4", VA = "0x1C5BBD4", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1C5BCC4", Offset = "0x1C5BCC4", VA = "0x1C5BCC4", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x1C5BDBC", Offset = "0x1C5BDBC", VA = "0x1C5BDBC", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x2000649")]
		[CompilerGenerated]
		private sealed class <get_Edges>d__39 : IEnumerable<Edge>, IEnumerable, IEnumerator<Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Edge <>2__current;

			[Token(Token = "0x4002A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh <>4__this;

			[Token(Token = "0x4002A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x1700059B")]
			private Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x600294F")]
				[Address(RVA = "0x1CA2B64", Offset = "0x1CA2B64", VA = "0x1CA2B64", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002951")]
				[Address(RVA = "0x1CA2BAC", Offset = "0x1CA2BAC", VA = "0x1CA2BAC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600294C")]
			[Address(RVA = "0x1CA2A58", Offset = "0x1CA2A58", VA = "0x1CA2A58")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600294D")]
			[Address(RVA = "0x1CA2A8C", Offset = "0x1CA2A8C", VA = "0x1CA2A8C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600294E")]
			[Address(RVA = "0x1CA2A90", Offset = "0x1CA2A90", VA = "0x1CA2A90", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002950")]
			[Address(RVA = "0x1CA2B6C", Offset = "0x1CA2B6C", VA = "0x1CA2B6C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002952")]
			[Address(RVA = "0x1CA2BB4", Offset = "0x1CA2BB4", VA = "0x1CA2BB4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002953")]
			[Address(RVA = "0x1CA2C60", Offset = "0x1CA2C60", VA = "0x1CA2C60", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int hash_tri;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<TriangleNet.Geometry.Point> holes;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal Rectangle bounds;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int invertices;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int insegments;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int undeads;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int mesh_dim;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int nextras;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int hullsize;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int steinerleft;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal bool checksegments;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		internal bool checkquality;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal TriangleLocator locator;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Behavior behavior;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal NodeNumbering numbering;

		[Token(Token = "0x4002A5E")]
		internal const int DUMMY = -1;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal Triangle dummytri;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal SubSegment dummysub;

		[Token(Token = "0x17000591")]
		public Rectangle Bounds
		{
			[Token(Token = "0x600292B")]
			[Address(RVA = "0x1C5BEC4", Offset = "0x1C5BEC4", VA = "0x1C5BEC4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x1C5BECC", Offset = "0x1C5BECC", VA = "0x1C5BECC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000593")]
		public IList<TriangleNet.Geometry.Point> Holes
		{
			[Token(Token = "0x600292D")]
			[Address(RVA = "0x1C5BF1C", Offset = "0x1C5BF1C", VA = "0x1C5BF1C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		public ICollection<Triangle> Triangles
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x1C5BF24", Offset = "0x1C5BF24", VA = "0x1C5BF24", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000595")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x1C5BF2C", Offset = "0x1C5BF2C", VA = "0x1C5BF2C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000596")]
		public IEnumerable<Edge> Edges
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x1C5BF7C", Offset = "0x1C5BF7C", VA = "0x1C5BF7C", Slot = "5")]
			[IteratorStateMachine(typeof(<get_Edges>d__39))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000597")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x1C5BFF0", Offset = "0x1C5BFF0", VA = "0x1C5BFF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000598")]
		public int NumberOfEdges
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x1C5BFF8", Offset = "0x1C5BFF8", VA = "0x1C5BFF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000599")]
		public bool IsPolygon
		{
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x1C5C034", Offset = "0x1C5C034", VA = "0x1C5C034")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059A")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x1C5C044", Offset = "0x1C5C044", VA = "0x1C5C044")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x1C5C04C", Offset = "0x1C5C04C", VA = "0x1C5C04C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x1C5C228", Offset = "0x1C5C228", VA = "0x1C5C228")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x1C5C56C", Offset = "0x1C5C56C", VA = "0x1C5C56C", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x1C5C728", Offset = "0x1C5C728", VA = "0x1C5C728", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x1C5C730", Offset = "0x1C5C730", VA = "0x1C5C730")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x1C5CC30", Offset = "0x1C5CC30", VA = "0x1C5CC30")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x1C5CC38", Offset = "0x1C5CC38", VA = "0x1C5CC38")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x1C5CCCC", Offset = "0x1C5CCCC", VA = "0x1C5CCCC")]
		private void ResetData()
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x1C5C6B8", Offset = "0x1C5C6B8", VA = "0x1C5C6B8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x1C5CE08", Offset = "0x1C5CE08", VA = "0x1C5CE08")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x1C5D408", Offset = "0x1C5D408", VA = "0x1C5D408")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x1C5D6E0", Offset = "0x1C5D6E0", VA = "0x1C5D6E0")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x1C5D7E8", Offset = "0x1C5D7E8", VA = "0x1C5D7E8")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x1C5D918", Offset = "0x1C5D918", VA = "0x1C5D918")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x1C5E9F4", Offset = "0x1C5E9F4", VA = "0x1C5E9F4")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x1C5EB38", Offset = "0x1C5EB38", VA = "0x1C5EB38")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x1C5EE3C", Offset = "0x1C5EE3C", VA = "0x1C5EE3C")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x1C5F140", Offset = "0x1C5F140", VA = "0x1C5F140")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x1C5F3C8", Offset = "0x1C5F3C8", VA = "0x1C5F3C8")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x1C5F6E0", Offset = "0x1C5F6E0", VA = "0x1C5F6E0")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x1C5F664", Offset = "0x1C5F664", VA = "0x1C5F664")]
		internal void TriangleDealloc(Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x1C5F600", Offset = "0x1C5F600", VA = "0x1C5F600")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x1C5FA34", Offset = "0x1C5FA34", VA = "0x1C5FA34")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x200064A")]
	public static class MeshValidator
	{
		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x1CA2C64", Offset = "0x1CA2C64", VA = "0x1CA2C64")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x1CA3758", Offset = "0x1CA3758", VA = "0x1CA3758")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x1CA4020", Offset = "0x1CA4020", VA = "0x1CA4020")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x1CA37B0", Offset = "0x1CA37B0", VA = "0x1CA37B0")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200064B")]
	internal class NewLocation
	{
		[Token(Token = "0x4002A67")]
		private const double EPS = 1E-50;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1CA40F8", Offset = "0x1CA40F8", VA = "0x1CA40F8")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x1CA42D8", Offset = "0x1CA42D8", VA = "0x1CA42D8")]
		public TriangleNet.Geometry.Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1CA4318", Offset = "0x1CA4318", VA = "0x1CA4318")]
		private TriangleNet.Geometry.Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1CA5440", Offset = "0x1CA5440", VA = "0x1CA5440")]
		private TriangleNet.Geometry.Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1CA71A0", Offset = "0x1CA71A0", VA = "0x1CA71A0")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1CA722C", Offset = "0x1CA722C", VA = "0x1CA722C")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1CA848C", Offset = "0x1CA848C", VA = "0x1CA848C")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1CA7640", Offset = "0x1CA7640", VA = "0x1CA7640")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x1CA88EC", Offset = "0x1CA88EC", VA = "0x1CA88EC")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x1CA9498", Offset = "0x1CA9498", VA = "0x1CA9498")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x1CA8734", Offset = "0x1CA8734", VA = "0x1CA8734")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1CAB220", Offset = "0x1CAB220", VA = "0x1CAB220")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1CA7FD8", Offset = "0x1CA7FD8", VA = "0x1CA7FD8")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1CAAEF0", Offset = "0x1CAAEF0", VA = "0x1CAAEF0")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x1CAB324", Offset = "0x1CAB324", VA = "0x1CAB324")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x1CABE40", Offset = "0x1CABE40", VA = "0x1CABE40")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1CABC70", Offset = "0x1CABC70", VA = "0x1CABC70")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1CAB170", Offset = "0x1CAB170", VA = "0x1CAB170")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x1CA7AC8", Offset = "0x1CA7AC8", VA = "0x1CA7AC8")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x1CA7D1C", Offset = "0x1CA7D1C", VA = "0x1CA7D1C")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x1CA7D5C", Offset = "0x1CA7D5C", VA = "0x1CA7D5C")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x1CA7E20", Offset = "0x1CA7E20", VA = "0x1CA7E20")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x1CA8194", Offset = "0x1CA8194", VA = "0x1CA8194")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200064C")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x1700059D")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0x1BF0350", Offset = "0x1BF0350", VA = "0x1BF0350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x1BF0504", Offset = "0x1BF0504", VA = "0x1BF0504")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x1BF04E8", Offset = "0x1BF04E8", VA = "0x1BF04E8")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x1BF0994", Offset = "0x1BF0994", VA = "0x1BF0994", Slot = "4")]
		public double CounterClockwise(TriangleNet.Geometry.Point pa, TriangleNet.Geometry.Point pb, TriangleNet.Geometry.Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x1BF1300", Offset = "0x1BF1300", VA = "0x1BF1300", Slot = "5")]
		public double InCircle(TriangleNet.Geometry.Point pa, TriangleNet.Geometry.Point pb, TriangleNet.Geometry.Point pc, TriangleNet.Geometry.Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x1BF42FC", Offset = "0x1BF42FC", VA = "0x1BF42FC")]
		public double NonRegular(TriangleNet.Geometry.Point pa, TriangleNet.Geometry.Point pb, TriangleNet.Geometry.Point pc, TriangleNet.Geometry.Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x1BF4300", Offset = "0x1BF4300", VA = "0x1BF4300", Slot = "7")]
		public TriangleNet.Geometry.Point FindCircumcenter(TriangleNet.Geometry.Point org, TriangleNet.Geometry.Point dest, TriangleNet.Geometry.Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x1BF464C", Offset = "0x1BF464C", VA = "0x1BF464C", Slot = "6")]
		public TriangleNet.Geometry.Point FindCircumcenter(TriangleNet.Geometry.Point org, TriangleNet.Geometry.Point dest, TriangleNet.Geometry.Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x1BF4854", Offset = "0x1BF4854", VA = "0x1BF4854")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1BF4B1C", Offset = "0x1BF4B1C", VA = "0x1BF4B1C")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1BF4D50", Offset = "0x1BF4D50", VA = "0x1BF4D50")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1BF0B60", Offset = "0x1BF0B60", VA = "0x1BF0B60")]
		private double CounterClockwiseAdapt(TriangleNet.Geometry.Point pa, TriangleNet.Geometry.Point pb, TriangleNet.Geometry.Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1BF15A8", Offset = "0x1BF15A8", VA = "0x1BF15A8")]
		private double InCircleAdapt(TriangleNet.Geometry.Point pa, TriangleNet.Geometry.Point pb, TriangleNet.Geometry.Point pc, TriangleNet.Geometry.Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1BF0680", Offset = "0x1BF0680", VA = "0x1BF0680")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1BF4DA8", Offset = "0x1BF4DA8", VA = "0x1BF4DA8")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x200064D")]
	public class TriangleLocator
	{
		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1BF4DAC", Offset = "0x1BF4DAC", VA = "0x1BF4DAC")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1BF4E18", Offset = "0x1BF4E18", VA = "0x1BF4E18")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x1BF4F38", Offset = "0x1BF4F38", VA = "0x1BF4F38")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x1BF4F4C", Offset = "0x1BF4F4C", VA = "0x1BF4F4C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x1BF4F88", Offset = "0x1BF4F88", VA = "0x1BF4F88")]
		public LocateResult PreciseLocate(TriangleNet.Geometry.Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x1BF5294", Offset = "0x1BF5294", VA = "0x1BF5294")]
		public LocateResult Locate(TriangleNet.Geometry.Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x200064E")]
	public class TrianglePool : ICollection<Triangle>, IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x200064F")]
		private class Enumerator : IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle[][] pool;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Triangle current;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x170005A0")]
			public Triangle Current
			{
				[Token(Token = "0x6002995")]
				[Address(RVA = "0x1BF65B0", Offset = "0x1BF65B0", VA = "0x1BF65B0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002997")]
				[Address(RVA = "0x1BF65BC", Offset = "0x1BF65BC", VA = "0x1BF65BC", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002994")]
			[Address(RVA = "0x1BF6560", Offset = "0x1BF6560", VA = "0x1BF6560")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x6002996")]
			[Address(RVA = "0x1BF65B8", Offset = "0x1BF65B8", VA = "0x1BF65B8", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0x1BF65C4", Offset = "0x1BF65C4", VA = "0x1BF65C4", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002999")]
			[Address(RVA = "0x1BF6684", Offset = "0x1BF6684", VA = "0x1BF6684", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000650")]
		[CompilerGenerated]
		private sealed class <Sample>d__9 : IEnumerable<Triangle>, IEnumerable, IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle <>2__current;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x170005A2")]
			private Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x600299D")]
				[Address(RVA = "0x1BF67A0", Offset = "0x1BF67A0", VA = "0x1BF67A0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600299F")]
				[Address(RVA = "0x1BF67E8", Offset = "0x1BF67E8", VA = "0x1BF67E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1BF60D4", Offset = "0x1BF60D4", VA = "0x1BF60D4")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1BF668C", Offset = "0x1BF668C", VA = "0x1BF668C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600299C")]
			[Address(RVA = "0x1BF6690", Offset = "0x1BF6690", VA = "0x1BF6690", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600299E")]
			[Address(RVA = "0x1BF67A8", Offset = "0x1BF67A8", VA = "0x1BF67A8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x1BF67F0", Offset = "0x1BF67F0", VA = "0x1BF67F0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x1BF68B4", Offset = "0x1BF68B4", VA = "0x1BF68B4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002A9F")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triangle[][] pool;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Triangle> stack;

		[Token(Token = "0x1700059E")]
		public int Count
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x1BF64C8", Offset = "0x1BF64C8", VA = "0x1BF64C8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700059F")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x1BF6518", Offset = "0x1BF6518", VA = "0x1BF6518", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x1BF5964", Offset = "0x1BF5964", VA = "0x1BF5964")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x1BF5AD4", Offset = "0x1BF5AD4", VA = "0x1BF5AD4")]
		public Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x1BF5E2C", Offset = "0x1BF5E2C", VA = "0x1BF5E2C")]
		public void Release(Triangle triangle)
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x1BF5E98", Offset = "0x1BF5E98", VA = "0x1BF5E98")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x1BF602C", Offset = "0x1BF602C", VA = "0x1BF602C")]
		[IteratorStateMachine(typeof(<Sample>d__9))]
		internal IEnumerable<Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x1BF5D78", Offset = "0x1BF5D78", VA = "0x1BF5D78")]
		private void Cleanup(Triangle triangle)
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x1BF6108", Offset = "0x1BF6108", VA = "0x1BF6108", Slot = "6")]
		public void Add(Triangle item)
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x1BF6148", Offset = "0x1BF6148", VA = "0x1BF6148", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x1BF6260", Offset = "0x1BF6260", VA = "0x1BF6260", Slot = "8")]
		public bool Contains(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x1BF62E0", Offset = "0x1BF62E0", VA = "0x1BF62E0", Slot = "9")]
		public void CopyTo(Triangle[] array, int index)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x1BF6520", Offset = "0x1BF6520", VA = "0x1BF6520", Slot = "10")]
		public bool Remove(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x1BF6468", Offset = "0x1BF6468", VA = "0x1BF6468", Slot = "11")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1BF65AC", Offset = "0x1BF65AC", VA = "0x1BF65AC", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000651")]
	internal class TriangleSampler : IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x4002AB2")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x4002AB3")]
		private const int samplefactor = 11;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1BF4EBC", Offset = "0x1BF4EBC", VA = "0x1BF4EBC")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1BF68B8", Offset = "0x1BF68B8", VA = "0x1BF68B8")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x1BF4F78", Offset = "0x1BF4F78", VA = "0x1BF4F78")]
		public void Reset()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x1BF5830", Offset = "0x1BF5830", VA = "0x1BF5830")]
		public void Update()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x1BF58A8", Offset = "0x1BF58A8", VA = "0x1BF58A8", Slot = "4")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x1BF6904", Offset = "0x1BF6904", VA = "0x1BF6904", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x2000652")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int offset;

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x1BF6908", Offset = "0x1BF6908", VA = "0x1BF6908")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x1BF69B0", Offset = "0x1BF69B0", VA = "0x1BF69B0")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x1BF6AD8", Offset = "0x1BF6AD8", VA = "0x1BF6AD8")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x1BF6DC0", Offset = "0x1BF6DC0", VA = "0x1BF6DC0")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x1BF71D4", Offset = "0x1BF71D4", VA = "0x1BF71D4")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x1BF75A0", Offset = "0x1BF75A0", VA = "0x1BF75A0", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x1BF75A4", Offset = "0x1BF75A4", VA = "0x1BF75A4", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x1BF75A8", Offset = "0x1BF75A8", VA = "0x1BF75A8", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x1BF761C", Offset = "0x1BF761C", VA = "0x1BF761C", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x1BF7690", Offset = "0x1BF7690", VA = "0x1BF7690", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x1BF69A8", Offset = "0x1BF69A8", VA = "0x1BF69A8")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x2000654")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x60029B3")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x60029B4")]
		void Reset();

		[Token(Token = "0x60029B5")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x60029B6")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x60029B7")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x2000655")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x1BF76F4", Offset = "0x1BF76F4", VA = "0x1BF76F4")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x1BF77F8", Offset = "0x1BF77F8", VA = "0x1BF77F8")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x1BF77A0", Offset = "0x1BF77A0", VA = "0x1BF77A0")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x1BF78A0", Offset = "0x1BF78A0", VA = "0x1BF78A0")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x2000656")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IPredicates predicates;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x1BF6A60", Offset = "0x1BF6A60", VA = "0x1BF6A60")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x1BF7A64", Offset = "0x1BF7A64", VA = "0x1BF7A64")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x1BF7FA0", Offset = "0x1BF7FA0", VA = "0x1BF7FA0")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x1BF8510", Offset = "0x1BF8510", VA = "0x1BF8510")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x1BF90DC", Offset = "0x1BF90DC", VA = "0x1BF90DC", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x1BF93B0", Offset = "0x1BF93B0", VA = "0x1BF93B0", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x2000657")]
	[Obsolete("Use TriangleNet.Voronoi.BoundedVoronoi class instead.")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Point[] points;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TriangleNet.Geometry.Point> segPoints;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int segIndex;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool includeBoundary;

		[Token(Token = "0x170005A4")]
		public TriangleNet.Geometry.Point[] Points
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1BF9C74", Offset = "0x1BF9C74", VA = "0x1BF9C74", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A5")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1BF9C7C", Offset = "0x1BF9C7C", VA = "0x1BF9C7C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1BF9C84", Offset = "0x1BF9C84", VA = "0x1BF9C84", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x1BF973C", Offset = "0x1BF973C", VA = "0x1BF973C")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x1BF9744", Offset = "0x1BF9744", VA = "0x1BF9744")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x1BF97E4", Offset = "0x1BF97E4", VA = "0x1BF97E4")]
		private void Generate()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x1BFA508", Offset = "0x1BFA508", VA = "0x1BFA508")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x1BFA8FC", Offset = "0x1BFA8FC", VA = "0x1BFA8FC")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x1BFC254", Offset = "0x1BFC254", VA = "0x1BFC254")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x1BFAF90", Offset = "0x1BFAF90", VA = "0x1BFAF90")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x1BFB5B0", Offset = "0x1BFB5B0", VA = "0x1BFB5B0")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x1BFC37C", Offset = "0x1BFC37C", VA = "0x1BFC37C")]
		private bool SegmentsIntersect(TriangleNet.Geometry.Point p1, TriangleNet.Geometry.Point p2, TriangleNet.Geometry.Point p3, TriangleNet.Geometry.Point p4, out TriangleNet.Geometry.Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x1BF9C88", Offset = "0x1BF9C88", VA = "0x1BF9C88")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000658")]
	public interface IVoronoi
	{
		[Token(Token = "0x170005A7")]
		TriangleNet.Geometry.Point[] Points
		{
			[Token(Token = "0x60029CF")]
			get;
		}

		[Token(Token = "0x170005A8")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60029D0")]
			get;
		}

		[Token(Token = "0x170005A9")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60029D1")]
			get;
		}
	}
	[Token(Token = "0x2000659")]
	[Obsolete("Use TriangleNet.Voronoi.StandardVoronoi class instead.")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Point[] points;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, TriangleNet.Geometry.Point> rayPoints;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rayIndex;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rectangle bounds;

		[Token(Token = "0x170005AA")]
		public TriangleNet.Geometry.Point[] Points
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x1BFCAF8", Offset = "0x1BFCAF8", VA = "0x1BFCAF8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AB")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x1BFCB00", Offset = "0x1BFCB00", VA = "0x1BFCB00", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x1BFCB50", Offset = "0x1BFCB50", VA = "0x1BFCB50", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x1BFC5B0", Offset = "0x1BFC5B0", VA = "0x1BFC5B0")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x1BFC640", Offset = "0x1BFC640", VA = "0x1BFC640")]
		private void Generate()
		{
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x1BFD3E4", Offset = "0x1BFD3E4", VA = "0x1BFD3E4")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x1BFD870", Offset = "0x1BFD870", VA = "0x1BFD870")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x1BFE148", Offset = "0x1BFE148", VA = "0x1BFE148")]
		private bool BoxRayIntersection(TriangleNet.Geometry.Point pt, double dx, double dy, out TriangleNet.Geometry.Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x1BFCB54", Offset = "0x1BFCB54", VA = "0x1BFCB54")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x200065A")]
	public class VoronoiRegion
	{
		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int id;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Point generator;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TriangleNet.Geometry.Point> vertices;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool bounded;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x170005AD")]
		public int ID
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x1C790A4", Offset = "0x1C790A4", VA = "0x1C790A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005AE")]
		public TriangleNet.Geometry.Point Generator
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x1C790AC", Offset = "0x1C790AC", VA = "0x1C790AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AF")]
		public ICollection<TriangleNet.Geometry.Point> Vertices
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x1C790B4", Offset = "0x1C790B4", VA = "0x1C790B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B0")]
		public bool Bounded
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x1C790BC", Offset = "0x1C790BC", VA = "0x1C790BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x1C790C4", Offset = "0x1C790C4", VA = "0x1C790C4")]
			set
			{
			}
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x1C790D0", Offset = "0x1C790D0", VA = "0x1C790D0")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x1C791DC", Offset = "0x1C791DC", VA = "0x1C791DC")]
		public void Add(TriangleNet.Geometry.Point point)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x1C7928C", Offset = "0x1C7928C", VA = "0x1C7928C")]
		public void Add(List<TriangleNet.Geometry.Point> points)
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x1C792E4", Offset = "0x1C792E4", VA = "0x1C792E4")]
		public VoronoiRegion GetNeighbor(TriangleNet.Geometry.Point p)
		{
			return null;
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1C79360", Offset = "0x1C79360", VA = "0x1C79360")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x1C793C8", Offset = "0x1C793C8", VA = "0x1C793C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x200065B")]
	public struct Osub
	{
		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x170005B1")]
		public SubSegment Segment
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x1C7944C", Offset = "0x1C7944C", VA = "0x1C7944C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x1C79454", Offset = "0x1C79454", VA = "0x1C79454", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x1C794F4", Offset = "0x1C794F4", VA = "0x1C794F4")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x1C79534", Offset = "0x1C79534", VA = "0x1C79534")]
		public void Sym()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x1C79548", Offset = "0x1C79548", VA = "0x1C79548")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x1C79594", Offset = "0x1C79594", VA = "0x1C79594")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x1C795E0", Offset = "0x1C795E0", VA = "0x1C795E0")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x1C79634", Offset = "0x1C79634", VA = "0x1C79634")]
		public void Next()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x1C79680", Offset = "0x1C79680", VA = "0x1C79680")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x1C796BC", Offset = "0x1C796BC", VA = "0x1C796BC")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x1C79700", Offset = "0x1C79700", VA = "0x1C79700")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x1C79770", Offset = "0x1C79770", VA = "0x1C79770")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x1C797E8", Offset = "0x1C797E8", VA = "0x1C797E8")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x1C79828", Offset = "0x1C79828", VA = "0x1C79828")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x1C7986C", Offset = "0x1C7986C", VA = "0x1C7986C")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1C798E0", Offset = "0x1C798E0", VA = "0x1C798E0")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x1C79958", Offset = "0x1C79958", VA = "0x1C79958")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x1C799E0", Offset = "0x1C799E0", VA = "0x1C799E0")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x1C79A1C", Offset = "0x1C79A1C", VA = "0x1C79A1C")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x1C79A40", Offset = "0x1C79A40", VA = "0x1C79A40")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1C79A7C", Offset = "0x1C79A7C", VA = "0x1C79A7C")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x1C79AB0", Offset = "0x1C79AB0", VA = "0x1C79AB0")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x200065C")]
	public struct Otri
	{
		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170005B2")]
		public Triangle Triangle
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x1C79B04", Offset = "0x1C79B04", VA = "0x1C79B04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x1C79B0C", Offset = "0x1C79B0C", VA = "0x1C79B0C")]
			set
			{
			}
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x1C79B14", Offset = "0x1C79B14", VA = "0x1C79B14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1C79BB4", Offset = "0x1C79BB4", VA = "0x1C79BB4")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1C79C38", Offset = "0x1C79C38", VA = "0x1C79C38")]
		public void Sym()
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x1C79C80", Offset = "0x1C79C80", VA = "0x1C79C80")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x1C79D20", Offset = "0x1C79D20", VA = "0x1C79D20")]
		public void Lnext()
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x1C79DA4", Offset = "0x1C79DA4", VA = "0x1C79DA4")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x1C79E44", Offset = "0x1C79E44", VA = "0x1C79E44")]
		public void Lprev()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x1C79EC8", Offset = "0x1C79EC8", VA = "0x1C79EC8")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x1C79F9C", Offset = "0x1C79F9C", VA = "0x1C79F9C")]
		public void Onext()
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x1C7A054", Offset = "0x1C7A054", VA = "0x1C7A054")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x1C7A13C", Offset = "0x1C7A13C", VA = "0x1C7A13C")]
		public void Oprev()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x1C7A1FC", Offset = "0x1C7A1FC", VA = "0x1C7A1FC")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x1C7A2E4", Offset = "0x1C7A2E4", VA = "0x1C7A2E4")]
		public void Dnext()
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x1C7A3A4", Offset = "0x1C7A3A4", VA = "0x1C7A3A4")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x1C7A478", Offset = "0x1C7A478", VA = "0x1C7A478")]
		public void Dprev()
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x1C7A530", Offset = "0x1C7A530", VA = "0x1C7A530")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x1C7A64C", Offset = "0x1C7A64C", VA = "0x1C7A64C")]
		public void Rnext()
		{
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x1C7A740", Offset = "0x1C7A740", VA = "0x1C7A740")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x1C7A85C", Offset = "0x1C7A85C", VA = "0x1C7A85C")]
		public void Rprev()
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x1C7A950", Offset = "0x1C7A950", VA = "0x1C7A950")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x1C7A9F4", Offset = "0x1C7A9F4", VA = "0x1C7A9F4")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x1C7AA98", Offset = "0x1C7AA98", VA = "0x1C7AA98")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x1C7AAD4", Offset = "0x1C7AAD4", VA = "0x1C7AAD4")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x1C7AB0C", Offset = "0x1C7AB0C", VA = "0x1C7AB0C")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x1C7AB30", Offset = "0x1C7AB30", VA = "0x1C7AB30")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x1C7AC08", Offset = "0x1C7AC08", VA = "0x1C7AC08")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x1C7ACE0", Offset = "0x1C7ACE0", VA = "0x1C7ACE0")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x1C7AD50", Offset = "0x1C7AD50", VA = "0x1C7AD50")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x1C7AE28", Offset = "0x1C7AE28", VA = "0x1C7AE28")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x1C7AE94", Offset = "0x1C7AE94", VA = "0x1C7AE94")]
		internal void Infect()
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x1C7AEB4", Offset = "0x1C7AEB4", VA = "0x1C7AEB4")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x1C7AED0", Offset = "0x1C7AED0", VA = "0x1C7AED0")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x1C7AEEC", Offset = "0x1C7AEEC", VA = "0x1C7AEEC")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x1C7AF38", Offset = "0x1C7AF38", VA = "0x1C7AF38")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x1C7AFC0", Offset = "0x1C7AFC0", VA = "0x1C7AFC0")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x1C7AFFC", Offset = "0x1C7AFFC", VA = "0x1C7AFFC")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x1C7B030", Offset = "0x1C7B030", VA = "0x1C7B030")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x170005B3")]
		public int P0
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x1C7B238", Offset = "0x1C7B238", VA = "0x1C7B238", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B4")]
		public int P1
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x1C7B268", Offset = "0x1C7B268", VA = "0x1C7B268", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B5")]
		public int Label
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x1C7B29C", Offset = "0x1C7B29C", VA = "0x1C7B29C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x1C7B168", Offset = "0x1C7B168", VA = "0x1C7B168")]
		public SubSegment()
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x1C7B2A4", Offset = "0x1C7B2A4", VA = "0x1C7B2A4", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x1C7B2D4", Offset = "0x1C7B2D4", VA = "0x1C7B2D4", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x1C7B314", Offset = "0x1C7B314", VA = "0x1C7B314", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x1C7B31C", Offset = "0x1C7B31C", VA = "0x1C7B31C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200065E")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x170005B6")]
		public int ID
		{
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x1C7B46C", Offset = "0x1C7B46C", VA = "0x1C7B46C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x1C7B474", Offset = "0x1C7B474", VA = "0x1C7B474", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170005B7")]
		public int Label
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x1C7B47C", Offset = "0x1C7B47C", VA = "0x1C7B47C", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x1C7B484", Offset = "0x1C7B484", VA = "0x1C7B484", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170005B8")]
		public double Area
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x1C7B48C", Offset = "0x1C7B48C", VA = "0x1C7B48C", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x1C7B494", Offset = "0x1C7B494", VA = "0x1C7B494", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x1C7B3A0", Offset = "0x1C7B3A0", VA = "0x1C7B3A0")]
		public Triangle()
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x1C7B49C", Offset = "0x1C7B49C", VA = "0x1C7B49C", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x1C7B4CC", Offset = "0x1C7B4CC", VA = "0x1C7B4CC", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x1C7B504", Offset = "0x1C7B504", VA = "0x1C7B504", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x1C7B544", Offset = "0x1C7B544", VA = "0x1C7B544", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x1C7B590", Offset = "0x1C7B590", VA = "0x1C7B590", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x1C7B5D0", Offset = "0x1C7B5D0", VA = "0x1C7B5D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x1C7B5D8", Offset = "0x1C7B5D8", VA = "0x1C7B5D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x200065F")]
	public class DcelMesh
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Vertex> vertices;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Face> faces;

		[Token(Token = "0x170005B9")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x1C7B7A0", Offset = "0x1C7B7A0", VA = "0x1C7B7A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x1C7B7A8", Offset = "0x1C7B7A8", VA = "0x1C7B7A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BB")]
		public List<Face> Faces
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x1C7B7B0", Offset = "0x1C7B7B0", VA = "0x1C7B7B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BC")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x1C7B7B8", Offset = "0x1C7B7B8", VA = "0x1C7B7B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0x1C7B65C", Offset = "0x1C7B65C", VA = "0x1C7B65C")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x1C7B664", Offset = "0x1C7B664", VA = "0x1C7B664")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0x1C7B7C4", Offset = "0x1C7B7C4", VA = "0x1C7B7C4", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x1C7BE38", Offset = "0x1C7BE38", VA = "0x1C7BE38")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x1C7C378", Offset = "0x1C7C378", VA = "0x1C7C378", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x2000660")]
	public class Face
	{
		[Token(Token = "0x2000661")]
		[CompilerGenerated]
		private sealed class <EnumerateEdges>d__17 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Face <>4__this;

			[Token(Token = "0x4002AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x170005C0")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6002A51")]
				[Address(RVA = "0x1C7C984", Offset = "0x1C7C984", VA = "0x1C7C984", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A53")]
				[Address(RVA = "0x1C7C9CC", Offset = "0x1C7C9CC", VA = "0x1C7C9CC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x1C7C80C", Offset = "0x1C7C80C", VA = "0x1C7C80C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x1C7C8C4", Offset = "0x1C7C8C4", VA = "0x1C7C8C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x1C7C8C8", Offset = "0x1C7C8C8", VA = "0x1C7C8C8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x1C7C98C", Offset = "0x1C7C98C", VA = "0x1C7C98C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x1C7C9D4", Offset = "0x1C7C9D4", VA = "0x1C7C9D4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x1C7CA80", Offset = "0x1C7CA80", VA = "0x1C7CA80", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Face Empty;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TriangleNet.Geometry.Point generator;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HalfEdge edge;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool bounded;

		[Token(Token = "0x170005BD")]
		public int ID
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x1C7C6D4", Offset = "0x1C7C6D4", VA = "0x1C7C6D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0x1C7C6DC", Offset = "0x1C7C6DC", VA = "0x1C7C6DC")]
			set
			{
			}
		}

		[Token(Token = "0x170005BE")]
		public HalfEdge Edge
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x1C7C6E4", Offset = "0x1C7C6E4", VA = "0x1C7C6E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x1C7C6EC", Offset = "0x1C7C6EC", VA = "0x1C7C6EC")]
			set
			{
			}
		}

		[Token(Token = "0x170005BF")]
		public bool Bounded
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x1C7C6F4", Offset = "0x1C7C6F4", VA = "0x1C7C6F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x1C7C6FC", Offset = "0x1C7C6FC", VA = "0x1C7C6FC")]
			set
			{
			}
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x1C7C63C", Offset = "0x1C7C63C", VA = "0x1C7C63C")]
		static Face()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x1C7C6CC", Offset = "0x1C7C6CC", VA = "0x1C7C6CC")]
		public Face(TriangleNet.Geometry.Point generator)
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x1C7C708", Offset = "0x1C7C708", VA = "0x1C7C708")]
		public Face(TriangleNet.Geometry.Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x1C7C788", Offset = "0x1C7C788", VA = "0x1C7C788")]
		[IteratorStateMachine(typeof(<EnumerateEdges>d__17))]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x1C7C840", Offset = "0x1C7C840", VA = "0x1C7C840", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000662")]
	public class HalfEdge
	{
		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vertex origin;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Face face;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HalfEdge twin;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge next;

		[Token(Token = "0x170005C2")]
		public int ID
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x1C7CA84", Offset = "0x1C7CA84", VA = "0x1C7CA84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0x1C7CA8C", Offset = "0x1C7CA8C", VA = "0x1C7CA8C")]
			set
			{
			}
		}

		[Token(Token = "0x170005C3")]
		public int Boundary
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x1C7CA94", Offset = "0x1C7CA94", VA = "0x1C7CA94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x1C7CA9C", Offset = "0x1C7CA9C", VA = "0x1C7CA9C")]
			set
			{
			}
		}

		[Token(Token = "0x170005C4")]
		public Vertex Origin
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x1C7CAA4", Offset = "0x1C7CAA4", VA = "0x1C7CAA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x1C7CAAC", Offset = "0x1C7CAAC", VA = "0x1C7CAAC")]
			set
			{
			}
		}

		[Token(Token = "0x170005C5")]
		public Face Face
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x1C7CAB4", Offset = "0x1C7CAB4", VA = "0x1C7CAB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x1C7CABC", Offset = "0x1C7CABC", VA = "0x1C7CABC")]
			set
			{
			}
		}

		[Token(Token = "0x170005C6")]
		public HalfEdge Twin
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x1C7CAC4", Offset = "0x1C7CAC4", VA = "0x1C7CAC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x1C7CACC", Offset = "0x1C7CACC", VA = "0x1C7CACC")]
			set
			{
			}
		}

		[Token(Token = "0x170005C7")]
		public HalfEdge Next
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x1C7CAD4", Offset = "0x1C7CAD4", VA = "0x1C7CAD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x1C7CADC", Offset = "0x1C7CADC", VA = "0x1C7CADC")]
			set
			{
			}
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x1C7CAE4", Offset = "0x1C7CAE4", VA = "0x1C7CAE4")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x1C7C30C", Offset = "0x1C7C30C", VA = "0x1C7C30C")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x1C7CB14", Offset = "0x1C7CB14", VA = "0x1C7CB14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000663")]
	public class Vertex : TriangleNet.Geometry.Point
	{
		[Token(Token = "0x2000664")]
		[CompilerGenerated]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vertex <>4__this;

			[Token(Token = "0x4002AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4002AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x170005C9")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x6002A6E")]
				[Address(RVA = "0x1C7CE0C", Offset = "0x1C7CE0C", VA = "0x1C7CE0C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A70")]
				[Address(RVA = "0x1C7CE54", Offset = "0x1C7CE54", VA = "0x1C7CE54", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x1C7CC8C", Offset = "0x1C7CC8C", VA = "0x1C7CC8C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x1C7CD44", Offset = "0x1C7CD44", VA = "0x1C7CD44", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x1C7CD48", Offset = "0x1C7CD48", VA = "0x1C7CD48", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x1C7CE14", Offset = "0x1C7CE14", VA = "0x1C7CE14", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x1C7CE5C", Offset = "0x1C7CE5C", VA = "0x1C7CE5C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x1C7CF08", Offset = "0x1C7CF08", VA = "0x1C7CF08", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge leaving;

		[Token(Token = "0x170005C8")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x1C7CBC0", Offset = "0x1C7CBC0", VA = "0x1C7CBC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x1C7CBC8", Offset = "0x1C7CBC8", VA = "0x1C7CBC8")]
			set
			{
			}
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1C7CBD0", Offset = "0x1C7CBD0", VA = "0x1C7CBD0")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x1C7CBD8", Offset = "0x1C7CBD8", VA = "0x1C7CBD8")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x1C7CC08", Offset = "0x1C7CC08", VA = "0x1C7CC08")]
		[IteratorStateMachine(typeof(<EnumerateEdges>d__6))]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x1C7CCC0", Offset = "0x1C7CCC0", VA = "0x1C7CCC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x2000665")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nnz;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] pcol;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] irow;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int N;

		[Token(Token = "0x170005CB")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x1C7CF0C", Offset = "0x1C7CF0C", VA = "0x1C7CF0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CC")]
		public int[] RowIndices
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x1C7CF14", Offset = "0x1C7CF14", VA = "0x1C7CF14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x1C7CF1C", Offset = "0x1C7CF1C", VA = "0x1C7CF1C")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x1C7DBE8", Offset = "0x1C7DBE8", VA = "0x1C7DBE8")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x1C7DD04", Offset = "0x1C7DD04", VA = "0x1C7DD04")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x1C7CFF0", Offset = "0x1C7CFF0", VA = "0x1C7CFF0")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1C7D55C", Offset = "0x1C7D55C", VA = "0x1C7D55C")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x1C7DB40", Offset = "0x1C7DB40", VA = "0x1C7DB40")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class CuthillMcKee
	{
		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1C7DE48", Offset = "0x1C7DE48", VA = "0x1C7DE48")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x1C7DEC4", Offset = "0x1C7DEC4", VA = "0x1C7DEC4")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1C7E1AC", Offset = "0x1C7E1AC", VA = "0x1C7E1AC")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x1C7E76C", Offset = "0x1C7E76C", VA = "0x1C7E76C")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x1C7E578", Offset = "0x1C7E578", VA = "0x1C7E578")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x1C7ED50", Offset = "0x1C7ED50", VA = "0x1C7ED50")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x1C7EA20", Offset = "0x1C7EA20", VA = "0x1C7EA20")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x1C7E3CC", Offset = "0x1C7E3CC", VA = "0x1C7E3CC")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x1C7E320", Offset = "0x1C7E320", VA = "0x1C7E320")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x1C7ECCC", Offset = "0x1C7ECCC", VA = "0x1C7ECCC")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x1C7E14C", Offset = "0x1C7E14C", VA = "0x1C7E14C")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x1C7EF34", Offset = "0x1C7EF34", VA = "0x1C7EF34")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public static class Interpolation
	{
		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x1C7EF3C", Offset = "0x1C7EF3C", VA = "0x1C7EF3C")]
		public static void InterpolateZ(TriangleNet.Geometry.Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x2000668")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x1C7F150", Offset = "0x1C7F150", VA = "0x1C7F150")]
		public static void IntersectSegments(TriangleNet.Geometry.Point p0, TriangleNet.Geometry.Point p1, TriangleNet.Geometry.Point q0, TriangleNet.Geometry.Point q1, ref TriangleNet.Geometry.Point c0)
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x1C7F1C8", Offset = "0x1C7F1C8", VA = "0x1C7F1C8")]
		public static bool LiangBarsky(Rectangle rect, TriangleNet.Geometry.Point p0, TriangleNet.Geometry.Point p1, ref TriangleNet.Geometry.Point c0, ref TriangleNet.Geometry.Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1C7F310", Offset = "0x1C7F310", VA = "0x1C7F310")]
		public static bool BoxRayIntersection(Rectangle rect, TriangleNet.Geometry.Point p0, TriangleNet.Geometry.Point p1, ref TriangleNet.Geometry.Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000669")]
	public static class PolygonValidator
	{
		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x1C7F42C", Offset = "0x1C7F42C", VA = "0x1C7F42C")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1C80828", Offset = "0x1C80828", VA = "0x1C80828")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1C80B2C", Offset = "0x1C80B2C", VA = "0x1C80B2C")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1C81074", Offset = "0x1C81074", VA = "0x1C81074")]
		private static bool IsBadAngle(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1C81128", Offset = "0x1C81128", VA = "0x1C81128")]
		private static double DotProduct(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c)
		{
			return default(double);
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1C8116C", Offset = "0x1C8116C", VA = "0x1C8116C")]
		private static double CrossProductLength(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c)
		{
			return default(double);
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1C7FFA0", Offset = "0x1C7FFA0", VA = "0x1C7FFA0")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x1C804C0", Offset = "0x1C804C0", VA = "0x1C804C0")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200066A")]
	public class QualityMeasure
	{
		[Token(Token = "0x200066B")]
		private class AreaMeasure
		{
			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double area_min;

			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double area_max;

			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double area_total;

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int area_zero;

			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x1C81470", Offset = "0x1C81470", VA = "0x1C81470")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x1C8196C", Offset = "0x1C8196C", VA = "0x1C8196C")]
			public double Measure(TriangleNet.Geometry.Point a, TriangleNet.Geometry.Point b, TriangleNet.Geometry.Point c)
			{
				return default(double);
			}

			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0x1C812A8", Offset = "0x1C812A8", VA = "0x1C812A8")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x200066C")]
		private class AlphaMeasure
		{
			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double alpha_min;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double alpha_max;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double alpha_ave;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double alpha_area;

			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x1C81488", Offset = "0x1C81488", VA = "0x1C81488")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x1C82198", Offset = "0x1C82198", VA = "0x1C82198")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x1C81A80", Offset = "0x1C81A80", VA = "0x1C81A80")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x1C81D60", Offset = "0x1C81D60", VA = "0x1C81D60")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x1C812BC", Offset = "0x1C812BC", VA = "0x1C812BC")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x200066D")]
		private class Q_Measure
		{
			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double q_min;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double q_max;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double q_ave;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double q_area;

			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x1C8149C", Offset = "0x1C8149C", VA = "0x1C8149C")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x1C81C74", Offset = "0x1C81C74", VA = "0x1C81C74")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x1C81D98", Offset = "0x1C81D98", VA = "0x1C81D98")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x1C812C4", Offset = "0x1C812C4", VA = "0x1C812C4")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Q_Measure qMeasure;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x170005CD")]
		public double AreaMinimum
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x1C812CC", Offset = "0x1C812CC", VA = "0x1C812CC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005CE")]
		public double AreaMaximum
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x1C812E8", Offset = "0x1C812E8", VA = "0x1C812E8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005CF")]
		public double AreaRatio
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x1C81304", Offset = "0x1C81304", VA = "0x1C81304")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D0")]
		public double AlphaMinimum
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x1C81324", Offset = "0x1C81324", VA = "0x1C81324")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D1")]
		public double AlphaMaximum
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x1C81340", Offset = "0x1C81340", VA = "0x1C81340")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D2")]
		public double AlphaAverage
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x1C8135C", Offset = "0x1C8135C", VA = "0x1C8135C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D3")]
		public double AlphaArea
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x1C81378", Offset = "0x1C81378", VA = "0x1C81378")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D4")]
		public double Q_Minimum
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x1C81394", Offset = "0x1C81394", VA = "0x1C81394")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D5")]
		public double Q_Maximum
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x1C813B0", Offset = "0x1C813B0", VA = "0x1C813B0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D6")]
		public double Q_Average
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x1C813CC", Offset = "0x1C813CC", VA = "0x1C813CC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D7")]
		public double Q_Area
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x1C813E8", Offset = "0x1C813E8", VA = "0x1C813E8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0x1C811B0", Offset = "0x1C811B0", VA = "0x1C811B0")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0x1C81404", Offset = "0x1C81404", VA = "0x1C81404")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x1C814B0", Offset = "0x1C814B0", VA = "0x1C814B0")]
		private void Compute()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x1C81DD0", Offset = "0x1C81DD0", VA = "0x1C81DD0")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200066E")]
	public class Statistic
	{
		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double minEdge;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double maxEdge;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double minAspect;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double maxAspect;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double minArea;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double minAngle;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double maxAngle;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] angleTable;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] minAngles;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] maxAngles;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x170005D8")]
		public double ShortestEdge
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x1C8221C", Offset = "0x1C8221C", VA = "0x1C8221C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005D9")]
		public double LongestEdge
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x1C82224", Offset = "0x1C82224", VA = "0x1C82224")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DA")]
		public double ShortestAltitude
		{
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x1C8222C", Offset = "0x1C8222C", VA = "0x1C8222C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DB")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x1C82234", Offset = "0x1C82234", VA = "0x1C82234")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DC")]
		public double SmallestArea
		{
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x1C8223C", Offset = "0x1C8223C", VA = "0x1C8223C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DD")]
		public double LargestArea
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x1C82244", Offset = "0x1C82244", VA = "0x1C82244")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DE")]
		public double SmallestAngle
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x1C8224C", Offset = "0x1C8224C", VA = "0x1C8224C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005DF")]
		public double LargestAngle
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x1C82254", Offset = "0x1C82254", VA = "0x1C82254")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005E0")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x1C8225C", Offset = "0x1C8225C", VA = "0x1C8225C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E1")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x1C82264", Offset = "0x1C82264", VA = "0x1C82264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E2")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x1C8226C", Offset = "0x1C8226C", VA = "0x1C8226C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x1C82274", Offset = "0x1C82274", VA = "0x1C82274")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x1C829F4", Offset = "0x1C829F4", VA = "0x1C829F4")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x1C83764", Offset = "0x1C83764", VA = "0x1C83764")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x200066F")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x2000670")]
		private class QuadNode
		{
			[Token(Token = "0x4002B2D")]
			private const int SW = 0;

			[Token(Token = "0x4002B2E")]
			private const int SE = 1;

			[Token(Token = "0x4002B2F")]
			private const int NW = 2;

			[Token(Token = "0x4002B30")]
			private const int NE = 3;

			[Token(Token = "0x4002B31")]
			private const double EPS = 1E-06;

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rectangle bounds;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Point pivot;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleQuadTree tree;

			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuadNode[] regions;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> triangles;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte bitRegions;

			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x1C84868", Offset = "0x1C84868", VA = "0x1C84868")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x1C8393C", Offset = "0x1C8393C", VA = "0x1C8393C")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x1C84650", Offset = "0x1C84650", VA = "0x1C84650")]
			public List<int> FindTriangles(TriangleNet.Geometry.Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x1C83BC8", Offset = "0x1C83BC8", VA = "0x1C83BC8")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x1C848A8", Offset = "0x1C848A8", VA = "0x1C848A8")]
			private void AddTriangleToRegion(TriangleNet.Geometry.Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x1C84BA8", Offset = "0x1C84BA8", VA = "0x1C84BA8")]
			private void FindTriangleIntersections(TriangleNet.Geometry.Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x1C84C84", Offset = "0x1C84C84", VA = "0x1C84C84")]
			private void FindIntersectionsWithX(double dx, double dy, TriangleNet.Geometry.Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x1C84EE0", Offset = "0x1C84EE0", VA = "0x1C84EE0")]
			private void FindIntersectionsWithY(double dx, double dy, TriangleNet.Geometry.Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x1C84870", Offset = "0x1C84870", VA = "0x1C84870")]
			private int FindRegion(TriangleNet.Geometry.Point point)
			{
				return default(int);
			}

			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x1C84A30", Offset = "0x1C84A30", VA = "0x1C84A30")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuadNode root;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ITriangle[] triangles;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int sizeBound;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int maxDepth;

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x1C83860", Offset = "0x1C83860", VA = "0x1C83860")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x1C84308", Offset = "0x1C84308", VA = "0x1C84308")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x1C846A0", Offset = "0x1C846A0", VA = "0x1C846A0")]
		internal static bool IsPointInTriangle(TriangleNet.Geometry.Point p, TriangleNet.Geometry.Point t0, TriangleNet.Geometry.Point t1, TriangleNet.Geometry.Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x1C84840", Offset = "0x1C84840", VA = "0x1C84840")]
		internal static double DotProduct(TriangleNet.Geometry.Point p, TriangleNet.Geometry.Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000671")]
	public class VertexSorter
	{
		[Token(Token = "0x4002B39")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x1C851DC", Offset = "0x1C851DC", VA = "0x1C851DC")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x1C80AAC", Offset = "0x1C80AAC", VA = "0x1C80AAC")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1C855AC", Offset = "0x1C855AC", VA = "0x1C855AC")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0x1C85274", Offset = "0x1C85274", VA = "0x1C85274")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1C85668", Offset = "0x1C85668", VA = "0x1C85668")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x1C85720", Offset = "0x1C85720", VA = "0x1C85720")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x1C85A30", Offset = "0x1C85A30", VA = "0x1C85A30")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x2000672")]
	public interface ISmoother
	{
		[Token(Token = "0x6002AD3")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x6002AD4")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x2000673")]
	public class SimpleSmoother : ISmoother
	{
		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrianglePool pool;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Configuration config;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVoronoiFactory factory;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConstraintOptions options;

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x1C85D40", Offset = "0x1C85D40", VA = "0x1C85D40")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x1C85ED4", Offset = "0x1C85ED4", VA = "0x1C85ED4")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x1C860E4", Offset = "0x1C860E4", VA = "0x1C860E4")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x1C86190", Offset = "0x1C86190", VA = "0x1C86190", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x1C86198", Offset = "0x1C86198", VA = "0x1C86198", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x1C863F0", Offset = "0x1C863F0", VA = "0x1C863F0")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x1C869F4", Offset = "0x1C869F4", VA = "0x1C869F4")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x1C865C8", Offset = "0x1C865C8", VA = "0x1C865C8")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000675")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x2000676")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4002B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4002B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4002B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x170005E3")]
			public int Count
			{
				[Token(Token = "0x6002AE8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170005E4")]
			public int Capacity
			{
				[Token(Token = "0x6002AE9")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AEA")]
				set
				{
				}
			}

			[Token(Token = "0x6002AEB")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x6002AEC")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x6002AED")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002AEE")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x6002AEF")]
			public void Release()
			{
			}

			[Token(Token = "0x6002AF0")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1C85DA0", Offset = "0x1C85DA0", VA = "0x1C85DA0")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x1C86B90", Offset = "0x1C86B90", VA = "0x1C86B90", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x1C86E4C", Offset = "0x1C86E4C", VA = "0x1C86E4C", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x1C86EE4", Offset = "0x1C86EE4", VA = "0x1C86EE4", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x1C86FD0", Offset = "0x1C86FD0", VA = "0x1C86FD0", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x1C87110", Offset = "0x1C87110", VA = "0x1C87110", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x2000677")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Triangle> viri;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1C87214", Offset = "0x1C87214", VA = "0x1C87214")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x1C87378", Offset = "0x1C87378", VA = "0x1C87378")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x1C87ED0", Offset = "0x1C87ED0", VA = "0x1C87ED0")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x1C876E8", Offset = "0x1C876E8", VA = "0x1C876E8")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x1C88710", Offset = "0x1C88710", VA = "0x1C88710")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x1C88908", Offset = "0x1C88908", VA = "0x1C88908")]
		private void Plague()
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x1C89200", Offset = "0x1C89200", VA = "0x1C89200")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x1C895FC", Offset = "0x1C895FC", VA = "0x1C895FC")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x1C899E8", Offset = "0x1C899E8", VA = "0x1C899E8")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x1C89BA0", Offset = "0x1C89BA0", VA = "0x1C89BA0")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x1C89E9C", Offset = "0x1C89E9C", VA = "0x1C89E9C")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x1C88EA0", Offset = "0x1C88EA0", VA = "0x1C88EA0")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x1C89124", Offset = "0x1C89124", VA = "0x1C89124")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class ConstraintOptions
	{
		[Token(Token = "0x170005E5")]
		[Obsolete("Not used anywhere, will be removed in beta 4.")]
		public bool UseRegions
		{
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x1C8A138", Offset = "0x1C8A138", VA = "0x1C8A138")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x1C8A140", Offset = "0x1C8A140", VA = "0x1C8A140")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005E6")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x1C8A14C", Offset = "0x1C8A14C", VA = "0x1C8A14C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x1C8A154", Offset = "0x1C8A154", VA = "0x1C8A154")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005E7")]
		public bool Convex
		{
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x1C8A160", Offset = "0x1C8A160", VA = "0x1C8A160")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x1C8A168", Offset = "0x1C8A168", VA = "0x1C8A168")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005E8")]
		public int SegmentSplitting
		{
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x1C8A174", Offset = "0x1C8A174", VA = "0x1C8A174")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x1C8A17C", Offset = "0x1C8A17C", VA = "0x1C8A17C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x1C860DC", Offset = "0x1C860DC", VA = "0x1C860DC")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public static class Converter
	{
		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x1C8A184", Offset = "0x1C8A184", VA = "0x1C8A184")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x1C8A1E4", Offset = "0x1C8A1E4", VA = "0x1C8A1E4")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x1C8A3E0", Offset = "0x1C8A3E0", VA = "0x1C8A3E0")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x1C8AF68", Offset = "0x1C8AF68", VA = "0x1C8AF68")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x1C8B8D8", Offset = "0x1C8B8D8", VA = "0x1C8B8D8")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x200067A")]
	public class GenericMesher
	{
		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x1C8CA84", Offset = "0x1C8CA84", VA = "0x1C8CA84")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x1C8CB74", Offset = "0x1C8CB74", VA = "0x1C8CB74")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x1C8CBE8", Offset = "0x1C8CBE8", VA = "0x1C8CBE8")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x1C8CB30", Offset = "0x1C8CB30", VA = "0x1C8CB30")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x1C8CC64", Offset = "0x1C8CC64", VA = "0x1C8CC64")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x1C8CD14", Offset = "0x1C8CD14", VA = "0x1C8CD14")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x1C8CF60", Offset = "0x1C8CF60", VA = "0x1C8CF60")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x1C8CF68", Offset = "0x1C8CF68", VA = "0x1C8CF68")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x1C8CD20", Offset = "0x1C8CD20", VA = "0x1C8CD20")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x1C8D2FC", Offset = "0x1C8D2FC", VA = "0x1C8D2FC")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x1C8D408", Offset = "0x1C8D408", VA = "0x1C8D408")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x200067B")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x6002B17")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x6002B18")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x200067C")]
	public interface IMesh
	{
		[Token(Token = "0x170005E9")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x6002B19")]
			get;
		}

		[Token(Token = "0x170005EA")]
		IEnumerable<Edge> Edges
		{
			[Token(Token = "0x6002B1A")]
			get;
		}

		[Token(Token = "0x170005EB")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x6002B1B")]
			get;
		}

		[Token(Token = "0x170005EC")]
		ICollection<Triangle> Triangles
		{
			[Token(Token = "0x6002B1C")]
			get;
		}

		[Token(Token = "0x170005ED")]
		IList<TriangleNet.Geometry.Point> Holes
		{
			[Token(Token = "0x6002B1D")]
			get;
		}

		[Token(Token = "0x170005EE")]
		Rectangle Bounds
		{
			[Token(Token = "0x6002B1E")]
			get;
		}

		[Token(Token = "0x6002B1F")]
		void Renumber();

		[Token(Token = "0x6002B20")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x200067D")]
	public interface IQualityMesher
	{
		[Token(Token = "0x6002B21")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x6002B22")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x200067E")]
	public interface ITriangulator
	{
		[Token(Token = "0x6002B23")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x200067F")]
	internal class QualityMesher
	{
		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Triangle newvertex_tri;

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x1C8CF74", Offset = "0x1C8CF74", VA = "0x1C8CF74")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1C8D188", Offset = "0x1C8D188", VA = "0x1C8D188")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1C8DFBC", Offset = "0x1C8DFBC", VA = "0x1C8DFBC")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x1C8E014", Offset = "0x1C8E014", VA = "0x1C8E014")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x1C8E31C", Offset = "0x1C8E31C", VA = "0x1C8E31C")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x1C8E918", Offset = "0x1C8E918", VA = "0x1C8E918")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x1C8EA98", Offset = "0x1C8EA98", VA = "0x1C8EA98")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x1C8F308", Offset = "0x1C8F308", VA = "0x1C8F308")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1C8F598", Offset = "0x1C8F598", VA = "0x1C8F598")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1C8DD6C", Offset = "0x1C8DD6C", VA = "0x1C8DD6C")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x2000680")]
	public class QualityOptions
	{
		[Token(Token = "0x170005EF")]
		public double MaximumAngle
		{
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x1C8FEA4", Offset = "0x1C8FEA4", VA = "0x1C8FEA4")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x1C8FEAC", Offset = "0x1C8FEAC", VA = "0x1C8FEAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F0")]
		public double MinimumAngle
		{
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x1C8FEB4", Offset = "0x1C8FEB4", VA = "0x1C8FEB4")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x1C8FEBC", Offset = "0x1C8FEBC", VA = "0x1C8FEBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F1")]
		public double MaximumArea
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x1C8FEC4", Offset = "0x1C8FEC4", VA = "0x1C8FEC4")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x1C8FECC", Offset = "0x1C8FECC", VA = "0x1C8FECC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F2")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x1C8FED4", Offset = "0x1C8FED4", VA = "0x1C8FED4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x1C8FEDC", Offset = "0x1C8FEDC", VA = "0x1C8FEDC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public bool VariableArea
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x1C8FEE4", Offset = "0x1C8FEE4", VA = "0x1C8FEE4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x1C8FEEC", Offset = "0x1C8FEEC", VA = "0x1C8FEEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public int SteinerPoints
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x1C8FEF8", Offset = "0x1C8FEF8", VA = "0x1C8FEF8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x1C8FF00", Offset = "0x1C8FF00", VA = "0x1C8FF00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x1C8FF08", Offset = "0x1C8FF08", VA = "0x1C8FF08")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x2000681")]
	public class EdgeIterator : IEnumerator<Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Triangle> triangles;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Otri tri;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Otri neighbor;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Osub sub;

		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Edge current;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x170005F5")]
		public Edge Current
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x1C90078", Offset = "0x1C90078", VA = "0x1C90078", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x1C90120", Offset = "0x1C90120", VA = "0x1C90120", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x1C8FF10", Offset = "0x1C8FF10", VA = "0x1C8FF10")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x1C90080", Offset = "0x1C90080", VA = "0x1C90080", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x1C90128", Offset = "0x1C90128", VA = "0x1C90128", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x1C90400", Offset = "0x1C90400", VA = "0x1C90400", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class RegionIterator
	{
		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Triangle> region;

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x1C904A4", Offset = "0x1C904A4", VA = "0x1C904A4")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x1C9052C", Offset = "0x1C9052C", VA = "0x1C9052C")]
		public void Process(Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x6002B43")]
		[Address(RVA = "0x1C90618", Offset = "0x1C90618", VA = "0x1C90618")]
		public void Process(Triangle triangle, Action<Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x1C908A4", Offset = "0x1C908A4", VA = "0x1C908A4")]
		private void ProcessRegion(Action<Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class VertexCirculator
	{
		[Token(Token = "0x2000687")]
		[CompilerGenerated]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005F7")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x6002B54")]
				[Address(RVA = "0x1C91390", Offset = "0x1C91390", VA = "0x1C91390", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B56")]
				[Address(RVA = "0x1C913D8", Offset = "0x1C913D8", VA = "0x1C913D8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x1C90DD4", Offset = "0x1C90DD4", VA = "0x1C90DD4")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x1C9115C", Offset = "0x1C9115C", VA = "0x1C9115C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x1C91178", Offset = "0x1C91178", VA = "0x1C91178", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x1C91340", Offset = "0x1C91340", VA = "0x1C91340")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x1C91398", Offset = "0x1C91398", VA = "0x1C91398", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1C913E0", Offset = "0x1C913E0", VA = "0x1C913E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x1C9149C", Offset = "0x1C9149C", VA = "0x1C9149C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000688")]
		[CompilerGenerated]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ITriangle <>2__current;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005F9")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x6002B5D")]
				[Address(RVA = "0x1C916B8", Offset = "0x1C916B8", VA = "0x1C916B8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B5F")]
				[Address(RVA = "0x1C91700", Offset = "0x1C91700", VA = "0x1C91700", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x1C90EA8", Offset = "0x1C90EA8", VA = "0x1C90EA8")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x1C914A0", Offset = "0x1C914A0", VA = "0x1C914A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x1C914BC", Offset = "0x1C914BC", VA = "0x1C914BC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x1C91668", Offset = "0x1C91668", VA = "0x1C91668")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x1C916C0", Offset = "0x1C916C0", VA = "0x1C916C0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0x1C91708", Offset = "0x1C91708", VA = "0x1C91708", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x1C917C4", Offset = "0x1C917C4", VA = "0x1C917C4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Otri> cache;

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1C90C90", Offset = "0x1C90C90", VA = "0x1C90C90")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1C90D34", Offset = "0x1C90D34", VA = "0x1C90D34")]
		[IteratorStateMachine(typeof(<EnumerateVertices>d__2))]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x1C90E08", Offset = "0x1C90E08", VA = "0x1C90E08")]
		[IteratorStateMachine(typeof(<EnumerateTriangles>d__3))]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0x1C90EDC", Offset = "0x1C90EDC", VA = "0x1C90EDC")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x2000689")]
	internal class BadSubseg
	{
		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1C917C8", Offset = "0x1C917C8", VA = "0x1C917C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1C917E4", Offset = "0x1C917E4", VA = "0x1C917E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x1C8E314", Offset = "0x1C8E314", VA = "0x1C8E314")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x200068A")]
	internal class BadTriangle
	{
		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1C9186C", Offset = "0x1C9186C", VA = "0x1C9186C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x1C918F4", Offset = "0x1C918F4", VA = "0x1C918F4")]
		public BadTriangle()
		{
		}
	}
	[Token(Token = "0x200068B")]
	internal class BadTriQueue
	{
		[Token(Token = "0x4002B87")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x170005FB")]
		public int Count
		{
			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x1C918FC", Offset = "0x1C918FC", VA = "0x1C918FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x1C8DCA8", Offset = "0x1C8DCA8", VA = "0x1C8DCA8")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x1C8FC7C", Offset = "0x1C8FC7C", VA = "0x1C8FC7C")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x1C8E840", Offset = "0x1C8E840", VA = "0x1C8E840")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x1C8FB80", Offset = "0x1C8FB80", VA = "0x1C8FB80")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x200068C")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x1C91904", Offset = "0x1C91904", VA = "0x1C91904", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x1C92AC0", Offset = "0x1C92AC0", VA = "0x1C92AC0")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x1C920A8", Offset = "0x1C920A8", VA = "0x1C920A8")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x1C9294C", Offset = "0x1C9294C", VA = "0x1C9294C")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x1C8CB20", Offset = "0x1C8CB20", VA = "0x1C8CB20")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x200068D")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x1C93898", Offset = "0x1C93898", VA = "0x1C93898", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x1C93CB4", Offset = "0x1C93CB4", VA = "0x1C93CB4")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x1C93EE8", Offset = "0x1C93EE8", VA = "0x1C93EE8")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x1C94134", Offset = "0x1C94134", VA = "0x1C94134")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x200068F")]
		private class SweepEvent
		{
			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double xkey;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double ykey;

			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x4002B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Otri otriEvent;

			[Token(Token = "0x4002B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int heapposition;

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1C959B0", Offset = "0x1C959B0", VA = "0x1C959B0")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x2000690")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x4002B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SweepEvent evt;

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x1C95C30", Offset = "0x1C95C30", VA = "0x1C95C30")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x2000691")]
		private class SplayNode
		{
			[Token(Token = "0x4002B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Otri keyedge;

			[Token(Token = "0x4002B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplayNode lchild;

			[Token(Token = "0x4002BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplayNode rchild;

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x1C96414", Offset = "0x1C96414", VA = "0x1C96414")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int SAMPLERATE;

		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xminextreme;

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x1C9413C", Offset = "0x1C9413C", VA = "0x1C9413C")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x1C941DC", Offset = "0x1C941DC", VA = "0x1C941DC", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x1C95AF4", Offset = "0x1C95AF4", VA = "0x1C95AF4")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x1C95DCC", Offset = "0x1C95DCC", VA = "0x1C95DCC")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x1C95348", Offset = "0x1C95348", VA = "0x1C95348")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x1C95114", Offset = "0x1C95114", VA = "0x1C95114")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x1C95FA4", Offset = "0x1C95FA4", VA = "0x1C95FA4")]
		private SplayNode Splay(SplayNode splaytree, TriangleNet.Geometry.Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x1C957FC", Offset = "0x1C957FC", VA = "0x1C957FC")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x1C95754", Offset = "0x1C95754", VA = "0x1C95754")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x1C955A0", Offset = "0x1C955A0", VA = "0x1C955A0")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x1C962DC", Offset = "0x1C962DC", VA = "0x1C962DC")]
		private bool RightOfHyperbola(ref Otri fronttri, TriangleNet.Geometry.Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x1C959B8", Offset = "0x1C959B8", VA = "0x1C959B8")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x1C954A8", Offset = "0x1C954A8", VA = "0x1C954A8")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x1C95C60", Offset = "0x1C95C60", VA = "0x1C95C60")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x1C9641C", Offset = "0x1C9641C", VA = "0x1C9641C")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x2000692")]
	public enum LogLevel
	{
		[Token(Token = "0x4002BA3")]
		Info,
		[Token(Token = "0x4002BA4")]
		Warning,
		[Token(Token = "0x4002BA5")]
		Error
	}
	[Token(Token = "0x2000693")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x170005FC")]
		IList<T> Data
		{
			[Token(Token = "0x6002B8D")]
			get;
		}

		[Token(Token = "0x170005FD")]
		LogLevel Level
		{
			[Token(Token = "0x6002B8E")]
			get;
		}

		[Token(Token = "0x6002B88")]
		void Add(T item);

		[Token(Token = "0x6002B89")]
		void Clear();

		[Token(Token = "0x6002B8A")]
		void Info(string message);

		[Token(Token = "0x6002B8B")]
		void Error(string message, string info);

		[Token(Token = "0x6002B8C")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x2000694")]
	public interface ILogItem
	{
		[Token(Token = "0x170005FE")]
		DateTime Time
		{
			[Token(Token = "0x6002B8F")]
			get;
		}

		[Token(Token = "0x170005FF")]
		LogLevel Level
		{
			[Token(Token = "0x6002B90")]
			get;
		}

		[Token(Token = "0x17000600")]
		string Message
		{
			[Token(Token = "0x6002B91")]
			get;
		}

		[Token(Token = "0x17000601")]
		string Info
		{
			[Token(Token = "0x6002B92")]
			get;
		}
	}
	[Token(Token = "0x2000695")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x17000602")]
		public DateTime Time
		{
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x1C96474", Offset = "0x1C96474", VA = "0x1C96474", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x17000603")]
		public LogLevel Level
		{
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0x1C9647C", Offset = "0x1C9647C", VA = "0x1C9647C", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x17000604")]
		public string Message
		{
			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x1C96484", Offset = "0x1C96484", VA = "0x1C96484", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000605")]
		public string Info
		{
			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x1C9648C", Offset = "0x1C9648C", VA = "0x1C9648C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x1C96494", Offset = "0x1C96494", VA = "0x1C96494")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x1C964F4", Offset = "0x1C964F4", VA = "0x1C964F4")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x2000696")]
	internal class DebugWriter
	{
		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int iteration;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string session;

		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter stream;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string tmpFile;

		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] vertices;

		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int triangles;

		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x17000606")]
		public static DebugWriter Session
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x1C96664", Offset = "0x1C96664", VA = "0x1C96664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x1C96598", Offset = "0x1C96598", VA = "0x1C96598")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x1C9665C", Offset = "0x1C9665C", VA = "0x1C9665C")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x1C966BC", Offset = "0x1C966BC", VA = "0x1C966BC")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x1C967D8", Offset = "0x1C967D8", VA = "0x1C967D8")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x1C977FC", Offset = "0x1C977FC", VA = "0x1C977FC")]
		public void Finish()
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x1C97854", Offset = "0x1C97854", VA = "0x1C97854")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x1C97C80", Offset = "0x1C97C80", VA = "0x1C97C80")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x1C968A4", Offset = "0x1C968A4", VA = "0x1C968A4")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x1C97D20", Offset = "0x1C97D20", VA = "0x1C97D20")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x1C98120", Offset = "0x1C98120", VA = "0x1C98120")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000697")]
	public static class FileProcessor
	{
		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x1C98584", Offset = "0x1C98584", VA = "0x1C98584")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x1C986D8", Offset = "0x1C986D8", VA = "0x1C986D8")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x1C987B0", Offset = "0x1C987B0", VA = "0x1C987B0")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x1C989B0", Offset = "0x1C989B0", VA = "0x1C989B0")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x1C98CA4", Offset = "0x1C98CA4", VA = "0x1C98CA4")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x1C98F9C", Offset = "0x1C98F9C", VA = "0x1C98F9C")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x1C99290", Offset = "0x1C99290", VA = "0x1C99290")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x2000698")]
	public interface IFileFormat
	{
		[Token(Token = "0x6002BAB")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x2000699")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x6002BAC")]
		IMesh Import(string filename);

		[Token(Token = "0x6002BAD")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x6002BAE")]
		void Write(IMesh mesh, Stream stream);
	}
	[Token(Token = "0x200069A")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] vertices;

		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int label;

		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x17000607")]
		public int ID
		{
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x1C99588", Offset = "0x1C99588", VA = "0x1C99588", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1C99590", Offset = "0x1C99590", VA = "0x1C99590", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000608")]
		public int Label
		{
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x1C99594", Offset = "0x1C99594", VA = "0x1C99594", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x1C9959C", Offset = "0x1C9959C", VA = "0x1C9959C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000609")]
		public double Area
		{
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x1C995A4", Offset = "0x1C995A4", VA = "0x1C995A4", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x1C995AC", Offset = "0x1C995AC", VA = "0x1C995AC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x1C8DBF8", Offset = "0x1C8DBF8", VA = "0x1C8DBF8")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x1C995B4", Offset = "0x1C995B4", VA = "0x1C995B4", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x1C995BC", Offset = "0x1C995BC", VA = "0x1C995BC", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x1C995EC", Offset = "0x1C995EC", VA = "0x1C995EC", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x1C995F4", Offset = "0x1C995F4", VA = "0x1C995F4", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x1C995FC", Offset = "0x1C995FC", VA = "0x1C995FC", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200069B")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x6002BBB")]
		IPolygon Read(string filename);

		[Token(Token = "0x6002BBC")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x6002BBD")]
		void Write(IPolygon polygon, Stream stream);
	}
	[Token(Token = "0x200069C")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x1C99604", Offset = "0x1C99604", VA = "0x1C99604", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x1C996F0", Offset = "0x1C996F0", VA = "0x1C996F0", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x1C999C4", Offset = "0x1C999C4", VA = "0x1C999C4", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x1C9A2B8", Offset = "0x1C9A2B8", VA = "0x1C9A2B8", Slot = "10")]
		public void Write(IMesh mesh, Stream stream)
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x1C9A2F8", Offset = "0x1C9A2F8", VA = "0x1C9A2F8", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x1C9A49C", Offset = "0x1C9A49C", VA = "0x1C9A49C", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x1C9B7FC", Offset = "0x1C9B7FC", VA = "0x1C9B7FC", Slot = "6")]
		public void Write(IPolygon polygon, Stream stream)
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x1C986D0", Offset = "0x1C986D0", VA = "0x1C986D0")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x200069D")]
	public class TriangleReader
	{
		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int startIndex;

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x1C9B83C", Offset = "0x1C9B83C", VA = "0x1C9B83C")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x1C9B860", Offset = "0x1C9B860", VA = "0x1C9B860")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x1C9B9F0", Offset = "0x1C9B9F0", VA = "0x1C9B9F0")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x1C9BBAC", Offset = "0x1C9BBAC", VA = "0x1C9BBAC")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x1C998CC", Offset = "0x1C998CC", VA = "0x1C998CC")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x1C9BCC0", Offset = "0x1C9BCC0", VA = "0x1C9BCC0")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x1C9A488", Offset = "0x1C9A488", VA = "0x1C9A488")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x1C9BCDC", Offset = "0x1C9BCDC", VA = "0x1C9BCDC")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x1C9A490", Offset = "0x1C9A490", VA = "0x1C9A490")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x1C9DD44", Offset = "0x1C9DD44", VA = "0x1C9DD44")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x1C9C9E4", Offset = "0x1C9C9E4", VA = "0x1C9C9E4")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x1C9BCB8", Offset = "0x1C9BCB8", VA = "0x1C9BCB8")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x1C9C298", Offset = "0x1C9C298", VA = "0x1C9C298")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x1C9DD50", Offset = "0x1C9DD50", VA = "0x1C9DD50")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x1C9E24C", Offset = "0x1C9E24C", VA = "0x1C9E24C")]
		public List<Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x1C998C4", Offset = "0x1C998C4", VA = "0x1C998C4")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x200069E")]
	public class TriangleWriter
	{
		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0x1C9EAE0", Offset = "0x1C9EAE0", VA = "0x1C9EAE0")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0x1C9EBA4", Offset = "0x1C9EBA4", VA = "0x1C9EBA4")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x1C9ED3C", Offset = "0x1C9ED3C", VA = "0x1C9ED3C")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x1C9F1C0", Offset = "0x1C9F1C0", VA = "0x1C9F1C0")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x1C99B40", Offset = "0x1C99B40", VA = "0x1C99B40")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x1C9A510", Offset = "0x1C9A510", VA = "0x1C9A510")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x1C99B38", Offset = "0x1C99B38", VA = "0x1C99B38")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x1C9F624", Offset = "0x1C9F624", VA = "0x1C9F624")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x1CA03AC", Offset = "0x1CA03AC", VA = "0x1CA03AC")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x1CA0FE8", Offset = "0x1CA0FE8", VA = "0x1CA0FE8")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x1C99B30", Offset = "0x1C99B30", VA = "0x1C99B30")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x200069F")]
	public class Contour
	{
		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x1700060A")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x1CA1728", Offset = "0x1CA1728", VA = "0x1CA1728")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x1CA1730", Offset = "0x1CA1730", VA = "0x1CA1730")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x1CA1738", Offset = "0x1CA1738", VA = "0x1CA1738")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x1CA17B8", Offset = "0x1CA17B8", VA = "0x1CA17B8")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x1CA1770", Offset = "0x1CA1770", VA = "0x1CA1770")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x1CA1924", Offset = "0x1CA1924", VA = "0x1CA1924")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x1CA1BA4", Offset = "0x1CA1BA4", VA = "0x1CA1BA4")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x1CA17F4", Offset = "0x1CA17F4", VA = "0x1CA17F4")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x1CA1CF8", Offset = "0x1CA1CF8", VA = "0x1CA1CF8")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x1CA20D8", Offset = "0x1CA20D8", VA = "0x1CA20D8")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006A1")]
	public class Edge : IEdge
	{
		[Token(Token = "0x1700060B")]
		public int P0
		{
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0x1CA2388", Offset = "0x1CA2388", VA = "0x1CA2388", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0x1CA2390", Offset = "0x1CA2390", VA = "0x1CA2390")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700060C")]
		public int P1
		{
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x1CA2398", Offset = "0x1CA2398", VA = "0x1CA2398", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0x1CA23A0", Offset = "0x1CA23A0", VA = "0x1CA23A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700060D")]
		public int Label
		{
			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0x1CA23A8", Offset = "0x1CA23A8", VA = "0x1CA23A8", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x1CA23B0", Offset = "0x1CA23B0", VA = "0x1CA23B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x1CA23B8", Offset = "0x1CA23B8", VA = "0x1CA23B8")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x1C903C4", Offset = "0x1C903C4", VA = "0x1C903C4")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x20006A2")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x1CA23E8", Offset = "0x1CA23E8", VA = "0x1CA23E8")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x1CA2450", Offset = "0x1CA2450", VA = "0x1CA2450")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x1CA24C4", Offset = "0x1CA24C4", VA = "0x1CA24C4")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0x1CA2538", Offset = "0x1CA2538", VA = "0x1CA2538")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0x1CA25B0", Offset = "0x1CA25B0", VA = "0x1CA25B0")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x1CA2638", Offset = "0x1CA2638", VA = "0x1CA2638")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0x1CA2650", Offset = "0x1CA2650", VA = "0x1CA2650")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x1CA2958", Offset = "0x1CA2958", VA = "0x1CA2958")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x1CA2930", Offset = "0x1CA2930", VA = "0x1CA2930")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20006A3")]
	public interface IEdge
	{
		[Token(Token = "0x1700060E")]
		int P0
		{
			[Token(Token = "0x6002C01")]
			get;
		}

		[Token(Token = "0x1700060F")]
		int P1
		{
			[Token(Token = "0x6002C02")]
			get;
		}

		[Token(Token = "0x17000610")]
		int Label
		{
			[Token(Token = "0x6002C03")]
			get;
		}
	}
	[Token(Token = "0x20006A4")]
	public interface IPolygon
	{
		[Token(Token = "0x17000611")]
		List<Vertex> Points
		{
			[Token(Token = "0x6002C04")]
			get;
		}

		[Token(Token = "0x17000612")]
		List<ISegment> Segments
		{
			[Token(Token = "0x6002C05")]
			get;
		}

		[Token(Token = "0x17000613")]
		List<Point> Holes
		{
			[Token(Token = "0x6002C06")]
			get;
		}

		[Token(Token = "0x17000614")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6002C07")]
			get;
		}

		[Token(Token = "0x17000615")]
		bool HasPointMarkers
		{
			[Token(Token = "0x6002C08")]
			get;
			[Token(Token = "0x6002C09")]
			set;
		}

		[Token(Token = "0x17000616")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x6002C0A")]
			get;
			[Token(Token = "0x6002C0B")]
			set;
		}

		[Token(Token = "0x6002C0C")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x6002C0D")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x6002C0E")]
		Rectangle Bounds();

		[Token(Token = "0x6002C0F")]
		void Add(Vertex vertex);

		[Token(Token = "0x6002C10")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x6002C11")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x6002C12")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x6002C13")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x20006A5")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x6002C14")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6002C15")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x20006A6")]
	public interface ITriangle
	{
		[Token(Token = "0x17000617")]
		int ID
		{
			[Token(Token = "0x6002C16")]
			get;
			[Token(Token = "0x6002C17")]
			set;
		}

		[Token(Token = "0x17000618")]
		int Label
		{
			[Token(Token = "0x6002C18")]
			get;
			[Token(Token = "0x6002C19")]
			set;
		}

		[Token(Token = "0x17000619")]
		double Area
		{
			[Token(Token = "0x6002C1A")]
			get;
			[Token(Token = "0x6002C1B")]
			set;
		}

		[Token(Token = "0x6002C1C")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6002C1D")]
		int GetVertexID(int index);

		[Token(Token = "0x6002C1E")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x6002C1F")]
		int GetNeighborID(int index);

		[Token(Token = "0x6002C20")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x20006A7")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x1700061A")]
		public int ID
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x1C2F480", Offset = "0x1C2F480", VA = "0x1C2F480")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x1C2F488", Offset = "0x1C2F488", VA = "0x1C2F488")]
			set
			{
			}
		}

		[Token(Token = "0x1700061B")]
		public double X
		{
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x1C2F490", Offset = "0x1C2F490", VA = "0x1C2F490")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x1C2F498", Offset = "0x1C2F498", VA = "0x1C2F498")]
			set
			{
			}
		}

		[Token(Token = "0x1700061C")]
		public double Y
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x1C2F4A0", Offset = "0x1C2F4A0", VA = "0x1C2F4A0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x1C2F4A8", Offset = "0x1C2F4A8", VA = "0x1C2F4A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700061D")]
		public double Z
		{
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x1C2F4B0", Offset = "0x1C2F4B0", VA = "0x1C2F4B0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x1C2F4B8", Offset = "0x1C2F4B8", VA = "0x1C2F4B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700061E")]
		public int Label
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x1C2F4C0", Offset = "0x1C2F4C0", VA = "0x1C2F4C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x1C2F4C8", Offset = "0x1C2F4C8", VA = "0x1C2F4C8")]
			set
			{
			}
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x1C2F3F0", Offset = "0x1C2F3F0", VA = "0x1C2F3F0")]
		public Point()
		{
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x1C2F450", Offset = "0x1C2F450", VA = "0x1C2F450")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x1C2F414", Offset = "0x1C2F414", VA = "0x1C2F414")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0x1C2F4D0", Offset = "0x1C2F4D0", VA = "0x1C2F4D0")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x1C2F54C", Offset = "0x1C2F54C", VA = "0x1C2F54C")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x1C2F598", Offset = "0x1C2F598", VA = "0x1C2F598", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x1C2F51C", Offset = "0x1C2F51C", VA = "0x1C2F51C", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x1C2F640", Offset = "0x1C2F640", VA = "0x1C2F640", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x1C2F6A4", Offset = "0x1C2F6A4", VA = "0x1C2F6A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x1C2F78C", Offset = "0x1C2F78C", VA = "0x1C2F78C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20006A8")]
	public class Polygon : IPolygon
	{
		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x1700061F")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6002C35")]
			[Address(RVA = "0x1C2F834", Offset = "0x1C2F834", VA = "0x1C2F834", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000620")]
		public List<Point> Holes
		{
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x1C2F83C", Offset = "0x1C2F83C", VA = "0x1C2F83C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000621")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x6002C37")]
			[Address(RVA = "0x1C2F844", Offset = "0x1C2F844", VA = "0x1C2F844", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000622")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x1C2F84C", Offset = "0x1C2F84C", VA = "0x1C2F84C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000623")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x6002C39")]
			[Address(RVA = "0x1C2F854", Offset = "0x1C2F854", VA = "0x1C2F854", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x1C2F85C", Offset = "0x1C2F85C", VA = "0x1C2F85C", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000624")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0x1C2F868", Offset = "0x1C2F868", VA = "0x1C2F868", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x1C2F870", Offset = "0x1C2F870", VA = "0x1C2F870", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000625")]
		public int Count
		{
			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0x1C2F87C", Offset = "0x1C2F87C", VA = "0x1C2F87C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0x1C2F8C4", Offset = "0x1C2F8C4", VA = "0x1C2F8C4")]
		public Polygon()
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x1C2FA6C", Offset = "0x1C2FA6C", VA = "0x1C2FA6C")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0x1C2F8D0", Offset = "0x1C2F8D0", VA = "0x1C2F8D0")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x1C2FA78", Offset = "0x1C2FA78", VA = "0x1C2FA78", Slot = "12")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x1C2FBE8", Offset = "0x1C2FBE8", VA = "0x1C2FBE8", Slot = "13")]
		[Obsolete("Use polygon.Add(contour) method instead.")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x1C2FD98", Offset = "0x1C2FD98", VA = "0x1C2FD98", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x1C30200", Offset = "0x1C30200", VA = "0x1C30200", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x1C302B0", Offset = "0x1C302B0", VA = "0x1C302B0", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x1C30530", Offset = "0x1C30530", VA = "0x1C30530", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x1C2FB0C", Offset = "0x1C2FB0C", VA = "0x1C2FB0C", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x1C2FC74", Offset = "0x1C2FC74", VA = "0x1C2FC74", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class Rectangle
	{
		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x17000626")]
		public double Left
		{
			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x1C307F0", Offset = "0x1C307F0", VA = "0x1C307F0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000627")]
		public double Right
		{
			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x1C307F8", Offset = "0x1C307F8", VA = "0x1C307F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000628")]
		public double Bottom
		{
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0x1C30800", Offset = "0x1C30800", VA = "0x1C30800")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000629")]
		public double Top
		{
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0x1C30808", Offset = "0x1C30808", VA = "0x1C30808")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700062A")]
		public double Width
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x1C30810", Offset = "0x1C30810", VA = "0x1C30810")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700062B")]
		public double Height
		{
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0x1C30820", Offset = "0x1C30820", VA = "0x1C30820")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x1C2FEFC", Offset = "0x1C2FEFC", VA = "0x1C2FEFC")]
		public Rectangle()
		{
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x1C30760", Offset = "0x1C30760", VA = "0x1C30760")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x1C307A8", Offset = "0x1C307A8", VA = "0x1C307A8")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0x1C30830", Offset = "0x1C30830", VA = "0x1C30830")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x1C30848", Offset = "0x1C30848", VA = "0x1C30848")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0x1C2FF28", Offset = "0x1C2FF28", VA = "0x1C2FF28")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x1C30904", Offset = "0x1C30904", VA = "0x1C30904")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x1C309C0", Offset = "0x1C309C0", VA = "0x1C309C0")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0x1C309FC", Offset = "0x1C309FC", VA = "0x1C309FC")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x1C30A50", Offset = "0x1C30A50", VA = "0x1C30A50")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0x1C30AAC", Offset = "0x1C30AAC", VA = "0x1C30AAC")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006AB")]
	public class RegionPointer
	{
		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x1700062C")]
		public double Area
		{
			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x1C30B08", Offset = "0x1C30B08", VA = "0x1C30B08")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x1C30B10", Offset = "0x1C30B10", VA = "0x1C30B10")]
			set
			{
			}
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x1C30B74", Offset = "0x1C30B74", VA = "0x1C30B74")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x1C30B7C", Offset = "0x1C30B7C", VA = "0x1C30B7C")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x1700062D")]
		public int Label
		{
			[Token(Token = "0x6002C61")]
			[Address(RVA = "0x1C30C2C", Offset = "0x1C30C2C", VA = "0x1C30C2C", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0x1C30C34", Offset = "0x1C30C34", VA = "0x1C30C34")]
			set
			{
			}
		}

		[Token(Token = "0x1700062E")]
		public int P0
		{
			[Token(Token = "0x6002C63")]
			[Address(RVA = "0x1C30C3C", Offset = "0x1C30C3C", VA = "0x1C30C3C", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700062F")]
		public int P1
		{
			[Token(Token = "0x6002C64")]
			[Address(RVA = "0x1C30C58", Offset = "0x1C30C58", VA = "0x1C30C58", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x1C30C74", Offset = "0x1C30C74", VA = "0x1C30C74")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x1C30C7C", Offset = "0x1C30C7C", VA = "0x1C30C7C")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x1C30CD4", Offset = "0x1C30CD4", VA = "0x1C30CD4", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x1C30D38", Offset = "0x1C30D38", VA = "0x1C30D38", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20006AD")]
	public class Vertex : Point
	{
		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x17000630")]
		public VertexType Type
		{
			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0x1C30E14", Offset = "0x1C30E14", VA = "0x1C30E14")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x17000631")]
		public double this[int i]
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x1C30E1C", Offset = "0x1C30E1C", VA = "0x1C30E1C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x1C30D78", Offset = "0x1C30D78", VA = "0x1C30D78")]
		public Vertex()
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0x1C30DE0", Offset = "0x1C30DE0", VA = "0x1C30DE0")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x1C30DA0", Offset = "0x1C30DA0", VA = "0x1C30DA0")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x1C30E90", Offset = "0x1C30E90", VA = "0x1C30E90", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace Knife.HologramEffect
{
	[Token(Token = "0x20006AE")]
	public class Demo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006AF")]
		private class GameObjectsGroup
		{
			[Token(Token = "0x4002BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private GameObject[] gameObjects;

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x1C310CC", Offset = "0x1C310CC", VA = "0x1C310CC")]
			public void SetActive(bool enabled)
			{
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x1C3113C", Offset = "0x1C3113C", VA = "0x1C3113C")]
			public GameObjectsGroup()
			{
			}
		}

		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObjectsGroup[] groups;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button previousButton;

		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button nextButton;

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentGroup;

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x1C30E98", Offset = "0x1C30E98", VA = "0x1C30E98")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x1C31020", Offset = "0x1C31020", VA = "0x1C31020")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x1C31064", Offset = "0x1C31064", VA = "0x1C31064")]
		private void Next()
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x1C31098", Offset = "0x1C31098", VA = "0x1C31098")]
		private void Previous()
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x1C30F94", Offset = "0x1C30F94", VA = "0x1C30F94")]
		private void OpenCurrent()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x1C31134", Offset = "0x1C31134", VA = "0x1C31134")]
		public Demo()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[ExecuteAlways]
	public class MatrixProvider : MonoBehaviour
	{
		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] targetRenderers;

		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool eliminateRootBoneMatrix;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x1C31144", Offset = "0x1C31144", VA = "0x1C31144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x1C3143C", Offset = "0x1C3143C", VA = "0x1C3143C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x1C31440", Offset = "0x1C31440", VA = "0x1C31440")]
		public MatrixProvider()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x20006B1")]
	public class CameraFly : MonoBehaviour
	{
		[Token(Token = "0x20006B2")]
		private class CameraState
		{
			[Token(Token = "0x4002BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4002BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4002BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4002BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4002BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4002BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0x1C314EC", Offset = "0x1C314EC", VA = "0x1C314EC")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0x1C31A44", Offset = "0x1C31A44", VA = "0x1C31A44")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002C80")]
			[Address(RVA = "0x1C31AC4", Offset = "0x1C31AC4", VA = "0x1C31AC4")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0x1C31B4C", Offset = "0x1C31B4C", VA = "0x1C31B4C")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002C82")]
			[Address(RVA = "0x1C31D70", Offset = "0x1C31D70", VA = "0x1C31D70")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		[Header("Rotation Settings")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		public float rotationLerpTime;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x1C31498", Offset = "0x1C31498", VA = "0x1C31498")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x1C31570", Offset = "0x1C31570", VA = "0x1C31570")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x1C317A0", Offset = "0x1C317A0", VA = "0x1C317A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x1C31B94", Offset = "0x1C31B94", VA = "0x1C31B94")]
		public CameraFly()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20006B4")]
		private class CameraState
		{
			[Token(Token = "0x4002BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4002BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4002BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4002BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0x1C31DCC", Offset = "0x1C31DCC", VA = "0x1C31DCC")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002C88")]
			[Address(RVA = "0x1C3230C", Offset = "0x1C3230C", VA = "0x1C3230C")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0x1C3238C", Offset = "0x1C3238C", VA = "0x1C3238C")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0x1C32414", Offset = "0x1C32414", VA = "0x1C32414")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x1C32638", Offset = "0x1C32638", VA = "0x1C32638")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		[Header("Movement Settings")]
		public float boost;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Rotation Settings")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float rotationLerpTime;

		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x1C31D78", Offset = "0x1C31D78", VA = "0x1C31D78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x1C31E50", Offset = "0x1C31E50", VA = "0x1C31E50")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x1C32080", Offset = "0x1C32080", VA = "0x1C32080")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0x1C3245C", Offset = "0x1C3245C", VA = "0x1C3245C")]
		public SimpleCameraController()
		{
		}
	}
}
namespace InfinityPBR
{
	[Token(Token = "0x20006B5")]
	[RequireComponent(typeof(AudioSource))]
	public class AudioPlayPeriodic : MonoBehaviour
	{
		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] audioClips;

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool randomizeClips;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float frequencyMin;

		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frequencyMax;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float chanceOfPlaying;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float counter;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float stopCounter;

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float clipLength;

		[Token(Token = "0x4002C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioSource _audioSource;

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0x1C32640", Offset = "0x1C32640", VA = "0x1C32640")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x1C32784", Offset = "0x1C32784", VA = "0x1C32784")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0x1C32868", Offset = "0x1C32868", VA = "0x1C32868")]
		private void TryPlayAudio()
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x1C3271C", Offset = "0x1C3271C", VA = "0x1C3271C")]
		private float Reset()
		{
			return default(float);
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x1C328C0", Offset = "0x1C328C0", VA = "0x1C328C0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x1C329D4", Offset = "0x1C329D4", VA = "0x1C329D4")]
		public AudioPlayPeriodic()
		{
		}
	}
	[Token(Token = "0x20006B6")]
	public class DemoDoor : MonoBehaviour
	{
		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip open;

		[Token(Token = "0x4002C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip close;

		[Token(Token = "0x4002C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation animation;

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0x1C329F8", Offset = "0x1C329F8", VA = "0x1C329F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x1C32A50", Offset = "0x1C32A50", VA = "0x1C32A50")]
		public void Open()
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0x1C32AE4", Offset = "0x1C32AE4", VA = "0x1C32AE4")]
		public void Close()
		{
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x1C32B78", Offset = "0x1C32B78", VA = "0x1C32B78")]
		public DemoDoor()
		{
		}
	}
	[Token(Token = "0x20006B7")]
	public class DemoDoorAutoOpen : MonoBehaviour
	{
		[Token(Token = "0x4002C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoDoor[] doors;

		[Token(Token = "0x4002C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x1C32B80", Offset = "0x1C32B80", VA = "0x1C32B80")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x1C32CCC", Offset = "0x1C32CCC", VA = "0x1C32CCC")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0x1C32C50", Offset = "0x1C32C50", VA = "0x1C32C50")]
		private void Open()
		{
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x1C32D9C", Offset = "0x1C32D9C", VA = "0x1C32D9C")]
		private void Close()
		{
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0x1C32E18", Offset = "0x1C32E18", VA = "0x1C32E18")]
		public DemoDoorAutoOpen()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	public class FollowPlayerOnWaypoints : MonoBehaviour
	{
		[Token(Token = "0x4002C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject waypointParent;

		[Token(Token = "0x4002C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Transform> waypoints;

		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] waypointsPos;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform player;

		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform thisTransform;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 newPos;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speedMod;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool limitToAudioDistance;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource _audioSource;

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0x1C32E40", Offset = "0x1C32E40", VA = "0x1C32E40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x1C3339C", Offset = "0x1C3339C", VA = "0x1C3339C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x1C335E0", Offset = "0x1C335E0", VA = "0x1C335E0")]
		private bool PlayerIsOutOfAudioRange(Vector3 pos1, Vector3 pos2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0x1C3376C", Offset = "0x1C3376C", VA = "0x1C3376C")]
		private Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x1C33978", Offset = "0x1C33978", VA = "0x1C33978")]
		public FollowPlayerOnWaypoints()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20006B9")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x20006BA")]
		public enum WaterMode
		{
			[Token(Token = "0x4002C24")]
			Simple,
			[Token(Token = "0x4002C25")]
			Reflective,
			[Token(Token = "0x4002C26")]
			Refractive
		}

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4002C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x1C33A64", Offset = "0x1C33A64", VA = "0x1C33A64")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x1C35398", Offset = "0x1C35398", VA = "0x1C35398")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x1C35700", Offset = "0x1C35700", VA = "0x1C35700")]
		private void Update()
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0x1C34F18", Offset = "0x1C34F18", VA = "0x1C34F18")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0x1C345AC", Offset = "0x1C345AC", VA = "0x1C345AC")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0x1C34598", Offset = "0x1C34598", VA = "0x1C34598")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0x1C34438", Offset = "0x1C34438", VA = "0x1C34438")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0x1C351E8", Offset = "0x1C351E8", VA = "0x1C351E8")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x1C35154", Offset = "0x1C35154", VA = "0x1C35154")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0x1C359AC", Offset = "0x1C359AC", VA = "0x1C359AC")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x1C35AAC", Offset = "0x1C35AAC", VA = "0x1C35AAC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0x1C35ACC", Offset = "0x1C35ACC", VA = "0x1C35ACC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0x1C35B30", Offset = "0x1C35B30", VA = "0x1C35B30")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0x1C35B94", Offset = "0x1C35B94", VA = "0x1C35B94")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0x1C35B9C", Offset = "0x1C35B9C", VA = "0x1C35B9C")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	public class MeshContainer
	{
		[Token(Token = "0x4002C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4002C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4002C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0x1C35BA4", Offset = "0x1C35BA4", VA = "0x1C35BA4")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x1C35C14", Offset = "0x1C35C14", VA = "0x1C35C14")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(WaterBase))]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0x1C35C4C", Offset = "0x1C35C4C", VA = "0x1C35C4C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0x1C35D48", Offset = "0x1C35D48", VA = "0x1C35D48")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0x1C36058", Offset = "0x1C36058", VA = "0x1C36058")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0x1C3610C", Offset = "0x1C3610C", VA = "0x1C3610C")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0x1C36264", Offset = "0x1C36264", VA = "0x1C36264")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0x1C36AD8", Offset = "0x1C36AD8", VA = "0x1C36AD8")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0x1C36B30", Offset = "0x1C36B30", VA = "0x1C36B30")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0x1C36C10", Offset = "0x1C36C10", VA = "0x1C36C10")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0x1C36C74", Offset = "0x1C36C74", VA = "0x1C36C74")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0x1C36420", Offset = "0x1C36420", VA = "0x1C36420")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0x1C36CD8", Offset = "0x1C36CD8", VA = "0x1C36CD8")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0x1C36F8C", Offset = "0x1C36F8C", VA = "0x1C36F8C")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0x1C36D38", Offset = "0x1C36D38", VA = "0x1C36D38")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0x1C370F8", Offset = "0x1C370F8", VA = "0x1C370F8")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0x1C36DDC", Offset = "0x1C36DDC", VA = "0x1C36DDC")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0x1C37118", Offset = "0x1C37118", VA = "0x1C37118")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	[RequireComponent(typeof(WaterBase))]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0x1C37188", Offset = "0x1C37188", VA = "0x1C37188")]
		public void Start()
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0x1C372B0", Offset = "0x1C372B0", VA = "0x1C372B0")]
		public void Update()
		{
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0x1C374C8", Offset = "0x1C374C8", VA = "0x1C374C8")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	public enum WaterQuality
	{
		[Token(Token = "0x4002C36")]
		High = 2,
		[Token(Token = "0x4002C37")]
		Medium = 1,
		[Token(Token = "0x4002C38")]
		Low = 0
	}
	[Token(Token = "0x20006C1")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0x1C374D0", Offset = "0x1C374D0", VA = "0x1C374D0")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0x1C37648", Offset = "0x1C37648", VA = "0x1C37648")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0x1C376EC", Offset = "0x1C376EC", VA = "0x1C376EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0x1C37760", Offset = "0x1C37760", VA = "0x1C37760")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20006C2")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0x1C37778", Offset = "0x1C37778", VA = "0x1C37778")]
		public void Start()
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0x1C3777C", Offset = "0x1C3777C", VA = "0x1C3777C")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0x1C3793C", Offset = "0x1C3793C", VA = "0x1C3793C")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0x1C37A20", Offset = "0x1C37A20", VA = "0x1C37A20")]
		public WaterTile()
		{
		}
	}
}
namespace Suburb
{
	[Token(Token = "0x20006C3")]
	public class SimpleOpenClose : MonoBehaviour
	{
		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator myAnimator;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator additionalAnimator;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool objectOpen;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool objectOpenAdditional;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject animateAdditional;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasAdditional;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float myNormalizedTime;

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0x1C37A28", Offset = "0x1C37A28", VA = "0x1C37A28")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CCE")]
		[Address(RVA = "0x1C37C10", Offset = "0x1C37C10", VA = "0x1C37C10")]
		private void ObjectClicked()
		{
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0x1C37E38", Offset = "0x1C37E38", VA = "0x1C37E38")]
		public SimpleOpenClose()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	[RequireComponent(typeof(CharacterController))]
	public class SimplePlayerController : MonoBehaviour
	{
		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera playerCamera;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float walkSpeed;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runSpeed;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lookSpeed;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lookXLimit;

		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gravity;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterController characterController;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 moveDirection;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float rotationX;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool canMove;

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0x1C37E40", Offset = "0x1C37E40", VA = "0x1C37E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0x1C37EB0", Offset = "0x1C37EB0", VA = "0x1C37EB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0x1C38274", Offset = "0x1C38274", VA = "0x1C38274")]
		public SimplePlayerController()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	public class SimplePlayerUse : MonoBehaviour
	{
		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mainCamera;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject objectClicked;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject flashlight;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode OpenClose;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode Flashlight;

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0x1C382F0", Offset = "0x1C382F0", VA = "0x1C382F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0x1C382F4", Offset = "0x1C382F4", VA = "0x1C382F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x1C38360", Offset = "0x1C38360", VA = "0x1C38360")]
		private void RaycastCheck()
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0x1C38518", Offset = "0x1C38518", VA = "0x1C38518")]
		public SimplePlayerUse()
		{
		}
	}
}
namespace PrefabSwapperSuburb
{
	[Token(Token = "0x20006C6")]
	[AddComponentMenu("PrefabSwapper/SwapPrefabSuburb")]
	[ExecuteInEditMode]
	public class SwapPrefab : MonoBehaviour
	{
		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<string> categoryList;

		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<string> prefabList;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool placed;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string category;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string prefab;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] additionals;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] additionalsBtns;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] additionalsPos;

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] additionalsRot;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string exCategory;

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string exPrefab;

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0x1C38520", Offset = "0x1C38520", VA = "0x1C38520")]
		public void CreateCategoryList()
		{
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0x1C386EC", Offset = "0x1C386EC", VA = "0x1C386EC")]
		public void CreatePrefabList()
		{
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0x1C388C8", Offset = "0x1C388C8", VA = "0x1C388C8")]
		public void FindPrefabProperties()
		{
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0x1C38A64", Offset = "0x1C38A64", VA = "0x1C38A64")]
		public void CleanPrefabProperties()
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x1C389B4", Offset = "0x1C389B4", VA = "0x1C389B4")]
		public void GetPrefabProperties(SwapPrefabList.SwapPrefabProperties _prefab)
		{
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0x1C38B80", Offset = "0x1C38B80", VA = "0x1C38B80")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0x1C38B9C", Offset = "0x1C38B9C", VA = "0x1C38B9C")]
		public SwapPrefab()
		{
		}
	}
	[Token(Token = "0x20006C7")]
	public class SwapPrefabList : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20006C8")]
		public class SwapPrefabProperties
		{
			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string prefabName;

			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string category;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] addAdditional;

			[Token(Token = "0x4002C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string[] addAdditionalButtonName;

			[Token(Token = "0x4002C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3[] addAdditionalPos;

			[Token(Token = "0x4002C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3[] addAdditionalRot;

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x1CACF98", Offset = "0x1CACF98", VA = "0x1CACF98")]
			public SwapPrefabProperties(string _PrefabName, string _Category, string[] _AddAdditional, string[] _AddAdditionalButtonName, Vector3[] _AddAdditionalPos, Vector3[] _AddAdditionalRot)
			{
			}
		}

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] prefabsFolders;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SwapPrefabProperties[] swapPrefabProperties;

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x1C38BA4", Offset = "0x1C38BA4", VA = "0x1C38BA4")]
		public SwapPrefabList()
		{
		}
	}
	[Token(Token = "0x20006C9")]
	[AddComponentMenu("PrefabSwapper/SwapPrefabListVisualizerSuburb")]
	public class SwapPrefabListVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4002C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Use Rightclick > Refresh to refresh list")]
		public SwapPrefabList.SwapPrefabProperties[] prefabList;

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x1CAD03C", Offset = "0x1CAD03C", VA = "0x1CAD03C")]
		[ContextMenu("Refresh")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0x1CAD0E4", Offset = "0x1CAD0E4", VA = "0x1CAD0E4")]
		public SwapPrefabListVisualizer()
		{
		}
	}
}
namespace OldElevator
{
	[Token(Token = "0x20006CA")]
	public class DoorTrigger : MonoBehaviour
	{
		[Token(Token = "0x20006CB")]
		public enum DoorType
		{
			[Token(Token = "0x4002C85")]
			Accordion,
			[Token(Token = "0x4002C86")]
			Hinged
		}

		[Token(Token = "0x20006CC")]
		public enum DoorLocation
		{
			[Token(Token = "0x4002C88")]
			Internal,
			[Token(Token = "0x4002C89")]
			External
		}

		[Token(Token = "0x20006CD")]
		public enum MovementType
		{
			[Token(Token = "0x4002C8B")]
			Normal,
			[Token(Token = "0x4002C8C")]
			CustomCurve
		}

		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElevatorBrain brain;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isFullyClosed;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isFullyOpen;

		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public DoorType doorType;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DoorLocation doorLocation;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public MovementType movementType;

		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve angleCurve;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isRightDoor;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float angleCurveStartTime;

		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float curveSpeed;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool interactWithBoth;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DoorTrigger otherPaneOfThisPair;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SkinnedMeshRenderer _smr;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool opening;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool closing;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0.1f, 0.95f)]
		public float howFast;

		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float currentSpeed;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool randomizeHowFast;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentWeight;

		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool locked;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform floorStop;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float destinationZAngle;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float currentZAngle;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 originalLocalRotation;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float openAngle;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float closedAngle;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<AudioSource> audioDoorOpening;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private List<AudioSource> audioDoorClosing;

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0x1CAD0EC", Offset = "0x1CAD0EC", VA = "0x1CAD0EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x1CAD24C", Offset = "0x1CAD24C", VA = "0x1CAD24C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0x1CAD604", Offset = "0x1CAD604", VA = "0x1CAD604")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0x1CAD8AC", Offset = "0x1CAD8AC", VA = "0x1CAD8AC")]
		private void ClosingEnds()
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0x1CAD808", Offset = "0x1CAD808", VA = "0x1CAD808")]
		private void OpeningEnds()
		{
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0x1CADD80", Offset = "0x1CADD80", VA = "0x1CADD80")]
		[ContextMenu("Open")]
		public void Open()
		{
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0x1CADEAC", Offset = "0x1CADEAC", VA = "0x1CADEAC")]
		[ContextMenu("Close")]
		public void Close(bool slowly = false)
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x1CADF90", Offset = "0x1CADF90", VA = "0x1CADF90")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x1CAD154", Offset = "0x1CAD154", VA = "0x1CAD154")]
		private void RebakeMesh()
		{
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x1CADEA4", Offset = "0x1CADEA4", VA = "0x1CADEA4")]
		public void DoorStartsOpening()
		{
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x1CADF7C", Offset = "0x1CADF7C", VA = "0x1CADF7C")]
		public void DoorStartsClosing()
		{
		}

		[Token(Token = "0x6002CEE")]
		[Address(RVA = "0x1CADCC8", Offset = "0x1CADCC8", VA = "0x1CADCC8")]
		private void RandomizeAndPlay(List<AudioSource> audioList)
		{
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0x1CADB50", Offset = "0x1CADB50", VA = "0x1CADB50")]
		private void StopAudio(List<AudioSource> audioList)
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x1CADFA4", Offset = "0x1CADFA4", VA = "0x1CADFA4")]
		public DoorTrigger()
		{
		}
	}
	[Token(Token = "0x20006CE")]
	[DefaultExecutionOrder(1100)]
	public class ElevatorBrain : MonoBehaviour
	{
		[Token(Token = "0x20006CF")]
		public enum FlickeringFrecuency
		{
			[Token(Token = "0x4002CBE")]
			NoFlickering,
			[Token(Token = "0x4002CBF")]
			AlmostUnnoticeable,
			[Token(Token = "0x4002CC0")]
			Annoying,
			[Token(Token = "0x4002CC1")]
			Heavy,
			[Token(Token = "0x4002CC2")]
			Nightmare
		}

		[Token(Token = "0x20006D0")]
		public enum ElevatorShaking
		{
			[Token(Token = "0x4002CC4")]
			NoShaking,
			[Token(Token = "0x4002CC5")]
			AlmostUnnoticeable,
			[Token(Token = "0x4002CC6")]
			Annoying,
			[Token(Token = "0x4002CC7")]
			Heavy,
			[Token(Token = "0x4002CC8")]
			Nightmare
		}

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Speed ____________________________________________________________")]
		[Space(10f)]
		[Space(40f)]
		[SerializeField]
		private float unitsPerSecond;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool slowDownNearArriving;

		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.01f, 0.03f)]
		[SerializeField]
		private float slowingDownEffect;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform initialStop;

		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 destination;

		[Token(Token = "0x4002C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<DoorTrigger> outterDoors;

		[Token(Token = "0x4002C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<DoorTrigger> innerDoors;

		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Space(10f)]
		[Header("Avoid player bouncing while traveling _________________________")]
		[Space(40f)]
		private bool avoidBouncing;

		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform player;

		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float distToFloor;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[Header("Safety measures ________________________________________________")]
		[Space(10f)]
		[Space(40f)]
		private bool outterDoorsMustBeFullyClosed;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[SerializeField]
		private bool innerDoorsMustBeFullyClosed;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[SerializeField]
		private bool lockOutterDoorsInOtherFloors;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		[SerializeField]
		private bool emergencyStopIfInnerDoorsOpen;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool resumeTravelAfterDoorsClose;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Not everything is pink _________________________________________")]
		[Space(10f)]
		[SerializeField]
		[Space(40f)]
		private FlickeringFrecuency lightFlickering;

		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ElevatorShaking elevatorShaking;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Range(0f, 2f)]
		[SerializeField]
		private float shakeWhenTravelBegins;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Range(0f, 2f)]
		[SerializeField]
		private float shakeWhenTravelEnds;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Range(0f, 2f)]
		[SerializeField]
		private float shakeOnEmergencyStop;

		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Space(10f)]
		[Header("Internal references ________________________________________________")]
		[Space(40f)]
		public Transform elevator;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject elevatorLightsContainer;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ElevatorButton elevatorLightSwitchScript;

		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Space(10f)]
		[Header("Lights Materials ________________________________________")]
		[Space(40f)]
		private Material isMovingLight;

		[Token(Token = "0x4002CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Material movingUpLight;

		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Material movingDownLight;

		[Token(Token = "0x4002CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Color movingLightColor;

		[Token(Token = "0x4002CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Material emergencyStopLight;

		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color emergencyStopColor;

		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float callerLightsIntensity;

		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Space(40f)]
		[Header("Sounds _________________________________________________________")]
		[Space(10f)]
		public AudioSource travelSound;

		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioSource stopSound;

		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioSource emergencyStopSound;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioSource doorUnlockedSound;

		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioSource breaksSound;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioSource[] flickeringSounds;

		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float nextFlicker;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float nextShaking;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float currentShakeMagnitude;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float multiplier;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion originalElevatorRotation;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float currentSpeed;

		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public bool moving;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int direction;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool breaking;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool hasShownPlayerWarning;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform stopsContainer;

		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool lightsState;

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x1CAE094", Offset = "0x1CAE094", VA = "0x1CAE094")]
		public void GoToFloor(int floor)
		{
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x1CAE0C8", Offset = "0x1CAE0C8", VA = "0x1CAE0C8")]
		public void GoToPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x1CAE784", Offset = "0x1CAE784", VA = "0x1CAE784")]
		public void ElevatorLightsToggle(bool state)
		{
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0x1CAE7E0", Offset = "0x1CAE7E0", VA = "0x1CAE7E0")]
		public void EmergencyStopBegin()
		{
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x1CAE96C", Offset = "0x1CAE96C", VA = "0x1CAE96C")]
		public void EmergencyStopEnds()
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0x1CAEDF0", Offset = "0x1CAEDF0", VA = "0x1CAEDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x1CAEEC0", Offset = "0x1CAEEC0", VA = "0x1CAEEC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0x1CAEA50", Offset = "0x1CAEA50", VA = "0x1CAEA50")]
		private void UpdateDoorLocks(bool silently = false)
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x1CAEFEC", Offset = "0x1CAEFEC", VA = "0x1CAEFEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0x1CAE1FC", Offset = "0x1CAE1FC", VA = "0x1CAE1FC")]
		private bool SafetyCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0x1CAD8FC", Offset = "0x1CAD8FC", VA = "0x1CAD8FC")]
		public void InnerDoorsChangeState()
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0x1CAE43C", Offset = "0x1CAE43C", VA = "0x1CAE43C")]
		private bool ElevatorIsOnDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0x1CAF448", Offset = "0x1CAF448", VA = "0x1CAF448")]
		private void Update()
		{
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0x1CAF5BC", Offset = "0x1CAF5BC", VA = "0x1CAF5BC")]
		private void ApplyLightsFlickering()
		{
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0x1CAF794", Offset = "0x1CAF794", VA = "0x1CAF794")]
		private void ApplyElevatorShaking()
		{
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0x1CAFA50", Offset = "0x1CAFA50", VA = "0x1CAFA50")]
		private void LightFlickerEnds()
		{
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0x1CAE500", Offset = "0x1CAE500", VA = "0x1CAE500")]
		private void UpdateCallersLights()
		{
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0x1CAFAA0", Offset = "0x1CAFAA0", VA = "0x1CAFAA0")]
		public ElevatorBrain()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	public class ElevatorButton : MonoBehaviour
	{
		[Token(Token = "0x20006D2")]
		public enum ButtonType
		{
			[Token(Token = "0x4002CDF")]
			GoTo,
			[Token(Token = "0x4002CE0")]
			LightToggle,
			[Token(Token = "0x4002CE1")]
			Stop
		}

		[Token(Token = "0x20006D3")]
		public enum LightInitialState
		{
			[Token(Token = "0x4002CE3")]
			On,
			[Token(Token = "0x4002CE4")]
			Off
		}

		[Token(Token = "0x4002CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonType buttonType;

		[Token(Token = "0x4002CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform destination;

		[Token(Token = "0x4002CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ElevatorBrain brain;

		[Token(Token = "0x4002CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Space(40f)]
		[Header("Only for light switches ____________________________________________")]
		[Space(10f)]
		private float angleOn;

		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float angleOff;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LightInitialState initialState;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool lightIsOn;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool controlsElevatorLights;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource switchOnSound;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource switchOffSound;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer fluorescentTubeRend;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color fluorescentColorOn;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color fluorescentColorOff;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float fluorescentIntensity;

		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[Space(40f)]
		[Header("Only for mechanical buttons ________________________________________")]
		[Space(10f)]
		private bool animateOnPress;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve pressAnimationCurve;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3 movementFactor;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float pressStartTime;

		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float curveSpeed;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 originalLocalPosition;

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isAnimating;

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0x1CAFC18", Offset = "0x1CAFC18", VA = "0x1CAFC18")]
		public void Press(bool withSound = true)
		{
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x1CAF8F0", Offset = "0x1CAF8F0", VA = "0x1CAF8F0")]
		public void UpdateTubeEmission(bool value)
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x1CAFE50", Offset = "0x1CAFE50", VA = "0x1CAFE50")]
		public void Start()
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0x1CAFEAC", Offset = "0x1CAFEAC", VA = "0x1CAFEAC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x1CAFF84", Offset = "0x1CAFF84", VA = "0x1CAFF84")]
		public ElevatorButton()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	public class ElevatorInteraction : MonoBehaviour
	{
		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMaskButtons;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxInteractionDistance;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image interactIcon;

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x1CAFFDC", Offset = "0x1CAFFDC", VA = "0x1CAFFDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x1CB00C4", Offset = "0x1CB00C4", VA = "0x1CB00C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x1CB032C", Offset = "0x1CB032C", VA = "0x1CB032C")]
		public ElevatorInteraction()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	public class InteractionIcon : MonoBehaviour
	{
		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InteractionIcon inst;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Image thisIcon;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color noInteractableColor;

		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color interactableColor;

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0x1CB0334", Offset = "0x1CB0334", VA = "0x1CB0334")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0x1CB02C8", Offset = "0x1CB02C8", VA = "0x1CB02C8")]
		public void SetInteractable(bool value)
		{
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0x1CB03C4", Offset = "0x1CB03C4", VA = "0x1CB03C4")]
		public InteractionIcon()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	[RequireComponent(typeof(CharacterController))]
	public class SimpleController_cc : MonoBehaviour
	{
		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform thePlayer;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController cc;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cam;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotX;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float walkSpeed;

		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float runSpeed;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float mouseSensitivity;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool grounded;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float gravity;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float verticalVelocity;

		[Token(Token = "0x4002CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float jumpForce;

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0x1CB03E0", Offset = "0x1CB03E0", VA = "0x1CB03E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0x1CB04E0", Offset = "0x1CB04E0", VA = "0x1CB04E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0x1CB094C", Offset = "0x1CB094C", VA = "0x1CB094C")]
		public SimpleController_cc()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[RequireComponent(typeof(Rigidbody))]
	public class SimpleController_rb : MonoBehaviour
	{
		[Token(Token = "0x4002CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform thePlayer;

		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform cam;

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotX;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float walkSpeed;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float runSpeed;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float mouseSensitivity;

		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool grounded;

		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float jumpForce;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float distanceFloorToPlayer;

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x1CB097C", Offset = "0x1CB097C", VA = "0x1CB097C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0x1CB0A7C", Offset = "0x1CB0A7C", VA = "0x1CB0A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0x1CB0EF8", Offset = "0x1CB0EF8", VA = "0x1CB0EF8")]
		public SimpleController_rb()
		{
		}
	}
}
namespace DynamicLoadingKit
{
	[Token(Token = "0x20006D8")]
	[AddComponentMenu("Dynamic Loading Kit/Cell Object Loaders/Asset Bundle Loader")]
	public class AssetBundleLoader : BaseSceneLoader
	{
		[Token(Token = "0x20006D9")]
		public enum StreamingType
		{
			[Token(Token = "0x4002D08")]
			SimulationModeOrLocalAssetServer,
			[Token(Token = "0x4002D09")]
			StreamingAssetsFolder,
			[Token(Token = "0x4002D0A")]
			RemoteServer
		}

		[Token(Token = "0x20006DA")]
		public enum AssetBundleManagerLogMode
		{
			[Token(Token = "0x4002D0C")]
			All,
			[Token(Token = "0x4002D0D")]
			JustErrors
		}

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private AssetBundleManagerLogMode logMode;

		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StreamingType streamingType;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string serverURL;

		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string[] variantPossibilities;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string activeVariant;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool initialized;

		[Token(Token = "0x17000632")]
		public override bool IsSingleFrameAttachmentPreloadRequired
		{
			[Token(Token = "0x6002D15")]
			[Address(RVA = "0x1CB0F28", Offset = "0x1CB0F28", VA = "0x1CB0F28", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0x1CB0F20", Offset = "0x1CB0F20", VA = "0x1CB0F20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x1CB0F30", Offset = "0x1CB0F30", VA = "0x1CB0F30", Slot = "9")]
		protected sealed override YieldInstruction LoadCellObjectIntoLevel(string objectName)
		{
			return null;
		}

		[Token(Token = "0x6002D17")]
		public override void AttachCellObjectsToCellsInSingleFrame<T>(List<T> cells, int loaderID)
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0x1CB0F80", Offset = "0x1CB0F80", VA = "0x1CB0F80")]
		private IEnumerator<YieldInstruction> LoadSceneIntoLevel(string assetBundleName, string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0x1CB0FD0", Offset = "0x1CB0FD0", VA = "0x1CB0FD0")]
		private IEnumerator<YieldInstruction> InitializeAndThenLoadSceneIntoLevel(string assetBundleName, string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x1CB1020", Offset = "0x1CB1020", VA = "0x1CB1020")]
		public void SetVariant(string variantName)
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0x1CB1070", Offset = "0x1CB1070", VA = "0x1CB1070")]
		public void SetVariant(int index)
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x1CB10C0", Offset = "0x1CB10C0", VA = "0x1CB10C0")]
		public AssetBundleLoader()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	[RequireComponent(typeof(CharacterController))]
	[AddComponentMenu("Dynamic Loading Kit/CharacterControl/Player Mover Character Motor")]
	public class PlayerMoverCharacterMotor : PlayerMover
	{
		[Serializable]
		[Token(Token = "0x20006DC")]
		private class CharacterMotorMovement
		{
			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxForwardSpeed;

			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxSidewaysSpeed;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float maxBackwardsSpeed;

			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve slopeSpeedMultiplier;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxGroundAcceleration;

			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float maxAirAcceleration;

			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float gravity;

			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float maxFallSpeed;

			[NonSerialized]
			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[HideInInspector]
			public CollisionFlags collisionFlags;

			[NonSerialized]
			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[HideInInspector]
			public Vector3 velocity;

			[NonSerialized]
			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[HideInInspector]
			public Vector3 frameVelocity;

			[NonSerialized]
			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[HideInInspector]
			public Vector3 hitPoint;

			[NonSerialized]
			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public Vector3 lastHitPoint;

			[Token(Token = "0x6002D38")]
			[Address(RVA = "0x1CB3344", Offset = "0x1CB3344", VA = "0x1CB3344")]
			public CharacterMotorMovement()
			{
			}
		}

		[Token(Token = "0x20006DD")]
		private enum MovementTransferOnJump
		{
			[Token(Token = "0x4002D2B")]
			None,
			[Token(Token = "0x4002D2C")]
			InitTransfer,
			[Token(Token = "0x4002D2D")]
			PermaTransfer,
			[Token(Token = "0x4002D2E")]
			PermaLocked
		}

		[Serializable]
		[Token(Token = "0x20006DE")]
		private class CharacterMotorJumping
		{
			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float baseHeight;

			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float extraHeight;

			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float perpAmount;

			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float steepPerpAmount;

			[NonSerialized]
			[Token(Token = "0x4002D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public bool jumping;

			[NonSerialized]
			[Token(Token = "0x4002D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[HideInInspector]
			public bool holdingJumpButton;

			[NonSerialized]
			[Token(Token = "0x4002D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public float lastStartTime;

			[NonSerialized]
			[Token(Token = "0x4002D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[HideInInspector]
			public float lastButtonDownTime;

			[NonSerialized]
			[Token(Token = "0x4002D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public Vector3 jumpDir;

			[Token(Token = "0x6002D39")]
			[Address(RVA = "0x1CB3564", Offset = "0x1CB3564", VA = "0x1CB3564")]
			public CharacterMotorJumping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006DF")]
		private class CharacterMotorMovingPlatform
		{
			[Token(Token = "0x4002D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MovementTransferOnJump movementTransfer;

			[NonSerialized]
			[Token(Token = "0x4002D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Transform hitPlatform;

			[NonSerialized]
			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			public Transform activePlatform;

			[NonSerialized]
			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public Vector3 activeLocalPoint;

			[NonSerialized]
			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[HideInInspector]
			public Vector3 activeGlobalPoint;

			[NonSerialized]
			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[HideInInspector]
			public Quaternion activeLocalRotation;

			[NonSerialized]
			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[HideInInspector]
			public Quaternion activeGlobalRotation;

			[NonSerialized]
			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public Matrix4x4 lastMatrix;

			[NonSerialized]
			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 platformVelocity;

			[NonSerialized]
			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public bool newPlatform;

			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0x1CB35E4", Offset = "0x1CB35E4", VA = "0x1CB35E4")]
			public CharacterMotorMovingPlatform()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006E0")]
		private class CharacterMotorSliding
		{
			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float slidingSpeed;

			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float sidewaysControl;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float speedControl;

			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0x1CB35FC", Offset = "0x1CB35FC", VA = "0x1CB35FC")]
			public CharacterMotorSliding()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		[CompilerGenerated]
		private sealed class <MovePlayerByAmount>d__9 : IEnumerator<YieldInstruction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YieldInstruction <>2__current;

			[Token(Token = "0x4002D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform player;

			[Token(Token = "0x4002D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 amountToMovePlayer;

			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PlayerMoverCharacterMotor <>4__this;

			[Token(Token = "0x17000634")]
			private YieldInstruction System.Collections.Generic.IEnumerator<UnityEngine.YieldInstruction>.Current
			{
				[Token(Token = "0x6002D3F")]
				[Address(RVA = "0x1CB3738", Offset = "0x1CB3738", VA = "0x1CB3738", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000635")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D41")]
				[Address(RVA = "0x1CB3780", Offset = "0x1CB3780", VA = "0x1CB3780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0x1CB1250", Offset = "0x1CB1250", VA = "0x1CB1250")]
			[DebuggerHidden]
			public <MovePlayerByAmount>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0x1CB3624", Offset = "0x1CB3624", VA = "0x1CB3624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0x1CB3628", Offset = "0x1CB3628", VA = "0x1CB3628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D40")]
			[Address(RVA = "0x1CB3740", Offset = "0x1CB3740", VA = "0x1CB3740", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E2")]
		[CompilerGenerated]
		private sealed class <MovePlayerToPosition>d__10 : IEnumerator<YieldInstruction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YieldInstruction <>2__current;

			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform player;

			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PlayerMoverCharacterMotor <>4__this;

			[Token(Token = "0x17000636")]
			private YieldInstruction System.Collections.Generic.IEnumerator<UnityEngine.YieldInstruction>.Current
			{
				[Token(Token = "0x6002D45")]
				[Address(RVA = "0x1CB3880", Offset = "0x1CB3880", VA = "0x1CB3880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000637")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D47")]
				[Address(RVA = "0x1CB38C8", Offset = "0x1CB38C8", VA = "0x1CB38C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D42")]
			[Address(RVA = "0x1CB132C", Offset = "0x1CB132C", VA = "0x1CB132C")]
			[DebuggerHidden]
			public <MovePlayerToPosition>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D43")]
			[Address(RVA = "0x1CB3788", Offset = "0x1CB3788", VA = "0x1CB3788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D44")]
			[Address(RVA = "0x1CB378C", Offset = "0x1CB378C", VA = "0x1CB378C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0x1CB3888", Offset = "0x1CB3888", VA = "0x1CB3888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		[CompilerGenerated]
		private sealed class <SubtractNewPlatformVelocity>d__31 : IEnumerator<YieldInstruction>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private YieldInstruction <>2__current;

			[Token(Token = "0x4002D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerMoverCharacterMotor <>4__this;

			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <platform>5__2;

			[Token(Token = "0x17000638")]
			private YieldInstruction System.Collections.Generic.IEnumerator<UnityEngine.YieldInstruction>.Current
			{
				[Token(Token = "0x6002D4B")]
				[Address(RVA = "0x1CB3ACC", Offset = "0x1CB3ACC", VA = "0x1CB3ACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000639")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D4D")]
				[Address(RVA = "0x1CB3B14", Offset = "0x1CB3B14", VA = "0x1CB3B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D48")]
			[Address(RVA = "0x1CB2E08", Offset = "0x1CB2E08", VA = "0x1CB2E08")]
			[DebuggerHidden]
			public <SubtractNewPlatformVelocity>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002D49")]
			[Address(RVA = "0x1CB38D0", Offset = "0x1CB38D0", VA = "0x1CB38D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0x1CB38D4", Offset = "0x1CB38D4", VA = "0x1CB38D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0x1CB3AD4", Offset = "0x1CB3AD4", VA = "0x1CB3AD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canControl;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool useFixedUpdate;

		[NonSerialized]
		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 inputMoveDirection;

		[NonSerialized]
		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool inputJump;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool freezePlayer;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForFixedUpdate waitTillFixedUpdate;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CharacterMotorMovement movement;

		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CharacterMotorJumping jumping;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CharacterMotorMovingPlatform movingPlatform;

		[Token(Token = "0x4002D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CharacterMotorSliding sliding;

		[NonSerialized]
		[Token(Token = "0x4002D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool grounded;

		[NonSerialized]
		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		private Vector3 groundNormal;

		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 lastGroundNormal;

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform tr;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CharacterController controller;

		[Token(Token = "0x17000633")]
		public sealed override bool PlayerMoved
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0x1CB1194", Offset = "0x1CB1194", VA = "0x1CB1194", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x1CB1120", Offset = "0x1CB1120", VA = "0x1CB1120")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0x1CB119C", Offset = "0x1CB119C", VA = "0x1CB119C", Slot = "5")]
		[IteratorStateMachine(typeof(<MovePlayerByAmount>d__9))]
		public sealed override IEnumerator<YieldInstruction> MovePlayerByAmount(Transform player, Vector3 amountToMovePlayer)
		{
			return null;
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0x1CB1278", Offset = "0x1CB1278", VA = "0x1CB1278", Slot = "6")]
		[IteratorStateMachine(typeof(<MovePlayerToPosition>d__10))]
		public sealed override IEnumerator<YieldInstruction> MovePlayerToPosition(Transform player, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0x1CB1354", Offset = "0x1CB1354", VA = "0x1CB1354")]
		private void UpdateFunction()
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0x1CB265C", Offset = "0x1CB265C", VA = "0x1CB265C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x1CB283C", Offset = "0x1CB283C", VA = "0x1CB283C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0x1CB1D90", Offset = "0x1CB1D90", VA = "0x1CB1D90")]
		private Vector3 ApplyInputVelocityChange(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x1CB21AC", Offset = "0x1CB21AC", VA = "0x1CB21AC")]
		private Vector3 ApplyGravityAndJumping(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0x1CB2C24", Offset = "0x1CB2C24", VA = "0x1CB2C24")]
		public void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x1CB25E8", Offset = "0x1CB25E8", VA = "0x1CB25E8")]
		[IteratorStateMachine(typeof(<SubtractNewPlatformVelocity>d__31))]
		private IEnumerator<YieldInstruction> SubtractNewPlatformVelocity()
		{
			return null;
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x1CB2534", Offset = "0x1CB2534", VA = "0x1CB2534")]
		private bool MoveWithPlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x1CB2894", Offset = "0x1CB2894", VA = "0x1CB2894")]
		private Vector3 GetDesiredHorizontalVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0x1CB29F8", Offset = "0x1CB29F8", VA = "0x1CB29F8")]
		private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x1CB25CC", Offset = "0x1CB25CC", VA = "0x1CB25CC")]
		private bool IsGroundedTest()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x1CB2BD0", Offset = "0x1CB2BD0", VA = "0x1CB2BD0")]
		public float GetMaxAcceleration(bool grounded)
		{
			return default(float);
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0x1CB2BFC", Offset = "0x1CB2BFC", VA = "0x1CB2BFC")]
		public float CalculateJumpVerticalSpeed(float targetJumpHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0x1CB2FF8", Offset = "0x1CB2FF8", VA = "0x1CB2FF8")]
		public bool IsJumping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0x1CB3014", Offset = "0x1CB3014", VA = "0x1CB3014")]
		public bool IsSliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0x1CB3048", Offset = "0x1CB3048", VA = "0x1CB3048")]
		public bool IsTouchingCeiling()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x1CB3068", Offset = "0x1CB3068", VA = "0x1CB3068")]
		public bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x1CB284C", Offset = "0x1CB284C", VA = "0x1CB284C")]
		public bool TooSteep()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0x1CB3070", Offset = "0x1CB3070", VA = "0x1CB3070")]
		public Vector3 GetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x1CB307C", Offset = "0x1CB307C", VA = "0x1CB307C")]
		public void SetControllable(bool controllable)
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0x1CB2E30", Offset = "0x1CB2E30", VA = "0x1CB2E30")]
		public float MaxSpeedInDirection(Vector3 desiredMovementDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x1CB3088", Offset = "0x1CB3088", VA = "0x1CB3088")]
		public void SetVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x1CB3150", Offset = "0x1CB3150", VA = "0x1CB3150")]
		public PlayerMoverCharacterMotor()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	[RequireComponent(typeof(PlayerMoverCharacterMotor))]
	[AddComponentMenu("Dynamic Loading Kit/CharacterControl/Player Mover FPS Input Controller")]
	public class PlayerMoverFPSInputController : MonoBehaviour
	{
		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerMoverCharacterMotor motor;

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x1CB3B1C", Offset = "0x1CB3B1C", VA = "0x1CB3B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x1CB3B84", Offset = "0x1CB3B84", VA = "0x1CB3B84")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x1CB3D60", Offset = "0x1CB3D60", VA = "0x1CB3D60")]
		public PlayerMoverFPSInputController()
		{
		}
	}
	[Token(Token = "0x20006E5")]
	public class WorldGrid : WorldGridBase
	{
		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x1CB3D68", Offset = "0x1CB3D68", VA = "0x1CB3D68")]
		public WorldGrid()
		{
		}
	}
}
namespace TerrainSlicingKit
{
	[Token(Token = "0x20006E6")]
	[AddComponentMenu("Terrain Slicing Kit/Tileable Terrain Maker")]
	public class TileableTerrainMaker : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4002D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AlphamapBackupController backupAlphaMap;

		[Token(Token = "0x4002D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int effectedRegionWidth;

		[Token(Token = "0x4002D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int columns;

		[Token(Token = "0x4002D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rows;

		[Token(Token = "0x4002D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Terrain[] terrains;

		[Token(Token = "0x4002D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showFoldout;

		[Token(Token = "0x4002D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool onlyTileInner;

		[Token(Token = "0x4002D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool onlyTileOuter;

		[Token(Token = "0x4002D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool emptyLocations;

		[Token(Token = "0x4002D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool smoothEdges;

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x1CB3D70", Offset = "0x1CB3D70", VA = "0x1CB3D70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x1CB3DC8", Offset = "0x1CB3DC8", VA = "0x1CB3DC8")]
		public TileableTerrainMaker()
		{
		}
	}
}
namespace TerrainSlicingKit.PlayModeUtilities
{
	[Token(Token = "0x20006E7")]
	public class AlphamapBackupController
	{
		[Token(Token = "0x4002D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[,][,,] backupAlphaMap;

		[Token(Token = "0x4002D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TerrainData[,] terrainData;

		[Token(Token = "0x4002D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int rows;

		[Token(Token = "0x4002D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int columns;

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0x1CB3E44", Offset = "0x1CB3E44", VA = "0x1CB3E44")]
		public AlphamapBackupController(TerrainData[,] terrainToBackup)
		{
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x1CB3EAC", Offset = "0x1CB3EAC", VA = "0x1CB3EAC")]
		private void BackupAlphaMaps()
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x1CB41C8", Offset = "0x1CB41C8", VA = "0x1CB41C8")]
		public void RestoreAlphaMaps()
		{
		}
	}
}
namespace O3DWB
{
	[Token(Token = "0x20006E8")]
	public static class UniqueEntityNameGenerator
	{
		[Token(Token = "0x6002D57")]
		[Address(RVA = "0x1CB42DC", Offset = "0x1CB42DC", VA = "0x1CB42DC")]
		public static string GenerateUniqueName(string desiredEntityName, List<string> existingEntityNames)
		{
			return null;
		}
	}
	[Token(Token = "0x20006E9")]
	public static class ObjectHierarchySnap
	{
		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x1CB4390", Offset = "0x1CB4390", VA = "0x1CB4390")]
		public static void Snap(GameObject root, Vector3 pivotPoint, Vector3 destPoint)
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public enum Pivot
	{
		[Token(Token = "0x4002D66")]
		Center,
		[Token(Token = "0x4002D67")]
		BottomCenter
	}
}
namespace UnitySA.Characters.FirstPerson
{
	[Token(Token = "0x20006EB")]
	[RequireComponent(typeof(AudioSource))]
	[RequireComponent(typeof(CharacterController))]
	public class FPCtrl : MonoBehaviour
	{
		[Token(Token = "0x4002D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x4002D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x4002D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x4002D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Range(0f, 1f)]
		private float m_RunstepLenghten;

		[Token(Token = "0x4002D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MLook m_MouseLook;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x4002D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FOVZoom m_FovKick;

		[Token(Token = "0x4002D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x4002D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CurveCtrlBob m_HeadBob;

		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LerpCtrlBob m_JumpBob;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_Camera;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Jump;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_YRotation;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 m_Input;

		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_StepCycle;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NextStep;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_Jumping;

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x1CB440C", Offset = "0x1CB440C", VA = "0x1CB440C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0x1CB4648", Offset = "0x1CB4648", VA = "0x1CB4648")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0x1CB47F4", Offset = "0x1CB47F4", VA = "0x1CB47F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0x1CB4DF8", Offset = "0x1CB4DF8", VA = "0x1CB4DF8")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0x1CB4F2C", Offset = "0x1CB4F2C", VA = "0x1CB4F2C")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x1CB4BEC", Offset = "0x1CB4BEC", VA = "0x1CB4BEC")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0x1CB4730", Offset = "0x1CB4730", VA = "0x1CB4730")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x1CB56B0", Offset = "0x1CB56B0", VA = "0x1CB56B0")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x1CB57D4", Offset = "0x1CB57D4", VA = "0x1CB57D4")]
		public FPCtrl()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EC")]
	public class MLook
	{
		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4002D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4002D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4002D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4002D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4002D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4002D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4002D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4002D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4002D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4002D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x1CB45F8", Offset = "0x1CB45F8", VA = "0x1CB45F8")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0x1CB5354", Offset = "0x1CB5354", VA = "0x1CB5354")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x1CB5BE4", Offset = "0x1CB5BE4", VA = "0x1CB5BE4")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0x1CB516C", Offset = "0x1CB516C", VA = "0x1CB516C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0x1CB5C18", Offset = "0x1CB5C18", VA = "0x1CB5C18")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0x1CB5B80", Offset = "0x1CB5B80", VA = "0x1CB5B80")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0x1CB5C90", Offset = "0x1CB5C90", VA = "0x1CB5C90")]
		public MLook()
		{
		}
	}
}
namespace UnitySA.Utility
{
	[Serializable]
	[Token(Token = "0x20006ED")]
	public class CurveCtrlBob
	{
		[Token(Token = "0x4002D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x4002D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x4002D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4002D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4002D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4002D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4002D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4002D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4002D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0x1CB4558", Offset = "0x1CB4558", VA = "0x1CB4558")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x1CB517C", Offset = "0x1CB517C", VA = "0x1CB517C")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0x1CB592C", Offset = "0x1CB592C", VA = "0x1CB592C")]
		public CurveCtrlBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EE")]
	public class FOVZoom
	{
		[Token(Token = "0x20006EF")]
		[CompilerGenerated]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4002D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700063A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D75")]
				[Address(RVA = "0x1CB5F3C", Offset = "0x1CB5F3C", VA = "0x1CB5F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D77")]
				[Address(RVA = "0x1CB5F84", Offset = "0x1CB5F84", VA = "0x1CB5F84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D72")]
			[Address(RVA = "0x1CB5DB4", Offset = "0x1CB5DB4", VA = "0x1CB5DB4")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002D73")]
			[Address(RVA = "0x1CB5E04", Offset = "0x1CB5E04", VA = "0x1CB5E04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D74")]
			[Address(RVA = "0x1CB5E08", Offset = "0x1CB5E08", VA = "0x1CB5E08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D76")]
			[Address(RVA = "0x1CB5F44", Offset = "0x1CB5F44", VA = "0x1CB5F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F0")]
		[CompilerGenerated]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVZoom <>4__this;

			[Token(Token = "0x4002DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700063C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D7B")]
				[Address(RVA = "0x1CB60D8", Offset = "0x1CB60D8", VA = "0x1CB60D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D7D")]
				[Address(RVA = "0x1CB6120", Offset = "0x1CB6120", VA = "0x1CB6120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D78")]
			[Address(RVA = "0x1CB5DDC", Offset = "0x1CB5DDC", VA = "0x1CB5DDC")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D79")]
			[Address(RVA = "0x1CB5F8C", Offset = "0x1CB5F8C", VA = "0x1CB5F8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0x1CB5F90", Offset = "0x1CB5F90", VA = "0x1CB5F90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0x1CB60E0", Offset = "0x1CB60E0", VA = "0x1CB60E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0x1CB4510", Offset = "0x1CB4510", VA = "0x1CB4510")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x1CB5CC4", Offset = "0x1CB5CC4", VA = "0x1CB5CC4")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x1CB5DAC", Offset = "0x1CB5DAC", VA = "0x1CB5DAC")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x1CB52E0", Offset = "0x1CB52E0", VA = "0x1CB52E0")]
		[IteratorStateMachine(typeof(<FOVKickUp>d__9))]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0x1CB526C", Offset = "0x1CB526C", VA = "0x1CB526C")]
		[IteratorStateMachine(typeof(<FOVKickDown>d__10))]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0x1CB5910", Offset = "0x1CB5910", VA = "0x1CB5910")]
		public FOVZoom()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F1")]
	public class LerpCtrlBob
	{
		[Token(Token = "0x20006F2")]
		[CompilerGenerated]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpCtrlBob <>4__this;

			[Token(Token = "0x4002DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700063E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D84")]
				[Address(RVA = "0x1CB6310", Offset = "0x1CB6310", VA = "0x1CB6310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700063F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D86")]
				[Address(RVA = "0x1CB6358", Offset = "0x1CB6358", VA = "0x1CB6358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0x1CB6130", Offset = "0x1CB6130", VA = "0x1CB6130")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002D82")]
			[Address(RVA = "0x1CB6158", Offset = "0x1CB6158", VA = "0x1CB6158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0x1CB615C", Offset = "0x1CB615C", VA = "0x1CB615C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0x1CB6318", Offset = "0x1CB6318", VA = "0x1CB6318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4002DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0x1CB6128", Offset = "0x1CB6128", VA = "0x1CB6128")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x1CB4780", Offset = "0x1CB4780", VA = "0x1CB4780")]
		[IteratorStateMachine(typeof(<DoBobCycle>d__4))]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0x1CB5B78", Offset = "0x1CB5B78", VA = "0x1CB5B78")]
		public LerpCtrlBob()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Wrapper
{
	[Token(Token = "0x20006F3")]
	public class EasyDecal : ch.sycoforge.Decal.EasyDecal
	{
		[Token(Token = "0x6002D87")]
		[Address(RVA = "0x1CB6360", Offset = "0x1CB6360", VA = "0x1CB6360")]
		public EasyDecal()
		{
		}
	}
}
namespace ch.sycoforge.Decal.Demo
{
	[Token(Token = "0x20006F4")]
	public class AdvancedBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4002DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4002DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ImpactParticles;

		[Token(Token = "0x4002DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CastRadius;

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0x1CB63B8", Offset = "0x1CB63B8", VA = "0x1CB63B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0x1CB6494", Offset = "0x1CB6494", VA = "0x1CB6494")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0x1CB6904", Offset = "0x1CB6904", VA = "0x1CB6904")]
		public AdvancedBulletHoles()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class BasicBulletHoles : MonoBehaviour
	{
		[Token(Token = "0x4002DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4002DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool t;

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x1CB6914", Offset = "0x1CB6914", VA = "0x1CB6914")]
		public void Start()
		{
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0x1CB69C8", Offset = "0x1CB69C8", VA = "0x1CB69C8")]
		public void Update()
		{
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x1CB6BEC", Offset = "0x1CB6BEC", VA = "0x1CB6BEC")]
		public BasicBulletHoles()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public static class BezierUtil
	{
		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0x1CB6BF4", Offset = "0x1CB6BF4", VA = "0x1CB6BF4")]
		public static List<Vector3> InterpolatePath(List<Vector3> path, int segments, float radius, float angleThreshold)
		{
			return null;
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0x1CB7268", Offset = "0x1CB7268", VA = "0x1CB7268")]
		public static Vector3[] GetBezierApproximation(Vector3[] controlPoints, int outputSegmentCount)
		{
			return null;
		}

		[Token(Token = "0x6002D90")]
		[Address(RVA = "0x1CB7330", Offset = "0x1CB7330", VA = "0x1CB7330")]
		public static Vector3 GetBezierPoint(float t, Vector3[] controlPoints, int index, int count)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20006F7")]
	public class Footprints : MonoBehaviour
	{
		[Token(Token = "0x4002DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EasyDecal DecalPrefab;

		[Token(Token = "0x4002DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DistanceThreshold;

		[Token(Token = "0x4002DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FootDistance;

		[Token(Token = "0x4002DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distance;

		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int index;

		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0x1CB744C", Offset = "0x1CB744C", VA = "0x1CB744C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0x1CB7500", Offset = "0x1CB7500", VA = "0x1CB7500")]
		public void Update()
		{
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0x1CB79A4", Offset = "0x1CB79A4", VA = "0x1CB79A4")]
		public Footprints()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public static class LineUtil
	{
		[Token(Token = "0x6002D94")]
		[Address(RVA = "0x1CB79B8", Offset = "0x1CB79B8", VA = "0x1CB79B8")]
		public static void DrawPath(float thickness, Material material, List<Vector3> path)
		{
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0x1CB7B44", Offset = "0x1CB7B44", VA = "0x1CB7B44")]
		private static void DrawLine(float thickness, Vector3 start, Vector3 end)
		{
		}
	}
	[Token(Token = "0x20006F9")]
	[RequireComponent(typeof(NavMeshAgent))]
	[RequireComponent(typeof(LineRenderer))]
	public class PathAgent : MonoBehaviour
	{
		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float PathThickness;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Distance from the ground.")]
		public float NormalPathOffset;

		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0.001f, 0.5f)]
		[Tooltip("Max radius between segments.")]
		public float Radius;

		[Token(Token = "0x4002DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Discard segments when their angle is smaller than this value.")]
		public float AngleThreshold;

		[Token(Token = "0x4002DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DrawGizmos;

		[Token(Token = "0x4002DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EasyDecal TargetAimDecal;

		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject TargetPointDecalPrefab;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> path;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent agent;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 decalOffset;

		[Token(Token = "0x4002DC1")]
		private const int MAXDISTANCE = 50;

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0x1CB7E34", Offset = "0x1CB7E34", VA = "0x1CB7E34")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0x1CB7EE0", Offset = "0x1CB7EE0", VA = "0x1CB7EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0x1CB83D4", Offset = "0x1CB83D4", VA = "0x1CB83D4")]
		private void SetTarget(Ray mouseRay)
		{
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0x1CB7F74", Offset = "0x1CB7F74", VA = "0x1CB7F74")]
		private void CreatePath(Ray mouseRay)
		{
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0x1CB8580", Offset = "0x1CB8580", VA = "0x1CB8580")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0x1CB8700", Offset = "0x1CB8700", VA = "0x1CB8700")]
		public PathAgent()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class ProxyRegister : MonoBehaviour
	{
		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StaticProxyCollection ProxyCollection;

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0x1CB87EC", Offset = "0x1CB87EC", VA = "0x1CB87EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0x1CB8880", Offset = "0x1CB8880", VA = "0x1CB8880")]
		public ProxyRegister()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class Sinoid : MonoBehaviour
	{
		[Token(Token = "0x4002DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngularVelocity;

		[Token(Token = "0x4002DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SineFreq;

		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Amplitude;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accuTime;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0x1CB8888", Offset = "0x1CB8888", VA = "0x1CB8888")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0x1CB88B8", Offset = "0x1CB88B8", VA = "0x1CB88B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0x1CB8A54", Offset = "0x1CB8A54", VA = "0x1CB8A54")]
		public Sinoid()
		{
		}
	}
}
namespace MantisLOD
{
	[Token(Token = "0x20006FC")]
	internal class Class0 : IComparable
	{
		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int int_0;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class1 class1_0;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int int_1;

		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Class2 class2_0;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Class0 class0_0;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float float_0;

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0x1CB8A70", Offset = "0x1CB8A70", VA = "0x1CB8A70")]
		public Class0()
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0x1CB8A90", Offset = "0x1CB8A90", VA = "0x1CB8A90", Slot = "4")]
		public int CompareTo(object object_0)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20006FD")]
	internal class Class1
	{
		[Token(Token = "0x4002DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4002DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool bool_1;

		[Token(Token = "0x4002DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool bool_2;

		[Token(Token = "0x4002DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 vector3_0;

		[Token(Token = "0x4002DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Class0> list_0;

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x1CB8B14", Offset = "0x1CB8B14", VA = "0x1CB8B14")]
		public Class1()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	internal class Class2
	{
		[Token(Token = "0x4002DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4002DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int int_0;

		[Token(Token = "0x4002DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class0 class0_0;

		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 vector3_0;

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0x1CB8BAC", Offset = "0x1CB8BAC", VA = "0x1CB8BAC")]
		public Class2()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	internal class Class3
	{
		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Class0 class0_0;

		[Token(Token = "0x4002DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int int_0;

		[Token(Token = "0x4002DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int int_1;

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0x1CB8BCC", Offset = "0x1CB8BCC", VA = "0x1CB8BCC")]
		public Class3()
		{
		}
	}
	[Token(Token = "0x2000700")]
	internal class Class4
	{
		[Token(Token = "0x4002DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool bool_0;

		[Token(Token = "0x4002DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Class1 class1_0;

		[Token(Token = "0x4002DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Class1 class1_1;

		[Token(Token = "0x4002DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Class2> list_0;

		[Token(Token = "0x4002DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Class3> list_1;

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0x1CB8BD4", Offset = "0x1CB8BD4", VA = "0x1CB8BD4")]
		public Class4()
		{
		}
	}
	[Token(Token = "0x2000701")]
	internal abstract class Class5
	{
		[Token(Token = "0x4002DE0")]
		private const int int_0 = 1;

		[Token(Token = "0x4002DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Class0> list_0;

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0x1CB8CB8", Offset = "0x1CB8CB8", VA = "0x1CB8CB8")]
		public Class5()
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0x1CB8DF4", Offset = "0x1CB8DF4", VA = "0x1CB8DF4")]
		public Class5(int int_1)
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0x1CB8F44", Offset = "0x1CB8F44", VA = "0x1CB8F44")]
		public void method_0(Class0 class0_0)
		{
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0x1CB91B8", Offset = "0x1CB91B8", VA = "0x1CB91B8")]
		public Class0 method_1()
		{
			return null;
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0x1CB94D8", Offset = "0x1CB94D8", VA = "0x1CB94D8")]
		public bool method_2(int int_1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0x1CB95FC", Offset = "0x1CB95FC", VA = "0x1CB95FC")]
		public int method_3()
		{
			return default(int);
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0x1CB9648", Offset = "0x1CB9648", VA = "0x1CB9648")]
		public Class0 method_4()
		{
			return null;
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0x1CB9014", Offset = "0x1CB9014", VA = "0x1CB9014")]
		private int method_5()
		{
			return default(int);
		}

		[Token(Token = "0x6002DAF")]
		protected abstract bool vmethod_0(Class0 class0_0, Class0 class0_1);

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0x1CB9060", Offset = "0x1CB9060", VA = "0x1CB9060")]
		private void method_6(int int_1)
		{
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0x1CB9300", Offset = "0x1CB9300", VA = "0x1CB9300")]
		private void method_7(int int_1)
		{
		}
	}
	[Token(Token = "0x2000702")]
	internal class Class6 : Class5
	{
		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0x1CB96B8", Offset = "0x1CB96B8", VA = "0x1CB96B8")]
		public Class6()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0x1CB96BC", Offset = "0x1CB96BC", VA = "0x1CB96BC")]
		public Class6(int int_1)
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0x1CB96C0", Offset = "0x1CB96C0", VA = "0x1CB96C0", Slot = "4")]
		protected override bool vmethod_0(Class0 class0_0, Class0 class0_1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000703")]
	internal class Class7 : IEqualityComparer<Vector3>
	{
		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0x1CB96E0", Offset = "0x1CB96E0", VA = "0x1CB96E0", Slot = "4")]
		public bool Equals(Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0x1CB9738", Offset = "0x1CB9738", VA = "0x1CB9738", Slot = "5")]
		public int GetHashCode(Vector3 vector3_0)
		{
			return default(int);
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0x1CB979C", Offset = "0x1CB979C", VA = "0x1CB979C")]
		public Class7()
		{
		}
	}
	[Token(Token = "0x2000704")]
	internal class Class8
	{
		[Token(Token = "0x4002DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Class1> list_0;

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Class2> list_1;

		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Class0> list_2;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Class4> list_3;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Vector3> list_4;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector4> list_5;

		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector2> list_6;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int int_0;

		[Token(Token = "0x4002DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Class6 class6_0;

		[Token(Token = "0x4002DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 vector3_0;

		[Token(Token = "0x4002DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 vector3_1;

		[Token(Token = "0x4002DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float float_0;

		[Token(Token = "0x4002DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int int_1;

		[Token(Token = "0x4002DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int int_2;

		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool bool_0;

		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool bool_1;

		[Token(Token = "0x4002DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool bool_2;

		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool bool_3;

		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool bool_4;

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0x1CB97A4", Offset = "0x1CB97A4", VA = "0x1CB97A4")]
		public Class8()
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0x1CB9A58", Offset = "0x1CB9A58", VA = "0x1CB9A58")]
		public int method_0()
		{
			return default(int);
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0x1CB9AA0", Offset = "0x1CB9AA0", VA = "0x1CB9AA0")]
		public void method_1(Vector3[] vector3_2, int int_3, int[] int_4, int int_5, Vector3[] vector3_3, int int_6, Color[] color_0, int int_7, Vector2[] vector2_0, int int_8, int int_9, int int_10, int int_11, int int_12, int int_13)
		{
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0x1CBADD4", Offset = "0x1CBADD4", VA = "0x1CBADD4")]
		public void method_2(int int_3, int[] int_4, ref int int_5)
		{
		}

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0x1CB9C10", Offset = "0x1CB9C10", VA = "0x1CB9C10")]
		private void method_3(Vector3[] vector3_2, int int_3, int[] int_4, int int_5, Vector3[] vector3_3, int int_6, Color[] color_0, int int_7, Vector2[] vector2_0, int int_8)
		{
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0x1CBB4E8", Offset = "0x1CBB4E8", VA = "0x1CBB4E8")]
		private void method_4(Class2 class2_0)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x1CBB65C", Offset = "0x1CBB65C", VA = "0x1CBB65C")]
		private void method_5()
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0x1CBB798", Offset = "0x1CBB798", VA = "0x1CBB798")]
		private bool method_6(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0x1CBBA0C", Offset = "0x1CBBA0C", VA = "0x1CBBA0C")]
		private void method_7()
		{
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0x1CBBBB0", Offset = "0x1CBBBB0", VA = "0x1CBBBB0")]
		private bool method_8(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0x1CBC294", Offset = "0x1CBC294", VA = "0x1CBC294")]
		private void method_9()
		{
		}

		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0x1CBC42C", Offset = "0x1CBC42C", VA = "0x1CBC42C")]
		private float method_10(Class0 class0_0)
		{
			return default(float);
		}

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0x1CBA83C", Offset = "0x1CBA83C", VA = "0x1CBA83C")]
		private void method_11()
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0x1CBDB38", Offset = "0x1CBDB38", VA = "0x1CBDB38")]
		private bool method_12(Class0 class0_0)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0x1CBA9BC", Offset = "0x1CBA9BC", VA = "0x1CBA9BC")]
		private void method_13()
		{
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0x1CBAA40", Offset = "0x1CBAA40", VA = "0x1CBAA40")]
		private int method_14(int int_3)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000705")]
	public static class MantisLODSimpler
	{
		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Class8> list_0;

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0x1CBEEB0", Offset = "0x1CBEEB0", VA = "0x1CBEEB0")]
		public static int get_triangle_list(int index, float goal, int[] triangle_array, ref int triangle_count)
		{
			return default(int);
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0x1CBF020", Offset = "0x1CBF020", VA = "0x1CBF020")]
		public static int create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape)
		{
			return default(int);
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0x1CBF2F0", Offset = "0x1CBF2F0", VA = "0x1CBF2F0")]
		public static int delete_progressive_mesh(int index)
		{
			return default(int);
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x2000706")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x4002DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4002DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4002DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x4002DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x4002DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x4002DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0x1CBF49C", Offset = "0x1CBF49C", VA = "0x1CBF49C")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000707")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x4002DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x4002DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] uuids;

		[Token(Token = "0x4002DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Collections.Hashtable lod_meshes;

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0x1CBF4D0", Offset = "0x1CBF4D0", VA = "0x1CBF4D0")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public class Lod_Mesh
	{
		[Token(Token = "0x4002DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4002E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle_count;

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0x1CBF4D8", Offset = "0x1CBF4D8", VA = "0x1CBF4D8")]
		public Lod_Mesh()
		{
		}
	}
	[Token(Token = "0x2000709")]
	public class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4002E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4002E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4002E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4002E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x4002E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int[] mesh_lod_range;

		[Token(Token = "0x4002E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool never_cull;

		[Token(Token = "0x4002E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int lod_strategy;

		[Token(Token = "0x4002E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float cull_ratio;

		[Token(Token = "0x4002E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float disappear_distance;

		[Token(Token = "0x4002E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float updateInterval;

		[Token(Token = "0x4002E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Component[] allFilters;

		[Token(Token = "0x4002E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Component[] allRenderers;

		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] shared_meshes;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string[] mesh_uuids;

		[Token(Token = "0x4002E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int current_lod;

		[Token(Token = "0x4002E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4002E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float currentTimeToInterval;

		[Token(Token = "0x4002E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool culled;

		[Token(Token = "0x4002E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool working;

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0x1CBF4E0", Offset = "0x1CBF4E0", VA = "0x1CBF4E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x1CBFF8C", Offset = "0x1CBFF8C", VA = "0x1CBFF8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x1CBFF90", Offset = "0x1CBFF90", VA = "0x1CBFF90")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x1CC0384", Offset = "0x1CC0384", VA = "0x1CC0384")]
		private float ratio_of_distance(float distance0)
		{
			return default(float);
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x1CC0748", Offset = "0x1CC0748", VA = "0x1CC0748")]
		private void Update()
		{
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0x1CC12F4", Offset = "0x1CC12F4", VA = "0x1CC12F4")]
		public int get_triangles_count_from_progressive_mesh(int lod0, int mesh_count0)
		{
			return default(int);
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0x1CC13EC", Offset = "0x1CC13EC", VA = "0x1CC13EC")]
		private int[] get_triangles_from_progressive_mesh(int lod0, int mesh_count0, int mat0)
		{
			return null;
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0x1CC1560", Offset = "0x1CC1560", VA = "0x1CC1560")]
		private void set_triangles(Mesh mesh, string uuid, int lod)
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0x1CC1638", Offset = "0x1CC1638", VA = "0x1CC1638")]
		private void shrink_mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0x1CC278C", Offset = "0x1CC278C", VA = "0x1CC278C")]
		private string get_uuid_from_mesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0x1CC2A0C", Offset = "0x1CC2A0C", VA = "0x1CC2A0C")]
		private void create_default_mesh_lod_range()
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0x1CBF4E4", Offset = "0x1CBF4E4", VA = "0x1CBF4E4")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x1CC2AF8", Offset = "0x1CC2AF8", VA = "0x1CC2AF8")]
		public void reset_all_parameters()
		{
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x1CC2B38", Offset = "0x1CC2B38", VA = "0x1CC2B38")]
		private void clean_all()
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x1CC2D38", Offset = "0x1CC2D38", VA = "0x1CC2D38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x1CC2D3C", Offset = "0x1CC2D3C", VA = "0x1CC2D3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0x1CC2D40", Offset = "0x1CC2D40", VA = "0x1CC2D40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0x1CC2D44", Offset = "0x1CC2D44", VA = "0x1CC2D44")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace ECE
{
	[Token(Token = "0x200070A")]
	public class EasyColliderCreator
	{
		[Token(Token = "0x200070B")]
		private struct BestFitSphere
		{
			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Center;

			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Radius;

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0x1CC3490", Offset = "0x1CC3490", VA = "0x1CC3490")]
			public BestFitSphere(Vector3 center, float radius)
			{
			}
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0x1CC2D74", Offset = "0x1CC2D74", VA = "0x1CC2D74")]
		private BestFitSphere CalculateBestFitSphere(List<Vector3> localVertices)
		{
			return default(BestFitSphere);
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x1CC349C", Offset = "0x1CC349C", VA = "0x1CC349C")]
		public BoxColliderData CalculateBox(List<Vector3> worldVertices, Transform attachTo, bool isRotated = false)
		{
			return null;
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x1CC3AF0", Offset = "0x1CC3AF0", VA = "0x1CC3AF0")]
		public BoxColliderData CalculateBoxLocal(List<Vector3> vertices)
		{
			return null;
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0x1CC3D08", Offset = "0x1CC3D08", VA = "0x1CC3D08")]
		public CapsuleColliderData CalculateCapsuleBestFit(List<Vector3> worldVertices, Transform attachTo, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0x1CC40FC", Offset = "0x1CC40FC", VA = "0x1CC40FC")]
		public CapsuleColliderData CalculateCapsuleBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x1CC43A0", Offset = "0x1CC43A0", VA = "0x1CC43A0")]
		public CapsuleColliderData CalculateCapsuleMinMax(List<Vector3> worldVertices, Transform attachTo, CAPSULE_COLLIDER_METHOD method, bool isRotated)
		{
			return null;
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x1CC47AC", Offset = "0x1CC47AC", VA = "0x1CC47AC")]
		public CapsuleColliderData CalculateCapsuleMinMaxLocal(List<Vector3> localVertices, CAPSULE_COLLIDER_METHOD method)
		{
			return null;
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x1CC4B88", Offset = "0x1CC4B88", VA = "0x1CC4B88")]
		public MeshColliderData CalculateCylinderCollider(List<Vector3> worldVertices, Transform attachTo, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x1CC534C", Offset = "0x1CC534C", VA = "0x1CC534C")]
		public MeshColliderData CalculateCylinderColliderLocal(List<Vector3> vertices, int numberOfSides = 12, CYLINDER_ORIENTATION orientation = CYLINDER_ORIENTATION.Automatic, float cylinderOffset = 0f)
		{
			return null;
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x1CC5458", Offset = "0x1CC5458", VA = "0x1CC5458")]
		public MeshColliderData CalculateMeshColliderQuickHullLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0x1CC5524", Offset = "0x1CC5524", VA = "0x1CC5524")]
		public SphereColliderData CalculateSphereBestFit(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0x1CC5618", Offset = "0x1CC5618", VA = "0x1CC5618")]
		public SphereColliderData CalculateSphereBestFitLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0x1CC56B8", Offset = "0x1CC56B8", VA = "0x1CC56B8")]
		public SphereColliderData CalculateSphereDistance(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0x1CC57A4", Offset = "0x1CC57A4", VA = "0x1CC57A4")]
		public SphereColliderData CalculateSphereDistanceLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0x1CC5E00", Offset = "0x1CC5E00", VA = "0x1CC5E00")]
		public SphereColliderData CalculateSphereMinMax(List<Vector3> worldVertices, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0x1CC5EEC", Offset = "0x1CC5EEC", VA = "0x1CC5EEC")]
		public SphereColliderData CalculateSphereMinMaxLocal(List<Vector3> localVertices)
		{
			return null;
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0x1CC62A8", Offset = "0x1CC62A8", VA = "0x1CC62A8")]
		private BoxCollider CreateBoxCollider(BoxColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0x1CC63FC", Offset = "0x1CC63FC", VA = "0x1CC63FC")]
		public BoxCollider CreateBoxCollider(List<Vector3> vertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0x1CC67E4", Offset = "0x1CC67E4", VA = "0x1CC67E4")]
		private CapsuleCollider CreateCapsuleCollider(CapsuleColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0x1CC68AC", Offset = "0x1CC68AC", VA = "0x1CC68AC")]
		public CapsuleCollider CreateCapsuleCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0x1CC6A24", Offset = "0x1CC6A24", VA = "0x1CC6A24")]
		public CapsuleCollider CreateCapsuleCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, CAPSULE_COLLIDER_METHOD method, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0x1CC6BB8", Offset = "0x1CC6BB8", VA = "0x1CC6BB8")]
		public MeshCollider CreateConvexMeshCollider(Mesh mesh, GameObject attachToObject, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0x1CC6C60", Offset = "0x1CC6C60", VA = "0x1CC6C60")]
		private SphereCollider CreateSphereCollider(SphereColliderData data, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0x1CC6D08", Offset = "0x1CC6D08", VA = "0x1CC6D08")]
		public SphereCollider CreateSphereCollider_BestFit(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x1CC6DA8", Offset = "0x1CC6DA8", VA = "0x1CC6DA8")]
		public SphereCollider CreateSphereCollider_Distance(List<Vector3> worldVertices, EasyColliderProperties properties)
		{
			return null;
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x1CC6E48", Offset = "0x1CC6E48", VA = "0x1CC6E48")]
		public SphereCollider CreateSphereCollider_MinMax(List<Vector3> worldVertices, EasyColliderProperties properties, bool isLocal = false)
		{
			return null;
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x1CC4CE8", Offset = "0x1CC4CE8", VA = "0x1CC4CE8")]
		public List<Vector3> CalculateCylinderPointsLocal(List<Vector3> vertices, Transform attachTo, int numberOfSides, CYLINDER_ORIENTATION orientation, float cylinderOffset)
		{
			return null;
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0x1CC65C0", Offset = "0x1CC65C0", VA = "0x1CC65C0")]
		private GameObject CreateGameObjectOrientation(List<Vector3> worldVertices, GameObject parent, string name)
		{
			return null;
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0x1CC6F08", Offset = "0x1CC6F08", VA = "0x1CC6F08")]
		private void DebugDrawPoint(Vector3 worldLoc, Color color)
		{
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0x1CC6354", Offset = "0x1CC6354", VA = "0x1CC6354")]
		private void SetPropertiesOnCollider(Collider collider, EasyColliderProperties properties)
		{
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0x1CC38B4", Offset = "0x1CC38B4", VA = "0x1CC38B4")]
		private List<Vector3> ToLocalVerts(Transform transform, List<Vector3> worldVertices)
		{
			return null;
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0x1CC714C", Offset = "0x1CC714C", VA = "0x1CC714C")]
		public EasyColliderCreator()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class EasyColliderData
	{
		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CREATE_COLLIDER_TYPE ColliderType;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsValid;

		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 Matrix;

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0x1CC7154", Offset = "0x1CC7154", VA = "0x1CC7154")]
		public void Clone(EasyColliderData data)
		{
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0x1CC7198", Offset = "0x1CC7198", VA = "0x1CC7198")]
		public EasyColliderData()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public class SphereColliderData : EasyColliderData
	{
		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Radius;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 Center;

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0x1CC71A0", Offset = "0x1CC71A0", VA = "0x1CC71A0")]
		public void Clone(SphereColliderData data)
		{
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0x1CC5610", Offset = "0x1CC5610", VA = "0x1CC5610")]
		public SphereColliderData()
		{
		}
	}
	[Token(Token = "0x200070E")]
	public class CapsuleColliderData : SphereColliderData
	{
		[Token(Token = "0x4002E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int Direction;

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Height;

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0x1CC71FC", Offset = "0x1CC71FC", VA = "0x1CC71FC")]
		public void Clone(CapsuleColliderData data)
		{
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0x1CC4398", Offset = "0x1CC4398", VA = "0x1CC4398")]
		public CapsuleColliderData()
		{
		}
	}
	[Token(Token = "0x200070F")]
	public class BoxColliderData : EasyColliderData
	{
		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 Center;

		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 Size;

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0x1CC7260", Offset = "0x1CC7260", VA = "0x1CC7260")]
		public void Clone(BoxColliderData data)
		{
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0x1CC38AC", Offset = "0x1CC38AC", VA = "0x1CC38AC")]
		public BoxColliderData()
		{
		}
	}
	[Token(Token = "0x2000710")]
	public class MeshColliderData : EasyColliderData
	{
		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh ConvexMesh;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x1CC72E4", Offset = "0x1CC72E4", VA = "0x1CC72E4")]
		public void Clone(MeshColliderData data)
		{
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x1CC4CE0", Offset = "0x1CC4CE0", VA = "0x1CC4CE0")]
		public MeshColliderData()
		{
		}
	}
	[Token(Token = "0x2000711")]
	public enum NORMAL_OFFSET
	{
		[Token(Token = "0x4002E21")]
		Out,
		[Token(Token = "0x4002E22")]
		In,
		[Token(Token = "0x4002E23")]
		Both
	}
	[Token(Token = "0x2000712")]
	public enum CAPSULE_COLLIDER_METHOD
	{
		[Token(Token = "0x4002E25")]
		BestFit,
		[Token(Token = "0x4002E26")]
		MinMax,
		[Token(Token = "0x4002E27")]
		MinMaxPlusRadius,
		[Token(Token = "0x4002E28")]
		MinMaxPlusDiameter
	}
	[Token(Token = "0x2000713")]
	public enum CREATE_COLLIDER_TYPE
	{
		[Token(Token = "0x4002E2A")]
		BOX,
		[Token(Token = "0x4002E2B")]
		ROTATED_BOX,
		[Token(Token = "0x4002E2C")]
		SPHERE,
		[Token(Token = "0x4002E2D")]
		CAPSULE,
		[Token(Token = "0x4002E2E")]
		ROTATED_CAPSULE,
		[Token(Token = "0x4002E2F")]
		CONVEX_MESH,
		[Token(Token = "0x4002E30")]
		CYLINDER
	}
	[Token(Token = "0x2000714")]
	public enum COLLIDER_ORIENTATION
	{
		[Token(Token = "0x4002E32")]
		NORMAL,
		[Token(Token = "0x4002E33")]
		ROTATED
	}
	[Token(Token = "0x2000715")]
	public enum CYLINDER_ORIENTATION
	{
		[Token(Token = "0x4002E35")]
		Automatic,
		[Token(Token = "0x4002E36")]
		LocalX,
		[Token(Token = "0x4002E37")]
		LocalY,
		[Token(Token = "0x4002E38")]
		LocalZ
	}
	[Token(Token = "0x2000716")]
	public enum GIZMO_TYPE
	{
		[Token(Token = "0x4002E3A")]
		CUBE,
		[Token(Token = "0x4002E3B")]
		SPHERE
	}
	[Token(Token = "0x2000717")]
	public enum RENDER_POINT_TYPE
	{
		[Token(Token = "0x4002E3D")]
		SHADER,
		[Token(Token = "0x4002E3E")]
		GIZMOS
	}
	[Token(Token = "0x2000718")]
	public enum SKINNED_MESH_COLLIDER_TYPE
	{
		[Token(Token = "0x4002E40")]
		Box,
		[Token(Token = "0x4002E41")]
		Capsule,
		[Token(Token = "0x4002E42")]
		Sphere,
		[Token(Token = "0x4002E43")]
		Convex_Mesh
	}
	[Token(Token = "0x2000719")]
	public enum SKINNED_MESH_DEPENETRATE_ORDER
	{
		[Token(Token = "0x4002E45")]
		InOrder,
		[Token(Token = "0x4002E46")]
		Reverse,
		[Token(Token = "0x4002E47")]
		InsideOut,
		[Token(Token = "0x4002E48")]
		OutsideIn
	}
	[Token(Token = "0x200071A")]
	public enum SPHERE_COLLIDER_METHOD
	{
		[Token(Token = "0x4002E4A")]
		BestFit,
		[Token(Token = "0x4002E4B")]
		Distance,
		[Token(Token = "0x4002E4C")]
		MinMax
	}
	[Token(Token = "0x200071B")]
	public enum VHACD_CONVERSION
	{
		[Token(Token = "0x4002E4E")]
		None,
		[Token(Token = "0x4002E4F")]
		Boxes,
		[Token(Token = "0x4002E50")]
		Spheres,
		[Token(Token = "0x4002E51")]
		Capsules
	}
	[Token(Token = "0x200071C")]
	public enum MESH_COLLIDER_METHOD
	{
		[Token(Token = "0x4002E53")]
		QuickHull,
		[Token(Token = "0x4002E54")]
		MessyHull
	}
	[Token(Token = "0x200071D")]
	public enum VERTEX_SNAP_METHOD
	{
		[Token(Token = "0x4002E56")]
		Add,
		[Token(Token = "0x4002E57")]
		Remove,
		[Token(Token = "0x4002E58")]
		Both
	}
	[Token(Token = "0x200071E")]
	public enum VHACD_RESULT_METHOD
	{
		[Token(Token = "0x4002E5A")]
		AttachTo,
		[Token(Token = "0x4002E5B")]
		ChildObject,
		[Token(Token = "0x4002E5C")]
		IndividualChildObjects
	}
	[Token(Token = "0x200071F")]
	public enum ECE_WINDOW_TAB
	{
		[Token(Token = "0x4002E5E")]
		None = -1,
		[Token(Token = "0x4002E5F")]
		Creation,
		[Token(Token = "0x4002E60")]
		Editing,
		[Token(Token = "0x4002E61")]
		VHACD,
		[Token(Token = "0x4002E62")]
		AutoSkinned
	}
	[Token(Token = "0x2000720")]
	public enum COLLIDER_HOLDER
	{
		[Token(Token = "0x4002E64")]
		Default,
		[Token(Token = "0x4002E65")]
		Once,
		[Token(Token = "0x4002E66")]
		Always
	}
	[Token(Token = "0x2000721")]
	public struct EasyColliderProperties
	{
		[Token(Token = "0x4002E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsTrigger;

		[Token(Token = "0x4002E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Layer;

		[Token(Token = "0x4002E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public COLLIDER_ORIENTATION Orientation;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject AttachTo;

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x1CC7330", Offset = "0x1CC7330", VA = "0x1CC7330")]
		public EasyColliderProperties(bool isTrigger, int layer, PhysicMaterial physicMaterial, GameObject attachTo, COLLIDER_ORIENTATION orientation = COLLIDER_ORIENTATION.NORMAL)
		{
		}
	}
	[Token(Token = "0x2000722")]
	public class EasyColliderQuickHull
	{
		[Token(Token = "0x2000723")]
		private class Face
		{
			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int F0;

			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int F1;

			[Token(Token = "0x4002E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int F2;

			[Token(Token = "0x4002E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Normal;

			[Token(Token = "0x4002E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool OnConvexHull;

			[Token(Token = "0x4002E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> OutsideVertices;

			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int V0;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int V1;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int V2;

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0x1CCC934", Offset = "0x1CCC934", VA = "0x1CCC934")]
			public Face(int v0, int v1, int v2, Vector3 normal, int f0, int f1, int f2)
			{
			}
		}

		[Token(Token = "0x2000724")]
		private class Horizon
		{
			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Face;

			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int From;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool OnConvexHull;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int V0;

			[Token(Token = "0x4002E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int V1;

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0x1CC9B08", Offset = "0x1CC9B08", VA = "0x1CC9B08")]
			public Horizon(int v0, int v1, int face, int from)
			{
			}
		}

		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DebugHorizon;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color DebugHorizonColor;

		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int DebugLoopNumber;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DebugMaxLoopNumber;

		[Token(Token = "0x4002E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DebugNewFaces;

		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool DebugNormals;

		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool DebugOutsideSet;

		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color DebugNormalColor;

		[Token(Token = "0x4002E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DrawTime;

		[Token(Token = "0x4002E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<int> AssignedVertices;

		[Token(Token = "0x4002E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<int> ClosedVertices;

		[Token(Token = "0x4002E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Horizon> CurrentHorizon;

		[Token(Token = "0x4002E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float Epsilon;

		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Face> Faces;

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<int> NewFaces;

		[Token(Token = "0x4002E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Mesh Result;

		[Token(Token = "0x4002E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<int> UnAssignedVertices;

		[Token(Token = "0x4002E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> VerticesList;

		[Token(Token = "0x17000640")]
		public bool isFinished
		{
			[Token(Token = "0x6002E21")]
			[Address(RVA = "0x1CCCA48", Offset = "0x1CCCA48", VA = "0x1CCCA48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x1CC52E4", Offset = "0x1CC52E4", VA = "0x1CC52E4")]
		public static EasyColliderQuickHull CalculateHull(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0x1CC7D50", Offset = "0x1CC7D50", VA = "0x1CC7D50")]
		public static EasyColliderQuickHull CalculateHullWorld(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x1CC7FA4", Offset = "0x1CC7FA4", VA = "0x1CC7FA4")]
		public static MeshColliderData CalculateHullData(List<Vector3> points, Transform attachTo)
		{
			return null;
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x1CC80B8", Offset = "0x1CC80B8", VA = "0x1CC80B8")]
		public static MeshColliderData CalculateHullData(List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x1CC814C", Offset = "0x1CC814C", VA = "0x1CC814C")]
		private void AddToOutsideSet(Face face, HashSet<int> vertices)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x1CC85CC", Offset = "0x1CC85CC", VA = "0x1CC85CC")]
		private bool AreVertsCoincident(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x1CC8600", Offset = "0x1CC8600", VA = "0x1CC8600")]
		private bool AreVertsCoincident(int a, int b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0x1CC8718", Offset = "0x1CC8718", VA = "0x1CC8718")]
		private void CloseUnAssignedVertsOnFaces()
		{
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x1CC84F0", Offset = "0x1CC84F0", VA = "0x1CC84F0")]
		private bool IsVertOnFace(int i, Face face)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x1CC8C30", Offset = "0x1CC8C30", VA = "0x1CC8C30")]
		private Vector3 CalcNormal(Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0x1CC8D48", Offset = "0x1CC8D48", VA = "0x1CC8D48")]
		private Vector3 CalcNormal(int a, int b, int c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x1CC8A90", Offset = "0x1CC8A90", VA = "0x1CC8A90")]
		private float CalcTriangleArea(int v0, int v1, int v2)
		{
			return default(float);
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0x1CC8F24", Offset = "0x1CC8F24", VA = "0x1CC8F24")]
		private void CalculateHorizon(int eyePoint, Horizon crossedEdge, int currFace, bool firstFace = true)
		{
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0x1CC9B50", Offset = "0x1CC9B50", VA = "0x1CC9B50")]
		private Mesh CreateMesh(List<Face> allFaces)
		{
			return null;
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x1CCA608", Offset = "0x1CCA608", VA = "0x1CCA608")]
		private float DistanceFromLine(Vector3 point, Vector3 line, Vector3 pointOnLine)
		{
			return default(float);
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0x1CCA6D4", Offset = "0x1CCA6D4", VA = "0x1CCA6D4")]
		private float DistanceFromPlane(Vector3 point, Plane p)
		{
			return default(float);
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0x1CC84B0", Offset = "0x1CC84B0", VA = "0x1CC84B0")]
		private float DistanceFromPlane(Vector3 point, Vector3 normal, Vector3 pointOnPlane)
		{
			return default(float);
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0x1CCA6FC", Offset = "0x1CCA6FC", VA = "0x1CCA6FC")]
		private bool FindInitialHull(List<Vector3> points)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0x1CCBBCC", Offset = "0x1CCBBCC", VA = "0x1CCBBCC")]
		private bool FindInitialPointsFallBack(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0x1CCB508", Offset = "0x1CCB508", VA = "0x1CCB508")]
		private bool FindInitialPoints(List<Vector3> points, out List<int> initialPoints)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0x1CCCAA8", Offset = "0x1CCCAA8", VA = "0x1CCCAA8")]
		private void CalculateEpsilon(List<Vector3> points)
		{
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0x1CC75D4", Offset = "0x1CC75D4", VA = "0x1CC75D4")]
		public void GenerateHull(List<Vector3> points)
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0x1CCCD68", Offset = "0x1CCCD68", VA = "0x1CCCD68")]
		private int GetFurthestPointFromFace(int faceIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0x1CCCCBC", Offset = "0x1CCCCBC", VA = "0x1CCCCBC")]
		private int GetNonEmptyFaceIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0x1CCD0CC", Offset = "0x1CCD0CC", VA = "0x1CCD0CC")]
		private bool HaveNonEmptyFaceSet()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0x1CCC920", Offset = "0x1CCC920", VA = "0x1CCC920")]
		private bool isAGreaterThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0x1CCCA34", Offset = "0x1CCCA34", VA = "0x1CCCA34")]
		private bool isALessThanB(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0x1CC8C1C", Offset = "0x1CC8C1C", VA = "0x1CC8C1C")]
		private bool isApproxEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0x1CC84DC", Offset = "0x1CC84DC", VA = "0x1CC84DC")]
		private bool IsApproxZero(float a)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0x1CCCFA8", Offset = "0x1CCCFA8", VA = "0x1CCCFA8")]
		private void UpdateFace(Horizon horizon, int newFace)
		{
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0x1CCD258", Offset = "0x1CCD258", VA = "0x1CCD258")]
		private Vector3 CalcFaceCenter(Face face)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0x1CCD324", Offset = "0x1CCD324", VA = "0x1CCD324")]
		private void DebugInitialPoints(List<Vector3> points, List<int> initialPoints)
		{
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0x1CCD538", Offset = "0x1CCD538", VA = "0x1CCD538")]
		private void DrawFace(int face, Color color, float size = 0.08f)
		{
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0x1CCD898", Offset = "0x1CCD898", VA = "0x1CCD898")]
		private void DrawFaceConnections(int face)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0x1CCD9D4", Offset = "0x1CCD9D4", VA = "0x1CCD9D4")]
		private void DrawFaceNormal(Face face, Color color, float distance = 1f)
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0x1CCDADC", Offset = "0x1CCDADC", VA = "0x1CCDADC")]
		private void ForceUpdateFace(int faceIndex)
		{
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0x1CCDC80", Offset = "0x1CCDC80", VA = "0x1CCDC80")]
		private Color RandomColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x1CCD668", Offset = "0x1CCD668", VA = "0x1CCD668")]
		private void DrawPoint(Vector3 point, Color color, float size = 0.05f)
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x1CC737C", Offset = "0x1CC737C", VA = "0x1CC737C")]
		public EasyColliderQuickHull()
		{
		}
	}
}
namespace Digger
{
	[Token(Token = "0x2000727")]
	public class FlyCamera : MonoBehaviour
	{
		[Token(Token = "0x4002E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lookSpeed;

		[Token(Token = "0x4002E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float moveSpeed;

		[Token(Token = "0x4002E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationX;

		[Token(Token = "0x4002E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotationY;

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x1CCE000", Offset = "0x1CCE000", VA = "0x1CCE000")]
		private void Start()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x1CCE050", Offset = "0x1CCE050", VA = "0x1CCE050")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0x1CCE394", Offset = "0x1CCE394", VA = "0x1CCE394")]
		public FlyCamera()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public class NavTest : MonoBehaviour
	{
		[Token(Token = "0x4002E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform destination;

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x1CCE3A8", Offset = "0x1CCE3A8", VA = "0x1CCE3A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0x1CCE41C", Offset = "0x1CCE41C", VA = "0x1CCE41C")]
		public NavTest()
		{
		}
	}
	[Token(Token = "0x2000729")]
	public enum ActionType
	{
		[Token(Token = "0x4002E9D")]
		Dig,
		[Token(Token = "0x4002E9E")]
		Add,
		[Token(Token = "0x4002E9F")]
		Paint,
		[Token(Token = "0x4002EA0")]
		Reset,
		[Token(Token = "0x4002EA1")]
		Smooth,
		[Token(Token = "0x4002EA2")]
		BETA_Sharpen
	}
	[Token(Token = "0x200072A")]
	public enum BrushType
	{
		[Token(Token = "0x4002EA4")]
		Sphere,
		[Token(Token = "0x4002EA5")]
		HalfSphere,
		[Token(Token = "0x4002EA6")]
		RoundedCube,
		[Token(Token = "0x4002EA7")]
		Stalagmite
	}
	[Token(Token = "0x200072B")]
	public class Chunk : MonoBehaviour
	{
		[Token(Token = "0x4002EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DiggerSystem digger;

		[Token(Token = "0x4002EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ChunkLODGroup chunkLodGroup;

		[Token(Token = "0x4002EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VoxelChunk voxelChunk;

		[Token(Token = "0x4002EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3i chunkPosition;

		[Token(Token = "0x4002EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3i voxelPosition;

		[Token(Token = "0x4002EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 worldPosition;

		[Token(Token = "0x4002EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 sizeInWorld;

		[Token(Token = "0x4002EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool hasVisualMesh;

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<Mesh> nextVisualMeshes;

		[Token(Token = "0x4002EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<Mesh> nextCollisionMeshes;

		[Token(Token = "0x17000641")]
		public Vector3i ChunkPosition
		{
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0x1CCE424", Offset = "0x1CCE424", VA = "0x1CCE424")]
			get
			{
				return default(Vector3i);
			}
		}

		[Token(Token = "0x17000642")]
		public Vector3i VoxelPosition
		{
			[Token(Token = "0x6002E49")]
			[Address(RVA = "0x1CCE434", Offset = "0x1CCE434", VA = "0x1CCE434")]
			get
			{
				return default(Vector3i);
			}
		}

		[Token(Token = "0x17000643")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0x1CCE444", Offset = "0x1CCE444", VA = "0x1CCE444")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000644")]
		public DiggerSystem Digger
		{
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0x1CCE450", Offset = "0x1CCE450", VA = "0x1CCE450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000645")]
		public bool HasVisualMesh
		{
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0x1CCE458", Offset = "0x1CCE458", VA = "0x1CCE458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000646")]
		internal VoxelChunk VoxelChunk
		{
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x1CCE460", Offset = "0x1CCE460", VA = "0x1CCE460")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000647")]
		private bool IsLoaded
		{
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0x1CCE468", Offset = "0x1CCE468", VA = "0x1CCE468")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000648")]
		internal NavMeshBuildSource NavMeshBuildSource
		{
			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0x1CCE4F0", Offset = "0x1CCE4F0", VA = "0x1CCE4F0")]
			get
			{
				return default(NavMeshBuildSource);
			}
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x1CCE6F4", Offset = "0x1CCE6F4", VA = "0x1CCE6F4")]
		public static string GetName(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0x1CCE7BC", Offset = "0x1CCE7BC", VA = "0x1CCE7BC")]
		public static Vector3i GetPositionFromName(string chunkName)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x1CCE944", Offset = "0x1CCE944", VA = "0x1CCE944")]
		internal static Chunk CreateChunk(Vector3i chunkPosition, DiggerSystem digger, Terrain terrain, Material[] materials, int layer)
		{
			return null;
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0x1CCF4CC", Offset = "0x1CCF4CC", VA = "0x1CCF4CC")]
		public void UpdateStaticEditorFlags()
		{
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x1CCF4D0", Offset = "0x1CCF4D0", VA = "0x1CCF4D0")]
		private static void SetupMeshRenderer(Terrain terrain, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x1CCF4D4", Offset = "0x1CCF4D4", VA = "0x1CCF4D4")]
		public void CreateWithoutOperation()
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x1CCF74C", Offset = "0x1CCF74C", VA = "0x1CCF74C")]
		internal void Modify(BrushType brush, ActionType action, float intensity, Vector3 operationTerrainPosition, float radius, float coneHeight, bool upsideDown, int textureIndex, bool cutDetails, bool isTargetIntensity)
		{
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x1CCFB20", Offset = "0x1CCFB20", VA = "0x1CCFB20")]
		internal void ApplyModify()
		{
		}

		[Token(Token = "0x6002E58")]
		[Address(RVA = "0x1CCFC84", Offset = "0x1CCFC84", VA = "0x1CCFC84")]
		private void EnsureNeededNeighboursExist()
		{
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0x1CCFDE0", Offset = "0x1CCFDE0", VA = "0x1CCFDE0")]
		public bool NeedsNeighbour(Vector3i direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0x1CCFFA0", Offset = "0x1CCFFA0", VA = "0x1CCFFA0")]
		public bool LoadVoxels(bool syncVoxelsWithTerrain)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0x1CD00C0", Offset = "0x1CD00C0", VA = "0x1CD00C0")]
		public void RebuildMeshes()
		{
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0x1CCECE4", Offset = "0x1CCECE4", VA = "0x1CCECE4")]
		public static Vector3i GetVoxelPosition(DiggerSystem digger, Vector3i chunkPosition)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0x1CD01B8", Offset = "0x1CD01B8", VA = "0x1CD01B8")]
		internal void PrepareKernelOperation()
		{
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0x1CCF994", Offset = "0x1CCF994", VA = "0x1CCF994")]
		internal void LazyLoad()
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0x1CD01DC", Offset = "0x1CD01DC", VA = "0x1CD01DC")]
		public Chunk()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public class ChunkLODGroup : MonoBehaviour
	{
		[Token(Token = "0x4002EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LODGroup lodGroup;

		[Token(Token = "0x4002EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ChunkObject[] chunks;

		[Token(Token = "0x17000649")]
		public int LODCount
		{
			[Token(Token = "0x6002E60")]
			[Address(RVA = "0x1CCF610", Offset = "0x1CCF610", VA = "0x1CCF610")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x1CCED94", Offset = "0x1CCED94", VA = "0x1CCED94")]
		internal static ChunkLODGroup Create(Vector3i chunkPosition, Chunk chunk, DiggerSystem digger, Terrain terrain, Material[] materials, int layer)
		{
			return null;
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x1CCE614", Offset = "0x1CCE614", VA = "0x1CCE614")]
		public Mesh GetMeshForNavigation()
		{
			return null;
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x1CD07A0", Offset = "0x1CD07A0", VA = "0x1CD07A0")]
		public void UpdateStaticEditorFlags(bool enableOcclusionCulling)
		{
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x1CD0294", Offset = "0x1CD0294", VA = "0x1CD0294")]
		private static string GetName(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0x1CCF6C8", Offset = "0x1CCF6C8", VA = "0x1CCF6C8")]
		public bool PostBuild(int lodIndex, Mesh visualMesh, Mesh collisionMesh, ChunkTriggerBounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x1CCF5E8", Offset = "0x1CCF5E8", VA = "0x1CCF5E8")]
		public static int IndexToLod(int lod)
		{
			return default(int);
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x1CD0ACC", Offset = "0x1CD0ACC", VA = "0x1CD0ACC")]
		public ChunkLODGroup()
		{
		}
	}
	[Token(Token = "0x200072D")]
	public class ChunkObject : MonoBehaviour
	{
		[Token(Token = "0x4002EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4002EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter filter;

		[Token(Token = "0x4002EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshCollider meshCollider;

		[Token(Token = "0x4002EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool hasCollider;

		[Token(Token = "0x4002EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool isStatic;

		[Token(Token = "0x1700064A")]
		public Mesh Mesh
		{
			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x1CD0784", Offset = "0x1CD0784", VA = "0x1CD0784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0x1CD0378", Offset = "0x1CD0378", VA = "0x1CD0378")]
		internal static ChunkObject Create(int lod, Vector3i chunkPosition, ChunkLODGroup chunkLodGroup, bool hasCollider, DiggerSystem digger, Terrain terrain, Material[] materials, int layer)
		{
			return null;
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0x1CD07EC", Offset = "0x1CD07EC", VA = "0x1CD07EC")]
		public void UpdateStaticEditorFlags(int lod, bool enableOcclusionCulling)
		{
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0x1CD0B9C", Offset = "0x1CD0B9C", VA = "0x1CD0B9C")]
		private static void SetupMeshRenderer(Terrain terrain, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0x1CD0AD4", Offset = "0x1CD0AD4", VA = "0x1CD0AD4")]
		public static string GetName(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0x1CD07F0", Offset = "0x1CD07F0", VA = "0x1CD07F0")]
		public bool PostBuild(Mesh visualMesh, Mesh collisionMesh, ChunkTriggerBounds bounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0x1CD0BBC", Offset = "0x1CD0BBC", VA = "0x1CD0BBC")]
		public ChunkObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200072E")]
	public struct ChunkTriggerBounds
	{
		[Token(Token = "0x4002EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 MinMin;

		[Token(Token = "0x4002EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector3 maxMax;

		[Token(Token = "0x4002EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool initialized;

		[Token(Token = "0x4002EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 min;

		[Token(Token = "0x4002EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 max;

		[Token(Token = "0x1700064B")]
		public Vector3 Min
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x1CD0BC4", Offset = "0x1CD0BC4", VA = "0x1CD0BC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700064C")]
		public Vector3 Max
		{
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x1CD0BD0", Offset = "0x1CD0BD0", VA = "0x1CD0BD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700064D")]
		public bool IsVirgin
		{
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x1CCFF90", Offset = "0x1CCFF90", VA = "0x1CCFF90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0x1CCF62C", Offset = "0x1CCF62C", VA = "0x1CCF62C")]
		public ChunkTriggerBounds(Vector3 heightmapScale, float sizeOfMesh)
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0x1CD0BDC", Offset = "0x1CD0BDC", VA = "0x1CD0BDC")]
		public ChunkTriggerBounds(bool virgin, Vector3 min, Vector3 max, Vector3 heightmapScale, float sizeOfMesh)
		{
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0x1CD0C18", Offset = "0x1CD0C18", VA = "0x1CD0C18")]
		public void ExtendIfNeeded(float3 p)
		{
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0x1CD0DE4", Offset = "0x1CD0DE4", VA = "0x1CD0DE4")]
		public Bounds ToBounds()
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x200072F")]
	public sealed class ColliderComparer : IEqualityComparer<Collider>
	{
		[Token(Token = "0x6002E77")]
		[Address(RVA = "0x1CD0EC8", Offset = "0x1CD0EC8", VA = "0x1CD0EC8", Slot = "4")]
		public bool Equals(Collider col1, Collider col2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x1CD0FE4", Offset = "0x1CD0FE4", VA = "0x1CD0FE4", Slot = "5")]
		public int GetHashCode(Collider col)
		{
			return default(int);
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0x1CD1004", Offset = "0x1CD1004", VA = "0x1CD1004")]
		public ColliderComparer()
		{
		}
	}
	[Token(Token = "0x2000730")]
	public class DiggerMaster : MonoBehaviour
	{
		[Token(Token = "0x4002EBE")]
		public const string ParentFolder = "DiggerData";

		[Token(Token = "0x4002EBF")]
		public const string ScenesBaseFolder = "Scenes";

		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int chunkSize;

		[Token(Token = "0x4002EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string sceneDataFolder;

		[Token(Token = "0x4002EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float screenRelativeTransitionHeightLod0;

		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float screenRelativeTransitionHeightLod1;

		[Token(Token = "0x4002EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int colliderLodIndex;

		[Token(Token = "0x4002EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool createLODs;

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool showUnderlyingObjects;

		[Token(Token = "0x4002EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int resolutionMult;

		[Token(Token = "0x4002EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int layer;

		[Token(Token = "0x4002EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool enableOcclusionCulling;

		[Token(Token = "0x1700064E")]
		public int SizeOfMesh
		{
			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x1CD100C", Offset = "0x1CD100C", VA = "0x1CD100C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700064F")]
		public int SizeVox
		{
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0x1CD1018", Offset = "0x1CD1018", VA = "0x1CD1018")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000650")]
		private static string ParentPath
		{
			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0x1CD1024", Offset = "0x1CD1024", VA = "0x1CD1024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000651")]
		private static string ScenesBasePath
		{
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0x1CD1150", Offset = "0x1CD1150", VA = "0x1CD1150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000652")]
		public string SceneDataPath
		{
			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0x1CD11C8", Offset = "0x1CD11C8", VA = "0x1CD11C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000653")]
		public string SceneDataFolder
		{
			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0x1CD1234", Offset = "0x1CD1234", VA = "0x1CD1234")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E80")]
			[Address(RVA = "0x1CD123C", Offset = "0x1CD123C", VA = "0x1CD123C")]
			set
			{
			}
		}

		[Token(Token = "0x17000654")]
		public float ScreenRelativeTransitionHeightLod0
		{
			[Token(Token = "0x6002E81")]
			[Address(RVA = "0x1CD1244", Offset = "0x1CD1244", VA = "0x1CD1244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002E82")]
			[Address(RVA = "0x1CD124C", Offset = "0x1CD124C", VA = "0x1CD124C")]
			set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public float ScreenRelativeTransitionHeightLod1
		{
			[Token(Token = "0x6002E83")]
			[Address(RVA = "0x1CD1254", Offset = "0x1CD1254", VA = "0x1CD1254")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002E84")]
			[Address(RVA = "0x1CD125C", Offset = "0x1CD125C", VA = "0x1CD125C")]
			set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public int ColliderLodIndex
		{
			[Token(Token = "0x6002E85")]
			[Address(RVA = "0x1CD1264", Offset = "0x1CD1264", VA = "0x1CD1264")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002E86")]
			[Address(RVA = "0x1CD126C", Offset = "0x1CD126C", VA = "0x1CD126C")]
			set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public int ResolutionMult
		{
			[Token(Token = "0x6002E87")]
			[Address(RVA = "0x1CD1274", Offset = "0x1CD1274", VA = "0x1CD1274")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002E88")]
			[Address(RVA = "0x1CD127C", Offset = "0x1CD127C", VA = "0x1CD127C")]
			set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public int ChunkSize
		{
			[Token(Token = "0x6002E89")]
			[Address(RVA = "0x1CD1284", Offset = "0x1CD1284", VA = "0x1CD1284")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0x1CD128C", Offset = "0x1CD128C", VA = "0x1CD128C")]
			set
			{
			}
		}

		[Token(Token = "0x17000659")]
		public bool CreateLODs
		{
			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0x1CD1294", Offset = "0x1CD1294", VA = "0x1CD1294")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0x1CD129C", Offset = "0x1CD129C", VA = "0x1CD129C")]
			set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		public bool ShowUnderlyingObjects
		{
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0x1CD12A8", Offset = "0x1CD12A8", VA = "0x1CD12A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0x1CD12B0", Offset = "0x1CD12B0", VA = "0x1CD12B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700065B")]
		public int Layer
		{
			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0x1CD12BC", Offset = "0x1CD12BC", VA = "0x1CD12BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002E90")]
			[Address(RVA = "0x1CD12C4", Offset = "0x1CD12C4", VA = "0x1CD12C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700065C")]
		public bool EnableOcclusionCulling
		{
			[Token(Token = "0x6002E91")]
			[Address(RVA = "0x1CD12CC", Offset = "0x1CD12CC", VA = "0x1CD12CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E92")]
			[Address(RVA = "0x1CD12D4", Offset = "0x1CD12D4", VA = "0x1CD12D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0x1CD12E0", Offset = "0x1CD12E0", VA = "0x1CD12E0")]
		public void CreateDirs()
		{
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0x1CD12E4", Offset = "0x1CD12E4", VA = "0x1CD12E4")]
		public DiggerMaster()
		{
		}
	}
	[Token(Token = "0x2000731")]
	public static class DiggerPhysics
	{
		[Token(Token = "0x2000732")]
		private class HitComparer : IComparer<RaycastHit>
		{
			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0x1CD28BC", Offset = "0x1CD28BC", VA = "0x1CD28BC", Slot = "4")]
			public int Compare(RaycastHit x, RaycastHit y)
			{
				return default(int);
			}

			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0x1CD28B4", Offset = "0x1CD28B4", VA = "0x1CD28B4")]
			public HitComparer()
			{
			}
		}

		[Token(Token = "0x4002ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] BufferOverlap;

		[Token(Token = "0x4002ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<RaycastHit> HitBuffer;

		[Token(Token = "0x4002ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<RaycastHit> HitBufferAuxiliary;

		[Token(Token = "0x4002ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly RaycastHit[] SmallHitBufferArray;

		[Token(Token = "0x4002ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RaycastHit[] BigHitBufferArray;

		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly HitComparer HitByDistanceComparer;

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0x1CD130C", Offset = "0x1CD130C", VA = "0x1CD130C")]
		public static bool Raycast(Vector3 origin, Vector3 direction, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0x1CD15C0", Offset = "0x1CD15C0", VA = "0x1CD15C0")]
		public static bool Raycast(Ray ray, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0x1CD167C", Offset = "0x1CD167C", VA = "0x1CD167C")]
		public static bool Raycast(Vector3 origin, Vector3 direction, out RaycastHit raycastHit, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0x1CD1410", Offset = "0x1CD1410", VA = "0x1CD1410")]
		public static bool Raycast(Ray ray, out RaycastHit raycastHit, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0x1CD1F70", Offset = "0x1CD1F70", VA = "0x1CD1F70")]
		public static RaycastHit[] RaycastAll(Ray ray, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return null;
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0x1CD2048", Offset = "0x1CD2048", VA = "0x1CD2048")]
		public static RaycastHit[] RaycastAll(Vector3 origin, Vector3 direction, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return null;
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0x1CD2160", Offset = "0x1CD2160", VA = "0x1CD2160")]
		public static int RaycastNonAlloc(Ray ray, RaycastHit[] results, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(int);
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0x1CD2248", Offset = "0x1CD2248", VA = "0x1CD2248")]
		public static int RaycastNonAlloc(Vector3 origin, Vector3 direction, RaycastHit[] results, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(int);
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0x1CD1778", Offset = "0x1CD1778", VA = "0x1CD1778")]
		private static void RaycastNonAlloc(int maxCount, Vector3 origin, Vector3 direction, List<RaycastHit> results, float maxDistance = float.PositiveInfinity, int layerMask = -5, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0x1CD2470", Offset = "0x1CD2470", VA = "0x1CD2470")]
		private static bool IsInColliderHole(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9F")]
		[Address(RVA = "0x1CD25EC", Offset = "0x1CD25EC", VA = "0x1CD25EC")]
		private static bool IsNextTo(RaycastHit hit, RaycastHit nextHit)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000733")]
	public class DiggerSystem : MonoBehaviour
	{
		[Token(Token = "0x2000734")]
		[CompilerGenerated]
		private sealed class <Modify>d__132 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DiggerSystem <>4__this;

			[Token(Token = "0x4002EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ModificationArea area;

			[Token(Token = "0x4002EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public BrushType brush;

			[Token(Token = "0x4002EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ActionType action;

			[Token(Token = "0x4002EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float intensity;

			[Token(Token = "0x4002EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float radius;

			[Token(Token = "0x4002EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float coneHeight;

			[Token(Token = "0x4002EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool upsideDown;

			[Token(Token = "0x4002EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int textureIndex;

			[Token(Token = "0x4002EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool cutDetails;

			[Token(Token = "0x4002EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
			public bool isTargetIntensity;

			[Token(Token = "0x4002EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
			public bool runAsync;

			[Token(Token = "0x4002EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Vector3i <min>5__2;

			[Token(Token = "0x4002EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Vector3i <max>5__3;

			[Token(Token = "0x4002EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <x>5__4;

			[Token(Token = "0x4002F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <z>5__5;

			[Token(Token = "0x4002F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <y>5__6;

			[Token(Token = "0x1700067C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F04")]
				[Address(RVA = "0x1D378C8", Offset = "0x1D378C8", VA = "0x1D378C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F06")]
				[Address(RVA = "0x1D37910", Offset = "0x1D37910", VA = "0x1D37910", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x1D3754C", Offset = "0x1D3754C", VA = "0x1D3754C")]
			[DebuggerHidden]
			public <Modify>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x6002F02")]
			[Address(RVA = "0x1D37574", Offset = "0x1D37574", VA = "0x1D37574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x1D37578", Offset = "0x1D37578", VA = "0x1D37578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x1D378D0", Offset = "0x1D378D0", VA = "0x1D378D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002ED0")]
		public const int DiggerVersion = 22;

		[Token(Token = "0x4002ED1")]
		public const string VoxelFileExtension = "vox3";

		[Token(Token = "0x4002ED2")]
		public const string VoxelFileExtensionLegacyV1 = "vox";

		[Token(Token = "0x4002ED3")]
		public const string VoxelFileExtensionLegacyV2 = "vox2";

		[Token(Token = "0x4002ED4")]
		private const string VoxelMetadataFileExtension = "vom";

		[Token(Token = "0x4002ED5")]
		private const string VersionFileExtension = "ver";

		[Token(Token = "0x4002ED6")]
		private const int UndoStackSize = 15;

		[Token(Token = "0x4002ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Vector3i, Chunk> chunks;

		[Token(Token = "0x4002ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IHeightFeeder heightFeeder;

		[Token(Token = "0x4002ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<VoxelChunk> chunksToPersist;

		[Token(Token = "0x4002EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Collider, int> colliderStates;

		[Token(Token = "0x4002EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Vector3i, Chunk> builtChunks;

		[Token(Token = "0x4002EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool disablePersistence;

		[Token(Token = "0x4002EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Bounds bounds;

		[Token(Token = "0x4002EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool needRecordUndo;

		[Token(Token = "0x4002EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stopwatch stopwatch;

		[Token(Token = "0x4002EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private DiggerMaster master;

		[Token(Token = "0x4002EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4002EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private long version;

		[Token(Token = "0x4002EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string basePathData;

		[Token(Token = "0x4002EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TerrainCutter cutter;

		[Token(Token = "0x4002EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector3 heightmapScale;

		[Token(Token = "0x4002EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 holeMapScale;

		[Token(Token = "0x4002EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public Terrain Terrain;

		[Token(Token = "0x4002EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public Material[] Materials;

		[Token(Token = "0x4002EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TerrainMaterialType materialType;

		[Token(Token = "0x4002EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D[] terrainTextures;

		[Token(Token = "0x4002EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string persistenceSubPath;

		[Token(Token = "0x4002EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		public bool ShowDebug;

		[Token(Token = "0x4002EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool kernelActionNeedsApply;

		[Token(Token = "0x1700065D")]
		public string Guid
		{
			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0x1CD28FC", Offset = "0x1CD28FC", VA = "0x1CD28FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065E")]
		public Vector3 HeightmapScale
		{
			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x1CD2904", Offset = "0x1CD2904", VA = "0x1CD2904")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700065F")]
		public Vector3 HoleMapScale
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0x1CD2910", Offset = "0x1CD2910", VA = "0x1CD2910")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000660")]
		public Vector3 CutMargin
		{
			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0x1CD291C", Offset = "0x1CD291C", VA = "0x1CD291C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000661")]
		public TerrainCutter Cutter
		{
			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0x1CD29D8", Offset = "0x1CD29D8", VA = "0x1CD29D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000662")]
		public IHeightFeeder HeightFeeder
		{
			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0x1CD29E0", Offset = "0x1CD29E0", VA = "0x1CD29E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000663")]
		public Texture2D[] TerrainTextures
		{
			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x1CD29F0", Offset = "0x1CD29F0", VA = "0x1CD29F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0x1CD29E8", Offset = "0x1CD29E8", VA = "0x1CD29E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000664")]
		public float ScreenRelativeTransitionHeightLod0
		{
			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0x1CD074C", Offset = "0x1CD074C", VA = "0x1CD074C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000665")]
		public float ScreenRelativeTransitionHeightLod1
		{
			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0x1CD0768", Offset = "0x1CD0768", VA = "0x1CD0768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000666")]
		public int ColliderLodIndex
		{
			[Token(Token = "0x6002EAD")]
			[Address(RVA = "0x1CCF5F4", Offset = "0x1CCF5F4", VA = "0x1CCF5F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000667")]
		public bool CreateLODs
		{
			[Token(Token = "0x6002EAE")]
			[Address(RVA = "0x1CD035C", Offset = "0x1CD035C", VA = "0x1CD035C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000668")]
		private int Layer
		{
			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0x1CD29F8", Offset = "0x1CD29F8", VA = "0x1CD29F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000669")]
		public bool EnableOcclusionCulling
		{
			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0x1CD0BA0", Offset = "0x1CD0BA0", VA = "0x1CD0BA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066A")]
		public int SizeOfMesh
		{
			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0x1CCED74", Offset = "0x1CCED74", VA = "0x1CCED74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700066B")]
		public int SizeVox
		{
			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0x1CD2A14", Offset = "0x1CD2A14", VA = "0x1CD2A14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700066C")]
		public int ResolutionMult
		{
			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0x1CD2A34", Offset = "0x1CD2A34", VA = "0x1CD2A34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700066D")]
		public int DefaultNavMeshArea
		{
			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0x1CD2A50", Offset = "0x1CD2A50", VA = "0x1CD2A50")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0x1CD2A58", Offset = "0x1CD2A58", VA = "0x1CD2A58")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700066E")]
		public TerrainMaterialType MaterialType
		{
			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x1CD2A60", Offset = "0x1CD2A60", VA = "0x1CD2A60")]
			get
			{
				return default(TerrainMaterialType);
			}
			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0x1CD2A68", Offset = "0x1CD2A68", VA = "0x1CD2A68")]
			set
			{
			}
		}

		[Token(Token = "0x1700066F")]
		private string BaseFolder
		{
			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0x1CD2A70", Offset = "0x1CD2A70", VA = "0x1CD2A70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000670")]
		public string BasePathData
		{
			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0x1CD2AC0", Offset = "0x1CD2AC0", VA = "0x1CD2AC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000671")]
		private string InternalPathData
		{
			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0x1CD2C30", Offset = "0x1CD2C30", VA = "0x1CD2C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000672")]
		private string StreamingAssetsPathData
		{
			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0x1CD2CB0", Offset = "0x1CD2CB0", VA = "0x1CD2CB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000673")]
		private string PersistentRuntimePathData
		{
			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0x1CD2D70", Offset = "0x1CD2D70", VA = "0x1CD2D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000674")]
		public long Version
		{
			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0x1CD2EC8", Offset = "0x1CD2EC8", VA = "0x1CD2EC8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000675")]
		public long PreviousVersion
		{
			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0x1CD2ED0", Offset = "0x1CD2ED0", VA = "0x1CD2ED0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000676")]
		private int TerrainChunkWidth
		{
			[Token(Token = "0x6002EC0")]
			[Address(RVA = "0x1CD2EDC", Offset = "0x1CD2EDC", VA = "0x1CD2EDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000677")]
		private int TerrainChunkHeight
		{
			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0x1CD2F2C", Offset = "0x1CD2F2C", VA = "0x1CD2F2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000678")]
		public bool IsInitialized
		{
			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0x1CD2F7C", Offset = "0x1CD2F7C", VA = "0x1CD2F7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000679")]
		public Bounds Bounds
		{
			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0x1CD3058", Offset = "0x1CD3058", VA = "0x1CD3058")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700067A")]
		public string PersistenceSubPath
		{
			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0x1CD306C", Offset = "0x1CD306C", VA = "0x1CD306C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0x1CD3074", Offset = "0x1CD3074", VA = "0x1CD3074")]
			set
			{
			}
		}

		[Token(Token = "0x1700067B")]
		private bool CanUndo
		{
			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0x1CD3AEC", Offset = "0x1CD3AEC", VA = "0x1CD3AEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0x1CD2B08", Offset = "0x1CD2B08", VA = "0x1CD2B08")]
		private string ComputeBasePathData()
		{
			return null;
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0x1CD307C", Offset = "0x1CD307C", VA = "0x1CD307C")]
		private string GetPathDiggerVersionFile()
		{
			return null;
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0x1CD30FC", Offset = "0x1CD30FC", VA = "0x1CD30FC")]
		private string GetPathCurrentVersionFile()
		{
			return null;
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0x1CD317C", Offset = "0x1CD317C", VA = "0x1CD317C")]
		private string GetPathVersionFile(long v)
		{
			return null;
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0x1CD3270", Offset = "0x1CD3270", VA = "0x1CD3270")]
		public string GetEditorOnlyPathVoxelFile(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0x1CD3324", Offset = "0x1CD3324", VA = "0x1CD3324")]
		public string GetPathVoxelFile(Vector3i chunkPosition, bool forPersistence)
		{
			return null;
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0x1CD3468", Offset = "0x1CD3468", VA = "0x1CD3468")]
		public string GetPathVoxelMetadataFile(Vector3i chunkPosition, bool forPersistence)
		{
			return null;
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0x1CD3510", Offset = "0x1CD3510", VA = "0x1CD3510")]
		public string GetEditorOnlyPathVoxelMetadataFile(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0x1CD35A8", Offset = "0x1CD35A8", VA = "0x1CD35A8")]
		public string GetPathVersionedVoxelFile(Vector3i chunkPosition, long v)
		{
			return null;
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0x1CD36B4", Offset = "0x1CD36B4", VA = "0x1CD36B4")]
		public string GetPathVersionedVoxelMetadataFile(Vector3i chunkPosition, long v)
		{
			return null;
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0x1CD37C0", Offset = "0x1CD37C0", VA = "0x1CD37C0")]
		public string GetTransparencyMapPath()
		{
			return null;
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0x1CD3840", Offset = "0x1CD3840", VA = "0x1CD3840")]
		public string GetTransparencyMapBackupPath(string ext = "asset")
		{
			return null;
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0x1CD38E4", Offset = "0x1CD38E4", VA = "0x1CD38E4")]
		public string GetVersionedTransparencyMapPath(long v)
		{
			return null;
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0x1CD39B8", Offset = "0x1CD39B8", VA = "0x1CD39B8")]
		public string GetTransparencyMapRuntimePath()
		{
			return null;
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0x1CCE64C", Offset = "0x1CCE64C", VA = "0x1CCE64C")]
		public Bounds GetChunkBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0x1CD3A38", Offset = "0x1CD3A38", VA = "0x1CD3A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0x1CD3AE4", Offset = "0x1CD3AE4", VA = "0x1CD3AE4")]
		public void PersistAndRecordUndo(bool force, bool removeUselessChunks)
		{
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0x1CD3AE8", Offset = "0x1CD3AE8", VA = "0x1CD3AE8")]
		public void DoUndo()
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x1CD3BB8", Offset = "0x1CD3BB8", VA = "0x1CD3BB8")]
		public void PersistDiggerVersion()
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x1CD3BBC", Offset = "0x1CD3BBC", VA = "0x1CD3BBC")]
		public int GetDiggerVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0x1CD3BC4", Offset = "0x1CD3BC4", VA = "0x1CD3BC4")]
		private void PersistVersion()
		{
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0x1CD3BC8", Offset = "0x1CD3BC8", VA = "0x1CD3BC8")]
		private long GetLastPersistedVersion()
		{
			return default(long);
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0x1CD3BD0", Offset = "0x1CD3BD0", VA = "0x1CD3BD0")]
		private void UndoRedoFiles()
		{
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x1CD4368", Offset = "0x1CD4368", VA = "0x1CD4368")]
		private void SyncChunksWithVersion(VersionInfo versionInfo)
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x1CD4BB0", Offset = "0x1CD4BB0", VA = "0x1CD4BB0")]
		private void DeleteOtherVersions(bool lower, long comparandVersion)
		{
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0x1CD4BB4", Offset = "0x1CD4BB4", VA = "0x1CD4BB4")]
		public void PreInit(bool enablePersistence)
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x1CD4D48", Offset = "0x1CD4D48", VA = "0x1CD4D48")]
		public void Init(LoadType loadType)
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x1CD4F38", Offset = "0x1CD4F38", VA = "0x1CD4F38")]
		private void Reload(LoadType loadType)
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x1CD5A34", Offset = "0x1CD5A34", VA = "0x1CD5A34")]
		public float[] GrabAlphamaps(int2 from, int2 to, out int alphamapCount)
		{
			return null;
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x1CD5C04", Offset = "0x1CD5C04", VA = "0x1CD5C04")]
		internal void AddNavMeshSources(List<NavMeshBuildSource> sources)
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x1CD5EB0", Offset = "0x1CD5EB0", VA = "0x1CD5EB0")]
		private bool GetOrCreateChunk(Vector3i position, out Chunk chunk)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0x1CD6148", Offset = "0x1CD6148", VA = "0x1CD6148")]
		internal bool GetChunk(Vector3i position, out Chunk chunk)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x1CD61B8", Offset = "0x1CD61B8", VA = "0x1CD61B8")]
		public bool Modify(BrushType brush, ActionType action, float intensity, Vector3 operationWorldPosition, float radius, float coneHeight, bool upsideDown, int textureIndex, bool cutDetails, bool isTargetIntensity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x1CD6A44", Offset = "0x1CD6A44", VA = "0x1CD6A44")]
		internal IEnumerator ModifyAsync(BrushType brush, ActionType action, float intensity, Vector3 operationWorldPosition, float radius, float coneHeight, bool upsideDown, int textureIndex, bool cutDetails, bool isTargetIntensity, ModificationArea area)
		{
			return null;
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x1CD639C", Offset = "0x1CD639C", VA = "0x1CD639C")]
		internal ModificationArea GetAreaToModify(ActionType action, float intensity, Vector3 operationWorldPosition, float radius)
		{
			return default(ModificationArea);
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x1CD6780", Offset = "0x1CD6780", VA = "0x1CD6780")]
		[IteratorStateMachine(typeof(<Modify>d__132))]
		private IEnumerator Modify(BrushType brush, ActionType action, float intensity, Vector3 operationWorldPosition, float radius, float coneHeight, bool upsideDown, int textureIndex, bool cutDetails, bool isTargetIntensity, bool runAsync, ModificationArea area)
		{
			return null;
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x1CD6894", Offset = "0x1CD6894", VA = "0x1CD6894")]
		internal void ApplyModify()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x1CD6BC8", Offset = "0x1CD6BC8", VA = "0x1CD6BC8")]
		public bool IsChunkBelongingToMe(Vector3i chunkPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0x1CD6C1C", Offset = "0x1CD6C1C", VA = "0x1CD6C1C")]
		public DiggerSystem GetNeighborAt(Vector3i chunkPosition)
		{
			return null;
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0x1CD7050", Offset = "0x1CD7050", VA = "0x1CD7050")]
		public Vector3i ToChunkPosition(Vector3 worldPosition)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0x1CD713C", Offset = "0x1CD713C", VA = "0x1CD713C")]
		public Vector3 ToWorldPosition(Vector3i chunkPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x1CD6FBC", Offset = "0x1CD6FBC", VA = "0x1CD6FBC")]
		private static DiggerSystem GetDiggerSystemOf(Terrain terrain)
		{
			return null;
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x1CD722C", Offset = "0x1CD722C", VA = "0x1CD722C")]
		public void RemoveTreesInSphere(Vector3 center, float radius)
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x1CD6A84", Offset = "0x1CD6A84", VA = "0x1CD6A84")]
		private float2 GetMinMaxHeightWithin(Vector3i minVox, Vector3i maxVox)
		{
			return default(float2);
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x1CD49C4", Offset = "0x1CD49C4", VA = "0x1CD49C4")]
		private void ComputeBounds()
		{
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x1CD6010", Offset = "0x1CD6010", VA = "0x1CD6010")]
		private void ExpandBounds(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x1CCFF18", Offset = "0x1CCFF18", VA = "0x1CCFF18")]
		public void EnsureChunkExists(Vector3i chunkPosition)
		{
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x1CD73D8", Offset = "0x1CD73D8", VA = "0x1CD73D8")]
		public void EnsureChunkWillBePersisted(VoxelChunk voxelChunk)
		{
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x1CD7444", Offset = "0x1CD7444", VA = "0x1CD7444")]
		private void RemoveUselessChunks()
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x1CD48A4", Offset = "0x1CD48A4", VA = "0x1CD48A4")]
		private void RemoveChunk(Chunk chunk)
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x1CD778C", Offset = "0x1CD778C", VA = "0x1CD778C")]
		private bool IsUseless(Vector3i chunkPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x1CD56D0", Offset = "0x1CD56D0", VA = "0x1CD56D0")]
		private void LoadChunks(LoadType loadType)
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0x1CD7A20", Offset = "0x1CD7A20", VA = "0x1CD7A20")]
		private void LoadChunksFromDir(LoadType loadType, DirectoryInfo dir)
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x1CD7D84", Offset = "0x1CD7D84", VA = "0x1CD7D84")]
		private void LoadChunkFromFile(LoadType loadType, Vector3i chunkPosition)
		{
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0x1CD79D8", Offset = "0x1CD79D8", VA = "0x1CD79D8")]
		private static void LoadChunk(bool rebuildMeshes, bool syncVoxelsWithTerrain, Chunk chunk)
		{
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0x1CD58EC", Offset = "0x1CD58EC", VA = "0x1CD58EC")]
		public void UpdateStaticEditorFlags()
		{
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0x1CD7E78", Offset = "0x1CD7E78", VA = "0x1CD7E78")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x1CD4D44", Offset = "0x1CD4D44", VA = "0x1CD4D44")]
		public void CreateDirs()
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0x1CD7E7C", Offset = "0x1CD7E7C", VA = "0x1CD7E7C")]
		public DiggerSystem()
		{
		}
	}
	[Token(Token = "0x2000735")]
	public interface IHeightFeeder
	{
		[Token(Token = "0x6002F07")]
		float GetHeight(int x, int z);

		[Token(Token = "0x6002F08")]
		float GetVerticalNormal(int x, int z);
	}
	[Token(Token = "0x2000736")]
	[BurstCompile(CompileSynchronously = true, FloatMode = FloatMode.Fast)]
	internal struct MarchingCubesJob : IJobParallelFor
	{
		[Token(Token = "0x2000737")]
		public struct Out
		{
			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NativeArray<Vector3> outVertices;

			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NativeArray<Vector3> outNormals;

			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NativeArray<uint> outInfos;

			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NativeArray<int> outTriangles;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<Vector2> outUV1s;

			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public NativeArray<Color> outColors;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<Vector4> outUV2s;

			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public NativeArray<Vector4> outUV3s;

			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public NativeArray<Vector4> outUV4s;

			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x1D3A3F0", Offset = "0x1D3A3F0", VA = "0x1D3A3F0")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002F14")]
			[Address(RVA = "0x1D3A514", Offset = "0x1D3A514", VA = "0x1D3A514")]
			public static Out New()
			{
				return default(Out);
			}
		}

		[Token(Token = "0x2000738")]
		private struct WorkNorm
		{
			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 N0;

			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 N1;

			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 N2;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 N3;

			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 N4;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 N5;

			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 N6;

			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 N7;

			[Token(Token = "0x1700067E")]
			public Vector3 this[int i]
			{
				[Token(Token = "0x6002F15")]
				[Address(RVA = "0x1D3A73C", Offset = "0x1D3A73C", VA = "0x1D3A73C")]
				get
				{
					return default(Vector3);
				}
			}
		}

		[Token(Token = "0x2000739")]
		private struct WorkVert
		{
			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 V0;

			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 V1;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 V2;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 V3;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 V4;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 V5;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 V6;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 V7;

			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 V8;

			[Token(Token = "0x4002F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 V9;

			[Token(Token = "0x4002F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3 V10;

			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Vector3 V11;

			[Token(Token = "0x1700067F")]
			public Vector3 this[int i]
			{
				[Token(Token = "0x6002F16")]
				[Address(RVA = "0x1D3A09C", Offset = "0x1D3A09C", VA = "0x1D3A09C")]
				get
				{
					return default(Vector3);
				}
			}
		}

		[Token(Token = "0x200073A")]
		private struct WorkVertIndices
		{
			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Vi0;

			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Vi1;

			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Vi2;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int Vi3;

			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Vi4;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int Vi5;

			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Vi6;

			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Vi7;

			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Vi8;

			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int Vi9;

			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int Vi10;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int Vi11;

			[Token(Token = "0x17000680")]
			public int this[int i]
			{
				[Token(Token = "0x6002F17")]
				[Address(RVA = "0x1D3A368", Offset = "0x1D3A368", VA = "0x1D3A368")]
				get
				{
					return default(int);
				}
			}
		}

		[Token(Token = "0x4002F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SizeVox;

		[Token(Token = "0x4002F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SizeVox2;

		[Token(Token = "0x4002F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<int> edgeTable;

		[Token(Token = "0x4002F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		private NativeArray<int> triTable;

		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector3> corners;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Voxel> voxels;

		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<float> alphamaps;

		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int2 alphamapsSize;

		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int3 localAlphamapsSize;

		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NativeCounter.Concurrent vertexCounter;

		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NativeCounter.Concurrent triangleCounter;

		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector3> outVertices;

		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector3> outNormals;

		[Token(Token = "0x4002F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[NativeDisableParallelForRestriction]
		[WriteOnly]
		private NativeArray<int> outTriangles;

		[Token(Token = "0x4002F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<uint> outInfos;

		[Token(Token = "0x4002F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector2> outUV1s;

		[Token(Token = "0x4002F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Color> outColors;

		[Token(Token = "0x4002F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[NativeDisableParallelForRestriction]
		[WriteOnly]
		private NativeArray<Vector4> outUV2s;

		[Token(Token = "0x4002F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector4> outUV3s;

		[Token(Token = "0x4002F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[WriteOnly]
		[NativeDisableParallelForRestriction]
		private NativeArray<Vector4> outUV4s;

		[Token(Token = "0x4002F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 chunkWorldPosition;

		[Token(Token = "0x4002F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector3 scale;

		[Token(Token = "0x4002F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector2 uvScale;

		[Token(Token = "0x4002F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int2 alphamapOrigin;

		[Token(Token = "0x4002F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int lod;

		[Token(Token = "0x4002F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private TerrainMaterialType materialType;

		[Token(Token = "0x4002F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float Isovalue;

		[Token(Token = "0x4002F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public byte AlteredOnly;

		[Token(Token = "0x4002F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		public byte FullOutput;

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x1D37918", Offset = "0x1D37918", VA = "0x1D37918")]
		public MarchingCubesJob(NativeArray<int> edgeTable, NativeArray<int> triTable, NativeArray<Vector3> corners, NativeCounter.Concurrent vertexCounter, NativeCounter.Concurrent triangleCounter, NativeArray<Voxel> voxels, NativeArray<float> alphamaps, Out o, Vector3 scale, Vector2 uvScale, Vector3 chunkWorldPosition, int lod, int2 alphamapOrigin, int2 alphamapsSize, int3 localAlphamapsSize, TerrainMaterialType materialType)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x1D37AEC", Offset = "0x1D37AEC", VA = "0x1D37AEC")]
		private static Voxel VertexInfo(Voxel vA, Voxel vB)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x1D37B44", Offset = "0x1D37B44", VA = "0x1D37B44")]
		private Vector3 VertexInterp(Vector3 p1, Vector3 p2, Voxel vA, Voxel vB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x1D37D08", Offset = "0x1D37D08", VA = "0x1D37D08")]
		private Vector3 ComputeNormalAt(int xi, int yi, int zi, float voxelOriginValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x1D37E44", Offset = "0x1D37E44", VA = "0x1D37E44")]
		private void ComputeUVsAndColor(int vertIndex, Vector3 vertex, Voxel voxel)
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x1D3800C", Offset = "0x1D3800C", VA = "0x1D3800C")]
		private void ComputeUVsAndColorForMicroSplat(int vertIndex, Vector3 vertex, Voxel voxel)
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1D382D4", Offset = "0x1D382D4", VA = "0x1D382D4")]
		private Vector4 GetControlAt(Vector2 uv, int index)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x1D385F0", Offset = "0x1D385F0", VA = "0x1D385F0")]
		private static Vector4 GetControlFor(uint firstTextureIndex, uint secondTextureIndex, float lerp, int index)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1D386D8", Offset = "0x1D386D8", VA = "0x1D386D8")]
		private static float EncodeToFloat(Vector4 enc)
		{
			return default(float);
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x1D387F8", Offset = "0x1D387F8", VA = "0x1D387F8", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x200073B")]
	public static class MarchingCubesTables
	{
		[Token(Token = "0x4002F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] ConstEdgeTable;

		[Token(Token = "0x4002F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int[] ConstTriTable;

		[Token(Token = "0x4002F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector3[] ConstCorners;
	}
	[Token(Token = "0x200073C")]
	public class NativeCollectionsPool : ScriptableObject, IDisposable
	{
		[Token(Token = "0x4002F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NativeCollectionsPool instance;

		[Token(Token = "0x4002F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MarchingCubesJob.Out? mcOut;

		[Token(Token = "0x4002F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NativeArray<int>? mcEdgeTable;

		[Token(Token = "0x4002F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NativeArray<int>? mcTriTable;

		[Token(Token = "0x4002F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<Vector3>? mcCorners;

		[Token(Token = "0x17000681")]
		public static NativeCollectionsPool Instance
		{
			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x1D3A9EC", Offset = "0x1D3A9EC", VA = "0x1D3A9EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x1D3AAB0", Offset = "0x1D3AAB0", VA = "0x1D3AAB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x1D3AAB4", Offset = "0x1D3AAB4", VA = "0x1D3AAB4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x1D3AC6C", Offset = "0x1D3AC6C", VA = "0x1D3AC6C")]
		internal MarchingCubesJob.Out GetMCOut()
		{
			return default(MarchingCubesJob.Out);
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0x1D3AD54", Offset = "0x1D3AD54", VA = "0x1D3AD54")]
		internal NativeArray<int> GetMCEdgeTable()
		{
			return default(NativeArray<int>);
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0x1D3AE58", Offset = "0x1D3AE58", VA = "0x1D3AE58")]
		internal NativeArray<int> GetMCTriTable()
		{
			return default(NativeArray<int>);
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0x1D3AF5C", Offset = "0x1D3AF5C", VA = "0x1D3AF5C")]
		internal NativeArray<Vector3> GetMCCorners()
		{
			return default(NativeArray<Vector3>);
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0x1D3B060", Offset = "0x1D3B060", VA = "0x1D3B060")]
		public NativeCollectionsPool()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[BurstCompile(CompileSynchronously = true, FloatMode = FloatMode.Fast)]
	public struct VoxelGenerationJob : IJobParallelFor
	{
		[Token(Token = "0x4002F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ChunkAltitude;

		[Token(Token = "0x4002F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SizeVox;

		[Token(Token = "0x4002F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SizeVox2;

		[Token(Token = "0x4002F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<float> Heights;

		[Token(Token = "0x4002F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[WriteOnly]
		public NativeArray<Voxel> Voxels;

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x1D3B068", Offset = "0x1D3B068", VA = "0x1D3B068", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x200073E")]
	[BurstCompile(CompileSynchronously = true, FloatMode = FloatMode.Fast)]
	public struct VoxelKernelModificationJob : IJobParallelFor
	{
		[Token(Token = "0x4002F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SizeVox;

		[Token(Token = "0x4002F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SizeOfMesh;

		[Token(Token = "0x4002F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SizeVox2;

		[Token(Token = "0x4002F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int LowInd;

		[Token(Token = "0x4002F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ActionType Action;

		[Token(Token = "0x4002F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float3 HeightmapScale;

		[Token(Token = "0x4002F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float3 Center;

		[Token(Token = "0x4002F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Radius;

		[Token(Token = "0x4002F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float RadiusWithMargin;

		[Token(Token = "0x4002F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Intensity;

		[Token(Token = "0x4002F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int ChunkAltitude;

		[Token(Token = "0x4002F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int2 CutSize;

		[Token(Token = "0x4002F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> Voxels;

		[Token(Token = "0x4002F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<float> Heights;

		[Token(Token = "0x4002F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<float> VerticalNormals;

		[Token(Token = "0x4002F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[WriteOnly]
		public NativeArray<Voxel> VoxelsOut;

		[Token(Token = "0x4002F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsLBB;

		[Token(Token = "0x4002F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxelsLBF;

		[Token(Token = "0x4002F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxelsLB_;

		[Token(Token = "0x4002F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxels_BB;

		[Token(Token = "0x4002F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxels_BF;

		[Token(Token = "0x4002F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxels_B_;

		[Token(Token = "0x4002F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsRBB;

		[Token(Token = "0x4002F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsRBF;

		[Token(Token = "0x4002F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsRB_;

		[Token(Token = "0x4002F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxelsL_B;

		[Token(Token = "0x4002F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxelsL_F;

		[Token(Token = "0x4002F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsL__;

		[Token(Token = "0x4002F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxels__B;

		[Token(Token = "0x4002F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxels__F;

		[Token(Token = "0x4002F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsR_B;

		[Token(Token = "0x4002F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsR_F;

		[Token(Token = "0x4002F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsR__;

		[Token(Token = "0x4002F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsLUB;

		[Token(Token = "0x4002F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsLUF;

		[Token(Token = "0x4002F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsLU_;

		[Token(Token = "0x4002F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxels_UB;

		[Token(Token = "0x4002F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxels_UF;

		[Token(Token = "0x4002F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxels_U_;

		[Token(Token = "0x4002F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsRUB;

		[Token(Token = "0x4002F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[Unity.Collections.ReadOnly]
		[NativeDisableParallelForRestriction]
		public NativeArray<Voxel> NeighborVoxelsRUF;

		[Token(Token = "0x4002F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<Voxel> NeighborVoxelsRU_;

		[Token(Token = "0x4002F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[NativeDisableParallelForRestriction]
		[WriteOnly]
		public NativeArray<int> Holes;

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0x1D3B0B4", Offset = "0x1D3B0B4", VA = "0x1D3B0B4", Slot = "4")]
		public void Execute(int index)
		{
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x1D3B89C", Offset = "0x1D3B89C", VA = "0x1D3B89C")]
		public void DisposeNeighbors()
		{
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0x1D3B33C", Offset = "0x1D3B33C", VA = "0x1D3B33C")]
		private float2 ComputeSphereDistances(float3 p)
		{
			return default(float2);
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x1D3B3E8", Offset = "0x1D3B3E8", VA = "0x1D3B3E8")]
		private Voxel ApplySmooth(int index, int xi, int yi, int zi, float distance, float flatDistance, float terrainHeightValue)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x1D3B5D0", Offset = "0x1D3B5D0", VA = "0x1D3B5D0")]
		private Voxel ApplySharpen(int index, int xi, int yi, int zi, float distance, float flatDistance, float terrainHeightValue)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x1D3BE7C", Offset = "0x1D3BE7C", VA = "0x1D3BE7C")]
		private float VoxelValue(int x, int y, int z, float weight, ref uint alterationNeighbour)
		{
			return default(float);
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x1D3BE18", Offset = "0x1D3BE18", VA = "0x1D3BE18")]
		private Voxel ComputeAltered(float distance, float flatDistance, Voxel voxel, float voxelValue, uint alterationNeighbour)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0x1D3BDEC", Offset = "0x1D3BDEC", VA = "0x1D3BDEC")]
		private Voxel ComputeUnaltered(float flatDistance, Voxel voxel)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0x1D3BA10", Offset = "0x1D3BA10", VA = "0x1D3BA10")]
		private Voxel GetVoxelAt(int x, int y, int z)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0x1D3BEB8", Offset = "0x1D3BEB8", VA = "0x1D3BEB8")]
		private Voxel GetSafe(NativeArray<Voxel> array, int index)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0x1D3BED0", Offset = "0x1D3BED0", VA = "0x1D3BED0")]
		private Voxel GetVoxelAtDebug(int x, int y, int z)
		{
			return default(Voxel);
		}
	}
	[Token(Token = "0x200073F")]
	[BurstCompile(CompileSynchronously = true, FloatMode = FloatMode.Fast)]
	public struct VoxelModificationJob : IJobParallelFor
	{
		[Token(Token = "0x4002F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int SizeVox;

		[Token(Token = "0x4002F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SizeVox2;

		[Token(Token = "0x4002F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SizeOfMesh;

		[Token(Token = "0x4002F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BrushType Brush;

		[Token(Token = "0x4002F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ActionType Action;

		[Token(Token = "0x4002F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float3 HeightmapScale;

		[Token(Token = "0x4002F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float3 Center;

		[Token(Token = "0x4002F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ConeHeight;

		[Token(Token = "0x4002F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UpsideDown;

		[Token(Token = "0x4002F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Radius;

		[Token(Token = "0x4002F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float RadiusWithMargin;

		[Token(Token = "0x4002F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Intensity;

		[Token(Token = "0x4002F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsTargetIntensity;

		[Token(Token = "0x4002F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int ChunkAltitude;

		[Token(Token = "0x4002F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public uint TextureIndex;

		[Token(Token = "0x4002F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int2 CutSize;

		[Token(Token = "0x4002F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<float> Heights;

		[Token(Token = "0x4002F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<float> VerticalNormals;

		[Token(Token = "0x4002F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NativeArray<Voxel> Voxels;

		[Token(Token = "0x4002F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[NativeDisableParallelForRestriction]
		[WriteOnly]
		public NativeArray<int> Holes;

		[Token(Token = "0x4002F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double coneAngle;

		[Token(Token = "0x4002F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float upsideDownSign;

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0x1D3BF10", Offset = "0x1D3BF10", VA = "0x1D3BF10")]
		public void PostConstruct()
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0x1D3BFAC", Offset = "0x1D3BFAC", VA = "0x1D3BFAC", Slot = "4")]
		public void Execute(int index)
		{
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0x1D3C310", Offset = "0x1D3C310", VA = "0x1D3C310")]
		private float2 ComputeSphereDistances(float3 p)
		{
			return default(float2);
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0x1D3C3BC", Offset = "0x1D3C3BC", VA = "0x1D3C3BC")]
		private float2 ComputeHalfSphereDistances(float3 p)
		{
			return default(float2);
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x1D3C478", Offset = "0x1D3C478", VA = "0x1D3C478")]
		private float2 ComputeCubeDistances(float3 p)
		{
			return default(float2);
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x1D3C554", Offset = "0x1D3C554", VA = "0x1D3C554")]
		private float2 ComputeConeDistances(float3 p)
		{
			return default(float2);
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0x1D3C698", Offset = "0x1D3C698", VA = "0x1D3C698")]
		private Voxel ApplyDigAdd(int index, bool dig, float2 distances, float intensityWeight)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0x1D3C7B0", Offset = "0x1D3C7B0", VA = "0x1D3C7B0")]
		private Voxel ApplyPaint(int index, float distance)
		{
			return default(Voxel);
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x1D3C910", Offset = "0x1D3C910", VA = "0x1D3C910")]
		private Voxel ApplyResetBrush(int index, int xi, int zi, float3 p)
		{
			return default(Voxel);
		}
	}
	[Token(Token = "0x2000740")]
	[BurstCompile(CompileSynchronously = true, FloatMode = FloatMode.Fast)]
	public struct VoxelRefreshJob : IJobParallelFor
	{
		[Token(Token = "0x4002F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ChunkAltitude;

		[Token(Token = "0x4002F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SizeVox;

		[Token(Token = "0x4002F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SizeVox2;

		[Token(Token = "0x4002F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[NativeDisableParallelForRestriction]
		[Unity.Collections.ReadOnly]
		public NativeArray<float> Heights;

		[Token(Token = "0x4002F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativeArray<Voxel> Voxels;

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x1D3CFD0", Offset = "0x1D3CFD0", VA = "0x1D3CFD0", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x2000741")]
	public class ListPool
	{
		[Token(Token = "0x4002F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector4[] Vector4Array;

		[Token(Token = "0x4002F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Vector4> Vector4List;

		[Token(Token = "0x4002F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Vector2> Vector2List1;

		[Token(Token = "0x4002F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Vector2> Vector2List2;

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1D3D028", Offset = "0x1D3D028", VA = "0x1D3D028")]
		public static List<Vector4> ToVector4List(NativeArray<Vector4> src, int length)
		{
			return null;
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1D3D1B4", Offset = "0x1D3D1B4", VA = "0x1D3D1B4")]
		public static void ToVector2Lists(NativeArray<Vector4> src, int length, out List<Vector2> vector2List1, out List<Vector2> vector2List2)
		{
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x1D3D3F4", Offset = "0x1D3D3F4", VA = "0x1D3D3F4")]
		public ListPool()
		{
		}
	}
	[Token(Token = "0x2000742")]
	public struct LoadType
	{
		[Token(Token = "0x4002F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LoadType Minimal;

		[Token(Token = "0x4002FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public static LoadType Minimal_and_LoadVoxels;

		[Token(Token = "0x4002FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static LoadType Minimal_and_LoadVoxels_and_RebuildMeshes;

		[Token(Token = "0x4002FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static LoadType Minimal_and_LoadVoxels_and_SyncVoxelsWithTerrain_and_RebuildMeshes;

		[Token(Token = "0x4002FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool loadVoxels;

		[Token(Token = "0x4002FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private bool rebuildMeshes;

		[Token(Token = "0x4002FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private bool syncVoxelsWithTerrain;

		[Token(Token = "0x17000682")]
		public bool LoadVoxels
		{
			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0x1D3D55C", Offset = "0x1D3D55C", VA = "0x1D3D55C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000683")]
		public bool RebuildMeshes
		{
			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x1D3D564", Offset = "0x1D3D564", VA = "0x1D3D564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000684")]
		public bool SyncVoxelsWithTerrain
		{
			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0x1D3D56C", Offset = "0x1D3D56C", VA = "0x1D3D56C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x1D3D574", Offset = "0x1D3D574", VA = "0x1D3D574", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x1D3D638", Offset = "0x1D3D638", VA = "0x1D3D638")]
		public bool Equals(LoadType other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x1D3D674", Offset = "0x1D3D674", VA = "0x1D3D674", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x1D3D718", Offset = "0x1D3D718", VA = "0x1D3D718", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x1D3D76C", Offset = "0x1D3D76C", VA = "0x1D3D76C")]
		public static bool operator ==(LoadType a, LoadType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x1D3D7A4", Offset = "0x1D3D7A4", VA = "0x1D3D7A4")]
		public static bool operator !=(LoadType a, LoadType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000743")]
	[ExecuteInEditMode]
	public class MicroSplatSync : MonoBehaviour
	{
		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x1D3D8B8", Offset = "0x1D3D8B8", VA = "0x1D3D8B8")]
		public MicroSplatSync()
		{
		}
	}
	[Token(Token = "0x2000744")]
	public struct ModificationArea
	{
		[Token(Token = "0x4002FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool NeedsModification;

		[Token(Token = "0x4002FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3i Min;

		[Token(Token = "0x4002FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3i Max;

		[Token(Token = "0x4002FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 OperationTerrainPosition;
	}
	[Token(Token = "0x2000745")]
	public struct ModificationParameters
	{
		[Token(Token = "0x4002FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4002FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BrushType Brush;

		[Token(Token = "0x4002FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ActionType Action;

		[Token(Token = "0x4002FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TextureIndex;

		[Token(Token = "0x4002FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Opacity;

		[Token(Token = "0x4002FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Size;

		[Token(Token = "0x4002FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool RemoveDetails;

		[Token(Token = "0x4002FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool RemoveTreesInSphere;

		[Token(Token = "0x4002FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float StalagmiteHeight;

		[Token(Token = "0x4002FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool StalagmiteUpsideDown;

		[Token(Token = "0x4002FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool OpacityIsTarget;
	}
	[Token(Token = "0x2000746")]
	[ExecuteInEditMode]
	public class TerrainColliderHoleComponent : MonoBehaviour
	{
		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x1D3D8C0", Offset = "0x1D3D8C0", VA = "0x1D3D8C0")]
		public TerrainColliderHoleComponent()
		{
		}
	}
	[Token(Token = "0x2000747")]
	public enum TerrainMaterialType
	{
		[Token(Token = "0x4002FB6")]
		Standard,
		[Token(Token = "0x4002FB7")]
		HDRP,
		[Token(Token = "0x4002FB8")]
		LWRP,
		[Token(Token = "0x4002FB9")]
		URP,
		[Token(Token = "0x4002FBA")]
		CTS,
		[Token(Token = "0x4002FBB")]
		MicroSplat
	}
	[Token(Token = "0x2000748")]
	public static class TerrainUtils
	{
		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x1D3D8C8", Offset = "0x1D3D8C8", VA = "0x1D3D8C8")]
		public static Vector3i TerrainRelativePositionToHolePosition(TerrainData terrainData, Vector3 terrainRelativePosition)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0x1D3D9D4", Offset = "0x1D3D9D4", VA = "0x1D3D9D4")]
		public static int2 AlphamapPositionToDetailMapPosition(TerrainData terrainData, int x, int y)
		{
			return default(int2);
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x1D3DA5C", Offset = "0x1D3DA5C", VA = "0x1D3DA5C")]
		public static Vector3 UVToWorldPosition(TerrainData tData, Vector3 uvPosition)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000749")]
	public static class Utils
	{
		[Token(Token = "0x200074A")]
		public static class Profiler
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x1D3E1EC", Offset = "0x1D3E1EC", VA = "0x1D3E1EC")]
			[Conditional("DIGGER_PROFILING")]
			public static void BeginSample(string name)
			{
			}

			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x1D3E1F0", Offset = "0x1D3E1F0", VA = "0x1D3E1F0")]
			[Conditional("DIGGER_PROFILING")]
			public static void EndSample()
			{
			}
		}

		[Token(Token = "0x200074B")]
		public static class D
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0x1D3E1F4", Offset = "0x1D3E1F4", VA = "0x1D3E1F4")]
			[Conditional("DIGGER_DEBUGGING")]
			public static void Log(string message)
			{
			}
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0x1D3DACC", Offset = "0x1D3DACC", VA = "0x1D3DACC")]
		public static bool Approximately(Color a, Color b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x1D3A1C4", Offset = "0x1D3A1C4", VA = "0x1D3A1C4")]
		public static bool Approximately(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0x1D37C30", Offset = "0x1D37C30", VA = "0x1D37C30")]
		public static bool Approximately(float3 a, float3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0x1D3DBCC", Offset = "0x1D3DBCC", VA = "0x1D3DBCC")]
		public static float3 Cross(float3 left, float3 right)
		{
			return default(float3);
		}

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0x1D3A29C", Offset = "0x1D3A29C", VA = "0x1D3A29C")]
		public static bool AreColinear(float3 a, float3 b, float3 c)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x1D37D78", Offset = "0x1D37D78", VA = "0x1D37D78")]
		public static float3 Normalize(float3 vec)
		{
			return default(float3);
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0x1D387C4", Offset = "0x1D387C4", VA = "0x1D387C4")]
		public static float BilinearInterpolate(float f00, float f01, float f10, float f11, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0x1D3DBF4", Offset = "0x1D3DBF4", VA = "0x1D3DBF4")]
		public static Vector3 TriangleInterpolate(int2 a, int2 b, int2 c, int2 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0x1D3DCBC", Offset = "0x1D3DCBC", VA = "0x1D3DCBC")]
		public static int2 Min(int2 a, int2 b, int2 c)
		{
			return default(int2);
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x1D3DD88", Offset = "0x1D3DD88", VA = "0x1D3DD88")]
		public static int2 Max(int2 a, int2 b, int2 c)
		{
			return default(int2);
		}

		[Token(Token = "0x6002F54")]
		public static T[] ToArray<T>(NativeArray<T> src, int length) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x1D3DE54", Offset = "0x1D3DE54", VA = "0x1D3DE54")]
		public static byte[] GetBytes(string path)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200074C")]
	public struct Vector2i
	{
		[Token(Token = "0x4002FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4002FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4002FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2i zero;

		[Token(Token = "0x4002FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2i one;

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x1D3E24C", Offset = "0x1D3E24C", VA = "0x1D3E24C")]
		public Vector2i(int x, int y)
		{
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x1D3E254", Offset = "0x1D3E254", VA = "0x1D3E254")]
		public static int DistanceSquared(Vector2i a, Vector2i b)
		{
			return default(int);
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x1D3E270", Offset = "0x1D3E270", VA = "0x1D3E270")]
		public int DistanceSquared(Vector2i v)
		{
			return default(int);
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x1D3E2E8", Offset = "0x1D3E2E8", VA = "0x1D3E2E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x1D3E2F4", Offset = "0x1D3E2F4", VA = "0x1D3E2F4", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x1D3E37C", Offset = "0x1D3E37C", VA = "0x1D3E37C")]
		public bool Equals(Vector2i vector)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x1D3E3A4", Offset = "0x1D3E3A4", VA = "0x1D3E3A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x1D3E5B4", Offset = "0x1D3E5B4", VA = "0x1D3E5B4")]
		public static bool operator ==(Vector2i a, Vector2i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x1D3E5D4", Offset = "0x1D3E5D4", VA = "0x1D3E5D4")]
		public static bool operator !=(Vector2i a, Vector2i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x1D3E5F4", Offset = "0x1D3E5F4", VA = "0x1D3E5F4")]
		public static Vector2i operator -(Vector2i a, Vector2i b)
		{
			return default(Vector2i);
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0x1D3E60C", Offset = "0x1D3E60C", VA = "0x1D3E60C")]
		public static Vector2i operator -(Vector2i a)
		{
			return default(Vector2i);
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0x1D3E61C", Offset = "0x1D3E61C", VA = "0x1D3E61C")]
		public static Vector2i operator +(Vector2i a, Vector2i b)
		{
			return default(Vector2i);
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0x1D3E634", Offset = "0x1D3E634", VA = "0x1D3E634")]
		public static Vector2i operator *(Vector2i a, int b)
		{
			return default(Vector2i);
		}

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0x1D3E648", Offset = "0x1D3E648", VA = "0x1D3E648")]
		public static Vector2i operator *(int b, Vector2i a)
		{
			return default(Vector2i);
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x1D3E660", Offset = "0x1D3E660", VA = "0x1D3E660")]
		public static Vector2i operator /(Vector2i a, int b)
		{
			return default(Vector2i);
		}
	}
	[Token(Token = "0x200074D")]
	public sealed class Vector2iComparer : IEqualityComparer<Vector2i>
	{
		[Token(Token = "0x6002F69")]
		[Address(RVA = "0x1D3E6CC", Offset = "0x1D3E6CC", VA = "0x1D3E6CC", Slot = "5")]
		public int GetHashCode(Vector2i v)
		{
			return default(int);
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0x1D3E6DC", Offset = "0x1D3E6DC", VA = "0x1D3E6DC", Slot = "4")]
		public bool Equals(Vector2i v1, Vector2i v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0x1D3E6FC", Offset = "0x1D3E6FC", VA = "0x1D3E6FC")]
		public Vector2iComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200074E")]
	public struct Vector3i
	{
		[Token(Token = "0x4002FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4002FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4002FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x4002FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3i zero;

		[Token(Token = "0x4002FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3i one;

		[Token(Token = "0x4002FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector3i two;

		[Token(Token = "0x4002FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly Vector3i forward;

		[Token(Token = "0x4002FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Vector3i back;

		[Token(Token = "0x4002FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly Vector3i up;

		[Token(Token = "0x4002FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly Vector3i down;

		[Token(Token = "0x4002FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly Vector3i left;

		[Token(Token = "0x4002FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly Vector3i right;

		[Token(Token = "0x4002FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly Vector3i forward_right;

		[Token(Token = "0x4002FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly Vector3i forward_left;

		[Token(Token = "0x4002FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public static readonly Vector3i forward_up;

		[Token(Token = "0x4002FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly Vector3i forward_down;

		[Token(Token = "0x4002FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static readonly Vector3i back_right;

		[Token(Token = "0x4002FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly Vector3i back_left;

		[Token(Token = "0x4002FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static readonly Vector3i back_up;

		[Token(Token = "0x4002FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static readonly Vector3i back_down;

		[Token(Token = "0x4002FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public static readonly Vector3i up_right;

		[Token(Token = "0x4002FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static readonly Vector3i up_left;

		[Token(Token = "0x4002FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public static readonly Vector3i down_right;

		[Token(Token = "0x4002FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static readonly Vector3i down_left;

		[Token(Token = "0x4002FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public static readonly Vector3i forward_right_up;

		[Token(Token = "0x4002FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static readonly Vector3i forward_right_down;

		[Token(Token = "0x4002FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public static readonly Vector3i forward_left_up;

		[Token(Token = "0x4002FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static readonly Vector3i forward_left_down;

		[Token(Token = "0x4002FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public static readonly Vector3i back_right_up;

		[Token(Token = "0x4002FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static readonly Vector3i back_right_down;

		[Token(Token = "0x4002FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public static readonly Vector3i back_left_up;

		[Token(Token = "0x4002FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static readonly Vector3i back_left_down;

		[Token(Token = "0x4002FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static readonly Vector3i[] directions;

		[Token(Token = "0x4002FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static readonly Vector3i[] allDirections;

		[Token(Token = "0x4002FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static readonly Vector3i[] allDirectionsOrdered;

		[Token(Token = "0x4002FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static readonly Vector3i[] planeDirections;

		[Token(Token = "0x4002FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public static readonly Vector3i[] planeDirectionsStraight;

		[Token(Token = "0x4002FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public static readonly Vector3i[] planeDirectionsStraightDown;

		[Token(Token = "0x17000685")]
		public float MagnitudeSquared
		{
			[Token(Token = "0x6002F7A")]
			[Address(RVA = "0x1D3EB70", Offset = "0x1D3EB70", VA = "0x1D3EB70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000686")]
		public int this[int i]
		{
			[Token(Token = "0x6002F81")]
			[Address(RVA = "0x1D3EF68", Offset = "0x1D3EF68", VA = "0x1D3EF68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002F82")]
			[Address(RVA = "0x1D3F018", Offset = "0x1D3F018", VA = "0x1D3F018")]
			set
			{
			}
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0x1D3E704", Offset = "0x1D3E704", VA = "0x1D3E704")]
		public static int IndexOfDirection(Vector3i direction)
		{
			return default(int);
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x1D3E78C", Offset = "0x1D3E78C", VA = "0x1D3E78C")]
		public static bool AreNeighbours(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x1D3E804", Offset = "0x1D3E804", VA = "0x1D3E804")]
		public static Vector3i GetNeighbourDirection(Vector3i a, Vector3i b)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0x1D378BC", Offset = "0x1D378BC", VA = "0x1D378BC")]
		public Vector3i(int x, int y, int z)
		{
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0x1D3D998", Offset = "0x1D3D998", VA = "0x1D3D998")]
		public Vector3i(float x, float y, float z)
		{
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x1D3E8A4", Offset = "0x1D3E8A4", VA = "0x1D3E8A4")]
		public Vector3i(double x, double y, double z)
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x1D3E8E0", Offset = "0x1D3E8E0", VA = "0x1D3E8E0")]
		public Vector3i(Vector3 v)
		{
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x1D3E91C", Offset = "0x1D3E91C", VA = "0x1D3E91C")]
		public static int DistanceSquared(Vector3i a, Vector3i b)
		{
			return default(int);
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x1D3E940", Offset = "0x1D3E940", VA = "0x1D3E940")]
		public int DistanceSquared(Vector3i v)
		{
			return default(int);
		}

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0x1D3E9C8", Offset = "0x1D3E9C8", VA = "0x1D3E9C8")]
		public static int FlatDistanceSquared(Vector3i a, Vector3i b)
		{
			return default(int);
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x1D3E9DC", Offset = "0x1D3E9DC", VA = "0x1D3E9DC")]
		public int FlatDistanceSquared(Vector3i v)
		{
			return default(int);
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x1D3EA54", Offset = "0x1D3EA54", VA = "0x1D3EA54")]
		public static float Distance(Vector3i a, Vector3i b)
		{
			return default(float);
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x1D3EA80", Offset = "0x1D3EA80", VA = "0x1D3EA80")]
		public float Distance(Vector3i v)
		{
			return default(float);
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x1D3EB10", Offset = "0x1D3EB10", VA = "0x1D3EB10")]
		public bool IsInCubeArea(Vector3i cubeCenter, int cubeRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x1D3EB8C", Offset = "0x1D3EB8C", VA = "0x1D3EB8C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x1D3EBA0", Offset = "0x1D3EBA0", VA = "0x1D3EBA0", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x1D3EC38", Offset = "0x1D3EC38", VA = "0x1D3EC38")]
		public bool Equals(Vector3i vector)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x1D3EC6C", Offset = "0x1D3EC6C", VA = "0x1D3EC6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x1D3EF08", Offset = "0x1D3EF08", VA = "0x1D3EF08")]
		public static bool operator ==(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x1D3EF38", Offset = "0x1D3EF38", VA = "0x1D3EF38")]
		public static bool operator !=(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x1D3E888", Offset = "0x1D3E888", VA = "0x1D3E888")]
		public static Vector3i operator -(Vector3i a, Vector3i b)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x1D3F0C0", Offset = "0x1D3F0C0", VA = "0x1D3F0C0")]
		public static Vector3i operator -(Vector3i a)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x1D3F0D4", Offset = "0x1D3F0D4", VA = "0x1D3F0D4")]
		public static Vector3i operator +(Vector3i a, Vector3i b)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0x1D3F0F0", Offset = "0x1D3F0F0", VA = "0x1D3F0F0")]
		public static Vector3i operator *(Vector3i a, int b)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0x1D3F108", Offset = "0x1D3F108", VA = "0x1D3F108")]
		public static Vector3i operator *(int b, Vector3i a)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0x1D3F124", Offset = "0x1D3F124", VA = "0x1D3F124")]
		public static Vector3i operator /(Vector3i a, int b)
		{
			return default(Vector3i);
		}

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0x1D3F13C", Offset = "0x1D3F13C", VA = "0x1D3F13C")]
		public static Vector3 operator *(Vector3i a, float b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0x1D3F160", Offset = "0x1D3F160", VA = "0x1D3F160")]
		public static Vector3 operator *(float b, Vector3i a)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0x1D3F184", Offset = "0x1D3F184", VA = "0x1D3F184")]
		public static bool operator <(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x1D3F1B4", Offset = "0x1D3F1B4", VA = "0x1D3F1B4")]
		public static bool operator >(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x1D3F1E4", Offset = "0x1D3F1E4", VA = "0x1D3F1E4")]
		public static bool operator <=(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x1D3F214", Offset = "0x1D3F214", VA = "0x1D3F214")]
		public static bool operator >=(Vector3i a, Vector3i b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x1D3F244", Offset = "0x1D3F244", VA = "0x1D3F244")]
		public static implicit operator Vector3(Vector3i v)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200074F")]
	public sealed class Vector3iComparer : IEqualityComparer<Vector3i>
	{
		[Token(Token = "0x6002F91")]
		[Address(RVA = "0x1D3FEC8", Offset = "0x1D3FEC8", VA = "0x1D3FEC8", Slot = "5")]
		public int GetHashCode(Vector3i v)
		{
			return default(int);
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x1D3FEDC", Offset = "0x1D3FEDC", VA = "0x1D3FEDC", Slot = "4")]
		public bool Equals(Vector3i v1, Vector3i v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x1D3FF0C", Offset = "0x1D3FF0C", VA = "0x1D3FF0C")]
		public Vector3iComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000750")]
	public class VersionInfo
	{
		[Token(Token = "0x4002FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long Version;

		[Token(Token = "0x4002FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3i> AliveChunks;

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x1D3FF14", Offset = "0x1D3FF14", VA = "0x1D3FF14")]
		public VersionInfo()
		{
		}
	}
	[Token(Token = "0x2000751")]
	public struct Voxel
	{
		[Token(Token = "0x4002FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Value;

		[Token(Token = "0x4002FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private uint properties;

		[Token(Token = "0x4002FEA")]
		public const uint Unaltered = 0u;

		[Token(Token = "0x4002FEB")]
		public const uint OnSurface = 1u;

		[Token(Token = "0x4002FEC")]
		public const uint NearBelowSurface = 2u;

		[Token(Token = "0x4002FED")]
		public const uint NearAboveSurface = 3u;

		[Token(Token = "0x4002FEE")]
		public const uint FarBelowSurface = 4u;

		[Token(Token = "0x4002FEF")]
		public const uint FarAboveSurface = 5u;

		[Token(Token = "0x17000687")]
		public uint FirstTextureIndex
		{
			[Token(Token = "0x6002F96")]
			[Address(RVA = "0x1D385B8", Offset = "0x1D385B8", VA = "0x1D385B8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x1D3FF1C", Offset = "0x1D3FF1C", VA = "0x1D3FF1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000688")]
		public uint SecondTextureIndex
		{
			[Token(Token = "0x6002F98")]
			[Address(RVA = "0x1D385C4", Offset = "0x1D385C4", VA = "0x1D385C4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x1D3FF38", Offset = "0x1D3FF38", VA = "0x1D3FF38")]
			set
			{
			}
		}

		[Token(Token = "0x17000689")]
		private uint TextureLerp
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x1D3FF78", Offset = "0x1D3FF78", VA = "0x1D3FF78")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x1D3FF58", Offset = "0x1D3FF58", VA = "0x1D3FF58")]
			set
			{
			}
		}

		[Token(Token = "0x1700068A")]
		private uint WetnessWeight
		{
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0x1D3FFA4", Offset = "0x1D3FFA4", VA = "0x1D3FFA4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0x1D3FF84", Offset = "0x1D3FF84", VA = "0x1D3FF84")]
			set
			{
			}
		}

		[Token(Token = "0x1700068B")]
		private uint PuddlesWeight
		{
			[Token(Token = "0x6002F9E")]
			[Address(RVA = "0x1D3FFD0", Offset = "0x1D3FFD0", VA = "0x1D3FFD0")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0x1D3FFB0", Offset = "0x1D3FFB0", VA = "0x1D3FFB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700068C")]
		private uint StreamsWeight
		{
			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0x1D3FFFC", Offset = "0x1D3FFFC", VA = "0x1D3FFFC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0x1D3FFDC", Offset = "0x1D3FFDC", VA = "0x1D3FFDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700068D")]
		private uint LavaWeight
		{
			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0x1D40028", Offset = "0x1D40028", VA = "0x1D40028")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002FA1")]
			[Address(RVA = "0x1D40008", Offset = "0x1D40008", VA = "0x1D40008")]
			set
			{
			}
		}

		[Token(Token = "0x1700068E")]
		public uint Alteration
		{
			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0x1D37B38", Offset = "0x1D37B38", VA = "0x1D37B38")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0x1D3B864", Offset = "0x1D3B864", VA = "0x1D3B864")]
			set
			{
			}
		}

		[Token(Token = "0x1700068F")]
		public float NormalizedTextureLerp
		{
			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0x1D385D0", Offset = "0x1D385D0", VA = "0x1D385D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0x1D40034", Offset = "0x1D40034", VA = "0x1D40034")]
			set
			{
			}
		}

		[Token(Token = "0x17000690")]
		public float NormalizedWetnessWeight
		{
			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0x1D38754", Offset = "0x1D38754", VA = "0x1D38754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0x1D3CB70", Offset = "0x1D3CB70", VA = "0x1D3CB70")]
			set
			{
			}
		}

		[Token(Token = "0x17000691")]
		public float NormalizedPuddlesWeight
		{
			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x1D38770", Offset = "0x1D38770", VA = "0x1D38770")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0x1D3CC88", Offset = "0x1D3CC88", VA = "0x1D3CC88")]
			set
			{
			}
		}

		[Token(Token = "0x17000692")]
		public float NormalizedStreamsWeight
		{
			[Token(Token = "0x6002FAC")]
			[Address(RVA = "0x1D3878C", Offset = "0x1D3878C", VA = "0x1D3878C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x1D3CDA0", Offset = "0x1D3CDA0", VA = "0x1D3CDA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000693")]
		public float NormalizedLavaWeight
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x1D387A8", Offset = "0x1D387A8", VA = "0x1D387A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x1D3CEB8", Offset = "0x1D3CEB8", VA = "0x1D3CEB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000694")]
		public bool IsInside
		{
			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x1D3A08C", Offset = "0x1D3A08C", VA = "0x1D3A08C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000695")]
		public bool IsAlteredNearBelowSurface
		{
			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x1D3B874", Offset = "0x1D3B874", VA = "0x1D3B874")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000696")]
		public bool IsAlteredNearAboveSurface
		{
			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0x1D3B888", Offset = "0x1D3B888", VA = "0x1D3B888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000697")]
		public bool IsAlteredFarOrNearSurface
		{
			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x1D3BDD8", Offset = "0x1D3BDD8", VA = "0x1D3BDD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000698")]
		public bool IsAlteredFarSurface
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0x1D3B850", Offset = "0x1D3B850", VA = "0x1D3B850")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x1D3B0A8", Offset = "0x1D3B0A8", VA = "0x1D3B0A8")]
		public Voxel(float value)
		{
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x1D3CA54", Offset = "0x1D3CA54", VA = "0x1D3CA54")]
		public void AddTexture(uint textureIndex, float intensity)
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x1D3CAF4", Offset = "0x1D3CAF4", VA = "0x1D3CAF4")]
		public void SetTexture(uint textureIndex, float intensity)
		{
		}
	}
	[Token(Token = "0x2000752")]
	public class VoxelChunk : MonoBehaviour
	{
		[Token(Token = "0x4002FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DiggerSystem digger;

		[Token(Token = "0x4002FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int sizeVox;

		[Token(Token = "0x4002FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int sizeOfMesh;

		[Token(Token = "0x4002FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3i chunkPosition;

		[Token(Token = "0x4002FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3i voxelPosition;

		[Token(Token = "0x4002FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 worldPosition;

		[Token(Token = "0x4002FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private ChunkTriggerBounds bounds;

		[NonSerialized]
		[Token(Token = "0x4002FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Voxel[] voxelArray;

		[NonSerialized]
		[Token(Token = "0x4002FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] heightArray;

		[NonSerialized]
		[Token(Token = "0x4002FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] verticalNormalArray;

		[NonSerialized]
		[Token(Token = "0x4002FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] alphamapArray;

		[NonSerialized]
		[Token(Token = "0x4002FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int3 alphamapArraySize;

		[NonSerialized]
		[Token(Token = "0x4002FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int2 alphamapArrayOrigin;

		[NonSerialized]
		[Token(Token = "0x4002FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Voxel[] voxelArrayBeforeSmooth;

		[Token(Token = "0x17000699")]
		public ChunkTriggerBounds TriggerBounds
		{
			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x1D40150", Offset = "0x1D40150", VA = "0x1D40150")]
			get
			{
				return default(ChunkTriggerBounds);
			}
		}

		[Token(Token = "0x1700069A")]
		public bool IsLoaded
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0x1D40168", Offset = "0x1D40168", VA = "0x1D40168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700069B")]
		public Vector3i ChunkPosition
		{
			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x1D40188", Offset = "0x1D40188", VA = "0x1D40188")]
			get
			{
				return default(Vector3i);
			}
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0x1D40198", Offset = "0x1D40198", VA = "0x1D40198")]
		internal static VoxelChunk Create(DiggerSystem digger, Chunk chunk)
		{
			return null;
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x1D40984", Offset = "0x1D40984", VA = "0x1D40984")]
		private static void FeedHeights(DiggerSystem digger, Vector3i chunkVoxelPosition, ref float[] heightArray, ref float[] verticalNormalArray)
		{
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0x1D40BE4", Offset = "0x1D40BE4", VA = "0x1D40BE4")]
		private static void GenerateVoxels(DiggerSystem digger, float[] heightArray, int chunkAltitude, ref Voxel[] voxelArray)
		{
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x1D40E00", Offset = "0x1D40E00", VA = "0x1D40E00")]
		public void RefreshVoxels()
		{
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x1D40FB0", Offset = "0x1D40FB0", VA = "0x1D40FB0")]
		public void DoOperation(BrushType brush, ActionType action, float intensity, Vector3 position, float radius, float coneHeight, bool upsideDown, int textureIndex, bool cutDetails, bool isTargetIntensity)
		{
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x1D41548", Offset = "0x1D41548", VA = "0x1D41548")]
		public void DoKernelOperation(ActionType action, float intensity, Vector3 position, float radius, bool cutDetails, int textureIndex)
		{
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0x1D422A0", Offset = "0x1D422A0", VA = "0x1D422A0")]
		public bool HasAlteredVoxels()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x1D423BC", Offset = "0x1D423BC", VA = "0x1D423BC")]
		public Mesh BuildVisualMesh(int lod)
		{
			return null;
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0x1D423CC", Offset = "0x1D423CC", VA = "0x1D423CC")]
		private Mesh BuildMesh(int lod, float isovalue, bool alteredOnly, bool colliderMesh)
		{
			return null;
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x1D42874", Offset = "0x1D42874", VA = "0x1D42874")]
		private static Mesh ToMeshSimple(MarchingCubesJob.Out o, int vertexCount, int triangleCount)
		{
			return null;
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0x1D429D0", Offset = "0x1D429D0", VA = "0x1D429D0")]
		private Mesh ToMesh(MarchingCubesJob.Out o, int vertexCount, int triangleCount)
		{
			return null;
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x1D42E6C", Offset = "0x1D42E6C", VA = "0x1D42E6C")]
		private Bounds GetBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0x1D42AF0", Offset = "0x1D42AF0", VA = "0x1D42AF0")]
		private void AddVertexData(Mesh mesh, MarchingCubesJob.Out o, int vertexCount, int triangleCount, TerrainData tData)
		{
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0x1D42EAC", Offset = "0x1D42EAC", VA = "0x1D42EAC")]
		private void RecordUndoIfNeeded()
		{
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0x1D42EB0", Offset = "0x1D42EB0", VA = "0x1D42EB0")]
		public void Persist()
		{
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x1D403F8", Offset = "0x1D403F8", VA = "0x1D403F8")]
		public void Load()
		{
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x1D433E8", Offset = "0x1D433E8", VA = "0x1D433E8")]
		private void FeedAlphamaps()
		{
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x1D437C0", Offset = "0x1D437C0", VA = "0x1D437C0")]
		internal void PrepareKernelOperation()
		{
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0x1D4367C", Offset = "0x1D4367C", VA = "0x1D4367C")]
		private static void ReadVoxelFile(int sizeVox, byte[] rawBytes, ref Voxel[] voxelArray)
		{
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x1D42050", Offset = "0x1D42050", VA = "0x1D42050")]
		private static NativeArray<Voxel> LoadVoxels(DiggerSystem digger, Vector3i chunkPosition)
		{
			return default(NativeArray<Voxel>);
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x1D437CC", Offset = "0x1D437CC", VA = "0x1D437CC")]
		public VoxelChunk()
		{
		}
	}
}
namespace Digger.Test
{
	[Token(Token = "0x2000754")]
	public class DiggerPhysicsTester : MonoBehaviour
	{
		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0x1D4385C", Offset = "0x1D4385C", VA = "0x1D4385C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x1D43D5C", Offset = "0x1D43D5C", VA = "0x1D43D5C")]
		public DiggerPhysicsTester()
		{
		}
	}
	[Token(Token = "0x2000755")]
	public class PhysicsTest
	{
		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x1CD7F80", Offset = "0x1CD7F80", VA = "0x1CD7F80")]
		private void Foo()
		{
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x1CD8764", Offset = "0x1CD8764", VA = "0x1CD8764")]
		public PhysicsTest()
		{
		}
	}
}
namespace Digger.TerrainCutters
{
	[Token(Token = "0x2000756")]
	public struct CutEntry
	{
		[Token(Token = "0x4003000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int X;

		[Token(Token = "0x4003001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Z;

		[Token(Token = "0x4003002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte RemoveDetailsOnly;

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x1CD876C", Offset = "0x1CD876C", VA = "0x1CD876C")]
		public CutEntry(int x, int z, bool removeDetailsOnly)
		{
		}
	}
	[Token(Token = "0x2000757")]
	public abstract class TerrainCutter : MonoBehaviour
	{
		[Token(Token = "0x4003003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mustApply;

		[Token(Token = "0x4003004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mustPersist;

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x1CD877C", Offset = "0x1CD877C", VA = "0x1CD877C")]
		public static TerrainCutter Create(Terrain terrain, DiggerSystem digger)
		{
			return null;
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x1CD880C", Offset = "0x1CD880C", VA = "0x1CD880C")]
		public static bool IsGoodVersion(TerrainCutter cutter)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x1CD8884", Offset = "0x1CD8884", VA = "0x1CD8884")]
		public void Apply(bool persist)
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x1CD88E4", Offset = "0x1CD88E4", VA = "0x1CD88E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FDB")]
		public abstract void Refresh();

		[Token(Token = "0x6002FDC")]
		protected abstract void ApplyInternal(bool persist);

		[Token(Token = "0x6002FDD")]
		public abstract void LoadFrom(string path);

		[Token(Token = "0x6002FDE")]
		public abstract void SaveTo(string path);

		[Token(Token = "0x6002FDF")]
		public abstract void Clear();

		[Token(Token = "0x6002FE0")]
		public abstract void OnEnterPlayMode();

		[Token(Token = "0x6002FE1")]
		public abstract void OnExitPlayMode();

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x1CD8910", Offset = "0x1CD8910", VA = "0x1CD8910")]
		protected TerrainCutter()
		{
		}
	}
	[Token(Token = "0x2000758")]
	[DefaultExecutionOrder(-11)]
	public class TerrainCutter20193 : TerrainCutter
	{
		[Token(Token = "0x2000759")]
		private struct DelayedHoles
		{
			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int XBase;

			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int YBase;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool[,] Holes;
		}

		[Token(Token = "0x4003005")]
		private const int LargeFileBufferSize = 32768;

		[Token(Token = "0x4003006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DiggerSystem digger;

		[Token(Token = "0x4003007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TerrainData terrainData;

		[Token(Token = "0x4003008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool needsSync;

		[Token(Token = "0x4003009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int holesResolution;

		[Token(Token = "0x400300A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int sizeOfMesh;

		[Token(Token = "0x400300B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int voxResolution;

		[Token(Token = "0x400300C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int sizeOfMeshHoles;

		[Token(Token = "0x400300D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<Vector2i, bool[,]> holesPerChunk;

		[Token(Token = "0x400300E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Queue<DelayedHoles> delayedHolesToApply;

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x1CD8918", Offset = "0x1CD8918", VA = "0x1CD8918", Slot = "9")]
		public override void OnEnterPlayMode()
		{
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x1CD8980", Offset = "0x1CD8980", VA = "0x1CD8980", Slot = "10")]
		public override void OnExitPlayMode()
		{
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x1CD8784", Offset = "0x1CD8784", VA = "0x1CD8784")]
		public static TerrainCutter20193 CreateInstance(DiggerSystem digger)
		{
			return null;
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x1CD89E8", Offset = "0x1CD89E8", VA = "0x1CD89E8", Slot = "4")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x1CD8B58", Offset = "0x1CD8B58", VA = "0x1CD8B58")]
		private bool[,] GetCreateHoles(Vector2i chunkPosition, Vector3i voxelPosition)
		{
			return null;
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x1CD8C2C", Offset = "0x1CD8C2C", VA = "0x1CD8C2C")]
		public void Cut(NativeArray<int> chunkHoles, Vector3i voxelPosition, Vector3i chunkPosition)
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x1CD8E50", Offset = "0x1CD8E50", VA = "0x1CD8E50")]
		public void UnCut(NativeArray<int> chunkHoles, Vector3i voxelPosition, Vector3i chunkPosition)
		{
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x1CD8FA0", Offset = "0x1CD8FA0", VA = "0x1CD8FA0", Slot = "5")]
		protected override void ApplyInternal(bool persist)
		{
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x1CD9090", Offset = "0x1CD9090", VA = "0x1CD9090", Slot = "6")]
		public override void LoadFrom(string path)
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x1CD94DC", Offset = "0x1CD94DC", VA = "0x1CD94DC", Slot = "7")]
		public override void SaveTo(string path)
		{
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x1CD98C4", Offset = "0x1CD98C4", VA = "0x1CD98C4", Slot = "8")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x1CD98C8", Offset = "0x1CD98C8", VA = "0x1CD98C8")]
		public TerrainCutter20193()
		{
		}
	}
	[Token(Token = "0x200075A")]
	[DefaultExecutionOrder(-11)]
	public class TerrainCutterLegacy : TerrainCutter
	{
		[Token(Token = "0x4003012")]
		private const int LargeFileBufferSize = 32768;

		[Token(Token = "0x4003013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DiggerSystem digger;

		[Token(Token = "0x4003014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D transparencyMap;

		[Token(Token = "0x4003015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D transparencyMapBackup;

		[Token(Token = "0x4003016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[][,] detailMaps;

		[Token(Token = "0x4003017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TransparencyMapProperty;

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x1CD9954", Offset = "0x1CD9954", VA = "0x1CD9954", Slot = "9")]
		public override void OnEnterPlayMode()
		{
		}

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x1CD9958", Offset = "0x1CD9958", VA = "0x1CD9958", Slot = "10")]
		public override void OnExitPlayMode()
		{
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x1CD995C", Offset = "0x1CD995C", VA = "0x1CD995C")]
		public static TerrainCutterLegacy CreateInstance(Terrain terrain, DiggerSystem digger)
		{
			return null;
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x1CD9A50", Offset = "0x1CD9A50", VA = "0x1CD9A50")]
		private Texture2D CreateNewTransparencyMap()
		{
			return null;
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x1CD9BB4", Offset = "0x1CD9BB4", VA = "0x1CD9BB4", Slot = "4")]
		public override void Refresh()
		{
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x1CD9C6C", Offset = "0x1CD9C6C", VA = "0x1CD9C6C")]
		private void GrabDetailMaps()
		{
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x1CD9DBC", Offset = "0x1CD9DBC", VA = "0x1CD9DBC")]
		private void CutDetailMaps(TerrainData tData, int x, int z)
		{
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x1CD9F4C", Offset = "0x1CD9F4C", VA = "0x1CD9F4C")]
		public void Cut(CutEntry cutEntry, bool cutDetails)
		{
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x1CDA000", Offset = "0x1CDA000", VA = "0x1CDA000")]
		public void UnCut(int x, int z)
		{
		}

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x1CDA02C", Offset = "0x1CDA02C", VA = "0x1CDA02C", Slot = "5")]
		protected override void ApplyInternal(bool persist)
		{
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x1CDA0F8", Offset = "0x1CDA0F8", VA = "0x1CDA0F8", Slot = "6")]
		public override void LoadFrom(string path)
		{
		}

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x1CDAD00", Offset = "0x1CDAD00", VA = "0x1CDAD00", Slot = "7")]
		public override void SaveTo(string path)
		{
		}

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x1CDB828", Offset = "0x1CDB828", VA = "0x1CDB828", Slot = "8")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x1CDB82C", Offset = "0x1CDB82C", VA = "0x1CDB82C")]
		private void Persist()
		{
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x1CDB830", Offset = "0x1CDB830", VA = "0x1CDB830")]
		private void SetCTSCutoutMask(Terrain terrain, Texture2D cutoutMask)
		{
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x1CDB834", Offset = "0x1CDB834", VA = "0x1CDB834")]
		private void SetMicroSplatAlphaHoleTexture(Terrain terrain, Texture2D alphaHoleTexture)
		{
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x1CDB838", Offset = "0x1CDB838", VA = "0x1CDB838")]
		public TerrainCutterLegacy()
		{
		}
	}
}
namespace Digger.HeightFeeders
{
	[Token(Token = "0x200075B")]
	public class TerrainHeightFeeder : IHeightFeeder
	{
		[Token(Token = "0x4003018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly TerrainData terrainData;

		[Token(Token = "0x4003019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int resolution;

		[Token(Token = "0x400301A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly float resolutionInv;

		[Token(Token = "0x400301B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float toUVs;

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x1CDB8A8", Offset = "0x1CDB8A8", VA = "0x1CDB8A8")]
		public TerrainHeightFeeder(TerrainData terrainData, int resolution)
		{
		}

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x1CDB92C", Offset = "0x1CDB92C", VA = "0x1CDB92C", Slot = "4")]
		public float GetHeight(int x, int z)
		{
			return default(float);
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x1CDBA64", Offset = "0x1CDBA64", VA = "0x1CDBA64", Slot = "5")]
		public float GetVerticalNormal(int x, int z)
		{
			return default(float);
		}
	}
}
namespace Battlehub.Utils
{
	[Token(Token = "0x200075C")]
	public class EditorStopwatch
	{
		[Token(Token = "0x400301C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EditorStopwatch Main;

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x1CDBAA0", Offset = "0x1CDBAA0", VA = "0x1CDBAA0")]
		static EditorStopwatch()
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x1CDBB18", Offset = "0x1CDBB18", VA = "0x1CDBB18")]
		public void Start()
		{
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x1CDBB1C", Offset = "0x1CDBB1C", VA = "0x1CDBB1C")]
		public void Stop(string output)
		{
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x1CDBB10", Offset = "0x1CDBB10", VA = "0x1CDBB10")]
		public EditorStopwatch()
		{
		}
	}
	[Token(Token = "0x200075D")]
	public class Vector3AnimationInfo : AnimationInfo<object, Vector3>
	{
		[Token(Token = "0x6003008")]
		[Address(RVA = "0x1CDBB20", Offset = "0x1CDBB20", VA = "0x1CDBB20")]
		public Vector3AnimationInfo(Vector3 from, Vector3 to, float duration, Func<float, float> easingFunction, AnimationCallback<object, Vector3> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x1CDBBE8", Offset = "0x1CDBBE8", VA = "0x1CDBBE8", Slot = "7")]
		protected override Vector3 Lerp(Vector3 from, Vector3 to, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200075E")]
	public class FloatAnimationInfo : AnimationInfo<object, float>
	{
		[Token(Token = "0x600300A")]
		[Address(RVA = "0x1CDBC24", Offset = "0x1CDBC24", VA = "0x1CDBC24")]
		public FloatAnimationInfo(float from, float to, float duration, Func<float, float> easingFunction, AnimationCallback<object, float> callback, [Optional] object target)
		{
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x1CDBCBC", Offset = "0x1CDBCBC", VA = "0x1CDBCBC", Slot = "7")]
		protected override float Lerp(float from, float to, float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200075F")]
	public delegate void AnimationCallback<TObj, TValue>(TObj obj, TValue value, float t, bool completed);
	[Token(Token = "0x2000760")]
	public abstract class AnimationInfo<TObj, TValue> : IAnimationInfo
	{
		[Token(Token = "0x400301D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_duration;

		[Token(Token = "0x400301E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_t;

		[Token(Token = "0x400301F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TObj m_target;

		[Token(Token = "0x4003020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue m_from;

		[Token(Token = "0x4003021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue m_to;

		[Token(Token = "0x4003022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AnimationCallback<TObj, TValue> m_callback;

		[Token(Token = "0x4003023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<float, float> m_easingFunction;

		[Token(Token = "0x1700069C")]
		private float Battlehub.Utils.IAnimationInfo.Duration
		{
			[Token(Token = "0x600301D")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069D")]
		private float Battlehub.Utils.IAnimationInfo.T
		{
			[Token(Token = "0x600301E")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600301F")]
			set
			{
			}
		}

		[Token(Token = "0x6003010")]
		public static float EaseLinear(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003011")]
		public static float EaseInQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003012")]
		public static float EaseOutQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003013")]
		public static float EaseInOutQuad(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003014")]
		public static float EaseInCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003015")]
		public static float EaseOutCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003016")]
		public static float EaseInOutCubic(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003017")]
		public static float EaseInQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003018")]
		public static float EaseOutQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003019")]
		public static float EaseInOutQuart(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600301A")]
		public static float ElasticEaseIn(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600301B")]
		public static float ElasticEaseOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600301C")]
		public static float ElasticEaseInOut(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6003020")]
		protected abstract TValue Lerp(TValue from, TValue to, float t);

		[Token(Token = "0x6003021")]
		public AnimationInfo(TValue from, TValue to, float duration, Func<float, float> easingFunction, AnimationCallback<TObj, TValue> callback, TObj target)
		{
		}
	}
	[Token(Token = "0x2000761")]
	public interface IAnimationInfo
	{
		[Token(Token = "0x1700069E")]
		float Duration
		{
			[Token(Token = "0x6003022")]
			get;
		}

		[Token(Token = "0x1700069F")]
		float T
		{
			[Token(Token = "0x6003023")]
			get;
			[Token(Token = "0x6003024")]
			set;
		}
	}
	[Token(Token = "0x2000762")]
	[ExecuteInEditMode]
	public class Run : MonoBehaviour
	{
		[Token(Token = "0x4003024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Run m_instance;

		[Token(Token = "0x4003025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IAnimationInfo> m_animations;

		[Token(Token = "0x170006A0")]
		public static Run Instance
		{
			[Token(Token = "0x6003025")]
			[Address(RVA = "0x1CDBCD4", Offset = "0x1CDBCD4", VA = "0x1CDBCD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0x1CDBD1C", Offset = "0x1CDBD1C", VA = "0x1CDBD1C")]
		public void Animation(IAnimationInfo animation)
		{
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x1CDBE04", Offset = "0x1CDBE04", VA = "0x1CDBE04")]
		public void Remove(IAnimationInfo animation)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x1CDBE5C", Offset = "0x1CDBE5C", VA = "0x1CDBE5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x1CDBF98", Offset = "0x1CDBF98", VA = "0x1CDBF98")]
		private void Update()
		{
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x1CDC200", Offset = "0x1CDC200", VA = "0x1CDC200")]
		public Run()
		{
		}
	}
}
namespace Battlehub.UIControls
{
	[Token(Token = "0x2000763")]
	public class ItemContainer : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x4003026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isSelected;

		[Token(Token = "0x170006A1")]
		public virtual bool IsSelected
		{
			[Token(Token = "0x600302F")]
			[Address(RVA = "0x1CDC4F0", Offset = "0x1CDC4F0", VA = "0x1CDC4F0", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003030")]
			[Address(RVA = "0x1CDC4F8", Offset = "0x1CDC4F8", VA = "0x1CDC4F8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170006A2")]
		public int Index
		{
			[Token(Token = "0x6003031")]
			[Address(RVA = "0x1CDC5C8", Offset = "0x1CDC5C8", VA = "0x1CDC5C8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003032")]
			[Address(RVA = "0x1CDC5D0", Offset = "0x1CDC5D0", VA = "0x1CDC5D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		public object Item
		{
			[Token(Token = "0x6003033")]
			[Address(RVA = "0x1CDC5D8", Offset = "0x1CDC5D8", VA = "0x1CDC5D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003034")]
			[Address(RVA = "0x1CDC5E0", Offset = "0x1CDC5E0", VA = "0x1CDC5E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event EventHandler Selected
		{
			[Token(Token = "0x600302B")]
			[Address(RVA = "0x1CDC208", Offset = "0x1CDC208", VA = "0x1CDC208")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600302C")]
			[Address(RVA = "0x1CDC2C0", Offset = "0x1CDC2C0", VA = "0x1CDC2C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public static event EventHandler Unselected
		{
			[Token(Token = "0x600302D")]
			[Address(RVA = "0x1CDC378", Offset = "0x1CDC378", VA = "0x1CDC378")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600302E")]
			[Address(RVA = "0x1CDC434", Offset = "0x1CDC434", VA = "0x1CDC434")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x1CDC5E8", Offset = "0x1CDC5E8", VA = "0x1CDC5E8", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x1CDC5F8", Offset = "0x1CDC5F8", VA = "0x1CDC5F8")]
		public ItemContainer()
		{
		}
	}
	[Token(Token = "0x2000764")]
	public class SelectionChangedEventArgs : EventArgs
	{
		[Token(Token = "0x170006A4")]
		public object[] OldItems
		{
			[Token(Token = "0x6003037")]
			[Address(RVA = "0x1CDC600", Offset = "0x1CDC600", VA = "0x1CDC600")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003038")]
			[Address(RVA = "0x1CDC608", Offset = "0x1CDC608", VA = "0x1CDC608")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A5")]
		public int[] OldIndices
		{
			[Token(Token = "0x6003039")]
			[Address(RVA = "0x1CDC610", Offset = "0x1CDC610", VA = "0x1CDC610")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600303A")]
			[Address(RVA = "0x1CDC618", Offset = "0x1CDC618", VA = "0x1CDC618")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A6")]
		public object[] NewItems
		{
			[Token(Token = "0x600303B")]
			[Address(RVA = "0x1CDC620", Offset = "0x1CDC620", VA = "0x1CDC620")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600303C")]
			[Address(RVA = "0x1CDC628", Offset = "0x1CDC628", VA = "0x1CDC628")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A7")]
		public int[] NewIndices
		{
			[Token(Token = "0x600303D")]
			[Address(RVA = "0x1CDC630", Offset = "0x1CDC630", VA = "0x1CDC630")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600303E")]
			[Address(RVA = "0x1CDC638", Offset = "0x1CDC638", VA = "0x1CDC638")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006A8")]
		public object OldItem
		{
			[Token(Token = "0x600303F")]
			[Address(RVA = "0x1CDC640", Offset = "0x1CDC640", VA = "0x1CDC640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A9")]
		public int OldIndex
		{
			[Token(Token = "0x6003040")]
			[Address(RVA = "0x1CDC66C", Offset = "0x1CDC66C", VA = "0x1CDC66C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006AA")]
		public object NewItem
		{
			[Token(Token = "0x6003041")]
			[Address(RVA = "0x1CDC698", Offset = "0x1CDC698", VA = "0x1CDC698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AB")]
		public int NewIndex
		{
			[Token(Token = "0x6003042")]
			[Address(RVA = "0x1CDC6C4", Offset = "0x1CDC6C4", VA = "0x1CDC6C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x1CDC6F0", Offset = "0x1CDC6F0", VA = "0x1CDC6F0")]
		public SelectionChangedEventArgs(object[] oldItems, int[] oldIndices, object[] newItems, int[] newIndices)
		{
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x1CDC7A8", Offset = "0x1CDC7A8", VA = "0x1CDC7A8")]
		public SelectionChangedEventArgs(object oldItem, int oldIndex, object newItem, int newIndex)
		{
		}
	}
	[Token(Token = "0x2000765")]
	public class ItemAddEventArgs : EventArgs
	{
		[Token(Token = "0x170006AC")]
		public int Index
		{
			[Token(Token = "0x6003045")]
			[Address(RVA = "0x1CDC964", Offset = "0x1CDC964", VA = "0x1CDC964")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003046")]
			[Address(RVA = "0x1CDC96C", Offset = "0x1CDC96C", VA = "0x1CDC96C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6003047")]
		[Address(RVA = "0x1CDC974", Offset = "0x1CDC974", VA = "0x1CDC974")]
		public ItemAddEventArgs(int index)
		{
		}
	}
	[Token(Token = "0x2000766")]
	public class ItemRemovedEventArgs : EventArgs
	{
		[Token(Token = "0x170006AD")]
		public object Item
		{
			[Token(Token = "0x6003048")]
			[Address(RVA = "0x1CDC9E0", Offset = "0x1CDC9E0", VA = "0x1CDC9E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003049")]
			[Address(RVA = "0x1CDC9E8", Offset = "0x1CDC9E8", VA = "0x1CDC9E8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x1CDC9F0", Offset = "0x1CDC9F0", VA = "0x1CDC9F0")]
		public ItemRemovedEventArgs(object item)
		{
		}
	}
	[Token(Token = "0x2000767")]
	public class ItemDataBindingEventArgs : EventArgs
	{
		[Token(Token = "0x170006AE")]
		public object Item
		{
			[Token(Token = "0x600304B")]
			[Address(RVA = "0x1CDCA64", Offset = "0x1CDCA64", VA = "0x1CDCA64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600304C")]
			[Address(RVA = "0x1CDCA6C", Offset = "0x1CDCA6C", VA = "0x1CDCA6C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006AF")]
		public GameObject ItemPresenter
		{
			[Token(Token = "0x600304D")]
			[Address(RVA = "0x1CDCA74", Offset = "0x1CDCA74", VA = "0x1CDCA74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600304E")]
			[Address(RVA = "0x1CDCA7C", Offset = "0x1CDCA7C", VA = "0x1CDCA7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x1CDCA84", Offset = "0x1CDCA84", VA = "0x1CDCA84")]
		public ItemDataBindingEventArgs(object item, GameObject itemPresenter)
		{
		}
	}
	[Token(Token = "0x2000768")]
	public class CancelEventArgs : EventArgs
	{
		[Token(Token = "0x170006B0")]
		public bool Cancel
		{
			[Token(Token = "0x6003050")]
			[Address(RVA = "0x1CDCB0C", Offset = "0x1CDCB0C", VA = "0x1CDCB0C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003051")]
			[Address(RVA = "0x1CDCB14", Offset = "0x1CDCB14", VA = "0x1CDCB14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x1CDCB20", Offset = "0x1CDCB20", VA = "0x1CDCB20")]
		public CancelEventArgs()
		{
		}
	}
	[Token(Token = "0x2000769")]
	public class ItemsControl : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x4003034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject ItemContainerPrefab;

		[Token(Token = "0x4003035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Panel;

		[Token(Token = "0x4003038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ItemContainer[] m_itemContainers;

		[Token(Token = "0x4003039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IList m_items;

		[Token(Token = "0x400303A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ItemContainer m_selectedItem;

		[Token(Token = "0x170006B1")]
		public IList Items
		{
			[Token(Token = "0x6003057")]
			[Address(RVA = "0x1CDCE38", Offset = "0x1CDCE38", VA = "0x1CDCE38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003058")]
			[Address(RVA = "0x1CDCE40", Offset = "0x1CDCE40", VA = "0x1CDCE40")]
			set
			{
			}
		}

		[Token(Token = "0x170006B2")]
		public object SelectedItem
		{
			[Token(Token = "0x6003059")]
			[Address(RVA = "0x1CDCE64", Offset = "0x1CDCE64", VA = "0x1CDCE64")]
			get
			{
				return null;
			}
			[Token(Token = "0x600305A")]
			[Address(RVA = "0x1CDCEE4", Offset = "0x1CDCEE4", VA = "0x1CDCEE4")]
			set
			{
			}
		}

		[Token(Token = "0x170006B3")]
		public int SelectedIndex
		{
			[Token(Token = "0x600305B")]
			[Address(RVA = "0x1CDD284", Offset = "0x1CDD284", VA = "0x1CDD284")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600305C")]
			[Address(RVA = "0x1CDCFBC", Offset = "0x1CDCFBC", VA = "0x1CDCFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event EventHandler<ItemDataBindingEventArgs> ItemDataBinding
		{
			[Token(Token = "0x6003053")]
			[Address(RVA = "0x1CDCB78", Offset = "0x1CDCB78", VA = "0x1CDCB78")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003054")]
			[Address(RVA = "0x1CDCC28", Offset = "0x1CDCC28", VA = "0x1CDCC28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event EventHandler<SelectionChangedEventArgs> SelectionChanged
		{
			[Token(Token = "0x6003055")]
			[Address(RVA = "0x1CDCCD8", Offset = "0x1CDCCD8", VA = "0x1CDCCD8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x1CDCD88", Offset = "0x1CDCD88", VA = "0x1CDCD88")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0x1CDD30C", Offset = "0x1CDD30C", VA = "0x1CDD30C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600305E")]
		[Address(RVA = "0x1CDD3C8", Offset = "0x1CDD3C8", VA = "0x1CDD3C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600305F")]
		[Address(RVA = "0x1CDD444", Offset = "0x1CDD444", VA = "0x1CDD444")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0x1CDCF00", Offset = "0x1CDCF00", VA = "0x1CDCF00")]
		public int IndexOf(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6003061")]
		[Address(RVA = "0x1CDD4C0", Offset = "0x1CDD4C0", VA = "0x1CDD4C0")]
		private void OnItemSelected(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0x1CDD644", Offset = "0x1CDD644", VA = "0x1CDD644", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x1CDD564", Offset = "0x1CDD564", VA = "0x1CDD564")]
		protected bool CanHandleEvent(object sender)
		{
			return default(bool);
		}

		[Token(Token = "0x6003064")]
		[Address(RVA = "0x1CDD64C", Offset = "0x1CDD64C", VA = "0x1CDD64C", Slot = "5")]
		protected virtual void DataBind()
		{
		}

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x1CDDB54", Offset = "0x1CDDB54", VA = "0x1CDDB54")]
		public ItemsControl()
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class ListBox : ItemsControl
	{
		[Token(Token = "0x6003068")]
		[Address(RVA = "0x1CDDB80", Offset = "0x1CDDB80", VA = "0x1CDDB80")]
		public ListBox()
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class ListBoxItem : ItemContainer
	{
		[Token(Token = "0x400303C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle m_toggle;

		[Token(Token = "0x170006B4")]
		public override bool IsSelected
		{
			[Token(Token = "0x6003069")]
			[Address(RVA = "0x1CDDB88", Offset = "0x1CDDB88", VA = "0x1CDDB88", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600306A")]
			[Address(RVA = "0x1CDDB90", Offset = "0x1CDDB90", VA = "0x1CDDB90", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x1CDDBEC", Offset = "0x1CDDBEC", VA = "0x1CDDBEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x1CDDC88", Offset = "0x1CDDC88", VA = "0x1CDDC88")]
		public ListBoxItem()
		{
		}
	}
}
namespace Battlehub.SplineEditor
{
	[Token(Token = "0x200076D")]
	public static class CurveUtils
	{
		[Token(Token = "0x600306D")]
		[Address(RVA = "0x1CDDC90", Offset = "0x1CDDC90", VA = "0x1CDDC90")]
		public static float GetT(this SplineBase spline, int curveIndex, Vector3 testPoint, float eps = 0.01f)
		{
			return default(float);
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0x1CDDD3C", Offset = "0x1CDDD3C", VA = "0x1CDDD3C")]
		private static float GetT(this SplineBase spline, float tStart, float tEnd, Vector3 testPoint, ref int iter, float eps = 0.01f)
		{
			return default(float);
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x1CDDF2C", Offset = "0x1CDDF2C", VA = "0x1CDDF2C")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x1CDDFD8", Offset = "0x1CDDFD8", VA = "0x1CDDFD8")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200076E")]
	[ExecuteInEditMode]
	public class Spline : SplineBase
	{
		[Token(Token = "0x400303D")]
		private const float Mag = 5f;

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x1CDE088", Offset = "0x1CDE088", VA = "0x1CDE088", Slot = "17")]
		protected override void OnCurveChanged()
		{
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x1CDE090", Offset = "0x1CDE090", VA = "0x1CDE090", Slot = "14")]
		protected override float GetMag()
		{
			return default(float);
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x1CDE098", Offset = "0x1CDE098", VA = "0x1CDE098")]
		private void AppendCurve(float mag, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x1CDE358", Offset = "0x1CDE358", VA = "0x1CDE358")]
		private void PrependCurve(float mag, int curveIndex, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x1CDE6EC", Offset = "0x1CDE6EC", VA = "0x1CDE6EC", Slot = "13")]
		public override void Load(SplineSnapshot snapshot)
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x1CDE778", Offset = "0x1CDE778", VA = "0x1CDE778")]
		public void Insert(int curveIndex)
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x1CDE788", Offset = "0x1CDE788", VA = "0x1CDE788")]
		public void Append()
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x1CDE794", Offset = "0x1CDE794", VA = "0x1CDE794")]
		public void Prepend()
		{
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x1CDE7D8", Offset = "0x1CDE7D8", VA = "0x1CDE7D8")]
		public bool Remove(int curveIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x1CDE08C", Offset = "0x1CDE08C", VA = "0x1CDE08C")]
		private void TrackVersion()
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x1CDEBB8", Offset = "0x1CDEBB8", VA = "0x1CDEBB8")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200076F")]
	public enum ControlPointMode
	{
		[Token(Token = "0x400303F")]
		Free,
		[Token(Token = "0x4003040")]
		Aligned,
		[Token(Token = "0x4003041")]
		Mirrored
	}
	[Token(Token = "0x2000770")]
	public enum ExtendAction
	{
		[Token(Token = "0x4003043")]
		Append,
		[Token(Token = "0x4003044")]
		Prepend,
		[Token(Token = "0x4003045")]
		Insert
	}
	[Serializable]
	[Token(Token = "0x2000771")]
	public struct Vector3Serialziable
	{
		[Token(Token = "0x4003046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x4003047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Y;

		[Token(Token = "0x4003048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Z;

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x1CDEBC8", Offset = "0x1CDEBC8", VA = "0x1CDEBC8")]
		public Vector3Serialziable(float x, float y, float z)
		{
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x1CDEBD4", Offset = "0x1CDEBD4", VA = "0x1CDEBD4")]
		public static implicit operator Vector3(Vector3Serialziable v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600307E")]
		[Address(RVA = "0x1CDEBD8", Offset = "0x1CDEBD8", VA = "0x1CDEBD8")]
		public static implicit operator Vector3Serialziable(Vector3 v)
		{
			return default(Vector3Serialziable);
		}
	}
	[Serializable]
	[Token(Token = "0x2000772")]
	public class Vector3SerialziableArray : List<Vector3Serialziable>
	{
		[Token(Token = "0x600307F")]
		[Address(RVA = "0x1CDEBDC", Offset = "0x1CDEBDC", VA = "0x1CDEBDC")]
		public static implicit operator Vector3[](Vector3SerialziableArray v)
		{
			return null;
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0x1CDECB0", Offset = "0x1CDECB0", VA = "0x1CDECB0")]
		public static implicit operator Vector3SerialziableArray(Vector3[] v)
		{
			return null;
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0x1CDEDD0", Offset = "0x1CDEDD0", VA = "0x1CDEDD0")]
		public Vector3SerialziableArray()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000773")]
	public struct SplineSnapshot
	{
		[Token(Token = "0x4003049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Vector3SerialziableArray m_points;

		[Token(Token = "0x400304A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ControlPointSetting[] m_controlPointSettings;

		[Token(Token = "0x400304B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ControlPointMode[] m_modes;

		[Token(Token = "0x400304C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_loop;

		[Token(Token = "0x170006B5")]
		public int CurveCount
		{
			[Token(Token = "0x6003082")]
			[Address(RVA = "0x1CDEE3C", Offset = "0x1CDEE3C", VA = "0x1CDEE3C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006B6")]
		public Vector3SerialziableArray Points
		{
			[Token(Token = "0x6003083")]
			[Address(RVA = "0x1CDEEA0", Offset = "0x1CDEEA0", VA = "0x1CDEEA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B7")]
		public ControlPointSetting[] ControlPointSettings
		{
			[Token(Token = "0x6003084")]
			[Address(RVA = "0x1CDEEA8", Offset = "0x1CDEEA8", VA = "0x1CDEEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B8")]
		public ControlPointMode[] Modes
		{
			[Token(Token = "0x6003085")]
			[Address(RVA = "0x1CDEEB0", Offset = "0x1CDEEB0", VA = "0x1CDEEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B9")]
		public bool Loop
		{
			[Token(Token = "0x6003086")]
			[Address(RVA = "0x1CDEEB8", Offset = "0x1CDEEB8", VA = "0x1CDEEB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003087")]
		[Address(RVA = "0x1CDEEC0", Offset = "0x1CDEEC0", VA = "0x1CDEEC0")]
		public SplineSnapshot(Vector3[] points, ControlPointSetting[] settings, ControlPointMode[] modes, bool loop)
		{
		}
	}
	[Token(Token = "0x2000774")]
	public delegate void ControlPointChanged(int pointIndex);
	[Serializable]
	[Token(Token = "0x2000775")]
	public struct Wrap
	{
		[Token(Token = "0x400304D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Wrap Null;

		[Token(Token = "0x400304E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Data;

		[Token(Token = "0x400304F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float T1;

		[Token(Token = "0x4003050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float T2;

		[Token(Token = "0x600308C")]
		[Address(RVA = "0x1CDF218", Offset = "0x1CDF218", VA = "0x1CDF218")]
		public Wrap(float data, float t1, float t2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000776")]
	public struct Twist
	{
		[Token(Token = "0x4003051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Twist Null;

		[Token(Token = "0x4003052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Data;

		[Token(Token = "0x4003053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float T1;

		[Token(Token = "0x4003054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float T2;

		[Token(Token = "0x600308E")]
		[Address(RVA = "0x1CDF228", Offset = "0x1CDF228", VA = "0x1CDF228")]
		public Twist(float data, float t1, float t2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000777")]
	public struct Thickness
	{
		[Token(Token = "0x4003055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Thickness Null;

		[Token(Token = "0x4003056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3Serialziable Data;

		[Token(Token = "0x4003057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float T1;

		[Token(Token = "0x4003058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float T2;

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x1CDF238", Offset = "0x1CDF238", VA = "0x1CDF238")]
		public Thickness(Vector3 data, float t1, float t2)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000778")]
	public struct ControlPointSetting
	{
		[Token(Token = "0x4003059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Twist Twist;

		[Token(Token = "0x400305A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Thickness Thickness;

		[Token(Token = "0x400305B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Wrap Wrap;

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x1CDF24C", Offset = "0x1CDF24C", VA = "0x1CDF24C")]
		public ControlPointSetting(Twist twist, Thickness thickness, Wrap wrap)
		{
		}
	}
	[Token(Token = "0x2000779")]
	[ExecuteInEditMode]
	public class SplineBase : MonoBehaviour, IGL
	{
		[Token(Token = "0x400305E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private ControlPointMode[] m_modes;

		[Token(Token = "0x400305F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] m_points;

		[Token(Token = "0x4003060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private ControlPointSetting[] m_settings;

		[Token(Token = "0x4003061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		protected bool m_loop;

		[Token(Token = "0x4003062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		[HideInInspector]
		private bool m_isSelected;

		[Token(Token = "0x170006BA")]
		public bool IsSelected
		{
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x1CDF578", Offset = "0x1CDF578", VA = "0x1CDF578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006BB")]
		public virtual bool Loop
		{
			[Token(Token = "0x600309A")]
			[Address(RVA = "0x1CDF580", Offset = "0x1CDF580", VA = "0x1CDF580", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600309B")]
			[Address(RVA = "0x1CDF588", Offset = "0x1CDF588", VA = "0x1CDF588", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170006BC")]
		public int CurveCount
		{
			[Token(Token = "0x600309C")]
			[Address(RVA = "0x1CDDD04", Offset = "0x1CDDD04", VA = "0x1CDDD04")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006BD")]
		public int ControlPointCount
		{
			[Token(Token = "0x600309D")]
			[Address(RVA = "0x1CDFAA0", Offset = "0x1CDFAA0", VA = "0x1CDFAA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000050")]
		public event ControlPointChanged ControlPointPositionChanged
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0x1CDF270", Offset = "0x1CDF270", VA = "0x1CDF270")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003094")]
			[Address(RVA = "0x1CDF30C", Offset = "0x1CDF30C", VA = "0x1CDF30C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event ControlPointChanged ControlPointModeChanged
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0x1CDF3A8", Offset = "0x1CDF3A8", VA = "0x1CDF3A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003096")]
			[Address(RVA = "0x1CDF444", Offset = "0x1CDF444", VA = "0x1CDF444")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6003097")]
		[Address(RVA = "0x1CDF4E0", Offset = "0x1CDF4E0", VA = "0x1CDF4E0")]
		private void RaiseControlPointChanged(int index)
		{
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0x1CDF4FC", Offset = "0x1CDF4FC", VA = "0x1CDF4FC")]
		private void RaiseControlPointModeChanged(int modeIndex)
		{
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x1CDFABC", Offset = "0x1CDFABC", VA = "0x1CDFABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x1CDFFE4", Offset = "0x1CDFFE4", VA = "0x1CDFFE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x1CE0484", Offset = "0x1CE0484", VA = "0x1CE0484")]
		private void Start()
		{
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x1CE078C", Offset = "0x1CE078C", VA = "0x1CE078C")]
		private void OnRuntimeEditorCreated(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x1CE0960", Offset = "0x1CE0960", VA = "0x1CE0960")]
		private void OnRuntimeEditorDestroyed(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x1CE0A9C", Offset = "0x1CE0A9C", VA = "0x1CE0A9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x1CE0B88", Offset = "0x1CE0B88", VA = "0x1CE0B88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x1CE0C6C", Offset = "0x1CE0C6C", VA = "0x1CE0C6C", Slot = "7")]
		protected virtual void OnEnableOverride()
		{
		}

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x1CE0C70", Offset = "0x1CE0C70", VA = "0x1CE0C70", Slot = "8")]
		protected virtual void OnDisableOverride()
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x1CE0C74", Offset = "0x1CE0C74", VA = "0x1CE0C74", Slot = "9")]
		protected virtual void AwakeOverride()
		{
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x1CE0C78", Offset = "0x1CE0C78", VA = "0x1CE0C78", Slot = "10")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x1CE0C7C", Offset = "0x1CE0C7C", VA = "0x1CE0C7C", Slot = "11")]
		protected virtual void OnDestroyOverride()
		{
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x1CDFD6C", Offset = "0x1CDFD6C", VA = "0x1CDFD6C")]
		private void SyncArrays()
		{
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x1CE0C80", Offset = "0x1CE0C80", VA = "0x1CE0C80")]
		public void Select()
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x1CE04B4", Offset = "0x1CE04B4", VA = "0x1CE04B4")]
		public void Unselect()
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x1CE0F28", Offset = "0x1CE0F28", VA = "0x1CE0F28")]
		public float EvalLength(int curveIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x1CE10DC", Offset = "0x1CE10DC", VA = "0x1CE10DC")]
		public float EvalCurveLength(int curveIndex, int steps)
		{
			return default(float);
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x1CE0FE8", Offset = "0x1CE0FE8", VA = "0x1CE0FE8")]
		public Vector3 GetPoint(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x1CDE59C", Offset = "0x1CDE59C", VA = "0x1CDE59C")]
		public Vector3 GetPointLocal(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x1CDDE7C", Offset = "0x1CDDE7C", VA = "0x1CDDE7C")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x1CE11E0", Offset = "0x1CE11E0", VA = "0x1CE11E0")]
		public Vector3 GetPointLocal(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x1CE1290", Offset = "0x1CE1290", VA = "0x1CE1290")]
		public float GetTwist(float t, int curveIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x1CE1348", Offset = "0x1CE1348", VA = "0x1CE1348")]
		public float GetTwist(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x1CE13F8", Offset = "0x1CE13F8", VA = "0x1CE13F8")]
		public Vector3 GetThickness(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x1CE14D0", Offset = "0x1CE14D0", VA = "0x1CE14D0")]
		public Vector3 GetThickness(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x1CE1580", Offset = "0x1CE1580", VA = "0x1CE1580")]
		public float GetWrap(float t, int curveIndex)
		{
			return default(float);
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x1CE1638", Offset = "0x1CE1638", VA = "0x1CE1638")]
		public float GetWrap(float t)
		{
			return default(float);
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x1CE16E8", Offset = "0x1CE16E8", VA = "0x1CE16E8")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x1CE1744", Offset = "0x1CE1744", VA = "0x1CE1744")]
		public Vector3 GetControlPointLocal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x1CE1780", Offset = "0x1CE1780", VA = "0x1CE1780")]
		public ControlPointSetting GetSetting(int index)
		{
			return default(ControlPointSetting);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x1CE17DC", Offset = "0x1CE17DC", VA = "0x1CE17DC")]
		public Twist GetTwist(int index)
		{
			return default(Twist);
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x1CE1830", Offset = "0x1CE1830", VA = "0x1CE1830")]
		public Thickness GetThickness(int index)
		{
			return default(Thickness);
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x1CE188C", Offset = "0x1CE188C", VA = "0x1CE188C")]
		public Wrap GetWrap(int index)
		{
			return default(Wrap);
		}

		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x1CE18E0", Offset = "0x1CE18E0", VA = "0x1CE18E0")]
		public void SetTwist(int index, Twist twist)
		{
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x1CE1A5C", Offset = "0x1CE1A5C", VA = "0x1CE1A5C")]
		public void SetThickness(int index, Thickness thickness)
		{
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0x1CE1BE8", Offset = "0x1CE1BE8", VA = "0x1CE1BE8")]
		public void SetWrap(int index, Wrap wrap)
		{
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x1CE1D64", Offset = "0x1CE1D64", VA = "0x1CE1D64")]
		protected void SetPoints(int curveIndex, Vector3[] points, ControlPointMode mode, bool raiseCurveChanged)
		{
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0x1CE2380", Offset = "0x1CE2380", VA = "0x1CE2380")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0x1CDF638", Offset = "0x1CDF638", VA = "0x1CDF638")]
		public void SetControlPointLocal(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0x1CE23E4", Offset = "0x1CE23E4", VA = "0x1CE23E4")]
		public ControlPointMode GetControlPointMode(int index)
		{
			return default(ControlPointMode);
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x1CE2430", Offset = "0x1CE2430", VA = "0x1CE2430")]
		public void SetControlPointMode(ControlPointMode mode)
		{
		}

		[Token(Token = "0x60030C7")]
		[Address(RVA = "0x1CE1F04", Offset = "0x1CE1F04", VA = "0x1CE1F04")]
		public void SetControlPointMode(int index, ControlPointMode mode, bool raiseCurveChanged = true)
		{
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0x1CE206C", Offset = "0x1CE206C", VA = "0x1CE206C")]
		private void EnforceMode(int index, bool raise = true)
		{
		}

		[Token(Token = "0x60030C9")]
		[Address(RVA = "0x1CE24B4", Offset = "0x1CE24B4", VA = "0x1CE24B4")]
		public Vector3 GetVelocity(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0x1CE25E4", Offset = "0x1CE25E4", VA = "0x1CE25E4")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030CB")]
		[Address(RVA = "0x1CDE4C8", Offset = "0x1CDE4C8", VA = "0x1CDE4C8")]
		public Vector3 GetDirection(float t, int curveIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x1CDE200", Offset = "0x1CDE200", VA = "0x1CDE200")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030CD")]
		[Address(RVA = "0x1CE2694", Offset = "0x1CE2694", VA = "0x1CE2694")]
		public void Smooth()
		{
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x1CDE710", Offset = "0x1CDE710", VA = "0x1CDE710")]
		protected void LoadSpline(SplineSnapshot settings)
		{
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x1CE3194", Offset = "0x1CE3194", VA = "0x1CE3194", Slot = "12")]
		public virtual SplineSnapshot Save()
		{
			return default(SplineSnapshot);
		}

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x1CE31B0", Offset = "0x1CE31B0", VA = "0x1CE31B0", Slot = "13")]
		public virtual void Load(SplineSnapshot snapshot)
		{
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x1CE31D4", Offset = "0x1CE31D4", VA = "0x1CE31D4")]
		protected void AlignCurve(int curveIndex, float length, bool toLast = true)
		{
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x1CDE7E0", Offset = "0x1CDE7E0", VA = "0x1CDE7E0")]
		protected bool RemoveCurve(int curveIndex, bool raise = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0x1CE354C", Offset = "0x1CE354C", VA = "0x1CE354C")]
		protected void Subdivide(int firstCurveIndex, int lastCurveIndex, int curveCount)
		{
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0x1CE3D00", Offset = "0x1CE3D00", VA = "0x1CE3D00")]
		private void InsertCurve(Vector3[] points, ControlPointSetting setting, ControlPointMode mode, int curveIndex, float length, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x1CDE660", Offset = "0x1CDE660", VA = "0x1CDE660")]
		protected void PrependCurve(Vector3[] points, int curveIndex, float length, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x1CDE2D4", Offset = "0x1CDE2D4", VA = "0x1CDE2D4")]
		protected void AppendCurve(Vector3[] points, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x1CE44EC", Offset = "0x1CE44EC", VA = "0x1CE44EC")]
		protected void AppendCurve(Vector3[] points, ControlPointSetting setting, ControlPointMode mode, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0x1CE4864", Offset = "0x1CE4864", VA = "0x1CE4864", Slot = "14")]
		protected virtual float GetMag()
		{
			return default(float);
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0x1CE486C", Offset = "0x1CE486C", VA = "0x1CE486C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0x1CE4A8C", Offset = "0x1CE4A8C", VA = "0x1CE4A8C", Slot = "15")]
		protected virtual void ResetOverride()
		{
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0x1CE4A90", Offset = "0x1CE4A90", VA = "0x1CE4A90", Slot = "16")]
		protected virtual void OnCurveChanged(int pointIndex, int curveIndex)
		{
		}

		[Token(Token = "0x60030DC")]
		[Address(RVA = "0x1CE4A94", Offset = "0x1CE4A94", VA = "0x1CE4A94", Slot = "17")]
		protected virtual void OnCurveChanged()
		{
		}

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0x1CE4A98", Offset = "0x1CE4A98", VA = "0x1CE4A98", Slot = "18")]
		protected virtual SplineControlPoint[] GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0x1CE4AE4", Offset = "0x1CE4AE4", VA = "0x1CE4AE4", Slot = "19")]
		protected virtual void AddControlPointComponent(GameObject ctrlPoint)
		{
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0x1CE4B34", Offset = "0x1CE4B34", VA = "0x1CE4B34")]
		public int ToCurveIndex(ref float t)
		{
			return default(int);
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x1CE4BF0", Offset = "0x1CE4BF0", VA = "0x1CE4BF0")]
		public int ToCurveIndex(float t)
		{
			return default(int);
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0x1CE2D2C", Offset = "0x1CE2D2C", VA = "0x1CE2D2C")]
		private void SyncCtrlPoints(bool silent = false)
		{
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0x1CE4C98", Offset = "0x1CE4C98", VA = "0x1CE4C98", Slot = "4")]
		public void Draw()
		{
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x1CDEBC0", Offset = "0x1CDEBC0", VA = "0x1CDEBC0")]
		public SplineBase()
		{
		}
	}
	[Token(Token = "0x200077A")]
	[ExecuteInEditMode]
	public class SplineControlPoint : MonoBehaviour
	{
		[Token(Token = "0x4003063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer m_renderer;

		[Token(Token = "0x4003064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_localPosition;

		[Token(Token = "0x4003065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private int m_index;

		[Token(Token = "0x4003066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SplineBase m_spline;

		[Token(Token = "0x170006BE")]
		public int Index
		{
			[Token(Token = "0x60030E4")]
			[Address(RVA = "0x1CE52FC", Offset = "0x1CE52FC", VA = "0x1CE52FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60030E5")]
			[Address(RVA = "0x1CE4C90", Offset = "0x1CE4C90", VA = "0x1CE4C90")]
			set
			{
			}
		}

		[Token(Token = "0x170006BF")]
		public SplineBase Spline
		{
			[Token(Token = "0x60030E6")]
			[Address(RVA = "0x1CE54B8", Offset = "0x1CE54B8", VA = "0x1CE54B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0x1CE5304", Offset = "0x1CE5304", VA = "0x1CE5304")]
		private void UpdateMaterial()
		{
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0x1CE54C0", Offset = "0x1CE54C0", VA = "0x1CE54C0")]
		private void CreateRuntimeComponents()
		{
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x1CE567C", Offset = "0x1CE567C", VA = "0x1CE567C")]
		private void DestroyRuntimeComponents()
		{
		}

		[Token(Token = "0x60030EA")]
		[Address(RVA = "0x1CE5820", Offset = "0x1CE5820", VA = "0x1CE5820")]
		private void OnRuntimeEditorCreated(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60030EB")]
		[Address(RVA = "0x1CE5824", Offset = "0x1CE5824", VA = "0x1CE5824")]
		private void OnRuntimeEditorDestroyed(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0x1CE5828", Offset = "0x1CE5828", VA = "0x1CE5828")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030ED")]
		[Address(RVA = "0x1CE59EC", Offset = "0x1CE59EC", VA = "0x1CE59EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0x1CE5D08", Offset = "0x1CE5D08", VA = "0x1CE5D08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x1CE5E24", Offset = "0x1CE5E24", VA = "0x1CE5E24")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x1CE5FE0", Offset = "0x1CE5FE0", VA = "0x1CE5FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0x1CE60DC", Offset = "0x1CE60DC", VA = "0x1CE60DC")]
		private void OnControlPointModeChanged(int pointIndex)
		{
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0x1CE60F0", Offset = "0x1CE60F0", VA = "0x1CE60F0")]
		private void OnControlPointPositionChanged(int pointIndex)
		{
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0x1CE61F0", Offset = "0x1CE61F0", VA = "0x1CE61F0")]
		public SplineControlPoint()
		{
		}
	}
	[Token(Token = "0x200077B")]
	public class SplineFollow : MonoBehaviour
	{
		[Token(Token = "0x4003067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4003068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineBase Spline;

		[Token(Token = "0x4003069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Offset;

		[Token(Token = "0x400306A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsRunning;

		[Token(Token = "0x400306B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool IsLoop;

		[Token(Token = "0x400306C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SplineBase m_spline;

		[Token(Token = "0x400306D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isRunning;

		[Token(Token = "0x400306E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isCompleted;

		[Token(Token = "0x400306F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_t;

		[Token(Token = "0x60030F4")]
		[Address(RVA = "0x1CE61F8", Offset = "0x1CE61F8", VA = "0x1CE61F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0x1CE62C0", Offset = "0x1CE62C0", VA = "0x1CE62C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0x1CE6338", Offset = "0x1CE6338", VA = "0x1CE6338")]
		private void Restart()
		{
		}

		[Token(Token = "0x60030F7")]
		[Address(RVA = "0x1CE6374", Offset = "0x1CE6374", VA = "0x1CE6374")]
		private void Move()
		{
		}

		[Token(Token = "0x60030F8")]
		[Address(RVA = "0x1CE6568", Offset = "0x1CE6568", VA = "0x1CE6568")]
		private void UpdatePosition(float t)
		{
		}

		[Token(Token = "0x60030F9")]
		[Address(RVA = "0x1CE6660", Offset = "0x1CE6660", VA = "0x1CE6660")]
		public SplineFollow()
		{
		}
	}
	[Token(Token = "0x200077C")]
	public class SplineFollowOffsetEval : MonoBehaviour
	{
		[Token(Token = "0x4003070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplineFollow[] SplineFollow;

		[Token(Token = "0x4003071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] Distances;

		[Token(Token = "0x4003072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Precision;

		[Token(Token = "0x4003073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float InitialOffset;

		[Token(Token = "0x60030FA")]
		[Address(RVA = "0x1CE6678", Offset = "0x1CE6678", VA = "0x1CE6678")]
		private void Start()
		{
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x1CE6AFC", Offset = "0x1CE6AFC", VA = "0x1CE6AFC")]
		public SplineFollowOffsetEval()
		{
		}
	}
	[Token(Token = "0x200077E")]
	public sealed class VersionDeserializationBinder : SerializationBinder
	{
		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x1CE6BE0", Offset = "0x1CE6BE0", VA = "0x1CE6BE0", Slot = "5")]
		public override Type BindToType(string assemblyName, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0x1CE6CF4", Offset = "0x1CE6CF4", VA = "0x1CE6CF4")]
		public VersionDeserializationBinder()
		{
		}
	}
	[Token(Token = "0x200077F")]
	public class SplineRuntimeCmd : MonoBehaviour
	{
		[Token(Token = "0x6003101")]
		[Address(RVA = "0x1CE6CFC", Offset = "0x1CE6CFC", VA = "0x1CE6CFC", Slot = "4")]
		public virtual void Append()
		{
		}

		[Token(Token = "0x6003102")]
		[Address(RVA = "0x1CE6EAC", Offset = "0x1CE6EAC", VA = "0x1CE6EAC", Slot = "5")]
		public virtual void Insert()
		{
		}

		[Token(Token = "0x6003103")]
		[Address(RVA = "0x1CE70B0", Offset = "0x1CE70B0", VA = "0x1CE70B0", Slot = "6")]
		public virtual void Prepend()
		{
		}

		[Token(Token = "0x6003104")]
		[Address(RVA = "0x1CE7258", Offset = "0x1CE7258", VA = "0x1CE7258", Slot = "7")]
		public virtual void Remove()
		{
		}

		[Token(Token = "0x6003105")]
		[Address(RVA = "0x1CE74EC", Offset = "0x1CE74EC", VA = "0x1CE74EC", Slot = "8")]
		public virtual void Smooth()
		{
		}

		[Token(Token = "0x6003106")]
		[Address(RVA = "0x1CE7648", Offset = "0x1CE7648", VA = "0x1CE7648", Slot = "9")]
		public virtual void SetMirroredMode()
		{
		}

		[Token(Token = "0x6003107")]
		[Address(RVA = "0x1CE77A8", Offset = "0x1CE77A8", VA = "0x1CE77A8", Slot = "10")]
		public virtual void SetAlignedMode()
		{
		}

		[Token(Token = "0x6003108")]
		[Address(RVA = "0x1CE7908", Offset = "0x1CE7908", VA = "0x1CE7908", Slot = "11")]
		public virtual void SetFreeMode()
		{
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0x1CE7A68", Offset = "0x1CE7A68", VA = "0x1CE7A68", Slot = "12")]
		public virtual void Load()
		{
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x1CE7C1C", Offset = "0x1CE7C1C", VA = "0x1CE7C1C", Slot = "13")]
		public virtual void Save()
		{
		}

		[Token(Token = "0x600310B")]
		private static TData DeserializeFromString<TData>(string settings)
		{
			return (TData)null;
		}

		[Token(Token = "0x600310C")]
		private static string SerializeToString<TData>(TData settings)
		{
			return null;
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x1CE7D84", Offset = "0x1CE7D84", VA = "0x1CE7D84")]
		public SplineRuntimeCmd()
		{
		}
	}
	[Token(Token = "0x2000780")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(GLRenderer))]
	public class SplineRuntimeEditor : MonoBehaviour
	{
		[Token(Token = "0x4003078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x4003079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SelectionMargin;

		[Token(Token = "0x400307A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Smoothness;

		[Token(Token = "0x400307B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color SplineColor;

		[Token(Token = "0x400307C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Color MirroredModeColor;

		[Token(Token = "0x400307D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Color AlignedModeColor;

		[Token(Token = "0x400307E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Color FreeModeColor;

		[Token(Token = "0x400307F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly Color ControlPointLineColor;

		[Token(Token = "0x4003080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_splineMaterial;

		[Token(Token = "0x4003081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_normalMaterial;

		[Token(Token = "0x4003082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_mirroredModeMaterial;

		[Token(Token = "0x4003083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_alignedModeMaterial;

		[Token(Token = "0x4003084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_freeModeMaterial;

		[Token(Token = "0x4003085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh m_controlPointMesh;

		[Token(Token = "0x4003086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_unselectControlPoint;

		[Token(Token = "0x4003087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RuntimeHierarchy m_hierarchy;

		[Token(Token = "0x4003088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static SplineRuntimeEditor m_instance;

		[Token(Token = "0x4003089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SplineBase m_selectedSpline;

		[Token(Token = "0x170006C0")]
		public Mesh ControlPointMesh
		{
			[Token(Token = "0x6003112")]
			[Address(RVA = "0x1CE7D8C", Offset = "0x1CE7D8C", VA = "0x1CE7D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C1")]
		public Material MirroredModeMaterial
		{
			[Token(Token = "0x6003113")]
			[Address(RVA = "0x1CE7D94", Offset = "0x1CE7D94", VA = "0x1CE7D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C2")]
		public Material AlignedModeMaterial
		{
			[Token(Token = "0x6003114")]
			[Address(RVA = "0x1CE7D9C", Offset = "0x1CE7D9C", VA = "0x1CE7D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C3")]
		public Material FreeModeMaterial
		{
			[Token(Token = "0x6003115")]
			[Address(RVA = "0x1CE7DA4", Offset = "0x1CE7DA4", VA = "0x1CE7DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C4")]
		public Material NormalMaterial
		{
			[Token(Token = "0x6003116")]
			[Address(RVA = "0x1CE7DAC", Offset = "0x1CE7DAC", VA = "0x1CE7DAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C5")]
		public Material SplineMaterial
		{
			[Token(Token = "0x6003117")]
			[Address(RVA = "0x1CE7DB4", Offset = "0x1CE7DB4", VA = "0x1CE7DB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C6")]
		public static SplineRuntimeEditor Instance
		{
			[Token(Token = "0x6003118")]
			[Address(RVA = "0x1CE7DBC", Offset = "0x1CE7DBC", VA = "0x1CE7DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C7")]
		public SplineBase SelectedSpline
		{
			[Token(Token = "0x6003119")]
			[Address(RVA = "0x1CE7E14", Offset = "0x1CE7E14", VA = "0x1CE7E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600311A")]
			[Address(RVA = "0x1CE03DC", Offset = "0x1CE03DC", VA = "0x1CE03DC")]
			set
			{
			}
		}

		[Token(Token = "0x14000052")]
		public static event EventHandler Created
		{
			[Token(Token = "0x600310E")]
			[Address(RVA = "0x1CDFBB8", Offset = "0x1CDFBB8", VA = "0x1CDFBB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600310F")]
			[Address(RVA = "0x1CE0228", Offset = "0x1CE0228", VA = "0x1CE0228")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public static event EventHandler Destroyed
		{
			[Token(Token = "0x6003110")]
			[Address(RVA = "0x1CDFC90", Offset = "0x1CDFC90", VA = "0x1CDFC90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003111")]
			[Address(RVA = "0x1CE0300", Offset = "0x1CE0300", VA = "0x1CE0300")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x1CE8014", Offset = "0x1CE8014", VA = "0x1CE8014")]
		private void Awake()
		{
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0x1CE89E8", Offset = "0x1CE89E8", VA = "0x1CE89E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0x1CE8B14", Offset = "0x1CE8B14", VA = "0x1CE8B14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600311E")]
		[Address(RVA = "0x1CE8CAC", Offset = "0x1CE8CAC", VA = "0x1CE8CAC")]
		private void DisableRuntimeEditing()
		{
		}

		[Token(Token = "0x600311F")]
		[Address(RVA = "0x1CE88DC", Offset = "0x1CE88DC", VA = "0x1CE88DC")]
		private void EnableRuntimeEditing()
		{
		}

		[Token(Token = "0x6003120")]
		[Address(RVA = "0x1CE8DA0", Offset = "0x1CE8DA0", VA = "0x1CE8DA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003121")]
		[Address(RVA = "0x1CE93E4", Offset = "0x1CE93E4", VA = "0x1CE93E4")]
		private void OnHierarchySelectionChanged(object sender, SelectionChangedEventArgs e)
		{
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0x1CE7E1C", Offset = "0x1CE7E1C", VA = "0x1CE7E1C")]
		private void OnSelectedSplineChanged(SplineBase oldSpline, SplineBase newSpline)
		{
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0x1CE9200", Offset = "0x1CE9200", VA = "0x1CE9200")]
		private int HitTest()
		{
			return default(int);
		}

		[Token(Token = "0x6003124")]
		[Address(RVA = "0x1CE94E0", Offset = "0x1CE94E0", VA = "0x1CE94E0")]
		public SplineRuntimeEditor()
		{
		}
	}
}
namespace Battlehub.RTHandles
{
	[Token(Token = "0x2000782")]
	public abstract class BaseHandle : MonoBehaviour, IGL
	{
		[Token(Token = "0x400308C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode SnapToGridKey;

		[Token(Token = "0x400308D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera Camera;

		[Token(Token = "0x400308E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float SelectionMargin;

		[Token(Token = "0x400308F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Target;

		[Token(Token = "0x4003090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BaseHandle m_draggingTool;

		[Token(Token = "0x4003091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RuntimeHandleAxis m_selectedAxis;

		[Token(Token = "0x4003092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isDragging;

		[Token(Token = "0x4003093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane m_dragPlane;

		[Token(Token = "0x170006C8")]
		protected float EffectiveGridSize
		{
			[Token(Token = "0x6003128")]
			[Address(RVA = "0x1CE95A8", Offset = "0x1CE95A8", VA = "0x1CE95A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003129")]
			[Address(RVA = "0x1CE95B0", Offset = "0x1CE95B0", VA = "0x1CE95B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006C9")]
		public bool IsDragging
		{
			[Token(Token = "0x600312A")]
			[Address(RVA = "0x1CE95B8", Offset = "0x1CE95B8", VA = "0x1CE95B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006CA")]
		protected abstract RuntimeTool Tool
		{
			[Token(Token = "0x600312B")]
			get;
		}

		[Token(Token = "0x170006CB")]
		protected Quaternion Rotation
		{
			[Token(Token = "0x600312C")]
			[Address(RVA = "0x1CE95C0", Offset = "0x1CE95C0", VA = "0x1CE95C0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170006CC")]
		protected RuntimeHandleAxis SelectedAxis
		{
			[Token(Token = "0x600312D")]
			[Address(RVA = "0x1CE966C", Offset = "0x1CE966C", VA = "0x1CE966C")]
			get
			{
				return default(RuntimeHandleAxis);
			}
			[Token(Token = "0x600312E")]
			[Address(RVA = "0x1CE9674", Offset = "0x1CE9674", VA = "0x1CE9674")]
			set
			{
			}
		}

		[Token(Token = "0x170006CD")]
		protected Plane DragPlane
		{
			[Token(Token = "0x600312F")]
			[Address(RVA = "0x1CE967C", Offset = "0x1CE967C", VA = "0x1CE967C")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6003130")]
			[Address(RVA = "0x1CE9688", Offset = "0x1CE9688", VA = "0x1CE9688")]
			set
			{
			}
		}

		[Token(Token = "0x170006CE")]
		protected abstract float CurrentGridSize
		{
			[Token(Token = "0x6003131")]
			get;
		}

		[Token(Token = "0x6003132")]
		[Address(RVA = "0x1CE9694", Offset = "0x1CE9694", VA = "0x1CE9694")]
		private void Start()
		{
		}

		[Token(Token = "0x6003133")]
		[Address(RVA = "0x1CE9A64", Offset = "0x1CE9A64", VA = "0x1CE9A64", Slot = "7")]
		protected virtual void StartOverride()
		{
		}

		[Token(Token = "0x6003134")]
		[Address(RVA = "0x1CE9A68", Offset = "0x1CE9A68", VA = "0x1CE9A68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003135")]
		[Address(RVA = "0x1CE9B4C", Offset = "0x1CE9B4C", VA = "0x1CE9B4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003136")]
		[Address(RVA = "0x1CE9C30", Offset = "0x1CE9C30", VA = "0x1CE9C30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0x1CE9D14", Offset = "0x1CE9D14", VA = "0x1CE9D14", Slot = "8")]
		protected virtual void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0x1CE9D18", Offset = "0x1CE9D18", VA = "0x1CE9D18")]
		private void Update()
		{
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0x1CE9F48", Offset = "0x1CE9F48", VA = "0x1CE9F48", Slot = "9")]
		protected virtual bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0x1CE9F50", Offset = "0x1CE9F50", VA = "0x1CE9F50", Slot = "10")]
		protected virtual void OnDrag()
		{
		}

		[Token(Token = "0x600313B")]
		[Address(RVA = "0x1CE9F54", Offset = "0x1CE9F54", VA = "0x1CE9F54", Slot = "11")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x600313C")]
		[Address(RVA = "0x1CE9F58", Offset = "0x1CE9F58", VA = "0x1CE9F58", Slot = "12")]
		protected virtual void UpdateOverride()
		{
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0x1CEA10C", Offset = "0x1CEA10C", VA = "0x1CEA10C")]
		protected bool HitCenter()
		{
			return default(bool);
		}

		[Token(Token = "0x600313E")]
		[Address(RVA = "0x1CEA1D4", Offset = "0x1CEA1D4", VA = "0x1CEA1D4")]
		protected bool HitAxis(Vector3 axis, Matrix4x4 matrix, out float distanceToAxis)
		{
			return default(bool);
		}

		[Token(Token = "0x600313F")]
		[Address(RVA = "0x1CEA588", Offset = "0x1CEA588", VA = "0x1CEA588")]
		protected Plane GetDragPlane(Matrix4x4 matrix, Vector3 axis)
		{
			return default(Plane);
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0x1CEA6E0", Offset = "0x1CEA6E0", VA = "0x1CEA6E0")]
		protected Plane GetDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0x1CEA880", Offset = "0x1CEA880", VA = "0x1CEA880")]
		protected bool GetPointOnDragPlane(Vector3 screenPos, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6003142")]
		[Address(RVA = "0x1CEA8A0", Offset = "0x1CEA8A0", VA = "0x1CEA8A0")]
		protected bool GetPointOnDragPlane(Plane dragPlane, Vector3 screenPos, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0x1CEA574", Offset = "0x1CEA574", VA = "0x1CEA574")]
		private static Vector2 PerpendicularClockwise(Vector2 vector2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6003144")]
		[Address(RVA = "0x1CEA98C", Offset = "0x1CEA98C", VA = "0x1CEA98C", Slot = "4")]
		private void Battlehub.RTHandles.IGL.Draw()
		{
		}

		[Token(Token = "0x6003145")]
		[Address(RVA = "0x1CEA99C", Offset = "0x1CEA99C", VA = "0x1CEA99C", Slot = "13")]
		protected virtual void DrawOverride()
		{
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0x1CEA9A0", Offset = "0x1CEA9A0", VA = "0x1CEA9A0")]
		protected BaseHandle()
		{
		}
	}
	[Token(Token = "0x2000783")]
	[ExecuteInEditMode]
	public class GLCamera : MonoBehaviour
	{
		[Token(Token = "0x6003147")]
		[Address(RVA = "0x1CEA9B8", Offset = "0x1CEA9B8", VA = "0x1CEA9B8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6003148")]
		[Address(RVA = "0x1CEABA8", Offset = "0x1CEABA8", VA = "0x1CEABA8")]
		public GLCamera()
		{
		}
	}
	[Token(Token = "0x2000784")]
	public interface IGL
	{
		[Token(Token = "0x6003149")]
		void Draw();
	}
	[Token(Token = "0x2000785")]
	[ExecuteInEditMode]
	public class GLRenderer : MonoBehaviour
	{
		[Token(Token = "0x4003094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GLRenderer m_instance;

		[Token(Token = "0x4003095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IGL> m_renderObjects;

		[Token(Token = "0x170006CF")]
		public static GLRenderer Instance
		{
			[Token(Token = "0x600314A")]
			[Address(RVA = "0x1CEABB0", Offset = "0x1CEABB0", VA = "0x1CEABB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600314B")]
		[Address(RVA = "0x1CE0878", Offset = "0x1CE0878", VA = "0x1CE0878")]
		public void Add(IGL gl)
		{
		}

		[Token(Token = "0x600314C")]
		[Address(RVA = "0x1CE0A44", Offset = "0x1CE0A44", VA = "0x1CE0A44")]
		public void Remove(IGL line)
		{
		}

		[Token(Token = "0x600314D")]
		[Address(RVA = "0x1CEABF8", Offset = "0x1CEABF8", VA = "0x1CEABF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600314E")]
		[Address(RVA = "0x1CEAA88", Offset = "0x1CEAA88", VA = "0x1CEAA88")]
		public void Draw()
		{
		}

		[Token(Token = "0x600314F")]
		[Address(RVA = "0x1CEAD34", Offset = "0x1CEAD34", VA = "0x1CEAD34")]
		public GLRenderer()
		{
		}
	}
	[Token(Token = "0x2000786")]
	[AddComponentMenu("Camera-Control/Mouse Orbit with zoom")]
	public class MouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x4003096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Target;

		[Token(Token = "0x4003097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Distance;

		[Token(Token = "0x4003098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float XSpeed;

		[Token(Token = "0x4003099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float YSpeed;

		[Token(Token = "0x400309A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YMinLimit;

		[Token(Token = "0x400309B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float YMaxLimit;

		[Token(Token = "0x400309C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DistanceMin;

		[Token(Token = "0x400309D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DistanceMax;

		[Token(Token = "0x400309E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_x;

		[Token(Token = "0x400309F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_y;

		[Token(Token = "0x6003150")]
		[Address(RVA = "0x1CEAD3C", Offset = "0x1CEAD3C", VA = "0x1CEAD3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6003151")]
		[Address(RVA = "0x1CEAD40", Offset = "0x1CEAD40", VA = "0x1CEAD40")]
		public void Init()
		{
		}

		[Token(Token = "0x6003152")]
		[Address(RVA = "0x1CEAD6C", Offset = "0x1CEAD6C", VA = "0x1CEAD6C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6003153")]
		[Address(RVA = "0x1CEAE88", Offset = "0x1CEAE88", VA = "0x1CEAE88")]
		public void Zoom()
		{
		}

		[Token(Token = "0x6003154")]
		[Address(RVA = "0x1CEAE4C", Offset = "0x1CEAE4C", VA = "0x1CEAE4C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6003155")]
		[Address(RVA = "0x1CEAFD8", Offset = "0x1CEAFD8", VA = "0x1CEAFD8")]
		public MouseOrbit()
		{
		}
	}
	[Token(Token = "0x2000787")]
	public class PositionHandle : BaseHandle
	{
		[Token(Token = "0x40030A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x40030A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_cursorPosition;

		[Token(Token = "0x40030A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_currentPosition;

		[Token(Token = "0x40030A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_prevPoint;

		[Token(Token = "0x40030A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40030A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x170006D0")]
		public static PositionHandle Current
		{
			[Token(Token = "0x6003156")]
			[Address(RVA = "0x1CEB004", Offset = "0x1CEB004", VA = "0x1CEB004")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003157")]
			[Address(RVA = "0x1CEB04C", Offset = "0x1CEB04C", VA = "0x1CEB04C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006D1")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x6003158")]
			[Address(RVA = "0x1CEB0A4", Offset = "0x1CEB0A4", VA = "0x1CEB0A4", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x170006D2")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x6003159")]
			[Address(RVA = "0x1CEB0AC", Offset = "0x1CEB0AC", VA = "0x1CEB0AC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600315A")]
		[Address(RVA = "0x1CEB0B4", Offset = "0x1CEB0B4", VA = "0x1CEB0B4", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x600315B")]
		[Address(RVA = "0x1CEB10C", Offset = "0x1CEB10C", VA = "0x1CEB10C", Slot = "8")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x600315C")]
		[Address(RVA = "0x1CEB1E8", Offset = "0x1CEB1E8", VA = "0x1CEB1E8")]
		private bool HitQuad(Vector3 axis, Matrix4x4 matrix, float size)
		{
			return default(bool);
		}

		[Token(Token = "0x600315D")]
		[Address(RVA = "0x1CEB610", Offset = "0x1CEB610", VA = "0x1CEB610", Slot = "9")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x600315E")]
		[Address(RVA = "0x1CEBC34", Offset = "0x1CEBC34", VA = "0x1CEBC34", Slot = "10")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x600315F")]
		[Address(RVA = "0x1CEBFF4", Offset = "0x1CEBFF4", VA = "0x1CEBFF4", Slot = "13")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x6003160")]
		[Address(RVA = "0x1CECBD8", Offset = "0x1CECBD8", VA = "0x1CECBD8")]
		public PositionHandle()
		{
		}
	}
	[Token(Token = "0x2000788")]
	public class RotationHandle : BaseHandle
	{
		[Token(Token = "0x40030A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x40030A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float XSpeed;

		[Token(Token = "0x40030A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float YSpeed;

		[Token(Token = "0x40030AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 m_targetInverse;

		[Token(Token = "0x40030AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40030AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x40030AD")]
		private const float innerRadius = 1f;

		[Token(Token = "0x40030AE")]
		private const float outerRadius = 1.2f;

		[Token(Token = "0x40030AF")]
		private const float hitDot = 0.2f;

		[Token(Token = "0x40030B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_deltaX;

		[Token(Token = "0x40030B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_deltaY;

		[Token(Token = "0x170006D3")]
		public static RotationHandle Current
		{
			[Token(Token = "0x6003161")]
			[Address(RVA = "0x1CECBF8", Offset = "0x1CECBF8", VA = "0x1CECBF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003162")]
			[Address(RVA = "0x1CECC40", Offset = "0x1CECC40", VA = "0x1CECC40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006D4")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x6003163")]
			[Address(RVA = "0x1CECC98", Offset = "0x1CECC98", VA = "0x1CECC98", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x170006D5")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x6003164")]
			[Address(RVA = "0x1CECCA0", Offset = "0x1CECCA0", VA = "0x1CECCA0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003165")]
		[Address(RVA = "0x1CECCA8", Offset = "0x1CECCA8", VA = "0x1CECCA8", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x6003166")]
		[Address(RVA = "0x1CECD00", Offset = "0x1CECD00", VA = "0x1CECD00", Slot = "8")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x6003167")]
		[Address(RVA = "0x1CECDDC", Offset = "0x1CECDDC", VA = "0x1CECDDC")]
		private bool Intersect(Ray r, Vector3 sphereCenter, float sphereRadius, out float hit1Distance, out float hit2Distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6003168")]
		[Address(RVA = "0x1CECEB4", Offset = "0x1CECEB4", VA = "0x1CECEB4")]
		private RuntimeHandleAxis Hit()
		{
			return default(RuntimeHandleAxis);
		}

		[Token(Token = "0x6003169")]
		[Address(RVA = "0x1CED2F0", Offset = "0x1CED2F0", VA = "0x1CED2F0", Slot = "9")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x600316A")]
		[Address(RVA = "0x1CED684", Offset = "0x1CED684", VA = "0x1CED684", Slot = "10")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x600316B")]
		[Address(RVA = "0x1CEDA9C", Offset = "0x1CEDA9C", VA = "0x1CEDA9C", Slot = "13")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x600316C")]
		[Address(RVA = "0x1CEE50C", Offset = "0x1CEE50C", VA = "0x1CEE50C")]
		public RotationHandle()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public enum RuntimeHandleAxis
	{
		[Token(Token = "0x40030B4")]
		None,
		[Token(Token = "0x40030B5")]
		X,
		[Token(Token = "0x40030B6")]
		Y,
		[Token(Token = "0x40030B7")]
		Z,
		[Token(Token = "0x40030B8")]
		XY,
		[Token(Token = "0x40030B9")]
		XZ,
		[Token(Token = "0x40030BA")]
		YZ,
		[Token(Token = "0x40030BB")]
		Screen,
		[Token(Token = "0x40030BC")]
		Free
	}
	[Token(Token = "0x200078A")]
	public static class RuntimeHandles
	{
		[Token(Token = "0x40030BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color32 XColor;

		[Token(Token = "0x40030BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color32 XColorTransparent;

		[Token(Token = "0x40030BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color32 YColor;

		[Token(Token = "0x40030C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Color32 YColorTransparent;

		[Token(Token = "0x40030C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color32 ZColor;

		[Token(Token = "0x40030C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Color32 ZColorTransparent;

		[Token(Token = "0x40030C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Color32 AltColor;

		[Token(Token = "0x40030C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly Color32 SelectionColor;

		[Token(Token = "0x40030C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Mesh Arrows;

		[Token(Token = "0x40030C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly Mesh SelectionArrowY;

		[Token(Token = "0x40030C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Mesh SelectionArrowX;

		[Token(Token = "0x40030C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly Mesh SelectionArrowZ;

		[Token(Token = "0x40030C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly Mesh SelectionCube;

		[Token(Token = "0x40030CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly Mesh CubeX;

		[Token(Token = "0x40030CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly Mesh CubeY;

		[Token(Token = "0x40030CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly Mesh CubeZ;

		[Token(Token = "0x40030CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly Mesh CubeUniform;

		[Token(Token = "0x40030CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly Material ShapesMaterial;

		[Token(Token = "0x40030CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static readonly Material LinesMaterial;

		[Token(Token = "0x40030D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly Material LinesClipMaterial;

		[Token(Token = "0x40030D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly Material LinesBillboardMaterial;

		[Token(Token = "0x600316D")]
		[Address(RVA = "0x1CEE534", Offset = "0x1CEE534", VA = "0x1CEE534")]
		static RuntimeHandles()
		{
		}

		[Token(Token = "0x600316E")]
		[Address(RVA = "0x1CEF584", Offset = "0x1CEF584", VA = "0x1CEF584")]
		private static Mesh CreateCubeMesh(Color color)
		{
			return null;
		}

		[Token(Token = "0x600316F")]
		[Address(RVA = "0x1CEF278", Offset = "0x1CEF278", VA = "0x1CEF278")]
		private static Mesh CreateConeMesh(Color color)
		{
			return null;
		}

		[Token(Token = "0x6003170")]
		[Address(RVA = "0x1CEBB40", Offset = "0x1CEBB40", VA = "0x1CEBB40")]
		public static float GetScreenScale(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6003171")]
		[Address(RVA = "0x1CEF98C", Offset = "0x1CEF98C", VA = "0x1CEF98C")]
		private static void DoAxes(Vector3 position, Matrix4x4 transform, RuntimeHandleAxis selectedAxis)
		{
		}

		[Token(Token = "0x6003172")]
		[Address(RVA = "0x1CEC0C8", Offset = "0x1CEC0C8", VA = "0x1CEC0C8")]
		public static void DoPositionHandle(Vector3 position, Quaternion rotation, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}

		[Token(Token = "0x6003173")]
		[Address(RVA = "0x1CEDB68", Offset = "0x1CEDB68", VA = "0x1CEDB68")]
		public static void DoRotationHandle(Quaternion rotation, Vector3 position, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}

		[Token(Token = "0x6003174")]
		[Address(RVA = "0x1CEFCE0", Offset = "0x1CEFCE0", VA = "0x1CEFCE0")]
		private static void DrawCircle(Matrix4x4 transform, float radius)
		{
		}

		[Token(Token = "0x6003175")]
		[Address(RVA = "0x1CEFDA0", Offset = "0x1CEFDA0", VA = "0x1CEFDA0")]
		public static void DoScaleHandle(Vector3 scale, Vector3 position, Quaternion rotation, RuntimeHandleAxis selectedAxis = RuntimeHandleAxis.None)
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class RuntimeHierarchy : MonoBehaviour
	{
		[Token(Token = "0x40030D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemsControl ItemsControl;

		[Token(Token = "0x40030D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Type TypeCriteria;

		[Token(Token = "0x40030D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Object m_selectedItem;

		[Token(Token = "0x170006D6")]
		public UnityEngine.Object SelectedItem
		{
			[Token(Token = "0x6003178")]
			[Address(RVA = "0x1D05860", Offset = "0x1D05860", VA = "0x1D05860")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003179")]
			[Address(RVA = "0x1D05868", Offset = "0x1D05868", VA = "0x1D05868")]
			set
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event EventHandler<SelectionChangedEventArgs> SelectionChanged
		{
			[Token(Token = "0x6003176")]
			[Address(RVA = "0x1D05700", Offset = "0x1D05700", VA = "0x1D05700")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003177")]
			[Address(RVA = "0x1D057B0", Offset = "0x1D057B0", VA = "0x1D057B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600317A")]
		[Address(RVA = "0x1D058A4", Offset = "0x1D058A4", VA = "0x1D058A4")]
		public static bool IsPrefab(Transform This)
		{
			return default(bool);
		}

		[Token(Token = "0x600317B")]
		[Address(RVA = "0x1D05958", Offset = "0x1D05958", VA = "0x1D05958")]
		private void Start()
		{
		}

		[Token(Token = "0x600317C")]
		[Address(RVA = "0x1D05C84", Offset = "0x1D05C84", VA = "0x1D05C84")]
		private void OnSelectionChanged(object sender, SelectionChangedEventArgs e)
		{
		}

		[Token(Token = "0x600317D")]
		[Address(RVA = "0x1D05CA4", Offset = "0x1D05CA4", VA = "0x1D05CA4")]
		private void OnDataBinding(object sender, ItemDataBindingEventArgs e)
		{
		}

		[Token(Token = "0x600317E")]
		[Address(RVA = "0x1D05DA8", Offset = "0x1D05DA8", VA = "0x1D05DA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600317F")]
		[Address(RVA = "0x1D05EE8", Offset = "0x1D05EE8", VA = "0x1D05EE8")]
		public RuntimeHierarchy()
		{
		}
	}
	[Token(Token = "0x200078C")]
	public enum RuntimeTool
	{
		[Token(Token = "0x40030D7")]
		None,
		[Token(Token = "0x40030D8")]
		Move,
		[Token(Token = "0x40030D9")]
		Rotation,
		[Token(Token = "0x40030DA")]
		Scale,
		[Token(Token = "0x40030DB")]
		View
	}
	[Token(Token = "0x200078D")]
	public enum RuntimePivotRotation
	{
		[Token(Token = "0x40030DD")]
		Local,
		[Token(Token = "0x40030DE")]
		Global
	}
	[Token(Token = "0x200078E")]
	public class RuntimeTools
	{
		[Token(Token = "0x40030DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RuntimeTool Current;

		[Token(Token = "0x40030E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static RuntimePivotRotation PivotRotation;

		[Token(Token = "0x6003180")]
		[Address(RVA = "0x1D05F7C", Offset = "0x1D05F7C", VA = "0x1D05F7C")]
		public RuntimeTools()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public delegate void RuntimeSelectionChanged();
	[Token(Token = "0x2000790")]
	public static class RuntimeSelection
	{
		[Token(Token = "0x40030E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject m_activeGameObject;

		[Token(Token = "0x170006D7")]
		public static GameObject activeGameObject
		{
			[Token(Token = "0x6003187")]
			[Address(RVA = "0x1D06200", Offset = "0x1D06200", VA = "0x1D06200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003188")]
			[Address(RVA = "0x1D06248", Offset = "0x1D06248", VA = "0x1D06248")]
			set
			{
			}
		}

		[Token(Token = "0x170006D8")]
		public static Transform activeTransform
		{
			[Token(Token = "0x6003189")]
			[Address(RVA = "0x1D06314", Offset = "0x1D06314", VA = "0x1D06314")]
			get
			{
				return null;
			}
			[Token(Token = "0x600318A")]
			[Address(RVA = "0x1D063BC", Offset = "0x1D063BC", VA = "0x1D063BC")]
			set
			{
			}
		}

		[Token(Token = "0x14000055")]
		public static event RuntimeSelectionChanged SelectionChanged
		{
			[Token(Token = "0x6003185")]
			[Address(RVA = "0x1D06090", Offset = "0x1D06090", VA = "0x1D06090")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003186")]
			[Address(RVA = "0x1D06148", Offset = "0x1D06148", VA = "0x1D06148")]
			[CompilerGenerated]
			remove
			{
			}
		}
	}
	[Token(Token = "0x2000791")]
	public class RuntimeSceneView : MonoBehaviour
	{
		[Token(Token = "0x40030E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_handleInput;

		[Token(Token = "0x40030E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_pivot;

		[Token(Token = "0x40030E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_lastMousePosition;

		[Token(Token = "0x40030E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera Camera;

		[Token(Token = "0x40030E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MouseOrbit m_mouseOrbit;

		[Token(Token = "0x40030E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float RotationSensitivity;

		[Token(Token = "0x40030E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float ZoomSensitivity;

		[Token(Token = "0x40030EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float PanSensitivity;

		[Token(Token = "0x40030EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PositionHandle m_positionHandle;

		[Token(Token = "0x170006D9")]
		public Vector3 Pivot
		{
			[Token(Token = "0x600318B")]
			[Address(RVA = "0x1D0646C", Offset = "0x1D0646C", VA = "0x1D0646C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600318C")]
		[Address(RVA = "0x1D06478", Offset = "0x1D06478", VA = "0x1D06478")]
		private void Awake()
		{
		}

		[Token(Token = "0x600318D")]
		[Address(RVA = "0x1D066A8", Offset = "0x1D066A8", VA = "0x1D066A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600318E")]
		[Address(RVA = "0x1D06748", Offset = "0x1D06748", VA = "0x1D06748")]
		private void Start()
		{
		}

		[Token(Token = "0x600318F")]
		[Address(RVA = "0x1D06934", Offset = "0x1D06934", VA = "0x1D06934")]
		private void Update()
		{
		}

		[Token(Token = "0x6003190")]
		[Address(RVA = "0x1D06BB8", Offset = "0x1D06BB8", VA = "0x1D06BB8")]
		private void OnRuntimeSelectionChanged()
		{
		}

		[Token(Token = "0x6003191")]
		[Address(RVA = "0x1D06938", Offset = "0x1D06938", VA = "0x1D06938")]
		private void HandleInput()
		{
		}

		[Token(Token = "0x6003192")]
		[Address(RVA = "0x1D06D28", Offset = "0x1D06D28", VA = "0x1D06D28")]
		private void Focus()
		{
		}

		[Token(Token = "0x6003193")]
		[Address(RVA = "0x1D073BC", Offset = "0x1D073BC", VA = "0x1D073BC")]
		private Bounds CalculateBounds(Transform t)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6003194")]
		[Address(RVA = "0x1D077CC", Offset = "0x1D077CC", VA = "0x1D077CC")]
		private void CalculateBounds(Transform t, ref Bounds totalBounds)
		{
		}

		[Token(Token = "0x6003195")]
		[Address(RVA = "0x1D07674", Offset = "0x1D07674", VA = "0x1D07674")]
		public static Bounds TransformBounds(Matrix4x4 matrix, Bounds bounds)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6003196")]
		[Address(RVA = "0x1D071D4", Offset = "0x1D071D4", VA = "0x1D071D4")]
		private void Pan()
		{
		}

		[Token(Token = "0x6003197")]
		[Address(RVA = "0x1D07D2C", Offset = "0x1D07D2C", VA = "0x1D07D2C")]
		public RuntimeSceneView()
		{
		}
	}
	[Token(Token = "0x2000792")]
	public class ScaleHandle : BaseHandle
	{
		[Token(Token = "0x40030EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GridSize;

		[Token(Token = "0x40030ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_prevPoint;

		[Token(Token = "0x40030EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40030EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Matrix4x4 m_inverse;

		[Token(Token = "0x40030F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_roundedScale;

		[Token(Token = "0x40030F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 m_scale;

		[Token(Token = "0x40030F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 m_refScale;

		[Token(Token = "0x40030F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_screenScale;

		[Token(Token = "0x170006DA")]
		public static ScaleHandle Current
		{
			[Token(Token = "0x600319A")]
			[Address(RVA = "0x1D07E84", Offset = "0x1D07E84", VA = "0x1D07E84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600319B")]
			[Address(RVA = "0x1D07ECC", Offset = "0x1D07ECC", VA = "0x1D07ECC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170006DB")]
		protected override RuntimeTool Tool
		{
			[Token(Token = "0x600319C")]
			[Address(RVA = "0x1D07F24", Offset = "0x1D07F24", VA = "0x1D07F24", Slot = "5")]
			get
			{
				return default(RuntimeTool);
			}
		}

		[Token(Token = "0x170006DC")]
		protected override float CurrentGridSize
		{
			[Token(Token = "0x600319D")]
			[Address(RVA = "0x1D07F2C", Offset = "0x1D07F2C", VA = "0x1D07F2C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600319E")]
		[Address(RVA = "0x1D07F34", Offset = "0x1D07F34", VA = "0x1D07F34", Slot = "7")]
		protected override void StartOverride()
		{
		}

		[Token(Token = "0x600319F")]
		[Address(RVA = "0x1D07FD8", Offset = "0x1D07FD8", VA = "0x1D07FD8", Slot = "8")]
		protected override void OnDestroyOverride()
		{
		}

		[Token(Token = "0x60031A0")]
		[Address(RVA = "0x1D080B4", Offset = "0x1D080B4", VA = "0x1D080B4", Slot = "9")]
		protected override bool OnBeginDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x60031A1")]
		[Address(RVA = "0x1D084E4", Offset = "0x1D084E4", VA = "0x1D084E4", Slot = "10")]
		protected override void OnDrag()
		{
		}

		[Token(Token = "0x60031A2")]
		[Address(RVA = "0x1D0893C", Offset = "0x1D0893C", VA = "0x1D0893C", Slot = "11")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x60031A3")]
		[Address(RVA = "0x1D0899C", Offset = "0x1D0899C", VA = "0x1D0899C", Slot = "13")]
		protected override void DrawOverride()
		{
		}

		[Token(Token = "0x60031A4")]
		[Address(RVA = "0x1D08A94", Offset = "0x1D08A94", VA = "0x1D08A94")]
		public ScaleHandle()
		{
		}
	}
}
namespace Battlehub.ShowNormals
{
	[Token(Token = "0x2000793")]
	public class DrawNormals : MonoBehaviour
	{
		[Token(Token = "0x40030F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Color;

		[Token(Token = "0x40030F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Length;

		[Token(Token = "0x40030F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool Show;

		[Token(Token = "0x60031A5")]
		[Address(RVA = "0x1D08AA8", Offset = "0x1D08AA8", VA = "0x1D08AA8")]
		public DrawNormals()
		{
		}
	}
}
namespace Battlehub.MeshDeformer2
{
	[Token(Token = "0x2000794")]
	[ExecuteInEditMode]
	public class ControlPoint : SplineControlPoint
	{
		[Token(Token = "0x60031A6")]
		[Address(RVA = "0x1D08AD0", Offset = "0x1D08AD0", VA = "0x1D08AD0")]
		public ControlPoint()
		{
		}
	}
	[Token(Token = "0x2000795")]
	[RequireComponent(typeof(MeshFilter), typeof(Scaffold))]
	[ExecuteInEditMode]
	public class MeshDeformer : SplineBase
	{
		[Token(Token = "0x40030F8")]
		private const int WRAP_DEFORM_VERSION = 1;

		[Token(Token = "0x40030F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool Internal_HasChanged;

		[Token(Token = "0x40030FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_original;

		[Token(Token = "0x40030FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_colliderOriginal;

		[Token(Token = "0x40030FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private Contact[] m_contacts;

		[Token(Token = "0x40030FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private Contact[] m_colliderContacts;

		[Token(Token = "0x40030FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		private ScaffoldWrapper[] m_scaffolds;

		[Token(Token = "0x40030FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private Axis m_axis;

		[Token(Token = "0x4003100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		[SerializeField]
		private int m_sliceCount;

		[Token(Token = "0x4003101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		private float m_spacing;

		[Token(Token = "0x4003102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		[SerializeField]
		private int m_curvesPerMesh;

		[Token(Token = "0x4003103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshFilter m_filter;

		[Token(Token = "0x4003104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshCollider m_collider;

		[Token(Token = "0x170006DD")]
		public Axis Axis
		{
			[Token(Token = "0x60031A7")]
			[Address(RVA = "0x1D08AD8", Offset = "0x1D08AD8", VA = "0x1D08AD8")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x1D08AE0", Offset = "0x1D08AE0", VA = "0x1D08AE0")]
			set
			{
			}
		}

		[Token(Token = "0x170006DE")]
		public virtual int Approximation
		{
			[Token(Token = "0x60031A9")]
			[Address(RVA = "0x1D08BD0", Offset = "0x1D08BD0", VA = "0x1D08BD0", Slot = "20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x1D08BD8", Offset = "0x1D08BD8", VA = "0x1D08BD8", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170006DF")]
		public virtual float Spacing
		{
			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x1D08BE0", Offset = "0x1D08BE0", VA = "0x1D08BE0", Slot = "22")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x1D08BE8", Offset = "0x1D08BE8", VA = "0x1D08BE8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170006E0")]
		public virtual int CurvesPerMesh
		{
			[Token(Token = "0x60031AD")]
			[Address(RVA = "0x1D09754", Offset = "0x1D09754", VA = "0x1D09754", Slot = "24")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031AE")]
			[Address(RVA = "0x1D0975C", Offset = "0x1D0975C", VA = "0x1D0975C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170006E1")]
		public override bool Loop
		{
			[Token(Token = "0x60031AF")]
			[Address(RVA = "0x1D0984C", Offset = "0x1D0984C", VA = "0x1D0984C", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x1D09854", Offset = "0x1D09854", VA = "0x1D09854", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public ScaffoldWrapper[] Scaffolds
		{
			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x1D09A10", Offset = "0x1D09A10", VA = "0x1D09A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E3")]
		public Contact[] Contacts
		{
			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x1D09A18", Offset = "0x1D09A18", VA = "0x1D09A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E4")]
		public Mesh Original
		{
			[Token(Token = "0x60031B3")]
			[Address(RVA = "0x1D09A20", Offset = "0x1D09A20", VA = "0x1D09A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x1D09A28", Offset = "0x1D09A28", VA = "0x1D09A28")]
			set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public Contact[] ColliderContacts
		{
			[Token(Token = "0x60031B5")]
			[Address(RVA = "0x1D09B38", Offset = "0x1D09B38", VA = "0x1D09B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E6")]
		public Mesh ColliderOriginal
		{
			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x1D09B40", Offset = "0x1D09B40", VA = "0x1D09B40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x1D09B48", Offset = "0x1D09B48", VA = "0x1D09B48")]
			set
			{
			}
		}

		[Token(Token = "0x60031B8")]
		[Address(RVA = "0x1D09C00", Offset = "0x1D09C00", VA = "0x1D09C00", Slot = "9")]
		protected override void AwakeOverride()
		{
		}

		[Token(Token = "0x60031B9")]
		[Address(RVA = "0x1D09C9C", Offset = "0x1D09C9C", VA = "0x1D09C9C", Slot = "13")]
		public override void Load(SplineSnapshot snapshot)
		{
		}

		[Token(Token = "0x60031BA")]
		[Address(RVA = "0x1D09F5C", Offset = "0x1D09F5C", VA = "0x1D09F5C")]
		public void ResetDeformer()
		{
		}

		[Token(Token = "0x60031BB")]
		[Address(RVA = "0x1D0B260", Offset = "0x1D0B260", VA = "0x1D0B260", Slot = "17")]
		protected override void OnCurveChanged()
		{
		}

		[Token(Token = "0x60031BC")]
		[Address(RVA = "0x1D0B7FC", Offset = "0x1D0B7FC", VA = "0x1D0B7FC")]
		private void DeformAll()
		{
		}

		[Token(Token = "0x60031BD")]
		[Address(RVA = "0x1D0BA24", Offset = "0x1D0BA24", VA = "0x1D0BA24", Slot = "16")]
		protected override void OnCurveChanged(int pointIndex, int curveIndex)
		{
		}

		[Token(Token = "0x60031BE")]
		[Address(RVA = "0x1D0BC3C", Offset = "0x1D0BC3C", VA = "0x1D0BC3C")]
		private ScaffoldWrapper Prev(ScaffoldWrapper scaffold)
		{
			return null;
		}

		[Token(Token = "0x60031BF")]
		[Address(RVA = "0x1D0BD94", Offset = "0x1D0BD94", VA = "0x1D0BD94")]
		private ScaffoldWrapper Next(ScaffoldWrapper scaffold)
		{
			return null;
		}

		[Token(Token = "0x60031C0")]
		[Address(RVA = "0x1D0BF00", Offset = "0x1D0BF00", VA = "0x1D0BF00")]
		private void Deform(ScaffoldWrapper scaffold)
		{
		}

		[Token(Token = "0x60031C1")]
		[Address(RVA = "0x1D0BC20", Offset = "0x1D0BC20", VA = "0x1D0BC20")]
		private void Deform(int curveIndex)
		{
		}

		[Token(Token = "0x60031C2")]
		[Address(RVA = "0x1D0C0EC", Offset = "0x1D0C0EC", VA = "0x1D0C0EC", Slot = "15")]
		protected override void ResetOverride()
		{
		}

		[Token(Token = "0x60031C3")]
		[Address(RVA = "0x1D08AE8", Offset = "0x1D08AE8", VA = "0x1D08AE8")]
		public void WrapAndDeformAll()
		{
		}

		[Token(Token = "0x60031C4")]
		[Address(RVA = "0x1D0C57C", Offset = "0x1D0C57C", VA = "0x1D0C57C")]
		public void Split(int curveIndex)
		{
		}

		[Token(Token = "0x60031C5")]
		[Address(RVA = "0x1D0C24C", Offset = "0x1D0C24C", VA = "0x1D0C24C")]
		private void WrapAndDeform(ScaffoldWrapper scaffold)
		{
		}

		[Token(Token = "0x60031C6")]
		[Address(RVA = "0x1D09870", Offset = "0x1D09870", VA = "0x1D09870")]
		private void ChangeLoop(bool loop)
		{
		}

		[Token(Token = "0x60031C7")]
		[Address(RVA = "0x1D08BEC", Offset = "0x1D08BEC", VA = "0x1D08BEC")]
		private GameObject[] ChangeSpacing(float spacing)
		{
			return null;
		}

		[Token(Token = "0x60031C8")]
		[Address(RVA = "0x1D09760", Offset = "0x1D09760", VA = "0x1D09760")]
		private void ChangeCurvesPerMesh(int curvesPerMesh)
		{
		}

		[Token(Token = "0x60031C9")]
		[Address(RVA = "0x1D0D884", Offset = "0x1D0D884", VA = "0x1D0D884")]
		private void ChangeCurvesPerMeshStep1(int scaffoldIndex, int curvesPerMesh)
		{
		}

		[Token(Token = "0x60031CA")]
		[Address(RVA = "0x1D0DA7C", Offset = "0x1D0DA7C", VA = "0x1D0DA7C")]
		private void ChangeCurvesPerMeshStep2(int curvesPerMesh, ScaffoldWrapper scaffold)
		{
		}

		[Token(Token = "0x60031CB")]
		[Address(RVA = "0x1D09EA8", Offset = "0x1D09EA8", VA = "0x1D09EA8")]
		public bool Remove(int curveIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60031CC")]
		[Address(RVA = "0x1D0C9BC", Offset = "0x1D0C9BC", VA = "0x1D0C9BC")]
		public bool Remove(int curveIndex, out GameObject objectToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x60031CD")]
		[Address(RVA = "0x1D09E28", Offset = "0x1D09E28", VA = "0x1D09E28")]
		public GameObject Append()
		{
			return null;
		}

		[Token(Token = "0x60031CE")]
		[Address(RVA = "0x1D0E16C", Offset = "0x1D0E16C", VA = "0x1D0E16C")]
		private ScaffoldWrapper AppendSegment(GameObject segment, Vector3 from, Vector3 to)
		{
			return null;
		}

		[Token(Token = "0x60031CF")]
		[Address(RVA = "0x1D0E924", Offset = "0x1D0E924", VA = "0x1D0E924")]
		public GameObject Prepend()
		{
			return null;
		}

		[Token(Token = "0x60031D0")]
		[Address(RVA = "0x1D0E9AC", Offset = "0x1D0E9AC", VA = "0x1D0E9AC")]
		private ScaffoldWrapper PrependSegment(int curveIndex, GameObject segment, Vector3 from, Vector3 to, bool shrinkPreceding)
		{
			return null;
		}

		[Token(Token = "0x60031D1")]
		[Address(RVA = "0x1D0EF08", Offset = "0x1D0EF08", VA = "0x1D0EF08")]
		public GameObject Insert(int curveIndex)
		{
			return null;
		}

		[Token(Token = "0x60031D2")]
		[Address(RVA = "0x1D0DCF8", Offset = "0x1D0DCF8", VA = "0x1D0DCF8")]
		private GameObject CreateSegment()
		{
			return null;
		}

		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x1D0C06C", Offset = "0x1D0C06C", VA = "0x1D0C06C")]
		private void ForceRigid(ScaffoldWrapper scaffold)
		{
		}

		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x1D0D4F0", Offset = "0x1D0D4F0", VA = "0x1D0D4F0")]
		private void ShiftAndInsert(int curveIndex, ScaffoldWrapper newScaffold)
		{
		}

		[Token(Token = "0x60031D5")]
		[Address(RVA = "0x1D0E784", Offset = "0x1D0E784", VA = "0x1D0E784")]
		private void AppendCurve(float mag, bool enforceNeighbour)
		{
		}

		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x1D0D31C", Offset = "0x1D0D31C", VA = "0x1D0D31C")]
		private void PrependCurve(float mag, int curveIndex, bool enforceNeighbour, bool shrinkPreceding)
		{
		}

		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x1D0EF94", Offset = "0x1D0EF94", VA = "0x1D0EF94")]
		public void Straighten(int pointIndex)
		{
		}

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x1D0F298", Offset = "0x1D0F298", VA = "0x1D0F298")]
		public void SetIsRigid(int pointIndex, bool isRigid)
		{
		}

		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x1D0B330", Offset = "0x1D0B330", VA = "0x1D0B330")]
		private void GetRigidPoints(int pointIndex, int curveIndex, out Vector3[] points)
		{
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x1D0BB2C", Offset = "0x1D0BB2C", VA = "0x1D0BB2C")]
		public ScaffoldWrapper FindScaffold(int curveIndex)
		{
			return null;
		}

		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x1D0DBAC", Offset = "0x1D0DBAC", VA = "0x1D0DBAC")]
		private int ToScaffoldIndex(int curveIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x1D0F6EC", Offset = "0x1D0F6EC", VA = "0x1D0F6EC")]
		public static Vector3 Side(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x1D0F78C", Offset = "0x1D0F78C", VA = "0x1D0F78C")]
		public static Vector3 Up(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60031DE")]
		[Address(RVA = "0x1D0F82C", Offset = "0x1D0F82C", VA = "0x1D0F82C", Slot = "19")]
		protected override void AddControlPointComponent(GameObject ctrlPoint)
		{
		}

		[Token(Token = "0x60031DF")]
		[Address(RVA = "0x1D0F87C", Offset = "0x1D0F87C", VA = "0x1D0F87C", Slot = "18")]
		protected override SplineControlPoint[] GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x60031E0")]
		[Address(RVA = "0x1D0F8C8", Offset = "0x1D0F8C8", VA = "0x1D0F8C8")]
		public MeshDeformer()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public class MeshDeformerRuntimeCmd : SplineRuntimeCmd
	{
		[Token(Token = "0x60031F8")]
		[Address(RVA = "0x1D0FD00", Offset = "0x1D0FD00", VA = "0x1D0FD00", Slot = "4")]
		public override void Append()
		{
		}

		[Token(Token = "0x60031F9")]
		[Address(RVA = "0x1D0FEC4", Offset = "0x1D0FEC4", VA = "0x1D0FEC4", Slot = "5")]
		public override void Insert()
		{
		}

		[Token(Token = "0x60031FA")]
		[Address(RVA = "0x1D10154", Offset = "0x1D10154", VA = "0x1D10154", Slot = "6")]
		public override void Prepend()
		{
		}

		[Token(Token = "0x60031FB")]
		[Address(RVA = "0x1D10318", Offset = "0x1D10318", VA = "0x1D10318", Slot = "7")]
		public override void Remove()
		{
		}

		[Token(Token = "0x60031FC")]
		[Address(RVA = "0x1D105C0", Offset = "0x1D105C0", VA = "0x1D105C0", Slot = "8")]
		public override void Smooth()
		{
		}

		[Token(Token = "0x60031FD")]
		[Address(RVA = "0x1D105C8", Offset = "0x1D105C8", VA = "0x1D105C8", Slot = "9")]
		public override void SetMirroredMode()
		{
		}

		[Token(Token = "0x60031FE")]
		[Address(RVA = "0x1D105D0", Offset = "0x1D105D0", VA = "0x1D105D0", Slot = "10")]
		public override void SetAlignedMode()
		{
		}

		[Token(Token = "0x60031FF")]
		[Address(RVA = "0x1D105D8", Offset = "0x1D105D8", VA = "0x1D105D8", Slot = "11")]
		public override void SetFreeMode()
		{
		}

		[Token(Token = "0x6003200")]
		[Address(RVA = "0x1D105E0", Offset = "0x1D105E0", VA = "0x1D105E0", Slot = "12")]
		public override void Load()
		{
		}

		[Token(Token = "0x6003201")]
		[Address(RVA = "0x1D105E8", Offset = "0x1D105E8", VA = "0x1D105E8", Slot = "13")]
		public override void Save()
		{
		}

		[Token(Token = "0x6003202")]
		[Address(RVA = "0x1D105F0", Offset = "0x1D105F0", VA = "0x1D105F0")]
		public MeshDeformerRuntimeCmd()
		{
		}
	}
	[Token(Token = "0x200079F")]
	public enum Axis
	{
		[Token(Token = "0x4003114")]
		X,
		[Token(Token = "0x4003115")]
		Y,
		[Token(Token = "0x4003116")]
		Z
	}
	[Serializable]
	[Token(Token = "0x20007A0")]
	public struct Contact
	{
		[Token(Token = "0x4003117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index1;

		[Token(Token = "0x4003118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Index2;

		[Token(Token = "0x6003203")]
		[Address(RVA = "0x1D105F8", Offset = "0x1D105F8", VA = "0x1D105F8")]
		public Contact(int index1, int index2)
		{
		}
	}
	[Token(Token = "0x20007A1")]
	public static class MeshExtensions
	{
		[Token(Token = "0x6003204")]
		[Address(RVA = "0x1D09AE0", Offset = "0x1D09AE0", VA = "0x1D09AE0")]
		public static Contact[] FindContacts(this Mesh mesh, Axis axis, float threshold = 0.999f)
		{
			return null;
		}

		[Token(Token = "0x6003205")]
		[Address(RVA = "0x1D0A9FC", Offset = "0x1D0A9FC", VA = "0x1D0A9FC")]
		public static Contact[] FindContacts(this Mesh mesh, Vector3 from, Vector3 to, Axis axis, float threshold = 0.999f)
		{
			return null;
		}

		[Token(Token = "0x6003206")]
		[Address(RVA = "0x1D0F1F0", Offset = "0x1D0F1F0", VA = "0x1D0F1F0")]
		public static float GetSize(this Mesh mesh, Axis axis)
		{
			return default(float);
		}

		[Token(Token = "0x6003207")]
		[Address(RVA = "0x1D0A864", Offset = "0x1D0A864", VA = "0x1D0A864")]
		public static void GetBounds(this Mesh mesh, Axis axis, out Vector3 from, out Vector3 to)
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public class MeshSubdivider : MonoBehaviour
	{
		[Token(Token = "0x4003119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Vector3> vertices;

		[Token(Token = "0x400311A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Vector3> normals;

		[Token(Token = "0x400311B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Vector4> tangents;

		[Token(Token = "0x400311C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Color> colors;

		[Token(Token = "0x400311D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Vector2> uv;

		[Token(Token = "0x400311E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static List<Vector2> uv2;

		[Token(Token = "0x400311F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Vector2> uv3;

		[Token(Token = "0x4003120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<Vector2> uv4;

		[Token(Token = "0x4003121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<int> indices;

		[Token(Token = "0x4003122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Dictionary<uint, int> newVectices;

		[Token(Token = "0x6003208")]
		[Address(RVA = "0x1D107C0", Offset = "0x1D107C0", VA = "0x1D107C0")]
		private static void InitArrays(Mesh mesh)
		{
		}

		[Token(Token = "0x6003209")]
		[Address(RVA = "0x1D10B30", Offset = "0x1D10B30", VA = "0x1D10B30")]
		private static void CleanUp()
		{
		}

		[Token(Token = "0x600320A")]
		[Address(RVA = "0x1D10C10", Offset = "0x1D10C10", VA = "0x1D10C10")]
		private static int GetNewVertex4(int i1, int i2)
		{
			return default(int);
		}

		[Token(Token = "0x600320B")]
		[Address(RVA = "0x1D11600", Offset = "0x1D11600", VA = "0x1D11600")]
		private static void Subdivide4Submesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600320C")]
		[Address(RVA = "0x1D11EC4", Offset = "0x1D11EC4", VA = "0x1D11EC4")]
		private static int GetNewVertex9(int i1, int i2, int i3)
		{
			return default(int);
		}

		[Token(Token = "0x600320D")]
		[Address(RVA = "0x1D12A68", Offset = "0x1D12A68", VA = "0x1D12A68")]
		private static void Subdivide9Submesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600320E")]
		[Address(RVA = "0x1D13A18", Offset = "0x1D13A18", VA = "0x1D13A18")]
		private static void SubdivideSubmesh(Mesh mesh, int level)
		{
		}

		[Token(Token = "0x600320F")]
		[Address(RVA = "0x1D13AC4", Offset = "0x1D13AC4", VA = "0x1D13AC4")]
		private static Mesh Subdivide(Mesh originalMesh, Action<Mesh> subdivideAction)
		{
			return null;
		}

		[Token(Token = "0x6003210")]
		[Address(RVA = "0x1D150C8", Offset = "0x1D150C8", VA = "0x1D150C8")]
		public static Mesh Subdivide4(Mesh originalMesh)
		{
			return null;
		}

		[Token(Token = "0x6003211")]
		[Address(RVA = "0x1D151B0", Offset = "0x1D151B0", VA = "0x1D151B0")]
		public static Mesh Subdivide9(Mesh originalMesh)
		{
			return null;
		}

		[Token(Token = "0x6003212")]
		[Address(RVA = "0x1D15298", Offset = "0x1D15298", VA = "0x1D15298")]
		public static Mesh Subdivide(Mesh originalMesh, int level)
		{
			return null;
		}

		[Token(Token = "0x6003213")]
		[Address(RVA = "0x1D13D10", Offset = "0x1D13D10", VA = "0x1D13D10")]
		public static Mesh DuplicateMesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6003214")]
		[Address(RVA = "0x1D13D7C", Offset = "0x1D13D7C", VA = "0x1D13D7C")]
		public static Mesh ExtractSubmesh(Mesh mesh, int submeshIndex)
		{
			return null;
		}

		[Token(Token = "0x6003215")]
		[Address(RVA = "0x1D1535C", Offset = "0x1D1535C", VA = "0x1D1535C")]
		public MeshSubdivider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A5")]
	public class Slice
	{
		[Token(Token = "0x4003127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 m_center;

		[Token(Token = "0x4003128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_curveIndex;

		[Token(Token = "0x4003129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_t;

		[Token(Token = "0x400312A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int[] m_indices;

		[Token(Token = "0x170006E7")]
		public Vector3 Center
		{
			[Token(Token = "0x600321C")]
			[Address(RVA = "0x1D153FC", Offset = "0x1D153FC", VA = "0x1D153FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170006E8")]
		public int CurveIndex
		{
			[Token(Token = "0x600321D")]
			[Address(RVA = "0x1D15408", Offset = "0x1D15408", VA = "0x1D15408")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600321E")]
			[Address(RVA = "0x1D15410", Offset = "0x1D15410", VA = "0x1D15410")]
			set
			{
			}
		}

		[Token(Token = "0x170006E9")]
		public float T
		{
			[Token(Token = "0x600321F")]
			[Address(RVA = "0x1D15418", Offset = "0x1D15418", VA = "0x1D15418")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006EA")]
		public int[] Indices
		{
			[Token(Token = "0x6003220")]
			[Address(RVA = "0x1D15420", Offset = "0x1D15420", VA = "0x1D15420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003221")]
		[Address(RVA = "0x1D15428", Offset = "0x1D15428", VA = "0x1D15428")]
		public Slice(Vector3 center, int curveIndex, float t, int[] vertexIndices)
		{
		}
	}
	[Token(Token = "0x20007A6")]
	[ExecuteInEditMode]
	public class Scaffold : MonoBehaviour
	{
		[Token(Token = "0x400312B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Slice[] m_slices;

		[Token(Token = "0x400312C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Slice[] m_colliderSlices;

		[Token(Token = "0x400312D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Mesh m_mesh;

		[Token(Token = "0x400312E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_colliderMesh;

		[Token(Token = "0x400312F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private Vector3 m_up;

		[Token(Token = "0x4003130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private Quaternion m_axisRotation;

		[Token(Token = "0x4003131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private MeshDeformer m_deformer;

		[Token(Token = "0x4003132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private int m_instanceId;

		[Token(Token = "0x4003133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[SerializeField]
		private bool m_initialized;

		[Token(Token = "0x4003134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private MeshCollider m_collider;

		[Token(Token = "0x170006EB")]
		public Mesh Mesh
		{
			[Token(Token = "0x6003222")]
			[Address(RVA = "0x1D154A0", Offset = "0x1D154A0", VA = "0x1D154A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EC")]
		public Mesh ColliderMesh
		{
			[Token(Token = "0x6003223")]
			[Address(RVA = "0x1D154A8", Offset = "0x1D154A8", VA = "0x1D154A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006ED")]
		public int InstanceId
		{
			[Token(Token = "0x6003224")]
			[Address(RVA = "0x1D154B0", Offset = "0x1D154B0", VA = "0x1D154B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006EE")]
		public int SliceCount
		{
			[Token(Token = "0x6003225")]
			[Address(RVA = "0x1D154B8", Offset = "0x1D154B8", VA = "0x1D154B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003226")]
		[Address(RVA = "0x1D154D0", Offset = "0x1D154D0", VA = "0x1D154D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003227")]
		[Address(RVA = "0x1D15578", Offset = "0x1D15578", VA = "0x1D15578")]
		private void Start()
		{
		}

		[Token(Token = "0x6003228")]
		[Address(RVA = "0x1D15628", Offset = "0x1D15628", VA = "0x1D15628")]
		public void Shift(int delta)
		{
		}

		[Token(Token = "0x6003229")]
		[Address(RVA = "0x1D156B0", Offset = "0x1D156B0", VA = "0x1D156B0")]
		public void DuplicateMeshes()
		{
		}

		[Token(Token = "0x600322A")]
		[Address(RVA = "0x1D15850", Offset = "0x1D15850", VA = "0x1D15850")]
		public void Wrap(Mesh mesh, Mesh colliderMesh, Axis axis, int[] curveIndices, int sliceCount)
		{
		}

		[Token(Token = "0x600322B")]
		[Address(RVA = "0x1D15F0C", Offset = "0x1D15F0C", VA = "0x1D15F0C")]
		private Slice[] CreateSlices(Mesh mesh, Vector3 boundsFrom, Vector3 boundsTo, Axis axis, int[] curveIndices, int sliceCount)
		{
			return null;
		}

		[Token(Token = "0x600322C")]
		[Address(RVA = "0x1D0F5D0", Offset = "0x1D0F5D0", VA = "0x1D0F5D0")]
		public void RecalculateNormals()
		{
		}

		[Token(Token = "0x600322D")]
		[Address(RVA = "0x1D0F444", Offset = "0x1D0F444", VA = "0x1D0F444")]
		public void Deform(MeshDeformer deformer, Mesh original, Mesh colliderOriginal, bool isRigid)
		{
		}

		[Token(Token = "0x600322E")]
		[Address(RVA = "0x1D164A8", Offset = "0x1D164A8", VA = "0x1D164A8")]
		private Vector3[] Deform(Slice[] slices, Mesh mesh, MeshDeformer deformer, bool isRigid)
		{
			return null;
		}

		[Token(Token = "0x600322F")]
		[Address(RVA = "0x1D16A68", Offset = "0x1D16A68", VA = "0x1D16A68")]
		public void SlerpContacts(MeshDeformer deformer, Mesh original, Mesh colliderOriginal, Scaffold prev, Scaffold next, bool isRigid)
		{
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x1D16C6C", Offset = "0x1D16C6C", VA = "0x1D16C6C")]
		private void SlerpContacts(MeshDeformer deformer, Mesh mesh, Contact[] contacts, Scaffold prev, Mesh prevMesh, Scaffold next, Mesh nextMesh)
		{
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x1D16A08", Offset = "0x1D16A08", VA = "0x1D16A08")]
		private static Vector3 WrapAroundAxisTransform(MeshDeformer deformer, Vector3 vertex, Vector3 center, float curvature = 0.1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003232")]
		[Address(RVA = "0x1D1697C", Offset = "0x1D1697C", VA = "0x1D1697C")]
		private static Vector3 AxisTransform(MeshDeformer deformer, Vector3 vertex, Vector3 center, Vector3 scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003233")]
		[Address(RVA = "0x1D17334", Offset = "0x1D17334", VA = "0x1D17334")]
		public Scaffold()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A7")]
	public class ScaffoldWrapper
	{
		[Token(Token = "0x4003135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool m_isRigid;

		[Token(Token = "0x4003136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int[] m_curveIndices;

		[Token(Token = "0x4003137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Scaffold m_scaffold;

		[Token(Token = "0x4003138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_instanceId;

		[Token(Token = "0x4003139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_isEmptySpace;

		[Token(Token = "0x170006EF")]
		public Scaffold Scaffold
		{
			[Token(Token = "0x6003234")]
			[Address(RVA = "0x1D1733C", Offset = "0x1D1733C", VA = "0x1D1733C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F0")]
		public bool IsRigid
		{
			[Token(Token = "0x6003235")]
			[Address(RVA = "0x1D17344", Offset = "0x1D17344", VA = "0x1D17344")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003236")]
			[Address(RVA = "0x1D1734C", Offset = "0x1D1734C", VA = "0x1D1734C")]
			set
			{
			}
		}

		[Token(Token = "0x170006F1")]
		public int[] CurveIndices
		{
			[Token(Token = "0x6003237")]
			[Address(RVA = "0x1D17358", Offset = "0x1D17358", VA = "0x1D17358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003238")]
			[Address(RVA = "0x1D17360", Offset = "0x1D17360", VA = "0x1D17360")]
			set
			{
			}
		}

		[Token(Token = "0x170006F2")]
		public int SliceCount
		{
			[Token(Token = "0x6003239")]
			[Address(RVA = "0x1D17368", Offset = "0x1D17368", VA = "0x1D17368")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006F3")]
		public int ObjInstanceId
		{
			[Token(Token = "0x600323A")]
			[Address(RVA = "0x1D173F0", Offset = "0x1D173F0", VA = "0x1D173F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006F4")]
		public Scaffold Obj
		{
			[Token(Token = "0x600323B")]
			[Address(RVA = "0x1D173F8", Offset = "0x1D173F8", VA = "0x1D173F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600323C")]
			[Address(RVA = "0x1D17400", Offset = "0x1D17400", VA = "0x1D17400")]
			set
			{
			}
		}

		[Token(Token = "0x170006F5")]
		public bool IsEmptySpace
		{
			[Token(Token = "0x600323D")]
			[Address(RVA = "0x1D17408", Offset = "0x1D17408", VA = "0x1D17408")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x1D17410", Offset = "0x1D17410", VA = "0x1D17410")]
		public ScaffoldWrapper()
		{
		}

		[Token(Token = "0x600323F")]
		[Address(RVA = "0x1D0AF94", Offset = "0x1D0AF94", VA = "0x1D0AF94")]
		public ScaffoldWrapper(Scaffold scaffold, bool isRigid)
		{
		}

		[Token(Token = "0x6003240")]
		[Address(RVA = "0x1D0C93C", Offset = "0x1D0C93C", VA = "0x1D0C93C")]
		public void DuplicateMeshes()
		{
		}

		[Token(Token = "0x6003241")]
		[Address(RVA = "0x1D0B04C", Offset = "0x1D0B04C", VA = "0x1D0B04C")]
		public void Wrap(Mesh mesh, Mesh colliderMesh, Axis axis, int[] curveIndices, int sliceCount)
		{
		}

		[Token(Token = "0x6003242")]
		[Address(RVA = "0x1D0D7B4", Offset = "0x1D0D7B4", VA = "0x1D0D7B4")]
		public void Shift(int delta)
		{
		}

		[Token(Token = "0x6003243")]
		[Address(RVA = "0x1D0B1E0", Offset = "0x1D0B1E0", VA = "0x1D0B1E0")]
		public void RecalculateNormals()
		{
		}

		[Token(Token = "0x6003244")]
		[Address(RVA = "0x1D0B12C", Offset = "0x1D0B12C", VA = "0x1D0B12C")]
		public void Deform(MeshDeformer deformer, Mesh original, Mesh colliderOriginal)
		{
		}

		[Token(Token = "0x6003245")]
		[Address(RVA = "0x1D0B8F8", Offset = "0x1D0B8F8", VA = "0x1D0B8F8")]
		public void SlerpContacts(MeshDeformer deformer, Mesh original, Mesh colliderOriginal, ScaffoldWrapper prev, ScaffoldWrapper next)
		{
		}
	}
}
namespace Battlehub.MeshTools
{
	[Token(Token = "0x20007A8")]
	public class MeshTransform
	{
		[Token(Token = "0x400313A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Mesh;

		[Token(Token = "0x400313B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 Transform;

		[Token(Token = "0x6003246")]
		[Address(RVA = "0x1D17418", Offset = "0x1D17418", VA = "0x1D17418")]
		public MeshTransform(Mesh mesh, Matrix4x4 transform)
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class CombineResult
	{
		[Token(Token = "0x400313C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject GameObject;

		[Token(Token = "0x400313D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Mesh;

		[Token(Token = "0x6003247")]
		[Address(RVA = "0x1D17468", Offset = "0x1D17468", VA = "0x1D17468")]
		public CombineResult(GameObject gameObject, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20007AA")]
	public class Vector3ToHash
	{
		[Token(Token = "0x400313E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_hashCode;

		[Token(Token = "0x400313F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 m_v;

		[Token(Token = "0x6003248")]
		[Address(RVA = "0x1D10600", Offset = "0x1D10600", VA = "0x1D10600")]
		public Vector3ToHash(Vector3 v)
		{
		}

		[Token(Token = "0x6003249")]
		[Address(RVA = "0x1D174AC", Offset = "0x1D174AC", VA = "0x1D174AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600324A")]
		[Address(RVA = "0x1D174B4", Offset = "0x1D174B4", VA = "0x1D174B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007AB")]
	public static class MeshUtils
	{
		[Token(Token = "0x600324B")]
		[Address(RVA = "0x1D175D8", Offset = "0x1D175D8", VA = "0x1D175D8")]
		public static Mesh RemoveDoubles(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600324C")]
		[Address(RVA = "0x1D18110", Offset = "0x1D18110", VA = "0x1D18110")]
		public static CombineResult Combine(GameObject[] gameObjects, [Optional] GameObject target)
		{
			return null;
		}

		[Token(Token = "0x600324D")]
		[Address(RVA = "0x1D1A2A8", Offset = "0x1D1A2A8", VA = "0x1D1A2A8")]
		private static Mesh RemoveRotation(Mesh mesh, Matrix4x4 targetRotationMatrix, bool merge)
		{
			return null;
		}

		[Token(Token = "0x600324E")]
		[Address(RVA = "0x1D197E4", Offset = "0x1D197E4", VA = "0x1D197E4")]
		private static bool BuildCombineInstance(Matrix4x4 targetToLocal, List<MeshFilter> allMeshFilters, List<SkinnedMeshRenderer> allSkinned, out CombineInstance[] combineInstances, out Material[] materials)
		{
			return default(bool);
		}

		[Token(Token = "0x600324F")]
		[Address(RVA = "0x1D1A5D0", Offset = "0x1D1A5D0", VA = "0x1D1A5D0")]
		private static void PopulateMeshGroups(Dictionary<Material, List<MeshTransform>> meshGroups, GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x6003250")]
		[Address(RVA = "0x1D18F28", Offset = "0x1D18F28", VA = "0x1D18F28")]
		private static void DestroyChildren(GameObject gameObject)
		{
		}

		[Token(Token = "0x6003251")]
		[Address(RVA = "0x1D19598", Offset = "0x1D19598", VA = "0x1D19598")]
		private static List<Mesh> GetColliderMeshes(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6003252")]
		[Address(RVA = "0x1D1A940", Offset = "0x1D1A940", VA = "0x1D1A940")]
		public static Vector3 CenterOfMass(GameObject gameObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003253")]
		[Address(RVA = "0x1D1A9E0", Offset = "0x1D1A9E0", VA = "0x1D1A9E0")]
		public static Vector3 CenterOfMass(Mesh mesh)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003254")]
		[Address(RVA = "0x1D1ABBC", Offset = "0x1D1ABBC", VA = "0x1D1ABBC")]
		public static Vector3 BoundsCenter(GameObject gameObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003255")]
		[Address(RVA = "0x1D1AC5C", Offset = "0x1D1AC5C", VA = "0x1D1AC5C")]
		public static Vector3 BoundsCenter(Mesh mesh)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003256")]
		[Address(RVA = "0x1D1ACB8", Offset = "0x1D1ACB8", VA = "0x1D1ACB8")]
		public static Mesh SetPivot(Mesh mesh, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6003257")]
		[Address(RVA = "0x1D1AFBC", Offset = "0x1D1AFBC", VA = "0x1D1AFBC")]
		public static Mesh SetPivot(Transform transform, Mesh mesh, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6003258")]
		[Address(RVA = "0x1D1AD38", Offset = "0x1D1AD38", VA = "0x1D1AD38")]
		public static Mesh EditPivot(Mesh mesh, Vector3 offset)
		{
			return null;
		}

		[Token(Token = "0x6003259")]
		[Address(RVA = "0x1D1B080", Offset = "0x1D1B080", VA = "0x1D1B080")]
		public static Mesh EditPivot(Transform transform, Vector3 worldOffset, Collider[] colliders)
		{
			return null;
		}

		[Token(Token = "0x600325A")]
		[Address(RVA = "0x1D1A468", Offset = "0x1D1A468", VA = "0x1D1A468")]
		public static Mesh[] Separate(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600325B")]
		[Address(RVA = "0x1D1B380", Offset = "0x1D1B380", VA = "0x1D1B380")]
		public static Mesh ExtractSubmesh(Mesh mesh, int submeshIndex)
		{
			return null;
		}
	}
	[Token(Token = "0x20007AC")]
	[ExecuteInEditMode]
	public class Pivot : MonoBehaviour
	{
		[Token(Token = "0x4003140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform Target;

		[Token(Token = "0x600325C")]
		[Address(RVA = "0x1C2E04C", Offset = "0x1C2E04C", VA = "0x1C2E04C")]
		private void Start()
		{
		}

		[Token(Token = "0x600325D")]
		[Address(RVA = "0x1C2E19C", Offset = "0x1C2E19C", VA = "0x1C2E19C")]
		public Pivot()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	[ExecuteInEditMode]
	public class PivotDesignTime : MonoBehaviour
	{
		[Token(Token = "0x4003141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_prevPosition;

		[Token(Token = "0x4003142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_prevTargetPosition;

		[Token(Token = "0x4003143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Pivot m_origin;

		[Token(Token = "0x4003144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] m_colliders;

		[Token(Token = "0x600325E")]
		[Address(RVA = "0x1C2E1A4", Offset = "0x1C2E1A4", VA = "0x1C2E1A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600325F")]
		[Address(RVA = "0x1C2E2DC", Offset = "0x1C2E2DC", VA = "0x1C2E2DC")]
		public void ToBoundsCenter()
		{
		}

		[Token(Token = "0x6003260")]
		[Address(RVA = "0x1C2E328", Offset = "0x1C2E328", VA = "0x1C2E328")]
		public void ToCenterOffMass()
		{
		}

		[Token(Token = "0x6003261")]
		[Address(RVA = "0x1C2E374", Offset = "0x1C2E374", VA = "0x1C2E374")]
		private void Update()
		{
		}

		[Token(Token = "0x6003262")]
		[Address(RVA = "0x1C2E67C", Offset = "0x1C2E67C", VA = "0x1C2E67C")]
		public PivotDesignTime()
		{
		}
	}
}
namespace Battlehub.Integration
{
	[Token(Token = "0x20007AE")]
	public class IntegrationArgs
	{
		[Token(Token = "0x4003145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject GameObject;

		[Token(Token = "0x4003146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh Mesh;

		[Token(Token = "0x4003147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Cancel;

		[Token(Token = "0x6003263")]
		[Address(RVA = "0x1C2E684", Offset = "0x1C2E684", VA = "0x1C2E684")]
		public IntegrationArgs()
		{
		}

		[Token(Token = "0x6003264")]
		[Address(RVA = "0x1C2E68C", Offset = "0x1C2E68C", VA = "0x1C2E68C")]
		public IntegrationArgs(GameObject gameObject)
		{
		}

		[Token(Token = "0x6003265")]
		[Address(RVA = "0x1C2E6BC", Offset = "0x1C2E6BC", VA = "0x1C2E6BC")]
		public IntegrationArgs(GameObject gameObject, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public delegate void IntegrationHandler(IntegrationArgs args);
	[Token(Token = "0x20007B0")]
	public static class MeshCombinerIntegration
	{
		[Token(Token = "0x14000056")]
		public static event IntegrationHandler Combined
		{
			[Token(Token = "0x600326A")]
			[Address(RVA = "0x1C2E87C", Offset = "0x1C2E87C", VA = "0x1C2E87C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600326B")]
			[Address(RVA = "0x1C2E934", Offset = "0x1C2E934", VA = "0x1C2E934")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public static event IntegrationHandler BeginEditPivot
		{
			[Token(Token = "0x600326C")]
			[Address(RVA = "0x1C2E9EC", Offset = "0x1C2E9EC", VA = "0x1C2E9EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600326D")]
			[Address(RVA = "0x1C2EAA8", Offset = "0x1C2EAA8", VA = "0x1C2EAA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x1C2EB64", Offset = "0x1C2EB64", VA = "0x1C2EB64")]
		public static void RaiseCombined(GameObject go, Mesh mesh)
		{
		}

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x1C2EC14", Offset = "0x1C2EC14", VA = "0x1C2EC14")]
		public static bool RaiseBeginEditPivot(GameObject go, Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007B1")]
	public static class MeshDeformerIntegration
	{
		[Token(Token = "0x14000058")]
		public static event IntegrationHandler BeforeDeform
		{
			[Token(Token = "0x6003270")]
			[Address(RVA = "0x1C2ECDC", Offset = "0x1C2ECDC", VA = "0x1C2ECDC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003271")]
			[Address(RVA = "0x1C2ED94", Offset = "0x1C2ED94", VA = "0x1C2ED94")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6003272")]
		[Address(RVA = "0x1C2EE4C", Offset = "0x1C2EE4C", VA = "0x1C2EE4C")]
		public static bool RaiseBeforeDeform(GameObject gameObject, Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007B2")]
	public static class WiresIntegration
	{
		[Token(Token = "0x14000059")]
		public static event IntegrationHandler WireParamsChanged
		{
			[Token(Token = "0x6003273")]
			[Address(RVA = "0x1C2EF14", Offset = "0x1C2EF14", VA = "0x1C2EF14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003274")]
			[Address(RVA = "0x1C2EFCC", Offset = "0x1C2EFCC", VA = "0x1C2EFCC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public static event IntegrationHandler BeforeWireCreated
		{
			[Token(Token = "0x6003275")]
			[Address(RVA = "0x1C2F084", Offset = "0x1C2F084", VA = "0x1C2F084")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6003276")]
			[Address(RVA = "0x1C2F140", Offset = "0x1C2F140", VA = "0x1C2F140")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6003277")]
		[Address(RVA = "0x1C2F1FC", Offset = "0x1C2F1FC", VA = "0x1C2F1FC")]
		public static bool RaiseBeforeWireCreated(GameObject gameObject, Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6003278")]
		[Address(RVA = "0x1C2F2C4", Offset = "0x1C2F2C4", VA = "0x1C2F2C4")]
		public static void RaiseWireParamsChanged(GameObject gameObject, Mesh mesh)
		{
		}
	}
}
