using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using CSCore.DSP;
using Crosstales.OnlineCheck;
using DG.Tweening;
using Dissonance;
using Dissonance.Audio.Capture;
using Dissonance.Datastructures;
using Dissonance.Networking;
using ExitGames.Client.Photon;
using GleyLocalization;
using Google.Apis.Auth.OAuth2;
using Google.Apis.Auth.OAuth2.Requests;
using Google.Apis.Auth.OAuth2.Responses;
using Google.Apis.Download;
using Google.Apis.Drive.v3;
using Google.Apis.Drive.v3.Data;
using Google.Apis.PeopleService.v1.Data;
using Google.Apis.Upload;
using Google.Apis.Util.Store;
using ICSharpCode.SharpZipLibUnityPort.Zip;
using Il2CppDummyDll;
using Ionic.Zip;
using JetBrains.Annotations;
using MEC;
using MIConvexHull;
using Microsoft.CodeAnalysis;
using MultiBrush;
using NAudio.Wave;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using ODS;
using Oculus.Avatar2;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice;
using Photon.Voice.Unity;
using Reaktion;
using Smooth;
using TMPro;
using TiltBrush;
using TiltBrushToolkit;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.ARFoundation;
using UnityEngine.XR.Management;
using VRstudios.API;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279B4", Offset = "0xB279B4")]
internal sealed class <>f__AnonymousType0<<score>j__TPar, <widget>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB2B074", Offset = "0xB2B074")]
	private readonly <score>j__TPar <score>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB2B088", Offset = "0xB2B088")]
	private readonly <widget>j__TPar <widget>i__Field;

	[Token(Token = "0x17000001")]
	public <score>j__TPar score
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<score>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <widget>j__TPar widget
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<widget>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<score>j__TPar score, <widget>j__TPar widget)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279C4", Offset = "0xB279C4")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0xED4F5C", Offset = "0xED4F5C", VA = "0xED4F5C")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000004")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB279FC", Offset = "0xB279FC")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsUnmanagedAttribute : Attribute
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x12DBE28", Offset = "0x12DBE28", VA = "0x12DBE28")]
		public IsUnmanagedAttribute()
		{
		}
	}
}
[Token(Token = "0x2000005")]
public class ExampleAppLauncher : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string log;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xED6428", Offset = "0xED6428", VA = "0xED6428")]
	private void OnSuccess(string message)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xED648C", Offset = "0xED648C", VA = "0xED648C")]
	private void OnError(string message)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xED64F0", Offset = "0xED64F0", VA = "0xED64F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xED718C", Offset = "0xED718C", VA = "0xED718C")]
	public ExampleAppLauncher()
	{
	}
}
[Token(Token = "0x2000006")]
public class DisableForPreinstall : MonoBehaviour
{
	[Token(Token = "0x600000D")]
	[Address(RVA = "0xEC7BCC", Offset = "0xEC7BCC", VA = "0xEC7BCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xEC7BD0", Offset = "0xEC7BD0", VA = "0xEC7BD0")]
	public DisableForPreinstall()
	{
	}
}
[Token(Token = "0x2000007")]
public class SetLanguageExample : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text languageText;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text nextText;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text prevText;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playText;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text exitText;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text saveText;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE7C944", Offset = "0xE7C944", VA = "0xE7C944")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE7C948", Offset = "0xE7C948", VA = "0xE7C948")]
	private void RefreshTexts()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE7CB44", Offset = "0xE7CB44", VA = "0xE7CB44")]
	public void NextLanguage()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xE7CB6C", Offset = "0xE7CB6C", VA = "0xE7CB6C")]
	public void PrevLanguage()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xE7CB94", Offset = "0xE7CB94", VA = "0xE7CB94")]
	public void SaveLanguage()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE7CBB0", Offset = "0xE7CBB0", VA = "0xE7CBB0")]
	public SetLanguageExample()
	{
	}
}
[Token(Token = "0x2000008")]
public interface ILocalizationComponent
{
	[Token(Token = "0x6000015")]
	void Refresh();
}
[Token(Token = "0x2000009")]
public enum SupportedLanguages
{
	[Token(Token = "0x400000B")]
	Chinese = 6,
	[Token(Token = "0x400000C")]
	English = 10,
	[Token(Token = "0x400000D")]
	Japanese = 22,
	[Token(Token = "0x400000E")]
	Korean = 23
}
[Token(Token = "0x200000A")]
public enum WordIDs
{
	[Token(Token = "0x4000010")]
	AbnormalProgramTermination = 572,
	[Token(Token = "0x4000011")]
	About = 46,
	[Token(Token = "0x4000012")]
	Accounts = 355,
	[Token(Token = "0x4000013")]
	AddAnchorPoint = 110,
	[Token(Token = "0x4000014")]
	AddDirectionPoint = 112,
	[Token(Token = "0x4000015")]
	AddedToSketchbook = 580,
	[Token(Token = "0x4000016")]
	Addimagesandmodelstoseethemhere = 372,
	[Token(Token = "0x4000017")]
	AddImagesToSeeHere = 238,
	[Token(Token = "0x4000018")]
	AddMedia = 60,
	[Token(Token = "0x4000019")]
	AddNewPath = 311,
	[Token(Token = "0x400001A")]
	AddSpeedPoint = 113,
	[Token(Token = "0x400001B")]
	AddZoomPoint = 114,
	[Token(Token = "0x400001C")]
	AdjustBrushSize = 273,
	[Token(Token = "0x400001D")]
	AdvancedMode = 100,
	[Token(Token = "0x400001E")]
	Andy = 129,
	[Token(Token = "0x400001F")]
	Audiofound = 296,
	[Token(Token = "0x4000020")]
	AudioReactor = 85,
	[Token(Token = "0x4000021")]
	Autosimplification = 50,
	[Token(Token = "0x4000022")]
	AvatarOptions = 320,
	[Token(Token = "0x4000023")]
	Avatarsaredisabled = 400,
	[Token(Token = "0x4000024")]
	Avatarsareenabled = 399,
	[Token(Token = "0x4000025")]
	Back = 602,
	[Token(Token = "0x4000026")]
	Backdrop = 121,
	[Token(Token = "0x4000027")]
	BackedupSketches = 409,
	[Token(Token = "0x4000028")]
	BackingUp = 564,
	[Token(Token = "0x4000029")]
	BackinguponDrive = 408,
	[Token(Token = "0x400002A")]
	BackupComplete = 556,
	[Token(Token = "0x400002B")]
	BeginnerMode = 101,
	[Token(Token = "0x400002C")]
	BETA = 546,
	[Token(Token = "0x400002D")]
	Black = 181,
	[Token(Token = "0x400002E")]
	Blank = 613,
	[Token(Token = "0x400002F")]
	Blue = 183,
	[Token(Token = "0x4000030")]
	BluePrint = 494,
	[Token(Token = "0x4000031")]
	BrightWhite = 502,
	[Token(Token = "0x4000032")]
	BrowsePoly = 80,
	[Token(Token = "0x4000033")]
	Brush = 282,
	[Token(Token = "0x4000034")]
	BrushAndColor = 228,
	[Token(Token = "0x4000035")]
	Brushes = 124,
	[Token(Token = "0x4000036")]
	BrushName = 219,
	[Token(Token = "0x4000037")]
	BrushnColor = 392,
	[Token(Token = "0x4000038")]
	BrushNumbers = 598,
	[Token(Token = "0x4000039")]
	BrushPicker = 230,
	[Token(Token = "0x400003A")]
	BrushTipAngle = 52,
	[Token(Token = "0x400003B")]
	Bubbles = 150,
	[Token(Token = "0x400003C")]
	BubbleWand = 441,
	[Token(Token = "0x400003D")]
	Camera = 122,
	[Token(Token = "0x400003E")]
	CameraFilters = 91,
	[Token(Token = "0x400003F")]
	CameraMode = 38,
	[Token(Token = "0x4000040")]
	CameraPaths = 402,
	[Token(Token = "0x4000041")]
	Cameras = 28,
	[Token(Token = "0x4000042")]
	Cancel = 58,
	[Token(Token = "0x4000043")]
	CancelAction = 33,
	[Token(Token = "0x4000044")]
	CanvasIsNow = 578,
	[Token(Token = "0x4000045")]
	CapsuleGuide = 70,
	[Token(Token = "0x4000046")]
	CelVinyl = 156,
	[Token(Token = "0x4000047")]
	ChangeName = 249,
	[Token(Token = "0x4000048")]
	Charcoal = 453,
	[Token(Token = "0x4000049")]
	ChooseAnEnvironment = 643,
	[Token(Token = "0x400004A")]
	ChromaticWave = 154,
	[Token(Token = "0x400004B")]
	ClearSketch = 102,
	[Token(Token = "0x400004C")]
	ClicktoConfirm = 391,
	[Token(Token = "0x400004D")]
	ClickToConfirm = 203,
	[Token(Token = "0x400004E")]
	Clicktodisableavatars = 417,
	[Token(Token = "0x400004F")]
	Clicktoenableavatars = 418,
	[Token(Token = "0x4000050")]
	ClicktoLoad = 130,
	[Token(Token = "0x4000051")]
	Clicktomakeprivate = 416,
	[Token(Token = "0x4000052")]
	Clicktomakepublic = 415,
	[Token(Token = "0x4000053")]
	Close = 563,
	[Token(Token = "0x4000054")]
	CloseMultiplayerPanel = 115,
	[Token(Token = "0x4000055")]
	CloseSettings = 59,
	[Token(Token = "0x4000056")]
	CloseSketchbook = 40,
	[Token(Token = "0x4000057")]
	CoarseBristles = 146,
	[Token(Token = "0x4000058")]
	color = 369,
	[Token(Token = "0x4000059")]
	ColorName = 65,
	[Token(Token = "0x400005A")]
	ColorPicker = 229,
	[Token(Token = "0x400005B")]
	Comet = 168,
	[Token(Token = "0x400005C")]
	Comics = 498,
	[Token(Token = "0x400005D")]
	ConcaveHull = 458,
	[Token(Token = "0x400005E")]
	Createanewsavefile = 291,
	[Token(Token = "0x400005F")]
	CreateMultiplayerRoom = 276,
	[Token(Token = "0x4000060")]
	CreatePrivateRoom = 306,
	[Token(Token = "0x4000061")]
	CreatePrivateRoomWithPassword = 640,
	[Token(Token = "0x4000062")]
	CreatePublicRoom = 639,
	[Token(Token = "0x4000063")]
	CreateRoom = 250,
	[Token(Token = "0x4000064")]
	CubeGuide = 69,
	[Token(Token = "0x4000065")]
	CustomizeSkybox = 236,
	[Token(Token = "0x4000066")]
	DanceFloor = 440,
	[Token(Token = "0x4000067")]
	DeletePath = 108,
	[Token(Token = "0x4000068")]
	DeletePoints = 111,
	[Token(Token = "0x4000069")]
	DeleteSketch = 266,
	[Token(Token = "0x400006A")]
	Density = 73,
	[Token(Token = "0x400006B")]
	Diamond = 169,
	[Token(Token = "0x400006C")]
	DimGrey = 144,
	[Token(Token = "0x400006D")]
	DISABLE = 543,
	[Token(Token = "0x400006E")]
	DisableBackup = 553,
	[Token(Token = "0x400006F")]
	DisabledinPassthrough = 327,
	[Token(Token = "0x4000070")]
	Disco = 165,
	[Token(Token = "0x4000071")]
	DiscoModeUnlocked = 574,
	[Token(Token = "0x4000072")]
	DistanceIndicator = 48,
	[Token(Token = "0x4000073")]
	DoNothing = 316,
	[Token(Token = "0x4000074")]
	DotMarker = 444,
	[Token(Token = "0x4000075")]
	Dots = 157,
	[Token(Token = "0x4000076")]
	DoubleFlat = 436,
	[Token(Token = "0x4000077")]
	DoubleMirror = 104,
	[Token(Token = "0x4000078")]
	Drafting = 438,
	[Token(Token = "0x4000079")]
	DressForm = 175,
	[Token(Token = "0x400007A")]
	DriveBackup = 520,
	[Token(Token = "0x400007B")]
	DriveBackupComplete = 407,
	[Token(Token = "0x400007C")]
	DriveBackupDisabled = 406,
	[Token(Token = "0x400007D")]
	DriveBackupFull = 405,
	[Token(Token = "0x400007E")]
	DroppedFrames = 222,
	[Token(Token = "0x400007F")]
	Dropper = 88,
	[Token(Token = "0x4000080")]
	DrWigglez = 105,
	[Token(Token = "0x4000081")]
	DryBrush = 430,
	[Token(Token = "0x4000082")]
	DuctTape = 142,
	[Token(Token = "0x4000083")]
	DuctTapeGeometry = 456,
	[Token(Token = "0x4000084")]
	DuplicatewhenSelectionTooloverlapsselection = 468,
	[Token(Token = "0x4000085")]
	EdgeColor = 396,
	[Token(Token = "0x4000086")]
	EdgeDetection = 351,
	[Token(Token = "0x4000087")]
	EdgeDetectionOptions = 601,
	[Token(Token = "0x4000088")]
	EdgeThickness = 353,
	[Token(Token = "0x4000089")]
	EditAvatar = 610,
	[Token(Token = "0x400008A")]
	Effects = 501,
	[Token(Token = "0x400008B")]
	Electricity = 152,
	[Token(Token = "0x400008C")]
	EllipsoidGuide = 71,
	[Token(Token = "0x400008D")]
	Embers = 134,
	[Token(Token = "0x400008E")]
	EnabledbyEdgeDetection = 352,
	[Token(Token = "0x400008F")]
	EnabledbyPassthrough = 350,
	[Token(Token = "0x4000090")]
	ENABLEDRIVEBACKUP = 547,
	[Token(Token = "0x4000091")]
	EnablingGoogleDrivebackupkeepsyourworksavedtothecloud = 545,
	[Token(Token = "0x4000092")]
	EnhancedComics = 497,
	[Token(Token = "0x4000093")]
	EnterName = 198,
	[Token(Token = "0x4000094")]
	EnterPassword = 197,
	[Token(Token = "0x4000095")]
	EnterRoomPassword = 260,
	[Token(Token = "0x4000096")]
	EnterUsername = 196,
	[Token(Token = "0x4000097")]
	Environment = 27,
	[Token(Token = "0x4000098")]
	Eraser = 25,
	[Token(Token = "0x4000099")]
	Error = 575,
	[Token(Token = "0x400009A")]
	ErrorConnectingtoPoly = 357,
	[Token(Token = "0x400009B")]
	ErrorloadingsketchesHowsyourInternet = 510,
	[Token(Token = "0x400009C")]
	ErrorLoadingSketchesPleasecheckyourinternetconnection = 379,
	[Token(Token = "0x400009D")]
	Example = 270,
	[Token(Token = "0x400009E")]
	Export = 37,
	[Token(Token = "0x400009F")]
	Exported = 569,
	[Token(Token = "0x40000A0")]
	ExportingEllipsis = 618,
	[Token(Token = "0x40000A1")]
	Exports = 550,
	[Token(Token = "0x40000A2")]
	FacetedTube = 443,
	[Token(Token = "0x40000A3")]
	FailedToConnect = 89,
	[Token(Token = "0x40000A4")]
	Failedtoconnecttoserver = 314,
	[Token(Token = "0x40000A5")]
	FailedToStartCapture = 577,
	[Token(Token = "0x40000A6")]
	Fairy = 449,
	[Token(Token = "0x40000A7")]
	Feather = 457,
	[Token(Token = "0x40000A8")]
	FeaturedModels = 82,
	[Token(Token = "0x40000A9")]
	FeaturedSketches = 43,
	[Token(Token = "0x40000AA")]
	FieldofView = 78,
	[Token(Token = "0x40000AB")]
	FillLight = 66,
	[Token(Token = "0x40000AC")]
	Fire = 133,
	[Token(Token = "0x40000AD")]
	FiveSecondGif = 280,
	[Token(Token = "0x40000AE")]
	Flat = 195,
	[Token(Token = "0x40000AF")]
	FlipSelection = 93,
	[Token(Token = "0x40000B0")]
	Fog = 221,
	[Token(Token = "0x40000B1")]
	FogColor = 74,
	[Token(Token = "0x40000B2")]
	Formultiplayerpleaseloadbeforecreatingroom = 641,
	[Token(Token = "0x40000B3")]
	Foveation1 = 54,
	[Token(Token = "0x40000B4")]
	FreePaint = 227,
	[Token(Token = "0x40000B5")]
	FromPoly = 44,
	[Token(Token = "0x40000B6")]
	FromThisComputer = 42,
	[Token(Token = "0x40000B7")]
	Game = 422,
	[Token(Token = "0x40000B8")]
	Geometry = 434,
	[Token(Token = "0x40000B9")]
	GeomThickDuctTape = 519,
	[Token(Token = "0x40000BA")]
	GIFCaptured = 594,
	[Token(Token = "0x40000BB")]
	GIFTrashed = 587,
	[Token(Token = "0x40000BC")]
	GIFWritten = 588,
	[Token(Token = "0x40000BD")]
	Golden = 491,
	[Token(Token = "0x40000BE")]
	Google = 562,
	[Token(Token = "0x40000BF")]
	GoogleDriveBackup = 557,
	[Token(Token = "0x40000C0")]
	GoogleDriveBackupDisabled = 548,
	[Token(Token = "0x40000C1")]
	GoogleDriveBackupFull = 535,
	[Token(Token = "0x40000C2")]
	GOTIT = 539,
	[Token(Token = "0x40000C3")]
	Gouache = 433,
	[Token(Token = "0x40000C4")]
	GripthenPressAOrXToResetYourSize = 479,
	[Token(Token = "0x40000C5")]
	GripthenPressTrackpadtoResetYourSize = 481,
	[Token(Token = "0x40000C6")]
	GripToGrab = 209,
	[Token(Token = "0x40000C7")]
	GriptoGrabObjects = 478,
	[Token(Token = "0x40000C8")]
	GripToMove = 256,
	[Token(Token = "0x40000C9")]
	Grouped = 582,
	[Token(Token = "0x40000CA")]
	GroupSelection = 92,
	[Token(Token = "0x40000CB")]
	GuesstheWord = 412,
	[Token(Token = "0x40000CC")]
	Guides = 103,
	[Token(Token = "0x40000CD")]
	Guts = 423,
	[Token(Token = "0x40000CE")]
	HandTracking = 567,
	[Token(Token = "0x40000CF")]
	HandTrackingWarning = 568,
	[Token(Token = "0x40000D0")]
	Help = 45,
	[Token(Token = "0x40000D1")]
	HelpfulinfobehindBrushController = 465,
	[Token(Token = "0x40000D2")]
	High = 269,
	[Token(Token = "0x40000D3")]
	Highlighter = 185,
	[Token(Token = "0x40000D4")]
	HoldAToDuplicateASelection = 332,
	[Token(Token = "0x40000D5")]
	HoldGriptoMove = 323,
	[Token(Token = "0x40000D6")]
	HoldTriggerforPreview = 328,
	[Token(Token = "0x40000D7")]
	HoldTriggertoPaint = 339,
	[Token(Token = "0x40000D8")]
	HoldXToDuplicate = 275,
	[Token(Token = "0x40000D9")]
	HoldXToDuplicateASelection = 343,
	[Token(Token = "0x40000DA")]
	Hypercolor = 147,
	[Token(Token = "0x40000DB")]
	HyperGrid = 148,
	[Token(Token = "0x40000DC")]
	Icing = 161,
	[Token(Token = "0x40000DD")]
	Illustrative = 180,
	[Token(Token = "0x40000DE")]
	Importedmediawillnotbevisibletootherplayers = 386,
	[Token(Token = "0x40000DF")]
	Incorrectpassword = 310,
	[Token(Token = "0x40000E0")]
	Info = 393,
	[Token(Token = "0x40000E1")]
	Ink = 190,
	[Token(Token = "0x40000E2")]
	InkGeometry = 447,
	[Token(Token = "0x40000E3")]
	InPrivateRoom = 241,
	[Token(Token = "0x40000E4")]
	InPublicRoom = 258,
	[Token(Token = "0x40000E5")]
	InRoom = 257,
	[Token(Token = "0x40000E6")]
	InvertSelection = 95,
	[Token(Token = "0x40000E7")]
	InviteUser = 309,
	[Token(Token = "0x40000E8")]
	KeijiroTube = 452,
	[Token(Token = "0x40000E9")]
	Kuwahara = 495,
	[Token(Token = "0x40000EA")]
	Labs = 118,
	[Token(Token = "0x40000EB")]
	Lacewing = 446,
	[Token(Token = "0x40000EC")]
	Laplacian = 496,
	[Token(Token = "0x40000ED")]
	LeakyPen = 429,
	[Token(Token = "0x40000EE")]
	LEARNMORE = 359,
	[Token(Token = "0x40000EF")]
	LeaveRoom = 244,
	[Token(Token = "0x40000F0")]
	Light = 132,
	[Token(Token = "0x40000F1")]
	LightBlue = 145,
	[Token(Token = "0x40000F2")]
	LightColor = 237,
	[Token(Token = "0x40000F3")]
	Lights = 120,
	[Token(Token = "0x40000F4")]
	LightWire = 151,
	[Token(Token = "0x40000F5")]
	LikedModels = 83,
	[Token(Token = "0x40000F6")]
	LikedSketches = 410,
	[Token(Token = "0x40000F7")]
	LikemodelsonPolytoseethemhere = 364,
	[Token(Token = "0x40000F8")]
	LikesketchesonPolytoseethemhere = 383,
	[Token(Token = "0x40000F9")]
	LoadBeforeCreatingRoom = 286,
	[Token(Token = "0x40000FA")]
	Loading = 271,
	[Token(Token = "0x40000FB")]
	LoadingEllipsis = 616,
	[Token(Token = "0x40000FC")]
	LoadingImagesEllipsis = 617,
	[Token(Token = "0x40000FD")]
	LoadingMediaEllipsis = 619,
	[Token(Token = "0x40000FE")]
	LoadingModelsEllipsis = 615,
	[Token(Token = "0x40000FF")]
	LoadingmodelsfromPolyCheckbacksoon = 509,
	[Token(Token = "0x4000100")]
	LoadingRoomList = 252,
	[Token(Token = "0x4000101")]
	LoadingSketchEllipsis = 614,
	[Token(Token = "0x4000102")]
	LoadModels = 597,
	[Token(Token = "0x4000103")]
	LocalImages = 62,
	[Token(Token = "0x4000104")]
	LocalMediaLibrary = 35,
	[Token(Token = "0x4000105")]
	LocalModels = 61,
	[Token(Token = "0x4000106")]
	LocalVideos = 63,
	[Token(Token = "0x4000107")]
	Lofted = 162,
	[Token(Token = "0x4000108")]
	LoftedHueShift = 451,
	[Token(Token = "0x4000109")]
	Lookingforaudio = 171,
	[Token(Token = "0x400010A")]
	Low = 267,
	[Token(Token = "0x400010B")]
	MainLight = 67,
	[Token(Token = "0x400010C")]
	MANAGE = 544,
	[Token(Token = "0x400010D")]
	MarbledRainbow = 454,
	[Token(Token = "0x400010E")]
	Marker = 194,
	[Token(Token = "0x400010F")]
	MatteHull = 163,
	[Token(Token = "0x4000110")]
	MaxRoomSize = 508,
	[Token(Token = "0x4000111")]
	MediaLibrary = 119,
	[Token(Token = "0x4000112")]
	Medium = 268,
	[Token(Token = "0x4000113")]
	MemoryLimitCaution = 299,
	[Token(Token = "0x4000114")]
	MemoryLimitExceeded = 318,
	[Token(Token = "0x4000115")]
	MemoryManagementOptions = 374,
	[Token(Token = "0x4000116")]
	MemoryStrategy = 317,
	[Token(Token = "0x4000117")]
	MemoryStrategySet = 596,
	[Token(Token = "0x4000118")]
	MemoryWarningDangerZone = 511,
	[Token(Token = "0x4000119")]
	MemoryWarningOverLimit = 298,
	[Token(Token = "0x400011A")]
	Mirror = 30,
	[Token(Token = "0x400011B")]
	MirrorEnabled = 461,
	[Token(Token = "0x400011C")]
	MirrorOff = 487,
	[Token(Token = "0x400011D")]
	MissingImage = 265,
	[Token(Token = "0x400011E")]
	ModelPin = 36,
	[Token(Token = "0x400011F")]
	More = 127,
	[Token(Token = "0x4000120")]
	MoreOptions = 99,
	[Token(Token = "0x4000121")]
	MoreTools = 401,
	[Token(Token = "0x4000122")]
	MoveThumbstick = 341,
	[Token(Token = "0x4000123")]
	Multiplayer = 87,
	[Token(Token = "0x4000124")]
	Muscle = 424,
	[Token(Token = "0x4000125")]
	MusicVisualization = 86,
	[Token(Token = "0x4000126")]
	MylarTube = 432,
	[Token(Token = "0x4000127")]
	Name = 199,
	[Token(Token = "0x4000128")]
	Neon = 490,
	[Token(Token = "0x4000129")]
	NeonPulse = 153,
	[Token(Token = "0x400012A")]
	NewCellShading = 493,
	[Token(Token = "0x400012B")]
	NewRoom = 304,
	[Token(Token = "0x400012C")]
	NewSketch = 378,
	[Token(Token = "0x400012D")]
	NextPage = 254,
	[Token(Token = "0x400012E")]
	NightSky = 173,
	[Token(Token = "0x400012F")]
	No = 263,
	[Token(Token = "0x4000130")]
	NoChangeInSketchSize = 586,
	[Token(Token = "0x4000131")]
	Noexistingrooms = 319,
	[Token(Token = "0x4000132")]
	NoExistingRooms = 251,
	[Token(Token = "0x4000133")]
	NoGoogleDrivesketchesavailable = 384,
	[Token(Token = "0x4000134")]
	Nosavedsketches = 385,
	[Token(Token = "0x4000135")]
	Notsupportedinmultiplayer = 394,
	[Token(Token = "0x4000136")]
	NumPlayers = 242,
	[Token(Token = "0x4000137")]
	Off = 499,
	[Token(Token = "0x4000138")]
	OilPaint = 193,
	[Token(Token = "0x4000139")]
	OnBrushButtons = 600,
	[Token(Token = "0x400013A")]
	OnGoogleDrive = 421,
	[Token(Token = "0x400013B")]
	Onlypublishedmodelsavailable = 366,
	[Token(Token = "0x400013C")]
	Onlyremixablemodelsavailable = 367,
	[Token(Token = "0x400013D")]
	OnStraightedgeTool = 49,
	[Token(Token = "0x400013E")]
	Open = 231,
	[Token(Token = "0x400013F")]
	OPEN = 363,
	[Token(Token = "0x4000140")]
	OpensinExternalBrowser = 47,
	[Token(Token = "0x4000141")]
	Original = 56,
	[Token(Token = "0x4000142")]
	OtherAvatars = 565,
	[Token(Token = "0x4000143")]
	OutOfDiskSpace = 592,
	[Token(Token = "0x4000144")]
	OutputLine = 321,
	[Token(Token = "0x4000145")]
	Overwritelastsave = 290,
	[Token(Token = "0x4000146")]
	OwnAvatar = 566,
	[Token(Token = "0x4000147")]
	PageNum = 253,
	[Token(Token = "0x4000148")]
	PaintPrecisely = 470,
	[Token(Token = "0x4000149")]
	Paper = 143,
	[Token(Token = "0x400014A")]
	Paper3 = 492,
	[Token(Token = "0x400014B")]
	Passthrough = 312,
	[Token(Token = "0x400014C")]
	Password = 261,
	[Token(Token = "0x400014D")]
	PasswordProtected = 277,
	[Token(Token = "0x400014E")]
	Path = 128,
	[Token(Token = "0x400014F")]
	PathRecorded = 570,
	[Token(Token = "0x4000150")]
	Pedestal = 176,
	[Token(Token = "0x4000151")]
	Petal = 158,
	[Token(Token = "0x4000152")]
	PhotonAuthenticated = 623,
	[Token(Token = "0x4000153")]
	PhotonAuthenticating = 622,
	[Token(Token = "0x4000154")]
	PhotonConnectedToMasterServer = 634,
	[Token(Token = "0x4000155")]
	PhotonConnectedToNameServer = 636,
	[Token(Token = "0x4000156")]
	PhotonConnectingToGameServer = 627,
	[Token(Token = "0x4000157")]
	PhotonConnectingToMasterServer = 631,
	[Token(Token = "0x4000158")]
	PhotonConnectingToNameServer = 635,
	[Token(Token = "0x4000159")]
	PhotonConnectWithFallbackProtocol = 638,
	[Token(Token = "0x400015A")]
	PhotonDisconnected = 633,
	[Token(Token = "0x400015B")]
	PhotonDisconnecting = 632,
	[Token(Token = "0x400015C")]
	PhotonDisconnectingFromMasterServer = 626,
	[Token(Token = "0x400015D")]
	PhotonDisconnectingFromNameServer = 637,
	[Token(Token = "0x400015E")]
	PhotonJoined = 629,
	[Token(Token = "0x400015F")]
	PhotonJoinedLobby = 625,
	[Token(Token = "0x4000160")]
	PhotonJoining = 628,
	[Token(Token = "0x4000161")]
	PhotonJoiningLobby = 624,
	[Token(Token = "0x4000162")]
	PhotonLeaving = 630,
	[Token(Token = "0x4000163")]
	PhotonPeerCreated = 621,
	[Token(Token = "0x4000164")]
	Pin = 224,
	[Token(Token = "0x4000165")]
	PinchedFlat = 189,
	[Token(Token = "0x4000166")]
	PinchedMarker = 188,
	[Token(Token = "0x4000167")]
	PinkLemonade = 178,
	[Token(Token = "0x4000168")]
	Pistachio = 179,
	[Token(Token = "0x4000169")]
	Plasma = 442,
	[Token(Token = "0x400016A")]
	PlayerName = 612,
	[Token(Token = "0x400016B")]
	PlayerWithNumber = 234,
	[Token(Token = "0x400016C")]
	PlayPause = 518,
	[Token(Token = "0x400016D")]
	PointtoInteract = 338,
	[Token(Token = "0x400016E")]
	PointToInteract = 214,
	[Token(Token = "0x400016F")]
	Poly = 504,
	[Token(Token = "0x4000170")]
	PolyLibrary = 123,
	[Token(Token = "0x4000171")]
	Popup = 462,
	[Token(Token = "0x4000172")]
	PostEffects = 76,
	[Token(Token = "0x4000173")]
	PostProcessingExperimental = 500,
	[Token(Token = "0x4000174")]
	PressandHoldtoChangeTools = 467,
	[Token(Token = "0x4000175")]
	PressAorXtoSnap = 473,
	[Token(Token = "0x4000176")]
	PressAtoDeselectRight = 126,
	[Token(Token = "0x4000177")]
	PressAToEnterDeselectMode = 333,
	[Token(Token = "0x4000178")]
	PressAtoExitDeselect = 149,
	[Token(Token = "0x4000179")]
	PressAToExitDeselectMode = 334,
	[Token(Token = "0x400017A")]
	PressLeftTriggertoQuickLoad = 346,
	[Token(Token = "0x400017B")]
	PressRightTriggertoQuickLoad = 342,
	[Token(Token = "0x400017C")]
	PresstoRedo = 483,
	[Token(Token = "0x400017D")]
	PresstoSnap = 475,
	[Token(Token = "0x400017E")]
	PresstoToggleMenu = 340,
	[Token(Token = "0x400017F")]
	PresstoUndo = 484,
	[Token(Token = "0x4000180")]
	PressTriggertoCaptureSaveIcon = 330,
	[Token(Token = "0x4000181")]
	PressTriggertoPinObject = 337,
	[Token(Token = "0x4000182")]
	PressTriggertoUnpinObject = 336,
	[Token(Token = "0x4000183")]
	PressXtoDeselect = 272,
	[Token(Token = "0x4000184")]
	PressXToEnterDeselectMode = 345,
	[Token(Token = "0x4000185")]
	PressXtoExitDeselect = 274,
	[Token(Token = "0x4000186")]
	PressXtoExitDeselectMode = 344,
	[Token(Token = "0x4000187")]
	PreventStrokes = 297,
	[Token(Token = "0x4000188")]
	PrevPage = 255,
	[Token(Token = "0x4000189")]
	PublicRoom = 278,
	[Token(Token = "0x400018A")]
	Pw = 243,
	[Token(Token = "0x400018B")]
	QuickTool = 313,
	[Token(Token = "0x400018C")]
	Rain = 431,
	[Token(Token = "0x400018D")]
	Rainbow = 137,
	[Token(Token = "0x400018E")]
	ReBrush = 201,
	[Token(Token = "0x400018F")]
	ReColor = 200,
	[Token(Token = "0x4000190")]
	RecordingCanceled = 571,
	[Token(Token = "0x4000191")]
	RecordPath = 109,
	[Token(Token = "0x4000192")]
	Redo = 32,
	[Token(Token = "0x4000193")]
	Redodoesnotyetworkinmultiplayer = 285,
	[Token(Token = "0x4000194")]
	ReferenceReadmemdtoseePolycontent = 515,
	[Token(Token = "0x4000195")]
	ReferenceREADMEmdtoseePolycontent = 358,
	[Token(Token = "0x4000196")]
	RemoveHeadsetToView = 576,
	[Token(Token = "0x4000197")]
	RemoveitemsfromGoogleDrivetofreeupstoragespace = 542,
	[Token(Token = "0x4000198")]
	RemoveOldest = 315,
	[Token(Token = "0x4000199")]
	RequiresSignIn = 348,
	[Token(Token = "0x400019A")]
	ResetPanels = 283,
	[Token(Token = "0x400019B")]
	Retrievingsketches = 14,
	[Token(Token = "0x400019C")]
	RisingBubbles = 427,
	[Token(Token = "0x400019D")]
	Room1 = 611,
	[Token(Token = "0x400019E")]
	Roomisprivate = 397,
	[Token(Token = "0x400019F")]
	Roomispublic = 398,
	[Token(Token = "0x40001A0")]
	RoomName = 305,
	[Token(Token = "0x40001A1")]
	SameVersionRequired = 248,
	[Token(Token = "0x40001A2")]
	Save = 289,
	[Token(Token = "0x40001A3")]
	Savecolorstoyour = 347,
	[Token(Token = "0x40001A4")]
	Saved = 581,
	[Token(Token = "0x40001A5")]
	SaveOptions = 292,
	[Token(Token = "0x40001A6")]
	SaveSketch = 97,
	[Token(Token = "0x40001A7")]
	SceneCost = 377,
	[Token(Token = "0x40001A8")]
	SecondaryLight = 64,
	[Token(Token = "0x40001A9")]
	SelectAll = 94,
	[Token(Token = "0x40001AA")]
	Selection = 90,
	[Token(Token = "0x40001AB")]
	SelectPath = 106,
	[Token(Token = "0x40001AC")]
	SetPassword = 247,
	[Token(Token = "0x40001AD")]
	SetRoomPassword = 259,
	[Token(Token = "0x40001AE")]
	SetRoomPrivate = 245,
	[Token(Token = "0x40001AF")]
	SetRoomPublic = 246,
	[Token(Token = "0x40001B0")]
	SetRoomtoPrivate = 308,
	[Token(Token = "0x40001B1")]
	SetRoomtoPublic = 307,
	[Token(Token = "0x40001B2")]
	Settings = 98,
	[Token(Token = "0x40001B3")]
	SharetoPolytoseemodelsandBlocksobjectshere = 365,
	[Token(Token = "0x40001B4")]
	SharetoPolytoseeyourmodelshere = 360,
	[Token(Token = "0x40001B5")]
	SharetoSketchfab = 541,
	[Token(Token = "0x40001B6")]
	SharewithGoogle = 559,
	[Token(Token = "0x40001B7")]
	ShareYourSketchwiththeCommunity = 335,
	[Token(Token = "0x40001B8")]
	ShinyHull = 160,
	[Token(Token = "0x40001B9")]
	ShowBrushNumbers = 599,
	[Token(Token = "0x40001BA")]
	ShowHideDraftingLines = 517,
	[Token(Token = "0x40001BB")]
	ShowPaths = 107,
	[Token(Token = "0x40001BC")]
	Sigmoid = 489,
	[Token(Token = "0x40001BD")]
	SIGNIN = 361,
	[Token(Token = "0x40001BE")]
	SigninondesktoptoloadPolymodels = 362,
	[Token(Token = "0x40001BF")]
	SignintoaccessGoogleDrive = 381,
	[Token(Token = "0x40001C0")]
	SignintoaccessPolysketches = 382,
	[Token(Token = "0x40001C1")]
	SignintoaGoogleaccounttoaccessPolyDriveandYouTubesupport = 558,
	[Token(Token = "0x40001C2")]
	SignintoaSketchfabaccounttoallowuploadingtoSketchfab = 540,
	[Token(Token = "0x40001C3")]
	SignOut = 538,
	[Token(Token = "0x40001C4")]
	SignoutofPoly = 84,
	[Token(Token = "0x40001C5")]
	SimplfyonLoad = 419,
	[Token(Token = "0x40001C6")]
	SimplifyonLoad = 51,
	[Token(Token = "0x40001C7")]
	SingleSided = 437,
	[Token(Token = "0x40001C8")]
	Sketchbook = 96,
	[Token(Token = "0x40001C9")]
	SketchCostHigh = 606,
	[Token(Token = "0x40001CA")]
	SketchCostHighest = 607,
	[Token(Token = "0x40001CB")]
	SketchCostLow = 604,
	[Token(Token = "0x40001CC")]
	SketchCostMedium = 605,
	[Token(Token = "0x40001CD")]
	SketchCostPicasso = 608,
	[Token(Token = "0x40001CE")]
	Sketches = 552,
	[Token(Token = "0x40001CF")]
	Sketchescannotbeclearedwhileinmultiplayer = 287,
	[Token(Token = "0x40001D0")]
	Sketchfab = 561,
	[Token(Token = "0x40001D1")]
	SketchIsLarger = 584,
	[Token(Token = "0x40001D2")]
	SketchIsSmaller = 585,
	[Token(Token = "0x40001D3")]
	SketchLoaded = 573,
	[Token(Token = "0x40001D4")]
	SketchOrigin = 226,
	[Token(Token = "0x40001D5")]
	sketchpalette = 469,
	[Token(Token = "0x40001D6")]
	SkipBackward = 404,
	[Token(Token = "0x40001D7")]
	SkipForward = 403,
	[Token(Token = "0x40001D8")]
	Sky = 232,
	[Token(Token = "0x40001D9")]
	SkyboxColor = 239,
	[Token(Token = "0x40001DA")]
	Smoke = 135,
	[Token(Token = "0x40001DB")]
	SmoothHull = 448,
	[Token(Token = "0x40001DC")]
	Snapshot = 279,
	[Token(Token = "0x40001DD")]
	Snapshots = 551,
	[Token(Token = "0x40001DE")]
	SnapshotSaved = 593,
	[Token(Token = "0x40001DF")]
	Snow = 136,
	[Token(Token = "0x40001E0")]
	Snowman = 177,
	[Token(Token = "0x40001E1")]
	Sobel = 488,
	[Token(Token = "0x40001E2")]
	SoftHighlighter = 186,
	[Token(Token = "0x40001E3")]
	Space = 174,
	[Token(Token = "0x40001E4")]
	Spectator = 264,
	[Token(Token = "0x40001E5")]
	SpectatorCamera = 411,
	[Token(Token = "0x40001E6")]
	SphereGuide = 68,
	[Token(Token = "0x40001E7")]
	SphericalSelection = 225,
	[Token(Token = "0x40001E8")]
	Spikes = 159,
	[Token(Token = "0x40001E9")]
	Splatter = 141,
	[Token(Token = "0x40001EA")]
	SquareFlat = 425,
	[Token(Token = "0x40001EB")]
	Squashed = 579,
	[Token(Token = "0x40001EC")]
	Standard = 172,
	[Token(Token = "0x40001ED")]
	Stars = 138,
	[Token(Token = "0x40001EE")]
	Start = 642,
	[Token(Token = "0x40001EF")]
	Stationary = 39,
	[Token(Token = "0x40001F0")]
	Status = 240,
	[Token(Token = "0x40001F1")]
	StopListening = 170,
	[Token(Token = "0x40001F2")]
	Straightedge = 26,
	[Token(Token = "0x40001F3")]
	StraightEdgeOn = 503,
	[Token(Token = "0x40001F4")]
	Straightedgesnapstoo = 472,
	[Token(Token = "0x40001F5")]
	Streamers = 155,
	[Token(Token = "0x40001F6")]
	StrokeDeterminismCheckingOff = 590,
	[Token(Token = "0x40001F7")]
	StrokeDeterminismCheckingOn = 589,
	[Token(Token = "0x40001F8")]
	StrokeSimplification = 55,
	[Token(Token = "0x40001F9")]
	Success = 620,
	[Token(Token = "0x40001FA")]
	SummonMirror = 356,
	[Token(Token = "0x40001FB")]
	SwipeThumbpad = 204,
	[Token(Token = "0x40001FC")]
	SwipeToAdjust = 213,
	[Token(Token = "0x40001FD")]
	SwipetoChange = 281,
	[Token(Token = "0x40001FE")]
	SwitchtoCustomSky = 75,
	[Token(Token = "0x40001FF")]
	TakeOffHeadset = 560,
	[Token(Token = "0x4000200")]
	TaperedFlat = 192,
	[Token(Token = "0x4000201")]
	TaperedHueShift = 455,
	[Token(Token = "0x4000202")]
	TaperedMarker = 191,
	[Token(Token = "0x4000203")]
	TaperedWire = 426,
	[Token(Token = "0x4000204")]
	Teleport = 29,
	[Token(Token = "0x4000205")]
	ThanksforreadingTipsNTricks = 466,
	[Token(Token = "0x4000206")]
	ThickPaint = 187,
	[Token(Token = "0x4000207")]
	Thisfeatureisnotyetavailableinmultiplayer = 295,
	[Token(Token = "0x4000208")]
	ThumbnailToDuplicate = 206,
	[Token(Token = "0x4000209")]
	ThumbpadFToDeselect = 208,
	[Token(Token = "0x400020A")]
	ThumbpadToDuplicate = 215,
	[Token(Token = "0x400020B")]
	ThumbpadToExit = 207,
	[Token(Token = "0x400020C")]
	Tiltasaurus = 131,
	[Token(Token = "0x400020D")]
	TiltMeterFull = 609,
	[Token(Token = "0x400020E")]
	TilttoChange = 460,
	[Token(Token = "0x400020F")]
	TipsNTricks = 284,
	[Token(Token = "0x4000210")]
	Title = 371,
	[Token(Token = "0x4000211")]
	ToggleGuides = 72,
	[Token(Token = "0x4000212")]
	ToggleMenu = 235,
	[Token(Token = "0x4000213")]
	Tools = 117,
	[Token(Token = "0x4000214")]
	Toon = 164,
	[Token(Token = "0x4000215")]
	Tosharesketcheswithothersloadthembeforecreatingaroom = 395,
	[Token(Token = "0x4000216")]
	TossObjectstoDismiss = 464,
	[Token(Token = "0x4000217")]
	TossThePanelToDismissIt = 294,
	[Token(Token = "0x4000218")]
	TosstoDismiss = 373,
	[Token(Token = "0x4000219")]
	TossToDismiss = 220,
	[Token(Token = "0x400021A")]
	TriggerToConfirm = 202,
	[Token(Token = "0x400021B")]
	TriggerToPaint = 216,
	[Token(Token = "0x400021C")]
	TriggerToPin = 212,
	[Token(Token = "0x400021D")]
	TriggerToPreview = 218,
	[Token(Token = "0x400021E")]
	TriggerToQuickload = 217,
	[Token(Token = "0x400021F")]
	TriggerToSave = 205,
	[Token(Token = "0x4000220")]
	TriggerToUnpin = 211,
	[Token(Token = "0x4000221")]
	Trysnappingthiscube = 474,
	[Token(Token = "0x4000222")]
	Trytossingthiscube = 463,
	[Token(Token = "0x4000223")]
	TubeHighlighter = 435,
	[Token(Token = "0x4000224")]
	TubeToonInverted = 445,
	[Token(Token = "0x4000225")]
	Tutorial_AddColor1 = 0,
	[Token(Token = "0x4000226")]
	Tutorial_AddColor2 = 1,
	[Token(Token = "0x4000227")]
	Tutorial_ControllerConsole = 2,
	[Token(Token = "0x4000228")]
	Tutorial_Duplicate = 3,
	[Token(Token = "0x4000229")]
	Tutorial_DuplicateRight = 116,
	[Token(Token = "0x400022A")]
	Tutorial_Grip1 = 4,
	[Token(Token = "0x400022B")]
	Tutorial_Grip2 = 5,
	[Token(Token = "0x400022C")]
	Tutorial_Guide1 = 6,
	[Token(Token = "0x400022D")]
	Tutorial_Guide2 = 7,
	[Token(Token = "0x400022E")]
	Tutorial_NextTip = 8,
	[Token(Token = "0x400022F")]
	Tutorial_Pin = 9,
	[Token(Token = "0x4000230")]
	Tutorial_QuickTool = 10,
	[Token(Token = "0x4000231")]
	Tutorial_Redo = 22,
	[Token(Token = "0x4000232")]
	Tutorial_Scale = 11,
	[Token(Token = "0x4000233")]
	Tutorial_Sketchbook = 12,
	[Token(Token = "0x4000234")]
	Tutorial_Skip_Intro = 13,
	[Token(Token = "0x4000235")]
	Tutorial_Snap_Model1 = 15,
	[Token(Token = "0x4000236")]
	Tutorial_Snap_Model2 = 16,
	[Token(Token = "0x4000237")]
	Tutorial_Swap_Controllers = 17,
	[Token(Token = "0x4000238")]
	Tutorial_Swipe = 18,
	[Token(Token = "0x4000239")]
	Tutorial_Toss1 = 19,
	[Token(Token = "0x400023A")]
	Tutorial_Toss2 = 20,
	[Token(Token = "0x400023B")]
	Tutorial_Undo = 21,
	[Token(Token = "0x400023C")]
	Tutorial_World_Transform = 23,
	[Token(Token = "0x400023D")]
	Tutorial_World_Transform_Reset = 24,
	[Token(Token = "0x400023E")]
	Tutorial_World_Transform_Reset_X_A = 603,
	[Token(Token = "0x400023F")]
	TwitchChat = 414,
	[Token(Token = "0x4000240")]
	Understood = 34,
	[Token(Token = "0x4000241")]
	Undo = 31,
	[Token(Token = "0x4000242")]
	Undodoesnotyetworkinmultiplayer = 223,
	[Token(Token = "0x4000243")]
	Ungrouped = 583,
	[Token(Token = "0x4000244")]
	UngroupSelection = 288,
	[Token(Token = "0x4000245")]
	UnlitHull = 166,
	[Token(Token = "0x4000246")]
	UnlockAdvanced = 210,
	[Token(Token = "0x4000247")]
	Unlockadvancedfeatures = 329,
	[Token(Token = "0x4000248")]
	Update = 57,
	[Token(Token = "0x4000249")]
	UpdateSimplification = 233,
	[Token(Token = "0x400024A")]
	Upload = 125,
	[Token(Token = "0x400024B")]
	Uploaded = 595,
	[Token(Token = "0x400024C")]
	Uploading = 325,
	[Token(Token = "0x400024D")]
	UseArrowsformore = 349,
	[Token(Token = "0x400024E")]
	UseBothGripstoRotateandResizeYourself = 482,
	[Token(Token = "0x400024F")]
	UseGriptoGrabTheBlinkingPanel = 331,
	[Token(Token = "0x4000250")]
	UseGripToGrabTheBlinkingPanel = 293,
	[Token(Token = "0x4000251")]
	UseGuidesto = 471,
	[Token(Token = "0x4000252")]
	UseSameVersion = 303,
	[Token(Token = "0x4000253")]
	VelvetInk = 139,
	[Token(Token = "0x4000254")]
	Video = 326,
	[Token(Token = "0x4000255")]
	VideoCaptured = 591,
	[Token(Token = "0x4000256")]
	Videos = 549,
	[Token(Token = "0x4000257")]
	VideoSmoothing = 79,
	[Token(Token = "0x4000258")]
	Viewinbrowser = 420,
	[Token(Token = "0x4000259")]
	ViewonDrive = 554,
	[Token(Token = "0x400025A")]
	VisualQuality = 53,
	[Token(Token = "0x400025B")]
	Watermark = 77,
	[Token(Token = "0x400025C")]
	Waveform = 140,
	[Token(Token = "0x400025D")]
	WaveformTube = 439,
	[Token(Token = "0x400025E")]
	WelcomeToMultibrush = 505,
	[Token(Token = "0x400025F")]
	WetPaint = 184,
	[Token(Token = "0x4000260")]
	White = 182,
	[Token(Token = "0x4000261")]
	Wind = 428,
	[Token(Token = "0x4000262")]
	Wire = 167,
	[Token(Token = "0x4000263")]
	WireLit = 450,
	[Token(Token = "0x4000264")]
	Yes = 262,
	[Token(Token = "0x4000265")]
	YourModels = 81,
	[Token(Token = "0x4000266")]
	YourSketches = 41,
	[Token(Token = "0x4000267")]
	YouTubeChat = 413
}
[Token(Token = "0x200000B")]
public class Joystick
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject stick;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform stickRectTransform;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backgroundImage;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int stickMovementThreshold;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float positionX;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float positionY;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float angle;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool moveJoystickBaseOnDrag;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x12E6574", Offset = "0x12E6574", VA = "0x12E6574")]
	public void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x12E6648", Offset = "0x12E6648", VA = "0x12E6648")]
	public void Move(BaseEventData data, bool freezeX, bool freezeY)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x12E6A68", Offset = "0x12E6A68", VA = "0x12E6A68")]
	public void ReturnToNormalPosition()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x12E6AA4", Offset = "0x12E6AA4", VA = "0x12E6AA4")]
	public Joystick()
	{
	}
}
[Token(Token = "0x200000C")]
public class JoystickLeft : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stick;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backgroundImage;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftAreaForStickyJoystick;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B09C", Offset = "0xB2B09C")]
	public int stickMovementThreshold;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool sticky;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool moveJoystickBaseOnDrag;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool freezeX;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool freezeY;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float positionX;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float positionY;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float angle;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Joystick joystick;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x12E6E98", Offset = "0x12E6E98", VA = "0x12E6E98")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x12E6E9C", Offset = "0x12E6E9C", VA = "0x12E6E9C")]
	public void Init()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x12E6F78", Offset = "0x12E6F78", VA = "0x12E6F78")]
	public void Move(BaseEventData data)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x12E702C", Offset = "0x12E702C", VA = "0x12E702C")]
	public void ReturnToNormalPosition()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x12E70B0", Offset = "0x12E70B0", VA = "0x12E70B0")]
	public void OnStickyPointerDown(BaseEventData data)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x12E7188", Offset = "0x12E7188", VA = "0x12E7188")]
	public void OnStickyPointerUp(BaseEventData data)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x12E7230", Offset = "0x12E7230", VA = "0x12E7230")]
	public JoystickLeft()
	{
	}
}
[Token(Token = "0x200000D")]
public class JoystickRight : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stick;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject backgroundImage;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightAreaForStickyJoystick;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B0B4", Offset = "0xB2B0B4")]
	public int stickMovementThreshold;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool sticky;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool moveJoystickBaseOnDrag;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool freezeX;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool freezeY;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float positionX;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float positionY;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float angle;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Joystick joystick;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x12E72A4", Offset = "0x12E72A4", VA = "0x12E72A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x12E72A8", Offset = "0x12E72A8", VA = "0x12E72A8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x12E7384", Offset = "0x12E7384", VA = "0x12E7384")]
	public void Move(BaseEventData data)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x12E7438", Offset = "0x12E7438", VA = "0x12E7438")]
	public void ReturnToNormalPosition()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x12E74BC", Offset = "0x12E74BC", VA = "0x12E74BC")]
	public void OnStickyPointerDown(BaseEventData data)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x12E7594", Offset = "0x12E7594", VA = "0x12E7594")]
	public void OnStickyPointerUp(BaseEventData data)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x12E763C", Offset = "0x12E763C", VA = "0x12E763C")]
	public JoystickRight()
	{
	}
}
[Token(Token = "0x200000E")]
public class ImeDelegateImpl : ImeDelegateBase
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text mText;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] mKbdViews;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SGViewGather mKbdView;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ImeManager mManager;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D mTexture;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mTextureSize;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 mPtKbd;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SGClickTracker mTracker;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x13CFBC0", Offset = "0x13CFBC0", VA = "0x13CFBC0", Slot = "4")]
	public override void OnIMEShow(Vector2 vSize)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x13CFF70", Offset = "0x13CFF70", VA = "0x13CFF70", Slot = "5")]
	public override void OnIMEHide()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x13D0000", Offset = "0x13D0000", VA = "0x13D0000", Slot = "6")]
	public override void OnIMECommit(string strCommit)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x13D005C", Offset = "0x13D005C", VA = "0x13D005C", Slot = "7")]
	public override void OnIMEKey(SGImeKey key)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x13D0130", Offset = "0x13D0130", VA = "0x13D0130", Slot = "8")]
	public override void OnIMEError(SGImeError nType, string strErr)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x13D0134", Offset = "0x13D0134", VA = "0x13D0134")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x13D01B4", Offset = "0x13D01B4", VA = "0x13D01B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x13CFD2C", Offset = "0x13CFD2C", VA = "0x13CFD2C")]
	private void CreateTexture(Vector2 vSize)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x13D01D8", Offset = "0x13D01D8", VA = "0x13D01D8")]
	private void DispatchMessageToAndroid(SGImeMotionEventType type, Vector2 pt)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x13D036C", Offset = "0x13D036C", VA = "0x13D036C")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x13D01D4", Offset = "0x13D01D4", VA = "0x13D01D4")]
	private void CheckMouseEvent()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x13D05EC", Offset = "0x13D05EC", VA = "0x13D05EC")]
	private bool Point2UV(Ray ray, ref Vector2 ptUV)
	{
		return default(bool);
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x13D076C", Offset = "0x13D076C", VA = "0x13D076C")]
	public ImeDelegateImpl()
	{
	}
}
[Token(Token = "0x200000F")]
public class SGViewGather
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject[] mViews;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xFBAF9C", Offset = "0xFBAF9C", VA = "0xFBAF9C")]
	public SGViewGather(GameObject[] param)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xFBAFC8", Offset = "0xFBAFC8", VA = "0xFBAFC8")]
	public void SetActive(bool bActive)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xFBB044", Offset = "0xFBB044", VA = "0xFBB044")]
	public bool FindName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xFBB0D8", Offset = "0xFBB0D8", VA = "0xFBB0D8")]
	public void SetTexture(Texture2D tex)
	{
	}
}
[Token(Token = "0x2000010")]
public class SGClickTracker
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool mDownOld;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 mPtOld;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SGImeMotionEventType mEvent;

	[Token(Token = "0x4000294")]
	private const float mTrackRadius = 10f;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long mTimeDown;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mLongPressed;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private long mIntervelLongPress;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xFB9A84", Offset = "0xFB9A84", VA = "0xFB9A84")]
	public bool Track(Vector2 pt, bool bDown)
	{
		return default(bool);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xFB9CF8", Offset = "0xFB9CF8", VA = "0xFB9CF8")]
	public bool TrackOuter()
	{
		return default(bool);
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xFB9D14", Offset = "0xFB9D14", VA = "0xFB9D14")]
	public Vector2 GetPoint()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xFB9D1C", Offset = "0xFB9D1C", VA = "0xFB9D1C")]
	public SGImeMotionEventType GetEvent()
	{
		return default(SGImeMotionEventType);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xFB9C30", Offset = "0xFB9C30", VA = "0xFB9C30")]
	private float PointDist(Vector2 ptNew, Vector2 ptOld)
	{
		return default(float);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xFB9D24", Offset = "0xFB9D24", VA = "0xFB9D24")]
	public SGClickTracker()
	{
	}
}
[Token(Token = "0x2000011")]
public class TextHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImeManager mManager;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SGImeInputType mInputType;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SGImeTextType mTextType;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSelect;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x11664D8", Offset = "0x11664D8", VA = "0x11664D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x11664DC", Offset = "0x11664DC", VA = "0x11664DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x11664E0", Offset = "0x11664E0", VA = "0x11664E0", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1166564", Offset = "0x1166564", VA = "0x1166564", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x11665E4", Offset = "0x11665E4", VA = "0x11665E4")]
	public TextHandler()
	{
	}
}
[Token(Token = "0x2000012")]
internal interface ImeBase
{
	[Token(Token = "0x6000044")]
	bool Create(ImeDelegateBase pDelegate);

	[Token(Token = "0x6000045")]
	void GetSize(ref Vector2 size);

	[Token(Token = "0x6000046")]
	void Draw(Texture2D tex);

	[Token(Token = "0x6000047")]
	void OnTouch(float x, float y, SGImeMotionEventType type);

	[Token(Token = "0x6000048")]
	void UpdateData();

	[Token(Token = "0x6000049")]
	void Show(SGImeInputType typeInput, SGImeTextType typeText);

	[Token(Token = "0x600004A")]
	void Hide();
}
[Token(Token = "0x2000013")]
public enum SGImeError
{
	[Token(Token = "0x400029D")]
	UNKNOWN,
	[Token(Token = "0x400029E")]
	SERVICE_NOT_CONNECTED
}
[Token(Token = "0x2000014")]
public enum SGImeKey
{
	[Token(Token = "0x40002A0")]
	KEYCODE_COMMIT = -1,
	[Token(Token = "0x40002A1")]
	KEYCODE_UNKNOWN = 0,
	[Token(Token = "0x40002A2")]
	KEYCODE_ENTER = 66,
	[Token(Token = "0x40002A3")]
	KEYCODE_DEL = 67,
	[Token(Token = "0x40002A4")]
	KEYCODE_VOICE_START = 1000,
	[Token(Token = "0x40002A5")]
	KEYCODE_VOICE_END = 1001
}
[Token(Token = "0x2000015")]
public enum SGImeInputType
{
	[Token(Token = "0x40002A7")]
	TYPE_CLASS_TEXT = 1,
	[Token(Token = "0x40002A8")]
	TYPE_CLASS_NUMBER,
	[Token(Token = "0x40002A9")]
	TYPE_CLASS_PHONE,
	[Token(Token = "0x40002AA")]
	TYPE_CLASS_DATETIME,
	[Token(Token = "0x40002AB")]
	TYPE_CLASS_MUTE_TEXT
}
[Token(Token = "0x2000016")]
public enum SGImeTextType
{
	[Token(Token = "0x40002AD")]
	TYPE_TEXT_VARIATION_NORMAL = 0,
	[Token(Token = "0x40002AE")]
	TYPE_TEXT_VARIATION_URI = 16,
	[Token(Token = "0x40002AF")]
	TYPE_TEXT_VARIATION_EMAIL_ADDRESS = 32,
	[Token(Token = "0x40002B0")]
	TYPE_TEXT_VARIATION_EMAIL_SUBJECT = 48,
	[Token(Token = "0x40002B1")]
	TYPE_TEXT_VARIATION_SHORT_MESSAGE = 64,
	[Token(Token = "0x40002B2")]
	TYPE_TEXT_VARIATION_LONG_MESSAGE = 80,
	[Token(Token = "0x40002B3")]
	TYPE_TEXT_VARIATION_PERSON_NAME = 96,
	[Token(Token = "0x40002B4")]
	TYPE_TEXT_VARIATION_POSTAL_ADDRESS = 112,
	[Token(Token = "0x40002B5")]
	TYPE_TEXT_VARIATION_PASSWORD = 128,
	[Token(Token = "0x40002B6")]
	TYPE_TEXT_VARIATION_VISIBLE_PASSWORD = 144,
	[Token(Token = "0x40002B7")]
	TYPE_TEXT_VARIATION_WEB_EDIT_TEXT = 160,
	[Token(Token = "0x40002B8")]
	TYPE_TEXT_VARIATION_FILTER = 176,
	[Token(Token = "0x40002B9")]
	TYPE_TEXT_VARIATION_PHONETIC = 192,
	[Token(Token = "0x40002BA")]
	TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS = 208,
	[Token(Token = "0x40002BB")]
	TYPE_TEXT_VARIATION_WEB_PASSWORD = 224
}
[Token(Token = "0x2000017")]
public enum SGImeMotionEventType
{
	[Token(Token = "0x40002BD")]
	ACTION_DOWN = 0,
	[Token(Token = "0x40002BE")]
	ACTION_UP = 1,
	[Token(Token = "0x40002BF")]
	ACTION_MOVE = 2,
	[Token(Token = "0x40002C0")]
	ACTION_CANCEL = 3,
	[Token(Token = "0x40002C1")]
	ACTION_OUTSIDE = 4,
	[Token(Token = "0x40002C2")]
	ACTION_POINTER_DOWN = 5,
	[Token(Token = "0x40002C3")]
	ACTION_POINTER_UP = 6,
	[Token(Token = "0x40002C4")]
	ACTION_HOVER_MOVE = 7,
	[Token(Token = "0x40002C5")]
	ACTION_SCROLL = 8,
	[Token(Token = "0x40002C6")]
	ACTION_HOVER_ENTER = 9,
	[Token(Token = "0x40002C7")]
	ACTION_HOVER_EXIT = 10,
	[Token(Token = "0x40002C8")]
	ACTION_BUTTON_PRESS = 11,
	[Token(Token = "0x40002C9")]
	ACTION_BUTTON_RELEASE = 12,
	[Token(Token = "0x40002CA")]
	ACTION_LONGPRESS = 100
}
[Token(Token = "0x2000018")]
public abstract class ImeDelegateBase : MonoBehaviour
{
	[Token(Token = "0x600004B")]
	public abstract void OnIMEShow(Vector2 vSize);

	[Token(Token = "0x600004C")]
	public abstract void OnIMEHide();

	[Token(Token = "0x600004D")]
	public abstract void OnIMECommit(string strCommit);

	[Token(Token = "0x600004E")]
	public abstract void OnIMEKey(SGImeKey key);

	[Token(Token = "0x600004F")]
	public abstract void OnIMEError(SGImeError nType, string strErr);

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x13CFBB8", Offset = "0x13CFBB8", VA = "0x13CFBB8")]
	protected ImeDelegateBase()
	{
	}
}
[Token(Token = "0x2000019")]
public class DummyIme : ImeBase
{
	[Token(Token = "0x6000051")]
	[Address(RVA = "0xED1560", Offset = "0xED1560", VA = "0xED1560", Slot = "4")]
	public bool Create(ImeDelegateBase pDelegate)
	{
		return default(bool);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xED15DC", Offset = "0xED15DC", VA = "0xED15DC", Slot = "5")]
	public void GetSize(ref Vector2 size)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xED1684", Offset = "0xED1684", VA = "0xED1684", Slot = "6")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xED1688", Offset = "0xED1688", VA = "0xED1688", Slot = "7")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xED18FC", Offset = "0xED18FC", VA = "0xED18FC", Slot = "8")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xED1900", Offset = "0xED1900", VA = "0xED1900", Slot = "9")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xED1A4C", Offset = "0xED1A4C", VA = "0xED1A4C", Slot = "10")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xED1AC0", Offset = "0xED1AC0", VA = "0xED1AC0")]
	public DummyIme()
	{
	}
}
[Token(Token = "0x200001A")]
public class SGIme : ImeBase
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool mUseAndroid;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaObject javaIme;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ImeDelegateBase mDelegate;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mTextureSize;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string mStrCommit;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mShow;

	[Token(Token = "0x14000001")]
	public static event Action OnKeyboardInitializedInJava
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0xFB9FE4", Offset = "0xFB9FE4", VA = "0xFB9FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37650", Offset = "0xB37650")]
		add
		{
		}
		[Token(Token = "0x600005A")]
		[Address(RVA = "0xFBA0A0", Offset = "0xFBA0A0", VA = "0xFBA0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37660", Offset = "0xB37660")]
		remove
		{
		}
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xFBA15C", Offset = "0xFBA15C", VA = "0xFBA15C", Slot = "4")]
	public bool Create(ImeDelegateBase pDelegate)
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xFBA574", Offset = "0xFBA574", VA = "0xFBA574", Slot = "5")]
	public void GetSize(ref Vector2 size)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xFBA580", Offset = "0xFBA580", VA = "0xFBA580", Slot = "6")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xFBA850", Offset = "0xFBA850", VA = "0xFBA850", Slot = "9")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xFBA450", Offset = "0xFBA450", VA = "0xFBA450", Slot = "10")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xFBA9B0", Offset = "0xFBA9B0", VA = "0xFBA9B0", Slot = "7")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xFBAB74", Offset = "0xFBAB74", VA = "0xFBAB74", Slot = "8")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xFBA18C", Offset = "0xFBA18C", VA = "0xFBA18C")]
	private void JavaInit()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xFBA720", Offset = "0xFBA720", VA = "0xFBA720")]
	private bool IsInited()
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xFBA740", Offset = "0xFBA740", VA = "0xFBA740")]
	private bool IsNeedUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xFBAC5C", Offset = "0xFBAC5C", VA = "0xFBAC5C")]
	private int GetCommitCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xFBAD6C", Offset = "0xFBAD6C", VA = "0xFBAD6C")]
	private string GetCommitString()
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xFBAE7C", Offset = "0xFBAE7C", VA = "0xFBAE7C")]
	private bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xFBAF8C", Offset = "0xFBAF8C", VA = "0xFBAF8C")]
	public SGIme()
	{
	}
}
[Token(Token = "0x200001B")]
public class ImeManager : MonoBehaviour
{
	[Token(Token = "0x200001C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27A34", Offset = "0xB27A34")]
	private sealed class <ShowKeyboardRoutine>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImeManager <>4__this;

		[Token(Token = "0x17000003")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000077")]
			[Address(RVA = "0xFF8C08", Offset = "0xFF8C08", VA = "0xFF8C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000079")]
			[Address(RVA = "0xFF8C50", Offset = "0xFF8C50", VA = "0xFF8C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0xFF8B10", Offset = "0xFF8B10", VA = "0xFF8B10")]
		[DebuggerHidden]
		public <ShowKeyboardRoutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0xFF8B3C", Offset = "0xFF8B3C", VA = "0xFF8B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000076")]
		[Address(RVA = "0xFF8B40", Offset = "0xFF8B40", VA = "0xFF8B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xFF8C10", Offset = "0xFF8C10", VA = "0xFF8C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImeDelegateBase mDelegate;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ImeBase mIme;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mSize;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mIsPaused;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool mIsFocus;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CoroutineHandle _ShowKeyboardCoroutineHandle;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x13D07DC", Offset = "0x13D07DC", VA = "0x13D07DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x13D0908", Offset = "0x13D0908", VA = "0x13D0908")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x13D09D0", Offset = "0x13D09D0", VA = "0x13D09D0")]
	public void Show(SGImeInputType typeInput, SGImeTextType typeText)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x13D0B14", Offset = "0x13D0B14", VA = "0x13D0B14")]
	public void Hide()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x13CFEA4", Offset = "0x13CFEA4", VA = "0x13CFEA4")]
	public void Draw(Texture2D tex)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x13D0294", Offset = "0x13D0294", VA = "0x13D0294")]
	public void OnTouch(float x, float y, SGImeMotionEventType type)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x13D0BD8", Offset = "0x13D0BD8", VA = "0x13D0BD8")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x13D0D14", Offset = "0x13D0D14", VA = "0x13D0D14")]
	public void ShowUsingRoutine()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x13D0D94", Offset = "0x13D0D94", VA = "0x13D0D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37670", Offset = "0xB37670")]
	private IEnumerator<float> ShowKeyboardRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x13D0E00", Offset = "0x13D0E00", VA = "0x13D0E00")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x13D0F3C", Offset = "0x13D0F3C", VA = "0x13D0F3C")]
	public ImeManager()
	{
	}
}
[Token(Token = "0x200001D")]
public class BakedMeshOutline : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float m_OffsetOverride;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x14388DC", Offset = "0x14388DC", VA = "0x14388DC")]
	public void Bake(Color baseMeshColor, Color outlineColor, float offset)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1438E48", Offset = "0x1438E48", VA = "0x1438E48")]
	public BakedMeshOutline()
	{
	}
}
[Token(Token = "0x200001E")]
public class ProfileDisplay : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27A44", Offset = "0xB27A44")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int total;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<KeyValuePair<int, int>, float> <>9__0;

		[Token(Token = "0x6000083")]
		[Address(RVA = "0x10EFD80", Offset = "0x10EFD80", VA = "0x10EFD80")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x10EFD88", Offset = "0x10EFD88", VA = "0x10EFD88")]
		internal float <BuildHistogram>b__0(KeyValuePair<int, int> kvp)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text m_Fps;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text m_FrameTime;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Smoothing;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_SmothedFrameTime;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, int> m_histBuckets;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_histTotal;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B11C", Offset = "0xB2B11C")]
	private static ProfileDisplay <Instance>k__BackingField;

	[Token(Token = "0x17000005")]
	public static ProfileDisplay Instance
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x11F33C8", Offset = "0x11F33C8", VA = "0x11F33C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37720", Offset = "0xB37720")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x11F3414", Offset = "0x11F3414", VA = "0x11F3414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37730", Offset = "0xB37730")]
		private set
		{
		}
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x11F3464", Offset = "0x11F3464", VA = "0x11F3464")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x11F34B4", Offset = "0x11F34B4", VA = "0x11F34B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x11F3544", Offset = "0x11F3544", VA = "0x11F3544")]
	private string BuildHistogram()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x11F3A18", Offset = "0x11F3A18", VA = "0x11F3A18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x11F3DC8", Offset = "0x11F3DC8", VA = "0x11F3DC8")]
	public ProfileDisplay()
	{
	}
}
[Token(Token = "0x2000020")]
public static class UsdUtils
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_Initialized;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x124A284", Offset = "0x124A284", VA = "0x124A284")]
	public static bool InitializeUsd()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000021")]
public class MobileBloom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000022")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27A54", Offset = "0xB27A54")]
	private sealed class <>c
	{
		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, int> <>9__27_0;

		[Token(Token = "0x6000092")]
		[Address(RVA = "0x100123C", Offset = "0x100123C", VA = "0x100123C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1001244", Offset = "0x1001244", VA = "0x1001244")]
		internal int <InitializeBloom>b__27_0(string x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader m_bloomShader;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_xMult;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_yMult;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_xOff;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_yOff;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve m_BackgroundBrightnessToBloom;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_AlwaysOn;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_OverrideDividors;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[] m_bloomMaterial;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Pose m_PreviousPose;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int m_width;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_height;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_xOffset;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int m_yOffset;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int[] m_dividors;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RenderTexture[] m_savedBloom;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CommandBuffer[] m_MakeBloom;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CommandBuffer[] m_DisplayBloom;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_Eye;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Camera m_Camera;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_BloomAmount;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _Initialized;

	[Token(Token = "0x17000006")]
	public float BloomAmount
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xF32DF4", Offset = "0xF32DF4", VA = "0xF32DF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xF32DFC", Offset = "0xF32DFC", VA = "0xF32DFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF32E04", Offset = "0xF32E04", VA = "0xF32E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xF33034", Offset = "0xF33034", VA = "0xF33034")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB37740", Offset = "0xB37740")]
	public void Init()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xF33180", Offset = "0xF33180", VA = "0xF33180")]
	private void InitializeBloom(int qualityLevel)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xF3419C", Offset = "0xF3419C", VA = "0xF3419C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xF342FC", Offset = "0xF342FC", VA = "0xF342FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xF335D4", Offset = "0xF335D4", VA = "0xF335D4")]
	private CommandBuffer CreateBloom(int eye)
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xF33E18", Offset = "0xF33E18", VA = "0xF33E18")]
	private CommandBuffer DisplayBloom(int eye)
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xF34890", Offset = "0xF34890", VA = "0xF34890")]
	public MobileBloom()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB27A64", Offset = "0xB27A64")]
public class SecretsConfig : ScriptableObject
{
	[Token(Token = "0x2000024")]
	public enum Service
	{
		[Token(Token = "0x4000300")]
		Google,
		[Token(Token = "0x4000301")]
		Sketchfab,
		[Token(Token = "0x4000302")]
		Oculus,
		[Token(Token = "0x4000303")]
		OculusMobile
	}

	[Serializable]
	[Token(Token = "0x2000025")]
	public class ServiceAuthData
	{
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Service Service;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ApiKey;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ClientId;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ClientSecret;

		[Token(Token = "0x6000096")]
		[Address(RVA = "0x10F6748", Offset = "0x10F6748", VA = "0x10F6748")]
		public ServiceAuthData()
		{
		}
	}

	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB27A9C", Offset = "0xB27A9C")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Service service;

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x10F671C", Offset = "0x10F671C", VA = "0x10F671C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x10F6724", Offset = "0x10F6724", VA = "0x10F6724")]
		internal bool <get_Item>b__0(ServiceAuthData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ServiceAuthData[] Secrets;

	[Token(Token = "0x17000007")]
	public ServiceAuthData Item
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xE6DF10", Offset = "0xE6DF10", VA = "0xE6DF10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xE6DFFC", Offset = "0xE6DFFC", VA = "0xE6DFFC")]
	public SecretsConfig()
	{
	}
}
[Token(Token = "0x2000027")]
public class SimpleRotationScript : MonoBehaviour
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_Speed;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE7D8FC", Offset = "0xE7D8FC", VA = "0xE7D8FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE7D974", Offset = "0xE7D974", VA = "0xE7D974")]
	public SimpleRotationScript()
	{
	}
}
[Token(Token = "0x2000028")]
internal static class AndroidUtils
{
	[Token(Token = "0x600009B")]
	[Address(RVA = "0xFE2258", Offset = "0xFE2258", VA = "0xFE2258")]
	public static AndroidJavaObject GetContext()
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFE2318", Offset = "0xFE2318", VA = "0xFE2318")]
	public static int GetVersionCode()
	{
		return default(int);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFE262C", Offset = "0xFE262C", VA = "0xFE262C")]
	public static string GetVersionName()
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xFE2954", Offset = "0xFE2954", VA = "0xFE2954")]
	public static string GetPackageName()
	{
		return null;
	}
}
[Token(Token = "0x2000029")]
public class SmoothSyncExamplePlayerControllerPUN2 : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothSyncPUN2 smoothSync;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothSyncPUN2 childSmoothSync;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float transformMovementSpeed;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject childObjectToControl;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x107553C", Offset = "0x107553C", VA = "0x107553C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1075698", Offset = "0x1075698", VA = "0x1075698")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1075FF4", Offset = "0x1075FF4", VA = "0x1075FF4")]
	public static bool validateStateOfPlayer(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x107606C", Offset = "0x107606C", VA = "0x107606C")]
	public SmoothSyncExamplePlayerControllerPUN2()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27AAC", Offset = "0xB27AAC")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_BluePrint : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B1BC", Offset = "0xB2B1BC")]
	public float Pencil_Size;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B1DC", Offset = "0xB2B1DC")]
	public float Pencil_Correction;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B1F4", Offset = "0xB2B1F4")]
	public float Intensity;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B20C", Offset = "0xB2B20C")]
	public float Speed_Animation;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B224", Offset = "0xB2B224")]
	public float Corner_Lose;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B23C", Offset = "0xB2B23C")]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B254", Offset = "0xB2B254")]
	public float Fade_With_Original;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x17000008")]
	private Material material
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x1285A64", Offset = "0x1285A64", VA = "0x1285A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1285B30", Offset = "0x1285B30", VA = "0x1285B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1285BFC", Offset = "0x1285BFC", VA = "0x1285BFC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1285F58", Offset = "0x1285F58", VA = "0x1285F58")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1285F5C", Offset = "0x1285F5C", VA = "0x1285F5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1286008", Offset = "0x1286008", VA = "0x1286008")]
	public CameraFilterPack_Drawing_BluePrint()
	{
	}
}
[Token(Token = "0x200002B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27AF8", Offset = "0xB27AF8")]
public class CameraFilterPack_Drawing_CellShading : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B26C", Offset = "0xB2B26C")]
	public float EdgeSize;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B284", Offset = "0xB2B284")]
	public float ColorLevel;

	[Token(Token = "0x17000009")]
	private Material material
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x12860C8", Offset = "0x12860C8", VA = "0x12860C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1286194", Offset = "0x1286194", VA = "0x1286194")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x128620C", Offset = "0x128620C", VA = "0x128620C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1286444", Offset = "0x1286444", VA = "0x1286444")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1286448", Offset = "0x1286448", VA = "0x1286448")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x12864F4", Offset = "0x12864F4", VA = "0x12864F4")]
	public CameraFilterPack_Drawing_CellShading()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27B44", Offset = "0xB27B44")]
public class CameraFilterPack_Drawing_CellShading2 : MonoBehaviour
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B29C", Offset = "0xB2B29C")]
	public float EdgeSize;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B2B4", Offset = "0xB2B2B4")]
	public float ColorLevel;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B2CC", Offset = "0xB2B2CC")]
	public float Blur;

	[Token(Token = "0x1700000A")]
	private Material material
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x1286510", Offset = "0x1286510", VA = "0x1286510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x12865DC", Offset = "0x12865DC", VA = "0x12865DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1286654", Offset = "0x1286654", VA = "0x1286654")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x12868BC", Offset = "0x12868BC", VA = "0x12868BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x12868C0", Offset = "0x12868C0", VA = "0x12868C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x128696C", Offset = "0x128696C", VA = "0x128696C")]
	public CameraFilterPack_Drawing_CellShading2()
	{
	}
}
[Token(Token = "0x200002D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27B90", Offset = "0xB27B90")]
public class CameraFilterPack_Drawing_Comics : MonoBehaviour
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B2E4", Offset = "0xB2B2E4")]
	public float DotSize;

	[Token(Token = "0x1700000B")]
	private Material material
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x128698C", Offset = "0x128698C", VA = "0x128698C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1286A58", Offset = "0x1286A58", VA = "0x1286A58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1286AD0", Offset = "0x1286AD0", VA = "0x1286AD0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1286C74", Offset = "0x1286C74", VA = "0x1286C74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1286C78", Offset = "0x1286C78", VA = "0x1286C78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1286D24", Offset = "0x1286D24", VA = "0x1286D24")]
	public CameraFilterPack_Drawing_Comics()
	{
	}
}
[Token(Token = "0x200002E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27BDC", Offset = "0xB27BDC")]
public class CameraFilterPack_Drawing_Crosshatch : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B2FC", Offset = "0xB2B2FC")]
	public float Width;

	[Token(Token = "0x1700000C")]
	private Material material
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x1286D3C", Offset = "0x1286D3C", VA = "0x1286D3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1286E08", Offset = "0x1286E08", VA = "0x1286E08")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1286E80", Offset = "0x1286E80", VA = "0x1286E80")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x12870C4", Offset = "0x12870C4", VA = "0x12870C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x12870C8", Offset = "0x12870C8", VA = "0x12870C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1287174", Offset = "0x1287174", VA = "0x1287174")]
	public CameraFilterPack_Drawing_Crosshatch()
	{
	}
}
[Token(Token = "0x200002F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27C28", Offset = "0xB27C28")]
public class CameraFilterPack_Drawing_Curve : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B314", Offset = "0xB2B314")]
	public float Size;

	[Token(Token = "0x1700000D")]
	private Material material
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x128718C", Offset = "0x128718C", VA = "0x128718C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1287258", Offset = "0x1287258", VA = "0x1287258")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x12872D0", Offset = "0x12872D0", VA = "0x12872D0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1287514", Offset = "0x1287514", VA = "0x1287514")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1287518", Offset = "0x1287518", VA = "0x1287518")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x12875C4", Offset = "0x12875C4", VA = "0x12875C4")]
	public CameraFilterPack_Drawing_Curve()
	{
	}
}
[Token(Token = "0x2000030")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27C74", Offset = "0xB27C74")]
public class CameraFilterPack_Drawing_EnhancedComics : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B32C", Offset = "0xB2B32C")]
	public float DotSize;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B344", Offset = "0xB2B344")]
	public float _ColorR;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B35C", Offset = "0xB2B35C")]
	public float _ColorG;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B374", Offset = "0xB2B374")]
	public float _ColorB;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B38C", Offset = "0xB2B38C")]
	public float _Blood;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B3A4", Offset = "0xB2B3A4")]
	public float _SmoothStart;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B3BC", Offset = "0xB2B3BC")]
	public float _SmoothEnd;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color ColorRGB;

	[Token(Token = "0x1700000E")]
	private Material material
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x12875D8", Offset = "0x12875D8", VA = "0x12875D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x12876A4", Offset = "0x12876A4", VA = "0x12876A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x128771C", Offset = "0x128771C", VA = "0x128771C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1287A14", Offset = "0x1287A14", VA = "0x1287A14")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1287A18", Offset = "0x1287A18", VA = "0x1287A18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1287AC4", Offset = "0x1287AC4", VA = "0x1287AC4")]
	public CameraFilterPack_Drawing_EnhancedComics()
	{
	}
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27CC0", Offset = "0xB27CC0")]
public class CameraFilterPack_Drawing_Halftone : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B3D4", Offset = "0xB2B3D4")]
	public float Threshold;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B3EC", Offset = "0xB2B3EC")]
	public float DotSize;

	[Token(Token = "0x1700000F")]
	private Material material
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x1287B48", Offset = "0x1287B48", VA = "0x1287B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1287C14", Offset = "0x1287C14", VA = "0x1287C14")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1287C8C", Offset = "0x1287C8C", VA = "0x1287C8C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1287E60", Offset = "0x1287E60", VA = "0x1287E60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1287E64", Offset = "0x1287E64", VA = "0x1287E64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1287F10", Offset = "0x1287F10", VA = "0x1287F10")]
	public CameraFilterPack_Drawing_Halftone()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27D0C", Offset = "0xB27D0C")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Laplacian : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000010")]
	private Material material
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x1287F2C", Offset = "0x1287F2C", VA = "0x1287F2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1287FF8", Offset = "0x1287FF8", VA = "0x1287FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1288070", Offset = "0x1288070", VA = "0x1288070")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1288284", Offset = "0x1288284", VA = "0x1288284")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x128828C", Offset = "0x128828C", VA = "0x128828C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1288338", Offset = "0x1288338", VA = "0x1288338")]
	public CameraFilterPack_Drawing_Laplacian()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27D58", Offset = "0xB27D58")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Lines : MonoBehaviour
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B404", Offset = "0xB2B404")]
	public float Number;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B420", Offset = "0xB2B420")]
	public float Random;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B438", Offset = "0xB2B438")]
	private float PositionY;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B450", Offset = "0xB2B450")]
	private float Value4;

	[Token(Token = "0x17000011")]
	private Material material
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1288348", Offset = "0x1288348", VA = "0x1288348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1288414", Offset = "0x1288414", VA = "0x1288414")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x128848C", Offset = "0x128848C", VA = "0x128848C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1288760", Offset = "0x1288760", VA = "0x1288760")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1288764", Offset = "0x1288764", VA = "0x1288764")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1288810", Offset = "0x1288810", VA = "0x1288810")]
	public CameraFilterPack_Drawing_Lines()
	{
	}
}
[Token(Token = "0x2000034")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27DA4", Offset = "0xB27DA4")]
public class CameraFilterPack_Drawing_Manga : MonoBehaviour
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B468", Offset = "0xB2B468")]
	public float DotSize;

	[Token(Token = "0x17000012")]
	private Material material
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x128882C", Offset = "0x128882C", VA = "0x128882C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x12888F8", Offset = "0x12888F8", VA = "0x12888F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x1288970", Offset = "0x1288970", VA = "0x1288970")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1288B14", Offset = "0x1288B14", VA = "0x1288B14")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1288B18", Offset = "0x1288B18", VA = "0x1288B18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1288BC4", Offset = "0x1288BC4", VA = "0x1288BC4")]
	public CameraFilterPack_Drawing_Manga()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27DF0", Offset = "0xB27DF0")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga2 : MonoBehaviour
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B480", Offset = "0xB2B480")]
	public float DotSize;

	[Token(Token = "0x17000013")]
	private Material material
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1288BE0", Offset = "0x1288BE0", VA = "0x1288BE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1288CAC", Offset = "0x1288CAC", VA = "0x1288CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1288D24", Offset = "0x1288D24", VA = "0x1288D24")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1288EC8", Offset = "0x1288EC8", VA = "0x1288EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1288ECC", Offset = "0x1288ECC", VA = "0x1288ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1288F78", Offset = "0x1288F78", VA = "0x1288F78")]
	public CameraFilterPack_Drawing_Manga2()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27E3C", Offset = "0xB27E3C")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga3 : MonoBehaviour
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B498", Offset = "0xB2B498")]
	public float DotSize;

	[Token(Token = "0x17000014")]
	private Material material
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1288F94", Offset = "0x1288F94", VA = "0x1288F94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1289060", Offset = "0x1289060", VA = "0x1289060")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x12890D8", Offset = "0x12890D8", VA = "0x12890D8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x128927C", Offset = "0x128927C", VA = "0x128927C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1289280", Offset = "0x1289280", VA = "0x1289280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x128932C", Offset = "0x128932C", VA = "0x128932C")]
	public CameraFilterPack_Drawing_Manga3()
	{
	}
}
[Token(Token = "0x2000037")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27E88", Offset = "0xB27E88")]
public class CameraFilterPack_Drawing_Manga4 : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B4B0", Offset = "0xB2B4B0")]
	public float DotSize;

	[Token(Token = "0x17000015")]
	private Material material
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1289348", Offset = "0x1289348", VA = "0x1289348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1289414", Offset = "0x1289414", VA = "0x1289414")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x128948C", Offset = "0x128948C", VA = "0x128948C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1289630", Offset = "0x1289630", VA = "0x1289630")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1289634", Offset = "0x1289634", VA = "0x1289634")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x12896E0", Offset = "0x12896E0", VA = "0x12896E0")]
	public CameraFilterPack_Drawing_Manga4()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27ED4", Offset = "0xB27ED4")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga5 : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B4C8", Offset = "0xB2B4C8")]
	public float DotSize;

	[Token(Token = "0x17000016")]
	private Material material
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x12896FC", Offset = "0x12896FC", VA = "0x12896FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x12897C8", Offset = "0x12897C8", VA = "0x12897C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1289840", Offset = "0x1289840", VA = "0x1289840")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x12899E4", Offset = "0x12899E4", VA = "0x12899E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x12899E8", Offset = "0x12899E8", VA = "0x12899E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1289A94", Offset = "0x1289A94", VA = "0x1289A94")]
	public CameraFilterPack_Drawing_Manga5()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27F20", Offset = "0xB27F20")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga_Color : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B4E0", Offset = "0xB2B4E0")]
	public float DotSize;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float ChangeDotSize;

	[Token(Token = "0x17000017")]
	private Material material
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x1289AB0", Offset = "0x1289AB0", VA = "0x1289AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1289B7C", Offset = "0x1289B7C", VA = "0x1289B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1289BF4", Offset = "0x1289BF4", VA = "0x1289BF4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1289D98", Offset = "0x1289D98", VA = "0x1289D98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1289D9C", Offset = "0x1289D9C", VA = "0x1289D9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1289E48", Offset = "0x1289E48", VA = "0x1289E48")]
	public CameraFilterPack_Drawing_Manga_Color()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27F6C", Offset = "0xB27F6C")]
public class CameraFilterPack_Drawing_Manga_Flash : MonoBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B4F8", Offset = "0xB2B4F8")]
	public float Size;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B510", Offset = "0xB2B510")]
	public int Speed;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B528", Offset = "0xB2B528")]
	public float PosX;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B540", Offset = "0xB2B540")]
	public float PosY;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B558", Offset = "0xB2B558")]
	public float Intensity;

	[Token(Token = "0x17000018")]
	private Material material
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0x1289E64", Offset = "0x1289E64", VA = "0x1289E64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1289F30", Offset = "0x1289F30", VA = "0x1289F30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1289FA8", Offset = "0x1289FA8", VA = "0x1289FA8")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x128A2B0", Offset = "0x128A2B0", VA = "0x128A2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x128A2B4", Offset = "0x128A2B4", VA = "0x128A2B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x128A360", Offset = "0x128A360", VA = "0x128A360")]
	public CameraFilterPack_Drawing_Manga_Flash()
	{
	}
}
[Token(Token = "0x200003B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB27FB8", Offset = "0xB27FB8")]
public class CameraFilterPack_Drawing_Manga_FlashWhite : MonoBehaviour
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B570", Offset = "0xB2B570")]
	public float Size;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B588", Offset = "0xB2B588")]
	public int Speed;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B5A0", Offset = "0xB2B5A0")]
	public float PosX;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B5B8", Offset = "0xB2B5B8")]
	public float PosY;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B5D0", Offset = "0xB2B5D0")]
	public float Intensity;

	[Token(Token = "0x17000019")]
	private Material material
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x128A388", Offset = "0x128A388", VA = "0x128A388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x128A454", Offset = "0x128A454", VA = "0x128A454")]
	private void Start()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x128A4CC", Offset = "0x128A4CC", VA = "0x128A4CC")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x128A7D4", Offset = "0x128A7D4", VA = "0x128A7D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x128A7D8", Offset = "0x128A7D8", VA = "0x128A7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x128A884", Offset = "0x128A884", VA = "0x128A884")]
	public CameraFilterPack_Drawing_Manga_FlashWhite()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28004", Offset = "0xB28004")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Manga_Flash_Color : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B5E8", Offset = "0xB2B5E8")]
	public float Size;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color Color;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B600", Offset = "0xB2B600")]
	public int Speed;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B618", Offset = "0xB2B618")]
	public float PosX;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B630", Offset = "0xB2B630")]
	public float PosY;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B648", Offset = "0xB2B648")]
	public float Intensity;

	[Token(Token = "0x1700001A")]
	private Material material
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x128A8AC", Offset = "0x128A8AC", VA = "0x128A8AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x128A978", Offset = "0x128A978", VA = "0x128A978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x128A9F0", Offset = "0x128A9F0", VA = "0x128A9F0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x128AD2C", Offset = "0x128AD2C", VA = "0x128AD2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x128AD30", Offset = "0x128AD30", VA = "0x128AD30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x128ADDC", Offset = "0x128ADDC", VA = "0x128ADDC")]
	public CameraFilterPack_Drawing_Manga_Flash_Color()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28050", Offset = "0xB28050")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_NewCellShading : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B660", Offset = "0xB2B660")]
	public float Threshold;

	[Token(Token = "0x1700001B")]
	private Material material
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x128AE58", Offset = "0x128AE58", VA = "0x128AE58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x128AF24", Offset = "0x128AF24", VA = "0x128AF24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x128AF9C", Offset = "0x128AF9C", VA = "0x128AF9C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x128B1A4", Offset = "0x128B1A4", VA = "0x128B1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x128B1A8", Offset = "0x128B1A8", VA = "0x128B1A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x128B254", Offset = "0x128B254", VA = "0x128B254")]
	public CameraFilterPack_Drawing_NewCellShading()
	{
	}
}
[Token(Token = "0x200003E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB2809C", Offset = "0xB2809C")]
public class CameraFilterPack_Drawing_Paper : MonoBehaviour
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B678", Offset = "0xB2B678")]
	public float Pencil_Size;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B698", Offset = "0xB2B698")]
	public float Pencil_Correction;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B6B0", Offset = "0xB2B6B0")]
	public float Intensity;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B6C8", Offset = "0xB2B6C8")]
	public float Speed_Animation;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B6E0", Offset = "0xB2B6E0")]
	public float Corner_Lose;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B6F8", Offset = "0xB2B6F8")]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B710", Offset = "0xB2B710")]
	public float Fade_With_Original;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700001C")]
	private Material material
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x128B270", Offset = "0x128B270", VA = "0x128B270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x128B33C", Offset = "0x128B33C", VA = "0x128B33C")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x128B408", Offset = "0x128B408", VA = "0x128B408")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x128B764", Offset = "0x128B764", VA = "0x128B764")]
	private void Update()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x128B768", Offset = "0x128B768", VA = "0x128B768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x128B814", Offset = "0x128B814", VA = "0x128B814")]
	public CameraFilterPack_Drawing_Paper()
	{
	}
}
[Token(Token = "0x200003F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB280E8", Offset = "0xB280E8")]
public class CameraFilterPack_Drawing_Paper2 : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B728", Offset = "0xB2B728")]
	public float Pencil_Size;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B748", Offset = "0xB2B748")]
	public float Pencil_Correction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B760", Offset = "0xB2B760")]
	public float Intensity;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B778", Offset = "0xB2B778")]
	public float Speed_Animation;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B790", Offset = "0xB2B790")]
	public float Corner_Lose;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B7A8", Offset = "0xB2B7A8")]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B7C0", Offset = "0xB2B7C0")]
	public float Fade_With_Original;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700001D")]
	private Material material
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x128B8CC", Offset = "0x128B8CC", VA = "0x128B8CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x128B998", Offset = "0x128B998", VA = "0x128B998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x128BA64", Offset = "0x128BA64", VA = "0x128BA64")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x128BDC0", Offset = "0x128BDC0", VA = "0x128BDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x128BDC4", Offset = "0x128BDC4", VA = "0x128BDC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x128BE70", Offset = "0x128BE70", VA = "0x128BE70")]
	public CameraFilterPack_Drawing_Paper2()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28134", Offset = "0xB28134")]
[ExecuteInEditMode]
public class CameraFilterPack_Drawing_Paper3 : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Pencil_Color;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B7D8", Offset = "0xB2B7D8")]
	public float Pencil_Size;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B7F8", Offset = "0xB2B7F8")]
	public float Pencil_Correction;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B810", Offset = "0xB2B810")]
	public float Intensity;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B828", Offset = "0xB2B828")]
	public float Speed_Animation;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B840", Offset = "0xB2B840")]
	public float Corner_Lose;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B858", Offset = "0xB2B858")]
	public float Fade_Paper_to_BackColor;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B870", Offset = "0xB2B870")]
	public float Fade_With_Original;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color Back_Color;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material SCMaterial;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D Texture2;

	[Token(Token = "0x1700001E")]
	private Material material
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x128BF28", Offset = "0x128BF28", VA = "0x128BF28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x128BFF4", Offset = "0x128BFF4", VA = "0x128BFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x128C0C0", Offset = "0x128C0C0", VA = "0x128C0C0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x128C41C", Offset = "0x128C41C", VA = "0x128C41C")]
	private void Update()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x128C420", Offset = "0x128C420", VA = "0x128C420")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x128C4CC", Offset = "0x128C4CC", VA = "0x128C4CC")]
	public CameraFilterPack_Drawing_Paper3()
	{
	}
}
[Token(Token = "0x2000041")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28180", Offset = "0xB28180")]
public class CameraFilterPack_Drawing_Toon : MonoBehaviour
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material SCMaterial;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TimeX;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B888", Offset = "0xB2B888")]
	public float Threshold;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B8A0", Offset = "0xB2B8A0")]
	public float DotSize;

	[Token(Token = "0x1700001F")]
	private Material material
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x159D1A0", Offset = "0x159D1A0", VA = "0x159D1A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x159D26C", Offset = "0x159D26C", VA = "0x159D26C")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x159D2E4", Offset = "0x159D2E4", VA = "0x159D2E4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x159D4B8", Offset = "0x159D4B8", VA = "0x159D4B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x159D4BC", Offset = "0x159D4BC", VA = "0x159D4BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x159D568", Offset = "0x159D568", VA = "0x159D568")]
	public CameraFilterPack_Drawing_Toon()
	{
	}
}
[Token(Token = "0x2000042")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB281CC", Offset = "0xB281CC")]
public class CameraFilterPack_Edge_BlackLine : MonoBehaviour
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000020")]
	private Material material
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x159D580", Offset = "0x159D580", VA = "0x159D580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x159D64C", Offset = "0x159D64C", VA = "0x159D64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x159D6C4", Offset = "0x159D6C4", VA = "0x159D6C4")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x159D89C", Offset = "0x159D89C", VA = "0x159D89C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x159D8A0", Offset = "0x159D8A0", VA = "0x159D8A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x159D94C", Offset = "0x159D94C", VA = "0x159D94C")]
	public CameraFilterPack_Edge_BlackLine()
	{
	}
}
[Token(Token = "0x2000043")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28218", Offset = "0xB28218")]
public class CameraFilterPack_Edge_Edge_filter : MonoBehaviour
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B8B8", Offset = "0xB2B8B8")]
	public float RedAmplifier;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B8D0", Offset = "0xB2B8D0")]
	public float GreenAmplifier;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B8E8", Offset = "0xB2B8E8")]
	public float BlueAmplifier;

	[Token(Token = "0x17000021")]
	private Material material
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x159D95C", Offset = "0x159D95C", VA = "0x159D95C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x159DA28", Offset = "0x159DA28", VA = "0x159DA28")]
	private void Start()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x159DAA0", Offset = "0x159DAA0", VA = "0x159DAA0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x159DD08", Offset = "0x159DD08", VA = "0x159DD08")]
	private void Update()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x159DD0C", Offset = "0x159DD0C", VA = "0x159DD0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x159DDB8", Offset = "0x159DDB8", VA = "0x159DDB8")]
	public CameraFilterPack_Edge_Edge_filter()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28264", Offset = "0xB28264")]
[ExecuteInEditMode]
public class CameraFilterPack_Edge_Golden : MonoBehaviour
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000022")]
	private Material material
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x159DDD0", Offset = "0x159DDD0", VA = "0x159DDD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x159DE9C", Offset = "0x159DE9C", VA = "0x159DE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x159DF14", Offset = "0x159DF14", VA = "0x159DF14")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x159E0EC", Offset = "0x159E0EC", VA = "0x159E0EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x159E0F0", Offset = "0x159E0F0", VA = "0x159E0F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x159E19C", Offset = "0x159E19C", VA = "0x159E19C")]
	public CameraFilterPack_Edge_Golden()
	{
	}
}
[Token(Token = "0x2000045")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB282B0", Offset = "0xB282B0")]
public class CameraFilterPack_Edge_Neon : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B900", Offset = "0xB2B900")]
	public float EdgeWeight;

	[Token(Token = "0x17000023")]
	private Material material
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x159E1AC", Offset = "0x159E1AC", VA = "0x159E1AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x159E278", Offset = "0x159E278", VA = "0x159E278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x159E2F0", Offset = "0x159E2F0", VA = "0x159E2F0")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x159E4F8", Offset = "0x159E4F8", VA = "0x159E4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x159E4FC", Offset = "0x159E4FC", VA = "0x159E4FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x159E5A8", Offset = "0x159E5A8", VA = "0x159E5A8")]
	public CameraFilterPack_Edge_Neon()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB282FC", Offset = "0xB282FC")]
[ExecuteInEditMode]
public class CameraFilterPack_Edge_Sigmoid : MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B918", Offset = "0xB2B918")]
	public float Gain;

	[Token(Token = "0x17000024")]
	private Material material
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x159E5C0", Offset = "0x159E5C0", VA = "0x159E5C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x159E68C", Offset = "0x159E68C", VA = "0x159E68C")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x159E704", Offset = "0x159E704", VA = "0x159E704")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x159E90C", Offset = "0x159E90C", VA = "0x159E90C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x159E910", Offset = "0x159E910", VA = "0x159E910")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x159E9BC", Offset = "0x159E9BC", VA = "0x159E9BC")]
	public CameraFilterPack_Edge_Sigmoid()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28348", Offset = "0xB28348")]
[ExecuteInEditMode]
public class CameraFilterPack_Edge_Sobel : MonoBehaviour
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x17000025")]
	private Material material
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x159E9D4", Offset = "0x159E9D4", VA = "0x159E9D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x159EAA0", Offset = "0x159EAA0", VA = "0x159EAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x159EB18", Offset = "0x159EB18", VA = "0x159EB18")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x159ED2C", Offset = "0x159ED2C", VA = "0x159ED2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x159ED30", Offset = "0x159ED30", VA = "0x159ED30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x159EDDC", Offset = "0x159EDDC", VA = "0x159EDDC")]
	public CameraFilterPack_Edge_Sobel()
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28394", Offset = "0xB28394")]
[ExecuteInEditMode]
public class CameraFilterPack_Pixelisation_OilPaint : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B930", Offset = "0xB2B930")]
	public float Value;

	[Token(Token = "0x17000026")]
	private Material material
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x159EDEC", Offset = "0x159EDEC", VA = "0x159EDEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x159EEB8", Offset = "0x159EEB8", VA = "0x159EEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x159EF30", Offset = "0x159EF30", VA = "0x159EF30")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x159F174", Offset = "0x159F174", VA = "0x159F174")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x159F178", Offset = "0x159F178", VA = "0x159F178")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x159F224", Offset = "0x159F224", VA = "0x159F224")]
	public CameraFilterPack_Pixelisation_OilPaint()
	{
	}
}
[Token(Token = "0x2000049")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB283E0", Offset = "0xB283E0")]
[ExecuteInEditMode]
public class CameraFilterPack_Pixelisation_OilPaintHQ : MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader SCShader;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float TimeX;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material SCMaterial;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2B948", Offset = "0xB2B948")]
	public float Value;

	[Token(Token = "0x17000027")]
	private Material material
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x159F238", Offset = "0x159F238", VA = "0x159F238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x159F304", Offset = "0x159F304", VA = "0x159F304")]
	private void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x159F37C", Offset = "0x159F37C", VA = "0x159F37C")]
	private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x159F5C0", Offset = "0x159F5C0", VA = "0x159F5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x159F5C4", Offset = "0x159F5C4", VA = "0x159F5C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x159F670", Offset = "0x159F670", VA = "0x159F670")]
	public CameraFilterPack_Pixelisation_OilPaintHQ()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB2842C", Offset = "0xB2842C")]
[ExecuteInEditMode]
public class FXAA : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Sharpness;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Threshold;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int sharpnessString;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int thresholdString;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1011D60", Offset = "0x1011D60", VA = "0x1011D60")]
	public void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1011E5C", Offset = "0x1011E5C", VA = "0x1011E5C")]
	public FXAA()
	{
	}
}
[Token(Token = "0x200004B")]
public class BoundsDouble
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double[] min;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double[] max;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inited;

	[Token(Token = "0x17000028")]
	public bool Empty
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x127A928", Offset = "0x127A928", VA = "0x127A928")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000029")]
	public double[] Min
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x127A938", Offset = "0x127A938", VA = "0x127A938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public double[] Max
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x127A940", Offset = "0x127A940", VA = "0x127A940")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1279DFC", Offset = "0x1279DFC", VA = "0x1279DFC")]
	public BoundsDouble()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1279E68", Offset = "0x1279E68", VA = "0x1279E68")]
	public BoundsDouble(BoundsDouble b)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1279F74", Offset = "0x1279F74", VA = "0x1279F74")]
	public BoundsDouble(double[] min, double[] max)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x127A0F4", Offset = "0x127A0F4", VA = "0x127A0F4")]
	public BoundsDouble(Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x127A24C", Offset = "0x127A24C", VA = "0x127A24C")]
	public void Encapsulate(BoundsDouble b)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x127A594", Offset = "0x127A594", VA = "0x127A594")]
	public void Rotate(Matrix4x4 m)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x127A848", Offset = "0x127A848", VA = "0x127A848")]
	public void Translate(double x, double y, double z)
	{
	}
}
[Token(Token = "0x200004C")]
public sealed class GlTF_Accessor : GlTF_ReferencedObject
{
	[Token(Token = "0x200004D")]
	public enum Type
	{
		[Token(Token = "0x40003E6")]
		SCALAR,
		[Token(Token = "0x40003E7")]
		VEC2,
		[Token(Token = "0x40003E8")]
		VEC3,
		[Token(Token = "0x40003E9")]
		VEC4
	}

	[Token(Token = "0x200004E")]
	public enum ComponentType
	{
		[Token(Token = "0x40003EB")]
		BYTE = 5120,
		[Token(Token = "0x40003EC")]
		UNSIGNED_BYTE = 5121,
		[Token(Token = "0x40003ED")]
		SHORT = 5122,
		[Token(Token = "0x40003EE")]
		USHORT = 5123,
		[Token(Token = "0x40003EF")]
		UNSIGNED_INT = 5125,
		[Token(Token = "0x40003F0")]
		FLOAT = 5126
	}

	[Serializable]
	[Token(Token = "0x200004F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2849C", Offset = "0xB2849C")]
	private sealed class <>c
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Color32, Color> <>9__40_0;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Vector2, Vector2> <>9__42_0;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Vector3, Vector3> <>9__43_0;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Vector4, Vector4> <>9__44_0;

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x1155CE8", Offset = "0x1155CE8", VA = "0x1155CE8")]
		public <>c()
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x1155CF0", Offset = "0x1155CF0", VA = "0x1155CF0")]
		internal Color <Populate>b__40_0(Color32 c32)
		{
			return default(Color);
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x1155CFC", Offset = "0x1155CFC", VA = "0x1155CFC")]
		internal Vector2 <Populate>b__42_0(Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x1155D08", Offset = "0x1155D08", VA = "0x1155D08")]
		internal Vector3 <Populate>b__43_0(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0x1155D14", Offset = "0x1155D14", VA = "0x1155D14")]
		internal Vector4 <Populate>b__44_0(Vector4 v)
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284AC", Offset = "0xB284AC")]
	private sealed class <IterReferences>d__46 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Accessor <>4__this;

		[Token(Token = "0x17000032")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000193")]
			[Address(RVA = "0x1155DF8", Offset = "0x1155DF8", VA = "0x1155DF8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000195")]
			[Address(RVA = "0x1155E40", Offset = "0x1155E40", VA = "0x1155E40", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x1155D4C", Offset = "0x1155D4C", VA = "0x1155D4C")]
		[DebuggerHidden]
		public <IterReferences>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x1155D84", Offset = "0x1155D84", VA = "0x1155D84", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x1155D88", Offset = "0x1155D88", VA = "0x1155D88", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x1155E00", Offset = "0x1155E00", VA = "0x1155E00", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x1155E48", Offset = "0x1155E48", VA = "0x1155E48", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0x1155EF0", Offset = "0x1155EF0", VA = "0x1155EF0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly GlTF_BufferView bufferView;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int byteStride;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public readonly Type type;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly ComponentType componentType;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly bool m_normalized;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int? count;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private long? byteOffset;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_haveMinMax;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector4 maxFloat;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector4 minFloat;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int minInt;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int maxInt;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GlTF_Accessor m_clonedFrom;

	[Token(Token = "0x1700002B")]
	private GlTF_Accessor Ancestor
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x15D6348", Offset = "0x15D6348", VA = "0x15D6348")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public int Count
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x15D635C", Offset = "0x15D635C", VA = "0x15D635C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002D")]
	public long ByteOffset
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x15D63BC", Offset = "0x15D63BC", VA = "0x15D63BC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700002E")]
	public Vector4 MaxFloat
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x15D641C", Offset = "0x15D641C", VA = "0x15D641C")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x1700002F")]
	public Vector4 MinFloat
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x15D6444", Offset = "0x15D6444", VA = "0x15D6444")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x17000030")]
	public int MinInt
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x15D646C", Offset = "0x15D646C", VA = "0x15D646C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000031")]
	public int MaxInt
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x15D6490", Offset = "0x15D6490", VA = "0x15D6490")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x15D5F10", Offset = "0x15D5F10", VA = "0x15D5F10")]
	private static int GetSize(ComponentType t)
	{
		return default(int);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x15D5FBC", Offset = "0x15D5FBC", VA = "0x15D5FBC")]
	private static int GetNumComponents(Type t)
	{
		return default(int);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x15D604C", Offset = "0x15D604C", VA = "0x15D604C")]
	public static Type GetTypeForNumComponents(int size)
	{
		return default(Type);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x15D60E0", Offset = "0x15D60E0", VA = "0x15D60E0")]
	public static GlTF_Accessor CloneWithDifferentType(GlTF_Globals G, GlTF_Accessor fromAccessor, Type newType)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x15D6198", Offset = "0x15D6198", VA = "0x15D6198")]
	private GlTF_Accessor(GlTF_Globals G, GlTF_Accessor fromAccessor, Type newType)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x15D6580", Offset = "0x15D6580", VA = "0x15D6580")]
	public GlTF_Accessor(GlTF_Globals globals, string n, Type t, ComponentType c, GlTF_BufferView bufferView, bool isNonVertexAttributeAccessor, bool normalized)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x15D64BC", Offset = "0x15D64BC", VA = "0x15D64BC")]
	private void SanityCheckBufferViewStride()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x15D6654", Offset = "0x15D6654", VA = "0x15D6654")]
	public static string GetNameFromObject(ObjectName o, string name)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x15D66E4", Offset = "0x15D66E4", VA = "0x15D66E4")]
	private void InitMinMaxInt()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x15D66FC", Offset = "0x15D66FC", VA = "0x15D66FC")]
	private void InitMinMaxFloat()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x15D6780", Offset = "0x15D6780", VA = "0x15D6780")]
	private void RequireType(Type t, ComponentType c)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x15D6938", Offset = "0x15D6938", VA = "0x15D6938")]
	public void Populate(List<Color32> colorList)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x15D6B88", Offset = "0x15D6B88", VA = "0x15D6B88")]
	public void PopulateUshort(int[] vs)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x15D6E74", Offset = "0x15D6E74", VA = "0x15D6E74")]
	public void Populate(List<Vector2> v2s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x15D71A4", Offset = "0x15D71A4", VA = "0x15D71A4")]
	public void Populate(List<Vector3> v3s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x15D755C", Offset = "0x15D755C", VA = "0x15D755C")]
	public void Populate(List<Vector4> v4s, bool flipY, bool calculateMinMax)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x15D7924", Offset = "0x15D7924", VA = "0x15D7924")]
	private void WriteNamedTypedValue(string name, int i, Vector4 fs)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x15D7E70", Offset = "0x15D7E70", VA = "0x15D7E70", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37778", Offset = "0xB37778")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x15D7EDC", Offset = "0x15D7EDC", VA = "0x15D7EDC", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000051")]
public class GlTF_AmbientLight : GlTF_Light
{
	[Token(Token = "0x6000198")]
	[Address(RVA = "0x15D8924", Offset = "0x15D8924", VA = "0x15D8924")]
	public GlTF_AmbientLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x15D8934", Offset = "0x15D8934", VA = "0x15D8934", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x2000052")]
public sealed class GlTF_AnimSampler : GlTF_Writer
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string input;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string interpolation;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string output;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x15D8C04", Offset = "0x15D8C04", VA = "0x15D8C04")]
	public GlTF_AnimSampler(GlTF_Globals globals, string n, string o)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x15D8CBC", Offset = "0x15D8CBC", VA = "0x15D8CBC")]
	public void Write()
	{
	}
}
[Token(Token = "0x2000053")]
public sealed class GlTF_Attributes
{
	[StructLayout(3)]
	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284BC", Offset = "0xB284BC")]
	private struct <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GlTF_VertexLayout layout;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GlTF_Globals G;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ObjectName meshName;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GlTF_Attributes <>4__this;
	}

	[StructLayout(3)]
	[Token(Token = "0x2000055")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284CC", Offset = "0xB284CC")]
	private struct <>c__DisplayClass10_1
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string nonconformingPrefix;
	}

	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284DC", Offset = "0xB284DC")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x115601C", Offset = "0x115601C", VA = "0x115601C")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1156024", Offset = "0x1156024", VA = "0x1156024")]
		internal Vector4 <PopulateUv>b__0(Vector3 v)
		{
			return default(Vector4);
		}
	}

	[Serializable]
	[Token(Token = "0x2000057")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284EC", Offset = "0xB284EC")]
	private sealed class <>c
	{
		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB2B960", Offset = "0xB2B960")]
		public static Func<KeyValuePair<string, GlTF_Accessor>, (int, string)> <>9__13_1;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<string, GlTF_Accessor>, GlTF_Accessor> <>9__14_0;

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1155F54", Offset = "0x1155F54", VA = "0x1155F54")]
		public <>c()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x1155F5C", Offset = "0x1155F5C", VA = "0x1155F5C")]
		internal (int, string) <WriteAsNamedJObject>b__13_1(KeyValuePair<string, GlTF_Accessor> kvp)
		{
			return default((int, string));
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1155FDC", Offset = "0x1155FDC", VA = "0x1155FDC")]
		internal GlTF_Accessor <IterReferences>b__14_0(KeyValuePair<string, GlTF_Accessor> keyValue)
		{
			return null;
		}
	}

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly GlTF_VertexLayout m_layout;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public readonly GlTF_Accessor normalAccessor;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public readonly GlTF_Accessor colorAccessor;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public readonly GlTF_Accessor tangentAccessor;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public readonly GlTF_Accessor positionAccessor;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public readonly GlTF_Accessor texCoord0Accessor;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public readonly GlTF_Accessor texCoord1Accessor;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public readonly GlTF_Accessor texCoord2Accessor;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public readonly GlTF_Accessor texCoord3Accessor;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly Dictionary<string, GlTF_Accessor> m_accessors;

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x15D8F1C", Offset = "0x15D8F1C", VA = "0x15D8F1C")]
	public GlTF_Attributes(GlTF_Globals G, ObjectName meshName, GlTF_VertexLayout layout)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x15D9698", Offset = "0x15D9698", VA = "0x15D9698")]
	private void PopulateUv(int channel, GeometryPool pool, GlTF_Accessor accessor, GeometryPool.Semantic semantic)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x15D99EC", Offset = "0x15D99EC", VA = "0x15D99EC")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x15D9AD8", Offset = "0x15D9AD8", VA = "0x15D9AD8")]
	public void WriteAsNamedJObject(GlTF_Globals G, string name)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x15DA134", Offset = "0x15DA134", VA = "0x15DA134")]
	public IEnumerable<GlTF_ReferencedObject> IterReferences(GlTF_Globals G)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x15D9470", Offset = "0x15D9470", VA = "0x15D9470")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37848", Offset = "0xB37848")]
	private GlTF_Accessor <.ctor>g__MakeAccessorFor|10_0(int texcoord, ref <>c__DisplayClass10_0 P_1, ref <>c__DisplayClass10_1 P_2)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x15DA250", Offset = "0x15DA250", VA = "0x15DA250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37858", Offset = "0xB37858")]
	internal static int <WriteAsNamedJObject>g__OldOrder|13_0(string attribute)
	{
		return default(int);
	}
}
[Token(Token = "0x2000058")]
public sealed class GlTF_Buffer : GlTF_ReferencedObject
{
	[Token(Token = "0x2000059")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB284FC", Offset = "0xB284FC")]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000034")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x11560B8", Offset = "0x11560B8", VA = "0x11560B8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000035")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0x1156100", Offset = "0x1156100", VA = "0x1156100", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1156064", Offset = "0x1156064", VA = "0x1156064")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x115609C", Offset = "0x115609C", VA = "0x115609C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x11560A0", Offset = "0x11560A0", VA = "0x11560A0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x11560C0", Offset = "0x11560C0", VA = "0x11560C0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1156108", Offset = "0x1156108", VA = "0x1156108", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x115619C", Offset = "0x115619C", VA = "0x115619C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_uri;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long? m_byteLength;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x15DA3A0", Offset = "0x15DA3A0", VA = "0x15DA3A0")]
	public GlTF_Buffer(GlTF_Globals globals, [CanBeNull] string uri)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x15DA47C", Offset = "0x15DA47C", VA = "0x15DA47C", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37868", Offset = "0xB37868")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x15DA4D8", Offset = "0x15DA4D8", VA = "0x15DA4D8", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200005A")]
public sealed class GlTF_BufferView : GlTF_ReferencedObject, IDisposable
{
	[Serializable]
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2850C", Offset = "0xB2850C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, ushort> <>9__19_0;

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1156200", Offset = "0x1156200", VA = "0x1156200")]
		public <>c()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1156208", Offset = "0x1156208", VA = "0x1156208")]
		internal ushort <PopulateUshort>b__19_0(int i32)
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2851C", Offset = "0xB2851C")]
	private sealed class <IterReferences>d__20 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_BufferView <>4__this;

		[Token(Token = "0x17000037")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001C4")]
			[Address(RVA = "0x11562BC", Offset = "0x11562BC", VA = "0x11562BC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C6")]
			[Address(RVA = "0x1156304", Offset = "0x1156304", VA = "0x1156304", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x1156210", Offset = "0x1156210", VA = "0x1156210")]
		[DebuggerHidden]
		public <IterReferences>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x1156248", Offset = "0x1156248", VA = "0x1156248", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x115624C", Offset = "0x115624C", VA = "0x115624C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x11562C4", Offset = "0x11562C4", VA = "0x11562C4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x115630C", Offset = "0x115630C", VA = "0x115630C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x11563B4", Offset = "0x11563B4", VA = "0x11563B4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000415")]
	public const int kTarget_ARRAY_BUFFER = 34962;

	[Token(Token = "0x4000416")]
	public const int kTarget_ELEMENT_ARRAY_BUFFER = 34963;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long byteLength;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long? byteOffset;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly int target;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Stream stream;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string streamFileName;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int? m_byteStride;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int? m_packedSize;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GlTF_Buffer m_buffer;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SketchBinaryWriter m_binaryWriter;

	[Token(Token = "0x17000036")]
	public long currentOffset
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x15DA7E0", Offset = "0x15DA7E0", VA = "0x15DA7E0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x15DA67C", Offset = "0x15DA67C", VA = "0x15DA67C")]
	public static GlTF_BufferView Create(GlTF_Globals G, string name, int target = 34962)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x15DA720", Offset = "0x15DA720", VA = "0x15DA720")]
	private GlTF_BufferView(GlTF_Globals globals, string n, int t)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x15DA7E8", Offset = "0x15DA7E8", VA = "0x15DA7E8")]
	public void EnableFileStream()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x15DA8F4", Offset = "0x15DA8F4", VA = "0x15DA8F4", Slot = "6")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60001B9")]
	public void FastPopulate<T>(T[] data, int count) where T : struct
	{
	}

	[Token(Token = "0x60001BA")]
	public void FastPopulate<T>(List<T> data) where T : struct
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x15D6D08", Offset = "0x15D6D08", VA = "0x15D6D08")]
	public void PopulateUshort(int[] vs)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x15DAA04", Offset = "0x15DAA04", VA = "0x15DAA04", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37938", Offset = "0xB37938")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x15DAA70", Offset = "0x15DAA70", VA = "0x15DAA70", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200005D")]
public abstract class GlTF_Camera : GlTF_ReferencedObject
{
	[Token(Token = "0x200005E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2852C", Offset = "0xB2852C")]
	private sealed class <IterReferences>d__4 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000039")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60001D0")]
			[Address(RVA = "0x115640C", Offset = "0x115640C", VA = "0x115640C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0x1156454", Offset = "0x1156454", VA = "0x1156454", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x11563B8", Offset = "0x11563B8", VA = "0x11563B8")]
		[DebuggerHidden]
		public <IterReferences>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x11563F0", Offset = "0x11563F0", VA = "0x11563F0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x11563F4", Offset = "0x11563F4", VA = "0x11563F4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1156414", Offset = "0x1156414", VA = "0x1156414", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x115645C", Offset = "0x115645C", VA = "0x115645C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x11564F0", Offset = "0x11564F0", VA = "0x11564F0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string type;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x15DAC60", Offset = "0x15DAC60", VA = "0x15DAC60")]
	public GlTF_Camera(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x15DAC68", Offset = "0x15DAC68", VA = "0x15DAC68", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x60001CB")]
	public abstract void WriteCamera();

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x15DAC74", Offset = "0x15DAC74", VA = "0x15DAC74", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37A08", Offset = "0xB37A08")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}
}
[Token(Token = "0x200005F")]
public sealed class GlTF_Channel : GlTF_Writer
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_AnimSampler sampler;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GlTF_Target target;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x15DACD0", Offset = "0x15DACD0", VA = "0x15DACD0")]
	public GlTF_Channel(GlTF_Globals globals, string ch, GlTF_AnimSampler s)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x15DADB8", Offset = "0x15DADB8", VA = "0x15DADB8")]
	public void Write()
	{
	}
}
[Token(Token = "0x2000060")]
public abstract class GlTF_ColorOrTexture : GlTF_Writer
{
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x15DAF4C", Offset = "0x15DAF4C", VA = "0x15DAF4C")]
	public GlTF_ColorOrTexture(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x15DAF54", Offset = "0x15DAF54", VA = "0x15DAF54")]
	public GlTF_ColorOrTexture(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60001D9")]
	public abstract void WriteColorOrTexture();
}
[Token(Token = "0x2000061")]
public sealed class GlTF_ColorRGB : GlTF_Writer
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x15DAF80", Offset = "0x15DAF80", VA = "0x15DAF80")]
	public GlTF_ColorRGB(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x15DAFAC", Offset = "0x15DAFAC", VA = "0x15DAFAC")]
	public GlTF_ColorRGB(GlTF_Globals globals, Color c)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x15DAFF8", Offset = "0x15DAFF8", VA = "0x15DAFF8")]
	public GlTF_ColorRGB(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x15D894C", Offset = "0x15D894C", VA = "0x15D894C")]
	public void Write()
	{
	}
}
[Token(Token = "0x2000062")]
public sealed class GlTF_ColorRGBA : GlTF_Writer
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color color;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x15DB04C", Offset = "0x15DB04C", VA = "0x15DB04C")]
	public GlTF_ColorRGBA(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x15DB078", Offset = "0x15DB078", VA = "0x15DB078")]
	public GlTF_ColorRGBA(GlTF_Globals globals, Color c)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x15DB0C4", Offset = "0x15DB0C4", VA = "0x15DB0C4")]
	public GlTF_ColorRGBA(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x15DB118", Offset = "0x15DB118", VA = "0x15DB118")]
	public void Write()
	{
	}
}
[Token(Token = "0x2000063")]
public class GlTF_DirectionalLight : GlTF_Light
{
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x15DB434", Offset = "0x15DB434", VA = "0x15DB434")]
	public GlTF_DirectionalLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x15DB43C", Offset = "0x15DB43C", VA = "0x15DB43C", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x2000064")]
public abstract class GlTF_FloatArray : GlTF_Writer
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] items;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int minItems;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxItems;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x15DB454", Offset = "0x15DB454", VA = "0x15DB454")]
	public GlTF_FloatArray(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x15DB45C", Offset = "0x15DB45C", VA = "0x15DB45C")]
	public GlTF_FloatArray(GlTF_Globals globals, string n)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x15DB488", Offset = "0x15DB488", VA = "0x15DB488")]
	protected void WriteValsAsNamedArray()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x15DB5A4", Offset = "0x15DB5A4", VA = "0x15DB5A4")]
	protected void WriteVals()
	{
	}
}
[Token(Token = "0x2000065")]
public class GlTF_FloatArray4 : GlTF_FloatArray
{
	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x15DB6A8", Offset = "0x15DB6A8", VA = "0x15DB6A8")]
	public GlTF_FloatArray4(GlTF_Globals globals)
	{
	}
}
[Token(Token = "0x2000066")]
public sealed class GlTF_Globals : IDisposable
{
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2853C", Offset = "0xB2853C")]
	private sealed class <>c__DisplayClass82_0
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<GlTF_ReferencedObject> used;

		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1156690", Offset = "0x1156690", VA = "0x1156690")]
		public <>c__DisplayClass82_0()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1156698", Offset = "0x1156698", VA = "0x1156698")]
		internal bool <WriteTopLevel>b__0(GlTF_ReferencedObject elt)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000068")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2854C", Offset = "0xB2854C")]
	private sealed class <>c
	{
		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GlTF_ReferencedObject, string> <>9__84_0;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<string, GlTF_Node>, GlTF_Node> <>9__100_1;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<GlTF_Node, bool> <>9__100_2;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<GlTF_BufferView, bool> <>9__100_0;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<GlTF_ReferencedObject, GlTF_ReferencedObject> <>9__100_3;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> <>9__100_4;

		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1156554", Offset = "0x1156554", VA = "0x1156554")]
		public <>c()
		{
		}

		[Token(Token = "0x6000224")]
		[Address(RVA = "0x115655C", Offset = "0x115655C", VA = "0x115655C")]
		internal string <SetSub>b__84_0(GlTF_ReferencedObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0x1156574", Offset = "0x1156574", VA = "0x1156574")]
		internal GlTF_Node <Write>b__100_1(KeyValuePair<string, GlTF_Node> kvp)
		{
			return null;
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0x11565B4", Offset = "0x11565B4", VA = "0x11565B4")]
		internal bool <Write>b__100_2(GlTF_Node n)
		{
			return default(bool);
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0x11565D4", Offset = "0x11565D4", VA = "0x11565D4")]
		internal bool <Write>b__100_0(GlTF_BufferView bv)
		{
			return default(bool);
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0x11565F4", Offset = "0x11565F4", VA = "0x11565F4")]
		internal GlTF_ReferencedObject <Write>b__100_3(GlTF_ReferencedObject refobj)
		{
			return null;
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0x11565FC", Offset = "0x11565FC", VA = "0x11565FC")]
		internal HashSet<GlTF_ReferencedObject> <Write>b__100_4(GlTF_ReferencedObject refobj)
		{
			return null;
		}
	}

	[Token(Token = "0x4000431")]
	private const int B3DM_HEADER_SIZE = 24;

	[Token(Token = "0x4000432")]
	private const int kGlbHeaderSize = 20;

	[Token(Token = "0x4000433")]
	private const uint kFourCC_glTF = 1179937895u;

	[Token(Token = "0x4000434")]
	private const uint kFourCC_JSON = 1313821514u;

	[Token(Token = "0x4000435")]
	private const uint kFourCC_BIN_ = 5130562u;

	[Token(Token = "0x4000436")]
	private const uint kFourCC_b3dm = 1835283298u;

	[Token(Token = "0x4000437")]
	public const string kTiltBrushMaterialExtensionName = "GOOGLE_tilt_brush_material";

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StreamWriter jsonWriter;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BinaryWriter binWriter;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_outputFileName;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string binFileName;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int indent;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool binary;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool b3dm;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int m_gltfVersion;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly GlTF_BufferView m_scalarUshortElementArrayBv;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly GlTF_BufferView m_stride4Bv;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly GlTF_BufferView m_stride8Bv;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public readonly GlTF_BufferView m_stride12Bv;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly GlTF_BufferView m_stride16Bv;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public readonly List<GlTF_BufferView> bufferViews;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly List<GlTF_Camera> cameras;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public readonly List<GlTF_Mesh> meshes;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public readonly List<GlTF_Accessor> accessors;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public readonly Dictionary<string, GlTF_Node> nodes;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public readonly Dictionary<IExportableMaterial, GlTF_Material> materials;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public readonly Dictionary<string, GlTF_Sampler> samplers;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public readonly Dictionary<string, GlTF_Texture> textures;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public readonly Dictionary<string, GlTF_Image> imagesByFileRefUri;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public readonly Dictionary<string, GlTF_Technique> techniques;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public readonly List<GlTF_Program> programs;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public readonly List<GlTF_Shader> shaders;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public readonly Dictionary<string, object> extras;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public readonly double[] RTCCenter;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<string> m_exportedFiles;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string copyright;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string generator;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private byte[] copyBuffer;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<ExportFileReference> m_exportedFileReferences;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ExportFileReference.DisambiguationContext m_disambiguationContext;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private HashSet<string> m_materialPresentationNames;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public readonly string temporaryDirectory;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Dictionary<string, GlTF_ReferencedObject> m_nameToObject;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HashSet<GlTF_ReferencedObject> m_emittedRefs;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly bool[] firsts;

	[Token(Token = "0x1700003B")]
	public bool Gltf2
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x15D6644", Offset = "0x15D6644", VA = "0x15D6644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public bool GltfCompatibilityMode
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x15D9374", Offset = "0x15D9374", VA = "0x15D9374")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public bool UseTiltBrushMaterialExtension
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x15DB744", Offset = "0x15DB744", VA = "0x15DB744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public string Copyright
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x15DB754", Offset = "0x15DB754", VA = "0x15DB754")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x15DB7F4", Offset = "0x15DB7F4", VA = "0x15DB7F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public string Generator
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x15DB7FC", Offset = "0x15DB7FC", VA = "0x15DB7FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x15DB84C", Offset = "0x15DB84C", VA = "0x15DB84C")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public string GltfVersion
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x15DB854", Offset = "0x15DB854", VA = "0x15DB854")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public IEnumerable<string> ExportedFiles
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x15DB8CC", Offset = "0x15DB8CC", VA = "0x15DB8CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000042")]
	public GlTF_Globals CNI
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x15D8298", Offset = "0x15D8298", VA = "0x15D8298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x15DB7A4", Offset = "0x15DB7A4", VA = "0x15DB7A4")]
	private static string OrUnknown(string str)
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x15DB8D4", Offset = "0x15DB8D4", VA = "0x15DB8D4")]
	public GlTF_Globals(string temporaryDirectory, int gltfVersion)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x15DBFE8", Offset = "0x15DBFE8", VA = "0x15DBFE8")]
	public void EnableFileStream()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x15DC104", Offset = "0x15DC104", VA = "0x15DC104", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x15D8604", Offset = "0x15D8604", VA = "0x15D8604")]
	public void Indent()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x15D9F04", Offset = "0x15D9F04", VA = "0x15D9F04")]
	public void WriteKeyAndIndentIn(string key, string delimiter)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x15DA0CC", Offset = "0x15DA0CC", VA = "0x15DA0CC")]
	public void NewlineAndIndentOut(string delimiter)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x15DC360", Offset = "0x15DC360", VA = "0x15DC360")]
	public void IndentIn()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x15DC3BC", Offset = "0x15DC3BC", VA = "0x15DC3BC")]
	public GlTF_ReferencedObject Lookup(GlTF_ReferencedObject gltfObject)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x15DC52C", Offset = "0x15DC52C", VA = "0x15DC52C")]
	private int LookupIndex(GlTF_ReferencedObject gltfObject)
	{
		return default(int);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x15DC630", Offset = "0x15DC630", VA = "0x15DC630")]
	public string SerializeReference(GlTF_ReferencedObject gltfObject)
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	public T Lookup<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	public (int, T) LookupIndex<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return default((int, T));
	}

	[Token(Token = "0x6000200")]
	public string SerializeReference<T>(string gltfObjectName) where T : GlTF_ReferencedObject
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x15DC3AC", Offset = "0x15DC3AC", VA = "0x15DC3AC")]
	public void IndentOut()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x15DC6F0", Offset = "0x15DC6F0", VA = "0x15DC6F0")]
	public void CommaStart()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x15D854C", Offset = "0x15D854C", VA = "0x15D854C")]
	public void CommaNL()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x15DC730", Offset = "0x15DC730", VA = "0x15DC730")]
	public void OpenFiles(string filepath)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x15DC314", Offset = "0x15DC314", VA = "0x15DC314")]
	public void CloseFiles()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x15DC9E0", Offset = "0x15DC9E0", VA = "0x15DC9E0")]
	private void WriteTopLevel(Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph, HashSet<GlTF_ReferencedObject> used, string name, IReadOnlyCollection<GlTF_ReferencedObject> collection)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x15DCB24", Offset = "0x15DCB24", VA = "0x15DCB24")]
	private void WriteTopLevelImpl(Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph, string key, IReadOnlyCollection<GlTF_ReferencedObject> objs)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x15DD5A8", Offset = "0x15DD5A8", VA = "0x15DD5A8")]
	private static IEnumerable<string> SetSub(HashSet<GlTF_ReferencedObject> lhs, HashSet<GlTF_ReferencedObject> rhs)
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	public void WriteNamedJArray<T>(string name, IEnumerable<T> col, Action<T> writer)
	{
	}

	[Token(Token = "0x600020A")]
	public void WriteNamedJObject<T>(string name, IEnumerable<T> col, Action<T> writer)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x15DD730", Offset = "0x15DD730", VA = "0x15DD730")]
	public void WriteNamedJObject(string name, IEnumerable<(string, string)> col)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x15DDA5C", Offset = "0x15DDA5C", VA = "0x15DDA5C")]
	public void WriteNamedObject(string name, object value)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x15DDC20", Offset = "0x15DDC20", VA = "0x15DDC20")]
	public void WriteNamedFile(string name, ExportFileReference value)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x15D8690", Offset = "0x15D8690", VA = "0x15D8690")]
	public void WriteNamedString(string name, string value)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x15D83C0", Offset = "0x15D83C0", VA = "0x15D83C0")]
	public void WriteNamedInt(string name, long value)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x15D847C", Offset = "0x15D847C", VA = "0x15D847C")]
	public void WriteNamedBool(string name, bool value)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x15DE428", Offset = "0x15DE428", VA = "0x15DE428")]
	public void WriteNamedFloat(string name, float value)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x15D82C4", Offset = "0x15D82C4", VA = "0x15D82C4")]
	public void WriteNamedReference(string key, GlTF_ReferencedObject gltfObject)
	{
	}

	[Token(Token = "0x6000213")]
	public void WriteNamedReference<T>(string key, string objectName) where T : GlTF_ReferencedObject
	{
	}

	[Token(Token = "0x6000214")]
	private void SanityCheckDictionary<T>(Dictionary<string, T> collection) where T : GlTF_ReferencedObject
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x15DE4EC", Offset = "0x15DE4EC", VA = "0x15DE4EC")]
	private void UpdateNameToObject(IEnumerable<GlTF_ReferencedObject> collection)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x15DEB1C", Offset = "0x15DEB1C", VA = "0x15DEB1C")]
	private static HashSet<GlTF_ReferencedObject> TransitiveClosure(IEnumerable<GlTF_ReferencedObject> roots, Dictionary<GlTF_ReferencedObject, HashSet<GlTF_ReferencedObject>> refGraph)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x15DF088", Offset = "0x15DF088", VA = "0x15DF088")]
	private void AssignIndicesToMarkedObjects(IEnumerable<GlTF_ReferencedObject> collection, HashSet<GlTF_ReferencedObject> marked)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x15DF3C8", Offset = "0x15DF3C8", VA = "0x15DF3C8")]
	public void Write()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x15DDD28", Offset = "0x15DDD28", VA = "0x15DDD28")]
	private void AddExportedFile(ExportFileReference fileReference)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x15E15C0", Offset = "0x15E15C0", VA = "0x15E15C0")]
	private void CopyToAndDispose(GlTF_BufferView source, BinaryWriter destination)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x15E1644", Offset = "0x15E1644", VA = "0x15E1644")]
	private static void CopyTo(Stream source, BinaryWriter destination, long numBytes, byte[] buffer)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x15E1744", Offset = "0x15E1744", VA = "0x15E1744")]
	public GlTF_BufferView GetBufferView(GlTF_Accessor.Type type, GlTF_Accessor.ComponentType c)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x15D9384", Offset = "0x15D9384", VA = "0x15D9384")]
	public GlTF_Accessor CreateAccessor(string n, GlTF_Accessor.Type t, GlTF_Accessor.ComponentType c, bool isNonVertexAttributeAccessor = false, bool normalized = false)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x15E1864", Offset = "0x15E1864", VA = "0x15E1864")]
	public GlTF_Material CreateMaterial(string meshNamespace, IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x15E1A78", Offset = "0x15E1A78", VA = "0x15E1A78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37AD8", Offset = "0xB37AD8")]
	private void <Write>b__100_5(string item)
	{
	}
}
[Token(Token = "0x2000069")]
public sealed class GlTF_Image : GlTF_ReferencedObject
{
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2855C", Offset = "0xB2855C")]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000043")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000231")]
			[Address(RVA = "0x1156750", Offset = "0x1156750", VA = "0x1156750", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000233")]
			[Address(RVA = "0x1156798", Offset = "0x1156798", VA = "0x1156798", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0x11566FC", Offset = "0x11566FC", VA = "0x11566FC")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1156734", Offset = "0x1156734", VA = "0x1156734", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1156738", Offset = "0x1156738", VA = "0x1156738", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1156758", Offset = "0x1156758", VA = "0x1156758", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0x11567A0", Offset = "0x11567A0", VA = "0x11567A0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1156834", Offset = "0x1156834", VA = "0x1156834", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly ExportFileReference uri;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x15E1AFC", Offset = "0x15E1AFC", VA = "0x15E1AFC")]
	public static GlTF_Image LookupOrCreate(GlTF_Globals G, ExportFileReference fileRef, [Optional] string proposedName)
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x15E1CC0", Offset = "0x15E1CC0", VA = "0x15E1CC0")]
	private GlTF_Image(GlTF_Globals globals, string name, ExportFileReference fileRef)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x15E1CFC", Offset = "0x15E1CFC", VA = "0x15E1CFC", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37AE8", Offset = "0xB37AE8")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x15E1D58", Offset = "0x15E1D58", VA = "0x15E1D58", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200006B")]
public abstract class GlTF_Light : GlTF_Writer
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_ColorRGB color;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string type;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x15D892C", Offset = "0x15D892C", VA = "0x15D892C")]
	public GlTF_Light(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000237")]
	protected abstract void WriteLight();
}
[Token(Token = "0x200006C")]
public sealed class GlTF_Material : GlTF_ReferencedObject
{
	[Token(Token = "0x200006D")]
	public abstract class KeyValue
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x6000245")]
		public abstract void Write(GlTF_Globals G);

		[Token(Token = "0x6000246")]
		[Address(RVA = "0x115728C", Offset = "0x115728C", VA = "0x115728C")]
		public void Write(GlTF_Globals G, string writtenKey)
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0x11571C8", Offset = "0x11571C8", VA = "0x11571C8")]
		protected KeyValue()
		{
		}
	}

	[Token(Token = "0x200006E")]
	public class ColorKV : KeyValue
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1156F0C", Offset = "0x1156F0C", VA = "0x1156F0C", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x11571C0", Offset = "0x11571C0", VA = "0x11571C0")]
		public ColorKV()
		{
		}
	}

	[Token(Token = "0x200006F")]
	public class VectorKV : KeyValue
	{
		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector4 vector;

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x1157358", Offset = "0x1157358", VA = "0x1157358", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x115760C", Offset = "0x115760C", VA = "0x115760C")]
		public VectorKV()
		{
		}
	}

	[Token(Token = "0x2000070")]
	public class FloatKV : KeyValue
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x600024C")]
		[Address(RVA = "0x11571D0", Offset = "0x11571D0", VA = "0x11571D0", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}

		[Token(Token = "0x600024D")]
		[Address(RVA = "0x1157284", Offset = "0x1157284", VA = "0x1157284")]
		public FloatKV()
		{
		}
	}

	[Token(Token = "0x2000071")]
	public class TextureKV : KeyValue
	{
		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly GlTF_Texture m_texture;

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x11572FC", Offset = "0x11572FC", VA = "0x11572FC")]
		public TextureKV(string key, GlTF_Texture texture)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x1157334", Offset = "0x1157334", VA = "0x1157334", Slot = "4")]
		public override void Write(GlTF_Globals G)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2856C", Offset = "0xB2856C")]
	private sealed class <>c
	{
		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GlTF_ReferencedObject, bool> <>9__18_0;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValue, string> <>9__19_0;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValue, string> <>9__24_1;

		[Token(Token = "0x6000251")]
		[Address(RVA = "0x1156898", Offset = "0x1156898", VA = "0x1156898")]
		public <>c()
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0x11568A0", Offset = "0x11568A0", VA = "0x11568A0")]
		internal bool <IterReferences>b__18_0(GlTF_ReferencedObject objref)
		{
			return default(bool);
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x11568AC", Offset = "0x11568AC", VA = "0x11568AC")]
		internal string <IterReferencesWithNulls>b__19_0(KeyValue v)
		{
			return null;
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x11568C4", Offset = "0x11568C4", VA = "0x11568C4")]
		internal string <WriteTopLevel>b__24_1(KeyValue v)
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000073")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2857C", Offset = "0xB2857C")]
	private struct <>c__DisplayClass19_0
	{
		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, KeyValue> valuesByName;
	}

	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2858C", Offset = "0xB2858C")]
	private sealed class <IterReferencesWithNulls>d__19 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Material <>4__this;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass19_0 <>8__1;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<KeyValue>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000045")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0x1156E10", Offset = "0x1156E10", VA = "0x1156E10", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x1156E58", Offset = "0x1156E58", VA = "0x1156E58", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x11568DC", Offset = "0x11568DC", VA = "0x11568DC")]
		[DebuggerHidden]
		public <IterReferencesWithNulls>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0x1156914", Offset = "0x1156914", VA = "0x1156914", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1156984", Offset = "0x1156984", VA = "0x1156984", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x1156930", Offset = "0x1156930", VA = "0x1156930")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1156E18", Offset = "0x1156E18", VA = "0x1156E18", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x1156E60", Offset = "0x1156E60", VA = "0x1156E60", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x1156F08", Offset = "0x1156F08", VA = "0x1156F08", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400046C")]
	private const string kBaseColorFactor = "BaseColorFactor";

	[Token(Token = "0x400046D")]
	private const string kBaseColorTex = "BaseColorTex";

	[Token(Token = "0x400046E")]
	private const string kMainTex = "MainTex";

	[Token(Token = "0x400046F")]
	private const string kBumpMap = "BumpMap";

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string instanceTechniqueName;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GlTF_ColorOrTexture ambient;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GlTF_ColorOrTexture diffuse;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shininess;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GlTF_ColorOrTexture specular;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<KeyValue> values;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly IExportableMaterial ExportableMaterial;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x15E1DD4", Offset = "0x15E1DD4", VA = "0x15E1DD4")]
	public static string GetNameFromObject(IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x15E19BC", Offset = "0x15E19BC", VA = "0x15E19BC")]
	public GlTF_Material(GlTF_Globals globals, IExportableMaterial exportableMaterial)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x15E1ED8", Offset = "0x15E1ED8", VA = "0x15E1ED8", Slot = "4")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x15E2004", Offset = "0x15E2004", VA = "0x15E2004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37BB8", Offset = "0xB37BB8")]
	private IEnumerable<GlTF_ReferencedObject> IterReferencesWithNulls()
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x15E2070", Offset = "0x15E2070", VA = "0x15E2070")]
	private bool HasDynamicExportableMaterialPbr(Dictionary<string, KeyValue> valuesByName)
	{
		return default(bool);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x15E20DC", Offset = "0x15E20DC", VA = "0x15E20DC")]
	private void WriteDynamicExportableMaterialAsPbr(Dictionary<string, KeyValue> valuesByName)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x15E23F4", Offset = "0x15E23F4", VA = "0x15E23F4")]
	private bool HasBrushDescriptorPbr(Dictionary<string, KeyValue> valuesByName)
	{
		return default(bool);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x15E2498", Offset = "0x15E2498", VA = "0x15E2498")]
	private void WriteBrushDescriptorAsPbr(Dictionary<string, KeyValue> valuesByName)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x15E2910", Offset = "0x15E2910", VA = "0x15E2910", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x15E2FA8", Offset = "0x15E2FA8", VA = "0x15E2FA8")]
	private static string ConvertAlphaMode(ExportableMaterialBlendMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x15E2340", Offset = "0x15E2340", VA = "0x15E2340")]
	private void MaybeWrite(Dictionary<string, KeyValue> values, string key, string writtenKey)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x15E3058", Offset = "0x15E3058", VA = "0x15E3058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37C18", Offset = "0xB37C18")]
	internal static GlTF_Texture <IterReferencesWithNulls>g__GetTextureOrNull|19_1(string name, ref <>c__DisplayClass19_0 P_1)
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x15E312C", Offset = "0x15E312C", VA = "0x15E312C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37C28", Offset = "0xB37C28")]
	private void <WriteTopLevel>b__24_0(KeyValue v)
	{
	}
}
[Token(Token = "0x2000075")]
public class GlTF_MaterialColor : GlTF_ColorOrTexture
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_ColorRGBA color;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x15E3154", Offset = "0x15E3154", VA = "0x15E3154")]
	public GlTF_MaterialColor(GlTF_Globals globals, string n, Color c)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x15E3204", Offset = "0x15E3204", VA = "0x15E3204", Slot = "4")]
	public override void WriteColorOrTexture()
	{
	}
}
[Token(Token = "0x2000076")]
public class GlTF_MaterialTexture : GlTF_ColorOrTexture
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GlTF_Texture texture;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x15E321C", Offset = "0x15E321C", VA = "0x15E321C")]
	public GlTF_MaterialTexture(GlTF_Globals globals, string n, GlTF_Texture t)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x15E3254", Offset = "0x15E3254", VA = "0x15E3254", Slot = "4")]
	public override void WriteColorOrTexture()
	{
	}
}
[Token(Token = "0x2000077")]
public class GlTF_Matrix : GlTF_FloatArray
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly Matrix4x4 unityMatrix;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x15E3424", Offset = "0x15E3424", VA = "0x15E3424")]
	public GlTF_Matrix(GlTF_Globals globals, Matrix4x4 m)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x15E35E0", Offset = "0x15E35E0", VA = "0x15E35E0")]
	public void WriteMatrix()
	{
	}
}
[Token(Token = "0x2000078")]
public sealed class GlTF_Mesh : GlTF_ReferencedObject
{
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2859C", Offset = "0xB2859C")]
	private sealed class <IterReferences>d__4 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Mesh <>4__this;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Primitive>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator<GlTF_ReferencedObject> <>7__wrap2;

		[Token(Token = "0x17000047")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600026E")]
			[Address(RVA = "0x1157B64", Offset = "0x1157B64", VA = "0x1157B64", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000270")]
			[Address(RVA = "0x1157BAC", Offset = "0x1157BAC", VA = "0x1157BAC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1157614", Offset = "0x1157614", VA = "0x1157614")]
		[DebuggerHidden]
		public <IterReferences>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x115764C", Offset = "0x115764C", VA = "0x115764C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0x11577EC", Offset = "0x11577EC", VA = "0x11577EC", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x1157798", Offset = "0x1157798", VA = "0x1157798")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x11576DC", Offset = "0x11576DC", VA = "0x11576DC")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x1157B6C", Offset = "0x1157B6C", VA = "0x1157B6C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x1157BB4", Offset = "0x1157BB4", VA = "0x1157BB4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1157C5C", Offset = "0x1157C5C", VA = "0x1157C5C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GlTF_Primitive> primitives;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x15E35E4", Offset = "0x15E35E4", VA = "0x15E35E4")]
	public GlTF_Mesh(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x15E3670", Offset = "0x15E3670", VA = "0x15E3670")]
	public static string GetNameFromObject(ObjectName o)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x15E36D8", Offset = "0x15E36D8", VA = "0x15E36D8")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x15E3874", Offset = "0x15E3874", VA = "0x15E3874", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37CA8", Offset = "0xB37CA8")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x15E38E0", Offset = "0x15E38E0", VA = "0x15E38E0", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200007A")]
public sealed class GlTF_Node : GlTF_ReferencedObject
{
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285AC", Offset = "0xB285AC")]
	private sealed class <IterReferences>d__14 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Node <>4__this;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Node>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000049")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000280")]
			[Address(RVA = "0x1157F6C", Offset = "0x1157F6C", VA = "0x1157F6C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000282")]
			[Address(RVA = "0x1157FB4", Offset = "0x1157FB4", VA = "0x1157FB4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x1157C60", Offset = "0x1157C60", VA = "0x1157C60")]
		[DebuggerHidden]
		public <IterReferences>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x1157C98", Offset = "0x1157C98", VA = "0x1157C98", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x1157D08", Offset = "0x1157D08", VA = "0x1157D08", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x1157CB4", Offset = "0x1157CB4", VA = "0x1157CB4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x1157F74", Offset = "0x1157F74", VA = "0x1157F74", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x1157FBC", Offset = "0x1157FBC", VA = "0x1157FBC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1158064", Offset = "0x1158064", VA = "0x1158064", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GlTF_Node> m_children;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string cameraName;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string lightNameThatDoesNothing;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GlTF_Mesh m_mesh;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GlTF_Matrix matrix;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GlTF_Rotation rotation;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GlTF_Scale scale;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GlTF_Translation translation;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly GlTF_Node Parent;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x15E3CE0", Offset = "0x15E3CE0", VA = "0x15E3CE0")]
	public static string GetNameFromObject(ObjectName o)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x15E3D48", Offset = "0x15E3D48", VA = "0x15E3D48")]
	public static GlTF_Node Create(GlTF_Globals globals, string desiredName, Matrix4x4 mat, GlTF_Node parent)
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x15E40D0", Offset = "0x15E40D0", VA = "0x15E40D0")]
	public static GlTF_Node GetOrCreate(GlTF_Globals globals, ObjectName o, Matrix4x4 mat, GlTF_Node parent, out bool created)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x15E3E74", Offset = "0x15E3E74", VA = "0x15E3E74")]
	private static GlTF_Node GetOrCreate(GlTF_Globals globals, string name, Matrix4x4 mat, GlTF_Node parent, out bool created)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x15E4138", Offset = "0x15E4138", VA = "0x15E4138")]
	private GlTF_Node(GlTF_Globals globals, string name, Matrix4x4 mat, GlTF_Node parent)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x15E4258", Offset = "0x15E4258", VA = "0x15E4258", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37D78", Offset = "0xB37D78")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x15E42C4", Offset = "0x15E42C4", VA = "0x15E42C4", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x15E48B8", Offset = "0x15E48B8", VA = "0x15E48B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37DD8", Offset = "0xB37DD8")]
	private void <WriteTopLevel>b__15_0(GlTF_Mesh item)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x15E4914", Offset = "0x15E4914", VA = "0x15E4914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37DE8", Offset = "0xB37DE8")]
	private void <WriteTopLevel>b__15_1(GlTF_Node item)
	{
	}
}
[Token(Token = "0x200007C")]
public class GlTF_Perspective : GlTF_Camera
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float aspect_ratio;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yfov;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float zfar;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float znear;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x15E4970", Offset = "0x15E4970", VA = "0x15E4970")]
	public GlTF_Perspective(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x15E49D8", Offset = "0x15E49D8", VA = "0x15E49D8", Slot = "6")]
	public override void WriteCamera()
	{
	}
}
[Token(Token = "0x200007D")]
public class GlTF_PointLight : GlTF_Light
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float constantAttenuation;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float linearAttenuation;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float quadraticAttenuation;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x15E4CEC", Offset = "0x15E4CEC", VA = "0x15E4CEC")]
	public GlTF_PointLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x15E4D5C", Offset = "0x15E4D5C", VA = "0x15E4D5C", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x200007E")]
public sealed class GlTF_Primitive
{
	[Token(Token = "0x200007F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285BC", Offset = "0xB285BC")]
	private sealed class <IterReferences>d__6 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Primitive <>4__this;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GlTF_Globals G;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GlTF_Globals <>3__G;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator<GlTF_ReferencedObject> <>7__wrap1;

		[Token(Token = "0x1700004B")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0x11584E4", Offset = "0x11584E4", VA = "0x11584E4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0x115852C", Offset = "0x115852C", VA = "0x115852C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x1158068", Offset = "0x1158068", VA = "0x1158068")]
		[DebuggerHidden]
		public <IterReferences>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x11580A0", Offset = "0x11580A0", VA = "0x11580A0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x1158178", Offset = "0x1158178", VA = "0x1158178", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x11580BC", Offset = "0x11580BC", VA = "0x11580BC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x11584EC", Offset = "0x11584EC", VA = "0x11584EC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x1158534", Offset = "0x1158534", VA = "0x1158534", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x11585E4", Offset = "0x11585E4", VA = "0x11585E4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004A6")]
	private const int kPrimitiveMode_Triangles = 4;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly GlTF_Attributes attributes;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GlTF_Accessor indices;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string materialName;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x15E4F14", Offset = "0x15E4F14", VA = "0x15E4F14")]
	public GlTF_Primitive(GlTF_Attributes attributes)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x15E37FC", Offset = "0x15E37FC", VA = "0x15E37FC")]
	public void Populate(GeometryPool pool)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x15E4F40", Offset = "0x15E4F40", VA = "0x15E4F40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37E68", Offset = "0xB37E68")]
	public IEnumerable<GlTF_ReferencedObject> IterReferences(GlTF_Globals G)
	{
		return null;
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x15E3B54", Offset = "0x15E3B54", VA = "0x15E3B54")]
	public void WriteAsUnnamedJObject(GlTF_Globals G)
	{
	}
}
[Token(Token = "0x2000080")]
public sealed class GlTF_Program : GlTF_ReferencedObject
{
	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285CC", Offset = "0xB285CC")]
	private sealed class <IterReferences>d__5 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Program <>4__this;

		[Token(Token = "0x1700004D")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x600029E")]
			[Address(RVA = "0x11586E8", Offset = "0x11586E8", VA = "0x11586E8", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A0")]
			[Address(RVA = "0x1158730", Offset = "0x1158730", VA = "0x1158730", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x11585E8", Offset = "0x11585E8", VA = "0x11585E8")]
		[DebuggerHidden]
		public <IterReferences>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x1158620", Offset = "0x1158620", VA = "0x1158620", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x1158624", Offset = "0x1158624", VA = "0x1158624", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x11586F0", Offset = "0x11586F0", VA = "0x11586F0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1158738", Offset = "0x1158738", VA = "0x1158738", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x11587E0", Offset = "0x11587E0", VA = "0x11587E0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> attributes;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string vertexShader;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string fragmentShader;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x15E4FBC", Offset = "0x15E4FBC", VA = "0x15E4FBC")]
	public GlTF_Program(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x15E5060", Offset = "0x15E5060", VA = "0x15E5060")]
	public static string GetNameFromObject(IExportableMaterial iem)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x15E5164", Offset = "0x15E5164", VA = "0x15E5164", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB37F38", Offset = "0xB37F38")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x15E51D0", Offset = "0x15E51D0", VA = "0x15E51D0", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x15E5360", Offset = "0x15E5360", VA = "0x15E5360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37F98", Offset = "0xB37F98")]
	private void <WriteTopLevel>b__6_0(string item)
	{
	}
}
[Token(Token = "0x2000082")]
public abstract class GlTF_ReferencedObject : GlTF_Writer
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B9D8", Offset = "0xB2B9D8")]
	private int? <Index>k__BackingField;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B9E8", Offset = "0xB2B9E8")]
	private string <PresentationNameOverride>k__BackingField;

	[Token(Token = "0x1700004F")]
	public int? Index
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x15E53F0", Offset = "0x15E53F0", VA = "0x15E53F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38018", Offset = "0xB38018")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x15E53F8", Offset = "0x15E53F8", VA = "0x15E53F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38028", Offset = "0xB38028")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public string PresentationNameOverride
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x15E5400", Offset = "0x15E5400", VA = "0x15E5400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38038", Offset = "0xB38038")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x15E5408", Offset = "0x15E5408", VA = "0x15E5408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38048", Offset = "0xB38048")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public string PresentationName
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x15E3024", Offset = "0x15E3024", VA = "0x15E3024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x15D64B4", Offset = "0x15D64B4", VA = "0x15D64B4")]
	public GlTF_ReferencedObject(GlTF_Globals g)
	{
	}

	[Token(Token = "0x60002A9")]
	public abstract IEnumerable<GlTF_ReferencedObject> IterReferences();

	[Token(Token = "0x60002AA")]
	public abstract void WriteTopLevel();

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x15D8204", Offset = "0x15D8204", VA = "0x15D8204")]
	public void BeginGltfObject()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x15D8884", Offset = "0x15D8884", VA = "0x15D8884")]
	public void EndGltfObject()
	{
	}
}
[Token(Token = "0x2000083")]
public class GlTF_Rotation : GlTF_FloatArray4
{
	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x15E5410", Offset = "0x15E5410", VA = "0x15E5410")]
	public GlTF_Rotation(GlTF_Globals globals, Quaternion q)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x15E48B4", Offset = "0x15E48B4", VA = "0x15E48B4")]
	public void WriteRotation()
	{
	}
}
[Token(Token = "0x2000084")]
public sealed class GlTF_Sampler : GlTF_ReferencedObject
{
	[Token(Token = "0x2000085")]
	public enum MagFilter
	{
		[Token(Token = "0x40004BE")]
		NEAREST = 9728,
		[Token(Token = "0x40004BF")]
		LINEAR
	}

	[Token(Token = "0x2000086")]
	public enum MinFilter
	{
		[Token(Token = "0x40004C1")]
		NEAREST = 9728,
		[Token(Token = "0x40004C2")]
		LINEAR = 9729,
		[Token(Token = "0x40004C3")]
		NEAREST_MIPMAP_NEAREST = 9984,
		[Token(Token = "0x40004C4")]
		LINEAR_MIPMAP_NEAREST = 9985,
		[Token(Token = "0x40004C5")]
		NEAREST_MIPMAP_LINEAR = 9986,
		[Token(Token = "0x40004C6")]
		LINEAR_MIPMAP_LINEAR = 9987
	}

	[Token(Token = "0x2000087")]
	public enum Wrap
	{
		[Token(Token = "0x40004C8")]
		CLAMP_TO_EDGE = 33071,
		[Token(Token = "0x40004C9")]
		MIRRORED_REPEAT = 33648,
		[Token(Token = "0x40004CA")]
		REPEAT = 10497
	}

	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285DC", Offset = "0xB285DC")]
	private sealed class <IterReferences>d__8 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000052")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60002B6")]
			[Address(RVA = "0x1158838", Offset = "0x1158838", VA = "0x1158838", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x1158880", Offset = "0x1158880", VA = "0x1158880", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x11587E4", Offset = "0x11587E4", VA = "0x11587E4")]
		[DebuggerHidden]
		public <IterReferences>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x115881C", Offset = "0x115881C", VA = "0x115881C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1158820", Offset = "0x1158820", VA = "0x1158820", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x1158840", Offset = "0x1158840", VA = "0x1158840", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1158888", Offset = "0x1158888", VA = "0x1158888", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x115891C", Offset = "0x115891C", VA = "0x115891C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly MagFilter magFilter;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly MinFilter minFilter;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Wrap wrap;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x15E5504", Offset = "0x15E5504", VA = "0x15E5504")]
	public static GlTF_Sampler LookupOrCreate(GlTF_Globals G, MagFilter magFilter, MinFilter minFilter, Wrap wrap = Wrap.REPEAT)
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x15E5870", Offset = "0x15E5870", VA = "0x15E5870")]
	private GlTF_Sampler(GlTF_Globals globals, string name, MagFilter magFilter, MinFilter minFilter, Wrap wrap)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x15E58C0", Offset = "0x15E58C0", VA = "0x15E58C0", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38058", Offset = "0xB38058")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x15E591C", Offset = "0x15E591C", VA = "0x15E591C", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x2000089")]
public class GlTF_Scale : GlTF_Vector3
{
	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x15E5B58", Offset = "0x15E5B58", VA = "0x15E5B58")]
	public GlTF_Scale(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x15E5BEC", Offset = "0x15E5BEC", VA = "0x15E5BEC")]
	public GlTF_Scale(GlTF_Globals globals, Vector3 v)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x15E4800", Offset = "0x15E4800", VA = "0x15E4800")]
	public void WriteScale()
	{
	}
}
[Token(Token = "0x200008A")]
public sealed class GlTF_Scene : GlTF_ReferencedObject
{
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285EC", Offset = "0xB285EC")]
	private sealed class <IterReferences>d__3 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Scene <>4__this;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GlTF_Node>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000054")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x1158B6C", Offset = "0x1158B6C", VA = "0x1158B6C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x1158BB4", Offset = "0x1158BB4", VA = "0x1158BB4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1158920", Offset = "0x1158920", VA = "0x1158920")]
		[DebuggerHidden]
		public <IterReferences>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1158958", Offset = "0x1158958", VA = "0x1158958", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x11589C8", Offset = "0x11589C8", VA = "0x11589C8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x1158974", Offset = "0x1158974", VA = "0x1158974")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1158B74", Offset = "0x1158B74", VA = "0x1158B74", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1158BBC", Offset = "0x1158BBC", VA = "0x1158BBC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x1158C64", Offset = "0x1158C64", VA = "0x1158C64", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GlTF_Node> m_nodes;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, object> m_extras;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x15E1390", Offset = "0x15E1390", VA = "0x15E1390")]
	public GlTF_Scene(GlTF_Globals globals, string name, IEnumerable<GlTF_Node> nodes, Dictionary<string, object> extras)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x15E5CB0", Offset = "0x15E5CB0", VA = "0x15E5CB0", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38128", Offset = "0xB38128")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x15E5D1C", Offset = "0x15E5D1C", VA = "0x15E5D1C", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x15E5ECC", Offset = "0x15E5ECC", VA = "0x15E5ECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38188", Offset = "0xB38188")]
	private void <WriteTopLevel>b__4_0(GlTF_Node item)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x15E5F28", Offset = "0x15E5F28", VA = "0x15E5F28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38198", Offset = "0xB38198")]
	private void <WriteTopLevel>b__4_1(KeyValuePair<string, object> kvp)
	{
	}
}
[Token(Token = "0x200008C")]
public sealed class GlTF_Shader : GlTF_ReferencedObject
{
	[Token(Token = "0x200008D")]
	public enum Type
	{
		[Token(Token = "0x40004D8")]
		Vertex,
		[Token(Token = "0x40004D9")]
		Fragment
	}

	[Token(Token = "0x200008E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB285FC", Offset = "0xB285FC")]
	private sealed class <IterReferences>d__5 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x17000056")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x1158CBC", Offset = "0x1158CBC", VA = "0x1158CBC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D6")]
			[Address(RVA = "0x1158D04", Offset = "0x1158D04", VA = "0x1158D04", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1158C68", Offset = "0x1158C68", VA = "0x1158C68")]
		[DebuggerHidden]
		public <IterReferences>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1158CA0", Offset = "0x1158CA0", VA = "0x1158CA0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1158CA4", Offset = "0x1158CA4", VA = "0x1158CA4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x1158CC4", Offset = "0x1158CC4", VA = "0x1158CC4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x1158D0C", Offset = "0x1158D0C", VA = "0x1158D0C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x1158DA0", Offset = "0x1158DA0", VA = "0x1158DA0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Type type;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExportFileReference uri;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF981C4", Offset = "0xF981C4", VA = "0xF981C4")]
	public static string GetNameFromObject(IExportableMaterial iem, Type type)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF9830C", Offset = "0xF9830C", VA = "0xF9830C")]
	public GlTF_Shader(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF98314", Offset = "0xF98314", VA = "0xF98314", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38218", Offset = "0xB38218")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xF98370", Offset = "0xF98370", VA = "0xF98370", Slot = "5")]
	public override void WriteTopLevel()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xF98448", Offset = "0xF98448", VA = "0xF98448")]
	private int TypeStr()
	{
		return default(int);
	}
}
[Token(Token = "0x200008F")]
public class GlTF_SpotLight : GlTF_Light
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float constantAttenuation;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fallOffAngle;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fallOffExponent;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float linearAttenuation;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float quadraticAttenuation;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF98468", Offset = "0xF98468", VA = "0xF98468")]
	public GlTF_SpotLight(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF984DC", Offset = "0xF984DC", VA = "0xF984DC", Slot = "4")]
	protected override void WriteLight()
	{
	}
}
[Token(Token = "0x2000090")]
public sealed class GlTF_Target : GlTF_Writer
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string id;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string path;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF987A8", Offset = "0xF987A8", VA = "0xF987A8")]
	public GlTF_Target(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xF98800", Offset = "0xF98800", VA = "0xF98800")]
	public void Write()
	{
	}
}
[Token(Token = "0x2000091")]
public sealed class GlTF_Technique : GlTF_ReferencedObject
{
	[Token(Token = "0x2000092")]
	public enum Type
	{
		[Token(Token = "0x40004EA")]
		FLOAT = 5126,
		[Token(Token = "0x40004EB")]
		FLOAT_VEC2 = 35664,
		[Token(Token = "0x40004EC")]
		FLOAT_VEC3 = 35665,
		[Token(Token = "0x40004ED")]
		FLOAT_VEC4 = 35666,
		[Token(Token = "0x40004EE")]
		FLOAT_MAT3 = 35675,
		[Token(Token = "0x40004EF")]
		FLOAT_MAT4 = 35676,
		[Token(Token = "0x40004F0")]
		SAMPLER_2D = 35678
	}

	[Token(Token = "0x2000093")]
	public enum Enable
	{
		[Token(Token = "0x40004F2")]
		BLEND = 3042,
		[Token(Token = "0x40004F3")]
		CULL_FACE = 2884,
		[Token(Token = "0x40004F4")]
		DEPTH_TEST = 2929,
		[Token(Token = "0x40004F5")]
		POLYGON_OFFSET_FILL = 32823,
		[Token(Token = "0x40004F6")]
		SAMPLE_ALPHA_TO_COVERAGE = 32926,
		[Token(Token = "0x40004F7")]
		SCISSOR_TEST = 3089
	}

	[Serializable]
	[Token(Token = "0x2000094")]
	public enum Semantic
	{
		[Token(Token = "0x40004F9")]
		UNKNOWN,
		[Token(Token = "0x40004FA")]
		POSITION,
		[Token(Token = "0x40004FB")]
		NORMAL,
		[Token(Token = "0x40004FC")]
		TANGENT,
		[Token(Token = "0x40004FD")]
		COLOR,
		[Token(Token = "0x40004FE")]
		TEXCOORD_0,
		[Token(Token = "0x40004FF")]
		TEXCOORD_1,
		[Token(Token = "0x4000500")]
		TEXCOORD_2,
		[Token(Token = "0x4000501")]
		TEXCOORD_3,
		[Token(Token = "0x4000502")]
		MODELVIEW,
		[Token(Token = "0x4000503")]
		PROJECTION,
		[Token(Token = "0x4000504")]
		MODELVIEWINVERSETRANSPOSE,
		[Token(Token = "0x4000505")]
		CESIUM_RTC_MODELVIEW
	}

	[Token(Token = "0x2000095")]
	public class Parameter
	{
		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Semantic semantic;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GlTF_Node node;

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x115916C", Offset = "0x115916C", VA = "0x115916C")]
		public Parameter()
		{
		}
	}

	[Token(Token = "0x2000096")]
	public class Attribute
	{
		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string param;

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x1159164", Offset = "0x1159164", VA = "0x1159164")]
		public Attribute()
		{
		}
	}

	[Token(Token = "0x2000097")]
	public class Uniform
	{
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string param;

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x11591EC", Offset = "0x11591EC", VA = "0x11591EC")]
		public Uniform()
		{
		}
	}

	[Token(Token = "0x2000098")]
	public class States
	{
		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Enable> enable;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, Value> functions;

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x1159174", Offset = "0x1159174", VA = "0x1159174")]
		public States()
		{
		}
	}

	[Token(Token = "0x2000099")]
	public sealed class Value : GlTF_Writer
	{
		[Token(Token = "0x200009A")]
		public enum Type
		{
			[Token(Token = "0x400051A")]
			Unknown,
			[Token(Token = "0x400051B")]
			Bool,
			[Token(Token = "0x400051C")]
			Int,
			[Token(Token = "0x400051D")]
			Float,
			[Token(Token = "0x400051E")]
			Color,
			[Token(Token = "0x400051F")]
			Vector2,
			[Token(Token = "0x4000520")]
			Vector4,
			[Token(Token = "0x4000521")]
			IntArr,
			[Token(Token = "0x4000522")]
			BoolArr
		}

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool boolValue;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int intValue;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float floatValue;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color colorValue;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 vector2Value;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector4 vector4Value;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] intArrValue;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool[] boolArrvalue;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Type type;

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x11591F4", Offset = "0x11591F4", VA = "0x11591F4")]
		public Value(GlTF_Globals globals, bool value)
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x115922C", Offset = "0x115922C", VA = "0x115922C")]
		public Value(GlTF_Globals globals, int value)
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x1159260", Offset = "0x1159260", VA = "0x1159260")]
		public Value(GlTF_Globals globals, float value)
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x115929C", Offset = "0x115929C", VA = "0x115929C")]
		public Value(GlTF_Globals globals, Color value)
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x11592F0", Offset = "0x11592F0", VA = "0x11592F0")]
		public Value(GlTF_Globals globals, Vector2 value)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x1159330", Offset = "0x1159330", VA = "0x1159330")]
		public Value(GlTF_Globals globals, Vector4 value)
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x1159384", Offset = "0x1159384", VA = "0x1159384")]
		public Value(GlTF_Globals globals, int[] value)
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x11593B8", Offset = "0x11593B8", VA = "0x11593B8")]
		public Value(GlTF_Globals globals, bool[] value)
		{
		}

		[Token(Token = "0x60002EE")]
		private void WriteArr<T>(T arr) where T : ArrayList
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x11593EC", Offset = "0x11593EC", VA = "0x11593EC")]
		public void Write()
		{
		}
	}

	[Token(Token = "0x200009B")]
	[Attribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2860C", Offset = "0xB2860C")]
	private sealed class <IterReferences>d__16 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Technique <>4__this;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Parameter>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000058")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0x1159068", Offset = "0x1159068", VA = "0x1159068", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F6")]
			[Address(RVA = "0x11590B0", Offset = "0x11590B0", VA = "0x11590B0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x1158DA4", Offset = "0x1158DA4", VA = "0x1158DA4")]
		[DebuggerHidden]
		public <IterReferences>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x1158DDC", Offset = "0x1158DDC", VA = "0x1158DDC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1158E4C", Offset = "0x1158E4C", VA = "0x1158E4C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1158DF8", Offset = "0x1158DF8", VA = "0x1158DF8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1159070", Offset = "0x1159070", VA = "0x1159070", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x11590B8", Offset = "0x11590B8", VA = "0x11590B8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1159160", Offset = "0x1159160", VA = "0x1159160", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string program;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Attribute> attributes;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Parameter> parameters;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Uniform> uniforms;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public States states;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xF98A00", Offset = "0xF98A00", VA = "0xF98A00")]
	public static string GetNameFromObject(IExportableMaterial iem)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xF98B04", Offset = "0xF98B04", VA = "0xF98B04")]
	public GlTF_Technique(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xF98C38", Offset = "0xF98C38", VA = "0xF98C38")]
	public void AddDefaultUniforms(bool rtc)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF98ECC", Offset = "0xF98ECC", VA = "0xF98ECC", Slot = "4")]
	[Attribute(Name = "IteratorStateMachineAttribute", RVA = "0xB382E8", Offset = "0xB382E8")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF98F38", Offset = "0xF98F38", VA = "0xF98F38", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200009C")]
public sealed class GlTF_Texture : GlTF_ReferencedObject
{
	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2861C", Offset = "0xB2861C")]
	private sealed class <IterReferences>d__8 : IEnumerable<GlTF_ReferencedObject>, IEnumerable, IEnumerator<GlTF_ReferencedObject>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GlTF_ReferencedObject <>2__current;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GlTF_Texture <>4__this;

		[Token(Token = "0x1700005A")]
		private GlTF_ReferencedObject System.Collections.Generic.IEnumerator<GlTF_ReferencedObject>.Current
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x1159B88", Offset = "0x1159B88", VA = "0x1159B88", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x1159BD0", Offset = "0x1159BD0", VA = "0x1159BD0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x1159AAC", Offset = "0x1159AAC", VA = "0x1159AAC")]
		[DebuggerHidden]
		public <IterReferences>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1159AE4", Offset = "0x1159AE4", VA = "0x1159AE4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1159AE8", Offset = "0x1159AE8", VA = "0x1159AE8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1159B90", Offset = "0x1159B90", VA = "0x1159B90", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1159BD8", Offset = "0x1159BD8", VA = "0x1159BD8", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GlTF_ReferencedObject> System.Collections.Generic.IEnumerable<GlTF_ReferencedObject>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1159C80", Offset = "0x1159C80", VA = "0x1159C80", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int format;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int internalFormat;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly GlTF_Sampler sampler;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly GlTF_Image source;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int target;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int tType;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xF99BB0", Offset = "0xF99BB0", VA = "0xF99BB0")]
	public static GlTF_Texture LookupOrCreate(GlTF_Globals G, GlTF_Image img, GlTF_Sampler sampler, [Optional] string proposedName)
	{
		return null;
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xF99D34", Offset = "0xF99D34", VA = "0xF99D34")]
	private GlTF_Texture(GlTF_Globals globals, string name, GlTF_Image source, GlTF_Sampler sampler)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xF99D8C", Offset = "0xF99D8C", VA = "0xF99D8C", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB383B8", Offset = "0xB383B8")]
	public override IEnumerable<GlTF_ReferencedObject> IterReferences()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xF99DF8", Offset = "0xF99DF8", VA = "0xF99DF8", Slot = "5")]
	public override void WriteTopLevel()
	{
	}
}
[Token(Token = "0x200009E")]
public class GlTF_Translation : GlTF_Vector3
{
	[Token(Token = "0x6000305")]
	[Address(RVA = "0xF99FB8", Offset = "0xF99FB8", VA = "0xF99FB8")]
	public GlTF_Translation(GlTF_Globals globals, Vector3 v)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xF9A0F0", Offset = "0xF9A0F0", VA = "0xF9A0F0")]
	public void WriteTranslation()
	{
	}
}
[Token(Token = "0x200009F")]
public class GlTF_Vector3 : GlTF_FloatArray
{
	[Token(Token = "0x6000307")]
	[Address(RVA = "0xF9A078", Offset = "0xF9A078", VA = "0xF9A078")]
	public GlTF_Vector3(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xF9A1AC", Offset = "0xF9A1AC", VA = "0xF9A1AC")]
	public GlTF_Vector3(GlTF_Globals globals, Vector3 v)
	{
	}
}
[Token(Token = "0x20000A0")]
public class GlTF_Writer
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GlTF_Globals m_globals;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x1700005C")]
	public GlTF_Globals G
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xF9AAD0", Offset = "0xF9AAD0", VA = "0xF9AAD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public StreamWriter jsonWriter
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xF9878C", Offset = "0xF9878C", VA = "0xF9878C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xF9A9AC", Offset = "0xF9A9AC", VA = "0xF9A9AC")]
	public static GlTF_Technique GetTechnique(GlTF_Globals G, IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xF9AA1C", Offset = "0xF9AA1C", VA = "0xF9AA1C")]
	public static GlTF_Technique CreateTechnique(GlTF_Globals G, IExportableMaterial exportableMaterial)
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xF987D4", Offset = "0xF987D4", VA = "0xF987D4")]
	public GlTF_Writer(GlTF_Globals globals)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xF98770", Offset = "0xF98770", VA = "0xF98770")]
	public void Indent()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xF989C8", Offset = "0xF989C8", VA = "0xF989C8")]
	public void IndentIn()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xF989E4", Offset = "0xF989E4", VA = "0xF989E4")]
	public void IndentOut()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xF99B94", Offset = "0xF99B94", VA = "0xF99B94")]
	public void CommaNL()
	{
	}
}
[Token(Token = "0x20000A1")]
public class GltfTextureScale
{
	[Token(Token = "0x20000A2")]
	public class ThreadData
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x115D95C", Offset = "0x115D95C", VA = "0x115D95C")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Mutex mutex;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xFA1B30", Offset = "0xFA1B30", VA = "0xFA1B30")]
	public static void Point(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xFA1F48", Offset = "0xFA1F48", VA = "0xFA1F48")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xFA1B38", Offset = "0xFA1B38", VA = "0xFA1B38")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xFA1F50", Offset = "0xFA1F50", VA = "0xFA1F50")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xFA225C", Offset = "0xFA225C", VA = "0xFA225C")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xFA2424", Offset = "0xFA2424", VA = "0xFA2424")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xFA2488", Offset = "0xFA2488", VA = "0xFA2488")]
	public GltfTextureScale()
	{
	}
}
[Token(Token = "0x20000A3")]
public sealed class GlTF_ScriptableExporter : IDisposable
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<IExportableMaterial, GlTF_Technique.States> m_techniqueStates;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GlTF_Globals m_globals;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_outPath;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GeometryPool, GlTF_Mesh> m_meshCache;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B9F8", Offset = "0xB2B9F8")]
	private HashSet<string> <ExportedFiles>k__BackingField;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CultureInfo m_previousCulture;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BA08", Offset = "0xB2BA08")]
	private int <NumTris>k__BackingField;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BA18", Offset = "0xB2BA18")]
	private bool <AllowHttpUri>k__BackingField;

	[Token(Token = "0x1700005E")]
	public HashSet<string> ExportedFiles
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x15E63C8", Offset = "0x15E63C8", VA = "0x15E63C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38488", Offset = "0xB38488")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x15E63D0", Offset = "0x15E63D0", VA = "0x15E63D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38498", Offset = "0xB38498")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int NumTris
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x15E63D8", Offset = "0x15E63D8", VA = "0x15E63D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB384A8", Offset = "0xB384A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x15E63E0", Offset = "0x15E63E0", VA = "0x15E63E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB384B8", Offset = "0xB384B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public GlTF_Globals G
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x15E63E8", Offset = "0x15E63E8", VA = "0x15E63E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public bool AllowHttpUri
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x15E63F0", Offset = "0x15E63F0", VA = "0x15E63F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB384C8", Offset = "0xB384C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x15E63F8", Offset = "0x15E63F8", VA = "0x15E63F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB384D8", Offset = "0xB384D8")]
		set
		{
		}
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x15E5F94", Offset = "0x15E5F94", VA = "0x15E5F94")]
	private static Renderer GetRenderer(Transform tr)
	{
		return null;
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x15E6060", Offset = "0x15E6060", VA = "0x15E6060")]
	private static Mesh GetMesh(Transform tr)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x15E6298", Offset = "0x15E6298", VA = "0x15E6298")]
	private static void AddAttribute(string name, GlTF_Technique.Type type, GlTF_Technique.Semantic semantic, GlTF_Technique tech)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x15E6404", Offset = "0x15E6404", VA = "0x15E6404")]
	public GlTF_ScriptableExporter(string temporaryDirectory, int gltfVersion)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x15E6590", Offset = "0x15E6590", VA = "0x15E6590", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x15E65E4", Offset = "0x15E65E4", VA = "0x15E65E4")]
	public void BeginExport(string outPath)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x15E667C", Offset = "0x15E667C", VA = "0x15E667C")]
	public void SetMetadata(string generator, string copyright)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x15E66A8", Offset = "0x15E66A8", VA = "0x15E66A8")]
	public string[] EndExport()
	{
		return null;
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x15E6B38", Offset = "0x15E6B38", VA = "0x15E6B38")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, float value)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x15E6DA0", Offset = "0x15E6DA0", VA = "0x15E6DA0")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, Color value)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x15E6EC0", Offset = "0x15E6EC0", VA = "0x15E6EC0")]
	public void ExportShaderUniform(IExportableMaterial exportableMaterial, string name, Vector4 value)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x15E6FE0", Offset = "0x15E6FE0", VA = "0x15E6FE0")]
	public void ExportAmbientLight(IExportableMaterial exportableMaterial, Color color)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x15E710C", Offset = "0x15E710C", VA = "0x15E710C")]
	public void ExportLight(ExportUtils.LightPayload payload, IExportableMaterial exportableMaterial)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x15E731C", Offset = "0x15E731C", VA = "0x15E731C")]
	public GlTF_Node ExportMeshPayload(ExportUtils.SceneStatePayload payload, ExportUtils.BaseMeshPayload meshPayload, [CanBeNull] GlTF_Node parent, [Optional] Matrix4x4? localXf)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x15E7454", Offset = "0x15E7454", VA = "0x15E7454")]
	private GlTF_Node ExportMeshPayload_NoMaterial(ExportUtils.BaseMeshPayload mesh, [CanBeNull] GlTF_Node parent, [Optional] Matrix4x4? localXf)
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x15E7754", Offset = "0x15E7754", VA = "0x15E7754")]
	private void ExportMaterial(ExportUtils.SceneStatePayload payload, string meshNamespace, IExportableMaterial exportableMaterial, GlTF_Attributes hack)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x15E8EAC", Offset = "0x15E8EAC", VA = "0x15E8EAC")]
	private ExportFileReference CreateExportFileReferenceFromHttp(string httpUri)
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x15E926C", Offset = "0x15E926C", VA = "0x15E926C")]
	private static string HostedUriToLocalFilename(string httpUri)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x15E8D6C", Offset = "0x15E8D6C", VA = "0x15E8D6C")]
	private void AddLights(IExportableMaterial exportableMaterial, ExportUtils.SceneStatePayload payload)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x15E8850", Offset = "0x15E8850", VA = "0x15E8850")]
	public void AddMaterialWithDependencies(IExportableMaterial exportableMaterial, string meshNamespace, GlTF_Attributes hack)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x15E903C", Offset = "0x15E903C", VA = "0x15E903C")]
	public void AddTextureToMaterial(IExportableMaterial exportableMaterial, string texParam, ExportFileReference fileRef)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x15E6C40", Offset = "0x15E6C40", VA = "0x15E6C40")]
	private void AddUniform(IExportableMaterial exportableMaterial, string name, GlTF_Technique.Type type, GlTF_Technique.Semantic semantic, [Optional] GlTF_Node node)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x15E9338", Offset = "0x15E9338", VA = "0x15E9338")]
	private void AddAllAttributes(GlTF_Technique tech, IExportableMaterial exportableMaterial, GlTF_Attributes mesh)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x15E868C", Offset = "0x15E868C", VA = "0x15E868C")]
	private void AddMeshDependencies(ObjectName meshName, IExportableMaterial exportableMaterial, GlTF_Mesh gltfMesh, GlTF_VertexLayout gltfLayout)
	{
	}
}
[Token(Token = "0x20000A4")]
public struct GlTF_VertexLayout : IEquatable<GlTF_VertexLayout>
{
	[Token(Token = "0x20000A5")]
	public struct AttributeInfo : IEquatable<AttributeInfo>
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly GlTF_Technique.Type techniqueType;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly GlTF_Accessor.Type accessorType;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly GlTF_Accessor.ComponentType accessorComponentType;

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x1159C84", Offset = "0x1159C84", VA = "0x1159C84")]
		public AttributeInfo(GlTF_Accessor.Type accessorType, GlTF_Accessor.ComponentType accessorComponentType)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x1159CF8", Offset = "0x1159CF8", VA = "0x1159CF8", Slot = "4")]
		public bool Equals(AttributeInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1159D2C", Offset = "0x1159D2C", VA = "0x1159D2C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1159DD0", Offset = "0x1159DD0", VA = "0x1159DD0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1159DF0", Offset = "0x1159DF0", VA = "0x1159DF0")]
		public static bool operator ==(AttributeInfo left, AttributeInfo right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1159E20", Offset = "0x1159E20", VA = "0x1159E20")]
		public static bool operator !=(AttributeInfo left, AttributeInfo right)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly GeometryPool.VertexLayout m_tbLayout;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int m_texcoord0Size;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int m_texcoord1Size;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int m_texcoord2Size;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int m_texcoord3Size;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public readonly AttributeInfo PositionInfo;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly AttributeInfo? NormalInfo;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly AttributeInfo? ColorInfo;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public readonly AttributeInfo? TangentInfo;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool PackVertexIdIntoTexcoord1W;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF9A278", Offset = "0xF9A278", VA = "0xF9A278")]
	public GlTF_VertexLayout(GlTF_Globals G, GeometryPool.VertexLayout tbLayout)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF9A4EC", Offset = "0xF9A4EC", VA = "0xF9A4EC")]
	public int GetTexcoordSize(int texcoord)
	{
		return default(int);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF9A584", Offset = "0xF9A584", VA = "0xF9A584")]
	public AttributeInfo? GetTexcoordInfo(int texcoord)
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xF9A634", Offset = "0xF9A634", VA = "0xF9A634", Slot = "4")]
	public bool Equals(GlTF_VertexLayout other)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xF9A760", Offset = "0xF9A760", VA = "0xF9A760", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF9A7FC", Offset = "0xF9A7FC", VA = "0xF9A7FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xF9A928", Offset = "0xF9A928", VA = "0xF9A928")]
	public static bool operator ==(GlTF_VertexLayout left, GlTF_VertexLayout right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xF9A968", Offset = "0xF9A968", VA = "0xF9A968")]
	public static bool operator !=(GlTF_VertexLayout left, GlTF_VertexLayout right)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A6")]
public class ObjectName
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string m_name;

	[Token(Token = "0x17000062")]
	public string Name
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xFCF23C", Offset = "0xFCF23C", VA = "0xFCF23C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xFCF244", Offset = "0xFCF244", VA = "0xFCF244")]
		set
		{
		}
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xFCF210", Offset = "0xFCF210", VA = "0xFCF210")]
	public ObjectName(string name)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xFCF24C", Offset = "0xFCF24C", VA = "0xFCF24C")]
	public string ToGltf1Name()
	{
		return null;
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB2862C", Offset = "0xB2862C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB2862C", Offset = "0xB2862C")]
[ExecuteInEditMode]
public class SENaturalBloomAndDirtyLens : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum DepthBlendFunction
	{
		[Token(Token = "0x4000566")]
		Exponential,
		[Token(Token = "0x4000567")]
		ExponentialSquared
	}

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSupported;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float blurSize;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera cam;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BA28", Offset = "0xB2BA28")]
	public float bloomIntensity;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BA44", Offset = "0xB2BA44")]
	public float bloomScatterFactor;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BA5C", Offset = "0xB2BA5C")]
	public float lensDirtScatterFactor;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BA74", Offset = "0xB2BA74")]
	public float lensDirtIntensity;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D lensDirtTexture;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool inputIsHDR;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool lowQuality;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool depthBlending;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public DepthBlendFunction depthBlendFunction;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BA90", Offset = "0xB2BA90")]
	public float depthBlendFactor;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BAA8", Offset = "0xB2BAA8")]
	public float maxDepthBlendFactor;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2BAC0", Offset = "0xB2BAC0")]
	public float depthScatterFactor;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xFB9164", Offset = "0xFB9164", VA = "0xFB9164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xFB9268", Offset = "0xFB9268", VA = "0xFB9268")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xFB9314", Offset = "0xFB9314", VA = "0xFB9314")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xFB9A54", Offset = "0xFB9A54", VA = "0xFB9A54")]
	public SENaturalBloomAndDirtyLens()
	{
	}
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
public class TiltShift : MonoBehaviour
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1172A3C", Offset = "0x1172A3C", VA = "0x1172A3C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1172B64", Offset = "0x1172B64", VA = "0x1172B64")]
	public TiltShift()
	{
	}
}
[Token(Token = "0x20000AA")]
public class AlcoveButtonController : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider m_BoxCollider;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoxCollider m_MeshCollider;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_AlcoveBoxColliderHeight;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_AlcoveMeshColliderHeight;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xFE13AC", Offset = "0xFE13AC", VA = "0xFE13AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xFE1478", Offset = "0xFE1478", VA = "0xFE1478")]
	public void ClickAlcoveButton()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xFE14C8", Offset = "0xFE14C8", VA = "0xFE14C8")]
	public AlcoveButtonController()
	{
	}
}
[Token(Token = "0x20000AB")]
public class BrushNumbersToggleButton : MonoBehaviour
{
	[Token(Token = "0x17000063")]
	public bool BrushNumbersEnabled
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x127F8D0", Offset = "0x127F8D0", VA = "0x127F8D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x127F934", Offset = "0x127F934", VA = "0x127F934")]
		set
		{
		}
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x127F9D4", Offset = "0x127F9D4", VA = "0x127F9D4")]
	public BrushNumbersToggleButton()
	{
	}
}
[Token(Token = "0x20000AC")]
public class ButtonLayoutHelper : MonoBehaviour
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BAD8", Offset = "0xB2BAD8")]
	public float m_VerticalSpacing;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_ZPosition;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_HorizontalSpacing;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_HorizontalStart;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_VerticalStart;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_ButtonsPerRow;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_LocalScale;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BB10", Offset = "0xB2BB10")]
	public bool m_UsePaging;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_ButtonsPerPage;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text m_PageNumText;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_NextButton;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_PrevButton;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_ButtonContainerPrefab;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BB48", Offset = "0xB2BB48")]
	public GameObject m_ButtonPrefab;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int m_NumButtonsToSpawn;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly List<GameObject> _PageObjects;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _CurrentPage;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _LastNumPages;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BB80", Offset = "0xB2BB80")]
	public GameObject m_Container;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x12825F8", Offset = "0x12825F8", VA = "0x12825F8")]
	public void AddButtons(List<GameObject> btnList)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1282B84", Offset = "0x1282B84", VA = "0x1282B84")]
	public void ClearButtons()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1282E88", Offset = "0x1282E88", VA = "0x1282E88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB384E8", Offset = "0xB384E8")]
	public void ClickNextPage()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1282E98", Offset = "0x1282E98", VA = "0x1282E98")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38520", Offset = "0xB38520")]
	public void ClickPrevPage()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x12829A0", Offset = "0x12829A0", VA = "0x12829A0")]
	private void SetPage(int pageIndex)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1282EA8", Offset = "0x1282EA8", VA = "0x1282EA8")]
	private void SetPageNumberText()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1283244", Offset = "0x1283244", VA = "0x1283244")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38558", Offset = "0xB38558")]
	public void SpawnTestButtons()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1283390", Offset = "0x1283390", VA = "0x1283390")]
	public ButtonLayoutHelper()
	{
	}
}
[Token(Token = "0x20000AD")]
public class CameraFilterButton : ActionButton
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TMP_Text m_FilterNameText;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string m_RawFilterName;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int m_FilterIndex;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x12856E0", Offset = "0x12856E0", VA = "0x12856E0", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1285760", Offset = "0x1285760", VA = "0x1285760", Slot = "12")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x12857E0", Offset = "0x12857E0", VA = "0x12857E0")]
	public void SetupForFilterName(string filterName, int index)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x12858B4", Offset = "0x12858B4", VA = "0x12858B4")]
	public void OnClickFilterButton()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1285944", Offset = "0x1285944", VA = "0x1285944", Slot = "24")]
	public override void UpdateVisuals()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1285A5C", Offset = "0x1285A5C", VA = "0x1285A5C")]
	public CameraFilterButton()
	{
	}
}
[Token(Token = "0x20000AE")]
public class CameraFiltersController : MonoBehaviour
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CameraFiltersController m_Instance;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] m_FilterNames;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_UiCameraDuringFilterEffects;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_KuwaharaCamera;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Component m_CurrentFilter;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MobileBloom m_Bloom;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isFilterActive;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask m_UiLayers;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_CurrentFilterIndex;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_TestComponentIndex;

	[Token(Token = "0x14000002")]
	public static event Action OnFilterChanged
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x159F688", Offset = "0x159F688", VA = "0x159F688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38590", Offset = "0xB38590")]
		add
		{
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x159F748", Offset = "0x159F748", VA = "0x159F748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB385A0", Offset = "0xB385A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x159F808", Offset = "0x159F808", VA = "0x159F808")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x159F9CC", Offset = "0x159F9CC", VA = "0x159F9CC")]
	private void OnPassthroughChanged(bool passthroughEnabled)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x159F9E0", Offset = "0x159F9E0", VA = "0x159F9E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB385B0", Offset = "0xB385B0")]
	public void RemoveFilter()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x159FAFC", Offset = "0x159FAFC", VA = "0x159FAFC")]
	public void SetFilterFromName(string filterName, int index)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x159FE50", Offset = "0x159FE50", VA = "0x159FE50")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB385E8", Offset = "0xB385E8")]
	public void AddComponentTest()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x159FFDC", Offset = "0x159FFDC", VA = "0x159FFDC")]
	public static string SplitCamelCase(string str)
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x15A0094", Offset = "0x15A0094", VA = "0x15A0094")]
	public CameraFiltersController()
	{
	}
}
[Token(Token = "0x20000AF")]
public class CameraFiltersPanel : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_FilterButtonPrefab;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonLayoutHelper m_LayoutHelper;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x15A009C", Offset = "0x15A009C", VA = "0x15A009C")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x15A00A0", Offset = "0x15A00A0", VA = "0x15A00A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38620", Offset = "0xB38620")]
	public void Init()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x15A02E8", Offset = "0x15A02E8", VA = "0x15A02E8")]
	public CameraFiltersPanel()
	{
	}
}
[Token(Token = "0x20000B0")]
public class DisableBySDKMode : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SdkMode> m_DisabledModes;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_Disabled;

	[Token(Token = "0x17000064")]
	public bool IsEnabled
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xEC7A88", Offset = "0xEC7A88", VA = "0xEC7A88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xEC7A98", Offset = "0xEC7A98", VA = "0xEC7A98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xEC7B24", Offset = "0xEC7B24", VA = "0xEC7B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xEC7B5C", Offset = "0xEC7B5C", VA = "0xEC7B5C")]
	public DisableBySDKMode()
	{
	}
}
[Token(Token = "0x20000B1")]
public class DisableDescription : MonoBehaviour
{
	[Token(Token = "0x6000375")]
	[Address(RVA = "0xEC7B64", Offset = "0xEC7B64", VA = "0xEC7B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xEC7BC4", Offset = "0xEC7BC4", VA = "0xEC7BC4")]
	public DisableDescription()
	{
	}
}
[Token(Token = "0x20000B2")]
public class DisableOnTablet : MonoBehaviour
{
	[Token(Token = "0x6000377")]
	[Address(RVA = "0xEC7C64", Offset = "0xEC7C64", VA = "0xEC7C64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xEC7CE8", Offset = "0xEC7CE8", VA = "0xEC7CE8")]
	public DisableOnTablet()
	{
	}
}
[Token(Token = "0x20000B3")]
public class DisableUIComponentInPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2BBD8", Offset = "0xB2BBD8")]
	[SerializeField]
	private bool m_EnableInPassthrough;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIComponent m_Component;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _OriginalDescriptionExtraText;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _OriginalDescriptionText;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_ExtraDescriptionTextWhileDisabled;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_DescriptionTextWhileDisabled;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xEC7CF0", Offset = "0xEC7CF0", VA = "0xEC7CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xEC7E1C", Offset = "0xEC7E1C", VA = "0xEC7E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xEC7ED8", Offset = "0xEC7ED8", VA = "0xEC7ED8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xEC7F44", Offset = "0xEC7F44", VA = "0xEC7F44")]
	public void OnPassthroughChanged(bool passthroughEnabled)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xEC8178", Offset = "0xEC8178", VA = "0xEC8178")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xEC8234", Offset = "0xEC8234", VA = "0xEC8234")]
	public DisableUIComponentInPassthrough()
	{
	}
}
[Token(Token = "0x20000B4")]
public class DisableUIComponentWithoutEdgeDetection : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIComponent m_Component;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _OriginalDescriptionExtraText;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _OriginalDescriptionText;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_ExtraDescriptionTextWhileDisabled;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_DescriptionTextWhileDisabled;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xEC823C", Offset = "0xEC823C", VA = "0xEC823C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xEC8368", Offset = "0xEC8368", VA = "0xEC8368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xEC83F8", Offset = "0xEC83F8", VA = "0xEC83F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xEC8424", Offset = "0xEC8424", VA = "0xEC8424")]
	public void OnEdgeDetectionChanged(bool edgeDetectionEnabled)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xEC8698", Offset = "0xEC8698", VA = "0xEC8698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xEC8728", Offset = "0xEC8728", VA = "0xEC8728")]
	public DisableUIComponentWithoutEdgeDetection()
	{
	}
}
[Token(Token = "0x20000B5")]
public class DontDestroyOnSceneLoad : MonoBehaviour
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0xECA95C", Offset = "0xECA95C", VA = "0xECA95C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xECA9D4", Offset = "0xECA9D4", VA = "0xECA9D4")]
	public DontDestroyOnSceneLoad()
	{
	}
}
[Token(Token = "0x20000B6")]
public class EnableBySDKMode : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SdkMode> m_EnabledModes;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_Disabled;

	[Token(Token = "0x17000065")]
	public bool IsEnabled
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0xED4F64", Offset = "0xED4F64", VA = "0xED4F64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xED4F74", Offset = "0xED4F74", VA = "0xED4F74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xED5000", Offset = "0xED5000", VA = "0xED5000")]
	private void Update()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xED5038", Offset = "0xED5038", VA = "0xED5038")]
	public EnableBySDKMode()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ForceUnlockCursor : MonoBehaviour
{
	[Token(Token = "0x600038B")]
	[Address(RVA = "0x101D054", Offset = "0x101D054", VA = "0x101D054")]
	private void Start()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x101D0D0", Offset = "0x101D0D0", VA = "0x101D0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x101D0D4", Offset = "0x101D0D4", VA = "0x101D0D4")]
	public ForceUnlockCursor()
	{
	}
}
[Token(Token = "0x20000B8")]
public class HideOnMobile : MonoBehaviour
{
	[Token(Token = "0x600038E")]
	[Address(RVA = "0x13C2EF8", Offset = "0x13C2EF8", VA = "0x13C2EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x13C2F80", Offset = "0x13C2F80", VA = "0x13C2F80")]
	public HideOnMobile()
	{
	}
}
[Token(Token = "0x20000B9")]
public class JoystickControlledMovement : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static JoystickControlledMovement Instance;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool JoystickMovementEnabled;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_MoveSpeed;

	[Token(Token = "0x40005A4")]
	private const float xLimit = 89f;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x12E6AB4", Offset = "0x12E6AB4", VA = "0x12E6AB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x12E6B1C", Offset = "0x12E6B1C", VA = "0x12E6B1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x12E6DE0", Offset = "0x12E6DE0", VA = "0x12E6DE0")]
	public void ResetToLastPosition()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x12E6E38", Offset = "0x12E6E38", VA = "0x12E6E38")]
	public JoystickControlledMovement()
	{
	}
}
[Token(Token = "0x20000BA")]
public class KeyboardPanel : MonoBehaviour
{
	[Token(Token = "0x20000BB")]
	public enum KeyboardPromptType
	{
		[Token(Token = "0x40005AC")]
		EnterName,
		[Token(Token = "0x40005AD")]
		SetRoomPasswordForCurrentRoom,
		[Token(Token = "0x40005AE")]
		EnterRoomPasswordAndJoinRoom,
		[Token(Token = "0x40005AF")]
		ChangeRoomPassword,
		[Token(Token = "0x40005B0")]
		SetRoomName,
		[Token(Token = "0x40005B1")]
		SetRoomPasswordBeforeCreation
	}

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static KeyboardPromptType m_CurrentCurrentKeyboardPromptType;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<string> OnClickSubmit;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BC34", Offset = "0xB2BC34")]
	public TextMeshPro m_Prompt;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_UserEntry;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BC6C", Offset = "0xB2BC6C")]
	public int m_CharacterLimit;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_InitialDisplayEntry;

	[Token(Token = "0x17000066")]
	public KeyboardPromptType CurrentKeyboardPrompt
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x12E9728", Offset = "0x12E9728", VA = "0x12E9728")]
		get
		{
			return default(KeyboardPromptType);
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x12E9774", Offset = "0x12E9774", VA = "0x12E9774")]
		set
		{
		}
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x12E95D8", Offset = "0x12E95D8", VA = "0x12E95D8")]
	public void ModifyEntry(char characterInput)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x12E9BAC", Offset = "0x12E9BAC", VA = "0x12E9BAC")]
	public void ModifyEntryWithString(string characterInput)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x12E94A4", Offset = "0x12E94A4", VA = "0x12E94A4")]
	public void EntryBackspace()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x12E97E0", Offset = "0x12E97E0", VA = "0x12E97E0")]
	private void SetKeyboardPrompt(KeyboardPromptType promptType)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x12E9CF8", Offset = "0x12E9CF8", VA = "0x12E9CF8")]
	public void ClickAccept()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x12E9E3C", Offset = "0x12E9E3C", VA = "0x12E9E3C")]
	public KeyboardPanel()
	{
	}
}
[Token(Token = "0x20000BC")]
public class LanguageController : MonoBehaviour
{
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_ForceLanguage;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2BCA4", Offset = "0xB2BCA4")]
	public SupportedLanguages m_ForcedLanguage;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x12EAD48", Offset = "0x12EAD48", VA = "0x12EAD48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x12EAF2C", Offset = "0x12EAF2C", VA = "0x12EAF2C")]
	public LanguageController()
	{
	}
}
[Token(Token = "0x20000BD")]
public class LanguageSelector : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SupportedLanguages m_SelectedLanguage;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x10D0504", Offset = "0x10D0504", VA = "0x10D0504")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x10D0538", Offset = "0x10D0538", VA = "0x10D0538")]
	public LanguageSelector()
	{
	}
}
[Token(Token = "0x20000BE")]
public static class LocalizationTextCollector
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsInitialized;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool CollectAllText;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string FilePath;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AllAppTexts m_localizedText;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static SortedDictionary<string, string> m_StringsDict;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int m_HighestWordID;

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x10D8C64", Offset = "0x10D8C64", VA = "0x10D8C64")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x10D91D0", Offset = "0x10D91D0", VA = "0x10D91D0")]
	public static void AddString(string source, string value)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x10D9958", Offset = "0x10D9958", VA = "0x10D9958")]
	public static string MakeWordIDFromText(string text)
	{
		return null;
	}
}
[Token(Token = "0x20000BF")]
public class MultiBrushLocalizationFontSelector : MonoBehaviour
{
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xF43D04", Offset = "0xF43D04", VA = "0xF43D04")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xF43D54", Offset = "0xF43D54", VA = "0xF43D54")]
	public MultiBrushLocalizationFontSelector()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MultiBrushVersionText : MonoBehaviour
{
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1098A34", Offset = "0x1098A34", VA = "0x1098A34")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1098C08", Offset = "0x1098C08", VA = "0x1098C08")]
	public MultiBrushVersionText()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TextMeshProLocalizer : MonoBehaviour
{
	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WordIDs m_WordId;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1166DC0", Offset = "0x1166DC0", VA = "0x1166DC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1166E18", Offset = "0x1166E18", VA = "0x1166E18")]
	public TextMeshProLocalizer()
	{
	}
}
[Token(Token = "0x20000C2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB286D0", Offset = "0xB286D0")]
public class LogCullingMask : MonoBehaviour
{
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x10D9A9C", Offset = "0x10D9A9C", VA = "0x10D9A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x10D9AF4", Offset = "0x10D9AF4", VA = "0x10D9AF4")]
	public void OutputPosition()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x10D9BF4", Offset = "0x10D9BF4", VA = "0x10D9BF4")]
	public LogCullingMask()
	{
	}
}
[Token(Token = "0x20000C3")]
public class LogPosition : MonoBehaviour
{
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x10D9BFC", Offset = "0x10D9BFC", VA = "0x10D9BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x10D9C54", Offset = "0x10D9C54", VA = "0x10D9C54")]
	public void OutputPosition()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x10D9D48", Offset = "0x10D9D48", VA = "0x10D9D48")]
	public LogPosition()
	{
	}
}
[Token(Token = "0x20000C4")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool justY;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Offset;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _camera;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x10DA498", Offset = "0x10DA498", VA = "0x10DA498")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x10DA4E4", Offset = "0x10DA4E4", VA = "0x10DA4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x10DA5D0", Offset = "0x10DA5D0", VA = "0x10DA5D0")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x20000C5")]
public class MemoryManagementOptionsController : MonoBehaviour
{
	[Token(Token = "0x40005BF")]
	private const string PREFS_KEY_OPTION_MANAGEMENT_STRATEGY = "OptionMemoryManagementStrategy";

	[Token(Token = "0x17000067")]
	public static bool IsManagementStrategyDoNothing
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x10E0E88", Offset = "0x10E0E88", VA = "0x10E0E88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x10E0DF0", Offset = "0x10E0DF0", VA = "0x10E0DF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static bool IsManagementStrategyRemoveOldest
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x10E0FC4", Offset = "0x10E0FC4", VA = "0x10E0FC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x10E0F2C", Offset = "0x10E0F2C", VA = "0x10E0F2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public static bool IsManagementStrategyPreventNewStrokes
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x10E1100", Offset = "0x10E1100", VA = "0x10E1100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x10E1068", Offset = "0x10E1068", VA = "0x10E1068")]
		set
		{
		}
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x10E11A4", Offset = "0x10E11A4", VA = "0x10E11A4")]
	public void OpenAvatarEditor()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x10E0DFC", Offset = "0x10E0DFC", VA = "0x10E0DFC")]
	public static void SetManagementStrategyDoNothing()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x10E0F38", Offset = "0x10E0F38", VA = "0x10E0F38")]
	public static void SetManagementStrategyRemoveOldest()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10E1074", Offset = "0x10E1074", VA = "0x10E1074")]
	public static void SetManagementStrategyPreventNewStrokes()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x10E11AC", Offset = "0x10E11AC", VA = "0x10E11AC")]
	public MemoryManagementOptionsController()
	{
	}
}
[Token(Token = "0x20000C6")]
public class MicrophonePermissionRequest : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadingScene m_LoadingScene;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _HasSeenPermissionDialog;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _StartedLoadingScene;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xF31170", Offset = "0xF31170", VA = "0xF31170")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xF31328", Offset = "0xF31328", VA = "0xF31328")]
	private void OnApplicationFocus(bool isFocused)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xF313DC", Offset = "0xF313DC", VA = "0xF313DC")]
	public MicrophonePermissionRequest()
	{
	}
}
[Token(Token = "0x20000C7")]
public class MonoscopicViewpointControl : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_MoveSpeed;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xF3E534", Offset = "0xF3E534", VA = "0xF3E534")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xF3E538", Offset = "0xF3E538", VA = "0xF3E538")]
	public MonoscopicViewpointControl()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB28730", Offset = "0xB28730")]
public class MultiBrushConfig : SingletonScriptableObject<MultiBrushConfig>
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SdkMode m_VrSdkMode;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AppBuildType m_BuildType;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_LocalizationEnabled;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool m_DisableNetworking;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<UnityEngine.Object> PicoSpecificPaths;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<UnityEngine.Object> OculusSpecificPaths;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<UnityEngine.Object> GoogleVrSpecificPaths;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<UnityEngine.Object> RendeverSpecificPaths;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<UnityEngine.Object> NetworkRequiredPaths;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.Object m_PicoManifest;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object m_PicoRFitManifest;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Object m_TabletManifest;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Object m_OculusManifest;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xF419D0", Offset = "0xF419D0", VA = "0xF419D0")]
	public MultiBrushConfig()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MultiBrushConnectionCheck : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineCheck OnlineCheckInstance;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SketchbookPanel _SketchbookPanel;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xF41A1C", Offset = "0xF41A1C", VA = "0xF41A1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xF41A8C", Offset = "0xF41A8C", VA = "0xF41A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xF41BE0", Offset = "0xF41BE0", VA = "0xF41BE0")]
	private void OnOnlineStatusChange(bool isConnected)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xF41E9C", Offset = "0xF41E9C", VA = "0xF41E9C")]
	public MultiBrushConnectionCheck()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xF41EA4", Offset = "0xF41EA4", VA = "0xF41EA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38658", Offset = "0xB38658")]
	private void <Start>b__3_0()
	{
	}
}
[Token(Token = "0x20000CA")]
public enum MemoryExceededStrategy
{
	[Token(Token = "0x40005D4")]
	DoNothing,
	[Token(Token = "0x40005D5")]
	RemoveOldest,
	[Token(Token = "0x40005D6")]
	PreventNewStrokes
}
[Token(Token = "0x20000CB")]
public class MultiBrushMemoryManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2876C", Offset = "0xB2876C")]
	private sealed class <>c
	{
		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Stroke, bool> <>9__9_0;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Stroke, bool> <>9__10_0;

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1006D54", Offset = "0x1006D54", VA = "0x1006D54")]
		public <>c()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1006D5C", Offset = "0x1006D5C", VA = "0x1006D5C")]
		internal bool <Update>b__9_0(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1006D7C", Offset = "0x1006D7C", VA = "0x1006D7C")]
		internal bool <PrintVerts>b__10_0(Stroke stroke)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiBrushMemoryManager Instance;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<MemoryExceededStrategy> OnMemoryManagementStrategyChanged;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static MemoryExceededStrategy _CurrentMemoryExceededStrategy;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool forceDrawingNotAllowed;

	[Token(Token = "0x1700006A")]
	public static MemoryExceededStrategy CurrentMemoryExceededStrategy
	{
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xF43D5C", Offset = "0xF43D5C", VA = "0xF43D5C")]
		get
		{
			return default(MemoryExceededStrategy);
		}
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xF43DC0", Offset = "0xF43DC0", VA = "0xF43DC0")]
		set
		{
		}
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xF43E5C", Offset = "0xF43E5C", VA = "0xF43E5C")]
	public static bool IsDrawingAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xF43F68", Offset = "0xF43F68", VA = "0xF43F68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xF43FD0", Offset = "0xF43FD0", VA = "0xF43FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xF44200", Offset = "0xF44200", VA = "0xF44200")]
	public static void PrintVerts()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xF4446C", Offset = "0xF4446C", VA = "0xF4446C")]
	public MultiBrushMemoryManager()
	{
	}
}
[Token(Token = "0x20000CD")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB2877C", Offset = "0xB2877C")]
public class MultiBrushOvrHand : MonoBehaviour, OVRSkeleton.IOVRSkeletonDataProvider, OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider, OVRMesh.IOVRMeshDataProvider, OVRMeshRenderer.IOVRMeshRendererDataProvider
{
	[Token(Token = "0x20000CE")]
	public enum Hand
	{
		[Token(Token = "0x40005ED")]
		None = -1,
		[Token(Token = "0x40005EE")]
		HandLeft,
		[Token(Token = "0x40005EF")]
		HandRight
	}

	[Token(Token = "0x20000CF")]
	public enum HandFinger
	{
		[Token(Token = "0x40005F1")]
		Thumb,
		[Token(Token = "0x40005F2")]
		Index,
		[Token(Token = "0x40005F3")]
		Middle,
		[Token(Token = "0x40005F4")]
		Ring,
		[Token(Token = "0x40005F5")]
		Pinky,
		[Token(Token = "0x40005F6")]
		Max
	}

	[Token(Token = "0x20000D0")]
	public enum TrackingConfidence
	{
		[Token(Token = "0x40005F8")]
		Low = 0,
		[Token(Token = "0x40005F9")]
		High = 1065353216
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hand m_HandType;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _pointerPoseRoot;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _pointerPoseGO;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRPlugin.HandState _handState;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SkinnedMeshRenderer _handModel;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BCFC", Offset = "0xB2BCFC")]
	private bool <IsDataValid>k__BackingField;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD0C", Offset = "0xB2BD0C")]
	private bool <IsDataHighConfidence>k__BackingField;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD1C", Offset = "0xB2BD1C")]
	private bool <IsTracked>k__BackingField;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD2C", Offset = "0xB2BD2C")]
	private bool <IsSystemGestureInProgress>k__BackingField;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD3C", Offset = "0xB2BD3C")]
	private bool <IsPointerPoseValid>k__BackingField;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD4C", Offset = "0xB2BD4C")]
	private Transform <PointerPose>k__BackingField;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD5C", Offset = "0xB2BD5C")]
	private float <HandScale>k__BackingField;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD6C", Offset = "0xB2BD6C")]
	private TrackingConfidence <HandConfidence>k__BackingField;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BD7C", Offset = "0xB2BD7C")]
	private bool <IsDominantHand>k__BackingField;

	[Token(Token = "0x1700006B")]
	public bool IsDataValid
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xF45CC4", Offset = "0xF45CC4", VA = "0xF45CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38668", Offset = "0xB38668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xF45CCC", Offset = "0xF45CCC", VA = "0xF45CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38678", Offset = "0xB38678")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public bool IsDataHighConfidence
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xF45CD8", Offset = "0xF45CD8", VA = "0xF45CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38688", Offset = "0xB38688")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xF45CE0", Offset = "0xF45CE0", VA = "0xF45CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38698", Offset = "0xB38698")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public bool IsTracked
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xF45CEC", Offset = "0xF45CEC", VA = "0xF45CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386A8", Offset = "0xB386A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xF45CF4", Offset = "0xF45CF4", VA = "0xF45CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386B8", Offset = "0xB386B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool IsSystemGestureInProgress
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xF45D00", Offset = "0xF45D00", VA = "0xF45D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386C8", Offset = "0xB386C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xF45D08", Offset = "0xF45D08", VA = "0xF45D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386D8", Offset = "0xB386D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool IsPointerPoseValid
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xF45D14", Offset = "0xF45D14", VA = "0xF45D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386E8", Offset = "0xB386E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xF45D1C", Offset = "0xF45D1C", VA = "0xF45D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB386F8", Offset = "0xB386F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public Transform PointerPose
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xF45D28", Offset = "0xF45D28", VA = "0xF45D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38708", Offset = "0xB38708")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xF45D30", Offset = "0xF45D30", VA = "0xF45D30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38718", Offset = "0xB38718")]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public float HandScale
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xF45D38", Offset = "0xF45D38", VA = "0xF45D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38728", Offset = "0xB38728")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xF45D40", Offset = "0xF45D40", VA = "0xF45D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38738", Offset = "0xB38738")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public TrackingConfidence HandConfidence
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xF45D48", Offset = "0xF45D48", VA = "0xF45D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38748", Offset = "0xB38748")]
		get
		{
			return default(TrackingConfidence);
		}
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xF45D50", Offset = "0xF45D50", VA = "0xF45D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38758", Offset = "0xB38758")]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public bool IsDominantHand
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xF45D58", Offset = "0xF45D58", VA = "0xF45D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38768", Offset = "0xB38768")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xF45D60", Offset = "0xF45D60", VA = "0xF45D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38778", Offset = "0xB38778")]
		private set
		{
		}
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xF45D6C", Offset = "0xF45D6C", VA = "0xF45D6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xF460EC", Offset = "0xF460EC", VA = "0xF460EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xF460F4", Offset = "0xF460F4", VA = "0xF460F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xF45F70", Offset = "0xF45F70", VA = "0xF45F70")]
	private void GetHandState(OVRPlugin.Step step)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xF46174", Offset = "0xF46174", VA = "0xF46174")]
	public bool GetFingerIsPinching(HandFinger finger)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xF4619C", Offset = "0xF4619C", VA = "0xF4619C")]
	public float GetFingerPinchStrength(HandFinger finger)
	{
		return default(float);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xF461E4", Offset = "0xF461E4", VA = "0xF461E4")]
	public TrackingConfidence GetFingerConfidence(HandFinger finger)
	{
		return default(TrackingConfidence);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xF46230", Offset = "0xF46230", VA = "0xF46230", Slot = "4")]
	private OVRSkeleton.SkeletonType OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType()
	{
		return default(OVRSkeleton.SkeletonType);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xF46248", Offset = "0xF46248", VA = "0xF46248", Slot = "5")]
	private OVRSkeleton.SkeletonPoseData OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData()
	{
		return default(OVRSkeleton.SkeletonPoseData);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xF462B4", Offset = "0xF462B4", VA = "0xF462B4", Slot = "6")]
	private OVRSkeletonRenderer.SkeletonRendererData OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData()
	{
		return default(OVRSkeletonRenderer.SkeletonRendererData);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xF46300", Offset = "0xF46300", VA = "0xF46300", Slot = "7")]
	private OVRMesh.MeshType OVRMesh.IOVRMeshDataProvider.GetMeshType()
	{
		return default(OVRMesh.MeshType);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xF46318", Offset = "0xF46318", VA = "0xF46318", Slot = "8")]
	private OVRMeshRenderer.MeshRendererData OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData()
	{
		return default(OVRMeshRenderer.MeshRendererData);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xF46368", Offset = "0xF46368", VA = "0xF46368")]
	public MultiBrushOvrHand()
	{
	}
}
[Token(Token = "0x20000D1")]
public class MultiBrushSettingsController : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	private const string PROP_BRUSH_NUMBERS_SETTING = "BrushNumbersSetting";

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool BrushNumbersEnabledSetting;

	[Token(Token = "0x14000003")]
	public static event Action<bool> OnBrushNumbersSettingChanged
	{
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x10986F4", Offset = "0x10986F4", VA = "0x10986F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38788", Offset = "0xB38788")]
		add
		{
		}
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x10987E8", Offset = "0x10987E8", VA = "0x10987E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38798", Offset = "0xB38798")]
		remove
		{
		}
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x10988DC", Offset = "0x10988DC", VA = "0x10988DC")]
	public static void SetBrushNumbersSetting(bool shouldShow)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x109899C", Offset = "0x109899C", VA = "0x109899C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1098A28", Offset = "0x1098A28", VA = "0x1098A28")]
	public MultiBrushSettingsController()
	{
	}
}
[Token(Token = "0x20000D2")]
public class MultiBrushOverHandRenderer : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	public enum ConfidenceBehavior
	{
		[Token(Token = "0x400060A")]
		None,
		[Token(Token = "0x400060B")]
		ToggleRenderer
	}

	[Token(Token = "0x20000D4")]
	public enum SystemGestureBehavior
	{
		[Token(Token = "0x400060D")]
		None,
		[Token(Token = "0x400060E")]
		SwapMaterial
	}

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRMeshRenderer.IOVRMeshRendererDataProvider _dataProvider;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OVRMesh _ovrMesh;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRSkeleton _ovrSkeleton;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ConfidenceBehavior _confidenceBehavior;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private SystemGestureBehavior _systemGestureBehavior;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material _systemGestureMaterial;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _originalMaterial;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer _skinnedMeshRenderer;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BDFC", Offset = "0xB2BDFC")]
	private bool <IsInitialized>k__BackingField;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BE0C", Offset = "0xB2BE0C")]
	private bool <IsDataValid>k__BackingField;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BE1C", Offset = "0xB2BE1C")]
	private bool <IsDataHighConfidence>k__BackingField;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2BE2C", Offset = "0xB2BE2C")]
	private bool <ShouldUseSystemGestureMaterial>k__BackingField;

	[Token(Token = "0x17000074")]
	public bool IsInitialized
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xF451D0", Offset = "0xF451D0", VA = "0xF451D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387A8", Offset = "0xB387A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xF451D8", Offset = "0xF451D8", VA = "0xF451D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387B8", Offset = "0xB387B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool IsDataValid
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xF451E4", Offset = "0xF451E4", VA = "0xF451E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387C8", Offset = "0xB387C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xF451EC", Offset = "0xF451EC", VA = "0xF451EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387D8", Offset = "0xB387D8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public bool IsDataHighConfidence
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xF451F8", Offset = "0xF451F8", VA = "0xF451F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387E8", Offset = "0xB387E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xF45200", Offset = "0xF45200", VA = "0xF45200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB387F8", Offset = "0xB387F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool ShouldUseSystemGestureMaterial
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xF4520C", Offset = "0xF4520C", VA = "0xF4520C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38808", Offset = "0xB38808")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xF45214", Offset = "0xF45214", VA = "0xF45214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38818", Offset = "0xB38818")]
		private set
		{
		}
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xF45220", Offset = "0xF45220", VA = "0xF45220")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xF45340", Offset = "0xF45340", VA = "0xF45340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF453E8", Offset = "0xF453E8", VA = "0xF453E8")]
	private bool ShouldInitialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xF454FC", Offset = "0xF454FC", VA = "0xF454FC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF459D0", Offset = "0xF459D0", VA = "0xF459D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF45CB4", Offset = "0xF45CB4", VA = "0xF45CB4")]
	public MultiBrushOverHandRenderer()
	{
	}
}
[Token(Token = "0x20000D5")]
public class AcceptButton : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardPanel m_KeyboardPanel;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xFDF0C4", Offset = "0xFDF0C4", VA = "0xFDF0C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xFDF124", Offset = "0xFDF124", VA = "0xFDF124")]
	public void ClickAcceptButton()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xFDF140", Offset = "0xFDF140", VA = "0xFDF140")]
	public AcceptButton()
	{
	}
}
[Token(Token = "0x20000D6")]
public static class AvatarOptionsController
{
	[Token(Token = "0x4000610")]
	private const string PREFS_KEY_OPTION_SELF_AVATARS = "OptionDisplaySelfAvatars";

	[Token(Token = "0x4000611")]
	private const string PREFS_KEY_OPTION_OTHER_AVATARS = "OptionDisplayOtherAvatars";

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _ShouldDisplayAvatars;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool _ShouldDisplaySelfAvatar;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool IsInitialized;

	[Token(Token = "0x17000078")]
	public static bool ShouldDisplayAvatars
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xFF2C48", Offset = "0xFF2C48", VA = "0xFF2C48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xFF2A50", Offset = "0xFF2A50", VA = "0xFF2A50")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static bool ShouldDisplaySelfAvatar
	{
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xFF2ECC", Offset = "0xFF2ECC", VA = "0xFF2ECC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xFF2DD4", Offset = "0xFF2DD4", VA = "0xFF2DD4")]
		set
		{
		}
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xFF2CEC", Offset = "0xFF2CEC", VA = "0xFF2CEC")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xFF2F70", Offset = "0xFF2F70", VA = "0xFF2F70")]
	public static void OpenAvatarEditor()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xFF2AB0", Offset = "0xFF2AB0", VA = "0xFF2AB0")]
	public static void SetAvatarDisplayState(bool avatarsOn)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xFF2E34", Offset = "0xFF2E34", VA = "0xFF2E34")]
	public static void SetSelfAvatarDisplayState(bool selfAvatarsOn)
	{
	}
}
[Token(Token = "0x20000D7")]
public class CreateRoomButton : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_IsPrivate;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OptionsPopUpWindow m_Popup;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1598EDC", Offset = "0x1598EDC", VA = "0x1598EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1598F3C", Offset = "0x1598F3C", VA = "0x1598F3C")]
	public void ClickCreateRoom()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1599060", Offset = "0x1599060", VA = "0x1599060")]
	public CreateRoomButton()
	{
	}
}
[Token(Token = "0x20000D8")]
public class DisableButtonInMultiplayer : MonoBehaviour, IMultiplayerStateResponsive
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BaseButton _BaseButton;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _OriginalDescriptionExtraText;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _OriginalDescriptionText;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_ExtraDescriptionTextWhileDisabled;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_DescriptionTextWhileDisabled;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_AllowOnTablet;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xEC75C0", Offset = "0xEC75C0", VA = "0xEC75C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xEC762C", Offset = "0xEC762C", VA = "0xEC762C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xEC76B8", Offset = "0xEC76B8", VA = "0xEC76B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xEC779C", Offset = "0xEC779C", VA = "0xEC779C", Slot = "4")]
	public void SetInMultiplayerRoomState()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xEC78B4", Offset = "0xEC78B4", VA = "0xEC78B4", Slot = "5")]
	public void SetOutOfMultiplayerRoomState()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xEC799C", Offset = "0xEC799C", VA = "0xEC799C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xEC76F0", Offset = "0xEC76F0", VA = "0xEC76F0")]
	private bool ShouldDisable()
	{
		return default(bool);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xEC7A80", Offset = "0xEC7A80", VA = "0xEC7A80")]
	public DisableButtonInMultiplayer()
	{
	}
}
[Token(Token = "0x20000D9")]
public interface IMultiplayerStateResponsive
{
	[Token(Token = "0x6000420")]
	void SetInMultiplayerRoomState();

	[Token(Token = "0x6000421")]
	void SetOutOfMultiplayerRoomState();
}
[Token(Token = "0x20000DA")]
public class MockPlayerName
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string PlayerNameFilePath;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string _PlayerName;

	[Token(Token = "0x1700007A")]
	public static string PlayerName
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xF34944", Offset = "0xF34944", VA = "0xF34944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xF34A68", Offset = "0xF34A68", VA = "0xF34A68")]
	public MockPlayerName()
	{
	}
}
[Token(Token = "0x20000DB")]
public class MultiBrushRoomOptions : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_RoomNameText;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_RoomSizeText;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_RoomPrivacyText;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _AreAvatarsEnabled;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _IsRoomPasswordProtected;

	[Token(Token = "0x1700007B")]
	public bool AreAvatarsEnabled
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x10982D0", Offset = "0x10982D0", VA = "0x10982D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x10982D8", Offset = "0x10982D8", VA = "0x10982D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool IsRoomPasswordProtected
	{
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x10983B0", Offset = "0x10983B0", VA = "0x10983B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000428")]
		[Address(RVA = "0x10983B8", Offset = "0x10983B8", VA = "0x10983B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x10986EC", Offset = "0x10986EC", VA = "0x10986EC")]
	public MultiBrushRoomOptions()
	{
	}
}
[Token(Token = "0x20000DC")]
public class MultiplayerPanel : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerPanel Instance;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool IsPicoKeyboardActive;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BE4C", Offset = "0xB2BE4C")]
	public GameObject m_ChangePasswordButton;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_MakeRoomPrivateButton;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_MakeRoomPublicButton;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_MakeRoomPublicButtonRoomCreation;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_MakeRoomPrivateButtonRoomCreation;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_EnableAvatarsButton;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_DisableAvatarsButton;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text m_CreateRoomButtonText;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BE84", Offset = "0xB2BE84")]
	public GameObject m_NoRoomsPanel;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_InRoomPanel;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_ConnectionFailedPanel;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_InLobbyPanel;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_WrongPasswordPanel;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_MasterClientPanel;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_CreateRoomPanel;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BEBC", Offset = "0xB2BEBC")]
	public GameObject m_RoomListLoadingIndicator;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BEF4", Offset = "0xB2BEF4")]
	public TMP_Text m_ConnectionStatusText;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TMP_Text m_RoomStatusText;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BF2C", Offset = "0xB2BF2C")]
	public TMP_Text m_PlayerNameText;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BF64", Offset = "0xB2BF64")]
	public TMP_Text m_RoomNameText;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_SecondRowMaxUsersIndicator;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text m_MaxUsersText;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BF9C", Offset = "0xB2BF9C")]
	public GameObject m_RoomButtonPrefab;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_PlayerListEntryPrefab;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2BFD4", Offset = "0xB2BFD4")]
	public ButtonLayoutHelper m_LayoutHelper;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ButtonLayoutHelper m_PlayerListLayoutHelper;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PhotonRoomData _PrivateRoomToJoin;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string _RoomPasswordForCreation;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private UIComponentManager _Manager;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly Dictionary<int, GameObject> _PlayerListEntries;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C00C", Offset = "0xB2C00C")]
	public int m_NumberTestEntriesToAdd;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x10A09A4", Offset = "0x10A09A4", VA = "0x10A09A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x10A0AEC", Offset = "0x10A0AEC", VA = "0x10A0AEC")]
	public void ShowLobbyPanel()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x10A1398", Offset = "0x10A1398", VA = "0x10A1398")]
	public void ShowCreateRoomPanel()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x10A13F4", Offset = "0x10A13F4", VA = "0x10A13F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x10A14E4", Offset = "0x10A14E4", VA = "0x10A14E4")]
	private void OnPanelModeChanged(PanelManager.PanelMode newPanelMode)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x10A1590", Offset = "0x10A1590", VA = "0x10A1590")]
	private void Update()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x10A1790", Offset = "0x10A1790", VA = "0x10A1790")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x10A18CC", Offset = "0x10A18CC", VA = "0x10A18CC")]
	public void TryJoinPrivateRoom(PhotonRoomData photonRoomData)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1098468", Offset = "0x1098468", VA = "0x1098468")]
	public void ShowKeyboardForType(KeyboardPanel.KeyboardPromptType panelType)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x10A18DC", Offset = "0x10A18DC", VA = "0x10A18DC")]
	private void OnPicoKeyboardClosed()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x10A1994", Offset = "0x10A1994", VA = "0x10A1994")]
	private void OnPicoTextEntryPopupCreated(GameObject picoKeyboardPopup)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x10A1B08", Offset = "0x10A1B08", VA = "0x10A1B08")]
	private void OnClickSubmitHandler(string text)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x10A1E60", Offset = "0x10A1E60", VA = "0x10A1E60")]
	private void WrongPasswordCallback()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x10A1E80", Offset = "0x10A1E80", VA = "0x10A1E80")]
	private GameObject CreateListEntryForRoom(PhotonRoomData photonRoom)
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x10A2090", Offset = "0x10A2090", VA = "0x10A2090")]
	private void ClearPlayerList()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x10A20F4", Offset = "0x10A20F4", VA = "0x10A20F4")]
	public void OnLeaveRoomOrConnectToPhoton()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x10A21A8", Offset = "0x10A21A8", VA = "0x10A21A8")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x10A2B94", Offset = "0x10A2B94", VA = "0x10A2B94")]
	public void OnUnintentionalDisconnect()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x10A2848", Offset = "0x10A2848", VA = "0x10A2848")]
	public void OnPlayerListUpdate()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x10A2C28", Offset = "0x10A2C28", VA = "0x10A2C28")]
	public void OnMasterClientSwitched(Player newMaterClient)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x10A0E54", Offset = "0x10A0E54", VA = "0x10A0E54")]
	public void OnRoomListUpdate()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x10A2C9C", Offset = "0x10A2C9C", VA = "0x10A2C9C")]
	private void SetRooms(List<PhotonRoomData> rooms)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x10A2EF4", Offset = "0x10A2EF4", VA = "0x10A2EF4")]
	public void UpdateRoomText()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x10A2AC0", Offset = "0x10A2AC0", VA = "0x10A2AC0")]
	public void SetupRoomForPrivacySetting(bool isPrivate)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x10A34C8", Offset = "0x10A34C8", VA = "0x10A34C8")]
	public void ClickLeaveRoom()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x10A3544", Offset = "0x10A3544", VA = "0x10A3544")]
	public void ClickInviteUser()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x10A354C", Offset = "0x10A354C", VA = "0x10A354C")]
	public void ChangeRoomPassword()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x10A3554", Offset = "0x10A3554", VA = "0x10A3554")]
	public void SetRoomName()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x10A355C", Offset = "0x10A355C", VA = "0x10A355C")]
	public void ClickMakeRoomPublicForRoomCreation()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x10A35AC", Offset = "0x10A35AC", VA = "0x10A35AC")]
	public void ClickMakeRoomPrivateForRoomCreation()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x10A35B4", Offset = "0x10A35B4", VA = "0x10A35B4")]
	public void ClickMakeCurrentRoomPrivate()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x10A35BC", Offset = "0x10A35BC", VA = "0x10A35BC")]
	public void ClickMakeCurrentRoomPublic()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x10A3618", Offset = "0x10A3618", VA = "0x10A3618")]
	public void ClickCreateRoom()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x10A371C", Offset = "0x10A371C", VA = "0x10A371C")]
	public void ClickEnableAvatars()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x10A378C", Offset = "0x10A378C", VA = "0x10A378C")]
	public void ClickDisableAvatars()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x10A0CD0", Offset = "0x10A0CD0", VA = "0x10A0CD0")]
	public void SetupUiForAvatarState(bool avatarsEnabled)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x10A37FC", Offset = "0x10A37FC", VA = "0x10A37FC")]
	public void ClickChangeName()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x10A0B88", Offset = "0x10A0B88", VA = "0x10A0B88")]
	public void ResetRoomCreationButtonText()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x10A3804", Offset = "0x10A3804", VA = "0x10A3804")]
	public void ClickEditAvatar()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x10A3860", Offset = "0x10A3860", VA = "0x10A3860")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38828", Offset = "0xB38828")]
	public void AddTestPlayerEntry()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x10A3A54", Offset = "0x10A3A54", VA = "0x10A3A54")]
	public MultiplayerPanel()
	{
	}
}
[Token(Token = "0x20000DD")]
public class MultiplayerRoomButton : MonoBehaviour
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonRoomData _AssociatedPhotonRoom;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text m_RoomName;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_NumUsersText;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_LockedIcon;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_AvatarsIcon;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x10A3AD4", Offset = "0x10A3AD4", VA = "0x10A3AD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x10A1F68", Offset = "0x10A1F68", VA = "0x10A1F68")]
	public void SetupForRoom(PhotonRoomData photonRoom)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x10A3B34", Offset = "0x10A3B34", VA = "0x10A3B34")]
	public void ClickRoomButton()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x10A3BAC", Offset = "0x10A3BAC", VA = "0x10A3BAC")]
	public MultiplayerRoomButton()
	{
	}
}
[Token(Token = "0x20000DE")]
public class NetworkMessage
{
	[Token(Token = "0x20000DF")]
	public enum MessageType
	{
		[Token(Token = "0x400064E")]
		BeginLine = 1,
		[Token(Token = "0x400064F")]
		AddPoint,
		[Token(Token = "0x4000650")]
		AddPointsBatched,
		[Token(Token = "0x4000651")]
		FinishLine,
		[Token(Token = "0x4000652")]
		DeleteStroke,
		[Token(Token = "0x4000653")]
		RepaintStroke,
		[Token(Token = "0x4000654")]
		RepositionStroke,
		[Token(Token = "0x4000655")]
		SetStrokeCanvas
	}

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MessageType m_MessageType;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object[] m_MessageData;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_MessageSender;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x10A53E0", Offset = "0x10A53E0", VA = "0x10A53E0")]
	public NetworkMessage()
	{
	}
}
[Token(Token = "0x20000E0")]
public class NetworkedCanvas : CanvasScript, IPunObservable
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView _PhotonView;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly List<Stroke> _AssignedStrokes;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Guid m_CanvasGuid;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TrTransform _PoseCacheForNetworking;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TrTransform _PoseToUse;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _FirstTake;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float m_Distance;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float m_Angle;

	[Token(Token = "0x1700007D")]
	public TrTransform SelectionTransform
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x10A7010", Offset = "0x10A7010", VA = "0x10A7010")]
		get
		{
			return default(TrTransform);
		}
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x10A7108", Offset = "0x10A7108", VA = "0x10A7108")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x10A7780", Offset = "0x10A7780", VA = "0x10A7780")]
	public void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x10A78F8", Offset = "0x10A78F8", VA = "0x10A78F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x10A7904", Offset = "0x10A7904", VA = "0x10A7904")]
	private void OnSelectionCanvasOnPoseChangedHandler(TrTransform prev, TrTransform current)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x10A7930", Offset = "0x10A7930", VA = "0x10A7930")]
	private void OnStrokeAddedToSelectionHandler(Stroke stroke)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x10A7A48", Offset = "0x10A7A48", VA = "0x10A7A48")]
	private void OnStrokeRemovedFromSelectionHandler(Stroke stroke)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x10A7BC0", Offset = "0x10A7BC0", VA = "0x10A7BC0")]
	private void OnDuplicateStrokeHandler(string sourceStrokeGuid, string duplicatedStrokeGuid)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x10A7CC0", Offset = "0x10A7CC0", VA = "0x10A7CC0")]
	private void OnMemoryClearedHandler()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x10A7DC0", Offset = "0x10A7DC0", VA = "0x10A7DC0")]
	private void OnFlipSelectionHandler(Plane flipPlane)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x10A7FB0", Offset = "0x10A7FB0", VA = "0x10A7FB0")]
	private void OnResetTransformInstantHandler()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x10A80B0", Offset = "0x10A80B0", VA = "0x10A80B0")]
	[PunRPC]
	public void AddStrokeToCanvasRpc(string strokeGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x10A833C", Offset = "0x10A833C", VA = "0x10A833C")]
	[PunRPC]
	public void RemoveStrokeFromCanvasRPC(string strokeGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x10A8624", Offset = "0x10A8624", VA = "0x10A8624")]
	[PunRPC]
	public void DuplicateStrokeRPC(string sourceStrokeGuid, string duplicatedStrokeGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x10A87D4", Offset = "0x10A87D4", VA = "0x10A87D4")]
	[PunRPC]
	public void MemoryClearedRPC()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x10A884C", Offset = "0x10A884C", VA = "0x10A884C")]
	[PunRPC]
	public void FlipStrokesRPC(float nx, float ny, float nz, float distance, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x10A8CA4", Offset = "0x10A8CA4", VA = "0x10A8CA4")]
	[PunRPC]
	public void ResetTransformInstantRPC(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x10A8D4C", Offset = "0x10A8D4C", VA = "0x10A8D4C")]
	public void RemoveAllStrokesFromCanvas()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x10A8F64", Offset = "0x10A8F64", VA = "0x10A8F64")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x10A9404", Offset = "0x10A9404", VA = "0x10A9404", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x10A96BC", Offset = "0x10A96BC", VA = "0x10A96BC")]
	public NetworkedCanvas()
	{
	}
}
[Token(Token = "0x20000E1")]
public class NetworkedController : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<NetworkedController> AllNetworkedControllers;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView _PhotonView;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_Geometry;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 m_LocalEuelerHands;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x10A9784", Offset = "0x10A9784", VA = "0x10A9784")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x10A98B0", Offset = "0x10A98B0", VA = "0x10A98B0")]
	private void OnPlayerControllerTypeChanged(Player player, bool isHands)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x10A99B4", Offset = "0x10A99B4", VA = "0x10A99B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x10A9C4C", Offset = "0x10A9C4C", VA = "0x10A9C4C")]
	private void SetRendererState(bool show)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x10A9D08", Offset = "0x10A9D08", VA = "0x10A9D08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x10A9D94", Offset = "0x10A9D94", VA = "0x10A9D94")]
	public NetworkedController()
	{
	}
}
[Token(Token = "0x20000E2")]
public class NetworkedPlayerHead : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text m_NameText;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem m_SoundWave;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonView _PhotonView;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _VoiceUserName;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VoicePlayerState _VoicePlayerState;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _Initialized;

	[Token(Token = "0x14000004")]
	public static event Action<NetworkedPlayerHead> OnLocalPlayerHeadCreated
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x10A9E24", Offset = "0x10A9E24", VA = "0x10A9E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB388C0", Offset = "0xB388C0")]
		add
		{
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x10A9EE0", Offset = "0x10A9EE0", VA = "0x10A9EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB388D0", Offset = "0xB388D0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x10A9F9C", Offset = "0x10A9F9C", VA = "0x10A9F9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x10AA574", Offset = "0x10AA574", VA = "0x10AA574")]
	private void PlayerNameSetHandler(string playerName)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x10AA474", Offset = "0x10AA474", VA = "0x10AA474")]
	private void TrySetupComms()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x10AA618", Offset = "0x10AA618", VA = "0x10AA618")]
	public void SetMuteState(bool shouldMute)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x10AA63C", Offset = "0x10AA63C", VA = "0x10AA63C")]
	private void OnCommsPlayerJoinedSessionHandler(VoicePlayerState newVoicePlayerState)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x10AA6D0", Offset = "0x10AA6D0", VA = "0x10AA6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x10AA88C", Offset = "0x10AA88C", VA = "0x10AA88C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x10AA9E4", Offset = "0x10AA9E4", VA = "0x10AA9E4")]
	public NetworkedPlayerHead()
	{
	}
}
[Token(Token = "0x20000E3")]
public class NetworkedPointer : PointerScript
{
	[Token(Token = "0x20000E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28790", Offset = "0xB28790")]
	private sealed class <SendStrokeCoroutine>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkedPointer <>4__this;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stroke stroke;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player targetPlayer;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callbackOnFinished;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <pointIndex>5__2;

		[Token(Token = "0x1700007E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x10087B4", Offset = "0x10087B4", VA = "0x10087B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0x10087FC", Offset = "0x10087FC", VA = "0x10087FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x10080CC", Offset = "0x10080CC", VA = "0x10080CC")]
		[DebuggerHidden]
		public <SendStrokeCoroutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x10080F8", Offset = "0x10080F8", VA = "0x10080F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x10080FC", Offset = "0x10080FC", VA = "0x10080FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x10087BC", Offset = "0x10087BC", VA = "0x10087BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public PhotonView m_PhotonView;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int m_MessageBatchSize;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public int m_ControlPointBatchSize;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Color _BrushColor;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool _IsInitialSyncPointer;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public readonly Queue<NetworkMessage> MessageQueue;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private PointerScript _DuplicatedPointer;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int _PointerIndex;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool m_StrokeBeingSent;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<CoroutineHandle> m_SendStrokeCoroutines;

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x10AA9EC", Offset = "0x10AA9EC", VA = "0x10AA9EC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10AAFFC", Offset = "0x10AAFFC", VA = "0x10AAFFC")]
	public void SetupForMemoryPlayback()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10AB0B8", Offset = "0x10AB0B8", VA = "0x10AB0B8")]
	private void OnStrokePlaybackStartedHandler(Stroke stroke)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x10AB190", Offset = "0x10AB190", VA = "0x10AB190")]
	private void OnFinishedStraightEdgeStrokeHandler(Stroke stroke)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x10AB19C", Offset = "0x10AB19C", VA = "0x10AB19C")]
	private void OnMemoryClearedHandler()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x10AB320", Offset = "0x10AB320", VA = "0x10AB320")]
	private void Update()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x10AB3F8", Offset = "0x10AB3F8", VA = "0x10AB3F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x10AB398", Offset = "0x10AB398", VA = "0x10AB398")]
	public void ProcessNextMessage()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x10AB888", Offset = "0x10AB888", VA = "0x10AB888")]
	private void ProcessMessage(NetworkMessage message)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x10AB0C4", Offset = "0x10AB0C4", VA = "0x10AB0C4")]
	public void SendStroke(Stroke stroke, Player targetPlayer, Action callbackOnFinished)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x10ACC70", Offset = "0x10ACC70", VA = "0x10ACC70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB388E0", Offset = "0xB388E0")]
	private IEnumerator<float> SendStrokeCoroutine(Stroke stroke, Player targetPlayer, Action callbackOnFinished)
	{
		return null;
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x10ACCFC", Offset = "0x10ACCFC", VA = "0x10ACCFC")]
	private void OnBeginLineHandler(TrTransform trTrans, Guid brushGuid, float brushSize, float pressure, Color brushColor)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x10AD49C", Offset = "0x10AD49C", VA = "0x10AD49C")]
	private void OnAddedPointRawHandler(TrTransform trTransform, float pressure)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x10AD810", Offset = "0x10AD810", VA = "0x10AD810")]
	private void OnFinishedStrokeHandler(Stroke stroke)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x10ADA18", Offset = "0x10ADA18", VA = "0x10ADA18")]
	private void OnDeleteStrokeHandler(Stroke strokeToDelete)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x10ADB00", Offset = "0x10ADB00", VA = "0x10ADB00")]
	private void OnRepaintStrokeHandler(Stroke strokeToModify, Color brushColor, Guid brushGuid)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x10AD81C", Offset = "0x10AD81C", VA = "0x10AD81C")]
	public void SendFinishedStroke(Stroke newStroke, bool isGeometryEnabled = true, [Optional] Player targetPlayer)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x10ADD54", Offset = "0x10ADD54", VA = "0x10ADD54")]
	public void SendSetStrokeCanvas(string strokeGuid, string canvasGuid, [Optional] Player targetPlayer)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x10ACE10", Offset = "0x10ACE10", VA = "0x10ACE10")]
	public void SendBeginLine(TrTransform trTransform, Guid brushGuid, float brushSize, float pressure, Color brushColor, string canvasGuid, [Optional] Player targetPlayer)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x10AD4C8", Offset = "0x10AD4C8", VA = "0x10AD4C8")]
	public void SendNewPointRaw(TrTransform trTransform, float pressure, [Optional] Player targetPlayer)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x10ADEC4", Offset = "0x10ADEC4", VA = "0x10ADEC4")]
	public void SendBatchOfRawPoints(Vector3[] translation, Quaternion[] rotation, float[] scale, float[] pressure, [Optional] Player targetPlayer)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x10AC210", Offset = "0x10AC210", VA = "0x10AC210")]
	public void BeginLineFromMessage(Vector3 translation, Quaternion rotation, float scale, string brushGuid, float brushSize, float pressure, float r, float g, float b, float a, string canvasGuid)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x10AC438", Offset = "0x10AC438", VA = "0x10AC438")]
	public void AddPointRawFromMessage(Vector3 translation, Quaternion rotation, float scale, float pressure)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x10AC670", Offset = "0x10AC670", VA = "0x10AC670")]
	public void DetachLineFromMessage(string strokeGuid, bool isGeometryEnabled)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x10ACC08", Offset = "0x10ACC08", VA = "0x10ACC08")]
	public bool SetStrokeCanvasFromMessage(string strokeGuid, string canvasGuid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x10AC72C", Offset = "0x10AC72C", VA = "0x10AC72C")]
	public bool DeleteStrokeFromMessage(string strokeGuid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x10AC7D0", Offset = "0x10AC7D0", VA = "0x10AC7D0")]
	public bool RepaintStrokeFromMessage(string strokeGuid, float r, float g, float b, float a, string newBrushGuid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x10AC8D8", Offset = "0x10AC8D8", VA = "0x10AC8D8")]
	public void AddBatchOfRawPointsFromMessage(Vector3[] translation, Quaternion[] rotation, float[] scale, float[] pressure)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x10AE05C", Offset = "0x10AE05C", VA = "0x10AE05C")]
	[PunRPC]
	public void BeginLineRpc(Vector3 translation, Quaternion rotation, float scale, string brushGuid, float brushSize, float pressure, float r, float g, float b, float a, string canvasGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x10AE584", Offset = "0x10AE584", VA = "0x10AE584")]
	[PunRPC]
	public void AddPointRawRpc(Vector3 translation, Quaternion rotation, float scale, float pressure, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x10AE8D4", Offset = "0x10AE8D4", VA = "0x10AE8D4")]
	[PunRPC]
	public void DetachLineRpc(string strokeGuid, bool isGeometryEnabled, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x10AEB20", Offset = "0x10AEB20", VA = "0x10AEB20")]
	[PunRPC]
	public void SetStrokeCanvasRPC(string strokeGuid, string canvasGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x10AED34", Offset = "0x10AED34", VA = "0x10AED34")]
	[PunRPC]
	public void DeleteStrokeRpc(string strokeGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x10AEED8", Offset = "0x10AEED8", VA = "0x10AEED8")]
	[PunRPC]
	public void RepositionStrokeRpc(string strokeGuid, Vector3 translation, Quaternion rotation, float scale, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x10AF1D8", Offset = "0x10AF1D8", VA = "0x10AF1D8")]
	[PunRPC]
	public void RepaintStrokeRpc(string strokeGuid, float r, float g, float b, float a, string newBrushGuid, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x10AF508", Offset = "0x10AF508", VA = "0x10AF508")]
	[PunRPC]
	public void AddBatchOfRawPointsRpc(Vector3[] translations, Quaternion[] rotations, float[] scales, float[] pressures, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x10AF78C", Offset = "0x10AF78C", VA = "0x10AF78C")]
	public NetworkedPointer()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OculusPresenceController : MonoBehaviour
{
	[Token(Token = "0x400067A")]
	private const string API_PRESENCE_KEY = "MultiBrushRoom";

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xFD4D8C", Offset = "0xFD4D8C", VA = "0xFD4D8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xFD4F30", Offset = "0xFD4F30", VA = "0xFD4F30")]
	public static void UpdateGroupPresenceWithPhotonRoom(Photon.Realtime.Room photonRoom)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xFD52C8", Offset = "0xFD52C8", VA = "0xFD52C8")]
	public static void UpdateJoinabilityWithPhotonRoom(Photon.Realtime.Room photonRoom)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xFD5328", Offset = "0xFD5328", VA = "0xFD5328")]
	public static void UpdateGroupPresenceForNoRoom()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xFD5330", Offset = "0xFD5330", VA = "0xFD5330")]
	public static void LaunchInviteFlow()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xFD538C", Offset = "0xFD538C", VA = "0xFD538C")]
	private void LeaveIntentCallback(Message<GroupPresenceLeaveIntent> message)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xFD53E4", Offset = "0xFD53E4", VA = "0xFD53E4")]
	private void LaunchIntentCallback(Message<string> message)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xFD5A98", Offset = "0xFD5A98", VA = "0xFD5A98")]
	private void JoinIntentCallback(Message<GroupPresenceJoinIntent> message)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xFD5F74", Offset = "0xFD5F74", VA = "0xFD5F74")]
	public OculusPresenceController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PhotonPlayerListEntry : MonoBehaviour
{
	[Token(Token = "0x400067B")]
	private const string EXTRA_ELLIPSES = "....................................";

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color m_MasterClientNameColor;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer m_MuteRenderer;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite m_MutedSprite;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite m_NormalSprite;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_PlayerNameText;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool _CanPaint;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool _IsMuted;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _OwnerId;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1147600", Offset = "0x1147600", VA = "0x1147600")]
	public void Initialize(int playerId, string playerName, bool isMasterClient)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1147854", Offset = "0x1147854", VA = "0x1147854")]
	private void SetMuteState(bool isMuted)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1147818", Offset = "0x1147818", VA = "0x1147818")]
	private void SetMuteStateVisual(bool isMuted)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1147974", Offset = "0x1147974", VA = "0x1147974")]
	public void ToggleMuteState()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1147984", Offset = "0x1147984", VA = "0x1147984")]
	public PhotonPlayerListEntry()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PhotonRoomData
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C054", Offset = "0xB2C054")]
	private string <Name>k__BackingField;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C064", Offset = "0xB2C064")]
	private string <DisplayName>k__BackingField;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C074", Offset = "0xB2C074")]
	private int <MaxUsers>k__BackingField;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C084", Offset = "0xB2C084")]
	private int <NumUsers>k__BackingField;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C094", Offset = "0xB2C094")]
	private bool <IsPrivate>k__BackingField;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C0A4", Offset = "0xB2C0A4")]
	private bool <AvatarsEnabled>k__BackingField;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C0B4", Offset = "0xB2C0B4")]
	private string <Password>k__BackingField;

	[Token(Token = "0x17000080")]
	public string Name
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x114798C", Offset = "0x114798C", VA = "0x114798C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A10", Offset = "0xB38A10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x1147994", Offset = "0x1147994", VA = "0x1147994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A20", Offset = "0xB38A20")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public string DisplayName
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x114799C", Offset = "0x114799C", VA = "0x114799C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A30", Offset = "0xB38A30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x11479A4", Offset = "0x11479A4", VA = "0x11479A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A40", Offset = "0xB38A40")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public int MaxUsers
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x11479AC", Offset = "0x11479AC", VA = "0x11479AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A50", Offset = "0xB38A50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x11479B4", Offset = "0x11479B4", VA = "0x11479B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A60", Offset = "0xB38A60")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public int NumUsers
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x11479BC", Offset = "0x11479BC", VA = "0x11479BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A70", Offset = "0xB38A70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x11479C4", Offset = "0x11479C4", VA = "0x11479C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A80", Offset = "0xB38A80")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public bool IsPrivate
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x11479CC", Offset = "0x11479CC", VA = "0x11479CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38A90", Offset = "0xB38A90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x11479D4", Offset = "0x11479D4", VA = "0x11479D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38AA0", Offset = "0xB38AA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public bool AvatarsEnabled
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x11479E0", Offset = "0x11479E0", VA = "0x11479E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38AB0", Offset = "0xB38AB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x11479E8", Offset = "0x11479E8", VA = "0x11479E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38AC0", Offset = "0xB38AC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public string Password
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x11479F4", Offset = "0x11479F4", VA = "0x11479F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38AD0", Offset = "0xB38AD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x11479FC", Offset = "0x11479FC", VA = "0x11479FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38AE0", Offset = "0xB38AE0")]
		set
		{
		}
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1147A04", Offset = "0x1147A04", VA = "0x1147A04")]
	public PhotonRoomData()
	{
	}
}
[Token(Token = "0x20000E8")]
public class PhotonRoomsManager : MonoBehaviour, ILobbyCallbacks, IConnectionCallbacks, IMatchmakingCallbacks, IInRoomCallbacks
{
	[Token(Token = "0x400068B")]
	public const int MAX_ROOM_SIZE_WITH_AVATARS = 6;

	[Token(Token = "0x400068C")]
	public const int MAX_ROOM_SIZE_WITHOUT_AVATARS = 12;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonRoomsManager m_Instance;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Dictionary<string, RoomInfo> CachedRoomList;

	[NonSerialized]
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_AlcoveShouldStartMultiplayer;

	[NonSerialized]
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_AlcoveRoom;

	[NonSerialized]
	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_AlcoveRoomPassword;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _JoinedRoomViaAlcoveLaunch;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C0C4", Offset = "0xB2C0C4")]
	public bool m_AutoJoinRoom;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_AutoJoinRoomUsesAvatars;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool m_ForceChina;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_AutoJoinRoomName;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_AutoJoinRoomPassword;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static PhotonRoomData CurrentRoomData;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _IntroComplete;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1147A0C", Offset = "0x1147A0C", VA = "0x1147A0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1147B40", Offset = "0x1147B40", VA = "0x1147B40")]
	private void OnIntroComplete()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x114835C", Offset = "0x114835C", VA = "0x114835C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1148468", Offset = "0x1148468", VA = "0x1148468")]
	private void ConnectToPhotonServer()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x11487C4", Offset = "0x11487C4", VA = "0x11487C4")]
	private void Reconnect()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x11488B4", Offset = "0x11488B4", VA = "0x11488B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1148A30", Offset = "0x1148A30", VA = "0x1148A30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1148A94", Offset = "0x1148A94", VA = "0x1148A94")]
	public void ClickJoinRoomButton(PhotonRoomData photonRoomData)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1148BEC", Offset = "0x1148BEC", VA = "0x1148BEC")]
	public void CreatePrivateRoom(string password, string roomDisplayName)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1148CD0", Offset = "0x1148CD0", VA = "0x1148CD0")]
	public void CreatePublicRoom(string roomDisplayName)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1148DB0", Offset = "0x1148DB0", VA = "0x1148DB0")]
	public static bool IsCurrentRoomPrivate()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1148ED8", Offset = "0x1148ED8", VA = "0x1148ED8")]
	public static void MakeCurrentRoomPrivate(string newPassword)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1148F38", Offset = "0x1148F38", VA = "0x1148F38")]
	public static void SetRoomPassword(string newPassword)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x114912C", Offset = "0x114912C", VA = "0x114912C")]
	public static void SetRoomDisplayName(string newRoomDisplayName)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1149320", Offset = "0x1149320", VA = "0x1149320")]
	public static void MakeCurrentRoomPublic()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x11494F4", Offset = "0x11494F4", VA = "0x11494F4")]
	public void JoinPrivateRoom(PhotonRoomData photonRoomData, string password, string roomDisplayName, [Optional] Action wrongPasswordCallback)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1148B78", Offset = "0x1148B78", VA = "0x1148B78")]
	public void JoinPublicRoom(PhotonRoomData photonRoomData)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1149798", Offset = "0x1149798", VA = "0x1149798")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38AF0", Offset = "0xB38AF0")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1147C00", Offset = "0x1147C00", VA = "0x1147C00")]
	public void CreateOrJoinPhotonRoom(string roomName, [Optional] string password, [Optional] string roomDisplayName, bool avatarsSupported = false)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1149A0C", Offset = "0x1149A0C", VA = "0x1149A0C", Slot = "4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1149BBC", Offset = "0x1149BBC", VA = "0x1149BBC", Slot = "5")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1149C40", Offset = "0x1149C40", VA = "0x1149C40", Slot = "6")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1149CFC", Offset = "0x1149CFC", VA = "0x1149CFC")]
	private void UpdateCachedRoomList(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x114A1B4", Offset = "0x114A1B4", VA = "0x114A1B4", Slot = "7")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x114A1B8", Offset = "0x114A1B8", VA = "0x114A1B8", Slot = "8")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x114A2E4", Offset = "0x114A2E4", VA = "0x114A2E4", Slot = "9")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x114A340", Offset = "0x114A340", VA = "0x114A340", Slot = "10")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x114A4B0", Offset = "0x114A4B0", VA = "0x114A4B0", Slot = "11")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x114A4B4", Offset = "0x114A4B4", VA = "0x114A4B4", Slot = "12")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x114A4B8", Offset = "0x114A4B8", VA = "0x114A4B8", Slot = "13")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x114A4BC", Offset = "0x114A4BC", VA = "0x114A4BC", Slot = "14")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x114A4C0", Offset = "0x114A4C0", VA = "0x114A4C0", Slot = "15")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x114A4C4", Offset = "0x114A4C4", VA = "0x114A4C4", Slot = "16")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x114A590", Offset = "0x114A590", VA = "0x114A590", Slot = "17")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x114A770", Offset = "0x114A770", VA = "0x114A770", Slot = "18")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x114A874", Offset = "0x114A874", VA = "0x114A874", Slot = "19")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x114A878", Offset = "0x114A878", VA = "0x114A878", Slot = "20")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x114968C", Offset = "0x114968C", VA = "0x114968C")]
	private static RoomInfo GetRoomFromName(string roomName)
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x114A928", Offset = "0x114A928", VA = "0x114A928", Slot = "21")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x114AA3C", Offset = "0x114AA3C", VA = "0x114AA3C", Slot = "22")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x114AB50", Offset = "0x114AB50", VA = "0x114AB50", Slot = "23")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x114AC84", Offset = "0x114AC84", VA = "0x114AC84", Slot = "24")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x114AC88", Offset = "0x114AC88", VA = "0x114AC88", Slot = "25")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x114AD4C", Offset = "0x114AD4C", VA = "0x114AD4C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38B28", Offset = "0xB38B28")]
	public void JoinEditorRoom()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x114AD5C", Offset = "0x114AD5C", VA = "0x114AD5C")]
	public static string GetCurrentRoomName()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11498A4", Offset = "0x11498A4", VA = "0x11498A4")]
	public static void SetCurrentRoomData(string roomName, string password, string displayName, bool avatarsSupported)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x114AE3C", Offset = "0x114AE3C", VA = "0x114AE3C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB38B60", Offset = "0xB38B60")]
	public void JoinTestRoom()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x114AE4C", Offset = "0x114AE4C", VA = "0x114AE4C")]
	public PhotonRoomsManager()
	{
	}
}
[Token(Token = "0x20000E9")]
public class TiltBrushMultiplayer : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks, IOnEventCallback
{
	[Token(Token = "0x20000EA")]
	private enum MultiBrushEventCode
	{
		[Token(Token = "0x40006CB")]
		RequestStrokeList = 100,
		[Token(Token = "0x40006CC")]
		RequestStroke = 102,
		[Token(Token = "0x40006CD")]
		SendStrokeGuidBatch = 103,
		[Token(Token = "0x40006CE")]
		EndSendStrokeList = 104
	}

	[Token(Token = "0x20000EB")]
	public delegate void OnPlayerControllerTypeChangedDelegate(Player player, bool isController);

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287A0", Offset = "0xB287A0")]
	private sealed class <SendRoomStateToPlayerCoroutine>d__71 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player player;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltBrushMultiplayer <>4__this;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stroke[] <>7__wrap1;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stroke <stroke>5__4;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <pointIndex>5__5;

		[Token(Token = "0x17000089")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000534")]
			[Address(RVA = "0xF253C0", Offset = "0xF253C0", VA = "0xF253C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000536")]
			[Address(RVA = "0xF25408", Offset = "0xF25408", VA = "0xF25408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xF249A0", Offset = "0xF249A0", VA = "0xF249A0")]
		[DebuggerHidden]
		public <SendRoomStateToPlayerCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xF249CC", Offset = "0xF249CC", VA = "0xF249CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xF249D0", Offset = "0xF249D0", VA = "0xF249D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xF253C8", Offset = "0xF253C8", VA = "0xF253C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287B0", Offset = "0xB287B0")]
	private sealed class <>c
	{
		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Stroke, bool> <>9__73_0;

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xF23FDC", Offset = "0xF23FDC", VA = "0xF23FDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xF23FE4", Offset = "0xF23FE4", VA = "0xF23FE4")]
		internal bool <SendStrokeListToPlayer>b__73_0(Stroke stroke)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287C0", Offset = "0xB287C0")]
	private sealed class <SendStrokeListToPlayer>d__73 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TiltBrushMultiplayer <>4__this;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player player;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stroke[] <strokesArray>5__2;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <strokeIndex>5__3;

		[Token(Token = "0x1700008B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0xF25890", Offset = "0xF25890", VA = "0xF25890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053F")]
			[Address(RVA = "0xF258D8", Offset = "0xF258D8", VA = "0xF258D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xF25468", Offset = "0xF25468", VA = "0xF25468")]
		[DebuggerHidden]
		public <SendStrokeListToPlayer>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xF25494", Offset = "0xF25494", VA = "0xF25494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xF25498", Offset = "0xF25498", VA = "0xF25498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xF25898", Offset = "0xF25898", VA = "0xF25898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287D0", Offset = "0xB287D0")]
	private sealed class <CheckReceivedStrokeListAndRequestMissingStrokes>d__74 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] receivedStrokes;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <allStrokesReceived>5__2;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string[] <>7__wrap2;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap3;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <strokeGuid>5__5;

		[Token(Token = "0x1700008D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xF24700", Offset = "0xF24700", VA = "0xF24700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000545")]
			[Address(RVA = "0xF24748", Offset = "0xF24748", VA = "0xF24748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xF24424", Offset = "0xF24424", VA = "0xF24424")]
		[DebuggerHidden]
		public <CheckReceivedStrokeListAndRequestMissingStrokes>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xF24450", Offset = "0xF24450", VA = "0xF24450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xF24454", Offset = "0xF24454", VA = "0xF24454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xF24708", Offset = "0xF24708", VA = "0xF24708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287E0", Offset = "0xB287E0")]
	private sealed class <ApplyStrokeModificationsAfterSync>d__80 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TiltBrushMultiplayer <>4__this;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkedPointer <applyStrokePointer>5__2;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<NetworkMessage> <networkMessages>5__3;

		[Token(Token = "0x1700008F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0xF2437C", Offset = "0xF2437C", VA = "0xF2437C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0xF243C4", Offset = "0xF243C4", VA = "0xF243C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xF24000", Offset = "0xF24000", VA = "0xF24000")]
		[DebuggerHidden]
		public <ApplyStrokeModificationsAfterSync>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xF2402C", Offset = "0xF2402C", VA = "0xF2402C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xF24030", Offset = "0xF24030", VA = "0xF24030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xF24384", Offset = "0xF24384", VA = "0xF24384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB287F0", Offset = "0xB287F0")]
	private sealed class <DelayedSetSceneFromRoomProps>d__97 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TiltBrushMultiplayer <>4__this;

		[Token(Token = "0x17000091")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0xF248F8", Offset = "0xF248F8", VA = "0xF248F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0xF24940", Offset = "0xF24940", VA = "0xF24940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xF247A8", Offset = "0xF247A8", VA = "0xF247A8")]
		[DebuggerHidden]
		public <DelayedSetSceneFromRoomProps>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xF247D4", Offset = "0xF247D4", VA = "0xF247D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xF247D8", Offset = "0xF247D8", VA = "0xF247D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xF24900", Offset = "0xF24900", VA = "0xF24900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DissonanceComms _CommsInstance;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DissonanceAudioRecorder _DissonanceAudioRecorderInstance;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TiltBrushMultiplayer m_Instance;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float TimeSinceRoomJoined;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Queue<NetworkMessage> OperationsWithUnmatchedStrokes;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Queue<Tuple<Player, string>> StrokesToSendForSync;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly Queue<Player> PlayersAwaitingSync;

	[Token(Token = "0x40006A2")]
	private const string PREFS_KEY_PLAYER_NAME = "PlayerName";

	[Token(Token = "0x40006A3")]
	private const string PREFS_KEY_PLAYER_GUID = "PlayerGuid";

	[Token(Token = "0x40006A4")]
	public const string ROOM_PROP_ENVIRONMENT_SETTINGS = "EnvironmentGuid";

	[Token(Token = "0x40006A5")]
	public const string ROOM_PROP_PASSWORD = "RoomPassword";

	[Token(Token = "0x40006A6")]
	public const string ROOM_PROP_DISPLAY_NAME = "RoomDisplayName";

	[Token(Token = "0x40006A7")]
	public const string ROOM_PROP_AVATARS_SUPPORTED = "AvatarsSupported";

	[Token(Token = "0x40006A8")]
	public const string ROOM_PROP_LIGHT_SETTINGS = "LightSettings";

	[Token(Token = "0x40006A9")]
	public const string ROOM_PROP_BACKDROP_SETTINGS = "BackdropSettings";

	[Token(Token = "0x40006AA")]
	public const string ROOM_PROP_FOG_SETTINGS = "FogSettings";

	[Token(Token = "0x40006AB")]
	public const string ROOM_PROP_MEMORY_MANAGEMENT_SETTINGS = "MemoryManagementSetting";

	[Token(Token = "0x40006AC")]
	public const string ROOM_PROP_DRAWING_ALLOWED = "MemoryExceeded";

	[Token(Token = "0x40006AD")]
	public const string PLAYER_PROP_PLAYER_GUID = "PlayerGuid";

	[Token(Token = "0x40006AE")]
	public const string PLAYER_PROP_CAN_PAINT = "CanPaint";

	[Token(Token = "0x40006AF")]
	public const string PLAYER_PROP_HANDS_ACTIVE = "HandsActive";

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly List<IMultiplayerStateResponsive> MultiplayerResponsiveObjects;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string LocalPlayerGuid;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool AllowGrab;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private static bool ReceivedAllBrushStrokes;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static EnvironmentSettings CurrentEnvironmentSettings;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static FogSettings CurrentFogSettings;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static BackdropSettings CurrentBackdropSettings;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static LightSettings[] CurrentLightsSettings;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C10C", Offset = "0xB2C10C")]
	public GameObject m_PhotonVoicePrefab;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_ControllerLeftPrefab;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ControllerRightPrefab;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_HeadPrefab;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_DissonanceHeadPrefab;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_NetworkedPointer;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_NetworkedCanvas;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C144", Offset = "0xB2C144")]
	public int m_InitialSceneLoadBatchSize;

	[NonSerialized]
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Photon.Voice.Unity.Recorder m_LocalRecorder;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _LeftHand;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _RightHand;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NetworkedPointer _MainPointerScript;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Dictionary<int, NetworkedPointer> _PlayerToSyncPointerDict;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly Dictionary<int, NetworkedCanvas> PlayerCanvasScripts;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static readonly Dictionary<int, GameObject> PlayerHmdsDict;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static readonly Dictionary<int, bool> PlayerMuteStates;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _ReadyToSendNewStroke;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static DateTime TimeOfLastSyncMessage;

	[Token(Token = "0x17000087")]
	public static DissonanceComms DissonanceCommsInstance
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x11698E0", Offset = "0x11698E0", VA = "0x11698E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public static DissonanceAudioRecorder DissonanceAudioRecorderInstance
	{
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x1169A18", Offset = "0x1169A18", VA = "0x1169A18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000005")]
	public static event OnPlayerControllerTypeChangedDelegate OnPlayerControllerTypeChanged
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x1169B54", Offset = "0x1169B54", VA = "0x1169B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38B98", Offset = "0xB38B98")]
		add
		{
		}
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x1169C4C", Offset = "0x1169C4C", VA = "0x1169C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38BA8", Offset = "0xB38BA8")]
		remove
		{
		}
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1169D44", Offset = "0x1169D44", VA = "0x1169D44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x116A230", Offset = "0x116A230", VA = "0x116A230")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x116A6EC", Offset = "0x116A6EC", VA = "0x116A6EC")]
	private void OnMemoryManagementStrategyChanged(MemoryExceededStrategy newMemoryManagementStrategy)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x116A8CC", Offset = "0x116A8CC", VA = "0x116A8CC")]
	private void OnMemoryExceededChanged()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x116AA70", Offset = "0x116AA70", VA = "0x116AA70")]
	private void ModifyLightCommandOnOnNewLightFinalized(LightMode lightMode, Color endColor, Quaternion endRot)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x116AE10", Offset = "0x116AE10", VA = "0x116AE10")]
	public void SetLightsFromScene()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x116B440", Offset = "0x116B440", VA = "0x116B440")]
	public void SetBackdropFromScene()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x116B7A8", Offset = "0x116B7A8", VA = "0x116B7A8")]
	public void SetFogFromScene()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x116BAA8", Offset = "0x116BAA8", VA = "0x116BAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x116C6A4", Offset = "0x116C6A4", VA = "0x116C6A4")]
	private void CreateTrackedPlayer()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x116D398", Offset = "0x116D398", VA = "0x116D398")]
	public bool CanSendRpcToPlayer(Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x116D440", Offset = "0x116D440", VA = "0x116D440")]
	private void DisableSinglePlayerOnlyObjects()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x116D5FC", Offset = "0x116D5FC", VA = "0x116D5FC")]
	private void EnableSinglePlayerOnlyObjects()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x116D7BC", Offset = "0x116D7BC", VA = "0x116D7BC")]
	private void FadingToDesiredEnvironmentHandler(Guid newEnvironment, bool hasCustomLights)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x116C298", Offset = "0x116C298", VA = "0x116C298")]
	private void SendRoomStateToPlayer(Player newPlayer)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x116D9C8", Offset = "0x116D9C8", VA = "0x116D9C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38BB8", Offset = "0xB38BB8")]
	private IEnumerator<float> SendRoomStateToPlayerCoroutine(Player player)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x116C31C", Offset = "0x116C31C", VA = "0x116C31C")]
	private void SendRequestedStrokeToPlayer(string strokeGuid, Player newPlayer)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x116DA40", Offset = "0x116DA40", VA = "0x116DA40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38C18", Offset = "0xB38C18")]
	private IEnumerator<float> SendStrokeListToPlayer(Player player)
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x116DAB8", Offset = "0x116DAB8", VA = "0x116DAB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38C78", Offset = "0xB38C78")]
	private IEnumerator<float> CheckReceivedStrokeListAndRequestMissingStrokes(string[] receivedStrokes)
	{
		return null;
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x116C0C0", Offset = "0x116C0C0", VA = "0x116C0C0")]
	public void RequestStrokeList(int actorNumberForRequest)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x116DB24", Offset = "0x116DB24", VA = "0x116DB24")]
	public NetworkedCanvas GetCanvasFromGuid(Guid canvasGuid)
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x116DD18", Offset = "0x116DD18", VA = "0x116DD18")]
	public void SetSelfMuteState(bool shouldMute)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x116DD88", Offset = "0x116DD88", VA = "0x116DD88")]
	public void SetPlayerMuteState(int playerActorNumber, bool shouldMutePlayer)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x116C020", Offset = "0x116C020", VA = "0x116C020")]
	public static void UpdateTimeOfLastSyncMessage()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x116C22C", Offset = "0x116C22C", VA = "0x116C22C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38CD8", Offset = "0xB38CD8")]
	private IEnumerator<float> ApplyStrokeModificationsAfterSync()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x116DFD4", Offset = "0x116DFD4", VA = "0x116DFD4")]
	public void ResetScene(bool skipSceneChanges = false, bool repositionAtOrigin = false)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x116E108", Offset = "0x116E108", VA = "0x116E108")]
	public static void SetPlayerName(string name)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x116A110", Offset = "0x116A110", VA = "0x116A110")]
	public static void SetPlayerHandsState(bool usingHands)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1169F54", Offset = "0x1169F54", VA = "0x1169F54")]
	public static void InitializePlayerNameForOculus()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x116E20C", Offset = "0x116E20C", VA = "0x116E20C", Slot = "9")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x116E210", Offset = "0x116E210", VA = "0x116E210", Slot = "11")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x116E214", Offset = "0x116E214", VA = "0x116E214", Slot = "12")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x116E508", Offset = "0x116E508", VA = "0x116E508")]
	public void SetupRoomFromProps()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x116E988", Offset = "0x116E988", VA = "0x116E988", Slot = "13")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x116E98C", Offset = "0x116E98C", VA = "0x116E98C", Slot = "14")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x116E990", Offset = "0x116E990", VA = "0x116E990", Slot = "10")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x116E994", Offset = "0x116E994", VA = "0x116E994", Slot = "15")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x116EC54", Offset = "0x116EC54", VA = "0x116EC54", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x116EE1C", Offset = "0x116EE1C", VA = "0x116EE1C", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x116E5E4", Offset = "0x116E5E4", VA = "0x116E5E4", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x116F2C4", Offset = "0x116F2C4", VA = "0x116F2C4")]
	private void SetNewEnvironment(EnvironmentSettings currentEnvironmentSettings)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x116FB24", Offset = "0x116FB24", VA = "0x116FB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38D38", Offset = "0xB38D38")]
	private IEnumerator<float> DelayedSetSceneFromRoomProps()
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x116F420", Offset = "0x116F420", VA = "0x116F420")]
	private void SetupSceneFromProps(ExitGames.Client.Photon.Hashtable props)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x116F86C", Offset = "0x116F86C", VA = "0x116F86C")]
	private void SetupMemoryManangerFromProps(ExitGames.Client.Photon.Hashtable props)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x116FB90", Offset = "0x116FB90", VA = "0x116FB90", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x116FCB4", Offset = "0x116FCB4", VA = "0x116FCB4", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x116FCEC", Offset = "0x116FCEC", VA = "0x116FCEC", Slot = "16")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1170020", Offset = "0x1170020", VA = "0x1170020")]
	public TiltBrushMultiplayer()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x117057C", Offset = "0x117057C", VA = "0x117057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38D98", Offset = "0xB38D98")]
	private void <SendRequestedStrokeToPlayer>b__72_0()
	{
	}
}
[Token(Token = "0x20000F2")]
public class AlcoveDeepLinkExtraData
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C17C", Offset = "0xB2C17C")]
	private string <Username>k__BackingField;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C18C", Offset = "0xB2C18C")]
	private bool <IsMultiplayer>k__BackingField;

	[Token(Token = "0x17000093")]
	public string Username
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xFE1DE0", Offset = "0xFE1DE0", VA = "0xFE1DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38F38", Offset = "0xB38F38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xFE1DE8", Offset = "0xFE1DE8", VA = "0xFE1DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38F48", Offset = "0xB38F48")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool IsMultiplayer
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xFE1DF0", Offset = "0xFE1DF0", VA = "0xFE1DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38F58", Offset = "0xB38F58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xFE1DF8", Offset = "0xFE1DF8", VA = "0xFE1DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB38F68", Offset = "0xB38F68")]
		set
		{
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xFE1E04", Offset = "0xFE1E04", VA = "0xFE1E04")]
	public AlcoveDeepLinkExtraData()
	{
	}
}
[Token(Token = "0x20000F3")]
public class AlcoveController : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsAlcoveLaunch;

	[Token(Token = "0x40006F1")]
	private const ulong ALCOVE_APP_ID = 3895528293794893uL;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhotonRoomsManager m_RoomsManager;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_ForceAlcoveLaunch;

	[Token(Token = "0x40006F4")]
	private const string VALID_PASSWORD_CHARACTERS = "abcdefghijklmnopqrstuvwxyz";

	[Token(Token = "0x40006F5")]
	private const int NUM_PASSWORD_CHARACTERS = 6;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xFE14D0", Offset = "0xFE14D0", VA = "0xFE14D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xFE1568", Offset = "0xFE1568", VA = "0xFE1568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xFE1AC4", Offset = "0xFE1AC4", VA = "0xFE1AC4")]
	[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB38F78", Offset = "0xB38F78")]
	public static string SafeCallStringMethod(AndroidJavaObject javaObject, string methodName, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xFE1844", Offset = "0xFE1844", VA = "0xFE1844")]
	private OculusDeepLinkData CheckForAlcoveLaunch()
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xFE1668", Offset = "0xFE1668", VA = "0xFE1668")]
	private void SetupForAlcove(OculusDeepLinkData launchData)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xFE14A0", Offset = "0xFE14A0", VA = "0xFE14A0")]
	public static void LaunchAlcove()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xFE1C5C", Offset = "0xFE1C5C", VA = "0xFE1C5C")]
	private OculusDeepLinkData ParseLaunchDetails(LaunchDetails launchDetails)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xFE1DD8", Offset = "0xFE1DD8", VA = "0xFE1DD8")]
	public AlcoveController()
	{
	}
}
[Token(Token = "0x20000F4")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB28800", Offset = "0xB28800")]
public class DissonanceAudioRecorder : MonoBehaviour, IMicrophoneSubscriber
{
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28814", Offset = "0xB28814")]
	private sealed class <DelayedReactivate>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DissonanceAudioRecorder <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0x11265C8", Offset = "0x11265C8", VA = "0x11265C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000572")]
			[Address(RVA = "0x1126610", Offset = "0x1126610", VA = "0x1126610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x11264BC", Offset = "0x11264BC", VA = "0x11264BC")]
		[DebuggerHidden]
		public <DelayedReactivate>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x11264E8", Offset = "0x11264E8", VA = "0x11264E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x11264EC", Offset = "0x11264EC", VA = "0x11264EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x11265D0", Offset = "0x11265D0", VA = "0x11265D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float[] MicData;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<float> _transferBuffer;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaveFormat _format;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _reset;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DissonanceComms m_Comms;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiBrushMicCapture m_Mic;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] _readyForProcessing;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xEC9E60", Offset = "0xEC9E60", VA = "0xEC9E60", Slot = "5")]
	private void Dissonance.Audio.Capture.IMicrophoneSubscriber.Reset()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xEC9F64", Offset = "0xEC9F64", VA = "0xEC9F64", Slot = "4")]
	private void Dissonance.Audio.Capture.IMicrophoneSubscriber.ReceiveMicrophoneData(ArraySegment<float> buffer, WaveFormat format)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xECA160", Offset = "0xECA160", VA = "0xECA160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xECA20C", Offset = "0xECA20C", VA = "0xECA20C")]
	private void OnAudioReactiveStateChanged()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xECA330", Offset = "0xECA330", VA = "0xECA330")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xECA3C4", Offset = "0xECA3C4", VA = "0xECA3C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xECA5E8", Offset = "0xECA5E8", VA = "0xECA5E8")]
	private void ResetAudioProcessing()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xECA5EC", Offset = "0xECA5EC", VA = "0xECA5EC")]
	private void ProcessAudio(float[] data)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xECA750", Offset = "0xECA750", VA = "0xECA750")]
	public void StopCapture()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xECA2C4", Offset = "0xECA2C4", VA = "0xECA2C4")]
	public void StartCapture()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xECA7B8", Offset = "0xECA7B8", VA = "0xECA7B8")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xECA7E4", Offset = "0xECA7E4", VA = "0xECA7E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB38F88", Offset = "0xB38F88")]
	private IEnumerator DelayedReactivate()
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xECA850", Offset = "0xECA850", VA = "0xECA850")]
	public DissonanceAudioRecorder()
	{
	}
}
[Token(Token = "0x20000F6")]
public class MultiBrushDissonancePhotonPlayer : MonoBehaviourPunCallbacks, IDissonancePlayer, IPunInstantiateMagicCallback
{
	[Token(Token = "0x20000F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28824", Offset = "0xB28824")]
	private sealed class <StartTrackingCo>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushDissonancePhotonPlayer <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600058A")]
			[Address(RVA = "0x10041D8", Offset = "0x10041D8", VA = "0x10041D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600058C")]
			[Address(RVA = "0x1004220", Offset = "0x1004220", VA = "0x1004220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x100406C", Offset = "0x100406C", VA = "0x100406C")]
		[DebuggerHidden]
		public <StartTrackingCo>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1004098", Offset = "0x1004098", VA = "0x1004098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x100409C", Offset = "0x100409C", VA = "0x100409C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x10041E0", Offset = "0x10041E0", VA = "0x10041E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Log Log;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DissonanceComms _comms;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _startCo;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C19C", Offset = "0xB2C19C")]
	private bool <IsTracking>k__BackingField;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C1AC", Offset = "0xB2C1AC")]
	private string <PlayerId>k__BackingField;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _transform;

	[Token(Token = "0x17000097")]
	public bool IsTracking
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xF41F80", Offset = "0xF41F80", VA = "0xF41F80", Slot = "58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39038", Offset = "0xB39038")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xF41F88", Offset = "0xF41F88", VA = "0xF41F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39048", Offset = "0xB39048")]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public string PlayerId
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xF41F94", Offset = "0xF41F94", VA = "0xF41F94", Slot = "54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39058", Offset = "0xB39058")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xF41F9C", Offset = "0xF41F9C", VA = "0xF41F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39068", Offset = "0xB39068")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	private Transform Transform
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xF41FA4", Offset = "0xF41FA4", VA = "0xF41FA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public Vector3 Position
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xF42030", Offset = "0xF42030", VA = "0xF42030", Slot = "55")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700009B")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xF42050", Offset = "0xF42050", VA = "0xF42050", Slot = "56")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700009C")]
	public NetworkPlayerType Type
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xF42070", Offset = "0xF42070", VA = "0xF42070", Slot = "57")]
		get
		{
			return default(NetworkPlayerType);
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<string> OnPlayerNameSet
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xF42124", Offset = "0xF42124", VA = "0xF42124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39078", Offset = "0xB39078")]
		add
		{
		}
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xF421C4", Offset = "0xF421C4", VA = "0xF421C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39088", Offset = "0xB39088")]
		remove
		{
		}
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xF42264", Offset = "0xF42264", VA = "0xF42264", Slot = "59")]
	private void Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xF425E8", Offset = "0xF425E8", VA = "0xF425E8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xF426E4", Offset = "0xF426E4", VA = "0xF426E4", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xF427FC", Offset = "0xF427FC", VA = "0xF427FC", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xF42484", Offset = "0xF42484", VA = "0xF42484")]
	[PunRPC]
	private void SetPlayerName(string playerName)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xF42720", Offset = "0xF42720", VA = "0xF42720")]
	private void StartTracking()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xF42980", Offset = "0xF42980", VA = "0xF42980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB390A8", Offset = "0xB390A8")]
	private IEnumerator StartTrackingCo()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xF42830", Offset = "0xF42830", VA = "0xF42830")]
	private void StopTracking()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xF429EC", Offset = "0xF429EC", VA = "0xF429EC")]
	public MultiBrushDissonancePhotonPlayer()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PhotonVoiceAudioReceiverForReactiveBrushes : MonoBehaviour
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceMultiBrushFloatProcessor _FloatProcessors;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonVoiceMultiBrushShortProcessor _ShortProcessor;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1023E88", Offset = "0x1023E88", VA = "0x1023E88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1023F20", Offset = "0x1023F20", VA = "0x1023F20")]
	private void PhotonVoiceCreated(PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x10241A0", Offset = "0x10241A0", VA = "0x10241A0")]
	public PhotonVoiceAudioReceiverForReactiveBrushes()
	{
	}
}
[Token(Token = "0x20000F9")]
public class PhotonVoiceMultiBrushFloatProcessor : IProcessor<float>, IDisposable
{
	[Token(Token = "0x6000590")]
	[Address(RVA = "0x10241A8", Offset = "0x10241A8", VA = "0x10241A8", Slot = "4")]
	public float[] Process(float[] buf)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1024228", Offset = "0x1024228", VA = "0x1024228", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1023F10", Offset = "0x1023F10", VA = "0x1023F10")]
	public PhotonVoiceMultiBrushFloatProcessor()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PhotonVoiceMultiBrushShortProcessor : IProcessor<short>, IDisposable
{
	[Token(Token = "0x6000593")]
	[Address(RVA = "0x102422C", Offset = "0x102422C", VA = "0x102422C", Slot = "4")]
	public short[] Process(short[] buf)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x10242AC", Offset = "0x10242AC", VA = "0x10242AC", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1023F18", Offset = "0x1023F18", VA = "0x1023F18")]
	public PhotonVoiceMultiBrushShortProcessor()
	{
	}
}
[Token(Token = "0x20000FB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB28834", Offset = "0xB28834")]
public class OculusControllerPositioningScriptableObject : ScriptableObject
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C1CC", Offset = "0xB2C1CC")]
	public Vector3 m_ControllerPointerAttachPosition;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_ControllerPointerAttachRotation;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_ControllerPointerAttachPointPosition;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_ControllerPointerAttachPointRotation;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 m_HandPointerAttachPointPosition;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 m_HandPointerAttachPointRotation;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C204", Offset = "0xB2C204")]
	public Vector3 m_PinCushionHandPosition;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 m_PinCushionHandRotation;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 m_PinCushionControllerPosition;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 m_PinCushionControllerRotation;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C23C", Offset = "0xB2C23C")]
	public Vector3 m_MainAxisHandPosition;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 m_MainAxisHandRotation;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 m_MainAxisControllerPosition;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 m_MainAxisControllerRotation;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C274", Offset = "0xB2C274")]
	public Vector3 m_BaseAnchorHandPosition;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 m_BaseAnchorHandRotation;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3 m_BaseAnchorControllerPosition;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 m_BaseAnchorControllerRotation;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C2AC", Offset = "0xB2C2AC")]
	public Vector3 m_ConsoleHandPosition;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector3 m_ConsoleHandRotation;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 m_ConsoleControllerPosition;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector3 m_ConsoleControllerRotation;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xFD17A8", Offset = "0xFD17A8", VA = "0xFD17A8")]
	public OculusControllerPositioningScriptableObject()
	{
	}
}
[Token(Token = "0x20000FC")]
public static class OculusDeepLinkController
{
	[Token(Token = "0x20000FD")]
	public delegate void DeepLinkSuccessDelegate(string message);

	[Token(Token = "0x20000FE")]
	public delegate void DeepLinkErrorDelegate(string errorMessage);

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28888", Offset = "0xB28888")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeepLinkErrorDelegate errorCallback;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeepLinkSuccessDelegate successCallback;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x10E6530", Offset = "0x10E6530", VA = "0x10E6530")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x10E6538", Offset = "0x10E6538", VA = "0x10E6538")]
		internal void <DeepLinkToApplication>b__0(Message<string> message)
		{
		}
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xFD17B0", Offset = "0xFD17B0", VA = "0xFD17B0")]
	public static OculusDeepLinkData GetDeepLinkData()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xFD1968", Offset = "0xFD1968", VA = "0xFD1968")]
	public static void DeepLinkToApplication(ulong appId, [Optional] string extraData, [Optional] string roomId, [Optional] DeepLinkErrorDelegate errorCallback, [Optional] DeepLinkSuccessDelegate successCallback)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xFD1B34", Offset = "0xFD1B34", VA = "0xFD1B34")]
	public static string GetAppIDFromConfig()
	{
		return null;
	}
}
[Token(Token = "0x2000100")]
public class OculusDeepLinkData
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C2E4", Offset = "0xB2C2E4")]
	private string <SenderAppId>k__BackingField;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C2F4", Offset = "0xB2C2F4")]
	private string <MultiplayerRoomId>k__BackingField;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2C304", Offset = "0xB2C304")]
	private string <ExtraData>k__BackingField;

	[Token(Token = "0x1700009F")]
	[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB461AC", Offset = "0xB461AC")]
	public string SenderAppId
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xFD1B64", Offset = "0xFD1B64", VA = "0xFD1B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39158", Offset = "0xB39158")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xFD1B6C", Offset = "0xFD1B6C", VA = "0xFD1B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39168", Offset = "0xB39168")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB461F4", Offset = "0xB461F4")]
	public string MultiplayerRoomId
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xFD1B74", Offset = "0xFD1B74", VA = "0xFD1B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39178", Offset = "0xB39178")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xFD1B7C", Offset = "0xFD1B7C", VA = "0xFD1B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39188", Offset = "0xB39188")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB4623C", Offset = "0xB4623C")]
	public string ExtraData
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xFD1B84", Offset = "0xFD1B84", VA = "0xFD1B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39198", Offset = "0xB39198")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xFD1B8C", Offset = "0xFD1B8C", VA = "0xFD1B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391A8", Offset = "0xB391A8")]
		set
		{
		}
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xFD1B2C", Offset = "0xFD1B2C", VA = "0xFD1B2C")]
	public OculusDeepLinkData()
	{
	}
}
[Token(Token = "0x2000101")]
public class OculusHandController : MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<OculusHandController> Hands;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C324", Offset = "0xB2C324")]
	public GameObject m_HandParent;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MultiBrushOvrHand m_AssociatedHand;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer m_AssociatedHandRenderer;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C35C", Offset = "0xB2C35C")]
	public GameObject m_ControllerParent;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C394", Offset = "0xB2C394")]
	public OculusControllerPositioningScriptableObject m_ControllerPositions;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C3CC", Offset = "0xB2C3CC")]
	public Transform m_ToolAttachAnchor;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_PointerAttachAnchor;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_PointerAttachPoint;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform m_ConsoleAttachPoint;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _WasHandsLastFrame;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _IsSetupForHands;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ControllerGeometry _ControllerGeometry;

	[Token(Token = "0x14000007")]
	public static event Action<MultiBrushOvrHand> OnHandCreated
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xFD1B94", Offset = "0xFD1B94", VA = "0xFD1B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391B8", Offset = "0xB391B8")]
		add
		{
		}
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xFD1C8C", Offset = "0xFD1C8C", VA = "0xFD1C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391C8", Offset = "0xB391C8")]
		remove
		{
		}
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xFD1D84", Offset = "0xFD1D84", VA = "0xFD1D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xFD2188", Offset = "0xFD2188", VA = "0xFD2188")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xFD22EC", Offset = "0xFD22EC", VA = "0xFD22EC")]
	private void LocalAvatarLoadedHandler(MultiBrushAvatarEntity entity)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xFD2344", Offset = "0xFD2344", VA = "0xFD2344")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xFD1F60", Offset = "0xFD1F60", VA = "0xFD1F60")]
	private void SetupForCurrentControllerState()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xFD23E4", Offset = "0xFD23E4", VA = "0xFD23E4")]
	private void SetHandsActive()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xFD25A0", Offset = "0xFD25A0", VA = "0xFD25A0")]
	private void SetControllerActive()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xFD27A4", Offset = "0xFD27A4", VA = "0xFD27A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xFD1FD8", Offset = "0xFD1FD8", VA = "0xFD1FD8")]
	public static void ResetHandVisibility()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xFD2C68", Offset = "0xFD2C68", VA = "0xFD2C68")]
	public static bool ShouldRenderHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xFD2D94", Offset = "0xFD2D94", VA = "0xFD2D94")]
	public OculusHandController()
	{
	}
}
[Token(Token = "0x2000102")]
public class OculusInputController : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsRightHandDominant;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector2 RotateAxis;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool ButtonOneDown;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool ButtonOneUp;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public static bool ButtonOneHeld;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public static bool ButtonOneClick;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool ButtonTwoDown;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool ButtonTwoUp;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool ButtonTwoHeld;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public static bool ButtonThreeDown;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool ButtonThreeUp;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool ButtonThreeHeld;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public static bool ButtonFourDown;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public static bool ButtonFourUp;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool ButtonFourHeld;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool BackButtonDown;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool BackButtonUp;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public static bool BackButtonHeld;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool TriggerDown;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool TriggerHeld;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public static bool TriggerUp;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public static bool MenuButtonDown;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Vector2 PrimaryThumbstick;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Vector2 SecondaryThumbstick;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float ScrollMultiplier;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_ScrollMultiplier;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _Rotating;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _IsMiddlePinching;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool _IsDominantHandPinching;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool _IsNonDominantHandPinching;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float FingerPinchStrength;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MultiBrushOvrHand _LeftHand;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MultiBrushOvrHand _RightHand;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_WandOnRight;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xFD3290", Offset = "0xFD3290", VA = "0xFD3290")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xFD33D4", Offset = "0xFD33D4", VA = "0xFD33D4")]
	private void HandCreatedHandler(MultiBrushOvrHand hand)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xFD3408", Offset = "0xFD3408", VA = "0xFD3408")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xFD340C", Offset = "0xFD340C", VA = "0xFD340C")]
	private void OculusUpdate()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xFD4124", Offset = "0xFD4124", VA = "0xFD4124")]
	private void ResetButtonOne()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xFD4198", Offset = "0xFD4198", VA = "0xFD4198")]
	private void ResetButtonTwo()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xFD4214", Offset = "0xFD4214", VA = "0xFD4214")]
	private void ResetButtonThree()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xFD0C74", Offset = "0xFD0C74", VA = "0xFD0C74")]
	public static bool IsHands()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xFD4288", Offset = "0xFD4288", VA = "0xFD4288")]
	public OculusInputController()
	{
	}
}
[Token(Token = "0x2000103")]
public class OculusPassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OculusPassthroughController Instance;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer m_PassthroughLayer;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _Initialized;

	[Token(Token = "0x14000008")]
	public static event Action<bool> EdgeDetectionChanged
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xFD4330", Offset = "0xFD4330", VA = "0xFD4330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391D8", Offset = "0xB391D8")]
		add
		{
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xFD43F0", Offset = "0xFD43F0", VA = "0xFD43F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391E8", Offset = "0xB391E8")]
		remove
		{
		}
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xFD44B0", Offset = "0xFD44B0", VA = "0xFD44B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xFD45D0", Offset = "0xFD45D0", VA = "0xFD45D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xFD4854", Offset = "0xFD4854", VA = "0xFD4854")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xFD4908", Offset = "0xFD4908", VA = "0xFD4908")]
	public static bool IsEdgeDetectionEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xFD4980", Offset = "0xFD4980", VA = "0xFD4980")]
	public static void EnableEdgeDetection()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xFD4A20", Offset = "0xFD4A20", VA = "0xFD4A20")]
	public static void DisableEdgeDetection()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xFD4AC0", Offset = "0xFD4AC0", VA = "0xFD4AC0")]
	public static Color GetEdgeColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xFD4B38", Offset = "0xFD4B38", VA = "0xFD4B38")]
	public static void SetEdgeColor(Color edgeColor)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xFD4BC8", Offset = "0xFD4BC8", VA = "0xFD4BC8")]
	public static void ResetToDefaultVisuals()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xFD46E8", Offset = "0xFD46E8", VA = "0xFD46E8")]
	public static bool IsPassthroughEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xFD47A8", Offset = "0xFD47A8", VA = "0xFD47A8")]
	public static void EnablePassthrough()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xFD4C2C", Offset = "0xFD4C2C", VA = "0xFD4C2C")]
	public static void DisablePassthrough()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xFD4CD4", Offset = "0xFD4CD4", VA = "0xFD4CD4")]
	public OculusPassthroughController()
	{
	}
}
[Token(Token = "0x2000104")]
public abstract class PassthroughController
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int BlendOpAlpha;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly Color PassthroughColor;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static Color CachedColor;

	[Token(Token = "0x14000009")]
	public static event Action<bool> PassthroughChanged
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1142784", Offset = "0x1142784", VA = "0x1142784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB391F8", Offset = "0xB391F8")]
		add
		{
		}
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x114287C", Offset = "0x114287C", VA = "0x114287C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39208", Offset = "0xB39208")]
		remove
		{
		}
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1142974", Offset = "0x1142974", VA = "0x1142974")]
	public static bool IsPassthroughEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1142A74", Offset = "0x1142A74", VA = "0x1142A74")]
	public static void EnablePassthrough()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1142C54", Offset = "0x1142C54", VA = "0x1142C54")]
	public static void DisablePassthrough()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1142DF0", Offset = "0x1142DF0", VA = "0x1142DF0")]
	protected PassthroughController()
	{
	}
}
[Token(Token = "0x2000105")]
public class PassthroughToggleButton : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _PassthroughEnabled;

	[Token(Token = "0x170000A2")]
	public bool PassthroughEnabled
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x114346C", Offset = "0x114346C", VA = "0x114346C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1143474", Offset = "0x1143474", VA = "0x1143474")]
		set
		{
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1143508", Offset = "0x1143508", VA = "0x1143508")]
	public PassthroughToggleButton()
	{
	}
}
[Token(Token = "0x2000106")]
public class MultiBrushPicoDeviceController : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiBrushPicoDeviceController Instance;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PicoKeyboardDelegate m_KeyboardDelegate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_KeyboardTarget;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1098068", Offset = "0x1098068", VA = "0x1098068")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x10980D0", Offset = "0x10980D0", VA = "0x10980D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x10981F0", Offset = "0x10981F0", VA = "0x10981F0")]
	public static bool IsPico()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x10982C8", Offset = "0x10982C8", VA = "0x10982C8")]
	public MultiBrushPicoDeviceController()
	{
	}
}
[Token(Token = "0x2000107")]
public class PicoDependentObject : MonoBehaviour
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_ShouldBeActive;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_HideOnOtherPlatforms;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_ShouldReposition;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_PositionOffset;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x10242B0", Offset = "0x10242B0", VA = "0x10242B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1024394", Offset = "0x1024394", VA = "0x1024394")]
	public PicoDependentObject()
	{
	}
}
[Token(Token = "0x2000108")]
public class PicoKeyboardDelegate : ImeDelegateBase
{
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28898", Offset = "0xB28898")]
	private sealed class <HideKeyboardWithSingleFrameDelay>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PicoKeyboardDelegate <>4__this;

		[Token(Token = "0x170000A3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x10E9BF8", Offset = "0x10E9BF8", VA = "0x10E9BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x10E9C40", Offset = "0x10E9C40", VA = "0x10E9C40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x10E9B70", Offset = "0x10E9B70", VA = "0x10E9B70")]
		[DebuggerHidden]
		public <HideKeyboardWithSingleFrameDelay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x10E9B9C", Offset = "0x10E9B9C", VA = "0x10E9B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x10E9BA0", Offset = "0x10E9BA0", VA = "0x10E9BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x10E9C00", Offset = "0x10E9C00", VA = "0x10E9C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB288A8", Offset = "0xB288A8")]
	private sealed class <OnKeyboardInitializedInJava>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PicoKeyboardDelegate <>4__this;

		[Token(Token = "0x170000A5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0x10E9D30", Offset = "0x10E9D30", VA = "0x10E9D30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x10E9D78", Offset = "0x10E9D78", VA = "0x10E9D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x10E9CA0", Offset = "0x10E9CA0", VA = "0x10E9CA0")]
		[DebuggerHidden]
		public <OnKeyboardInitializedInJava>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10E9CCC", Offset = "0x10E9CCC", VA = "0x10E9CCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x10E9CD0", Offset = "0x10E9CD0", VA = "0x10E9CD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x10E9D38", Offset = "0x10E9D38", VA = "0x10E9D38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool KeyboardInitialized;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyboardPanel mKeyboardPanel;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] mKbdViews;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SGViewGatherMultiBrush mKbdView;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ImeManager mManager;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D mTexture;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 mTextureSize;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 mPtKbd;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SGClickTracker mTracker;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PvrControllerKeyboardInput controller;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x10243C8", Offset = "0x10243C8", VA = "0x10243C8", Slot = "4")]
	public override void OnIMEShow(Vector2 vSize)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1024770", Offset = "0x1024770", VA = "0x1024770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39218", Offset = "0xB39218")]
	private IEnumerator<float> HideKeyboardWithSingleFrameDelay()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x10247DC", Offset = "0x10247DC", VA = "0x10247DC", Slot = "5")]
	public override void OnIMEHide()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x102486C", Offset = "0x102486C", VA = "0x102486C", Slot = "6")]
	public override void OnIMECommit(string strCommit)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1024888", Offset = "0x1024888", VA = "0x1024888", Slot = "7")]
	public override void OnIMEKey(SGImeKey key)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x10249AC", Offset = "0x10249AC", VA = "0x10249AC", Slot = "8")]
	public override void OnIMEError(SGImeError nType, string strErr)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x10249B0", Offset = "0x10249B0", VA = "0x10249B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1024A80", Offset = "0x1024A80", VA = "0x1024A80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39278", Offset = "0xB39278")]
	private IEnumerator<float> OnKeyboardInitializedInJava()
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1024AEC", Offset = "0x1024AEC", VA = "0x1024AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x10245D8", Offset = "0x10245D8", VA = "0x10245D8")]
	private void CreateTexture(Vector2 vSize)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1024C48", Offset = "0x1024C48", VA = "0x1024C48")]
	private void DispatchMessageToAndroid(SGImeMotionEventType type, Vector2 pt)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1024D08", Offset = "0x1024D08", VA = "0x1024D08")]
	private void LogEvent(string prefix, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1024B20", Offset = "0x1024B20", VA = "0x1024B20")]
	private void CheckMouseEvent()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1024F88", Offset = "0x1024F88", VA = "0x1024F88")]
	private bool Point2UV(Ray ray, ref Vector2 ptUV)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1025108", Offset = "0x1025108", VA = "0x1025108")]
	public PicoKeyboardDelegate()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1025178", Offset = "0x1025178", VA = "0x1025178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB392D8", Offset = "0xB392D8")]
	private void <Start>b__16_0()
	{
	}
}
[Token(Token = "0x200010B")]
public class SGViewGatherMultiBrush
{
	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject[] mViews;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xFBB198", Offset = "0xFBB198", VA = "0xFBB198")]
	public SGViewGatherMultiBrush(GameObject[] param)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xFBB1C4", Offset = "0xFBB1C4", VA = "0xFBB1C4")]
	public void SetActive(bool bActive)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xFBB240", Offset = "0xFBB240", VA = "0xFBB240")]
	public bool FindName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xFBB2D4", Offset = "0xFBB2D4", VA = "0xFBB2D4")]
	public void SetTexture(Texture2D tex)
	{
	}
}
[Token(Token = "0x200010C")]
public class SGClickTrackerMultiBrush
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool mDownOld;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector2 mPtOld;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private SGImeMotionEventType mEvent;

	[Token(Token = "0x400077B")]
	private const float mTrackRadius = 10f;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long mTimeDown;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mLongPressed;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private long mIntervelLongPress;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xFB9D34", Offset = "0xFB9D34", VA = "0xFB9D34")]
	public bool Track(Vector2 pt, bool bDown)
	{
		return default(bool);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xFB9FA8", Offset = "0xFB9FA8", VA = "0xFB9FA8")]
	public bool TrackOuter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xFB9FC4", Offset = "0xFB9FC4", VA = "0xFB9FC4")]
	public Vector2 GetPoint()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xFB9FCC", Offset = "0xFB9FCC", VA = "0xFB9FCC")]
	public SGImeMotionEventType GetEvent()
	{
		return default(SGImeMotionEventType);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xFB9EE0", Offset = "0xFB9EE0", VA = "0xFB9EE0")]
	private float PointDist(Vector2 ptNew, Vector2 ptOld)
	{
		return default(float);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xFB9FD4", Offset = "0xFB9FD4", VA = "0xFB9FD4")]
	public SGClickTrackerMultiBrush()
	{
	}
}
[Token(Token = "0x200010D")]
public static class PicoPassthroughController
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool IsPassthroughEnabledBool;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x10251EC", Offset = "0x10251EC", VA = "0x10251EC")]
	public static bool IsPassthroughEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1025250", Offset = "0x1025250", VA = "0x1025250")]
	public static void EnablePassthrough()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x10252C4", Offset = "0x10252C4", VA = "0x10252C4")]
	public static void DisablePassthrough()
	{
	}
}
[Token(Token = "0x200010E")]
public class PicoTextEntryPanel : MonoBehaviour
{
	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_KeyboardTarget;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1025338", Offset = "0x1025338", VA = "0x1025338")]
	public PicoTextEntryPanel()
	{
	}
}
[Token(Token = "0x200010F")]
public class PvrControllerKeyboardInput : MonoBehaviour
{
	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsKeyboardActive;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool IsKeyboardHovered;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 ReticleEndPositionForKeyboard;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector3 ReticleForwardForKeyboard;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Transform KeyboardTransform;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_RaycastLayers;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Ray ray;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x11F8550", Offset = "0x11F8550", VA = "0x11F8550")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x11F85E0", Offset = "0x11F85E0", VA = "0x11F85E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x11F8844", Offset = "0x11F8844", VA = "0x11F8844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x11F88B0", Offset = "0x11F88B0", VA = "0x11F88B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x11F891C", Offset = "0x11F891C", VA = "0x11F891C")]
	public PvrControllerKeyboardInput()
	{
	}
}
[Token(Token = "0x2000110")]
public class PlatformSpecificObjectsController : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadingScene m_LoadingSceneScript;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_OculusObject;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_PicoObject;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_RendeverFitObject;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1028CBC", Offset = "0x1028CBC", VA = "0x1028CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1028F10", Offset = "0x1028F10", VA = "0x1028F10")]
	public PlatformSpecificObjectsController()
	{
	}
}
[Token(Token = "0x2000111")]
public class RuntimeTestsController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB288B8", Offset = "0xB288B8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Stroke, bool> <>9__12_1;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Stroke, bool> <>9__12_0;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Stroke, bool> <>9__13_1;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Stroke, bool> <>9__13_0;

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x10F38EC", Offset = "0x10F38EC", VA = "0x10F38EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x10F38F4", Offset = "0x10F38F4", VA = "0x10F38F4")]
		internal bool <UncreateAll>b__12_1(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x10F3914", Offset = "0x10F3914", VA = "0x10F3914")]
		internal bool <UncreateAll>b__12_0(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x10F3934", Offset = "0x10F3934", VA = "0x10F3934")]
		internal bool <RecreateAll>b__13_1(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x10F3954", Offset = "0x10F3954", VA = "0x10F3954")]
		internal bool <RecreateAll>b__13_0(Stroke stroke)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RuntimeTestsController _Instance;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C424", Offset = "0xB2C424")]
	public int m_NumBrushStrokes;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_NumControlPointsPerStroke;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_BrushStrokeGenerationBounds;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 m_ControlPointDistanceRange;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 m_BushSizeRange;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 m_BrushPressureRange;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2C45C", Offset = "0xB2C45C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C45C", Offset = "0xB2C45C")]
	public float m_SimplificationLevel;

	[Token(Token = "0x170000A7")]
	public static RuntimeTestsController Instance
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xFB7BDC", Offset = "0xFB7BDC", VA = "0xFB7BDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xFB7CBC", Offset = "0xFB7CBC", VA = "0xFB7CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xFB7DD8", Offset = "0xFB7DD8", VA = "0xFB7DD8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB39388", Offset = "0xB39388")]
	public void GenerateBrushStrokes()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xFB8314", Offset = "0xFB8314", VA = "0xFB8314")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB393C0", Offset = "0xB393C0")]
	public void UncreateAll()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xFB885C", Offset = "0xFB885C", VA = "0xFB885C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB393F8", Offset = "0xB393F8")]
	public void RecreateAll()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xFB8DD4", Offset = "0xFB8DD4", VA = "0xFB8DD4")]
	public void Simplify()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xFB8E7C", Offset = "0xFB8E7C", VA = "0xFB8E7C")]
	private void OnSimplificationLevelChanged()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xFB828C", Offset = "0xFB828C", VA = "0xFB828C")]
	private Color GetRandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xFB8224", Offset = "0xFB8224", VA = "0xFB8224")]
	private Vector3 GetRandomPointInBounds()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xFB817C", Offset = "0xFB817C", VA = "0xFB817C")]
	private BrushDescriptor GetRandomBrush()
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xFB8F54", Offset = "0xFB8F54", VA = "0xFB8F54")]
	public RuntimeTestsController()
	{
	}
}
[Token(Token = "0x2000113")]
public class RuntimeTestsPanel : MonoBehaviour
{
	[Token(Token = "0x6000626")]
	[Address(RVA = "0xFB9108", Offset = "0xFB9108", VA = "0xFB9108")]
	public void ClickGenerate()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xFB9124", Offset = "0xFB9124", VA = "0xFB9124")]
	public void ClickUncreateAll()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xFB9140", Offset = "0xFB9140", VA = "0xFB9140")]
	public void ClickRecreateAll()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xFB915C", Offset = "0xFB915C", VA = "0xFB915C")]
	public RuntimeTestsPanel()
	{
	}
}
[Token(Token = "0x2000114")]
public class BackdropSettings
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color m_SkyColorA;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_SkyColorB;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Quaternion m_SkyOrientation;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x14380B8", Offset = "0x14380B8", VA = "0x14380B8")]
	public BackdropSettings(Color skyColorA, Color skyColorB, Quaternion skyOrientation)
	{
	}
}
[Token(Token = "0x2000115")]
public class LightSettings
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_LightMode;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color m_Color;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion m_Rotation;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x10D249C", Offset = "0x10D249C", VA = "0x10D249C")]
	public LightSettings(LightMode lightMode, Color color, Quaternion rotation)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x10D2518", Offset = "0x10D2518", VA = "0x10D2518")]
	public static CustomLights CustomLightsFromLightSettings(LightSettings[] lights)
	{
		return null;
	}
}
[Token(Token = "0x2000116")]
public class FogSettings
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color m_Color;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_Density;

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x101CFF8", Offset = "0x101CFF8", VA = "0x101CFF8")]
	public FogSettings(Color color, float density)
	{
	}
}
[Token(Token = "0x2000117")]
public class EnvironmentSettings
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Guid m_Guid;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_HasCustomLights;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xED5C38", Offset = "0xED5C38", VA = "0xED5C38")]
	public EnvironmentSettings(Guid guid, bool hasCustomLights)
	{
	}
}
[Token(Token = "0x2000118")]
public abstract class SingletonScriptableObject<T> : ScriptableObject where T : ScriptableObject
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x170000A8")]
	public static T Instance
	{
		[Token(Token = "0x600062F")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000630")]
	protected virtual void OnInitialize()
	{
	}

	[Token(Token = "0x6000631")]
	protected SingletonScriptableObject()
	{
	}
}
[Token(Token = "0x2000119")]
public class TabletUIScoreSelection : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform _selection;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text[] _text;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x11BBDD0", Offset = "0x11BBDD0", VA = "0x11BBDD0")]
	public void OnSelection(RectTransform rect)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x11BBEBC", Offset = "0x11BBEBC", VA = "0x11BBEBC")]
	public void FadeText(TMP_Text text)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x11BBEF0", Offset = "0x11BBEF0", VA = "0x11BBEF0")]
	public TabletUIScoreSelection()
	{
	}
}
[Token(Token = "0x200011A")]
public static class TransformUtilities
{
	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1176AD0", Offset = "0x1176AD0", VA = "0x1176AD0")]
	public static void SetLayerRecursively(this Transform parent, int layer)
	{
	}
}
[Token(Token = "0x200011B")]
public class WindowsDependentObject : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_ShouldBeActive;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_HideOnOtherPlatforms;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_ShouldReposition;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_PositionOffset;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xF0F150", Offset = "0xF0F150", VA = "0xF0F150")]
	private void Start()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xF0F238", Offset = "0xF0F238", VA = "0xF0F238")]
	public WindowsDependentObject()
	{
	}
}
[Token(Token = "0x200011C")]
public static class XrPluginUtils
{
	[Token(Token = "0x6000638")]
	[Address(RVA = "0x111EB58", Offset = "0x111EB58", VA = "0x111EB58")]
	public static bool IsPresent()
	{
		return default(bool);
	}
}
[Token(Token = "0x200011D")]
public class MultiBrushAvatarEntity : OvrAvatarEntity
{
	[Token(Token = "0x200011E")]
	public enum AssetSource
	{
		[Token(Token = "0x40007C1")]
		Zip,
		[Token(Token = "0x40007C2")]
		StreamingAssets
	}

	[Serializable]
	[Token(Token = "0x200011F")]
	private struct AssetData
	{
		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetSource source;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string path;
	}

	[Token(Token = "0x2000120")]
	private enum OverrideStreamLOD
	{
		[Token(Token = "0x40007C6")]
		Default,
		[Token(Token = "0x40007C7")]
		ForceHigh,
		[Token(Token = "0x40007C8")]
		ForceMedium,
		[Token(Token = "0x40007C9")]
		ForceLow
	}

	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB288D8", Offset = "0xB288D8")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushAvatarEntity <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x100401C", Offset = "0x100401C", VA = "0x100401C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0x1004064", Offset = "0x1004064", VA = "0x1004064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1003F4C", Offset = "0x1003F4C", VA = "0x1003F4C")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1003F78", Offset = "0x1003F78", VA = "0x1003F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x1003F7C", Offset = "0x1003F7C", VA = "0x1003F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1004024", Offset = "0x1004024", VA = "0x1004024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB288E8", Offset = "0xB288E8")]
	private sealed class <LoadUserAvatar>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushAvatarEntity <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065F")]
			[Address(RVA = "0x10035B4", Offset = "0x10035B4", VA = "0x10035B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000661")]
			[Address(RVA = "0x10035FC", Offset = "0x10035FC", VA = "0x10035FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1003508", Offset = "0x1003508", VA = "0x1003508")]
		[DebuggerHidden]
		public <LoadUserAvatar>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1003534", Offset = "0x1003534", VA = "0x1003534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1003538", Offset = "0x1003538", VA = "0x1003538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x10035BC", Offset = "0x10035BC", VA = "0x10035BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB288F8", Offset = "0xB288F8")]
	private sealed class <>c
	{
		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<OvrAvatarMaterial, MultiBrushAvatarEntity> <>9__48_0;

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x100310C", Offset = "0x100310C", VA = "0x100310C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1003114", Offset = "0x1003114", VA = "0x1003114")]
		internal void <UpdateMaterialsWithDesatModifiers>b__48_0(OvrAvatarMaterial block, MultiBrushAvatarEntity entity)
		{
		}
	}

	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28908", Offset = "0xB28908")]
	private sealed class <Retry_HasAvatarRequest>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushAvatarEntity <>4__this;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalAttempts>5__2;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueRetries>5__3;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <retriesRemaining>5__4;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <hasFoundAvatar>5__5;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool <requestComplete>5__6;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarRequestResultCode> <hasAvatarRequest>5__7;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0x1003EFC", Offset = "0x1003EFC", VA = "0x1003EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0x1003F44", Offset = "0x1003F44", VA = "0x1003F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1003A18", Offset = "0x1003A18", VA = "0x1003A18")]
		[DebuggerHidden]
		public <Retry_HasAvatarRequest>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1003A44", Offset = "0x1003A44", VA = "0x1003A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1003A48", Offset = "0x1003A48", VA = "0x1003A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1003F04", Offset = "0x1003F04", VA = "0x1003F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28918", Offset = "0xB28918")]
	private sealed class <AutoRetry_LoadUser>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushAvatarEntity <>4__this;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadFallbackOnFailure;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <totalAttempts>5__2;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <remainingAttempts>5__3;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <didLoadAvatar>5__4;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentPollingInterval>5__5;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x10034B8", Offset = "0x10034B8", VA = "0x10034B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1003500", Offset = "0x1003500", VA = "0x1003500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x10031E4", Offset = "0x10031E4", VA = "0x10031E4")]
		[DebuggerHidden]
		public <AutoRetry_LoadUser>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1003210", Offset = "0x1003210", VA = "0x1003210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1003214", Offset = "0x1003214", VA = "0x1003214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x10034C0", Offset = "0x10034C0", VA = "0x10034C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28928", Offset = "0xB28928")]
	private sealed class <PollForAvatarChange>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiBrushAvatarEntity <>4__this;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <waitForPollInterval>5__2;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <continueChecking>5__3;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarChangedRequestResultCode> <checkTask>5__4;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000674")]
			[Address(RVA = "0x10039C8", Offset = "0x10039C8", VA = "0x10039C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x1003A10", Offset = "0x1003A10", VA = "0x1003A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1003604", Offset = "0x1003604", VA = "0x1003604")]
		[DebuggerHidden]
		public <PollForAvatarChange>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1003630", Offset = "0x1003630", VA = "0x1003630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1003634", Offset = "0x1003634", VA = "0x1003634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x10039D0", Offset = "0x10039D0", VA = "0x10039D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AA")]
	private const string logScope = "sampleAvatar";

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C4E4", Offset = "0xB2C4E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C4E4", Offset = "0xB2C4E4")]
	[SerializeField]
	private List<AssetData> _assets;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C554", Offset = "0xB2C554")]
	[SerializeField]
	private string _assetPostfixDefault;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C5A0", Offset = "0xB2C5A0")]
	[SerializeField]
	private string _assetPostfixAndroid;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C5EC", Offset = "0xB2C5EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C5EC", Offset = "0xB2C5EC")]
	[SerializeField]
	private bool _autoCdnRetry;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C65C", Offset = "0xB2C65C")]
	[SerializeField]
	private bool _autoCheckChanges;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2C6A8", Offset = "0xB2C6A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C6A8", Offset = "0xB2C6A8")]
	private float _changeCheckInterval;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C710", Offset = "0xB2C710")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C710", Offset = "0xB2C710")]
	[SerializeField]
	private bool _debugDrawGazePos;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C780", Offset = "0xB2C780")]
	[SerializeField]
	private Color _debugDrawGazePosColor;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C7CC", Offset = "0xB2C7CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C7CC", Offset = "0xB2C7CC")]
	private OverrideStreamLOD _overrideStreamLod;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DESAT_AMOUNT_ID;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int DESAT_TINT_ID;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int DESAT_LERP_ID;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private PhotonView _PhotonView;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _LocalAvatarLayerIsSet;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Color AVATAR_FADE_DEFAULT_COLOR;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly float AVATAR_FADE_DEFAULT_COLOR_BLEND;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly float AVATAR_FADE_DEFAULT_GRAYSCALE_BLEND;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C83C", Offset = "0xB2C83C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2C83C", Offset = "0xB2C83C")]
	private float shaderGrayToSolidColorBlend_;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2C8A0", Offset = "0xB2C8A0")]
	private float shaderDesatBlend_;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	[SerializeField]
	private Color shaderSolidColor_;

	[Token(Token = "0x170000A9")]
	private bool HasLocalAvatarConfigured
	{
		[Token(Token = "0x600063B")]
		[Address(RVA = "0xF40484", Offset = "0xF40484", VA = "0xF40484")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AA")]
	public float ShaderGrayToSolidColorBlend
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xF40DB4", Offset = "0xF40DB4", VA = "0xF40DB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000646")]
		[Address(RVA = "0xF40DBC", Offset = "0xF40DBC", VA = "0xF40DBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public float ShaderDesatBlend
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0xF40F58", Offset = "0xF40F58", VA = "0xF40F58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xF40F60", Offset = "0xF40F60", VA = "0xF40F60")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public Color ShaderSolidColor
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xF40FB0", Offset = "0xF40FB0", VA = "0xF40FB0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xF40FC4", Offset = "0xF40FC4", VA = "0xF40FC4")]
		set
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action m_LocalUserHasNoAvatarEvent
	{
		[Token(Token = "0x6000639")]
		[Address(RVA = "0xF4033C", Offset = "0xF4033C", VA = "0xF4033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39440", Offset = "0xB39440")]
		add
		{
		}
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xF403E0", Offset = "0xF403E0", VA = "0xF403E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39450", Offset = "0xB39450")]
		remove
		{
		}
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xF404D8", Offset = "0xF404D8", VA = "0xF404D8", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xF406F0", Offset = "0xF406F0", VA = "0xF406F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xF40500", Offset = "0xF40500", VA = "0xF40500")]
	private void ConfigureAvatarEntity()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xF407FC", Offset = "0xF407FC", VA = "0xF407FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39460", Offset = "0xB39460")]
	protected IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xF40868", Offset = "0xF40868", VA = "0xF40868", Slot = "7")]
	protected override void OnDestroyCalled()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xF4086C", Offset = "0xF4086C", VA = "0xF4086C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB394C0", Offset = "0xB394C0")]
	private IEnumerator LoadUserAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xF408D8", Offset = "0xF408D8", VA = "0xF408D8")]
	private void LoadLocalAvatar()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xF40B60", Offset = "0xF40B60", VA = "0xF40B60")]
	public void ReloadAvatarManually(string newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xF40C14", Offset = "0xF40C14", VA = "0xF40C14")]
	public void ReloadAvatarManually(string[] newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xF41058", Offset = "0xF41058", VA = "0xF41058")]
	public void SetShaderDesat(float desatBlend, [Optional] float? grayToSolidBlend, [Optional] Color? solidColor)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xF40E0C", Offset = "0xF40E0C", VA = "0xF40E0C")]
	private void UpdateMaterialsWithDesatModifiers()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xF41130", Offset = "0xF41130", VA = "0xF41130")]
	public Transform GetSkeletonTransform(Oculus.Avatar2.CAPI.ovrAvatar2JointType jointType)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xF41284", Offset = "0xF41284", VA = "0xF41284")]
	public Transform GetFirstCriticalJoint()
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xF41358", Offset = "0xF41358", VA = "0xF41358")]
	private void UserHasNoAvatarFallback()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xF41404", Offset = "0xF41404", VA = "0xF41404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39520", Offset = "0xB39520")]
	private IEnumerator Retry_HasAvatarRequest()
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xF41470", Offset = "0xF41470", VA = "0xF41470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39580", Offset = "0xB39580")]
	private IEnumerator AutoRetry_LoadUser(bool loadFallbackOnFailure)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xF414F0", Offset = "0xF414F0", VA = "0xF414F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB395E0", Offset = "0xB395E0")]
	private IEnumerator PollForAvatarChange()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xF4155C", Offset = "0xF4155C", VA = "0xF4155C")]
	public void SetAvatarVisibility(bool isVisible, bool isFirstPerson)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xF41588", Offset = "0xF41588", VA = "0xF41588")]
	public MultiBrushAvatarEntity()
	{
	}
}
[Token(Token = "0x2000127")]
public class MultiBrushAvatarInputManager : OvrAvatarInputManager
{
	[Token(Token = "0x40007E9")]
	private const string logScope = "sampleInput";

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2C8F0", Offset = "0xB2C8F0")]
	[SerializeField]
	private OVRCameraRig _ovrCameraRig;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _useOvrCameraRig;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool _debugDrawTrackingLocations;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xF41848", Offset = "0xF41848", VA = "0xF41848")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xF418C0", Offset = "0xF418C0", VA = "0xF418C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xF419C0", Offset = "0xF419C0", VA = "0xF419C0", Slot = "5")]
	protected override void OnDestroyCalled()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xF419C8", Offset = "0xF419C8", VA = "0xF419C8")]
	public MultiBrushAvatarInputManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class MultiBrushOculusAvatarsController : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<MultiBrushAvatarEntity> OnLocalAvatarLoaded;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MultiBrushOculusAvatarsController m_Instance;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ulong MyID;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C94C", Offset = "0xB2C94C")]
	public GameObject m_AvatarPrefab;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C984", Offset = "0xB2C984")]
	public OvrAvatarBodyTrackingBehavior m_BodyTrackingBehavior;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarLipSyncContext m_LipSyncContext;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiBrushAvatarEntity m_LocalAvatar;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NetworkedPlayerHead _LocalPlayerHead;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xF44478", Offset = "0xF44478", VA = "0xF44478")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xF44540", Offset = "0xF44540", VA = "0xF44540")]
	private void CreateAvatarWithOculusId(ulong oculusId)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xF44B88", Offset = "0xF44B88", VA = "0xF44B88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xF44C18", Offset = "0xF44C18", VA = "0xF44C18")]
	private void OnLocalLocalHeadCreated(NetworkedPlayerHead head)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xF44A84", Offset = "0xF44A84", VA = "0xF44A84")]
	private void TrySetupLipSync()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xF44C20", Offset = "0xF44C20", VA = "0xF44C20")]
	private void UserHasNoAvatarHandler()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xF44C94", Offset = "0xF44C94", VA = "0xF44C94")]
	private void ShowNoAvatarFoundPanel()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xF44C98", Offset = "0xF44C98", VA = "0xF44C98", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xF44F98", Offset = "0xF44F98", VA = "0xF44F98")]
	public void SetAvatarDisplayState(bool avatarsOn)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xF44F9C", Offset = "0xF44F9C", VA = "0xF44F9C")]
	public void SetSelfAvatarDisplayState(bool selfAvatarsOn)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xF44FBC", Offset = "0xF44FBC", VA = "0xF44FBC")]
	public static void SetUserId(ulong id)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xF44CF4", Offset = "0xF44CF4", VA = "0xF44CF4")]
	public static void TryCreateAvatar(bool rebuild = false)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xF45024", Offset = "0xF45024", VA = "0xF45024")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xF45094", Offset = "0xF45094", VA = "0xF45094")]
	public MultiBrushOculusAvatarsController()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xF450EC", Offset = "0xF450EC", VA = "0xF450EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB397D0", Offset = "0xB397D0")]
	private void <CreateAvatarWithOculusId>b__9_0(OvrAvatarEntity <p0>)
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB28938", Offset = "0xB28938")]
public class PhotonNetworkedOculusAvatar : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28998", Offset = "0xB28998")]
	private sealed class <DelayedStopParticleSystem>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhotonNetworkedOculusAvatar <>4__this;

		[Token(Token = "0x170000B7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0x10E97B4", Offset = "0x10E97B4", VA = "0x10E97B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0x10E97FC", Offset = "0x10E97FC", VA = "0x10E97FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x10E9614", Offset = "0x10E9614", VA = "0x10E9614")]
		[DebuggerHidden]
		public <DelayedStopParticleSystem>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x10E9640", Offset = "0x10E9640", VA = "0x10E9640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x10E9644", Offset = "0x10E9644", VA = "0x10E9644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x10E97BC", Offset = "0x10E97BC", VA = "0x10E97BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB289A8", Offset = "0xB289A8")]
	private sealed class <TrySetVisibility>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonNetworkedOculusAvatar <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x10E9964", Offset = "0x10E9964", VA = "0x10E9964", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0x10E99AC", Offset = "0x10E99AC", VA = "0x10E99AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x10E985C", Offset = "0x10E985C", VA = "0x10E985C")]
		[DebuggerHidden]
		public <TrySetVisibility>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x10E9888", Offset = "0x10E9888", VA = "0x10E9888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x10E988C", Offset = "0x10E988C", VA = "0x10E988C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x10E996C", Offset = "0x10E996C", VA = "0x10E996C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatarEntity.StreamLOD m_CurrentStreamLod;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C9BC", Offset = "0xB2C9BC")]
	public TMP_Text m_PlayerNameText;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas m_NameTagCanvas;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 m_NameTagOffset;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_NameTagRotation;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2C9F4", Offset = "0xB2C9F4")]
	public GameObject m_ParticleEffectsObject;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_RemoveParticlesDelay;

	[NonSerialized]
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MultiBrushAvatarEntity m_AvatarEntity;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _HasReceivedFirstRealUpdate;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _HasLoadedAvatar;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _UpdateCount;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Queue<float> _PingMeasurements;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x11461B8", Offset = "0x11461B8", VA = "0x11461B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1146434", Offset = "0x1146434", VA = "0x1146434")]
	private void OnSkeletonLoaded(OvrAvatarEntity entity)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1146544", Offset = "0x1146544", VA = "0x1146544")]
	private void UpdatePlaybackTimeDelay()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x114669C", Offset = "0x114669C", VA = "0x114669C")]
	private void StopParticleSystem()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x114675C", Offset = "0x114675C", VA = "0x114675C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB397E0", Offset = "0xB397E0")]
	private IEnumerator<float> DelayedStopParticleSystem()
	{
		return null;
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x11467C8", Offset = "0x11467C8", VA = "0x11467C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1146894", Offset = "0x1146894", VA = "0x1146894", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1146B18", Offset = "0x1146B18", VA = "0x1146B18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39840", Offset = "0xB39840")]
	private IEnumerator TrySetVisibility()
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1146B84", Offset = "0x1146B84", VA = "0x1146B84")]
	public PhotonNetworkedOculusAvatar()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1146C18", Offset = "0x1146C18", VA = "0x1146C18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB398A0", Offset = "0xB398A0")]
	private void <Awake>b__12_0(OvrAvatarEntity <p0>)
	{
	}
}
[Token(Token = "0x200012C")]
public class ArFoundationUiController : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_UiCamera;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_RawImage;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_PanelDistance;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2CA2C", Offset = "0xB2CA2C")]
	public TMP_Text m_ShowOrHideBrushesToggleText;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_ShowOrHideColorsToggleText;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_BrushesPanel;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_ColorPanel;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BasePanel.PanelType _ActivePanel;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tweener _CanvasTweener;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xFEF198", Offset = "0xFEF198", VA = "0xFEF198")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xFEF4E4", Offset = "0xFEF4E4", VA = "0xFEF4E4")]
	public void OnTabletBrushesPanelVisibilityToggleValueChanged(bool newValue)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xFEF828", Offset = "0xFEF828", VA = "0xFEF828")]
	public void OnColorPanelVisibilityToggleValueChanged(bool newValue)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xFEF678", Offset = "0xFEF678", VA = "0xFEF678")]
	private void PositionPanelsInFrontOfCamera()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xFEF9BC", Offset = "0xFEF9BC", VA = "0xFEF9BC")]
	public ArFoundationUiController()
	{
	}
}
[Token(Token = "0x200012D")]
public class ClickThroughRawImage : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Camera ClickThroughCamera;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform UiTransform;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Ray CurrentRay;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera m_ClickThroughCamera;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_UiPositionTransform;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventSystem m_EventSystem;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GraphicRaycaster m_Raycaster;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PointerEventData _PointerEventData;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RaycastResult> _RaycastCache;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<int, PointerEventData> m_PointerData;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x131659C", Offset = "0x131659C", VA = "0x131659C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x13165FC", Offset = "0x13165FC", VA = "0x13165FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x13166E8", Offset = "0x13166E8", VA = "0x13166E8")]
	public void SetupRayFromEventData(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1316A18", Offset = "0x1316A18", VA = "0x1316A18", Slot = "4")]
	protected virtual PointerEventData GetMousePointerEventData()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1316C00", Offset = "0x1316C00", VA = "0x1316C00")]
	protected bool GetPointerData(int id, out PointerEventData data, bool create)
	{
		return default(bool);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1316940", Offset = "0x1316940", VA = "0x1316940")]
	private void CastMiniMapRayToWorld(Vector2 localCursor)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1316CF8", Offset = "0x1316CF8", VA = "0x1316CF8")]
	public ClickThroughRawImage()
	{
	}
}
[Token(Token = "0x200012E")]
public class DisableOnArFoundation : MonoBehaviour
{
	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xEC7BD8", Offset = "0xEC7BD8", VA = "0xEC7BD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xEC7C5C", Offset = "0xEC7C5C", VA = "0xEC7C5C")]
	public DisableOnArFoundation()
	{
	}
}
[Token(Token = "0x200012F")]
public class MultiBrushArFoundationController : MonoBehaviour
{
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _prefabToPlace;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CA74", Offset = "0xB2CA74")]
	private Camera _Camera;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ARRaycastManager _raycastManager;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ARAnchorManager _anchorManager;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<ARRaycastHit> Hits;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xF3FB9C", Offset = "0xF3FB9C", VA = "0xF3FB9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xF3FC90", Offset = "0xF3FC90", VA = "0xF3FC90")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xF3FF24", Offset = "0xF3FF24", VA = "0xF3FF24")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xF3FF28", Offset = "0xF3FF28", VA = "0xF3FF28")]
	private ARAnchor CreateAnchor(in ARRaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xF402AC", Offset = "0xF402AC", VA = "0xF402AC")]
	public MultiBrushArFoundationController()
	{
	}
}
namespace Photon.Pun
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB289B8", Offset = "0xB289B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB289B8", Offset = "0xB289B8")]
	public class OffsetPhotonTransformView : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Distance;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Angle;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_ScaleDistance;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_DesiredScale;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2CAC0", Offset = "0xB2CAC0")]
		public TrTransform m_NetworkTrTransform;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_SynchronizePosition;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_SynchronizeRotation;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool m_SynchronizeScale;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool m_InitializeWithInstantiationData;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int m_InitializationDataStartingIndex;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrTransform _GlobalCoords;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xFD7BA0", Offset = "0xFD7BA0", VA = "0xFD7BA0")]
		public void Awake()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xFD7C20", Offset = "0xFD7C20", VA = "0xFD7C20")]
		private void InitializeFromInstantiationData()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xFD7F30", Offset = "0xFD7F30", VA = "0xFD7F30")]
		public void Update()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xFD826C", Offset = "0xFD826C", VA = "0xFD826C", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xFD849C", Offset = "0xFD849C", VA = "0xFD849C")]
		public OffsetPhotonTransformView()
		{
		}
	}
	[Token(Token = "0x2000131")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28A18", Offset = "0xB28A18")]
	public class OffsetPhotonTransformViewClassic : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MultiBrushPhotonTransformViewPositionModel m_PositionModel;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MultiBrushPhotonTransformViewRotationModel m_RotationModel;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public MultiBrushPhotonTransformViewScaleModel m_ScaleModel;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MultiBrushPhotonTransformViewPositionControl m_PositionControl;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MultiBrushPhotonTransformViewRotationControl m_RotationControl;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MultiBrushPhotonTransformViewScaleControl m_ScaleControl;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PhotonView m_PhotonView;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_ReceivedNetworkUpdate;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_firstTake;

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xFD84B4", Offset = "0xFD84B4", VA = "0xFD84B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xFD85AC", Offset = "0xFD85AC", VA = "0xFD85AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xFD85B8", Offset = "0xFD85B8", VA = "0xFD85B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xFD869C", Offset = "0xFD869C", VA = "0xFD869C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xFD8734", Offset = "0xFD8734", VA = "0xFD8734")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xFD87CC", Offset = "0xFD87CC", VA = "0xFD87CC")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xFD8864", Offset = "0xFD8864", VA = "0xFD8864")]
		public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xFD8880", Offset = "0xFD8880", VA = "0xFD8880", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xFD8A80", Offset = "0xFD8A80", VA = "0xFD8A80")]
		public OffsetPhotonTransformViewClassic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public class MultiBrushPhotonTransformViewPositionModel
	{
		[Token(Token = "0x2000133")]
		public enum InterpolateOptions
		{
			[Token(Token = "0x400083E")]
			Disabled,
			[Token(Token = "0x400083F")]
			FixedSpeed,
			[Token(Token = "0x4000840")]
			EstimatedSpeed,
			[Token(Token = "0x4000841")]
			SynchronizeValues,
			[Token(Token = "0x4000842")]
			Lerp
		}

		[Token(Token = "0x2000134")]
		public enum ExtrapolateOptions
		{
			[Token(Token = "0x4000844")]
			Disabled,
			[Token(Token = "0x4000845")]
			SynchronizeValues,
			[Token(Token = "0x4000846")]
			EstimateSpeedAndTurn,
			[Token(Token = "0x4000847")]
			FixedSpeed
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool SynchronizeEnabled;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool TeleportEnabled;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TeleportIfDistanceGreaterThan;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InterpolateOptions InterpolateOption;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float InterpolateMoveTowardsSpeed;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float InterpolateLerpSpeed;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExtrapolateOptions ExtrapolateOption;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ExtrapolateSpeed;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ExtrapolateIncludingRoundTripTime;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ExtrapolateNumberOfStoredPositions;

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1097B7C", Offset = "0x1097B7C", VA = "0x1097B7C")]
		public MultiBrushPhotonTransformViewPositionModel()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class MultiBrushPhotonTransformViewPositionControl
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MultiBrushPhotonTransformViewPositionModel m_Model;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_CurrentSpeed;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double m_LastSerializeTime;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_SynchronizedSpeed;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_SynchronizedTurnSpeed;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_NetworkPosition;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Queue<Vector3> m_OldNetworkPositions;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_UpdatedPositionAfterOnSerialize;

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xF46378", Offset = "0xF46378", VA = "0xF46378")]
		public MultiBrushPhotonTransformViewPositionControl(MultiBrushPhotonTransformViewPositionModel model)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xF4641C", Offset = "0xF4641C", VA = "0xF4641C")]
		private Vector3 GetOldestStoredNetworkPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xF46498", Offset = "0xF46498", VA = "0xF46498")]
		public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xF464A4", Offset = "0xF464A4", VA = "0xF464A4")]
		public Vector3 UpdatePosition(Vector3 currentPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xF46934", Offset = "0xF46934", VA = "0xF46934")]
		public Vector3 GetNetworkPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xF46740", Offset = "0xF46740", VA = "0xF46740")]
		public Vector3 GetExtrapolatedPositionOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xF46940", Offset = "0xF46940", VA = "0xF46940")]
		public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xF46A1C", Offset = "0xF46A1C", VA = "0xF46A1C")]
		private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xF46B48", Offset = "0xF46B48", VA = "0xF46B48")]
		private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000136")]
	public class MultiBrushPhotonTransformViewRotationModel
	{
		[Token(Token = "0x2000137")]
		public enum InterpolateOptions
		{
			[Token(Token = "0x4000855")]
			Disabled,
			[Token(Token = "0x4000856")]
			RotateTowards,
			[Token(Token = "0x4000857")]
			Lerp
		}

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool SynchronizeEnabled;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InterpolateOptions InterpolateOption;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float InterpolateRotateTowardsSpeed;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float InterpolateLerpSpeed;

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1097DFC", Offset = "0x1097DFC", VA = "0x1097DFC")]
		public MultiBrushPhotonTransformViewRotationModel()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class MultiBrushPhotonTransformViewRotationControl
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MultiBrushPhotonTransformViewRotationModel m_Model;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion m_NetworkRotation;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1097BB0", Offset = "0x1097BB0", VA = "0x1097BB0")]
		public MultiBrushPhotonTransformViewRotationControl(MultiBrushPhotonTransformViewRotationModel model)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1097BDC", Offset = "0x1097BDC", VA = "0x1097BDC")]
		public Quaternion GetNetworkRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1097BE8", Offset = "0x1097BE8", VA = "0x1097BE8")]
		public Quaternion GetRotation(Quaternion currentRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1097CF0", Offset = "0x1097CF0", VA = "0x1097CF0")]
		public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000139")]
	public class MultiBrushPhotonTransformViewScaleModel
	{
		[Token(Token = "0x200013A")]
		public enum InterpolateOptions
		{
			[Token(Token = "0x400085F")]
			Disabled,
			[Token(Token = "0x4000860")]
			MoveTowards,
			[Token(Token = "0x4000861")]
			Lerp
		}

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool SynchronizeEnabled;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InterpolateOptions InterpolateOption;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float InterpolateMoveTowardsSpeed;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float InterpolateLerpSpeed;

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1098058", Offset = "0x1098058", VA = "0x1098058")]
		public MultiBrushPhotonTransformViewScaleModel()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class MultiBrushPhotonTransformViewScaleControl
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MultiBrushPhotonTransformViewScaleModel m_Model;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_NetworkScale;

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1097E18", Offset = "0x1097E18", VA = "0x1097E18")]
		public MultiBrushPhotonTransformViewScaleControl(MultiBrushPhotonTransformViewScaleModel model)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1097E58", Offset = "0x1097E58", VA = "0x1097E58")]
		public Vector3 GetNetworkScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1097E64", Offset = "0x1097E64", VA = "0x1097E64")]
		public Vector3 GetScale(Vector3 currentScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1097F4C", Offset = "0x1097F4C", VA = "0x1097F4C")]
		public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
		{
		}
	}
}
namespace MultiBrush
{
	[Token(Token = "0x200013C")]
	public class MultiBrushInputSystem : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
	{
		[Token(Token = "0x200013D")]
		public struct UIActions
		{
			[Token(Token = "0x4000877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private MultiBrushInputSystem m_Wrapper;

			[Token(Token = "0x170000C6")]
			public InputAction Navigate
			{
				[Token(Token = "0x60006EE")]
				[Address(RVA = "0x1004230", Offset = "0x1004230", VA = "0x1004230")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C7")]
			public InputAction Submit
			{
				[Token(Token = "0x60006EF")]
				[Address(RVA = "0x100424C", Offset = "0x100424C", VA = "0x100424C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C8")]
			public InputAction Cancel
			{
				[Token(Token = "0x60006F0")]
				[Address(RVA = "0x1004268", Offset = "0x1004268", VA = "0x1004268")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C9")]
			public InputAction Point
			{
				[Token(Token = "0x60006F1")]
				[Address(RVA = "0x1004284", Offset = "0x1004284", VA = "0x1004284")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CA")]
			public InputAction Click
			{
				[Token(Token = "0x60006F2")]
				[Address(RVA = "0x10042A0", Offset = "0x10042A0", VA = "0x10042A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CB")]
			public InputAction ScrollWheel
			{
				[Token(Token = "0x60006F3")]
				[Address(RVA = "0x10042BC", Offset = "0x10042BC", VA = "0x10042BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CC")]
			public InputAction MiddleClick
			{
				[Token(Token = "0x60006F4")]
				[Address(RVA = "0x10042D8", Offset = "0x10042D8", VA = "0x10042D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CD")]
			public InputAction RightClick
			{
				[Token(Token = "0x60006F5")]
				[Address(RVA = "0x10042F4", Offset = "0x10042F4", VA = "0x10042F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CE")]
			public InputAction TrackedDevicePosition
			{
				[Token(Token = "0x60006F6")]
				[Address(RVA = "0x1004310", Offset = "0x1004310", VA = "0x1004310")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CF")]
			public InputAction TrackedDeviceOrientation
			{
				[Token(Token = "0x60006F7")]
				[Address(RVA = "0x100432C", Offset = "0x100432C", VA = "0x100432C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D0")]
			public InputAction MouseOrTouchDelta
			{
				[Token(Token = "0x60006F8")]
				[Address(RVA = "0x1004348", Offset = "0x1004348", VA = "0x1004348")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D1")]
			public bool enabled
			{
				[Token(Token = "0x60006FC")]
				[Address(RVA = "0x10043D0", Offset = "0x10043D0", VA = "0x10043D0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x1004228", Offset = "0x1004228", VA = "0x1004228")]
			public UIActions(MultiBrushInputSystem wrapper)
			{
			}

			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x1004364", Offset = "0x1004364", VA = "0x1004364")]
			public InputActionMap Get()
			{
				return null;
			}

			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x1004380", Offset = "0x1004380", VA = "0x1004380")]
			public void Enable()
			{
			}

			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x10043A8", Offset = "0x10043A8", VA = "0x10043A8")]
			public void Disable()
			{
			}

			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x10043F8", Offset = "0x10043F8", VA = "0x10043F8")]
			public static implicit operator InputActionMap(UIActions set)
			{
				return null;
			}

			[Token(Token = "0x60006FE")]
			[Address(RVA = "0x1004410", Offset = "0x1004410", VA = "0x1004410")]
			public void SetCallbacks(IUIActions instance)
			{
			}
		}

		[Token(Token = "0x200013E")]
		public interface IUIActions
		{
			[Token(Token = "0x60006FF")]
			void OnNavigate(InputAction.CallbackContext context);

			[Token(Token = "0x6000700")]
			void OnSubmit(InputAction.CallbackContext context);

			[Token(Token = "0x6000701")]
			void OnCancel(InputAction.CallbackContext context);

			[Token(Token = "0x6000702")]
			void OnPoint(InputAction.CallbackContext context);

			[Token(Token = "0x6000703")]
			void OnClick(InputAction.CallbackContext context);

			[Token(Token = "0x6000704")]
			void OnScrollWheel(InputAction.CallbackContext context);

			[Token(Token = "0x6000705")]
			void OnMiddleClick(InputAction.CallbackContext context);

			[Token(Token = "0x6000706")]
			void OnRightClick(InputAction.CallbackContext context);

			[Token(Token = "0x6000707")]
			void OnTrackedDevicePosition(InputAction.CallbackContext context);

			[Token(Token = "0x6000708")]
			void OnTrackedDeviceOrientation(InputAction.CallbackContext context);

			[Token(Token = "0x6000709")]
			void OnMouseOrTouchDelta(InputAction.CallbackContext context);
		}

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CB28", Offset = "0xB2CB28")]
		private readonly InputActionAsset <asset>k__BackingField;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly InputActionMap m_UI;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IUIActions m_UIActionsCallbackInterface;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly InputAction m_UI_Navigate;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly InputAction m_UI_Submit;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly InputAction m_UI_Cancel;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly InputAction m_UI_Point;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly InputAction m_UI_Click;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly InputAction m_UI_ScrollWheel;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly InputAction m_UI_MiddleClick;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly InputAction m_UI_RightClick;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly InputAction m_UI_TrackedDevicePosition;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly InputAction m_UI_TrackedDeviceOrientation;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly InputAction m_UI_MouseOrTouchDelta;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_KeyboardMouseSchemeIndex;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_GamepadSchemeIndex;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_TouchSchemeIndex;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_JoystickSchemeIndex;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_XRSchemeIndex;

		[Token(Token = "0x170000BB")]
		public InputActionAsset asset
		{
			[Token(Token = "0x60006D7")]
			[Address(RVA = "0xF42A90", Offset = "0xF42A90", VA = "0xF42A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39950", Offset = "0xB39950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public InputBinding? bindingMask
		{
			[Token(Token = "0x60006DA")]
			[Address(RVA = "0xF42DD4", Offset = "0xF42DD4", VA = "0xF42DD4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xF42E00", Offset = "0xF42E00", VA = "0xF42E00", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0xF42E58", Offset = "0xF42E58", VA = "0xF42E58", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006DD")]
			[Address(RVA = "0xF42EA4", Offset = "0xF42EA4", VA = "0xF42EA4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public ReadOnlyArray<InputControlScheme> controlSchemes
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0xF42EF4", Offset = "0xF42EF4", VA = "0xF42EF4", Slot = "11")]
			get
			{
				return default(ReadOnlyArray<InputControlScheme>);
			}
		}

		[Token(Token = "0x170000BF")]
		public IEnumerable<InputBinding> bindings
		{
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0xF42F9C", Offset = "0xF42F9C", VA = "0xF42F9C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public UIActions UI
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xF3E514", Offset = "0xF3E514", VA = "0xF3E514")]
			get
			{
				return default(UIActions);
			}
		}

		[Token(Token = "0x170000C1")]
		public InputControlScheme KeyboardMouseScheme
		{
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0xF43038", Offset = "0xF43038", VA = "0xF43038")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170000C2")]
		public InputControlScheme GamepadScheme
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0xF43108", Offset = "0xF43108", VA = "0xF43108")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170000C3")]
		public InputControlScheme TouchScheme
		{
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0xF431D8", Offset = "0xF431D8", VA = "0xF431D8")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170000C4")]
		public InputControlScheme JoystickScheme
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xF432A8", Offset = "0xF432A8", VA = "0xF432A8")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x170000C5")]
		public InputControlScheme XRScheme
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xF43378", Offset = "0xF43378", VA = "0xF43378")]
			get
			{
				return default(InputControlScheme);
			}
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xF42A98", Offset = "0xF42A98", VA = "0xF42A98")]
		public MultiBrushInputSystem()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xF42D6C", Offset = "0xF42D6C", VA = "0xF42D6C", Slot = "17")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xF42F10", Offset = "0xF42F10", VA = "0xF42F10", Slot = "12")]
		public bool Contains(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xF42F2C", Offset = "0xF42F2C", VA = "0xF42F2C", Slot = "15")]
		public IEnumerator<InputAction> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xF42F48", Offset = "0xF42F48", VA = "0xF42F48", Slot = "16")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xF42F64", Offset = "0xF42F64", VA = "0xF42F64", Slot = "13")]
		public void Enable()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xF42F80", Offset = "0xF42F80", VA = "0xF42F80", Slot = "14")]
		public void Disable()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xF42FB8", Offset = "0xF42FB8", VA = "0xF42FB8", Slot = "5")]
		public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
		{
			return null;
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xF42FD8", Offset = "0xF42FD8", VA = "0xF42FD8", Slot = "6")]
		public int FindBinding(InputBinding bindingMask, out InputAction action)
		{
			return default(int);
		}
	}
}
namespace VRstudios
{
	[Token(Token = "0x200013F")]
	public class TestInput : MonoBehaviour
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2CB38", Offset = "0xB2CB38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2CB38", Offset = "0xB2CB38")]
		public float renderScale;

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x11617C0", Offset = "0x11617C0", VA = "0x11617C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1161920", Offset = "0x1161920", VA = "0x1161920")]
		private void XRInput_InitializedCallback(bool success)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1161B20", Offset = "0x1161B20", VA = "0x1161B20")]
		private void XRInput_DisposedCallback()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1161B94", Offset = "0x1161B94", VA = "0x1161B94")]
		private void XRInput_ControllerConnectedCallback(Guid id, XRControllerSide side, XRInputControllerType type)
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1161C7C", Offset = "0x1161C7C", VA = "0x1161C7C")]
		private void XRInput_ControllerDisconnectedMethod(Guid id, XRControllerSide side, XRInputControllerType type)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1161D64", Offset = "0x1161D64", VA = "0x1161D64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1162658", Offset = "0x1162658", VA = "0x1162658")]
		private void PrintButton(XRControllerButton button, string name)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1162770", Offset = "0x1162770", VA = "0x1162770")]
		private void PrintAnalog(XRControllerAnalog analog, string name)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1162834", Offset = "0x1162834", VA = "0x1162834")]
		private void PrintJoystick(XRControllerJoystick joystick, string name)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1162944", Offset = "0x1162944", VA = "0x1162944")]
		public TestInput()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public enum XRInputAPIType
	{
		[Token(Token = "0x400087A")]
		AutoDetect,
		[Token(Token = "0x400087B")]
		UnityEngine_XR,
		[Token(Token = "0x400087C")]
		OpenVR,
		[Token(Token = "0x400087D")]
		OpenVR_Legacy
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB28A50", Offset = "0xB28A50")]
	public sealed class XRInput : MonoBehaviour
	{
		[Token(Token = "0x2000142")]
		public delegate void InitializedMethod(bool success);

		[Token(Token = "0x2000143")]
		public delegate void DisposedMethod();

		[Token(Token = "0x2000144")]
		public delegate void ControllerConstructionMethod(Guid id, XRControllerSide side, XRInputControllerType type);

		[Token(Token = "0x2000145")]
		private class XRControllerStateGroup
		{
			[Token(Token = "0x40008D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string name;

			[Token(Token = "0x40008D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool updateInput;

			[Token(Token = "0x40008D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XRControllerState[] state_controllers;

			[Token(Token = "0x40008D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public XRControllerState[] state_controllers_last;

			[Token(Token = "0x40008D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public XRControllerState state_controllerLeft;

			[Token(Token = "0x40008D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public XRControllerState state_controllerRight;

			[Token(Token = "0x40008D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public XRControllerState state_controllerFirst;

			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			public XRControllerState state_controllerMerged;

			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x2108330", Offset = "0x2108330", VA = "0x2108330")]
			public XRControllerStateGroup(string name, bool updateInput, Guid[] stateGuids)
			{
			}
		}

		[Token(Token = "0x2000146")]
		public delegate void ButtonEvent(XRControllerSide side, string stateGroup);

		[Token(Token = "0x2000147")]
		public delegate void AnalogEvent(XRControllerSide side, float value, string stateGroup);

		[Token(Token = "0x2000148")]
		public delegate void JoystickEvent(XRControllerSide side, Vector2 value, string stateGroup);

		[Token(Token = "0x2000149")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28A64", Offset = "0xB28A64")]
		private sealed class <Start>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public XRInput <>4__this;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForEndOfFrame <wait>5__2;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60007E3")]
				[Address(RVA = "0x21086A4", Offset = "0x21086A4", VA = "0x21086A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60007E5")]
				[Address(RVA = "0x21086EC", Offset = "0x21086EC", VA = "0x21086EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x2107B44", Offset = "0x2107B44", VA = "0x2107B44")]
			[DebuggerHidden]
			public <Start>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x2107B70", Offset = "0x2107B70", VA = "0x2107B70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x2107B74", Offset = "0x2107B74", VA = "0x2107B74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x21086AC", Offset = "0x21086AC", VA = "0x21086AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CB8C", Offset = "0xB2CB8C")]
		private static XRInput <singleton>k__BackingField;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoSetRumbleChannel;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint rumbleChannel;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool steamSDK_InUse;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRLoader loaderOverride;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XRInputAPIType apiType;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private XRInputAPI api;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool disposeAPI;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool apiInit;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool stopLoaderOnAppExit;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XRLoader loader;

		[Token(Token = "0x400088D")]
		private const int controllerStateLength = 4;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastControllerCount;

		[Token(Token = "0x400088F")]
		public const string defaultStateGroupName = "Default";

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private XRControllerStateGroup activeStateGroup;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XRControllerStateGroup switchNextFrame_StateGroup;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool switchNextFrame_DisableInputForNonActive;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, XRControllerStateGroup> stateGroups;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Guid[] stateGuids;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Guid state_controllerMerged_ID;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool enableLogging;

		[Token(Token = "0x170000D2")]
		public static XRInput singleton
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0xF0F870", Offset = "0xF0F870", VA = "0xF0F870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39960", Offset = "0xB39960")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000715")]
			[Address(RVA = "0xF0F8BC", Offset = "0xF0F8BC", VA = "0xF0F8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39970", Offset = "0xB39970")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public static event InitializedMethod InitializedCallback
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0xF0F90C", Offset = "0xF0F90C", VA = "0xF0F90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39980", Offset = "0xB39980")]
			add
			{
			}
			[Token(Token = "0x6000717")]
			[Address(RVA = "0xF0F9CC", Offset = "0xF0F9CC", VA = "0xF0F9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39990", Offset = "0xB39990")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public static event DisposedMethod DisposedCallback
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xF0FA8C", Offset = "0xF0FA8C", VA = "0xF0FA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399A0", Offset = "0xB399A0")]
			add
			{
			}
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xF0FB4C", Offset = "0xF0FB4C", VA = "0xF0FB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399B0", Offset = "0xB399B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public static event ControllerConstructionMethod ControllerConnectedCallback
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xF0FC0C", Offset = "0xF0FC0C", VA = "0xF0FC0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399C0", Offset = "0xB399C0")]
			add
			{
			}
			[Token(Token = "0x600071B")]
			[Address(RVA = "0xF0FCCC", Offset = "0xF0FCCC", VA = "0xF0FCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399D0", Offset = "0xB399D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public static event ControllerConstructionMethod ControllerDisconnectedMethod
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0xF0FD8C", Offset = "0xF0FD8C", VA = "0xF0FD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399E0", Offset = "0xB399E0")]
			add
			{
			}
			[Token(Token = "0x600071D")]
			[Address(RVA = "0xF0FE4C", Offset = "0xF0FE4C", VA = "0xF0FE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB399F0", Offset = "0xB399F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public static event ButtonEvent ButtonTriggerOnEvent
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xF12760", Offset = "0xF12760", VA = "0xF12760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39A60", Offset = "0xB39A60")]
			add
			{
			}
			[Token(Token = "0x600072F")]
			[Address(RVA = "0xF12820", Offset = "0xF12820", VA = "0xF12820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39A70", Offset = "0xB39A70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event ButtonEvent ButtonTriggerDownEvent
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0xF128E0", Offset = "0xF128E0", VA = "0xF128E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39A80", Offset = "0xB39A80")]
			add
			{
			}
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xF129A0", Offset = "0xF129A0", VA = "0xF129A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39A90", Offset = "0xB39A90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event ButtonEvent ButtonTriggerUpEvent
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xF12A60", Offset = "0xF12A60", VA = "0xF12A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AA0", Offset = "0xB39AA0")]
			add
			{
			}
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xF12B20", Offset = "0xF12B20", VA = "0xF12B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AB0", Offset = "0xB39AB0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event ButtonEvent ButtonJoystickOnEvent
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0xF12BE0", Offset = "0xF12BE0", VA = "0xF12BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AC0", Offset = "0xB39AC0")]
			add
			{
			}
			[Token(Token = "0x6000735")]
			[Address(RVA = "0xF12CA0", Offset = "0xF12CA0", VA = "0xF12CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AD0", Offset = "0xB39AD0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event ButtonEvent ButtonJoystickDownEvent
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0xF12D60", Offset = "0xF12D60", VA = "0xF12D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AE0", Offset = "0xB39AE0")]
			add
			{
			}
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xF12E20", Offset = "0xF12E20", VA = "0xF12E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39AF0", Offset = "0xB39AF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event ButtonEvent ButtonJoystickUpEvent
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xF12EE0", Offset = "0xF12EE0", VA = "0xF12EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B00", Offset = "0xB39B00")]
			add
			{
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xF12FA0", Offset = "0xF12FA0", VA = "0xF12FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B10", Offset = "0xB39B10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event ButtonEvent ButtonJoystick2OnEvent
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xF13060", Offset = "0xF13060", VA = "0xF13060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B20", Offset = "0xB39B20")]
			add
			{
			}
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xF13120", Offset = "0xF13120", VA = "0xF13120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B30", Offset = "0xB39B30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event ButtonEvent ButtonJoystick2DownEvent
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xF131E0", Offset = "0xF131E0", VA = "0xF131E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B40", Offset = "0xB39B40")]
			add
			{
			}
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xF132A0", Offset = "0xF132A0", VA = "0xF132A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B50", Offset = "0xB39B50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event ButtonEvent ButtonJoystick2UpEvent
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xF13360", Offset = "0xF13360", VA = "0xF13360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B60", Offset = "0xB39B60")]
			add
			{
			}
			[Token(Token = "0x600073F")]
			[Address(RVA = "0xF13420", Offset = "0xF13420", VA = "0xF13420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B70", Offset = "0xB39B70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event ButtonEvent ButtonGripOnEvent
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xF134E0", Offset = "0xF134E0", VA = "0xF134E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B80", Offset = "0xB39B80")]
			add
			{
			}
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xF135A0", Offset = "0xF135A0", VA = "0xF135A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39B90", Offset = "0xB39B90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public static event ButtonEvent ButtonGripDownEvent
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xF13660", Offset = "0xF13660", VA = "0xF13660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BA0", Offset = "0xB39BA0")]
			add
			{
			}
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xF13720", Offset = "0xF13720", VA = "0xF13720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BB0", Offset = "0xB39BB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public static event ButtonEvent ButtonGripUpEvent
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xF137E0", Offset = "0xF137E0", VA = "0xF137E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BC0", Offset = "0xB39BC0")]
			add
			{
			}
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xF138A0", Offset = "0xF138A0", VA = "0xF138A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BD0", Offset = "0xB39BD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public static event ButtonEvent ButtonMenuOnEvent
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xF13960", Offset = "0xF13960", VA = "0xF13960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BE0", Offset = "0xB39BE0")]
			add
			{
			}
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xF13A20", Offset = "0xF13A20", VA = "0xF13A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39BF0", Offset = "0xB39BF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public static event ButtonEvent ButtonMenuDownEvent
		{
			[Token(Token = "0x6000748")]
			[Address(RVA = "0xF13AE0", Offset = "0xF13AE0", VA = "0xF13AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C00", Offset = "0xB39C00")]
			add
			{
			}
			[Token(Token = "0x6000749")]
			[Address(RVA = "0xF13BA0", Offset = "0xF13BA0", VA = "0xF13BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C10", Offset = "0xB39C10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event ButtonEvent ButtonMenuUpEvent
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xF13C60", Offset = "0xF13C60", VA = "0xF13C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C20", Offset = "0xB39C20")]
			add
			{
			}
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xF13D20", Offset = "0xF13D20", VA = "0xF13D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C30", Offset = "0xB39C30")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public static event ButtonEvent Button1OnEvent
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0xF13DE0", Offset = "0xF13DE0", VA = "0xF13DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C40", Offset = "0xB39C40")]
			add
			{
			}
			[Token(Token = "0x600074D")]
			[Address(RVA = "0xF13EA0", Offset = "0xF13EA0", VA = "0xF13EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C50", Offset = "0xB39C50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event ButtonEvent Button1DownEvent
		{
			[Token(Token = "0x600074E")]
			[Address(RVA = "0xF13F60", Offset = "0xF13F60", VA = "0xF13F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C60", Offset = "0xB39C60")]
			add
			{
			}
			[Token(Token = "0x600074F")]
			[Address(RVA = "0xF14020", Offset = "0xF14020", VA = "0xF14020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C70", Offset = "0xB39C70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event ButtonEvent Button1UpEvent
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0xF140E0", Offset = "0xF140E0", VA = "0xF140E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C80", Offset = "0xB39C80")]
			add
			{
			}
			[Token(Token = "0x6000751")]
			[Address(RVA = "0xF141A0", Offset = "0xF141A0", VA = "0xF141A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39C90", Offset = "0xB39C90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event ButtonEvent Button2OnEvent
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0xF14260", Offset = "0xF14260", VA = "0xF14260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CA0", Offset = "0xB39CA0")]
			add
			{
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0xF14320", Offset = "0xF14320", VA = "0xF14320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CB0", Offset = "0xB39CB0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event ButtonEvent Button2DownEvent
		{
			[Token(Token = "0x6000754")]
			[Address(RVA = "0xF143E0", Offset = "0xF143E0", VA = "0xF143E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CC0", Offset = "0xB39CC0")]
			add
			{
			}
			[Token(Token = "0x6000755")]
			[Address(RVA = "0xF144A0", Offset = "0xF144A0", VA = "0xF144A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CD0", Offset = "0xB39CD0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event ButtonEvent Button2UpEvent
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0xF14560", Offset = "0xF14560", VA = "0xF14560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CE0", Offset = "0xB39CE0")]
			add
			{
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xF14620", Offset = "0xF14620", VA = "0xF14620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39CF0", Offset = "0xB39CF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event ButtonEvent Button3OnEvent
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0xF146E0", Offset = "0xF146E0", VA = "0xF146E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D00", Offset = "0xB39D00")]
			add
			{
			}
			[Token(Token = "0x6000759")]
			[Address(RVA = "0xF147A0", Offset = "0xF147A0", VA = "0xF147A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D10", Offset = "0xB39D10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public static event ButtonEvent Button3DownEvent
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0xF14860", Offset = "0xF14860", VA = "0xF14860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D20", Offset = "0xB39D20")]
			add
			{
			}
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xF14920", Offset = "0xF14920", VA = "0xF14920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D30", Offset = "0xB39D30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public static event ButtonEvent Button3UpEvent
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0xF149E0", Offset = "0xF149E0", VA = "0xF149E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D40", Offset = "0xB39D40")]
			add
			{
			}
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xF14AA0", Offset = "0xF14AA0", VA = "0xF14AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D50", Offset = "0xB39D50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public static event ButtonEvent Button4OnEvent
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0xF14B60", Offset = "0xF14B60", VA = "0xF14B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D60", Offset = "0xB39D60")]
			add
			{
			}
			[Token(Token = "0x600075F")]
			[Address(RVA = "0xF14C20", Offset = "0xF14C20", VA = "0xF14C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D70", Offset = "0xB39D70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public static event ButtonEvent Button4DownEvent
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0xF14CE0", Offset = "0xF14CE0", VA = "0xF14CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D80", Offset = "0xB39D80")]
			add
			{
			}
			[Token(Token = "0x6000761")]
			[Address(RVA = "0xF14DA0", Offset = "0xF14DA0", VA = "0xF14DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39D90", Offset = "0xB39D90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public static event ButtonEvent Button4UpEvent
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xF14E60", Offset = "0xF14E60", VA = "0xF14E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DA0", Offset = "0xB39DA0")]
			add
			{
			}
			[Token(Token = "0x6000763")]
			[Address(RVA = "0xF14F20", Offset = "0xF14F20", VA = "0xF14F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DB0", Offset = "0xB39DB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event ButtonEvent TouchTriggerOnEvent
		{
			[Token(Token = "0x6000764")]
			[Address(RVA = "0xF14FE0", Offset = "0xF14FE0", VA = "0xF14FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DC0", Offset = "0xB39DC0")]
			add
			{
			}
			[Token(Token = "0x6000765")]
			[Address(RVA = "0xF150A0", Offset = "0xF150A0", VA = "0xF150A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DD0", Offset = "0xB39DD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event ButtonEvent TouchTriggerDownEvent
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xF15160", Offset = "0xF15160", VA = "0xF15160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DE0", Offset = "0xB39DE0")]
			add
			{
			}
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xF15220", Offset = "0xF15220", VA = "0xF15220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39DF0", Offset = "0xB39DF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event ButtonEvent TouchTriggerUpEvent
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xF152E0", Offset = "0xF152E0", VA = "0xF152E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E00", Offset = "0xB39E00")]
			add
			{
			}
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xF153A0", Offset = "0xF153A0", VA = "0xF153A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E10", Offset = "0xB39E10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event ButtonEvent TouchJoystickOnEvent
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xF15460", Offset = "0xF15460", VA = "0xF15460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E20", Offset = "0xB39E20")]
			add
			{
			}
			[Token(Token = "0x600076B")]
			[Address(RVA = "0xF15520", Offset = "0xF15520", VA = "0xF15520")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E30", Offset = "0xB39E30")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event ButtonEvent TouchJoystickDownEvent
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xF155E0", Offset = "0xF155E0", VA = "0xF155E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E40", Offset = "0xB39E40")]
			add
			{
			}
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xF156A0", Offset = "0xF156A0", VA = "0xF156A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E50", Offset = "0xB39E50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public static event ButtonEvent TouchJoystickUpEvent
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xF15760", Offset = "0xF15760", VA = "0xF15760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E60", Offset = "0xB39E60")]
			add
			{
			}
			[Token(Token = "0x600076F")]
			[Address(RVA = "0xF15820", Offset = "0xF15820", VA = "0xF15820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E70", Offset = "0xB39E70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event ButtonEvent TouchJoystick2OnEvent
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xF158E0", Offset = "0xF158E0", VA = "0xF158E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E80", Offset = "0xB39E80")]
			add
			{
			}
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xF159A0", Offset = "0xF159A0", VA = "0xF159A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39E90", Offset = "0xB39E90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event ButtonEvent TouchJoystick2DownEvent
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xF15A60", Offset = "0xF15A60", VA = "0xF15A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39EA0", Offset = "0xB39EA0")]
			add
			{
			}
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xF15B20", Offset = "0xF15B20", VA = "0xF15B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39EB0", Offset = "0xB39EB0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event ButtonEvent TouchJoystick2UpEvent
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0xF15BE0", Offset = "0xF15BE0", VA = "0xF15BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39EC0", Offset = "0xB39EC0")]
			add
			{
			}
			[Token(Token = "0x6000775")]
			[Address(RVA = "0xF15CA0", Offset = "0xF15CA0", VA = "0xF15CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39ED0", Offset = "0xB39ED0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event ButtonEvent TouchGripOnEvent
		{
			[Token(Token = "0x6000776")]
			[Address(RVA = "0xF15D60", Offset = "0xF15D60", VA = "0xF15D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39EE0", Offset = "0xB39EE0")]
			add
			{
			}
			[Token(Token = "0x6000777")]
			[Address(RVA = "0xF15E20", Offset = "0xF15E20", VA = "0xF15E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39EF0", Offset = "0xB39EF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event ButtonEvent TouchGripDownEvent
		{
			[Token(Token = "0x6000778")]
			[Address(RVA = "0xF15EE0", Offset = "0xF15EE0", VA = "0xF15EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F00", Offset = "0xB39F00")]
			add
			{
			}
			[Token(Token = "0x6000779")]
			[Address(RVA = "0xF15FA0", Offset = "0xF15FA0", VA = "0xF15FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F10", Offset = "0xB39F10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event ButtonEvent TouchGripUpEvent
		{
			[Token(Token = "0x600077A")]
			[Address(RVA = "0xF16060", Offset = "0xF16060", VA = "0xF16060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F20", Offset = "0xB39F20")]
			add
			{
			}
			[Token(Token = "0x600077B")]
			[Address(RVA = "0xF16120", Offset = "0xF16120", VA = "0xF16120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F30", Offset = "0xB39F30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event ButtonEvent TouchMenuOnEvent
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0xF161E0", Offset = "0xF161E0", VA = "0xF161E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F40", Offset = "0xB39F40")]
			add
			{
			}
			[Token(Token = "0x600077D")]
			[Address(RVA = "0xF162A0", Offset = "0xF162A0", VA = "0xF162A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F50", Offset = "0xB39F50")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event ButtonEvent TouchMenuDownEvent
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0xF16360", Offset = "0xF16360", VA = "0xF16360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F60", Offset = "0xB39F60")]
			add
			{
			}
			[Token(Token = "0x600077F")]
			[Address(RVA = "0xF16420", Offset = "0xF16420", VA = "0xF16420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F70", Offset = "0xB39F70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public static event ButtonEvent TouchMenuUpEvent
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0xF164E0", Offset = "0xF164E0", VA = "0xF164E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F80", Offset = "0xB39F80")]
			add
			{
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0xF165A0", Offset = "0xF165A0", VA = "0xF165A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39F90", Offset = "0xB39F90")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public static event ButtonEvent Touch1OnEvent
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xF16660", Offset = "0xF16660", VA = "0xF16660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FA0", Offset = "0xB39FA0")]
			add
			{
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xF16720", Offset = "0xF16720", VA = "0xF16720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FB0", Offset = "0xB39FB0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public static event ButtonEvent Touch1DownEvent
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xF167E0", Offset = "0xF167E0", VA = "0xF167E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FC0", Offset = "0xB39FC0")]
			add
			{
			}
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xF168A0", Offset = "0xF168A0", VA = "0xF168A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FD0", Offset = "0xB39FD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public static event ButtonEvent Touch1UpEvent
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xF16960", Offset = "0xF16960", VA = "0xF16960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FE0", Offset = "0xB39FE0")]
			add
			{
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xF16A20", Offset = "0xF16A20", VA = "0xF16A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB39FF0", Offset = "0xB39FF0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public static event ButtonEvent Touch2OnEvent
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xF16AE0", Offset = "0xF16AE0", VA = "0xF16AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A000", Offset = "0xB3A000")]
			add
			{
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xF16BA0", Offset = "0xF16BA0", VA = "0xF16BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A010", Offset = "0xB3A010")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event ButtonEvent Touch2DownEvent
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xF16C60", Offset = "0xF16C60", VA = "0xF16C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A020", Offset = "0xB3A020")]
			add
			{
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xF16D20", Offset = "0xF16D20", VA = "0xF16D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A030", Offset = "0xB3A030")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event ButtonEvent Touch2UpEvent
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xF16DE0", Offset = "0xF16DE0", VA = "0xF16DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A040", Offset = "0xB3A040")]
			add
			{
			}
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xF16EA0", Offset = "0xF16EA0", VA = "0xF16EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A050", Offset = "0xB3A050")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public static event ButtonEvent Touch3OnEvent
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xF16F60", Offset = "0xF16F60", VA = "0xF16F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A060", Offset = "0xB3A060")]
			add
			{
			}
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xF17020", Offset = "0xF17020", VA = "0xF17020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A070", Offset = "0xB3A070")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event ButtonEvent Touch3DownEvent
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xF170E0", Offset = "0xF170E0", VA = "0xF170E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A080", Offset = "0xB3A080")]
			add
			{
			}
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xF171A0", Offset = "0xF171A0", VA = "0xF171A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A090", Offset = "0xB3A090")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event ButtonEvent Touch3UpEvent
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xF17260", Offset = "0xF17260", VA = "0xF17260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0A0", Offset = "0xB3A0A0")]
			add
			{
			}
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xF17320", Offset = "0xF17320", VA = "0xF17320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0B0", Offset = "0xB3A0B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event ButtonEvent Touch4OnEvent
		{
			[Token(Token = "0x6000794")]
			[Address(RVA = "0xF173E0", Offset = "0xF173E0", VA = "0xF173E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0C0", Offset = "0xB3A0C0")]
			add
			{
			}
			[Token(Token = "0x6000795")]
			[Address(RVA = "0xF174A0", Offset = "0xF174A0", VA = "0xF174A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0D0", Offset = "0xB3A0D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event ButtonEvent Touch4DownEvent
		{
			[Token(Token = "0x6000796")]
			[Address(RVA = "0xF17560", Offset = "0xF17560", VA = "0xF17560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0E0", Offset = "0xB3A0E0")]
			add
			{
			}
			[Token(Token = "0x6000797")]
			[Address(RVA = "0xF17620", Offset = "0xF17620", VA = "0xF17620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A0F0", Offset = "0xB3A0F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public static event ButtonEvent Touch4UpEvent
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xF176E0", Offset = "0xF176E0", VA = "0xF176E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A100", Offset = "0xB3A100")]
			add
			{
			}
			[Token(Token = "0x6000799")]
			[Address(RVA = "0xF177A0", Offset = "0xF177A0", VA = "0xF177A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A110", Offset = "0xB3A110")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event AnalogEvent TriggerActiveEvent
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xF17860", Offset = "0xF17860", VA = "0xF17860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A120", Offset = "0xB3A120")]
			add
			{
			}
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xF17920", Offset = "0xF17920", VA = "0xF17920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A130", Offset = "0xB3A130")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event AnalogEvent GripActiveEvent
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xF179E0", Offset = "0xF179E0", VA = "0xF179E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A140", Offset = "0xB3A140")]
			add
			{
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xF17AA0", Offset = "0xF17AA0", VA = "0xF17AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A150", Offset = "0xB3A150")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event JoystickEvent JoystickActiveEvent
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xF17B60", Offset = "0xF17B60", VA = "0xF17B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A160", Offset = "0xB3A160")]
			add
			{
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xF17C20", Offset = "0xF17C20", VA = "0xF17C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A170", Offset = "0xB3A170")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event JoystickEvent Joystick2ActiveEvent
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0xF17CE0", Offset = "0xF17CE0", VA = "0xF17CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A180", Offset = "0xB3A180")]
			add
			{
			}
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xF17DA0", Offset = "0xF17DA0", VA = "0xF17DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A190", Offset = "0xB3A190")]
			remove
			{
			}
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xF0FF0C", Offset = "0xF0FF0C", VA = "0xF0FF0C")]
		public static void AddStateGroup(string name, bool updateInput, bool setActive)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xF1005C", Offset = "0xF1005C", VA = "0xF1005C")]
		public static void RemoveStateGroup(string name)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xF101C0", Offset = "0xF101C0", VA = "0xF101C0")]
		public static void SwitchStateGroup_NextFrame(string name, bool updateInput, bool disableInputForNonActive, bool copyCurrentState)
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xF10488", Offset = "0xF10488", VA = "0xF10488")]
		public static void SwitchStateGroup_Instant(string name)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xF10520", Offset = "0xF10520", VA = "0xF10520")]
		public static string GetActiveState()
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xF10580", Offset = "0xF10580", VA = "0xF10580")]
		public static void SetStateGroupInputMode(string name, bool updateInput)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xF1062C", Offset = "0xF1062C", VA = "0xF1062C")]
		public static void SetAllStateGroupsInputMode(bool updateInput)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xF1078C", Offset = "0xF1078C", VA = "0xF1078C")]
		public static void SetActiveStateGroupInputMode(bool updateInput)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xF107F4", Offset = "0xF107F4", VA = "0xF107F4")]
		public static void SetInactiveStateGroupsInputMode(bool updateInput)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xF109A4", Offset = "0xF109A4", VA = "0xF109A4")]
		private static void UpdateStateGroupToNoInput(XRControllerStateGroup stateGroup)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xF10BB8", Offset = "0xF10BB8", VA = "0xF10BB8")]
		private static void UpdateStateGroupToExistingInput(XRControllerStateGroup stateGroupSrc, XRControllerStateGroup stateGroupDst)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xF111D8", Offset = "0xF111D8", VA = "0xF111D8")]
		internal static void Log(string message)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xF11300", Offset = "0xF11300", VA = "0xF11300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB39A00", Offset = "0xB39A00")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xF1136C", Offset = "0xF1136C", VA = "0xF1136C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xF113F4", Offset = "0xF113F4", VA = "0xF113F4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xF11490", Offset = "0xF11490", VA = "0xF11490")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xF12628", Offset = "0xF12628", VA = "0xF12628")]
		private static void TestButtonEvent(ButtonEvent onEvent, ButtonEvent downEvent, ButtonEvent upEvent, ref XRControllerButton button, XRControllerSide side, string stateGroup)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xF126D0", Offset = "0xF126D0", VA = "0xF126D0")]
		private static void TestAnalogEvent(AnalogEvent e, ref XRControllerAnalog analog, XRControllerSide side, string stateGroup)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xF126F4", Offset = "0xF126F4", VA = "0xF126F4")]
		private static void TestJoystickEvent(JoystickEvent e, ref XRControllerJoystick joystick, XRControllerSide side, string stateGroup)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xF17E60", Offset = "0xF17E60", VA = "0xF17E60")]
		public static XRControllerState ControllerState(XRController controller)
		{
			return default(XRControllerState);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xF1800C", Offset = "0xF1800C", VA = "0xF1800C")]
		public static XRControllerButton ButtonTrigger(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xF181A8", Offset = "0xF181A8", VA = "0xF181A8")]
		public static XRControllerButton ButtonJoystick(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xF1833C", Offset = "0xF1833C", VA = "0xF1833C")]
		public static XRControllerButton ButtonJoystick2(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xF184D8", Offset = "0xF184D8", VA = "0xF184D8")]
		public static XRControllerButton ButtonGrip(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xF1866C", Offset = "0xF1866C", VA = "0xF1866C")]
		public static XRControllerButton ButtonMenu(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xF18808", Offset = "0xF18808", VA = "0xF18808")]
		public static XRControllerButton Button1(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xF1899C", Offset = "0xF1899C", VA = "0xF1899C")]
		public static XRControllerButton Button2(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xF18B38", Offset = "0xF18B38", VA = "0xF18B38")]
		public static XRControllerButton Button3(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xF18CCC", Offset = "0xF18CCC", VA = "0xF18CCC")]
		public static XRControllerButton Button4(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xF18E68", Offset = "0xF18E68", VA = "0xF18E68")]
		public static XRControllerButton TouchTrigger(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xF19004", Offset = "0xF19004", VA = "0xF19004")]
		public static XRControllerButton TouchJoystick(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xF19198", Offset = "0xF19198", VA = "0xF19198")]
		public static XRControllerButton TouchJoystick2(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xF19334", Offset = "0xF19334", VA = "0xF19334")]
		public static XRControllerButton TouchGrip(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xF194C8", Offset = "0xF194C8", VA = "0xF194C8")]
		public static XRControllerButton TouchMenu(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xF19664", Offset = "0xF19664", VA = "0xF19664")]
		public static XRControllerButton Touch1(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xF197F8", Offset = "0xF197F8", VA = "0xF197F8")]
		public static XRControllerButton Touch2(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xF19994", Offset = "0xF19994", VA = "0xF19994")]
		public static XRControllerButton Touch3(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xF19B28", Offset = "0xF19B28", VA = "0xF19B28")]
		public static XRControllerButton Touch4(XRController controller)
		{
			return default(XRControllerButton);
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xF19CC4", Offset = "0xF19CC4", VA = "0xF19CC4")]
		public static XRControllerAnalog Trigger(XRController controller)
		{
			return default(XRControllerAnalog);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xF19E48", Offset = "0xF19E48", VA = "0xF19E48")]
		public static XRControllerAnalog Grip(XRController controller)
		{
			return default(XRControllerAnalog);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xF19FCC", Offset = "0xF19FCC", VA = "0xF19FCC")]
		public static XRControllerJoystick Joystick(XRController controller)
		{
			return default(XRControllerJoystick);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xF1A14C", Offset = "0xF1A14C", VA = "0xF1A14C")]
		public static XRControllerJoystick Joystick2(XRController controller)
		{
			return default(XRControllerJoystick);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xF1A2CC", Offset = "0xF1A2CC", VA = "0xF1A2CC")]
		public static bool SetRumble(XRControllerRumbleSide controller, float strength, float duration = 0.1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xF1A3F4", Offset = "0xF1A3F4", VA = "0xF1A3F4")]
		public static XRInputControllerType GetControllerType(XRInputControllerTypeSide controller)
		{
			return default(XRInputControllerType);
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xF1A554", Offset = "0xF1A554", VA = "0xF1A554")]
		public XRInput()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xF1A640", Offset = "0xF1A640", VA = "0xF1A640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1A0", Offset = "0xB3A1A0")]
		internal static void <UpdateStateGroupToNoInput>g__UpdateButton|49_0(ref XRControllerButton button)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xF1A650", Offset = "0xF1A650", VA = "0xF1A650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1B0", Offset = "0xB3A1B0")]
		internal static void <UpdateStateGroupToNoInput>g__UpdateAnalog|49_1(ref XRControllerAnalog analog)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xF1A658", Offset = "0xF1A658", VA = "0xF1A658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1C0", Offset = "0xB3A1C0")]
		internal static void <UpdateStateGroupToNoInput>g__UpdateJoystick|49_2(ref XRControllerJoystick joystick)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xF10A48", Offset = "0xF10A48", VA = "0xF10A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1D0", Offset = "0xB3A1D0")]
		internal static void <UpdateStateGroupToNoInput>g__UpdateControllerState|49_3(ref XRControllerState state)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xF1A680", Offset = "0xF1A680", VA = "0xF1A680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1E0", Offset = "0xB3A1E0")]
		internal static void <UpdateStateGroupToExistingInput>g__UpdateButton|50_0(ref XRControllerButton buttonSrc, ref XRControllerButton buttonDst)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xF1A6C4", Offset = "0xF1A6C4", VA = "0xF1A6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A1F0", Offset = "0xB3A1F0")]
		internal static void <UpdateStateGroupToExistingInput>g__UpdateAnalog|50_1(ref XRControllerAnalog analogSrc, ref XRControllerAnalog analogDst)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xF1A6D0", Offset = "0xF1A6D0", VA = "0xF1A6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A200", Offset = "0xB3A200")]
		internal static void <UpdateStateGroupToExistingInput>g__UpdateJoystick|50_2(ref XRControllerJoystick joystickSrc, ref XRControllerJoystick joystickDst)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xF10C8C", Offset = "0xF10C8C", VA = "0xF10C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A210", Offset = "0xB3A210")]
		internal static void <UpdateStateGroupToExistingInput>g__UpdateControllerState|50_3(ref XRControllerState stateSrc, ref XRControllerState stateDst)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public enum XRController
	{
		[Token(Token = "0x40008DE")]
		First,
		[Token(Token = "0x40008DF")]
		Merged,
		[Token(Token = "0x40008E0")]
		Left,
		[Token(Token = "0x40008E1")]
		Right
	}
	[Token(Token = "0x200014B")]
	public enum XRControllerSide
	{
		[Token(Token = "0x40008E3")]
		Unknown,
		[Token(Token = "0x40008E4")]
		Left,
		[Token(Token = "0x40008E5")]
		Right
	}
	[Token(Token = "0x200014C")]
	public enum XRControllerRumbleSide
	{
		[Token(Token = "0x40008E7")]
		Both,
		[Token(Token = "0x40008E8")]
		Left,
		[Token(Token = "0x40008E9")]
		Right
	}
	[Token(Token = "0x200014D")]
	public enum XRInputControllerTypeSide
	{
		[Token(Token = "0x40008EB")]
		First,
		[Token(Token = "0x40008EC")]
		Left,
		[Token(Token = "0x40008ED")]
		Right
	}
	[Token(Token = "0x200014E")]
	public enum XRInputControllerType
	{
		[Token(Token = "0x40008EF")]
		Unknown,
		[Token(Token = "0x40008F0")]
		Oculus,
		[Token(Token = "0x40008F1")]
		HTCVive,
		[Token(Token = "0x40008F2")]
		HTCViveCosmos,
		[Token(Token = "0x40008F3")]
		HTCViveWave,
		[Token(Token = "0x40008F4")]
		ValveIndex,
		[Token(Token = "0x40008F5")]
		WMR,
		[Token(Token = "0x40008F6")]
		WMR_G2
	}
	[Token(Token = "0x200014F")]
	public struct XRControllerState
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Guid id;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool connected;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public XRInputControllerType type;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRControllerSide side;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public XRControllerButton touchBumper;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public XRControllerButton touchTrigger;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public XRControllerButton touchJoystick;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public XRControllerButton touchJoystick2;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRControllerButton touchGrip;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public XRControllerButton touchMenu;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public XRControllerButton touch1;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public XRControllerButton touch2;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public XRControllerButton touch3;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public XRControllerButton touch4;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public XRControllerButton buttonBumper;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public XRControllerButton buttonTrigger;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public XRControllerButton buttonJoystick;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public XRControllerButton buttonJoystick2;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public XRControllerButton buttonGrip;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public XRControllerButton buttonMenu;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public XRControllerButton button1;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public XRControllerButton button2;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public XRControllerButton button3;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public XRControllerButton button4;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public XRControllerAnalog trigger;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public XRControllerAnalog grip;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public XRControllerJoystick joystick;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public XRControllerJoystick joystick2;
	}
	[Token(Token = "0x2000150")]
	public struct XRControllerButton
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool on;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool down;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool up;

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xF0F664", Offset = "0xF0F664", VA = "0xF0F664")]
		internal void Update(bool on)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xF0F6A0", Offset = "0xF0F6A0", VA = "0xF0F6A0")]
		internal void Merge(ref XRControllerButton button)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public struct XRControllerAnalog
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float tolerance;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float virtualButtonThreshold;

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xF0F4E8", Offset = "0xF0F4E8", VA = "0xF0F4E8")]
		internal void Update(float value)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xF0F56C", Offset = "0xF0F56C", VA = "0xF0F56C")]
		internal void Merge(ref XRControllerAnalog analog)
		{
		}
	}
	[Token(Token = "0x2000152")]
	public struct XRControllerJoystick
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 value;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float tolerance;

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xF0F6D4", Offset = "0xF0F6D4", VA = "0xF0F6D4")]
		internal void Update(Vector2 value)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xF0F780", Offset = "0xF0F780", VA = "0xF0F780")]
		internal void Merge(ref XRControllerJoystick joystick)
		{
		}
	}
}
namespace VRstudios.API
{
	[Token(Token = "0x2000153")]
	public sealed class OpenVR_Legacy : XRInputAPI
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xFD8B3C", Offset = "0xFD8B3C", VA = "0xFD8B3C", Slot = "6")]
		public override bool GatherInput(XRControllerState[] state_controllers, out int controllerCount, out bool leftSet, out int leftSetIndex, out bool rightSet, out int rightSetIndex, out SideToSet sideToSet)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xFD8B7C", Offset = "0xFD8B7C", VA = "0xFD8B7C")]
		public OpenVR_Legacy()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public sealed class OpenVR_New : XRInputAPI
	{
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xFD8B84", Offset = "0xFD8B84", VA = "0xFD8B84", Slot = "6")]
		public override bool GatherInput(XRControllerState[] state_controllers, out int controllerCount, out bool leftSet, out int leftSetIndex, out bool rightSet, out int rightSetIndex, out SideToSet sideToSet)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xFD8BC4", Offset = "0xFD8BC4", VA = "0xFD8BC4")]
		public OpenVR_New()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public static class OpenVR_Shared
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StringBuilder propertyText;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static StringBuilder propertyText_Gamepad;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static StringBuilder propertyText_ViveController;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static StringBuilder propertyText_ViveCosmosController;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static StringBuilder propertyText_IndexController;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static StringBuilder propertyText_Oculus;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static StringBuilder propertyText_WMR;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static StringBuilder propertyText_WMR_G2;
	}
	[Token(Token = "0x2000156")]
	public sealed class UnityEngine_XR : XRInputAPI
	{
		[Token(Token = "0x2000157")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28A74", Offset = "0xB28A74")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine_XR <>4__this;

			[Token(Token = "0x4000927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.XR.InputDevice device;

			[Token(Token = "0x6000803")]
			[Address(RVA = "0xF27200", Offset = "0xF27200", VA = "0xF27200")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000804")]
			[Address(RVA = "0xF27208", Offset = "0xF27208", VA = "0xF27208")]
			internal bool <FindExistingController>b__0(UnityEngine.XR.InputDevice x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000805")]
			[Address(RVA = "0xF2722C", Offset = "0xF2722C", VA = "0xF2722C")]
			internal bool <FindExistingController>b__1(UnityEngine.XR.InputDevice x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<UnityEngine.XR.InputDevice> controllers;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CF7C", Offset = "0xB2CF7C")]
		private static UnityEngine.XR.InputDevice <handLeft>k__BackingField;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CF8C", Offset = "0xB2CF8C")]
		private static UnityEngine.XR.InputDevice <handRight>k__BackingField;

		[Token(Token = "0x170000D5")]
		public static UnityEngine.XR.InputDevice handLeft
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x12465E0", Offset = "0x12465E0", VA = "0x12465E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A270", Offset = "0xB3A270")]
			get
			{
				return default(UnityEngine.XR.InputDevice);
			}
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x124662C", Offset = "0x124662C", VA = "0x124662C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A280", Offset = "0xB3A280")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public static UnityEngine.XR.InputDevice handRight
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x1246688", Offset = "0x1246688", VA = "0x1246688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A290", Offset = "0xB3A290")]
			get
			{
				return default(UnityEngine.XR.InputDevice);
			}
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x12466D4", Offset = "0x12466D4", VA = "0x12466D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A2A0", Offset = "0xB3A2A0")]
			private set
			{
			}
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1246730", Offset = "0x1246730", VA = "0x1246730", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1246BFC", Offset = "0x1246BFC", VA = "0x1246BFC", Slot = "5")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1246D18", Offset = "0x1246D18", VA = "0x1246D18", Slot = "6")]
		public override bool GatherInput(XRControllerState[] state_controllers, out int controllerCount, out bool leftSet, out int leftSetIndex, out bool rightSet, out int rightSetIndex, out SideToSet sideToSet)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1248024", Offset = "0x1248024", VA = "0x1248024")]
		private bool ControllersMatch(UnityEngine.XR.InputDevice device1, UnityEngine.XR.InputDevice device2)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x12480D8", Offset = "0x12480D8", VA = "0x12480D8")]
		private bool FindExistingController(UnityEngine.XR.InputDevice device, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1248260", Offset = "0x1248260", VA = "0x1248260")]
		private bool ReplaceControllerIfExists(UnityEngine.XR.InputDevice device)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1248304", Offset = "0x1248304", VA = "0x1248304")]
		private void InputDevices_deviceConnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x12483C8", Offset = "0x12483C8", VA = "0x12483C8")]
		private void InputDevices_deviceDisconnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x124847C", Offset = "0x124847C", VA = "0x124847C")]
		private void InputDevices_deviceConfigChanged(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x124691C", Offset = "0x124691C", VA = "0x124691C")]
		private void UpdateDevice(UnityEngine.XR.InputDevice device, bool removingDevice)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1248510", Offset = "0x1248510", VA = "0x1248510", Slot = "7")]
		public override bool SetRumble(XRControllerRumbleSide controller, float strength, float duration)
		{
			return default(bool);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x12486F8", Offset = "0x12486F8", VA = "0x12486F8")]
		public UnityEngine_XR()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public enum SideToSet
	{
		[Token(Token = "0x4000929")]
		None,
		[Token(Token = "0x400092A")]
		Both,
		[Token(Token = "0x400092B")]
		Left,
		[Token(Token = "0x400092C")]
		Right
	}
	[Token(Token = "0x2000159")]
	public abstract class XRInputAPI
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x111D334", Offset = "0x111D334", VA = "0x111D334", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x111D338", Offset = "0x111D338", VA = "0x111D338", Slot = "5")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x111D33C", Offset = "0x111D33C", VA = "0x111D33C")]
		protected void GatherInputDefaults(out int state_controllerCount, out bool leftSet, out int leftSetIndex, out bool rightSet, out int rightSetIndex, out SideToSet sideToSet)
		{
		}

		[Token(Token = "0x6000809")]
		public abstract bool GatherInput(XRControllerState[] state_controllers, out int controllerCount, out bool leftSet, out int leftSetIndex, out bool rightSet, out int rightSetIndex, out SideToSet sideToSet);

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x111D35C", Offset = "0x111D35C", VA = "0x111D35C")]
		protected void GatherInputFinish(XRControllerState[] state_controllers, int controllerCount, ref bool leftSet, ref int leftSetIndex, ref bool rightSet, ref int rightSetIndex, ref SideToSet sideToSet)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x111D478", Offset = "0x111D478", VA = "0x111D478")]
		protected void ResetControllers(XRControllerState[] state_controllers)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x111D4C8", Offset = "0x111D4C8", VA = "0x111D4C8", Slot = "7")]
		public virtual bool SetRumble(XRControllerRumbleSide controller, float strength, float duration)
		{
			return default(bool);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x111D4D0", Offset = "0x111D4D0", VA = "0x111D4D0")]
		protected XRInputAPI()
		{
		}
	}
}
namespace VRstudios.Tools
{
	[Token(Token = "0x200015A")]
	public enum PredictionMode
	{
		[Token(Token = "0x400092E")]
		OnUpdate,
		[Token(Token = "0x400092F")]
		BeforeRender
	}
	[Token(Token = "0x200015B")]
	public class PredictiveTrackedPoseDriver : TrackedPoseDriver
	{
		[Token(Token = "0x200015C")]
		private struct PrevTransform
		{
			[Token(Token = "0x4000938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 pos;

			[Token(Token = "0x4000939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 posPredicted;

			[Token(Token = "0x400093A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion rot;

			[Token(Token = "0x400093B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion rotPredicted;
		}

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PrevTransform prevTransform;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool canUpdate;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool enablePrediction;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public PredictionMode mode;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float linearVelClampMul;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float linearVelMul;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float angularVelClampMul;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float angularVelMul;

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x11F1458", Offset = "0x11F1458", VA = "0x11F1458", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x11F149C", Offset = "0x11F149C", VA = "0x11F149C", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x11F14DC", Offset = "0x11F14DC", VA = "0x11F14DC", Slot = "11")]
		protected override void SetLocalTransform(Vector3 newPosition, Quaternion newRotation, PoseDataFlags poseFlags)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x11F1734", Offset = "0x11F1734", VA = "0x11F1734")]
		public PredictiveTrackedPoseDriver()
		{
		}
	}
}
namespace uGIF
{
	[Token(Token = "0x200015D")]
	public class CaptureToGIF : MonoBehaviour
	{
		[Token(Token = "0x200015E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28A84", Offset = "0xB28A84")]
		private sealed class <WaitForBytes>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureToGIF <>4__this;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600081B")]
				[Address(RVA = "0x1125270", Offset = "0x1125270", VA = "0x1125270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600081D")]
				[Address(RVA = "0x11252B8", Offset = "0x11252B8", VA = "0x11252B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000818")]
			[Address(RVA = "0x11251A8", Offset = "0x11251A8", VA = "0x11251A8")]
			[DebuggerHidden]
			public <WaitForBytes>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000819")]
			[Address(RVA = "0x11251D4", Offset = "0x11251D4", VA = "0x11251D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600081A")]
			[Address(RVA = "0x11251D8", Offset = "0x11251D8", VA = "0x11251D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600081C")]
			[Address(RVA = "0x1125278", Offset = "0x1125278", VA = "0x1125278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frameRate;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool capture;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int downscale;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float captureTime;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useBilinearScaling;

		[NonSerialized]
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] bytes;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Image> frames;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D colorBuffer;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float period;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float T;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float startTime;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1315914", Offset = "0x1315914", VA = "0x1315914")]
		private void Start()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x13159C0", Offset = "0x13159C0", VA = "0x13159C0")]
		public void Encode()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1315A94", Offset = "0x1315A94", VA = "0x1315A94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A2B0", Offset = "0xB3A2B0")]
		private IEnumerator WaitForBytes()
		{
			return null;
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1315B00", Offset = "0x1315B00", VA = "0x1315B00")]
		public void _Encode()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1315DC8", Offset = "0x1315DC8", VA = "0x1315DC8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1315F34", Offset = "0x1315F34", VA = "0x1315F34")]
		public CaptureToGIF()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class GIFEncoder
	{
		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useGlobalColorTable;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color32? transparent;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int repeat;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int dispose;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int quality;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int delay;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int width;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int height;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int transIndex;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool started;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MemoryStream ms;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color32[] pixels;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private byte[] indexedPixels;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte[] prevIndexedPixels;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int colorDepth;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private byte[] colorTab;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] usedEntry;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int palSize;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool firstFrame;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NeuQuant nq;

		[Token(Token = "0x170000D9")]
		public float FPS
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x101E488", Offset = "0x101E488", VA = "0x101E488")]
			set
			{
			}
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x101E4BC", Offset = "0x101E4BC", VA = "0x101E4BC")]
		public void AddFrame(Image im)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x101ED60", Offset = "0x101ED60", VA = "0x101ED60")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x101EE24", Offset = "0x101EE24", VA = "0x101EE24")]
		public void Start(MemoryStream os)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x101E5E8", Offset = "0x101E5E8", VA = "0x101E5E8")]
		private void RemapPixels()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x101EF6C", Offset = "0x101EF6C", VA = "0x101EF6C")]
		private int FindClosest(Color32 c)
		{
			return default(int);
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x101EADC", Offset = "0x101EADC", VA = "0x101EADC")]
		private void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x101EC44", Offset = "0x101EC44", VA = "0x101EC44")]
		private void WriteImageDesc()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x101E85C", Offset = "0x101E85C", VA = "0x101E85C")]
		private void WriteLSD()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x101E9D8", Offset = "0x101E9D8", VA = "0x101E9D8")]
		private void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x101E940", Offset = "0x101E940", VA = "0x101E940")]
		private void WritePalette()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x101ECC8", Offset = "0x101ECC8", VA = "0x101ECC8")]
		private void WritePixels()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x101F07C", Offset = "0x101F07C", VA = "0x101F07C")]
		private void WriteShort(int value)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x101EED4", Offset = "0x101EED4", VA = "0x101EED4")]
		private void WriteString(string s)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x101F13C", Offset = "0x101F13C", VA = "0x101F13C")]
		public GIFEncoder()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class Image
	{
		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int width;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int height;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] pixels;

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x13CB104", Offset = "0x13CB104", VA = "0x13CB104")]
		public Image(Texture2D f)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x13CB16C", Offset = "0x13CB16C", VA = "0x13CB16C")]
		public Image(Image image)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x13CB1FC", Offset = "0x13CB1FC", VA = "0x13CB1FC")]
		public Image(int width, int height)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x13CB270", Offset = "0x13CB270", VA = "0x13CB270")]
		public Image(int width, int height, Color32[] pixels)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x13CB2B0", Offset = "0x13CB2B0", VA = "0x13CB2B0")]
		public void DrawImage(Image image, int i, int i2)
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x13CB2F0", Offset = "0x13CB2F0", VA = "0x13CB2F0")]
		public Color32 GetPixel(int tw, int th)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x13CB334", Offset = "0x13CB334", VA = "0x13CB334")]
		public void Flip()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x13CB410", Offset = "0x13CB410", VA = "0x13CB410")]
		public void Resize(int scale)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x13CB538", Offset = "0x13CB538", VA = "0x13CB538")]
		public void ResizeBilinear(int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x13CB894", Offset = "0x13CB894", VA = "0x13CB894")]
		private Color32 ColorLerpUnclamped(Color A, Color B, float P)
		{
			return default(Color32);
		}
	}
	[Token(Token = "0x2000161")]
	public class LZWEncoder
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x12EA354", Offset = "0x12EA354", VA = "0x12EA354")]
		public LZWEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x12EA4E4", Offset = "0x12EA4E4", VA = "0x12EA4E4")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x12EA608", Offset = "0x12EA608", VA = "0x12EA608")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x12EA650", Offset = "0x12EA650", VA = "0x12EA650")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x12EA80C", Offset = "0x12EA80C", VA = "0x12EA80C")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x12EAB6C", Offset = "0x12EAB6C", VA = "0x12EAB6C")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x12EA544", Offset = "0x12EA544", VA = "0x12EA544")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x12EAAAC", Offset = "0x12EAAAC", VA = "0x12EAAAC")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x12EAABC", Offset = "0x12EAABC", VA = "0x12EAABC")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x12EA6AC", Offset = "0x12EA6AC", VA = "0x12EA6AC")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class NeuQuant
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int netsize;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int prime1;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int prime2;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int prime3;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int prime4;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int minpicturebytes;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int maxnetpos;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int netbiasshift;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int ncycles;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int intbiasshift;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int intbias;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly int gammashift;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly int gamma;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly int betashift;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly int beta;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly int betagamma;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly int initrad;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static readonly int radiusbiasshift;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int radiusbias;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static readonly int initradius;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int radiusdec;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static readonly int alphabiasshift;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly int initalpha;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int alphadec;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static readonly int radbiasshift;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static readonly int radbias;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static readonly int alpharadbshift;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly int alpharadbias;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color32[] thepicture;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lengthcount;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int samplefac;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[][] network;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] netindex;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] bias;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] freq;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] radpower;

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xFC95B0", Offset = "0xFC95B0", VA = "0xFC95B0")]
		public NeuQuant(Color32[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xFC982C", Offset = "0xFC982C", VA = "0xFC982C")]
		private byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xFC9AC0", Offset = "0xFC9AC0", VA = "0xFC9AC0")]
		private void Inxbuild()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xFC9E0C", Offset = "0xFC9E0C", VA = "0xFC9E0C")]
		private void Learn()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xFCAA54", Offset = "0xFCAA54", VA = "0xFCAA54")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xFCACBC", Offset = "0xFCACBC", VA = "0xFCACBC")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xFCACF0", Offset = "0xFCACF0", VA = "0xFCACF0")]
		private void Unbiasnet()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xFCA764", Offset = "0xFCA764", VA = "0xFCA764")]
		private void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xFCA624", Offset = "0xFCA624", VA = "0xFCA624")]
		private void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xFCA36C", Offset = "0xFCA36C", VA = "0xFCA36C")]
		private int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace ODS
{
	[Token(Token = "0x2000163")]
	public class HybridCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000164")]
		public enum OdsRendererType
		{
			[Token(Token = "0x40009B7")]
			Slice,
			[Token(Token = "0x40009B8")]
			StereoCubemap,
			[Token(Token = "0x40009B9")]
			Count
		}

		[Token(Token = "0x2000165")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28A94", Offset = "0xB28A94")]
		private sealed class <Render>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HybridCamera <>4__this;

			[Token(Token = "0x40009BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform node;

			[Token(Token = "0x40009BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <renderCameraObject>5__2;

			[Token(Token = "0x40009BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ParticleSystemRenderer[] <renderers>5__3;

			[Token(Token = "0x40009C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <origRotation>5__4;

			[Token(Token = "0x170000DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000862")]
				[Address(RVA = "0xFF7C00", Offset = "0xFF7C00", VA = "0xFF7C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000864")]
				[Address(RVA = "0xFF7C48", Offset = "0xFF7C48", VA = "0xFF7C48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600085F")]
			[Address(RVA = "0xFF7310", Offset = "0xFF7310", VA = "0xFF7310")]
			[DebuggerHidden]
			public <Render>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6000860")]
			[Address(RVA = "0xFF733C", Offset = "0xFF733C", VA = "0xFF733C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000861")]
			[Address(RVA = "0xFF7340", Offset = "0xFF7340", VA = "0xFF7340", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000863")]
			[Address(RVA = "0xFF7C08", Offset = "0xFF7C08", VA = "0xFF7C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400099C")]
		private const int MaxRenders = 1000;

		[Token(Token = "0x400099D")]
		private const int MaxImageWidth = 6000;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interPupillaryDistance;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int imageWidth;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int lastImageWidth;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int imageHeight;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int eyeImageWidth;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool vr180;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool lastvr180;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OdsRendererType rendererType;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private OdsRendererType lastRendererType;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float particleScaleFactor;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bloomRadius;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastBloomRadius;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool HDR;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool opaqueBackground;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RenderTexture stitched;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderTexture bloomed;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RenderTexture finalImage;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D returnImage;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string outputFolder;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string basename;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int frameCount;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isRendering;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OdsRenderer odsRenderer;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2CF9C", Offset = "0xB2CF9C")]
		private bool <CollapseIpd>k__BackingField;

		[Token(Token = "0x170000DA")]
		public bool IsRendering
		{
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x13C9430", Offset = "0x13C9430", VA = "0x13C9430")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DB")]
		public bool CollapseIpd
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x13C9438", Offset = "0x13C9438", VA = "0x13C9438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A360", Offset = "0xB3A360")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x13C9440", Offset = "0x13C9440", VA = "0x13C9440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A370", Offset = "0xB3A370")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public int FrameCount
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x13C944C", Offset = "0x13C944C", VA = "0x13C944C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DD")]
		public Texture2D Image
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x13C9454", Offset = "0x13C9454", VA = "0x13C9454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public RenderTexture FinalImage
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x13C945C", Offset = "0x13C945C", VA = "0x13C945C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x13C9464", Offset = "0x13C9464", VA = "0x13C9464")]
		public void SetOdsRendererType(OdsRendererType type)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x13C9674", Offset = "0x13C9674", VA = "0x13C9674")]
		public void EnableVr180(bool enable)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x13C96A0", Offset = "0x13C96A0", VA = "0x13C96A0")]
		private void SetupTextures()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x13C98B8", Offset = "0x13C98B8", VA = "0x13C98B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x13C9A30", Offset = "0x13C9A30", VA = "0x13C9A30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A380", Offset = "0xB3A380")]
		public IEnumerator Render(Transform node)
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x13C9AA8", Offset = "0x13C9AA8", VA = "0x13C9AA8")]
		public void RenderAll(Transform node)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x13C95C4", Offset = "0x13C95C4", VA = "0x13C95C4")]
		private bool isExperimental()
		{
			return default(bool);
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x13C9AD4", Offset = "0x13C9AD4", VA = "0x13C9AD4")]
		private void SbsComposite(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x13C9D60", Offset = "0x13C9D60", VA = "0x13C9D60")]
		private void StackedComposite(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x13C9F14", Offset = "0x13C9F14", VA = "0x13C9F14")]
		private void StackedBloomAndComposite(RenderTexture src, RenderTexture dst, MonoBehaviour behavior, MethodInfo renderImageMethod)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x13CA1D8", Offset = "0x13CA1D8", VA = "0x13CA1D8")]
		private void SbsBloomAndComposite(RenderTexture src, RenderTexture dst, MonoBehaviour behavior, MethodInfo renderImageMethod)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x13CA718", Offset = "0x13CA718", VA = "0x13CA718")]
		public HybridCamera()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class OdsRenderer
	{
		[Token(Token = "0x2000167")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AA4", Offset = "0xB28AA4")]
		private sealed class <Render>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170000E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600086E")]
				[Address(RVA = "0x10E6DCC", Offset = "0x10E6DCC", VA = "0x10E6DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000870")]
				[Address(RVA = "0x10E6E14", Offset = "0x10E6E14", VA = "0x10E6E14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600086B")]
			[Address(RVA = "0x10E6D68", Offset = "0x10E6D68", VA = "0x10E6D68")]
			[DebuggerHidden]
			public <Render>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600086C")]
			[Address(RVA = "0x10E6D94", Offset = "0x10E6D94", VA = "0x10E6D94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600086D")]
			[Address(RVA = "0x10E6D98", Offset = "0x10E6D98", VA = "0x10E6D98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600086F")]
			[Address(RVA = "0x10E6DD4", Offset = "0x10E6DD4", VA = "0x10E6DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int imageWidth;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int eyeImageWidth;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int bloomRadius;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool vr180;

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xFD71D0", Offset = "0xFD71D0", VA = "0xFD71D0", Slot = "4")]
		public virtual void Release()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xFD71D4", Offset = "0xFD71D4", VA = "0xFD71D4", Slot = "5")]
		public virtual void SetVr180(bool enable)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xFD71E0", Offset = "0xFD71E0", VA = "0xFD71E0", Slot = "6")]
		public virtual void SetWidth(int width, int eyeWidth, int bloomRad)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xFD71EC", Offset = "0xFD71EC", VA = "0xFD71EC", Slot = "7")]
		public virtual void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xFD71F0", Offset = "0xFD71F0", VA = "0xFD71F0", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A430", Offset = "0xB3A430")]
		public virtual IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xFD724C", Offset = "0xFD724C", VA = "0xFD724C")]
		public OdsRenderer()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class OdsSlice : OdsRenderer
	{
		[Token(Token = "0x2000169")]
		private enum Eye
		{
			[Token(Token = "0x40009CA")]
			Right,
			[Token(Token = "0x40009CB")]
			Left
		}

		[Token(Token = "0x200016A")]
		private enum Hemisphere
		{
			[Token(Token = "0x40009CD")]
			Top,
			[Token(Token = "0x40009CE")]
			Bottom
		}

		[Token(Token = "0x200016B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AB4", Offset = "0xB28AB4")]
		private sealed class <Render>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OdsSlice <>4__this;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Camera renderCamera;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform node;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ipd;

			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool CollapseIpd;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int MaxRenders;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RenderTexture output;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <dTheta>5__2;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector4 <rectXform>5__3;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <rotation>5__4;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <odsCameraPos>5__5;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector4 <shaderEyeOffset>5__6;

			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <rangeEnd>5__7;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <angleOffset>5__8;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <eye>5__9;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float <eyeOffset>5__10;

			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private int <hemisphere>5__11;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float <phi>5__12;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <i>5__13;

			[Token(Token = "0x170000E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000878")]
				[Address(RVA = "0x10E7588", Offset = "0x10E7588", VA = "0x10E7588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600087A")]
				[Address(RVA = "0x10E75D0", Offset = "0x10E75D0", VA = "0x10E75D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000875")]
			[Address(RVA = "0x10E6E1C", Offset = "0x10E6E1C", VA = "0x10E6E1C")]
			[DebuggerHidden]
			public <Render>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000876")]
			[Address(RVA = "0x10E6E48", Offset = "0x10E6E48", VA = "0x10E6E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000877")]
			[Address(RVA = "0x10E6E4C", Offset = "0x10E6E4C", VA = "0x10E6E4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000879")]
			[Address(RVA = "0x10E7590", Offset = "0x10E7590", VA = "0x10E7590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture cameraTexture;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material warp;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xFD7254", Offset = "0xFD7254", VA = "0xFD7254", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xFD72E0", Offset = "0xFD72E0", VA = "0xFD72E0", Slot = "7")]
		public override void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xFD7394", Offset = "0xFD7394", VA = "0xFD7394", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A4E0", Offset = "0xB3A4E0")]
		public override IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xFD7450", Offset = "0xFD7450", VA = "0xFD7450")]
		public OdsSlice()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class OdsStereoCubemap : OdsRenderer
	{
		[Token(Token = "0x200016D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AC4", Offset = "0xB28AC4")]
		private sealed class <Render>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OdsStereoCubemap <>4__this;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float ipd;

			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Camera renderCamera;

			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int MaxRenders;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RenderTexture output;

			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float[] <ipdScale>5__2;

			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RenderTexture[] <outputs>5__3;

			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4 <shaderEyeOffset>5__4;

			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <eye>5__5;

			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <face>5__6;

			[Token(Token = "0x170000E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000884")]
				[Address(RVA = "0x10E7A00", Offset = "0x10E7A00", VA = "0x10E7A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000886")]
				[Address(RVA = "0x10E7A48", Offset = "0x10E7A48", VA = "0x10E7A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000881")]
			[Address(RVA = "0x10E75D8", Offset = "0x10E75D8", VA = "0x10E75D8")]
			[DebuggerHidden]
			public <Render>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000882")]
			[Address(RVA = "0x10E7604", Offset = "0x10E7604", VA = "0x10E7604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000883")]
			[Address(RVA = "0x10E7608", Offset = "0x10E7608", VA = "0x10E7608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000885")]
			[Address(RVA = "0x10E7A08", Offset = "0x10E7A08", VA = "0x10E7A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E4")]
		private const float c_cubemapMipBias = -0.5f;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material cubeToODS_material;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture cubemapLt;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture cubemapRt;

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xFD7458", Offset = "0xFD7458", VA = "0xFD7458", Slot = "4")]
		public override void Release()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xFD7530", Offset = "0xFD7530", VA = "0xFD7530", Slot = "7")]
		public override void SetupTextures(RenderTextureFormat format)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xFD7768", Offset = "0xFD7768", VA = "0xFD7768", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A590", Offset = "0xB3A590")]
		public override IEnumerator Render(Camera renderCamera, Transform node, RenderTexture output, float ipd, bool CollapseIpd, int MaxRenders)
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xFD780C", Offset = "0xFD780C", VA = "0xFD780C")]
		private void renderToEye(int face, Camera camera, RenderTexture cubemap)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xFD78C8", Offset = "0xFD78C8", VA = "0xFD78C8")]
		private void convertCubemapToODS(RenderTexture odsImage, Quaternion orientation)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xFD7B98", Offset = "0xFD7B98", VA = "0xFD7B98")]
		public OdsStereoCubemap()
		{
		}
	}
}
namespace TiltBrushToolkit
{
	[Token(Token = "0x200016E")]
	public class GlbError : Exception
	{
		[Token(Token = "0x6000887")]
		[Address(RVA = "0xF9AAD8", Offset = "0xF9AAD8", VA = "0xF9AAD8")]
		public GlbError(string message)
		{
		}
	}
	[Token(Token = "0x200016F")]
	public static class GlbParser
	{
		[Token(Token = "0x2000170")]
		public struct Range
		{
			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long start;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long length;
		}

		[Token(Token = "0x40009F4")]
		private const uint kFourCC_glTF = 1179937895u;

		[Token(Token = "0x40009F5")]
		private const uint kFourCC_JSON = 1313821514u;

		[Token(Token = "0x40009F6")]
		private const uint kFourCC_BIN_ = 5130562u;

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xF9AB4C", Offset = "0xF9AB4C", VA = "0xF9AB4C")]
		private static void Err(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xF9AB98", Offset = "0xF9AB98", VA = "0xF9AB98")]
		public static Range GetJsonChunk(string glbPath)
		{
			return default(Range);
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xF9B1FC", Offset = "0xF9B1FC", VA = "0xF9B1FC")]
		public static string GetJsonChunkAsString(string glbPath)
		{
			return null;
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xF9B3F8", Offset = "0xF9B3F8", VA = "0xF9B3F8")]
		public static Range GetBinChunk(string glbPath)
		{
			return default(Range);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xF9BBF0", Offset = "0xF9BBF0", VA = "0xF9BBF0")]
		public static uint? GetGlbVersion(string glbPath)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000171")]
	public sealed class Gltf1Root : GltfRootBase
	{
		[Serializable]
		[Token(Token = "0x2000172")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AD4", Offset = "0xB28AD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, string>, string> <>9__26_0;

			[Token(Token = "0x600089A")]
			[Address(RVA = "0x115A67C", Offset = "0x115A67C", VA = "0x115A67C")]
			public <>c()
			{
			}

			[Token(Token = "0x600089B")]
			[Address(RVA = "0x115A684", Offset = "0x115A684", VA = "0x115A684")]
			internal string <Dereference>b__26_0(KeyValuePair<string, string> elt)
			{
				return null;
			}
		}

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, Gltf1Buffer> buffers;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Gltf1Accessor> accessors;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<string, Gltf1BufferView> bufferViews;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<string, Gltf1Mesh> meshes;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<string, Gltf1Shader> shaders;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, Gltf1Program> programs;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<string, Gltf1Technique> techniques;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<string, Gltf1Image> images;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<string, Gltf1Texture> textures;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, Gltf1Material> materials;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Dictionary<string, Gltf1Node> nodes;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Dictionary<string, Gltf1Scene> scenes;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string scene;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool disposed;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[JsonIgnore]
		public Gltf1Scene scenePtr;

		[Token(Token = "0x170000E7")]
		public override GltfSceneBase ScenePtr
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xF9C498", Offset = "0xF9C498", VA = "0xF9C498", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public override IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xF9C4A0", Offset = "0xF9C4A0", VA = "0xF9C4A0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public override IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xF9C534", Offset = "0xF9C534", VA = "0xF9C534", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public override IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xF9C5C8", Offset = "0xF9C5C8", VA = "0xF9C5C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public override IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xF9C65C", Offset = "0xF9C65C", VA = "0xF9C65C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xF9C6F0", Offset = "0xF9C6F0", VA = "0xF9C6F0", Slot = "11")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xF9C8B8", Offset = "0xF9C8B8", VA = "0xF9C8B8", Slot = "10")]
		public override void Dereference(bool isGlb, [Optional] IUriLoader uriLoader)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xF9DF90", Offset = "0xF9DF90", VA = "0xF9DF90")]
		public Gltf1Root()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xF9DFA0", Offset = "0xF9DFA0", VA = "0xF9DFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A640", Offset = "0xB3A640")]
		private Gltf1Accessor <Dereference>b__26_1(KeyValuePair<string, string> elt)
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xF9E010", Offset = "0xF9E010", VA = "0xF9E010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A650", Offset = "0xB3A650")]
		private Gltf1Mesh <Dereference>b__26_2(string id)
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xF9E074", Offset = "0xF9E074", VA = "0xF9E074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A660", Offset = "0xB3A660")]
		private Gltf1Node <Dereference>b__26_3(string id)
		{
			return null;
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xF9E0D8", Offset = "0xF9E0D8", VA = "0xF9E0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A670", Offset = "0xB3A670")]
		private Gltf1Node <Dereference>b__26_4(string name)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class Gltf1Buffer : GltfBufferBase
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xF9BEE4", Offset = "0xF9BEE4", VA = "0xF9BEE4")]
		public Gltf1Buffer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000174")]
	public class Gltf1Accessor : GltfAccessorBase
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string bufferView;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf1BufferView bufferViewPtr;

		[Token(Token = "0x170000EC")]
		public override GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xF9BECC", Offset = "0xF9BECC", VA = "0xF9BECC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xF9BED4", Offset = "0xF9BED4", VA = "0xF9BED4")]
		public Gltf1Accessor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class Gltf1BufferView : GltfBufferViewBase
	{
		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buffer;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Buffer bufferPtr;

		[Token(Token = "0x170000ED")]
		public override GltfBufferBase BufferPtr
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xF9BEF4", Offset = "0xF9BEF4", VA = "0xF9BEF4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xF9BEFC", Offset = "0xF9BEFC", VA = "0xF9BEFC")]
		public Gltf1BufferView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class Gltf1Primitive : GltfPrimitiveBase
	{
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> attributes;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string indices;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string material;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Dictionary<string, Gltf1Accessor> attributePtrs;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf1Accessor indicesPtr;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[JsonIgnore]
		public Gltf1Material materialPtr;

		[Token(Token = "0x170000EE")]
		public override GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0xF9C220", Offset = "0xF9C220", VA = "0xF9C220", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public override GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0xF9C228", Offset = "0xF9C228", VA = "0xF9C228", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xF9C230", Offset = "0xF9C230", VA = "0xF9C230", Slot = "6")]
		public override GltfAccessorBase GetAttributePtr(string attributeName)
		{
			return null;
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xF9C294", Offset = "0xF9C294", VA = "0xF9C294", Slot = "7")]
		public override void ReplaceAttribute(string original, string replacement)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xF9C3CC", Offset = "0xF9C3CC", VA = "0xF9C3CC", Slot = "8")]
		public override HashSet<string> GetAttributeNames()
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xF9C470", Offset = "0xF9C470", VA = "0xF9C470")]
		public Gltf1Primitive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class Gltf1Shader
	{
		[Token(Token = "0x4000A18")]
		public const int kFragmentShader = 35632;

		[Token(Token = "0x4000A19")]
		public const int kVertexShader = 35633;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uri;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xF9E1B8", Offset = "0xF9E1B8", VA = "0xF9E1B8")]
		public Gltf1Shader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class Gltf1Program
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string vertexShader;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fragmentShader;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Shader vertexShaderPtr;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Shader fragmentShaderPtr;

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xF9C490", Offset = "0xF9C490", VA = "0xF9C490")]
		public Gltf1Program()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class Gltf1Technique
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string program;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Program programPtr;

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xF9E1C0", Offset = "0xF9E1C0", VA = "0xF9E1C0")]
		public Gltf1Technique()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class Gltf1Image : GltfImageBase
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xF9BF0C", Offset = "0xF9BF0C", VA = "0xF9BF0C")]
		public Gltf1Image()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class Gltf1Texture : GltfTextureBase
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string source;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf1Image sourcePtr;

		[Token(Token = "0x170000F0")]
		public override object GltfId
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xF9E1C8", Offset = "0xF9E1C8", VA = "0xF9E1C8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public override GltfImageBase SourcePtr
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xF9E1D0", Offset = "0xF9E1D0", VA = "0xF9E1D0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xF9E1D8", Offset = "0xF9E1D8", VA = "0xF9E1D8")]
		public Gltf1Texture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class TiltBrushGltf1PbrValues
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color? BaseColorFactor;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float? MetallicFactor;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float? RoughnessFactor;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string BaseColorTex;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf1Texture BaseColorTexPtr;

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1169750", Offset = "0x1169750", VA = "0x1169750")]
		public TiltBrushGltf1PbrValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public class Gltf1Material : GltfMaterialBase
	{
		[Token(Token = "0x200017E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AE4", Offset = "0xB28AE4")]
		private sealed class <get_ReferencedTextures>d__7 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Material <>4__this;

			[Token(Token = "0x170000F4")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x60008B5")]
				[Address(RVA = "0x1159EF4", Offset = "0x1159EF4", VA = "0x1159EF4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008B7")]
				[Address(RVA = "0x1159F3C", Offset = "0x1159F3C", VA = "0x1159F3C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x1159E50", Offset = "0x1159E50", VA = "0x1159E50")]
			[DebuggerHidden]
			public <get_ReferencedTextures>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x1159E88", Offset = "0x1159E88", VA = "0x1159E88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x1159E8C", Offset = "0x1159E8C", VA = "0x1159E8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008B6")]
			[Address(RVA = "0x1159EFC", Offset = "0x1159EFC", VA = "0x1159EFC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x1159F44", Offset = "0x1159F44", VA = "0x1159F44", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x1159FEC", Offset = "0x1159FEC", VA = "0x1159FEC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string technique;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltBrushGltf1PbrValues values;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[JsonIgnore]
		public Gltf1Technique techniquePtr;

		[Token(Token = "0x170000F2")]
		public override Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xF9BF1C", Offset = "0xF9BF1C", VA = "0xF9BF1C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		public override IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xF9BF34", Offset = "0xF9BF34", VA = "0xF9BF34", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A680", Offset = "0xB3A680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xF9BFA0", Offset = "0xF9BFA0", VA = "0xF9BFA0")]
		public Gltf1Material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public class Gltf1Mesh : GltfMeshBase
	{
		[Token(Token = "0x2000180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28AF4", Offset = "0xB28AF4")]
		private sealed class <get_Primitives>d__3 : IEnumerable<GltfPrimitiveBase>, IEnumerable, IEnumerator<GltfPrimitiveBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfPrimitiveBase <>2__current;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Mesh <>4__this;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Primitive>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F8")]
			private GltfPrimitiveBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfPrimitiveBase>.Current
			{
				[Token(Token = "0x60008C2")]
				[Address(RVA = "0x115A20C", Offset = "0x115A20C", VA = "0x115A20C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008C4")]
				[Address(RVA = "0x115A254", Offset = "0x115A254", VA = "0x115A254", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x1159FF0", Offset = "0x1159FF0", VA = "0x1159FF0")]
			[DebuggerHidden]
			public <get_Primitives>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x115A028", Offset = "0x115A028", VA = "0x115A028", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x115A098", Offset = "0x115A098", VA = "0x115A098", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x115A044", Offset = "0x115A044", VA = "0x115A044")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x115A214", Offset = "0x115A214", VA = "0x115A214", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x115A25C", Offset = "0x115A25C", VA = "0x115A25C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfPrimitiveBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfPrimitiveBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x115A304", Offset = "0x115A304", VA = "0x115A304", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Gltf1Primitive> primitives;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x170000F6")]
		public override IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xF9BFB0", Offset = "0xF9BFB0", VA = "0xF9BFB0", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A750", Offset = "0xB3A750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public override int PrimitiveCount
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xF9C01C", Offset = "0xF9C01C", VA = "0xF9C01C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xF9C068", Offset = "0xF9C068", VA = "0xF9C068", Slot = "6")]
		public override GltfPrimitiveBase GetPrimitiveAt(int i)
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xF9C0DC", Offset = "0xF9C0DC", VA = "0xF9C0DC")]
		public Gltf1Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class Gltf1Node : GltfNodeBase
	{
		[Token(Token = "0x2000182")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B04", Offset = "0xB28B04")]
		private sealed class <get_Children>d__8 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Node <>4__this;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000FC")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x60008CE")]
				[Address(RVA = "0x115A520", Offset = "0x115A520", VA = "0x115A520", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008D0")]
				[Address(RVA = "0x115A568", Offset = "0x115A568", VA = "0x115A568", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x115A308", Offset = "0x115A308", VA = "0x115A308")]
			[DebuggerHidden]
			public <get_Children>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x115A340", Offset = "0x115A340", VA = "0x115A340", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x115A3B0", Offset = "0x115A3B0", VA = "0x115A3B0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x115A35C", Offset = "0x115A35C", VA = "0x115A35C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x115A528", Offset = "0x115A528", VA = "0x115A528", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x115A570", Offset = "0x115A570", VA = "0x115A570", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x115A618", Offset = "0x115A618", VA = "0x115A618", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> children;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> meshes;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[JsonIgnore]
		public List<Gltf1Mesh> meshPtrs;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[JsonIgnore]
		public List<Gltf1Node> childPtrs;

		[Token(Token = "0x170000FA")]
		public override GltfMeshBase Mesh
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xF9C0EC", Offset = "0xF9C0EC", VA = "0xF9C0EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public override IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xF9C1A4", Offset = "0xF9C1A4", VA = "0xF9C1A4", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A820", Offset = "0xB3A820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xF9C210", Offset = "0xF9C210", VA = "0xF9C210")]
		public Gltf1Node()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class Gltf1Scene : GltfSceneBase
	{
		[Token(Token = "0x2000184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B14", Offset = "0xB28B14")]
		private sealed class <get_Nodes>d__4 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x4000A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf1Scene <>4__this;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf1Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000FF")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x60008D9")]
				[Address(RVA = "0x115A8E0", Offset = "0x115A8E0", VA = "0x115A8E0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60008DB")]
				[Address(RVA = "0x115A928", Offset = "0x115A928", VA = "0x115A928", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x115A6C4", Offset = "0x115A6C4", VA = "0x115A6C4")]
			[DebuggerHidden]
			public <get_Nodes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x115A6FC", Offset = "0x115A6FC", VA = "0x115A6FC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60008D7")]
			[Address(RVA = "0x115A76C", Offset = "0x115A76C", VA = "0x115A76C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x115A718", Offset = "0x115A718", VA = "0x115A718")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x115A8E8", Offset = "0x115A8E8", VA = "0x115A8E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x115A930", Offset = "0x115A930", VA = "0x115A930", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x115A9D8", Offset = "0x115A9D8", VA = "0x115A9D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> nodes;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public string gltfId;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public List<Gltf1Node> nodePtrs;

		[Token(Token = "0x170000FE")]
		public override IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xF9E13C", Offset = "0xF9E13C", VA = "0xF9E13C", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A8F0", Offset = "0xB3A8F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xF9E1A8", Offset = "0xF9E1A8", VA = "0xF9E1A8")]
		public Gltf1Scene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000185")]
	public class GOOGLE_tilt_brush_material
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x101F1B8", Offset = "0x101F1B8", VA = "0x101F1B8")]
		public GOOGLE_tilt_brush_material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public sealed class Gltf2Root : GltfRootBase
	{
		[Serializable]
		[Token(Token = "0x2000187")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B24", Offset = "0xB28B24")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, int>, string> <>9__23_0;

			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x115B7CC", Offset = "0x115B7CC", VA = "0x115B7CC")]
			public <>c()
			{
			}

			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x115B7D4", Offset = "0x115B7D4", VA = "0x115B7D4")]
			internal string <Dereference>b__23_0(KeyValuePair<string, int> elt)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Gltf2Buffer> buffers;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Gltf2Accessor> accessors;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Gltf2BufferView> bufferViews;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Gltf2Mesh> meshes;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Gltf2Material> materials;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Gltf2Node> nodes;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Gltf2Scene> scenes;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Gltf2Texture> textures;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Gltf2Image> images;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int scene;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool disposed;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[JsonIgnore]
		public Gltf2Scene scenePtr;

		[Token(Token = "0x17000101")]
		public override GltfSceneBase ScenePtr
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xF9E718", Offset = "0xF9E718", VA = "0xF9E718", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public override IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0xF9E720", Offset = "0xF9E720", VA = "0xF9E720", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public override IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0xF9E798", Offset = "0xF9E798", VA = "0xF9E798", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public override IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xF9E810", Offset = "0xF9E810", VA = "0xF9E810", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public override IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xF9E888", Offset = "0xF9E888", VA = "0xF9E888", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xF9E900", Offset = "0xF9E900", VA = "0xF9E900", Slot = "11")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xF9EAA0", Offset = "0xF9EAA0", VA = "0xF9EAA0", Slot = "10")]
		public override void Dereference(bool isGlb, [Optional] IUriLoader uriLoader)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xF9F770", Offset = "0xF9F770", VA = "0xF9F770")]
		private void DereferenceTextureInfo(Gltf2Material.TextureInfo texInfo)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xF9F7F0", Offset = "0xF9F7F0", VA = "0xF9F7F0")]
		public Gltf2Root()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xF9F7F8", Offset = "0xF9F7F8", VA = "0xF9F7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9C0", Offset = "0xB3A9C0")]
		private Gltf2Accessor <Dereference>b__23_1(KeyValuePair<string, int> elt)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xF9F87C", Offset = "0xF9F87C", VA = "0xF9F87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9D0", Offset = "0xB3A9D0")]
		private Gltf2Node <Dereference>b__23_2(int id)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xF9F8F0", Offset = "0xF9F8F0", VA = "0xF9F8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3A9E0", Offset = "0xB3A9E0")]
		private Gltf2Node <Dereference>b__23_3(int index)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class Gltf2Buffer : GltfBufferBase
	{
		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xF9E1F8", Offset = "0xF9E1F8", VA = "0xF9E1F8")]
		public Gltf2Buffer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000189")]
	public class Gltf2Accessor : GltfAccessorBase
	{
		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int bufferView;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf2BufferView bufferViewPtr;

		[Token(Token = "0x17000106")]
		public override GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x60008EF")]
			[Address(RVA = "0xF9E1E8", Offset = "0xF9E1E8", VA = "0xF9E1E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xF9E1F0", Offset = "0xF9E1F0", VA = "0xF9E1F0")]
		public Gltf2Accessor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018A")]
	public class Gltf2BufferView : GltfBufferViewBase
	{
		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int buffer;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public Gltf2Buffer bufferPtr;

		[Token(Token = "0x17000107")]
		public override GltfBufferBase BufferPtr
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0xF9E200", Offset = "0xF9E200", VA = "0xF9E200", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xF9E208", Offset = "0xF9E208", VA = "0xF9E208")]
		public Gltf2BufferView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class Gltf2Primitive : GltfPrimitiveBase
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, int> attributes;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int indices;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int material;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[JsonIgnore]
		public Dictionary<string, Gltf2Accessor> attributePtrs;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[JsonIgnore]
		public Gltf2Accessor indicesPtr;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[JsonIgnore]
		public Gltf2Material materialPtr;

		[Token(Token = "0x17000108")]
		public override GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0xF9E4B8", Offset = "0xF9E4B8", VA = "0xF9E4B8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public override GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0xF9E4C0", Offset = "0xF9E4C0", VA = "0xF9E4C0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xF9E4C8", Offset = "0xF9E4C8", VA = "0xF9E4C8", Slot = "6")]
		public override GltfAccessorBase GetAttributePtr(string attributeName)
		{
			return null;
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF9E52C", Offset = "0xF9E52C", VA = "0xF9E52C", Slot = "7")]
		public override void ReplaceAttribute(string original, string replacement)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xF9E664", Offset = "0xF9E664", VA = "0xF9E664", Slot = "8")]
		public override HashSet<string> GetAttributeNames()
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xF9E708", Offset = "0xF9E708", VA = "0xF9E708")]
		public Gltf2Primitive()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public class Gltf2Material : GltfMaterialBase
	{
		[Serializable]
		[Token(Token = "0x200018D")]
		public class Extensions
		{
			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GOOGLE_tilt_brush_material GOOGLE_tilt_brush_material;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KHR_materials_pbrSpecularGlossiness KHR_materials_pbrSpecularGlossiness;

			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x115B0B8", Offset = "0x115B0B8", VA = "0x115B0B8")]
			public Extensions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018E")]
		public class PbrMetallicRoughness
		{
			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color baseColorFactor;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float metallicFactor;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float roughnessFactor;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextureInfo baseColorTexture;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextureInfo metallicRoughnessTexture;

			[Token(Token = "0x60008FE")]
			[Address(RVA = "0x115B0FC", Offset = "0x115B0FC", VA = "0x115B0FC")]
			public PbrMetallicRoughness()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200018F")]
		public class KHR_materials_pbrSpecularGlossiness
		{
			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color diffuseFactor;

			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureInfo diffuseTexture;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float glossinessFactor;

			[Token(Token = "0x60008FF")]
			[Address(RVA = "0x115B0C0", Offset = "0x115B0C0", VA = "0x115B0C0")]
			public KHR_materials_pbrSpecularGlossiness()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000190")]
		public class TextureInfo
		{
			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int texCoord;

			[Token(Token = "0x4000A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[JsonIgnore]
			public GltfTextureBase texture;

			[Token(Token = "0x6000900")]
			[Address(RVA = "0x115B138", Offset = "0x115B138", VA = "0x115B138")]
			public TextureInfo()
			{
			}
		}

		[Token(Token = "0x2000191")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B34", Offset = "0xB28B34")]
		private sealed class <get_TextureInfos>d__8 : IEnumerable<TextureInfo>, IEnumerable, IEnumerator<TextureInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TextureInfo <>2__current;

			[Token(Token = "0x4000A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Material <>4__this;

			[Token(Token = "0x1700010D")]
			private TextureInfo System.Collections.Generic.IEnumerator<TiltBrushToolkit.Gltf2Material.TextureInfo>.Current
			{
				[Token(Token = "0x6000904")]
				[Address(RVA = "0x115AFBC", Offset = "0x115AFBC", VA = "0x115AFBC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000906")]
				[Address(RVA = "0x115B004", Offset = "0x115B004", VA = "0x115B004", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000901")]
			[Address(RVA = "0x115AE90", Offset = "0x115AE90", VA = "0x115AE90")]
			[DebuggerHidden]
			public <get_TextureInfos>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000902")]
			[Address(RVA = "0x115AEC8", Offset = "0x115AEC8", VA = "0x115AEC8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000903")]
			[Address(RVA = "0x115AECC", Offset = "0x115AECC", VA = "0x115AECC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000905")]
			[Address(RVA = "0x115AFC4", Offset = "0x115AFC4", VA = "0x115AFC4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000907")]
			[Address(RVA = "0x115B00C", Offset = "0x115B00C", VA = "0x115B00C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TextureInfo> System.Collections.Generic.IEnumerable<TiltBrushToolkit.Gltf2Material.TextureInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000908")]
			[Address(RVA = "0x115B0B4", Offset = "0x115B0B4", VA = "0x115B0B4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000192")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B44", Offset = "0xB28B44")]
		private sealed class <get_ReferencedTextures>d__10 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x4000A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Material <>4__this;

			[Token(Token = "0x4000A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<TextureInfo> <>7__wrap1;

			[Token(Token = "0x1700010F")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x600090D")]
				[Address(RVA = "0x115AD94", Offset = "0x115AD94", VA = "0x115AD94", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000110")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600090F")]
				[Address(RVA = "0x115ADDC", Offset = "0x115ADDC", VA = "0x115ADDC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000909")]
			[Address(RVA = "0x115A9DC", Offset = "0x115A9DC", VA = "0x115A9DC")]
			[DebuggerHidden]
			public <get_ReferencedTextures>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600090A")]
			[Address(RVA = "0x115AA14", Offset = "0x115AA14", VA = "0x115AA14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600090B")]
			[Address(RVA = "0x115AAEC", Offset = "0x115AAEC", VA = "0x115AAEC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600090C")]
			[Address(RVA = "0x115AA30", Offset = "0x115AA30", VA = "0x115AA30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600090E")]
			[Address(RVA = "0x115AD9C", Offset = "0x115AD9C", VA = "0x115AD9C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000910")]
			[Address(RVA = "0x115ADE4", Offset = "0x115ADE4", VA = "0x115ADE4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000911")]
			[Address(RVA = "0x115AE8C", Offset = "0x115AE8C", VA = "0x115AE8C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A6C")]
		public const string kAlphaModeOpaque = "OPAQUE";

		[Token(Token = "0x4000A6D")]
		public const string kAlphaModeMask = "MASK";

		[Token(Token = "0x4000A6E")]
		public const string kAlphaModeBlend = "BLEND";

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PbrMetallicRoughness pbrMetallicRoughness;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureInfo normalTexture;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextureInfo emissiveTexture;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 emissiveFactor;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string alphaMode;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool doubleSided;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Extensions extensions;

		[Token(Token = "0x1700010A")]
		public override Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xF9E218", Offset = "0xF9E218", VA = "0xF9E218", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private IEnumerable<TextureInfo> TextureInfos
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xF9E220", Offset = "0xF9E220", VA = "0xF9E220")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3A9F0", Offset = "0xB3A9F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public override IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xF9E28C", Offset = "0xF9E28C", VA = "0xF9E28C", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AA50", Offset = "0xB3AA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xF9E2F8", Offset = "0xF9E2F8", VA = "0xF9E2F8")]
		public Gltf2Material()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class Gltf2Texture : GltfTextureBase
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int source;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public Gltf2Image sourcePtr;

		[Token(Token = "0x17000111")]
		public override object GltfId
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0xF9F9D8", Offset = "0xF9F9D8", VA = "0xF9F9D8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public override GltfImageBase SourcePtr
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0xF9FA38", Offset = "0xF9FA38", VA = "0xF9FA38", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xF9FA40", Offset = "0xF9FA40", VA = "0xF9FA40")]
		public Gltf2Texture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000194")]
	public class Gltf2Image : GltfImageBase
	{
		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mimeType;

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xF9E210", Offset = "0xF9E210", VA = "0xF9E210")]
		public Gltf2Image()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000195")]
	public class Gltf2Mesh : GltfMeshBase
	{
		[Token(Token = "0x2000196")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B54", Offset = "0xB28B54")]
		private sealed class <get_Primitives>d__3 : IEnumerable<GltfPrimitiveBase>, IEnumerable, IEnumerator<GltfPrimitiveBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfPrimitiveBase <>2__current;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Mesh <>4__this;

			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Primitive>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000115")]
			private GltfPrimitiveBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfPrimitiveBase>.Current
			{
				[Token(Token = "0x600091E")]
				[Address(RVA = "0x115B35C", Offset = "0x115B35C", VA = "0x115B35C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000116")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000920")]
				[Address(RVA = "0x115B3A4", Offset = "0x115B3A4", VA = "0x115B3A4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600091A")]
			[Address(RVA = "0x115B140", Offset = "0x115B140", VA = "0x115B140")]
			[DebuggerHidden]
			public <get_Primitives>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600091B")]
			[Address(RVA = "0x115B178", Offset = "0x115B178", VA = "0x115B178", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600091C")]
			[Address(RVA = "0x115B1E8", Offset = "0x115B1E8", VA = "0x115B1E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600091D")]
			[Address(RVA = "0x115B194", Offset = "0x115B194", VA = "0x115B194")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600091F")]
			[Address(RVA = "0x115B364", Offset = "0x115B364", VA = "0x115B364", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000921")]
			[Address(RVA = "0x115B3AC", Offset = "0x115B3AC", VA = "0x115B3AC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfPrimitiveBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfPrimitiveBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000922")]
			[Address(RVA = "0x115B454", Offset = "0x115B454", VA = "0x115B454", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Gltf2Primitive> primitives;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x17000113")]
		public override IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0xF9E300", Offset = "0xF9E300", VA = "0xF9E300", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AB90", Offset = "0xB3AB90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public override int PrimitiveCount
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xF9E36C", Offset = "0xF9E36C", VA = "0xF9E36C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xF9E3B8", Offset = "0xF9E3B8", VA = "0xF9E3B8", Slot = "6")]
		public override GltfPrimitiveBase GetPrimitiveAt(int i)
		{
			return null;
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xF9E42C", Offset = "0xF9E42C", VA = "0xF9E42C")]
		public Gltf2Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class Gltf2Node : GltfNodeBase
	{
		[Token(Token = "0x2000198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B64", Offset = "0xB28B64")]
		private sealed class <get_Children>d__8 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Node <>4__this;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000119")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x600092A")]
				[Address(RVA = "0x115B670", Offset = "0x115B670", VA = "0x115B670", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600092C")]
				[Address(RVA = "0x115B6B8", Offset = "0x115B6B8", VA = "0x115B6B8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000926")]
			[Address(RVA = "0x115B458", Offset = "0x115B458", VA = "0x115B458")]
			[DebuggerHidden]
			public <get_Children>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000927")]
			[Address(RVA = "0x115B490", Offset = "0x115B490", VA = "0x115B490", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000928")]
			[Address(RVA = "0x115B500", Offset = "0x115B500", VA = "0x115B500", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000929")]
			[Address(RVA = "0x115B4AC", Offset = "0x115B4AC", VA = "0x115B4AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600092B")]
			[Address(RVA = "0x115B678", Offset = "0x115B678", VA = "0x115B678", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600092D")]
			[Address(RVA = "0x115B6C0", Offset = "0x115B6C0", VA = "0x115B6C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600092E")]
			[Address(RVA = "0x115B768", Offset = "0x115B768", VA = "0x115B768", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> children;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int mesh;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[JsonIgnore]
		public Gltf2Mesh meshPtr;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[JsonIgnore]
		public List<Gltf2Node> childPtrs;

		[Token(Token = "0x17000117")]
		public override GltfMeshBase Mesh
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xF9E434", Offset = "0xF9E434", VA = "0xF9E434", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public override IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xF9E43C", Offset = "0xF9E43C", VA = "0xF9E43C", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AC60", Offset = "0xB3AC60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xF9E4A8", Offset = "0xF9E4A8", VA = "0xF9E4A8")]
		public Gltf2Node()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class Gltf2Scene : GltfSceneBase
	{
		[Token(Token = "0x200019A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B74", Offset = "0xB28B74")]
		private sealed class <get_Nodes>d__4 : IEnumerable<GltfNodeBase>, IEnumerable, IEnumerator<GltfNodeBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfNodeBase <>2__current;

			[Token(Token = "0x4000AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Gltf2Scene <>4__this;

			[Token(Token = "0x4000AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Gltf2Node>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700011C")]
			private GltfNodeBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfNodeBase>.Current
			{
				[Token(Token = "0x6000935")]
				[Address(RVA = "0x115BA30", Offset = "0x115BA30", VA = "0x115BA30", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000937")]
				[Address(RVA = "0x115BA78", Offset = "0x115BA78", VA = "0x115BA78", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000931")]
			[Address(RVA = "0x115B814", Offset = "0x115B814", VA = "0x115B814")]
			[DebuggerHidden]
			public <get_Nodes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000932")]
			[Address(RVA = "0x115B84C", Offset = "0x115B84C", VA = "0x115B84C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000933")]
			[Address(RVA = "0x115B8BC", Offset = "0x115B8BC", VA = "0x115B8BC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000934")]
			[Address(RVA = "0x115B868", Offset = "0x115B868", VA = "0x115B868")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000936")]
			[Address(RVA = "0x115BA38", Offset = "0x115BA38", VA = "0x115BA38", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000938")]
			[Address(RVA = "0x115BA80", Offset = "0x115BA80", VA = "0x115BA80", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfNodeBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfNodeBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000939")]
			[Address(RVA = "0x115BB28", Offset = "0x115BB28", VA = "0x115BB28", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> nodes;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public int gltfIndex;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[JsonIgnore]
		public List<Gltf2Node> nodePtrs;

		[Token(Token = "0x1700011B")]
		public override IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0xF9F964", Offset = "0xF9F964", VA = "0xF9F964", Slot = "4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AD30", Offset = "0xB3AD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xF9F9D0", Offset = "0xF9F9D0", VA = "0xF9F9D0")]
		public Gltf2Scene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public struct GltfImportOptions
	{
		[Token(Token = "0x200019C")]
		public enum RescalingMode
		{
			[Token(Token = "0x4000AB3")]
			CONVERT,
			[Token(Token = "0x4000AB4")]
			FIT
		}

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AxisConvention? axisConventionOverride;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RescalingMode rescalingMode;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scaleFactor;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float desiredSize;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool recenter;

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xF9FA50", Offset = "0xF9FA50", VA = "0xF9FA50")]
		public static GltfImportOptions Default()
		{
			return default(GltfImportOptions);
		}
	}
	[Token(Token = "0x200019D")]
	public class GltfMaterialConverter
	{
		[Token(Token = "0x200019E")]
		public struct UnityMaterial
		{
			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material template;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor exportableMaterial;
		}

		[Token(Token = "0x200019F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B84", Offset = "0xB28B84")]
		private sealed class <NecessaryTextures>d__6 : IEnumerable<GltfTextureBase>, IEnumerable, IEnumerator<GltfTextureBase>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GltfTextureBase <>2__current;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfRootBase root;

			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfRootBase <>3__root;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<GltfMaterialBase> <>7__wrap1;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<GltfTextureBase> <>7__wrap2;

			[Token(Token = "0x1700011E")]
			private GltfTextureBase System.Collections.Generic.IEnumerator<TiltBrushToolkit.GltfTextureBase>.Current
			{
				[Token(Token = "0x6000952")]
				[Address(RVA = "0x115D860", Offset = "0x115D860", VA = "0x115D860", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000954")]
				[Address(RVA = "0x115D8A8", Offset = "0x115D8A8", VA = "0x115D8A8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600094D")]
			[Address(RVA = "0x115D180", Offset = "0x115D180", VA = "0x115D180")]
			[DebuggerHidden]
			public <NecessaryTextures>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600094E")]
			[Address(RVA = "0x115D1B8", Offset = "0x115D1B8", VA = "0x115D1B8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600094F")]
			[Address(RVA = "0x115D3C0", Offset = "0x115D3C0", VA = "0x115D3C0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000950")]
			[Address(RVA = "0x115D304", Offset = "0x115D304", VA = "0x115D304")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000951")]
			[Address(RVA = "0x115D248", Offset = "0x115D248", VA = "0x115D248")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000953")]
			[Address(RVA = "0x115D868", Offset = "0x115D868", VA = "0x115D868", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000955")]
			[Address(RVA = "0x115D8B0", Offset = "0x115D8B0", VA = "0x115D8B0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GltfTextureBase> System.Collections.Generic.IEnumerable<TiltBrushToolkit.GltfTextureBase>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000956")]
			[Address(RVA = "0x115D958", Offset = "0x115D958", VA = "0x115D958", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28B94", Offset = "0xB28B94")]
		private sealed class <LoadTexturesCoroutine>d__7 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfRootBase root;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfRootBase <>3__root;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader loader;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__loader;

			[Token(Token = "0x4000ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Texture2D> loaded;

			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Texture2D> <>3__loaded;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<GltfTextureBase> <>7__wrap1;

			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GltfTextureBase <gltfTexture>5__3;

			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private IEnumerator <>7__wrap3;

			[Token(Token = "0x17000120")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600095C")]
				[Address(RVA = "0x115D074", Offset = "0x115D074", VA = "0x115D074", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000121")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600095E")]
				[Address(RVA = "0x115D0BC", Offset = "0x115D0BC", VA = "0x115D0BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x115C458", Offset = "0x115C458", VA = "0x115C458")]
			[DebuggerHidden]
			public <LoadTexturesCoroutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000958")]
			[Address(RVA = "0x115C490", Offset = "0x115C490", VA = "0x115C490", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000959")]
			[Address(RVA = "0x115C6A4", Offset = "0x115C6A4", VA = "0x115C6A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600095A")]
			[Address(RVA = "0x115C5E8", Offset = "0x115C5E8", VA = "0x115C5E8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600095B")]
			[Address(RVA = "0x115C520", Offset = "0x115C520", VA = "0x115C520")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600095D")]
			[Address(RVA = "0x115D07C", Offset = "0x115D07C", VA = "0x115D07C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600095F")]
			[Address(RVA = "0x115D0C4", Offset = "0x115D0C4", VA = "0x115D0C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000960")]
			[Address(RVA = "0x115D17C", Offset = "0x115D17C", VA = "0x115D17C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BA4", Offset = "0xB28BA4")]
		private sealed class <ConvertTextureCoroutine>d__17 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfTextureBase gltfTexture;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfTextureBase <>3__gltfTexture;

			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader loader;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__loader;

			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <tex>5__2;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RawImage <data>5__3;

			[Token(Token = "0x17000122")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000964")]
				[Address(RVA = "0x115C354", Offset = "0x115C354", VA = "0x115C354", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000123")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000966")]
				[Address(RVA = "0x115C39C", Offset = "0x115C39C", VA = "0x115C39C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000961")]
			[Address(RVA = "0x115BB2C", Offset = "0x115BB2C", VA = "0x115BB2C")]
			[DebuggerHidden]
			public <ConvertTextureCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000962")]
			[Address(RVA = "0x115BB64", Offset = "0x115BB64", VA = "0x115BB64", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000963")]
			[Address(RVA = "0x115BB68", Offset = "0x115BB68", VA = "0x115BB68", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000965")]
			[Address(RVA = "0x115C35C", Offset = "0x115C35C", VA = "0x115C35C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000967")]
			[Address(RVA = "0x115C3A4", Offset = "0x115C3A4", VA = "0x115C3A4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000968")]
			[Address(RVA = "0x115C454", Offset = "0x115C454", VA = "0x115C454", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex kTiltBrushMaterialRegex;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Regex kTiltBrushShaderRegex;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Material> m_newMaterials;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GltfMaterialBase, UnityMaterial> m_getMaterialMemo;

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xF9FD10", Offset = "0xF9FD10", VA = "0xF9FD10")]
		private static bool IsTiltBrushHostedUri(string uri)
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xF9FD68", Offset = "0xF9FD68", VA = "0xF9FD68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AE00", Offset = "0xB3AE00")]
		public static IEnumerable<GltfTextureBase> NecessaryTextures(GltfRootBase root)
		{
			return null;
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xF9FDD4", Offset = "0xF9FDD4", VA = "0xF9FDD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AE60", Offset = "0xB3AE60")]
		public static IEnumerable LoadTexturesCoroutine(GltfRootBase root, IUriLoader loader, List<Texture2D> loaded)
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xF9FE58", Offset = "0xF9FE58", VA = "0xF9FE58")]
		public UnityMaterial? GetMaterial(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xFA0798", Offset = "0xFA0798", VA = "0xFA0798")]
		public List<Material> GetGeneratedMaterials()
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xFA0810", Offset = "0xFA0810", VA = "0xFA0810")]
		private static bool IsGlobalMaterial(GltfMaterialBase gltfMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xFA0158", Offset = "0xFA0158", VA = "0xFA0158")]
		private static UnityMaterial? LookUpGlobalMaterial(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xFA05BC", Offset = "0xFA05BC", VA = "0xFA05BC")]
		private UnityMaterial? ConvertGltfMaterial(GltfMaterialBase gltfMat)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xFA0A50", Offset = "0xFA0A50", VA = "0xFA0A50")]
		private UnityMaterial? ConvertGltf1Material(Gltf1Material gltfMat)
		{
			return null;
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xFA0DEC", Offset = "0xFA0DEC", VA = "0xFA0DEC")]
		private UnityMaterial? ConvertGltf2Material(Gltf2Material gltfMat)
		{
			return null;
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xFA1298", Offset = "0xFA1298", VA = "0xFA1298")]
		private UnityMaterial CreateNewPbrMaterial(TbtSettings.PbrMaterialInfo pbrInfo, string gltfMatName, Gltf2Material.PbrMetallicRoughness pbr)
		{
			return default(UnityMaterial);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xFA14F0", Offset = "0xFA14F0", VA = "0xFA14F0")]
		private static string SanitizeName(string uri)
		{
			return null;
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xFA15C8", Offset = "0xFA15C8", VA = "0xFA15C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3AEC0", Offset = "0xB3AEC0")]
		private static IEnumerable ConvertTextureCoroutine(GltfTextureBase gltfTexture, IUriLoader loader)
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xFA0898", Offset = "0xFA0898", VA = "0xFA0898")]
		private static Guid ParseGuidFromMaterial(GltfMaterialBase gltfMaterial)
		{
			return default(Guid);
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xFA1158", Offset = "0xFA1158", VA = "0xFA1158")]
		private static Guid ParseGuidFromShader(Gltf1Material material)
		{
			return default(Guid);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xFA1644", Offset = "0xFA1644", VA = "0xFA1644")]
		public static BrushDescriptor LookupBrushDescriptor(GltfMaterialBase gltfMaterial)
		{
			return null;
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xFA1934", Offset = "0xFA1934", VA = "0xFA1934")]
		public GltfMaterialConverter()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public enum GltfSchemaVersion
	{
		[Token(Token = "0x4000AD9")]
		GLTF1,
		[Token(Token = "0x4000ADA")]
		GLTF2
	}
	[Token(Token = "0x20001A3")]
	public class BadJson : Exception
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1438738", Offset = "0x1438738", VA = "0x1438738")]
		public BadJson(string message)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x14387AC", Offset = "0x14387AC", VA = "0x14387AC")]
		public BadJson(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x143883C", Offset = "0x143883C", VA = "0x143883C")]
		public BadJson(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class JsonVectorConverter : JsonConverter
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x12E8BB4", Offset = "0x12E8BB4", VA = "0x12E8BB4", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x12E8D4C", Offset = "0x12E8D4C", VA = "0x12E8D4C")]
		private static float ReadFloat(JsonReader reader)
		{
			return default(float);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x12E8E68", Offset = "0x12E8E68", VA = "0x12E8E68", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x12E9330", Offset = "0x12E9330", VA = "0x12E9330", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x12E9370", Offset = "0x12E9370", VA = "0x12E9370")]
		public JsonVectorConverter()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class GltfJsonContractResolver : DefaultContractResolver
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0xF9FA7C", Offset = "0xF9FA7C", VA = "0xF9FA7C", Slot = "18")]
		protected override JsonContract CreateContract(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xF9FCAC", Offset = "0xF9FCAC", VA = "0xF9FCAC")]
		public GltfJsonContractResolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class GltfAsset
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, string> extensions;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string copyright;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string generator;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool premultipliedAlpha;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string version;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xF9FA48", Offset = "0xF9FA48", VA = "0xF9FA48")]
		public GltfAsset()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class MeshPrecursor
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] colors;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32[] colors32;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Array[] uvSets;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] triangles;

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x10E179C", Offset = "0x10E179C", VA = "0x10E179C")]
		public MeshPrecursor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A8")]
	public abstract class GltfRootBase : IDisposable
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GltfAsset asset;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public Version? tiltBrushVersion;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[JsonIgnore]
		public Version? blocksVersion;

		[Token(Token = "0x17000124")]
		public abstract GltfSceneBase ScenePtr
		{
			[Token(Token = "0x6000975")]
			get;
		}

		[Token(Token = "0x17000125")]
		public abstract IEnumerable<GltfImageBase> Images
		{
			[Token(Token = "0x6000976")]
			get;
		}

		[Token(Token = "0x17000126")]
		public abstract IEnumerable<GltfTextureBase> Textures
		{
			[Token(Token = "0x6000977")]
			get;
		}

		[Token(Token = "0x17000127")]
		public abstract IEnumerable<GltfMaterialBase> Materials
		{
			[Token(Token = "0x6000978")]
			get;
		}

		[Token(Token = "0x17000128")]
		public abstract IEnumerable<GltfMeshBase> Meshes
		{
			[Token(Token = "0x6000979")]
			get;
		}

		[Token(Token = "0x600097A")]
		public abstract void Dereference(bool isGlb, [Optional] IUriLoader uriLoader);

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xFA1AB8", Offset = "0xFA1AB8", VA = "0xFA1AB8", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xF9C8B4", Offset = "0xF9C8B4", VA = "0xF9C8B4", Slot = "11")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xF9DF98", Offset = "0xF9DF98", VA = "0xF9DF98")]
		protected GltfRootBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public abstract class GltfBufferBase
	{
		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long byteLength;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string uri;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public IBufferReader data;

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xF9BEEC", Offset = "0xF9BEEC", VA = "0xF9BEEC")]
		protected GltfBufferBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AA")]
	public abstract class GltfAccessorBase
	{
		[Serializable]
		[Token(Token = "0x20001AB")]
		public enum ComponentType
		{
			[Token(Token = "0x4000AF6")]
			BYTE = 5120,
			[Token(Token = "0x4000AF7")]
			UNSIGNED_BYTE = 5121,
			[Token(Token = "0x4000AF8")]
			SHORT = 5122,
			[Token(Token = "0x4000AF9")]
			UNSIGNED_SHORT = 5123,
			[Token(Token = "0x4000AFA")]
			UNSIGNED_INT = 5125,
			[Token(Token = "0x4000AFB")]
			FLOAT = 5126
		}

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int byteOffset;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int byteStride;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ComponentType componentType;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int count;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> max;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> min;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string type;

		[Token(Token = "0x17000129")]
		public abstract GltfBufferViewBase BufferViewPtr
		{
			[Token(Token = "0x600097F")]
			get;
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xF9BEDC", Offset = "0xF9BEDC", VA = "0xF9BEDC")]
		protected GltfAccessorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public abstract class GltfBufferViewBase
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int byteLength;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int byteOffset;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int target;

		[Token(Token = "0x1700012A")]
		public abstract GltfBufferBase BufferPtr
		{
			[Token(Token = "0x6000981")]
			get;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xF9BF04", Offset = "0xF9BF04", VA = "0xF9BF04")]
		protected GltfBufferViewBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AD")]
	public abstract class GltfPrimitiveBase
	{
		[Serializable]
		[Token(Token = "0x20001AE")]
		public enum Mode
		{
			[Token(Token = "0x4000B03")]
			TRIANGLES = 4
		}

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public List<MeshPrecursor> precursorMeshes;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[JsonIgnore]
		public List<Mesh> unityMeshes;

		[Token(Token = "0x1700012B")]
		public abstract GltfMaterialBase MaterialPtr
		{
			[Token(Token = "0x6000983")]
			get;
		}

		[Token(Token = "0x1700012C")]
		public abstract GltfAccessorBase IndicesPtr
		{
			[Token(Token = "0x6000984")]
			get;
		}

		[Token(Token = "0x6000985")]
		public abstract GltfAccessorBase GetAttributePtr(string attributeName);

		[Token(Token = "0x6000986")]
		public abstract void ReplaceAttribute(string original, string replacement);

		[Token(Token = "0x6000987")]
		public abstract HashSet<string> GetAttributeNames();

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xF9C480", Offset = "0xF9C480", VA = "0xF9C480")]
		protected GltfPrimitiveBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AF")]
	public abstract class GltfImageBase
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[JsonIgnore]
		public RawImage data;

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xF9BF14", Offset = "0xF9BF14", VA = "0xF9BF14")]
		protected GltfImageBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B0")]
	public abstract class GltfTextureBase
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public Texture2D unityTexture;

		[Token(Token = "0x1700012D")]
		public abstract object GltfId
		{
			[Token(Token = "0x600098A")]
			get;
		}

		[Token(Token = "0x1700012E")]
		public abstract GltfImageBase SourcePtr
		{
			[Token(Token = "0x600098B")]
			get;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xF9E1E0", Offset = "0xF9E1E0", VA = "0xF9E1E0")]
		protected GltfTextureBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B1")]
	public abstract class GltfMaterialBase
	{
		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x1700012F")]
		public abstract Dictionary<string, string> TechniqueExtras
		{
			[Token(Token = "0x600098D")]
			get;
		}

		[Token(Token = "0x17000130")]
		public abstract IEnumerable<GltfTextureBase> ReferencedTextures
		{
			[Token(Token = "0x600098E")]
			get;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xF9BFA8", Offset = "0xF9BFA8", VA = "0xF9BFA8")]
		protected GltfMaterialBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B2")]
	public abstract class GltfMeshBase
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x17000131")]
		public abstract IEnumerable<GltfPrimitiveBase> Primitives
		{
			[Token(Token = "0x6000990")]
			get;
		}

		[Token(Token = "0x17000132")]
		public abstract int PrimitiveCount
		{
			[Token(Token = "0x6000991")]
			get;
		}

		[Token(Token = "0x6000992")]
		public abstract GltfPrimitiveBase GetPrimitiveAt(int i);

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xF9C0E4", Offset = "0xF9C0E4", VA = "0xF9C0E4")]
		protected GltfMeshBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B3")]
	public abstract class GltfNodeBase
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4? matrix;

		[Token(Token = "0x17000133")]
		public abstract GltfMeshBase Mesh
		{
			[Token(Token = "0x6000994")]
			get;
		}

		[Token(Token = "0x17000134")]
		public abstract IEnumerable<GltfNodeBase> Children
		{
			[Token(Token = "0x6000995")]
			get;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xF9C218", Offset = "0xF9C218", VA = "0xF9C218")]
		protected GltfNodeBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B4")]
	public abstract class GltfSceneBase
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, string> extras;

		[Token(Token = "0x17000135")]
		public abstract IEnumerable<GltfNodeBase> Nodes
		{
			[Token(Token = "0x6000997")]
			get;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xF9E1B0", Offset = "0xF9E1B0", VA = "0xF9E1B0")]
		protected GltfSceneBase()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class RawImage
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32[] colorData;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int colorWidth;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int colorHeight;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureFormat format;

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x11FFF3C", Offset = "0x11FFF3C", VA = "0x11FFF3C")]
		public RawImage()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public interface IBufferReader : IDisposable
	{
		[Token(Token = "0x600099A")]
		void Read(IntPtr destination, int readStart, int readSize);

		[Token(Token = "0x600099B")]
		void Read(byte[] destination, int destinationOffset, int readStart, int readSize);

		[Token(Token = "0x600099C")]
		long GetContentLength();
	}
	[Token(Token = "0x20001B7")]
	public interface IUriLoader
	{
		[Token(Token = "0x600099D")]
		IBufferReader Load(string uri);

		[Token(Token = "0x600099E")]
		bool CanLoadImages();

		[Token(Token = "0x600099F")]
		RawImage LoadAsImage(string uri);
	}
	[Token(Token = "0x20001B8")]
	public class Reader : IBufferReader, IDisposable
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] data;

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xFAE8AC", Offset = "0xFAE8AC", VA = "0xFAE8AC")]
		public Reader(byte[] data)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xFAE8D8", Offset = "0xFAE8D8", VA = "0xFAE8D8", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xFAE8DC", Offset = "0xFAE8DC", VA = "0xFAE8DC", Slot = "4")]
		public void Read(IntPtr destination, int readStart, int readSize)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xFAE96C", Offset = "0xFAE96C", VA = "0xFAE96C", Slot = "5")]
		public void Read(byte[] dest, int destOffset, int readStart, int readSize)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xFAE988", Offset = "0xFAE988", VA = "0xFAE988", Slot = "6")]
		public long GetContentLength()
		{
			return default(long);
		}
	}
	[Token(Token = "0x20001B9")]
	public class BufferedStreamLoader : IUriLoader
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string glbPath;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string uriBase;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int bufferSize;

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x1282058", Offset = "0x1282058", VA = "0x1282058")]
		public BufferedStreamLoader(string glbPath, string uriBase, int bufferSize = 4096)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x1282098", Offset = "0x1282098", VA = "0x1282098", Slot = "4")]
		public IBufferReader Load(string uri)
		{
			return null;
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1282264", Offset = "0x1282264", VA = "0x1282264", Slot = "5")]
		public bool CanLoadImages()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x128226C", Offset = "0x128226C", VA = "0x128226C", Slot = "6")]
		public RawImage LoadAsImage(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BA")]
	internal sealed class BufferedStreamReader : IBufferReader, IDisposable
	{
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream stream;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] tempBuffer;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long contentLength;

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x12821E4", Offset = "0x12821E4", VA = "0x12821E4")]
		public BufferedStreamReader(Stream stream, int bufferSize, long contentLength)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x12822AC", Offset = "0x12822AC", VA = "0x12822AC", Slot = "7")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x12822C0", Offset = "0x12822C0", VA = "0x12822C0", Slot = "4")]
		public void Read(IntPtr destination, int readStart, int readSize)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x128243C", Offset = "0x128243C", VA = "0x128243C", Slot = "5")]
		public void Read(byte[] dest, int destOffset, int readStart, int readSize)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x12824D8", Offset = "0x12824D8", VA = "0x12824D8", Slot = "6")]
		public long GetContentLength()
		{
			return default(long);
		}
	}
	[Token(Token = "0x20001BB")]
	public interface IImportMaterialCollector
	{
		[Token(Token = "0x60009AE")]
		void Add(GltfMaterialConverter.UnityMaterial unityMaterial, GltfMaterialBase gltfMaterial);
	}
	[Token(Token = "0x20001BC")]
	public static class ImportGltf
	{
		[Token(Token = "0x20001BD")]
		public class GltfImportResult
		{
			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Mesh> meshes;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Material> materials;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Texture2D> textures;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IImportMaterialCollector materialCollector;

			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xFFBEBC", Offset = "0xFFBEBC", VA = "0xFFBEBC")]
			public GltfImportResult()
			{
			}
		}

		[Token(Token = "0x20001BE")]
		public sealed class ImportState : IDisposable
		{
			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal readonly Matrix4x4 gltfFromUnity;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal readonly Matrix4x4 unityFromGltf;

			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal GltfRootBase root;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal GltfSceneBase desiredScene;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal float scaleFactor;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			internal float nodeScaleFactor;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal Vector3 translation;

			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xFFBEC4", Offset = "0xFFBEC4", VA = "0xFFBEC4")]
			internal ImportState(AxisConvention axes)
			{
			}

			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xFFBFE8", Offset = "0xFFBFE8", VA = "0xFFBFE8", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20001BF")]
		public class GltfFileInfo : IDisposable
		{
			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D30C", Offset = "0xB2D30C")]
			private string <Path>k__BackingField;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D31C", Offset = "0xB2D31C")]
			private GltfSchemaVersion <Version>k__BackingField;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D32C", Offset = "0xB2D32C")]
			private bool <IsGlb>k__BackingField;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D33C", Offset = "0xB2D33C")]
			private TextReader <Reader>k__BackingField;

			[Token(Token = "0x17000136")]
			public string Path
			{
				[Token(Token = "0x60009DB")]
				[Address(RVA = "0xFFBCB4", Offset = "0xFFBCB4", VA = "0xFFBCB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B1F0", Offset = "0xB3B1F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009DC")]
				[Address(RVA = "0xFFBCBC", Offset = "0xFFBCBC", VA = "0xFFBCBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B200", Offset = "0xB3B200")]
				private set
				{
				}
			}

			[Token(Token = "0x17000137")]
			public GltfSchemaVersion Version
			{
				[Token(Token = "0x60009DD")]
				[Address(RVA = "0xFFBCC4", Offset = "0xFFBCC4", VA = "0xFFBCC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B210", Offset = "0xB3B210")]
				get
				{
					return default(GltfSchemaVersion);
				}
				[Token(Token = "0x60009DE")]
				[Address(RVA = "0xFFBCCC", Offset = "0xFFBCCC", VA = "0xFFBCCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B220", Offset = "0xB3B220")]
				private set
				{
				}
			}

			[Token(Token = "0x17000138")]
			public bool IsGlb
			{
				[Token(Token = "0x60009DF")]
				[Address(RVA = "0xFFBCD4", Offset = "0xFFBCD4", VA = "0xFFBCD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B230", Offset = "0xB3B230")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60009E0")]
				[Address(RVA = "0xFFBCDC", Offset = "0xFFBCDC", VA = "0xFFBCDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B240", Offset = "0xB3B240")]
				private set
				{
				}
			}

			[Token(Token = "0x17000139")]
			public TextReader Reader
			{
				[Token(Token = "0x60009E1")]
				[Address(RVA = "0xFFBCE8", Offset = "0xFFBCE8", VA = "0xFFBCE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B250", Offset = "0xB3B250")]
				get
				{
					return null;
				}
				[Token(Token = "0x60009E2")]
				[Address(RVA = "0xFFBCF0", Offset = "0xFFBCF0", VA = "0xFFBCF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B260", Offset = "0xB3B260")]
				private set
				{
				}
			}

			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xFFBCF8", Offset = "0xFFBCF8", VA = "0xFFBCF8")]
			public GltfFileInfo(string path)
			{
			}

			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xFFBEA8", Offset = "0xFFBEA8", VA = "0xFFBEA8", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001C0")]
		private class Gltf1Or2
		{
			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GltfAsset asset;

			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xFFBCAC", Offset = "0xFFBCAC", VA = "0xFFBCAC")]
			public Gltf1Or2()
			{
			}
		}

		[Token(Token = "0x20001C1")]
		private struct MeshSubset
		{
			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntRange vertices;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntRange triangles;
		}

		[Token(Token = "0x20001C2")]
		private enum ColorSpace
		{
			[Token(Token = "0x4000B31")]
			Unknown,
			[Token(Token = "0x4000B32")]
			Srgb,
			[Token(Token = "0x4000B33")]
			Linear
		}

		[Serializable]
		[Token(Token = "0x20001C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BB4", Offset = "0xB28BB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__14_0;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GltfTextureBase, GltfImageBase> <>9__14_1;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GltfImageBase, bool> <>9__14_2;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Color32, Color> <>9__33_0;

			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xFF8D10", Offset = "0xFF8D10", VA = "0xFF8D10")]
			public <>c()
			{
			}

			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xFF8D18", Offset = "0xFF8D18", VA = "0xFF8D18")]
			internal bool <BeginImport>b__14_0(string n)
			{
				return default(bool);
			}

			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xFF8D70", Offset = "0xFF8D70", VA = "0xFF8D70")]
			internal GltfImageBase <BeginImport>b__14_1(GltfTextureBase tex)
			{
				return null;
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xFF8D90", Offset = "0xFF8D90", VA = "0xFF8D90")]
			internal bool <BeginImport>b__14_2(GltfImageBase image)
			{
				return default(bool);
			}

			[Token(Token = "0x60009EB")]
			[Address(RVA = "0xFF8D9C", Offset = "0xFF8D9C", VA = "0xFF8D9C")]
			internal Color <StoreDataInMesh>b__33_0(Color32 c32)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x20001C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BC4", Offset = "0xB28BC4")]
		private sealed class <CreateGameObjectsFromNodes>d__23 : IEnumerable<Null>, IEnumerable, IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ImportState state;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ImportState <>3__state;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IUriLoader uriLoader;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public IUriLoader <>3__uriLoader;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GltfImportResult result;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<Texture2D> <loaded>5__2;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GltfMaterialConverter <matConverter>5__3;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Transform <rootTransform>5__4;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private IEnumerator <>7__wrap4;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private IEnumerator<GltfNodeBase> <>7__wrap5;

			[Token(Token = "0x1700013A")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60009F2")]
				[Address(RVA = "0xFFB590", Offset = "0xFFB590", VA = "0xFFB590", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009F4")]
				[Address(RVA = "0xFFB5D8", Offset = "0xFFB5D8", VA = "0xFFB5D8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009EC")]
			[Address(RVA = "0xFFA778", Offset = "0xFFA778", VA = "0xFFA778")]
			[DebuggerHidden]
			public <CreateGameObjectsFromNodes>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xFFA7B0", Offset = "0xFFA7B0", VA = "0xFFA7B0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xFFAAF0", Offset = "0xFFAAF0", VA = "0xFFAAF0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xFFA8A4", Offset = "0xFFA8A4", VA = "0xFFA8A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xFFAA34", Offset = "0xFFAA34", VA = "0xFFAA34")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xFFA96C", Offset = "0xFFA96C", VA = "0xFFA96C")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xFFB598", Offset = "0xFFB598", VA = "0xFFB598", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xFFB5E0", Offset = "0xFFB5E0", VA = "0xFFB5E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Null> System.Collections.Generic.IEnumerable<TiltBrush.Null>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xFFB698", Offset = "0xFFB698", VA = "0xFFB698", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BD4", Offset = "0xB28BD4")]
		private sealed class <CreateGameObjectsFromNode>d__24 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfNodeBase node;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfNodeBase <>3__node;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform parent;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform <>3__parent;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ImportState state;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ImportState <>3__state;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 translationToApply;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 <>3__translationToApply;

			[Token(Token = "0x4000B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private GltfImportResult result;

			[Token(Token = "0x4000B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private GltfMaterialConverter matConverter;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public GltfMaterialConverter <>3__matConverter;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private GameObject <obj>5__2;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IEnumerator <>7__wrap2;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private IEnumerator<GltfNodeBase> <>7__wrap3;

			[Token(Token = "0x1700013C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009FD")]
				[Address(RVA = "0xFFA64C", Offset = "0xFFA64C", VA = "0xFFA64C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009FF")]
				[Address(RVA = "0xFFA694", Offset = "0xFFA694", VA = "0xFFA694", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xFF97A8", Offset = "0xFF97A8", VA = "0xFF97A8")]
			[DebuggerHidden]
			public <CreateGameObjectsFromNode>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60009F8")]
			[Address(RVA = "0xFF97E0", Offset = "0xFF97E0", VA = "0xFF97E0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xFF9B20", Offset = "0xFF9B20", VA = "0xFF9B20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xFF98D4", Offset = "0xFF98D4", VA = "0xFF98D4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xFF9A64", Offset = "0xFF9A64", VA = "0xFF9A64")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xFF999C", Offset = "0xFF999C", VA = "0xFF999C")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xFFA654", Offset = "0xFFA654", VA = "0xFFA654", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xFFA69C", Offset = "0xFFA69C", VA = "0xFFA69C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A01")]
			[Address(RVA = "0xFFA774", Offset = "0xFFA774", VA = "0xFFA774", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BE4", Offset = "0xB28BE4")]
		private sealed class <CreateGameObjectsFromMesh>d__25 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GltfMeshBase mesh;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GltfMeshBase <>3__mesh;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GltfMaterialConverter matConverter;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GltfMaterialConverter <>3__matConverter;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GltfImportResult result;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GltfImportResult <>3__result;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool allowMeshInParent;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool <>3__allowMeshInParent;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform parent;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform <>3__parent;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <iP>5__2;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private GltfPrimitiveBase <prim>5__3;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private GltfMaterialConverter.UnityMaterial? <unityMaterial>5__4;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private string <primName>5__5;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <iM>5__6;

			[Token(Token = "0x1700013E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A05")]
				[Address(RVA = "0xFF968C", Offset = "0xFF968C", VA = "0xFF968C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A07")]
				[Address(RVA = "0xFF96D4", Offset = "0xFF96D4", VA = "0xFF96D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xFF8DA8", Offset = "0xFF8DA8", VA = "0xFF8DA8")]
			[DebuggerHidden]
			public <CreateGameObjectsFromMesh>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xFF8DE0", Offset = "0xFF8DE0", VA = "0xFF8DE0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xFF8DE4", Offset = "0xFF8DE4", VA = "0xFF8DE4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xFF9694", Offset = "0xFF9694", VA = "0xFF9694", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xFF96DC", Offset = "0xFF96DC", VA = "0xFF96DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xFF97A4", Offset = "0xFF97A4", VA = "0xFF97A4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20001C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28BF4", Offset = "0xB28BF4")]
		private sealed class <GenerateMeshSubsets>d__28 : IEnumerable<MeshSubset>, IEnumerable, IEnumerator<MeshSubset>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private MeshSubset <>2__current;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int numVerts;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int <>3__numVerts;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int maxSubsetVerts;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__maxSubsetVerts;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ushort[] triangles;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ushort[] <>3__triangles;

			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <iTri>5__3;

			[Token(Token = "0x17000140")]
			private MeshSubset System.Collections.Generic.IEnumerator<TiltBrushToolkit.ImportGltf.MeshSubset>.Current
			{
				[Token(Token = "0x6000A0D")]
				[Address(RVA = "0xFFBB3C", Offset = "0xFFBB3C", VA = "0xFFBB3C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(MeshSubset);
				}
			}

			[Token(Token = "0x17000141")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A0F")]
				[Address(RVA = "0xFFBB8C", Offset = "0xFFBB8C", VA = "0xFFBB8C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xFFB69C", Offset = "0xFFB69C", VA = "0xFFB69C")]
			[DebuggerHidden]
			public <GenerateMeshSubsets>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xFFB6D4", Offset = "0xFFB6D4", VA = "0xFFB6D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xFFB6D8", Offset = "0xFFB6D8", VA = "0xFFB6D8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xFFBB4C", Offset = "0xFFBB4C", VA = "0xFFBB4C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000A10")]
			[Address(RVA = "0xFFBBF0", Offset = "0xFFBBF0", VA = "0xFFBBF0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<MeshSubset> System.Collections.Generic.IEnumerable<TiltBrushToolkit.ImportGltf.MeshSubset>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000A11")]
			[Address(RVA = "0xFFBCA8", Offset = "0xFFBCA8", VA = "0xFFBCA8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000B17")]
		private const float MIN_BOUNDING_BOX_SIZE_FOR_SIZE_FIT = 0.001f;

		[Token(Token = "0x4000B18")]
		private const float MIN_VALID_NORMAL_SQRMAGNITUDE = float.Epsilon;

		[Token(Token = "0x4000B19")]
		private const string kTookitAttributePrefix = "_TB_UNITY_";

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializer kSerializer;

		[Token(Token = "0x4000B1B")]
		private const int kUnityMeshMaxVerts = 65534;

		[Token(Token = "0x4000B1C")]
		private const float kExtremeSizeMeters = 371f;

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x13D0F4C", Offset = "0x13D0F4C", VA = "0x13D0F4C")]
		public static GltfImportResult Import(string gltfOrGlbPath, IUriLoader uriLoader, IImportMaterialCollector materialCollector, GltfImportOptions options)
		{
			return null;
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x13D2B38", Offset = "0x13D2B38", VA = "0x13D2B38")]
		private static GltfRootBase DeserializeGltfRoot(GltfSchemaVersion gltfVersion, JsonTextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x13D30A0", Offset = "0x13D30A0", VA = "0x13D30A0")]
		private static void SanityCheckImportOptions(GltfImportOptions options)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x13D3148", Offset = "0x13D3148", VA = "0x13D3148")]
		private static void CheckCompatibility(GltfRootBase root, string versionKey, Version currentVersion)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x13D13A4", Offset = "0x13D13A4", VA = "0x13D13A4")]
		public static ImportState BeginImport(string gltfOrGlbPath, IUriLoader uriLoader, GltfImportOptions options)
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x13D3A44", Offset = "0x13D3A44", VA = "0x13D3A44")]
		private static void ComputeScaleFactor(GltfImportOptions options, Bounds boundsInGltfSpace, out float directScaleFactor, out float nodeScaleFactor)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x13D340C", Offset = "0x13D340C", VA = "0x13D340C")]
		private static bool GetTiltBrushVersion(string generatorString, out Version version)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x13D3538", Offset = "0x13D3538", VA = "0x13D3538")]
		private static bool GetBlocksVersion(string generatorString, out Version version)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x13D3D48", Offset = "0x13D3D48", VA = "0x13D3D48")]
		private static void CreateMeshPrecursorsFromScene(ImportState state)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x13D4138", Offset = "0x13D4138", VA = "0x13D4138")]
		private static void CreateMeshPrecursorsFromNode(ImportState state, GltfNodeBase node)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x13D4494", Offset = "0x13D4494", VA = "0x13D4494")]
		private static void CreateMeshPrecursorsFromMesh(ImportState state, GltfMeshBase mesh)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13D404C", Offset = "0x13D404C", VA = "0x13D404C")]
		private static bool ComputeScaleFactorToFit(Bounds bounds, float desiredSize, out float scaleFactor)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x13D29F0", Offset = "0x13D29F0", VA = "0x13D29F0")]
		public static GltfImportResult EndImport(ImportState state, IUriLoader uriLoader, IImportMaterialCollector materialCollector, out IEnumerable<Null> meshCreator)
		{
			return null;
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x13D5824", Offset = "0x13D5824", VA = "0x13D5824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B070", Offset = "0xB3B070")]
		private static IEnumerable<Null> CreateGameObjectsFromNodes(ImportState state, GltfImportResult result, IUriLoader uriLoader)
		{
			return null;
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x13D58A8", Offset = "0x13D58A8", VA = "0x13D58A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B0D0", Offset = "0xB3B0D0")]
		private static IEnumerable CreateGameObjectsFromNode(ImportState state, Transform parent, GltfNodeBase node, GltfImportResult result, GltfMaterialConverter matConverter, Vector3 translationToApply)
		{
			return null;
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x13D5968", Offset = "0x13D5968", VA = "0x13D5968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B130", Offset = "0xB3B130")]
		private static IEnumerable CreateGameObjectsFromMesh(Transform parent, GltfMeshBase mesh, GltfImportResult result, GltfMaterialConverter matConverter, bool allowMeshInParent)
		{
			return null;
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x13D5A08", Offset = "0x13D5A08", VA = "0x13D5A08")]
		private static Mesh UnityFromPrecursor(MeshPrecursor precursor)
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x13D5E88", Offset = "0x13D5E88", VA = "0x13D5E88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B190", Offset = "0xB3B190")]
		private static IEnumerable<MeshSubset> GenerateMeshSubsets(ushort[] triangles, int numVerts, int maxSubsetVerts = 65534)
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x13D5F0C", Offset = "0x13D5F0C", VA = "0x13D5F0C")]
		private static Matrix4x4 ChangeBasisAndApplyScale(Matrix4x4 gltfMatrix, float scaleFactor, Matrix4x4 unityFromGltf, Matrix4x4 gltfFromUnity)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x13D6048", Offset = "0x13D6048", VA = "0x13D6048")]
		private static void ChangeUvBasis(Array data, GeometryPool.Semantic semantic)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x13D622C", Offset = "0x13D622C", VA = "0x13D622C")]
		private static void ChangeBasisAndApplyScale(Array data, GeometryPool.Semantic semantic, float scaleFactor, Matrix4x4 basisChange)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x13D47B4", Offset = "0x13D47B4", VA = "0x13D47B4")]
		private static List<MeshPrecursor> CreateMeshPrecursorsFromPrimitive(ImportState state, GltfPrimitiveBase prim)
		{
			return null;
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x13D6EF0", Offset = "0x13D6EF0", VA = "0x13D6EF0")]
		private static void StoreDataInMesh(ImportState state, GltfMaterialBase material, string semantic, Array data, MeshPrecursor mesh)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x13D6E60", Offset = "0x13D6E60", VA = "0x13D6E60")]
		private static Array PadArrayToSize(Array array, int size)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x13D7AAC", Offset = "0x13D7AAC", VA = "0x13D7AAC")]
		private static void FixInvalidNormals(MeshPrecursor mesh)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x13D79A4", Offset = "0x13D79A4", VA = "0x13D79A4")]
		private static GeometryPool.Semantic GetNormalSemantic(ImportState state, GltfMaterialBase material)
		{
			return default(GeometryPool.Semantic);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x13D7F04", Offset = "0x13D7F04", VA = "0x13D7F04")]
		private static GeometryPool.Semantic GetTexcoordSemantic(ImportState state, GltfMaterialBase material, int uvChannel)
		{
			return default(GeometryPool.Semantic);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x13D6808", Offset = "0x13D6808", VA = "0x13D6808")]
		private static bool TryGetDataAsArray(GltfAccessorBase accessor, IntRange eltRange, string semantic, out Array result)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x13D66E4", Offset = "0x13D66E4", VA = "0x13D66E4")]
		private static Array GetDataAsArray(GltfAccessorBase accessor, IntRange eltRange, string semantic)
		{
			return null;
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x13D81F4", Offset = "0x13D81F4", VA = "0x13D81F4")]
		private static void ReadAccessorData(GltfAccessorBase accessor, IntRange eltRange, int elementLength, IntPtr destination)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x13D5B84", Offset = "0x13D5B84", VA = "0x13D5B84")]
		private static void GenericSetUv(Mesh mesh, int channel, Array array)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x13D7E54", Offset = "0x13D7E54", VA = "0x13D7E54")]
		private static ColorSpace GetDesiredColorSpace(GltfRootBase root)
		{
			return default(ColorSpace);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x13D7EAC", Offset = "0x13D7EAC", VA = "0x13D7EAC")]
		private static ColorSpace GetActualColorSpace(GltfRootBase root)
		{
			return default(ColorSpace);
		}

		[Token(Token = "0x60009D0")]
		private static T ListPop<T>(List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x13D2D78", Offset = "0x13D2D78", VA = "0x13D2D78")]
		private static void PostProcessRemoveMultipleMeshes(Gltf1Root root)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x13D36C4", Offset = "0x13D36C4", VA = "0x13D36C4")]
		public static Bounds? ComputeSceneBoundingBoxInGltfSpace(GltfSceneBase scene, bool approximate)
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x13D8484", Offset = "0x13D8484", VA = "0x13D8484")]
		private static void EncapsulateNodeInBoundingBox(Matrix4x4 rootFromParent, GltfNodeBase node, bool approximate, ref Bounds? bounds)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x13D91D4", Offset = "0x13D91D4", VA = "0x13D91D4")]
		private static Bounds Transform(Matrix4x4 m, Bounds b)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x13D8BB4", Offset = "0x13D8BB4", VA = "0x13D8BB4")]
		private static void EncapsulatePrimInBoundingBoxApproximate(Matrix4x4 rootFromNode, GltfPrimitiveBase prim, ref Bounds? bounds)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x13D8E68", Offset = "0x13D8E68", VA = "0x13D8E68")]
		private static void EncapsulatePrimInBoundingBoxExact(Matrix4x4 rootFromNode, GltfPrimitiveBase prim, ref Bounds? bounds)
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public struct IntRange
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;

		[Token(Token = "0x17000142")]
		public int Size
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x12DB26C", Offset = "0x12DB26C", VA = "0x12DB26C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x12DAE14", Offset = "0x12DAE14", VA = "0x12DAE14")]
		public static IntRange Union(IntRange? a, IntRange b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x12DAEE0", Offset = "0x12DAEE0", VA = "0x12DAEE0")]
		public static IntRange Union(IntRange a, IntRange? b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x12DAF80", Offset = "0x12DAF80", VA = "0x12DAF80")]
		public static IntRange? Union(IntRange? a, IntRange? b)
		{
			return null;
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x12DAEB4", Offset = "0x12DAEB4", VA = "0x12DAEB4")]
		public static IntRange Union(IntRange a, IntRange b)
		{
			return default(IntRange);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x12DB0C0", Offset = "0x12DB0C0", VA = "0x12DB0C0")]
		public static bool operator ==(IntRange lhs, IntRange rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x12DB0E0", Offset = "0x12DB0E0", VA = "0x12DB0E0")]
		public static bool operator !=(IntRange lhs, IntRange rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x12DB100", Offset = "0x12DB100", VA = "0x12DB100", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x12DB190", Offset = "0x12DB190", VA = "0x12DB190", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x12DB1C8", Offset = "0x12DB1C8", VA = "0x12DB1C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	public static class MathUtils
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x10DF5B4", Offset = "0x10DF5B4", VA = "0x10DF5B4")]
		public static void DecomposeToTrs(Matrix4x4 m, out Vector3 translation, out Quaternion rotation, out Vector3 scale)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x10DF708", Offset = "0x10DF708", VA = "0x10DF708")]
		private static bool ExactlyEquals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x10DF730", Offset = "0x10DF730", VA = "0x10DF730")]
		private static Vector3 CalculateNormalToUnitDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x10DF828", Offset = "0x10DF828", VA = "0x10DF828")]
		public static Vector3 CalculateNormal(Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001CA")]
	public class SubStream : Stream
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream m_baseStream;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly long m_start;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly long m_length;

		[Token(Token = "0x17000143")]
		public override bool CanRead
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x11B7F90", Offset = "0x11B7F90", VA = "0x11B7F90", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x11B7F98", Offset = "0x11B7F98", VA = "0x11B7F98", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x11B7FA0", Offset = "0x11B7FA0", VA = "0x11B7FA0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public override long Length
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x11B7FA8", Offset = "0x11B7FA8", VA = "0x11B7FA8", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000147")]
		public override long Position
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x11B7FB0", Offset = "0x11B7FB0", VA = "0x11B7FB0", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x11B8038", Offset = "0x11B8038", VA = "0x11B8038", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x11B7B88", Offset = "0x11B7B88", VA = "0x11B7B88")]
		private static int Min(int val, long max)
		{
			return default(int);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x11B7B98", Offset = "0x11B7B98", VA = "0x11B7B98")]
		public SubStream(Stream baseStream, long start, long length)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x11B7D84", Offset = "0x11B7D84", VA = "0x11B7D84", Slot = "20")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x11B7DB8", Offset = "0x11B7DB8", VA = "0x11B7DB8", Slot = "21")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x11B7DBC", Offset = "0x11B7DBC", VA = "0x11B7DBC", Slot = "31")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x11B7E50", Offset = "0x11B7E50", VA = "0x11B7E50", Slot = "29")]
		public override long Seek(long offset, SeekOrigin seekOrigin)
		{
			return default(long);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x11B7F10", Offset = "0x11B7F10", VA = "0x11B7F10", Slot = "30")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x11B7F50", Offset = "0x11B7F50", VA = "0x11B7F50", Slot = "33")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class TbtSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20001CC")]
		public struct PbrMaterialInfo
		{
			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BrushDescriptor descriptor;
		}

		[Serializable]
		[Token(Token = "0x20001CD")]
		private struct SurfaceShaderMaterial
		{
			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string shaderUrl;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material material;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor descriptor;

			[Token(Token = "0x1700014B")]
			internal Material Material
			{
				[Token(Token = "0x6000A34")]
				[Address(RVA = "0xF23460", Offset = "0xF23460", VA = "0xF23460")]
				get
				{
					return null;
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20001CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB28C04", Offset = "0xB28C04")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SurfaceShaderMaterial, string> <>9__17_0;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SurfaceShaderMaterial, GltfMaterialConverter.UnityMaterial> <>9__17_1;

			[Token(Token = "0x6000A36")]
			[Address(RVA = "0xF23440", Offset = "0xF23440", VA = "0xF23440")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A37")]
			[Address(RVA = "0xF23448", Offset = "0xF23448", VA = "0xF23448")]
			internal string <LookupSurfaceShaderMaterial>b__17_0(SurfaceShaderMaterial elt)
			{
				return null;
			}

			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xF23450", Offset = "0xF23450", VA = "0xF23450")]
			internal GltfMaterialConverter.UnityMaterial <LookupSurfaceShaderMaterial>b__17_1(SurfaceShaderMaterial elt)
			{
				return default(GltfMaterialConverter.UnityMaterial);
			}
		}

		[Token(Token = "0x4000B7B")]
		private const string kAssetName = "TiltBrushToolkitSettings";

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TbtSettings sm_Instance;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PbrMaterialInfo m_PbrOpaqueSingleSided;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PbrMaterialInfo m_PbrOpaqueDoubleSided;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PbrMaterialInfo m_PbrBlendSingleSided;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PbrMaterialInfo m_PbrBlendDoubleSided;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SurfaceShaderMaterial[] m_SurfaceShaderMaterials;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, GltfMaterialConverter.UnityMaterial> m_SurfaceShaderMaterialLookup;

		[Token(Token = "0x17000148")]
		public static TbtSettings Instance
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x11BC5CC", Offset = "0x11BC5CC", VA = "0x11BC5CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public static Version TbtVersion
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x11BC6B0", Offset = "0x11BC6B0", VA = "0x11BC6B0")]
			get
			{
				return default(Version);
			}
		}

		[Token(Token = "0x1700014A")]
		public static Version PtVersion
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x11BC770", Offset = "0x11BC770", VA = "0x11BC770")]
			get
			{
				return default(Version);
			}
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x11BC6B8", Offset = "0x11BC6B8", VA = "0x11BC6B8")]
		public bool TryGetBrush(Guid guid, out BrushDescriptor desc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x11BC778", Offset = "0x11BC778", VA = "0x11BC778")]
		public GltfMaterialConverter.UnityMaterial? LookupSurfaceShaderMaterial(string url)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x11BC9E4", Offset = "0x11BC9E4", VA = "0x11BC9E4")]
		public TbtSettings()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public struct Version
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int major;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minor;

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x124AD70", Offset = "0x124AD70", VA = "0x124AD70")]
		public static Version Parse(string value)
		{
			return default(Version);
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x124AEC8", Offset = "0x124AEC8", VA = "0x124AEC8")]
		public static bool operator <(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x124AEE8", Offset = "0x124AEE8", VA = "0x124AEE8")]
		public static bool operator <=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x124AF48", Offset = "0x124AF48", VA = "0x124AF48")]
		public static bool operator >=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x124AF88", Offset = "0x124AF88", VA = "0x124AF88")]
		public static bool operator >(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x124AF28", Offset = "0x124AF28", VA = "0x124AF28")]
		public static bool operator ==(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x124AFA8", Offset = "0x124AFA8", VA = "0x124AFA8")]
		public static bool operator !=(Version lhs, Version rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x124AFC8", Offset = "0x124AFC8", VA = "0x124AFC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x124B06C", Offset = "0x124B06C", VA = "0x124B06C", Slot = "0")]
		public override bool Equals(object rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x124B10C", Offset = "0x124B10C", VA = "0x124B10C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace Simplex
{
	[Token(Token = "0x20001D0")]
	public class Noise
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int seed;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly byte[] permOriginal;

		[Token(Token = "0x1700014C")]
		public static int Seed
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xFCC82C", Offset = "0xFCC82C", VA = "0xFCC82C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0xFCC890", Offset = "0xFCC890", VA = "0xFCC890")]
			set
			{
			}
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xFCB4F8", Offset = "0xFCB4F8", VA = "0xFCB4F8")]
		public static float[] Calc1D(int width, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xFCB758", Offset = "0xFCB758", VA = "0xFCB758")]
		public static float[,] Calc2D(int width, int height, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xFCBCB8", Offset = "0xFCBCB8", VA = "0xFCBCB8")]
		public static float[,,] Calc3D(int width, int height, int length, float scale)
		{
			return null;
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xFCC588", Offset = "0xFCC588", VA = "0xFCC588")]
		public static float CalcPixel1D(int x, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xFCC60C", Offset = "0xFCC60C", VA = "0xFCC60C")]
		public static float CalcPixel2D(int x, int y, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xFCC6A4", Offset = "0xFCC6A4", VA = "0xFCC6A4")]
		public static float CalcPixel3D(int x, int y, int z, float scale)
		{
			return default(float);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xFCC748", Offset = "0xFCC748", VA = "0xFCC748")]
		static Noise()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xFCB5F8", Offset = "0xFCB5F8", VA = "0xFCB5F8")]
		internal static float Generate(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xFCB8B4", Offset = "0xFCB8B4", VA = "0xFCB8B4")]
		internal static float Generate(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xFCBE5C", Offset = "0xFCBE5C", VA = "0xFCBE5C")]
		internal static float Generate(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xFCC9F0", Offset = "0xFCC9F0", VA = "0xFCC9F0")]
		private static int FastFloor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xFCCA40", Offset = "0xFCCA40", VA = "0xFCCA40")]
		private static int Mod(int x, int m)
		{
			return default(int);
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xFCCA1C", Offset = "0xFCCA1C", VA = "0xFCCA1C")]
		private static float grad(int hash, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xFCCA54", Offset = "0xFCCA54", VA = "0xFCCA54")]
		private static float grad(int hash, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xFCCA88", Offset = "0xFCCA88", VA = "0xFCCA88")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xFCCAD4", Offset = "0xFCCAD4", VA = "0xFCCAD4")]
		private static float grad(int hash, float x, float y, float z, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xFCCB20", Offset = "0xFCCB20", VA = "0xFCCB20")]
		public Noise()
		{
		}
	}
}
namespace Reaktion
{
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28C14", Offset = "0xB28C14")]
	public class AnimatorGear : MonoBehaviour
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier speed;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Trigger trigger;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string triggerName;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xFE2EEC", Offset = "0xFE2EEC", VA = "0xFE2EEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xFE2F6C", Offset = "0xFE2F6C", VA = "0xFE2F6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xFE301C", Offset = "0xFE301C", VA = "0xFE301C")]
		public AnimatorGear()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28C4C", Offset = "0xB28C4C")]
	public class CameraGear : MonoBehaviour
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier fieldOfView;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier viewportWidth;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier viewportHeight;

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x15A02F0", Offset = "0x15A02F0", VA = "0x15A02F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x15A0348", Offset = "0x15A0348", VA = "0x15A0348")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x15A0524", Offset = "0x15A0524", VA = "0x15A0524")]
		public CameraGear()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28C84", Offset = "0xB28C84")]
	public class ConstantMotionGear : MonoBehaviour
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier position;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier rotation;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ConstantMotion motion;

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1590180", Offset = "0x1590180", VA = "0x1590180")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x1590200", Offset = "0x1590200", VA = "0x1590200")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x15902A8", Offset = "0x15902A8", VA = "0x15902A8")]
		public ConstantMotionGear()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28CBC", Offset = "0xB28CBC")]
	public class GenericCurveGear : MonoBehaviour
	{
		[Token(Token = "0x20001D5")]
		public enum OptionType
		{
			[Token(Token = "0x4000BA7")]
			Bool,
			[Token(Token = "0x4000BA8")]
			Int,
			[Token(Token = "0x4000BA9")]
			Float,
			[Token(Token = "0x4000BAA")]
			Vector
		}

		[Serializable]
		[Token(Token = "0x20001D6")]
		public class BoolEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x1155490", Offset = "0x1155490", VA = "0x1155490")]
			public BoolEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D7")]
		public class IntEvent : UnityEvent<int>
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x1155528", Offset = "0x1155528", VA = "0x1155528")]
			public IntEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D8")]
		public class FloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x11554DC", Offset = "0x11554DC", VA = "0x11554DC")]
			public FloatEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001D9")]
		public class VectorEvent : UnityEvent<Vector3>
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x1155574", Offset = "0x1155574", VA = "0x1155574")]
			public VectorEvent()
			{
			}
		}

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OptionType optionType;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve curve;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 origin;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 direction;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BoolEvent boolTarget;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntEvent intTarget;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatEvent floatTarget;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VectorEvent vectorTarget;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x101F330", Offset = "0x101F330", VA = "0x101F330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x101F388", Offset = "0x101F388", VA = "0x101F388")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x101F4E8", Offset = "0x101F4E8", VA = "0x101F4E8")]
		public GenericCurveGear()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28CF4", Offset = "0xB28CF4")]
	public class GenericGradientGear : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001DB")]
		public class ColorEvent : UnityEvent<Color>
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x11555C0", Offset = "0x11555C0", VA = "0x11555C0")]
			public ColorEvent()
			{
			}
		}

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorEvent target;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x101F540", Offset = "0x101F540", VA = "0x101F540")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x101F61C", Offset = "0x101F61C", VA = "0x101F61C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x101F5A4", Offset = "0x101F5A4", VA = "0x101F5A4")]
		private void UpdateTarget(float param)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x101F650", Offset = "0x101F650", VA = "0x101F650")]
		public GenericGradientGear()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28D2C", Offset = "0xB28D2C")]
	public class GenericTriggerGear : MonoBehaviour
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float threshold;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float interval;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent target;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float previousOutput;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float triggerTimer;

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x101F660", Offset = "0x101F660", VA = "0x101F660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x101F6B8", Offset = "0x101F6B8", VA = "0x101F6B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x101F754", Offset = "0x101F754", VA = "0x101F754")]
		public GenericTriggerGear()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28D64", Offset = "0xB28D64")]
	public class GlobalSettingGear : MonoBehaviour
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve timeScaleCurve;

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xF9BDDC", Offset = "0xF9BDDC", VA = "0xF9BDDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xF9BDE8", Offset = "0xF9BDE8", VA = "0xF9BDE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xF9BE40", Offset = "0xF9BE40", VA = "0xF9BE40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xF9BE88", Offset = "0xF9BE88", VA = "0xF9BE88")]
		public GlobalSettingGear()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28D9C", Offset = "0xB28D9C")]
	public class JitterMotionGear : MonoBehaviour
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier positionFrequency;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Modifier rotationFrequency;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier positionAmount;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modifier rotationAmount;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JitterMotion jitter;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x12E6394", Offset = "0x12E6394", VA = "0x12E6394")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x12E6414", Offset = "0x12E6414", VA = "0x12E6414")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x12E64F0", Offset = "0x12E64F0", VA = "0x12E64F0")]
		public JitterMotionGear()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28DD4", Offset = "0xB28DD4")]
	public class LightGear : MonoBehaviour
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Modifier intensity;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enableColor;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableBeatAccumulatedColor;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float accumulatedColorRate;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x10D0F08", Offset = "0x10D0F08", VA = "0x10D0F08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x10D10AC", Offset = "0x10D10AC", VA = "0x10D10AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x10D0F70", Offset = "0x10D0F70", VA = "0x10D0F70")]
		private void UpdateLight(float param, float param2)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x10D1114", Offset = "0x10D1114", VA = "0x10D1114")]
		public LightGear()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28E0C", Offset = "0xB28E0C")]
	public class MaterialGear : MonoBehaviour
	{
		[Token(Token = "0x20001E1")]
		public enum TargetType
		{
			[Token(Token = "0x4000BD0")]
			Color,
			[Token(Token = "0x4000BD1")]
			Float,
			[Token(Token = "0x4000BD2")]
			Vector,
			[Token(Token = "0x4000BD3")]
			Texture
		}

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int materialIndex;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string targetName;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetType targetType;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float threshold;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Gradient colorGradient;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float colorGradientMultiplier;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve floatCurve;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector4 vectorFrom;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector4 vectorTo;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture textureLow;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture textureHigh;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material material;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x10DB10C", Offset = "0x10DB10C", VA = "0x10DB10C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x10DB338", Offset = "0x10DB338", VA = "0x10DB338")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x10DB1DC", Offset = "0x10DB1DC", VA = "0x10DB1DC")]
		private void UpdateMaterial(float param)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x10DB36C", Offset = "0x10DB36C", VA = "0x10DB36C")]
		public MaterialGear()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28E44", Offset = "0xB28E44")]
	public class ParticleSystemGear : MonoBehaviour
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trigger burst;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstNumber;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier emissionRate;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Modifier size;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] tempArray;

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1142114", Offset = "0x1142114", VA = "0x1142114")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x114216C", Offset = "0x114216C", VA = "0x114216C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x11422B8", Offset = "0x11422B8", VA = "0x11422B8")]
		private void ResizeParticles(float newSize)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x1142428", Offset = "0x1142428", VA = "0x1142428")]
		public ParticleSystemGear()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28E7C", Offset = "0xB28E7C")]
	public class SpawnerGear : MonoBehaviour
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trigger burst;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstNumber;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Modifier spawnRate;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Spawner spawner;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x11AB6BC", Offset = "0x11AB6BC", VA = "0x11AB6BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x11AB73C", Offset = "0x11AB73C", VA = "0x11AB73C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x11AB7F0", Offset = "0x11AB7F0", VA = "0x11AB7F0")]
		public SpawnerGear()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28EB4", Offset = "0xB28EB4")]
	public class TransformGear : MonoBehaviour
	{
		[Token(Token = "0x20001E5")]
		public enum TransformMode
		{
			[Token(Token = "0x4000BE8")]
			Off,
			[Token(Token = "0x4000BE9")]
			XAxis,
			[Token(Token = "0x4000BEA")]
			YAxis,
			[Token(Token = "0x4000BEB")]
			ZAxis,
			[Token(Token = "0x4000BEC")]
			Arbitrary,
			[Token(Token = "0x4000BED")]
			Random
		}

		[Serializable]
		[Token(Token = "0x20001E6")]
		public class TransformElement
		{
			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float min;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float max;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve curve;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float randomness;

			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 randomVector;

			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float randomScalar;

			[Token(Token = "0x1700014D")]
			public Vector3 Vector
			{
				[Token(Token = "0x6000A89")]
				[Address(RVA = "0xF26D3C", Offset = "0xF26D3C", VA = "0xF26D3C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xF26D04", Offset = "0xF26D04", VA = "0xF26D04")]
			public void Initialize()
			{
			}

			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xF26DB4", Offset = "0xF26DB4", VA = "0xF26DB4")]
			public float GetScalar(float x)
			{
				return default(float);
			}

			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xF26E14", Offset = "0xF26E14", VA = "0xF26E14")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ReaktorLink reaktor;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement position;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformElement rotation;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TransformElement scale;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool addInitialValue;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion initialRotation;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initialScale;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x11762A8", Offset = "0x11762A8", VA = "0x11762A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1176330", Offset = "0x1176330", VA = "0x1176330")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x11763AC", Offset = "0x11763AC", VA = "0x11763AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1176650", Offset = "0x1176650", VA = "0x1176650")]
		public TransformGear()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28EEC", Offset = "0xB28EEC")]
	public class AudioInjector : InjectorBase
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool mute;

		[Token(Token = "0x4000BF7")]
		private const float zeroOffset = 1.5849E-13f;

		[Token(Token = "0x4000BF8")]
		private const float refLevel = 0.70710677f;

		[Token(Token = "0x4000BF9")]
		private const float minDB = -60f;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float squareSum;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int sampleCount;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xFEFF70", Offset = "0xFEFF70", VA = "0xFEFF70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xFEFFF0", Offset = "0xFEFFF0", VA = "0xFEFFF0")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xFF00A0", Offset = "0xFF00A0", VA = "0xFF00A0")]
		public AudioInjector()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28F24", Offset = "0xB28F24")]
	public class SystemAudioInjector : InjectorBase
	{
		[Token(Token = "0x4000BFC")]
		private const float zeroOffset = 1.5849E-13f;

		[Token(Token = "0x4000BFD")]
		private const float refLevel = 0.70710677f;

		[Token(Token = "0x4000BFE")]
		private const float minDB = -60f;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float squareSum;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sampleCount;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x11BB960", Offset = "0x11BB960", VA = "0x11BB960")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x11BB9E0", Offset = "0x11BB9E0", VA = "0x11BB9E0")]
		public void ProcessAudio(float[] data)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x11BBA54", Offset = "0x11BBA54", VA = "0x11BBA54")]
		public SystemAudioInjector()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class GenericLinkBase
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x101F658", Offset = "0x101F658", VA = "0x101F658")]
		public GenericLinkBase()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class GenericLink<T> : GenericLinkBase where T : Component
	{
		[Token(Token = "0x20001EB")]
		public enum Mode
		{
			[Token(Token = "0x4000C08")]
			Null,
			[Token(Token = "0x4000C09")]
			Automatic,
			[Token(Token = "0x4000C0A")]
			ByReference,
			[Token(Token = "0x4000C0B")]
			ByName
		}

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Mode _mode;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T _reference;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _forceUpdate;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private MonoBehaviour master;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _linkedObject;

		[Token(Token = "0x1700014E")]
		public Mode mode
		{
			[Token(Token = "0x6000A93")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000A94")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public T reference
		{
			[Token(Token = "0x6000A95")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A96")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public string name
		{
			[Token(Token = "0x6000A97")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A98")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public T linkedObject
		{
			[Token(Token = "0x6000A99")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9A")]
		public void Initialize(MonoBehaviour master)
		{
		}

		[Token(Token = "0x6000A9B")]
		public void Update()
		{
		}

		[Token(Token = "0x6000A9C")]
		private T FindLinkedObject()
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		public GenericLink()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class InjectorBase : MonoBehaviour
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float dbLevel;

		[Token(Token = "0x17000152")]
		public float DbLevel
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x12D64D4", Offset = "0x12D64D4", VA = "0x12D64D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x12D64DC", Offset = "0x12D64DC", VA = "0x12D64DC")]
		public InjectorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001ED")]
	public class InjectorLink : GenericLink<InjectorBase>
	{
		[Token(Token = "0x17000153")]
		public float DbLevel
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x12D64EC", Offset = "0x12D64EC", VA = "0x12D64EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x12D65AC", Offset = "0x12D65AC", VA = "0x12D65AC")]
		public InjectorLink()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EE")]
	public class Modifier
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xF3C4E0", Offset = "0xF3C4E0", VA = "0xF3C4E0")]
		public float Evaluate(float i)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xF3C524", Offset = "0xF3C524", VA = "0xF3C524")]
		public static Modifier Linear(float min, float max)
		{
			return null;
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xF3C5C0", Offset = "0xF3C5C0", VA = "0xF3C5C0")]
		public Modifier()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public static class Perlin
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] perm;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1143878", Offset = "0x1143878", VA = "0x1143878")]
		public static float Noise(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1143A38", Offset = "0x1143A38", VA = "0x1143A38")]
		public static float Noise(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1143CC8", Offset = "0x1143CC8", VA = "0x1143CC8")]
		public static float Noise(Vector2 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1143D38", Offset = "0x1143D38", VA = "0x1143D38")]
		public static float Noise(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1144168", Offset = "0x1144168", VA = "0x1144168")]
		public static float Noise(Vector3 coord)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x11441E8", Offset = "0x11441E8", VA = "0x11441E8")]
		public static float Fbm(float x, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1144298", Offset = "0x1144298", VA = "0x1144298")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x114435C", Offset = "0x114435C", VA = "0x114435C")]
		public static float Fbm(Vector3 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1143954", Offset = "0x1143954", VA = "0x1143954")]
		private static float Fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1143A28", Offset = "0x1143A28", VA = "0x1143A28")]
		private static float Lerp(float t, float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1143980", Offset = "0x1143980", VA = "0x1143980")]
		private static float Grad(int i, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1143C0C", Offset = "0x1143C0C", VA = "0x1143C0C")]
		private static float Grad(int i, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1144074", Offset = "0x1144074", VA = "0x1144074")]
		private static float Grad(int i, float x, float y, float z)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class ReaktorLink : GenericLink<Reaktor>
	{
		[Token(Token = "0x17000154")]
		public float Output
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xFAEE9C", Offset = "0xFAEE9C", VA = "0xFAEE9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		public float OutputAccumulated
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xFAEF54", Offset = "0xFAEF54", VA = "0xFAEF54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xFAF00C", Offset = "0xFAF00C", VA = "0xFAF00C")]
		public ReaktorLink()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F1")]
	public class Remote
	{
		[Token(Token = "0x20001F2")]
		public enum Control
		{
			[Token(Token = "0x4000C18")]
			Off,
			[Token(Token = "0x4000C19")]
			InputAxis
		}

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Control _control;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _inputAxis;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve _curve;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _defaultLevel;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _level;

		[Token(Token = "0x17000156")]
		public float level
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xFB54F8", Offset = "0xFB54F8", VA = "0xFB54F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xFAEB40", Offset = "0xFAEB40", VA = "0xFAEB40")]
		public void Reset(float defaultLevel)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xFAED14", Offset = "0xFAED14", VA = "0xFAED14")]
		public void Update()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xFB5500", Offset = "0xFB5500", VA = "0xFB5500")]
		public Remote()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F3")]
	public class Trigger
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float threshold;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interval;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float previous;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timer;

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1177014", Offset = "0x1177014", VA = "0x1177014")]
		public bool Update(float current)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x11770A0", Offset = "0x11770A0", VA = "0x11770A0")]
		public Trigger()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28F5C", Offset = "0xB28F5C")]
	public class Reaktor : MonoBehaviour
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InjectorLink injector;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve audioCurve;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Remote gain;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Remote offset;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sensitivity;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float decaySpeed;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showAudioOptions;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float headroom;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float dynamicRange;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lowerBound;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float falldown;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float output;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float outputAccumulated;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float outputDb;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float peak;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float rawInput;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fakeInput;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int activeInstanceCount;

		[Token(Token = "0x17000157")]
		public float Output
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xFAE9A4", Offset = "0xFAE9A4", VA = "0xFAE9A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000158")]
		public float Peak
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xFAE9AC", Offset = "0xFAE9AC", VA = "0xFAE9AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000159")]
		public float RawInput
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0xFAE9B4", Offset = "0xFAE9B4", VA = "0xFAE9B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015A")]
		public float Gain
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xFAE9BC", Offset = "0xFAE9BC", VA = "0xFAE9BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015B")]
		public float Offset
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xFAE9D8", Offset = "0xFAE9D8", VA = "0xFAE9D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015C")]
		public float Override
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xFAE9F4", Offset = "0xFAE9F4", VA = "0xFAE9F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0xFAEA00", Offset = "0xFAEA00", VA = "0xFAEA00")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public bool IsOverridden
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0xFAEA08", Offset = "0xFAEA08", VA = "0xFAEA08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015E")]
		public bool Bang
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xFAEA18", Offset = "0xFAEA18", VA = "0xFAEA18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xFAEA2C", Offset = "0xFAEA2C", VA = "0xFAEA2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public static int ActiveInstanceCount
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xFAEA54", Offset = "0xFAEA54", VA = "0xFAEA54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xFAEAA0", Offset = "0xFAEAA0", VA = "0xFAEAA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xFAEB48", Offset = "0xFAEB48", VA = "0xFAEB48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xFAED88", Offset = "0xFAED88", VA = "0xFAED88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xFAEDDC", Offset = "0xFAEDDC", VA = "0xFAEDDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xFAEE30", Offset = "0xFAEE30", VA = "0xFAEE30")]
		public void StopOverride()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xFAEE3C", Offset = "0xFAEE3C", VA = "0xFAEE3C")]
		public Reaktor()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28F94", Offset = "0xB28F94")]
	public class BandPassFilter : MonoBehaviour
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D3FC", Offset = "0xB2D3FC")]
		public float cutoff;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D414", Offset = "0xB2D414")]
		public float q;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float vF;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float vD;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float vZ1;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float vZ2;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float vZ3;

		[Token(Token = "0x17000160")]
		public float CutoffFrequency
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x1438E58", Offset = "0x1438E58", VA = "0x1438E58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1438E8C", Offset = "0x1438E8C", VA = "0x1438E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1438E90", Offset = "0x1438E90", VA = "0x1438E90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1438F30", Offset = "0x1438F30", VA = "0x1438F30")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x143901C", Offset = "0x143901C", VA = "0x143901C")]
		public BandPassFilter()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class ConstantMotion : MonoBehaviour
	{
		[Token(Token = "0x20001F7")]
		public enum TransformMode
		{
			[Token(Token = "0x4000C3C")]
			Off,
			[Token(Token = "0x4000C3D")]
			XAxis,
			[Token(Token = "0x4000C3E")]
			YAxis,
			[Token(Token = "0x4000C3F")]
			ZAxis,
			[Token(Token = "0x4000C40")]
			Arbitrary,
			[Token(Token = "0x4000C41")]
			Random
		}

		[Serializable]
		[Token(Token = "0x20001F8")]
		public class TransformElement
		{
			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float velocity;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float randomness;

			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 randomVector;

			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float randomScalar;

			[Token(Token = "0x17000161")]
			public Vector3 Vector
			{
				[Token(Token = "0x6000AD6")]
				[Address(RVA = "0x1125CD0", Offset = "0x1125CD0", VA = "0x1125CD0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000162")]
			public float Delta
			{
				[Token(Token = "0x6000AD7")]
				[Address(RVA = "0x1125D48", Offset = "0x1125D48", VA = "0x1125D48")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x1125C98", Offset = "0x1125C98", VA = "0x1125C98")]
			public void Initialize()
			{
			}

			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x1125D88", Offset = "0x1125D88", VA = "0x1125D88")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformElement position;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement rotation;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useLocalCoordinate;

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x158FE40", Offset = "0x158FE40", VA = "0x158FE40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x158FE7C", Offset = "0x158FE7C", VA = "0x158FE7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x15900E4", Offset = "0x15900E4", VA = "0x15900E4")]
		public ConstantMotion()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB28FCC", Offset = "0xB28FCC")]
	public class GenericAudioInput : MonoBehaviour
	{
		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D42C", Offset = "0xB2D42C")]
		private float <estimatedLatency>k__BackingField;

		[Token(Token = "0x17000163")]
		public float estimatedLatency
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x101F28C", Offset = "0x101F28C", VA = "0x101F28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B430", Offset = "0xB3B430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x101F294", Offset = "0x101F294", VA = "0x101F294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B440", Offset = "0xB3B440")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x101F29C", Offset = "0x101F29C", VA = "0x101F29C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x101F324", Offset = "0x101F324", VA = "0x101F324")]
		private void OnApplicationPause(bool paused)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x101F320", Offset = "0x101F320", VA = "0x101F320")]
		private void StartInput()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x101F328", Offset = "0x101F328", VA = "0x101F328")]
		public GenericAudioInput()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class JitterMotion : MonoBehaviour
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionFrequency;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationFrequency;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float positionAmount;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationAmount;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 positionComponents;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotationComponents;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int positionOctave;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int rotationOctave;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timePosition;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeRotation;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2[] noiseVectors;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion initialRotation;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x12E5E98", Offset = "0x12E5E98", VA = "0x12E5E98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x12E5FE4", Offset = "0x12E5FE4", VA = "0x12E5FE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x12E6274", Offset = "0x12E6274", VA = "0x12E6274")]
		private static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x12E6340", Offset = "0x12E6340", VA = "0x12E6340")]
		public JitterMotion()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB29004", Offset = "0xB29004")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB29004", Offset = "0xB29004")]
	public class ObjectParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxParticles;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject[] pool;

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xFCF30C", Offset = "0xFCF30C", VA = "0xFCF30C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xFCF4AC", Offset = "0xFCF4AC", VA = "0xFCF4AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xFCF7CC", Offset = "0xFCF7CC", VA = "0xFCF7CC")]
		public ObjectParticleSystem()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB29088", Offset = "0xB29088")]
	public class Planter : MonoBehaviour
	{
		[Token(Token = "0x20001FD")]
		public enum DistributionMode
		{
			[Token(Token = "0x4000C68")]
			Single,
			[Token(Token = "0x4000C69")]
			Random,
			[Token(Token = "0x4000C6A")]
			Grid
		}

		[Token(Token = "0x20001FE")]
		public enum RotationMode
		{
			[Token(Token = "0x4000C6C")]
			Keep,
			[Token(Token = "0x4000C6D")]
			Planter,
			[Token(Token = "0x4000C6E")]
			Random
		}

		[Token(Token = "0x20001FF")]
		public enum IntervalMode
		{
			[Token(Token = "0x4000C70")]
			Distance,
			[Token(Token = "0x4000C71")]
			Time
		}

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] prefabs;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public DistributionMode distributionMode;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 _distributionRange;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _gridSpace;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntervalMode intervalMode;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _interval;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<GameObject> objectPool;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float intervalCounter;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion previousRotation;

		[Token(Token = "0x17000164")]
		public int maxObjects
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x1028124", Offset = "0x1028124", VA = "0x1028124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x1028134", Offset = "0x1028134", VA = "0x1028134")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public Vector2 distributionRange
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x102813C", Offset = "0x102813C", VA = "0x102813C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x1028168", Offset = "0x1028168", VA = "0x1028168")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public float gridSpace
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1028170", Offset = "0x1028170", VA = "0x1028170")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x1028184", Offset = "0x1028184", VA = "0x1028184")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public float interval
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x102818C", Offset = "0x102818C", VA = "0x102818C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x10281A0", Offset = "0x10281A0", VA = "0x10281A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x10281A8", Offset = "0x10281A8", VA = "0x10281A8")]
		private void PutInstance(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1028420", Offset = "0x1028420", VA = "0x1028420")]
		private void PlantAlongGrid(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1028658", Offset = "0x1028658", VA = "0x1028658")]
		private void PlantRandom(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x10287B4", Offset = "0x10287B4", VA = "0x10287B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1028824", Offset = "0x1028824", VA = "0x1028824")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1028880", Offset = "0x1028880", VA = "0x1028880")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1028BCC", Offset = "0x1028BCC", VA = "0x1028BCC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1028C8C", Offset = "0x1028C8C", VA = "0x1028C8C")]
		public Planter()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB290C0", Offset = "0xB290C0")]
	public class SelfDestruction : MonoBehaviour
	{
		[Token(Token = "0x2000201")]
		public enum ConditionType
		{
			[Token(Token = "0x4000C7E")]
			Distance,
			[Token(Token = "0x4000C7F")]
			Bounds,
			[Token(Token = "0x4000C80")]
			Time,
			[Token(Token = "0x4000C81")]
			ParticleSystem
		}

		[Token(Token = "0x2000202")]
		public enum ReferenceType
		{
			[Token(Token = "0x4000C83")]
			Origin,
			[Token(Token = "0x4000C84")]
			Point,
			[Token(Token = "0x4000C85")]
			InitialPosition,
			[Token(Token = "0x4000C86")]
			GameObject,
			[Token(Token = "0x4000C87")]
			GameObjectName
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConditionType conditionType;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ReferenceType referenceType;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxDistance;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Bounds bounds;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float lifetime;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 referencePoint;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject referenceObject;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string referenceName;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timer;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 initialPoint;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject referenceObjectCache;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xE7C00C", Offset = "0xE7C00C", VA = "0xE7C00C")]
		private Vector3 GetReferencePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xE7C1B0", Offset = "0xE7C1B0", VA = "0xE7C1B0")]
		private bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xE7C378", Offset = "0xE7C378", VA = "0xE7C378")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xE7C3B4", Offset = "0xE7C3B4", VA = "0xE7C3B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xE7C3EC", Offset = "0xE7C3EC", VA = "0xE7C3EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xE7C47C", Offset = "0xE7C47C", VA = "0xE7C47C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xE7C54C", Offset = "0xE7C54C", VA = "0xE7C54C")]
		public SelfDestruction()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB290F8", Offset = "0xB290F8")]
	public class Spawner : MonoBehaviour
	{
		[Token(Token = "0x2000204")]
		public enum Distribution
		{
			[Token(Token = "0x4000C95")]
			InSphere,
			[Token(Token = "0x4000C96")]
			InBox,
			[Token(Token = "0x4000C97")]
			AtPoints
		}

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] prefabs;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnRate;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spawnRateRandomness;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Distribution distribution;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sphereRadius;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 boxSize;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] spawnPoints;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool randomRotation;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform parent;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float randomValue;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timer;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int spawnPointIndex;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x11AB0E4", Offset = "0x11AB0E4", VA = "0x11AB0E4")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x11AB438", Offset = "0x11AB438", VA = "0x11AB438")]
		public void Spawn(int count)
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x11AB474", Offset = "0x11AB474", VA = "0x11AB474")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x11AB51C", Offset = "0x11AB51C", VA = "0x11AB51C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x11AB6B4", Offset = "0x11AB6B4", VA = "0x11AB6B4")]
		public Spawner()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class TurbulentMotion : MonoBehaviour
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float density;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 linearFlow;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 displacement;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 scale;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float coeffDisplacement;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float coeffRotation;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float coeffScale;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useLocalCoordinate;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 initialPosition;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion initialRotation;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 initialScale;

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x123FB38", Offset = "0x123FB38", VA = "0x123FB38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1240278", Offset = "0x1240278", VA = "0x1240278")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x123FBE8", Offset = "0x123FBE8", VA = "0x123FBE8")]
		private void ApplyTransform()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x124027C", Offset = "0x124027C", VA = "0x124027C")]
		public TurbulentMotion()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class VariableMotion : MonoBehaviour
	{
		[Token(Token = "0x2000207")]
		public enum TransformMode
		{
			[Token(Token = "0x4000CAD")]
			Off,
			[Token(Token = "0x4000CAE")]
			XAxis,
			[Token(Token = "0x4000CAF")]
			YAxis,
			[Token(Token = "0x4000CB0")]
			ZAxis,
			[Token(Token = "0x4000CB1")]
			Arbitrary,
			[Token(Token = "0x4000CB2")]
			Random
		}

		[Serializable]
		[Token(Token = "0x2000208")]
		public class TransformElement
		{
			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformMode mode;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve curve;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float amplitude;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float speed;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 arbitraryVector;

			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float randomness;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 randomVector;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float randomAmplitude;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float time;

			[Token(Token = "0x17000168")]
			public Vector3 Vector
			{
				[Token(Token = "0x6000B0C")]
				[Address(RVA = "0xF29E38", Offset = "0xF29E38", VA = "0xF29E38")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000169")]
			public float Scalar
			{
				[Token(Token = "0x6000B0E")]
				[Address(RVA = "0xF29EF0", Offset = "0xF29EF0", VA = "0xF29EF0")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xF29DFC", Offset = "0xF29DFC", VA = "0xF29DFC")]
			public void Initialize()
			{
			}

			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xF29EB0", Offset = "0xF29EB0", VA = "0xF29EB0")]
			public void Step()
			{
			}

			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xF29F40", Offset = "0xF29F40", VA = "0xF29F40")]
			public TransformElement()
			{
			}
		}

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformElement position;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformElement rotation;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformElement scale;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useLocalCoordinate;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool useDifferentials;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 previousPosition;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion previousRotation;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialScale;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x124A5D4", Offset = "0x124A5D4", VA = "0x124A5D4")]
		public void Rewind()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x124AADC", Offset = "0x124AADC", VA = "0x124AADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x124AAE0", Offset = "0x124AAE0", VA = "0x124AAE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x124A6E8", Offset = "0x124A6E8", VA = "0x124A6E8")]
		private void ApplyTransform()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x124AB34", Offset = "0x124AB34", VA = "0x124AB34")]
		public VariableMotion()
		{
		}
	}
}
namespace KuwaharaFilter
{
	[Token(Token = "0x2000209")]
	public class ConstantBufferVariable
	{
		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int GaussRadius;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float GaussSigma;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int KuwaharaRadius;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int KuwaharaQ;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float KuwaharaAlpha;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x158FD2C", Offset = "0x158FD2C", VA = "0x158FD2C")]
		public static void Apply(ComputeShader shader, ConstantBufferVariable buffer)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x158FE38", Offset = "0x158FE38", VA = "0x158FE38")]
		public ConstantBufferVariable()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB29130", Offset = "0xB29130")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	public class AnisotropicKuwaharaEffect : MonoBehaviour
	{
		[Token(Token = "0x200020B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB291B0", Offset = "0xB291B0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int radius;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float sigma;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float sum;

			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x111FA7C", Offset = "0x111FA7C", VA = "0x111FA7C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x111FA84", Offset = "0x111FA84", VA = "0x111FA84")]
			internal float <GenerateGaussKernel>b__0(int x)
			{
				return default(float);
			}

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x111FAAC", Offset = "0x111FAAC", VA = "0x111FAAC")]
			internal float <GenerateGaussKernel>b__1(float x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D47C", Offset = "0xB2D47C")]
		public float GaussSigma;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D498", Offset = "0xB2D498")]
		public float KuwaharaAlpha;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D4B0", Offset = "0xB2D4B0")]
		public int KuwaharaRadius;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D4C8", Offset = "0xB2D4C8")]
		public int KuwaharaQ;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ComputeShader m_GaussComputer;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ComputeShader m_SSTComputer;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ComputeShader m_TFMComputer;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ComputeShader m_LICComputer;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ComputeShader m_KuwaharaComputer;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_Camera;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture m_TextureSST;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture m_TextureGaussHS;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture m_TextureGaussVS;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture m_TextureTFM;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_TextureLIC;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture m_TextureKuwahara;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ComputeBuffer m_KernelGaussFilter;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ConstantBufferVariable m_ConstantBuffer;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xFE3024", Offset = "0xFE3024", VA = "0xFE3024")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xFE3140", Offset = "0xFE3140", VA = "0xFE3140")]
		private List<float> GenerateGaussKernel(float sigma)
		{
			return null;
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xFE331C", Offset = "0xFE331C", VA = "0xFE331C")]
		private void InitializeRenderTexture(int width, int height)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xFE3768", Offset = "0xFE3768", VA = "0xFE3768")]
		private void InitializeComputeBuffer()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xFE3830", Offset = "0xFE3830", VA = "0xFE3830")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xFE38BC", Offset = "0xFE38BC", VA = "0xFE38BC")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xFE3FC4", Offset = "0xFE3FC4", VA = "0xFE3FC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xFE41B0", Offset = "0xFE41B0", VA = "0xFE41B0")]
		public AnisotropicKuwaharaEffect()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB291C0", Offset = "0xB291C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB291C0", Offset = "0xB291C0")]
	[ExecuteInEditMode]
	public class Vignette : MonoBehaviour
	{
		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D4E0", Offset = "0xB2D4E0")]
		[SerializeField]
		private float _falloff;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ChromaticAberration;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_material;

		[Token(Token = "0x1700016A")]
		public float intensity
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xEFBA18", Offset = "0xEFBA18", VA = "0xEFBA18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xEFBA20", Offset = "0xEFBA20", VA = "0xEFBA20")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xEFBA28", Offset = "0xEFBA28", VA = "0xEFBA28")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xEFBB6C", Offset = "0xEFBB6C", VA = "0xEFBB6C")]
		public Vignette()
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200020D")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4000CDA")]
		Array = 1,
		[Token(Token = "0x4000CDB")]
		Class,
		[Token(Token = "0x4000CDC")]
		Value,
		[Token(Token = "0x4000CDD")]
		IntValue,
		[Token(Token = "0x4000CDE")]
		DoubleValue,
		[Token(Token = "0x4000CDF")]
		BoolValue,
		[Token(Token = "0x4000CE0")]
		FloatValue
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB29254", Offset = "0xB29254")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200020F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2928C", Offset = "0xB2928C")]
		private sealed class <get_Children>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000178")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000B5A")]
				[Address(RVA = "0xFFDEA4", Offset = "0xFFDEA4", VA = "0xFFDEA4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B5C")]
				[Address(RVA = "0xFFDEEC", Offset = "0xFFDEEC", VA = "0xFFDEEC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xFFDE50", Offset = "0xFFDE50", VA = "0xFFDE50")]
			[DebuggerHidden]
			public <get_Children>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xFFDE88", Offset = "0xFFDE88", VA = "0xFFDE88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xFFDE8C", Offset = "0xFFDE8C", VA = "0xFFDE8C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xFFDEAC", Offset = "0xFFDEAC", VA = "0xFFDEAC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xFFDEF4", Offset = "0xFFDEF4", VA = "0xFFDEF4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xFFDF88", Offset = "0xFFDF88", VA = "0xFFDF88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2929C", Offset = "0xB2929C")]
		private sealed class <get_DeepChildren>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700017A")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000B64")]
				[Address(RVA = "0xFFE604", Offset = "0xFFE604", VA = "0xFFE604", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B66")]
				[Address(RVA = "0xFFE64C", Offset = "0xFFE64C", VA = "0xFFE64C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xFFDF8C", Offset = "0xFFDF8C", VA = "0xFFDF8C")]
			[DebuggerHidden]
			public <get_DeepChildren>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xFFDFC4", Offset = "0xFFDFC4", VA = "0xFFDFC4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xFFE1CC", Offset = "0xFFE1CC", VA = "0xFFE1CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xFFE110", Offset = "0xFFE110", VA = "0xFFE110")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xFFE054", Offset = "0xFFE054", VA = "0xFFE054")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xFFE60C", Offset = "0xFFE60C", VA = "0xFFE60C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xFFE654", Offset = "0xFFE654", VA = "0xFFE654", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xFFE6FC", Offset = "0xFFE6FC", VA = "0xFFE6FC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D540", Offset = "0xB2D540")]
		private JSONBinaryTag <Tag>k__BackingField;

		[Token(Token = "0x1700016B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0x12E2EF8", Offset = "0x12E2EF8", VA = "0x12E2EF8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0x12E2F00", Offset = "0x12E2F00", VA = "0x12E2F00", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x12E2F04", Offset = "0x12E2F04", VA = "0x12E2F04", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x12E2F0C", Offset = "0x12E2F0C", VA = "0x12E2F0C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public virtual string Value
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x12E2F10", Offset = "0x12E2F10", VA = "0x12E2F10", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x12E2F54", Offset = "0x12E2F54", VA = "0x12E2F54", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public virtual int Count
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x12E2F58", Offset = "0x12E2F58", VA = "0x12E2F58", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016F")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x12E2FDC", Offset = "0x12E2FDC", VA = "0x12E2FDC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B450", Offset = "0xB3B450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x12E3038", Offset = "0x12E3038", VA = "0x12E3038")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B4B0", Offset = "0xB3B4B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public virtual JSONBinaryTag Tag
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x12E312C", Offset = "0x12E312C", VA = "0x12E312C", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B510", Offset = "0xB3B510")]
			get
			{
				return default(JSONBinaryTag);
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x12E3134", Offset = "0x12E3134", VA = "0x12E3134", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B520", Offset = "0xB3B520")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x12E313C", Offset = "0x12E313C", VA = "0x12E313C", Slot = "21")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x12E317C", Offset = "0x12E317C", VA = "0x12E317C", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0x12E31D4", Offset = "0x12E31D4", VA = "0x12E31D4", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0x12E3218", Offset = "0x12E3218", VA = "0x12E3218", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x12E3270", Offset = "0x12E3270", VA = "0x12E3270", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x12E3310", Offset = "0x12E3310", VA = "0x12E3310", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x12E3368", Offset = "0x12E3368", VA = "0x12E3368", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x12E342C", Offset = "0x12E342C", VA = "0x12E342C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x12E34C8", Offset = "0x12E34C8", VA = "0x12E34C8", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0x12E3544", Offset = "0x12E3544", VA = "0x12E3544", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x12E2EF4", Offset = "0x12E2EF4", VA = "0x12E2EF4", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x12E2F60", Offset = "0x12E2F60", VA = "0x12E2F60", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x12E2FC4", Offset = "0x12E2FC4", VA = "0x12E2FC4", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x12E2FCC", Offset = "0x12E2FCC", VA = "0x12E2FCC", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x12E2FD4", Offset = "0x12E2FD4", VA = "0x12E2FD4", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x12E30A4", Offset = "0x12E30A4", VA = "0x12E30A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x12E30E8", Offset = "0x12E30E8", VA = "0x12E30E8", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		public abstract string ToJSON(int prefix);

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x12E35C0", Offset = "0x12E35C0", VA = "0x12E35C0")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x12E3638", Offset = "0x12E3638", VA = "0x12E3638")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x12E3684", Offset = "0x12E3684", VA = "0x12E3684")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x12E3718", Offset = "0x12E3718", VA = "0x12E3718")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x12E3734", Offset = "0x12E3734", VA = "0x12E3734", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x12E14D0", Offset = "0x12E14D0", VA = "0x12E14D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x12DF580", Offset = "0x12DF580", VA = "0x12DF580")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x12E3740", Offset = "0x12E3740", VA = "0x12E3740")]
		private static JSONData Numberize(string token)
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x12E3940", Offset = "0x12E3940", VA = "0x12E3940")]
		private static void AddElement(JSONNode ctx, string token, string tokenName, bool tokenIsString)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x12DC69C", Offset = "0x12DC69C", VA = "0x12DC69C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x12E3A80", Offset = "0x12E3A80", VA = "0x12E3A80", Slot = "31")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x12E3A84", Offset = "0x12E3A84", VA = "0x12E3A84")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x12E3B00", Offset = "0x12E3B00", VA = "0x12E3B00")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x12E3B54", Offset = "0x12E3B54", VA = "0x12E3B54")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x12E3BA8", Offset = "0x12E3BA8", VA = "0x12E3BA8")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x12E3BFC", Offset = "0x12E3BFC", VA = "0x12E3BFC")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x12E3D8C", Offset = "0x12E3D8C", VA = "0x12E3D8C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x12E3F64", Offset = "0x12E3F64", VA = "0x12E3F64")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x12E4368", Offset = "0x12E4368", VA = "0x12E4368")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x12E43BC", Offset = "0x12E43BC", VA = "0x12E43BC")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x12E4410", Offset = "0x12E4410", VA = "0x12E4410")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x12E4464", Offset = "0x12E4464", VA = "0x12E4464")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x12E45C4", Offset = "0x12E45C4", VA = "0x12E45C4")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x12E4704", Offset = "0x12E4704", VA = "0x12E4704")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x12DE53C", Offset = "0x12DE53C", VA = "0x12DE53C")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB292AC", Offset = "0xB292AC")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB292E4", Offset = "0xB292E4")]
		private sealed class <get_Children>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000180")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000B7C")]
				[Address(RVA = "0xFFC790", Offset = "0xFFC790", VA = "0xFFC790", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000181")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B7E")]
				[Address(RVA = "0xFFC7D8", Offset = "0xFFC7D8", VA = "0xFFC7D8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xFFC574", Offset = "0xFFC574", VA = "0xFFC574")]
			[DebuggerHidden]
			public <get_Children>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xFFC5AC", Offset = "0xFFC5AC", VA = "0xFFC5AC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xFFC61C", Offset = "0xFFC61C", VA = "0xFFC61C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xFFC5C8", Offset = "0xFFC5C8", VA = "0xFFC5C8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xFFC798", Offset = "0xFFC798", VA = "0xFFC798", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xFFC7E0", Offset = "0xFFC7E0", VA = "0xFFC7E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xFFC888", Offset = "0xFFC888", VA = "0xFFC888", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB292F4", Offset = "0xB292F4")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B85")]
				[Address(RVA = "0xFFC524", Offset = "0xFFC524", VA = "0xFFC524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B87")]
				[Address(RVA = "0xFFC56C", Offset = "0xFFC56C", VA = "0xFFC56C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xFFC314", Offset = "0xFFC314", VA = "0xFFC314")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xFFC340", Offset = "0xFFC340", VA = "0xFFC340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xFFC3B0", Offset = "0xFFC3B0", VA = "0xFFC3B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xFFC35C", Offset = "0xFFC35C", VA = "0xFFC35C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xFFC52C", Offset = "0xFFC52C", VA = "0xFFC52C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<JSONNode> m_List;

		[Token(Token = "0x1700017C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x12DD854", Offset = "0x12DD854", VA = "0x12DD854", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x12DD93C", Offset = "0x12DD93C", VA = "0x12DD93C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x12DD9F4", Offset = "0x12DD9F4", VA = "0x12DD9F4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x12DDA54", Offset = "0x12DDA54", VA = "0x12DDA54", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public override int Count
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x12DDAB8", Offset = "0x12DDAB8", VA = "0x12DDAB8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017F")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x12DDC94", Offset = "0x12DDC94", VA = "0x12DDC94", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B610", Offset = "0xB3B610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x12DDB04", Offset = "0x12DDB04", VA = "0x12DDB04", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x12DDB68", Offset = "0x12DDB68", VA = "0x12DDB68", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x12DDC28", Offset = "0x12DDC28", VA = "0x12DDC28", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x12DDD00", Offset = "0x12DDD00", VA = "0x12DDD00", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B670", Offset = "0xB3B670")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x12DDD6C", Offset = "0x12DDD6C", VA = "0x12DDD6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x12DDF48", Offset = "0x12DDF48", VA = "0x12DDF48", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x12DE1A0", Offset = "0x12DE1A0", VA = "0x12DE1A0", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x12DE3DC", Offset = "0x12DE3DC", VA = "0x12DE3DC", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x12DE4C4", Offset = "0x12DE4C4", VA = "0x12DE4C4")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB29304", Offset = "0xB29304")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000215")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2933C", Offset = "0xB2933C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xFFC88C", Offset = "0xFFC88C", VA = "0xFFC88C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xFFC894", Offset = "0xFFC894", VA = "0xFFC894")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000216")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2934C", Offset = "0xB2934C")]
		private sealed class <get_Children>d__16 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000189")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6000B9F")]
				[Address(RVA = "0xFFCDAC", Offset = "0xFFCDAC", VA = "0xFFCDAC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BA1")]
				[Address(RVA = "0xFFCDF4", Offset = "0xFFCDF4", VA = "0xFFCDF4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xFFCB7C", Offset = "0xFFCB7C", VA = "0xFFCB7C")]
			[DebuggerHidden]
			public <get_Children>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xFFCBB4", Offset = "0xFFCBB4", VA = "0xFFCBB4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xFFCC24", Offset = "0xFFCC24", VA = "0xFFCC24", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xFFCBD0", Offset = "0xFFCBD0", VA = "0xFFCBD0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xFFCDB4", Offset = "0xFFCDB4", VA = "0xFFCDB4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xFFCDFC", Offset = "0xFFCDFC", VA = "0xFFCDFC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xFFCEA4", Offset = "0xFFCEA4", VA = "0xFFCEA4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000217")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2935C", Offset = "0xB2935C")]
		private sealed class <GetEnumerator>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700018B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BA8")]
				[Address(RVA = "0xFFCB2C", Offset = "0xFFCB2C", VA = "0xFFCB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BAA")]
				[Address(RVA = "0xFFCB74", Offset = "0xFFCB74", VA = "0xFFCB74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xFFC8E8", Offset = "0xFFC8E8", VA = "0xFFC8E8")]
			[DebuggerHidden]
			public <GetEnumerator>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xFFC914", Offset = "0xFFC914", VA = "0xFFC914", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xFFC984", Offset = "0xFFC984", VA = "0xFFC984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xFFC930", Offset = "0xFFC930", VA = "0xFFC930")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xFFCB34", Offset = "0xFFCB34", VA = "0xFFCB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000184")]
		public Dictionary<string, JSONNode> Dict
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0x12DE830", Offset = "0x12DE830", VA = "0x12DE830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x12DE838", Offset = "0x12DE838", VA = "0x12DE838", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0x12DE940", Offset = "0x12DE940", VA = "0x12DE940", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x12DEA10", Offset = "0x12DEA10", VA = "0x12DEA10", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x12DEABC", Offset = "0x12DEABC", VA = "0x12DEABC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public override int Count
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x12DEB9C", Offset = "0x12DEB9C", VA = "0x12DEB9C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000188")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x12DF0C0", Offset = "0x12DF0C0", VA = "0x12DF0C0", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B790", Offset = "0xB3B790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x12DEBF0", Offset = "0x12DEBF0", VA = "0x12DEBF0", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x12DED3C", Offset = "0x12DED3C", VA = "0x12DED3C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x12DEE0C", Offset = "0x12DEE0C", VA = "0x12DEE0C", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x12DEEF4", Offset = "0x12DEEF4", VA = "0x12DEEF4", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x12DF12C", Offset = "0x12DF12C", VA = "0x12DF12C", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B7F0", Offset = "0xB3B7F0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x12DF198", Offset = "0x12DF198", VA = "0x12DF198", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x12DF74C", Offset = "0x12DF74C", VA = "0x12DF74C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x12DFBA4", Offset = "0x12DFBA4", VA = "0x12DFBA4", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x12DFE44", Offset = "0x12DFE44", VA = "0x12DFE44", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x12E0040", Offset = "0x12E0040", VA = "0x12E0040")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Data;

		[Token(Token = "0x1700018D")]
		public override string Value
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x12E00B8", Offset = "0x12E00B8", VA = "0x12E00B8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x12E00C0", Offset = "0x12E00C0", VA = "0x12E00C0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x12E00D8", Offset = "0x12E00D8", VA = "0x12E00D8")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x12E0118", Offset = "0x12E0118", VA = "0x12E0118")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x12E0174", Offset = "0x12E0174", VA = "0x12E0174")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x12E01D0", Offset = "0x12E01D0", VA = "0x12E01D0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x12E0224", Offset = "0x12E0224", VA = "0x12E0224")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x12E0278", Offset = "0x12E0278", VA = "0x12E0278", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x12E02D4", Offset = "0x12E02D4", VA = "0x12E02D4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x12E0330", Offset = "0x12E0330", VA = "0x12E0330", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x12E0478", Offset = "0x12E0478", VA = "0x12E0478", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2936C", Offset = "0xB2936C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JSONNode m_Node;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_Key;

		[Token(Token = "0x1700018E")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x12E1194", Offset = "0x12E1194", VA = "0x12E1194", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x12E11F4", Offset = "0x12E11F4", VA = "0x12E11F4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0x12E1278", Offset = "0x12E1278", VA = "0x12E1278", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0x12E12E4", Offset = "0x12E12E4", VA = "0x12E12E4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public override int AsInt
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x12E15A4", Offset = "0x12E15A4", VA = "0x12E15A4", Slot = "21")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x12E163C", Offset = "0x12E163C", VA = "0x12E163C", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public override float AsFloat
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x12E16D8", Offset = "0x12E16D8", VA = "0x12E16D8", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x12E1770", Offset = "0x12E1770", VA = "0x12E1770", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public override double AsDouble
		{
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x12E180C", Offset = "0x12E180C", VA = "0x12E180C", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x12E18A4", Offset = "0x12E18A4", VA = "0x12E18A4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public override bool AsBool
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x12E1940", Offset = "0x12E1940", VA = "0x12E1940", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x12E19D8", Offset = "0x12E19D8", VA = "0x12E19D8", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x12E1A74", Offset = "0x12E1A74", VA = "0x12E1A74", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x12E1AD8", Offset = "0x12E1AD8", VA = "0x12E1AD8", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x12DD910", Offset = "0x12DD910", VA = "0x12DD910")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x12DE908", Offset = "0x12DE908", VA = "0x12DE908")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x12E1134", Offset = "0x12E1134", VA = "0x12E1134")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x12E1370", Offset = "0x12E1370", VA = "0x12E1370", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x12E13F4", Offset = "0x12E13F4", VA = "0x12E13F4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x12E1480", Offset = "0x12E1480", VA = "0x12E1480")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x12E1498", Offset = "0x12E1498", VA = "0x12E1498")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x12E14B0", Offset = "0x12E14B0", VA = "0x12E14B0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x12E14C8", Offset = "0x12E14C8", VA = "0x12E14C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x12E14D8", Offset = "0x12E14D8", VA = "0x12E14D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x12E151C", Offset = "0x12E151C", VA = "0x12E151C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x12E1560", Offset = "0x12E1560", VA = "0x12E1560", Slot = "18")]
		public override string ToJSON(int prefix)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public static class JSON
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x12DC698", Offset = "0x12DC698", VA = "0x12DC698")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Dissonance.Integrations.PhotonUnityNetworking2
{
	[Token(Token = "0x200021B")]
	public class PhotonClient : BaseClient<PhotonServer, PhotonClient, int>, PhotonCommsNetwork.IPhotonPacketCallback
	{
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly PhotonCommsNetwork _network;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly RaiseEventOptions _sendOptions;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly RaiseEventOptions _sendOptionsP2P;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly List<int> _tmpDestinations;

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x11444BC", Offset = "0x11444BC", VA = "0x11444BC")]
		public PhotonClient([NotNull] PhotonCommsNetwork network)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x11445B4", Offset = "0x11445B4", VA = "0x11445B4", Slot = "8")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x1144798", Offset = "0x1144798", VA = "0x1144798", Slot = "9")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x11448F4", Offset = "0x11448F4", VA = "0x11448F4", Slot = "11")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x11448F8", Offset = "0x11448F8", VA = "0x11448F8", Slot = "19")]
		public void PacketDelivered(byte eventcode, ArraySegment<byte> data, int senderid)
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x11449F4", Offset = "0x11449F4", VA = "0x11449F4", Slot = "12")]
		protected override void SendReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x1144B48", Offset = "0x1144B48", VA = "0x1144B48", Slot = "13")]
		protected override void SendUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x1144B70", Offset = "0x1144B70", VA = "0x1144B70")]
		private void SendP2P([NotNull] IList<ClientInfo<int?>> destinations, ArraySegment<byte> packet, bool reliable)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x1144EA4", Offset = "0x1144EA4", VA = "0x1144EA4", Slot = "14")]
		protected override void SendReliableP2P(List<ClientInfo<int?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x1144F30", Offset = "0x1144F30", VA = "0x1144F30", Slot = "15")]
		protected override void SendUnreliableP2P(List<ClientInfo<int?>> destinations, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1144FBC", Offset = "0x1144FBC", VA = "0x1144FBC", Slot = "16")]
		protected override void OnServerAssignedSessionId(uint session, ushort id)
		{
		}
	}
	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xB293A4", Offset = "0xB293A4")]
	public class PhotonCommsNetwork : BaseCommsNetwork<PhotonServer, PhotonClient, int, Unit, Unit>, IOnEventCallback, IInRoomCallbacks
	{
		[Token(Token = "0x200021D")]
		internal interface IPhotonDisconnectListener
		{
			[Token(Token = "0x6000BF0")]
			void PeerDisconnected([NotNull] Player photonPlayer);
		}

		[Token(Token = "0x200021E")]
		internal interface IPhotonPacketCallback
		{
			[Token(Token = "0x6000BF1")]
			void PacketDelivered(byte eventcode, ArraySegment<byte> data, int senderid);
		}

		[Token(Token = "0x200021F")]
		private class PunPacketWrapperType
		{
			[Token(Token = "0x4000D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ArraySegment<byte> Data;

			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x10E95C4", Offset = "0x10E95C4", VA = "0x10E95C4")]
			public PunPacketWrapperType()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB293DC", Offset = "0xB293DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PunPacketWrapperType> <>9__30_0;

			[Token(Token = "0x4000D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<byte[]> <>9__30_1;

			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x10E9564", Offset = "0x10E9564", VA = "0x10E9564")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x10E956C", Offset = "0x10E956C", VA = "0x10E956C")]
			internal PunPacketWrapperType <.ctor>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x10E95CC", Offset = "0x10E95CC", VA = "0x10E95CC")]
			internal byte[] <.ctor>b__30_1()
			{
				return null;
			}
		}

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public byte EventCodeToServer;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public byte EventCodeToClient;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public byte SerializationCode;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ConcurrentPool<PunPacketWrapperType> _packetWrappers;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly ConcurrentPool<byte[]> _byteBuffers;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly List<KeyValuePair<byte, IPhotonPacketCallback>> _packetListeners;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly HashSet<byte> _eventCodes;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly List<IPhotonDisconnectListener> _disconnectListeners;

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x11450D8", Offset = "0x11450D8", VA = "0x11450D8", Slot = "32")]
		protected override PhotonServer CreateServer(Unit details)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1145138", Offset = "0x1145138", VA = "0x1145138", Slot = "33")]
		protected override PhotonClient CreateClient(Unit details)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x1145194", Offset = "0x1145194", VA = "0x1145194", Slot = "34")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x1145318", Offset = "0x1145318", VA = "0x1145318")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x114537C", Offset = "0x114537C", VA = "0x114537C", Slot = "36")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x1145400", Offset = "0x1145400", VA = "0x1145400")]
		internal void RegisterDisconnectListener(IPhotonDisconnectListener listener)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x11454A0", Offset = "0x11454A0", VA = "0x11454A0")]
		internal void UnregisterDisconnectListener(IPhotonDisconnectListener listener)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x1145580", Offset = "0x1145580", VA = "0x1145580", Slot = "38")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1145584", Offset = "0x1145584", VA = "0x1145584", Slot = "40")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1145588", Offset = "0x1145588", VA = "0x1145588", Slot = "41")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x114558C", Offset = "0x114558C", VA = "0x114558C", Slot = "42")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched([NotNull] Player newMasterClient)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x114563C", Offset = "0x114563C", VA = "0x114563C", Slot = "39")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom([NotNull] Player otherPlayer)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1145758", Offset = "0x1145758", VA = "0x1145758", Slot = "35")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1145948", Offset = "0x1145948", VA = "0x1145948", Slot = "37")]
		private void Photon.Realtime.IOnEventCallback.OnEvent([NotNull] EventData photonEvent)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1144618", Offset = "0x1144618", VA = "0x1144618")]
		internal void RegisterPacketListener(byte eventCode, IPhotonPacketCallback listener)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x11447F8", Offset = "0x11447F8", VA = "0x11447F8")]
		internal void UnregisterPacketListener(IPhotonPacketCallback listener)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1144A1C", Offset = "0x1144A1C", VA = "0x1144A1C")]
		internal void Send(ArraySegment<byte> data, byte eventCode, RaiseEventOptions options, bool reliable)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1145BBC", Offset = "0x1145BBC", VA = "0x1145BBC")]
		[NotNull]
		private object Deserialize([NotNull] StreamBuffer instream, short length)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1145D04", Offset = "0x1145D04", VA = "0x1145D04")]
		private short Serialize([NotNull] StreamBuffer outstream, [NotNull] object customobject)
		{
			return default(short);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1145E98", Offset = "0x1145E98", VA = "0x1145E98")]
		public PhotonCommsNetwork()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class PhotonPlayer : MonoBehaviourPunCallbacks, IDissonancePlayer, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB293EC", Offset = "0xB293EC")]
		private sealed class <StartTrackingCo>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PhotonPlayer <>4__this;

			[Token(Token = "0x1700019C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C0C")]
				[Address(RVA = "0x10E9B20", Offset = "0x10E9B20", VA = "0x10E9B20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C0E")]
				[Address(RVA = "0x10E9B68", Offset = "0x10E9B68", VA = "0x10E9B68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x10E99B4", Offset = "0x10E99B4", VA = "0x10E99B4")]
			[DebuggerHidden]
			public <StartTrackingCo>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x10E99E0", Offset = "0x10E99E0", VA = "0x10E99E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x10E99E4", Offset = "0x10E99E4", VA = "0x10E99E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x10E9B28", Offset = "0x10E9B28", VA = "0x10E9B28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Log Log;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DissonanceComms _comms;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _startCo;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D550", Offset = "0xB2D550")]
		private bool <IsTracking>k__BackingField;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D560", Offset = "0xB2D560")]
		private string <PlayerId>k__BackingField;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x17000196")]
		public bool IsTracking
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x1146C64", Offset = "0x1146C64", VA = "0x1146C64", Slot = "58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B920", Offset = "0xB3B920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0x1146C6C", Offset = "0x1146C6C", VA = "0x1146C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B930", Offset = "0xB3B930")]
			private set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public string PlayerId
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x1146C78", Offset = "0x1146C78", VA = "0x1146C78", Slot = "54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B940", Offset = "0xB3B940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x1146C80", Offset = "0x1146C80", VA = "0x1146C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3B950", Offset = "0xB3B950")]
			private set
			{
			}
		}

		[Token(Token = "0x17000198")]
		private Transform Transform
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x1146C88", Offset = "0x1146C88", VA = "0x1146C88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public Vector3 Position
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x1146D14", Offset = "0x1146D14", VA = "0x1146D14", Slot = "55")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700019A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x1146D34", Offset = "0x1146D34", VA = "0x1146D34", Slot = "56")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700019B")]
		public NetworkPlayerType Type
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x1146D54", Offset = "0x1146D54", VA = "0x1146D54", Slot = "57")]
			get
			{
				return default(NetworkPlayerType);
			}
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1146E08", Offset = "0x1146E08", VA = "0x1146E08", Slot = "59")]
		private void Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x1147158", Offset = "0x1147158", VA = "0x1147158")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1147254", Offset = "0x1147254", VA = "0x1147254", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x114736C", Offset = "0x114736C", VA = "0x114736C", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1147028", Offset = "0x1147028", VA = "0x1147028")]
		[PunRPC]
		private void SetPlayerName(string playerName)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1147290", Offset = "0x1147290", VA = "0x1147290")]
		private void StartTracking()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x11474F0", Offset = "0x11474F0", VA = "0x11474F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3B970", Offset = "0xB3B970")]
		private IEnumerator StartTrackingCo()
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x11473A0", Offset = "0x11473A0", VA = "0x11473A0")]
		private void StopTracking()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x114755C", Offset = "0x114755C", VA = "0x114755C")]
		public PhotonPlayer()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class PhotonServer : BaseServer<PhotonServer, PhotonClient, int>, PhotonCommsNetwork.IPhotonPacketCallback, PhotonCommsNetwork.IPhotonDisconnectListener
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly PhotonCommsNetwork _network;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<int, RaiseEventOptions> _sendOptions;

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1023954", Offset = "0x1023954", VA = "0x1023954")]
		public PhotonServer(PhotonCommsNetwork network)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x10239F4", Offset = "0x10239F4", VA = "0x10239F4", Slot = "9")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1023A70", Offset = "0x1023A70", VA = "0x1023A70", Slot = "10")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1023AE8", Offset = "0x1023AE8", VA = "0x1023AE8", Slot = "16")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1023AEC", Offset = "0x1023AEC", VA = "0x1023AEC", Slot = "18")]
		public void PacketDelivered(byte eventcode, ArraySegment<byte> data, int senderid)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1023B90", Offset = "0x1023B90", VA = "0x1023B90")]
		private RaiseEventOptions GetOptions(int connection)
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1023D68", Offset = "0x1023D68", VA = "0x1023D68", Slot = "12")]
		protected override void SendReliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1023DC0", Offset = "0x1023DC0", VA = "0x1023DC0", Slot = "13")]
		protected override void SendUnreliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1023E18", Offset = "0x1023E18", VA = "0x1023E18", Slot = "19")]
		private void Dissonance.Integrations.PhotonUnityNetworking2.PhotonCommsNetwork.IPhotonDisconnectListener.PeerDisconnected(Player peer)
		{
		}
	}
}
namespace Smooth
{
	[Token(Token = "0x2000224")]
	public class MsgType
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short SmoothSyncFromServerToNonOwners;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short SmoothSyncFromOwnerToServer;

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF3FB34", Offset = "0xF3FB34", VA = "0xF3FB34")]
		public MsgType()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public enum SyncMode
	{
		[Token(Token = "0x4000D21")]
		XYZ,
		[Token(Token = "0x4000D22")]
		XY,
		[Token(Token = "0x4000D23")]
		XZ,
		[Token(Token = "0x4000D24")]
		YZ,
		[Token(Token = "0x4000D25")]
		X,
		[Token(Token = "0x4000D26")]
		Y,
		[Token(Token = "0x4000D27")]
		Z,
		[Token(Token = "0x4000D28")]
		NONE
	}
	[Token(Token = "0x2000226")]
	public class SmoothSyncPUN2 : MonoBehaviourPunCallbacks, IPunObservable, IOnPhotonViewOwnerChange, IPhotonViewCallback
	{
		[Token(Token = "0x2000227")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x4000D8A")]
			None,
			[Token(Token = "0x4000D8B")]
			Limited,
			[Token(Token = "0x4000D8C")]
			Unlimited
		}

		[Token(Token = "0x2000228")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x4000D8E")]
			Update,
			[Token(Token = "0x4000D8F")]
			FixedUpdate
		}

		[Token(Token = "0x2000229")]
		public delegate bool validateStateDelegate(StatePUN2 receivedState, StatePUN2 latestVerifiedState);

		[Token(Token = "0x200022A")]
		private enum RestState
		{
			[Token(Token = "0x4000D91")]
			AT_REST,
			[Token(Token = "0x4000D92")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x4000D93")]
			MOVING
		}

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interpolationBackTime;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sendPositionThreshold;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sendRotationThreshold;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float sendScaleThreshold;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sendVelocityThreshold;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float receivedPositionThreshold;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float receivedRotationThreshold;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float snapPositionThreshold;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float snapRotationThreshold;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float snapScaleThreshold;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D570", Offset = "0xB2D570")]
		public float positionLerpSpeed;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D588", Offset = "0xB2D588")]
		public float rotationLerpSpeed;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D5A0", Offset = "0xB2D5A0")]
		public float scaleLerpSpeed;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2D5B8", Offset = "0xB2D5B8")]
		public float timeCorrectionSpeed;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float snapTimeThreshold;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public SyncMode syncPosition;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SyncMode syncRotation;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SyncMode syncScale;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SyncMode syncVelocity;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isPositionCompressed;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isRotationCompressed;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool isScaleCompressed;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool isVelocityCompressed;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool automaticallyResetTime;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5D0", Offset = "0xB2D5D0")]
		private float <localTime>k__BackingField;

		[Token(Token = "0x4000D4A")]
		private const int maxTimePower = 12;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private readonly float maxLocalTime;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly float minTimePrecision;

		[NonSerialized]
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int localTimeResetIndicator;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isSmoothingAuthorityChanges;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[NonSerialized]
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private StatePUN2 latestValidatedState;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool useLocalTransformOnly;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float maxPositionDifferenceForVelocitySyncing;

		[NonSerialized]
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public StatePUN2[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool hasRigidbody2D;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool dontEasePosition;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool dontEaseRotation;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		private bool dontEaseScale;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
		public bool sendAngularVelocity;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private StatePUN2 targetTempState;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private NetworkStatePUN2 sendingTempState;

		[NonSerialized]
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 positionLastAttemptedToSend;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Quaternion rotationLastAttemptedToSend;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private int atRestThresholdCount;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int samePositionCount;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int sameRotationCount;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private RestState restStatePosition;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private RestState restStateRotation;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private StatePUN2 latestEndStateUsed;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool shouldSendNextPUNUpdate;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float latestAuthorityChangeTime;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int previousReceivedOwnerInt;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public int ownerChangeIndicator;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float lastTimeAttemptedToSend;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float _ownerTime;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public int receivedStatesCounter;

		[Token(Token = "0x1700019E")]
		public float localTime
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x1076080", Offset = "0x1076080", VA = "0x1076080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BA20", Offset = "0xB3BA20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x1076088", Offset = "0x1076088", VA = "0x1076088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BA30", Offset = "0xB3BA30")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x10791D8", Offset = "0x10791D8", VA = "0x10791D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x1079200", Offset = "0x1079200", VA = "0x1079200")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x107922C", Offset = "0x107922C", VA = "0x107922C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x10793C4", Offset = "0x10793C4", VA = "0x10793C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x10793EC", Offset = "0x10793EC", VA = "0x10793EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x1079418", Offset = "0x1079418", VA = "0x1079418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x10795EC", Offset = "0x10795EC", VA = "0x10795EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x1079614", Offset = "0x1079614", VA = "0x1079614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A7")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x1079640", Offset = "0x1079640", VA = "0x1079640")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A8")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x1079F7C", Offset = "0x1079F7C", VA = "0x1079F7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A9")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x1079FA4", Offset = "0x1079FA4", VA = "0x1079FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x1079FD0", Offset = "0x1079FD0", VA = "0x1079FD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AB")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x107A000", Offset = "0x107A000", VA = "0x107A000")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x107A028", Offset = "0x107A028", VA = "0x107A028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x107A054", Offset = "0x107A054", VA = "0x107A054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AE")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x10775BC", Offset = "0x10775BC", VA = "0x10775BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x10775D4", Offset = "0x10775D4", VA = "0x10775D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1076090", Offset = "0x1076090", VA = "0x1076090")]
		public static bool validateState(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1076098", Offset = "0x1076098", VA = "0x1076098")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x107633C", Offset = "0x107633C", VA = "0x107633C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x10763DC", Offset = "0x10763DC", VA = "0x10763DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x107634C", Offset = "0x107634C", VA = "0x107634C")]
		private void SmoothSyncUpdate()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x1076FBC", Offset = "0x1076FBC", VA = "0x1076FBC", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x107742C", Offset = "0x107742C", VA = "0x107742C", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x1077514", Offset = "0x1077514", VA = "0x1077514")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x10763F0", Offset = "0x10763F0", VA = "0x10763F0")]
		public void ResetLocalTime()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x1077524", Offset = "0x1077524", VA = "0x1077524")]
		public void OnRemoteTimeReset()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x10775E4", Offset = "0x10775E4", VA = "0x10775E4", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x10778FC", Offset = "0x10778FC", VA = "0x10778FC")]
		private void sendState()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x10781E4", Offset = "0x10781E4", VA = "0x10781E4", Slot = "55")]
		public void OnOwnerChange(Player newOwner, Player previousOwner)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1078480", Offset = "0x1078480", VA = "0x1078480")]
		public void checkIfOwnerHasChanged(StatePUN2 newState)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x1076628", Offset = "0x1076628", VA = "0x1076628")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x107874C", Offset = "0x107874C", VA = "0x107874C")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x1078B24", Offset = "0x1078B24", VA = "0x1078B24")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x10796C4", Offset = "0x10796C4", VA = "0x10796C4")]
		private void shouldTeleport(StatePUN2 start, ref StatePUN2 end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x1077838", Offset = "0x1077838", VA = "0x1077838")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x1077884", Offset = "0x1077884", VA = "0x1077884")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x10778D0", Offset = "0x10778D0", VA = "0x10778D0")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x107925C", Offset = "0x107925C", VA = "0x107925C")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x1079448", Offset = "0x1079448", VA = "0x1079448")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x1079670", Offset = "0x1079670", VA = "0x1079670")]
		public void setScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x1079824", Offset = "0x1079824", VA = "0x1079824")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x1077C9C", Offset = "0x1077C9C", VA = "0x1077C9C")]
		private bool almostEqual(Vector3 v1, Vector3 v2, float precision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x107858C", Offset = "0x107858C", VA = "0x107858C")]
		public void addState(StatePUN2 state)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x1078B10", Offset = "0x1078B10", VA = "0x1078B10")]
		public void stopEasing()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x1078374", Offset = "0x1078374", VA = "0x1078374")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x1079830", Offset = "0x1079830", VA = "0x1079830")]
		[PunRPC]
		public void RpcClearBuffer()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x1075FE4", Offset = "0x1075FE4", VA = "0x1075FE4")]
		public void teleport()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x1077138", Offset = "0x1077138", VA = "0x1077138")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1079844", Offset = "0x1079844", VA = "0x1079844")]
		public void teleportAnyObject(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x1079B04", Offset = "0x1079B04", VA = "0x1079B04")]
		[PunRPC]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1079BEC", Offset = "0x1079BEC", VA = "0x1079BEC")]
		[PunRPC]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1079CD8", Offset = "0x1079CD8", VA = "0x1079CD8")]
		private void addTeleportState(StatePUN2 teleportState)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x1075FE8", Offset = "0x1075FE8", VA = "0x1075FE8")]
		public void forceStateSendNextOnPhotonSerializeView()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1077CCC", Offset = "0x1077CCC", VA = "0x1077CCC")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1077D80", Offset = "0x1077D80", VA = "0x1077D80")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x1077E84", Offset = "0x1077E84", VA = "0x1077E84")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1077F40", Offset = "0x1077F40", VA = "0x1077F40")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x10780A8", Offset = "0x10780A8", VA = "0x10780A8")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x107A084", Offset = "0x107A084", VA = "0x107A084", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x10764B4", Offset = "0x10764B4", VA = "0x10764B4")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x107A524", Offset = "0x107A524", VA = "0x107A524")]
		public SmoothSyncPUN2()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class StatePUN2
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool serverShouldRelayTeleport;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float receivedTimestamp;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int localTimeResetIndicator;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x11B0CFC", Offset = "0x11B0CFC", VA = "0x11B0CFC")]
		public StatePUN2()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x11B0D04", Offset = "0x11B0D04", VA = "0x11B0D04")]
		public StatePUN2 copyFromState(StatePUN2 state)
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x11B0D78", Offset = "0x11B0D78", VA = "0x11B0D78")]
		public static StatePUN2 Lerp(StatePUN2 targetTempState, StatePUN2 start, StatePUN2 end, float t)
		{
			return null;
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x11B0F04", Offset = "0x11B0F04", VA = "0x11B0F04")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x11B0F80", Offset = "0x11B0F80", VA = "0x11B0F80")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class NetworkStatePUN2
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SmoothSyncPUN2 smoothSync;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatePUN2 state;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte positionMask;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private byte rotationMask;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private byte scaleMask;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private byte velocityMask;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private byte angularVelocityMask;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private byte atPositionalRestMask;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private byte atRotationalRestMask;

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x10A53E8", Offset = "0x10A53E8", VA = "0x10A53E8")]
		public NetworkStatePUN2()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x10A5468", Offset = "0x10A5468", VA = "0x10A5468")]
		public NetworkStatePUN2(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x10A5510", Offset = "0x10A5510", VA = "0x10A5510")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x10A5534", Offset = "0x10A5534", VA = "0x10A5534")]
		public void Serialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x10A60F0", Offset = "0x10A60F0", VA = "0x10A60F0")]
		public void Deserialize(BinaryReader reader, SmoothSyncPUN2 smoothSync)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x10A6078", Offset = "0x10A6078", VA = "0x10A6078")]
		private byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x10A6FA0", Offset = "0x10A6FA0", VA = "0x10A6FA0")]
		private bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x10A6FB0", Offset = "0x10A6FB0", VA = "0x10A6FB0")]
		private bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x10A6FC0", Offset = "0x10A6FC0", VA = "0x10A6FC0")]
		private bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x10A6FD0", Offset = "0x10A6FD0", VA = "0x10A6FD0")]
		private bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x10A6FE0", Offset = "0x10A6FE0", VA = "0x10A6FE0")]
		private bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x10A6FF0", Offset = "0x10A6FF0", VA = "0x10A6FF0")]
		private bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x10A7000", Offset = "0x10A7000", VA = "0x10A7000")]
		private bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Serializable]
	[Token(Token = "0x200022D")]
	public struct Half : IComparable, IFormattable, IConvertible, IComparable<Half>, IEquatable<Half>
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0xB2D5E0", Offset = "0xB2D5E0")]
		public ushort internalValue;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Half Epsilon;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly Half MaxValue;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Half MinValue;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly Half NaN;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Half NegativeInfinity;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly Half PositiveInfinity;

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x13BF46C", Offset = "0x13BF46C", VA = "0x13BF46C")]
		public Half(float value)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x13BF5E8", Offset = "0x13BF5E8", VA = "0x13BF5E8")]
		public Half(int value)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x13BF5F0", Offset = "0x13BF5F0", VA = "0x13BF5F0")]
		public Half(long value)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x13BF5F8", Offset = "0x13BF5F8", VA = "0x13BF5F8")]
		public Half(double value)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13BF600", Offset = "0x13BF600", VA = "0x13BF600")]
		public Half(decimal value)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x13BF680", Offset = "0x13BF680", VA = "0x13BF680")]
		public Half(uint value)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x13BF68C", Offset = "0x13BF68C", VA = "0x13BF68C")]
		public Half(ulong value)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x13BF698", Offset = "0x13BF698", VA = "0x13BF698")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x13BF768", Offset = "0x13BF768", VA = "0x13BF768")]
		public static Half Add(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x13BF880", Offset = "0x13BF880", VA = "0x13BF880")]
		public static Half Subtract(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x13BF998", Offset = "0x13BF998", VA = "0x13BF998")]
		public static Half Multiply(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x13BFAB0", Offset = "0x13BFAB0", VA = "0x13BFAB0")]
		public static Half Divide(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x13BFBC8", Offset = "0x13BFBC8", VA = "0x13BFBC8")]
		public static Half operator +(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x13BF700", Offset = "0x13BF700", VA = "0x13BF700")]
		public static Half operator -(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x13BFC34", Offset = "0x13BFC34", VA = "0x13BFC34")]
		public static Half operator ++(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x13BFD40", Offset = "0x13BFD40", VA = "0x13BFD40")]
		public static Half operator --(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x13BF7E0", Offset = "0x13BF7E0", VA = "0x13BF7E0")]
		public static Half operator +(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x13BF8F8", Offset = "0x13BF8F8", VA = "0x13BF8F8")]
		public static Half operator -(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x13BFA10", Offset = "0x13BFA10", VA = "0x13BFA10")]
		public static Half operator *(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x13BFB28", Offset = "0x13BFB28", VA = "0x13BFB28")]
		public static Half operator /(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x13BFDC4", Offset = "0x13BFDC4", VA = "0x13BFDC4")]
		public static bool operator ==(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x13BFEB4", Offset = "0x13BFEB4", VA = "0x13BFEB4")]
		public static bool operator !=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x13BFEC4", Offset = "0x13BFEC4", VA = "0x13BFEC4")]
		public static bool operator <(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x13BFF50", Offset = "0x13BFF50", VA = "0x13BFF50")]
		public static bool operator >(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x13BFFDC", Offset = "0x13BFFDC", VA = "0x13BFFDC")]
		public static bool operator <=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x13C0090", Offset = "0x13C0090", VA = "0x13C0090")]
		public static bool operator >=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x13C0144", Offset = "0x13C0144", VA = "0x13C0144")]
		public static implicit operator Half(byte value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x13C0174", Offset = "0x13C0174", VA = "0x13C0174")]
		public static implicit operator Half(short value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x13C01A4", Offset = "0x13C01A4", VA = "0x13C01A4")]
		public static implicit operator Half(char value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x13C01D4", Offset = "0x13C01D4", VA = "0x13C01D4")]
		public static implicit operator Half(int value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x13C0200", Offset = "0x13C0200", VA = "0x13C0200")]
		public static implicit operator Half(long value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x13BFD18", Offset = "0x13BFD18", VA = "0x13BFD18")]
		public static explicit operator Half(float value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x13C022C", Offset = "0x13C022C", VA = "0x13C022C")]
		public static explicit operator Half(double value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x13C0258", Offset = "0x13C0258", VA = "0x13C0258")]
		public static explicit operator Half(decimal value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x13C02E0", Offset = "0x13C02E0", VA = "0x13C02E0")]
		public static explicit operator byte(Half value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x13C0350", Offset = "0x13C0350", VA = "0x13C0350")]
		public static explicit operator char(Half value)
		{
			return default(char);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x13C03C0", Offset = "0x13C03C0", VA = "0x13C03C0")]
		public static explicit operator short(Half value)
		{
			return default(short);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x13C0440", Offset = "0x13C0440", VA = "0x13C0440")]
		public static explicit operator int(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x13C04C0", Offset = "0x13C04C0", VA = "0x13C04C0")]
		public static explicit operator long(Half value)
		{
			return default(long);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x13BFCB8", Offset = "0x13BFCB8", VA = "0x13BFCB8")]
		public static implicit operator float(Half value)
		{
			return default(float);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x13C0618", Offset = "0x13C0618", VA = "0x13C0618")]
		public static implicit operator double(Half value)
		{
			return default(double);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x13C0680", Offset = "0x13C0680", VA = "0x13C0680")]
		public static explicit operator decimal(Half value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x13C0724", Offset = "0x13C0724", VA = "0x13C0724")]
		public static implicit operator Half(sbyte value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x13C0754", Offset = "0x13C0754", VA = "0x13C0754")]
		public static implicit operator Half(ushort value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x13C0784", Offset = "0x13C0784", VA = "0x13C0784")]
		public static implicit operator Half(uint value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x13C07B4", Offset = "0x13C07B4", VA = "0x13C07B4")]
		public static implicit operator Half(ulong value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x13C07E4", Offset = "0x13C07E4", VA = "0x13C07E4")]
		public static explicit operator sbyte(Half value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x13C0864", Offset = "0x13C0864", VA = "0x13C0864")]
		public static explicit operator ushort(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x13C08D4", Offset = "0x13C08D4", VA = "0x13C08D4")]
		public static explicit operator uint(Half value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x13C0948", Offset = "0x13C0948", VA = "0x13C0948")]
		public static explicit operator ulong(Half value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x13C09BC", Offset = "0x13C09BC", VA = "0x13C09BC", Slot = "23")]
		public int CompareTo(Half other)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x13C0AFC", Offset = "0x13C0AFC", VA = "0x13C0AFC", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x13C0BCC", Offset = "0x13C0BCC", VA = "0x13C0BCC", Slot = "24")]
		public bool Equals(Half other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x13C0CAC", Offset = "0x13C0CAC", VA = "0x13C0CAC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x13C0DA8", Offset = "0x13C0DA8", VA = "0x13C0DA8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x13C0DB0", Offset = "0x13C0DB0", VA = "0x13C0DB0")]
		public TypeCode GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x13C0DB8", Offset = "0x13C0DB8", VA = "0x13C0DB8")]
		public static byte[] GetBytes(Half value)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x13C0E1C", Offset = "0x13C0E1C", VA = "0x13C0E1C")]
		public static ushort GetBits(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x13C0E20", Offset = "0x13C0E20", VA = "0x13C0E20")]
		public static Half ToHalf(byte[] value, int startIndex)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x13C0ED0", Offset = "0x13C0ED0", VA = "0x13C0ED0")]
		public static Half ToHalf(ushort bits)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x13C0ED8", Offset = "0x13C0ED8", VA = "0x13C0ED8")]
		public static int Sign(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x13C1030", Offset = "0x13C1030", VA = "0x13C1030")]
		public static Half Abs(Half value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x13C10F8", Offset = "0x13C10F8", VA = "0x13C10F8")]
		public static Half Max(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x13C1178", Offset = "0x13C1178", VA = "0x13C1178")]
		public static Half Min(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x13BFE48", Offset = "0x13BFE48", VA = "0x13BFE48")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x13C120C", Offset = "0x13C120C", VA = "0x13C120C")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x13C128C", Offset = "0x13C128C", VA = "0x13C128C")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x13C130C", Offset = "0x13C130C", VA = "0x13C130C")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x13C138C", Offset = "0x13C138C", VA = "0x13C138C")]
		public static Half Parse(string value)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x13C144C", Offset = "0x13C144C", VA = "0x13C144C")]
		public static Half Parse(string value, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x13C14EC", Offset = "0x13C14EC", VA = "0x13C14EC")]
		public static Half Parse(string value, NumberStyles style)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x13C15C4", Offset = "0x13C15C4", VA = "0x13C15C4")]
		public static Half Parse(string value, NumberStyles style, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x13C1664", Offset = "0x13C1664", VA = "0x13C1664")]
		public static bool TryParse(string value, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x13C1720", Offset = "0x13C1720", VA = "0x13C1720")]
		public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x13C17F4", Offset = "0x13C17F4", VA = "0x13C17F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x13C18B0", Offset = "0x13C18B0", VA = "0x13C18B0")]
		public string ToString(IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x13C193C", Offset = "0x13C193C", VA = "0x13C193C")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x13C1A00", Offset = "0x13C1A00", VA = "0x13C1A00", Slot = "5")]
		public string ToString(string format, IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x13C1A9C", Offset = "0x13C1A9C", VA = "0x13C1A9C", Slot = "17")]
		private float System.IConvertible.ToSingle(IFormatProvider provider)
		{
			return default(float);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x13C1B00", Offset = "0x13C1B00", VA = "0x13C1B00", Slot = "6")]
		private TypeCode System.IConvertible.GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x13C1B08", Offset = "0x13C1B08", VA = "0x13C1B08", Slot = "7")]
		private bool System.IConvertible.ToBoolean(IFormatProvider provider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x13C1BB0", Offset = "0x13C1BB0", VA = "0x13C1BB0", Slot = "10")]
		private byte System.IConvertible.ToByte(IFormatProvider provider)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x13C1C58", Offset = "0x13C1C58", VA = "0x13C1C58", Slot = "8")]
		private char System.IConvertible.ToChar(IFormatProvider provider)
		{
			return default(char);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x13C1D2C", Offset = "0x13C1D2C", VA = "0x13C1D2C", Slot = "20")]
		private DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x13C1E00", Offset = "0x13C1E00", VA = "0x13C1E00", Slot = "19")]
		private decimal System.IConvertible.ToDecimal(IFormatProvider provider)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x13C1EA8", Offset = "0x13C1EA8", VA = "0x13C1EA8", Slot = "18")]
		private double System.IConvertible.ToDouble(IFormatProvider provider)
		{
			return default(double);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x13C1F50", Offset = "0x13C1F50", VA = "0x13C1F50", Slot = "11")]
		private short System.IConvertible.ToInt16(IFormatProvider provider)
		{
			return default(short);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x13C1FF8", Offset = "0x13C1FF8", VA = "0x13C1FF8", Slot = "13")]
		private int System.IConvertible.ToInt32(IFormatProvider provider)
		{
			return default(int);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x13C20A0", Offset = "0x13C20A0", VA = "0x13C20A0", Slot = "15")]
		private long System.IConvertible.ToInt64(IFormatProvider provider)
		{
			return default(long);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x13C2148", Offset = "0x13C2148", VA = "0x13C2148", Slot = "9")]
		private sbyte System.IConvertible.ToSByte(IFormatProvider provider)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x13C21F0", Offset = "0x13C21F0", VA = "0x13C21F0", Slot = "21")]
		private string System.IConvertible.ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x13C22D8", Offset = "0x13C22D8", VA = "0x13C22D8", Slot = "22")]
		private object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x13C23B4", Offset = "0x13C23B4", VA = "0x13C23B4", Slot = "12")]
		private ushort System.IConvertible.ToUInt16(IFormatProvider provider)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x13C245C", Offset = "0x13C245C", VA = "0x13C245C", Slot = "14")]
		private uint System.IConvertible.ToUInt32(IFormatProvider provider)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x13C2504", Offset = "0x13C2504", VA = "0x13C2504", Slot = "16")]
		private ulong System.IConvertible.ToUInt64(IFormatProvider provider)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x200022E")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x200022F")]
		private struct UIntFloat
		{
			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x13C2648", Offset = "0x13C2648", VA = "0x13C2648")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x13C26C0", Offset = "0x13C26C0", VA = "0x13C26C0")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x13C2730", Offset = "0x13C2730", VA = "0x13C2730")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x13C2760", Offset = "0x13C2760", VA = "0x13C2760")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x13C2880", Offset = "0x13C2880", VA = "0x13C2880")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x13C2974", Offset = "0x13C2974", VA = "0x13C2974")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x13C2A3C", Offset = "0x13C2A3C", VA = "0x13C2A3C")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x13C2B88", Offset = "0x13C2B88", VA = "0x13C2B88")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x13C0540", Offset = "0x13C0540", VA = "0x13C0540")]
		public static float HalfToSingle(Half half)
		{
			return default(float);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x13BF4E0", Offset = "0x13BF4E0", VA = "0x13BF4E0")]
		public static Half SingleToHalf(float single)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x13C2CBC", Offset = "0x13C2CBC", VA = "0x13C2CBC")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x13C2D94", Offset = "0x13C2D94", VA = "0x13C2D94")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x13BFBD0", Offset = "0x13BFBD0", VA = "0x13BFBD0")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x13C1098", Offset = "0x13C1098", VA = "0x13C1098")]
		public static Half Abs(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x13C11F8", Offset = "0x13C11F8", VA = "0x13C11F8")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x13C1278", Offset = "0x13C1278", VA = "0x13C1278")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x13C1378", Offset = "0x13C1378", VA = "0x13C1378")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x13C12F8", Offset = "0x13C12F8", VA = "0x13C12F8")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}
	}
}
namespace UsingTheirs.RemoteInspector
{
	[Token(Token = "0x2000230")]
	public class ExampleComponent : MonoBehaviour
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float rotationScale;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int public_field_int;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int private_field_int;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D5F4", Offset = "0xB2D5F4")]
		private int <public_property_int>k__BackingField;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D604", Offset = "0xB2D604")]
		private int <private_property_int>k__BackingField;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> public_field_list_int;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] public_field_array_string;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D public_field_texture2D;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture3D public_field_texture3D;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Cubemap public_field_cubemap;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2DArray public_field_texture2DArray;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CubemapArray public_field_cubemapArray;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool reloadScene;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool cloneForSpeedTest;

		[Token(Token = "0x170001AF")]
		public int public_property_int
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xED71E0", Offset = "0xED71E0", VA = "0xED71E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BA70", Offset = "0xB3BA70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xED71E8", Offset = "0xED71E8", VA = "0xED71E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BA80", Offset = "0xB3BA80")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public int private_property_int
		{
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xED71F0", Offset = "0xED71F0", VA = "0xED71F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BA90", Offset = "0xB3BA90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xED71F8", Offset = "0xED71F8", VA = "0xED71F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAA0", Offset = "0xB3BAA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public List<int> public_property_list_int
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xED72E8", Offset = "0xED72E8", VA = "0xED72E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xED72F0", Offset = "0xED72F0", VA = "0xED72F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public string[] public_property_array_string
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xED72F8", Offset = "0xED72F8", VA = "0xED72F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xED7300", Offset = "0xED7300", VA = "0xED7300")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public int property_error
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xED7308", Offset = "0xED7308", VA = "0xED7308")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xED7200", Offset = "0xED7200", VA = "0xED7200")]
		public void public_method()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xED7274", Offset = "0xED7274", VA = "0xED7274")]
		private void private_method()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xED735C", Offset = "0xED735C", VA = "0xED735C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xED74B0", Offset = "0xED74B0", VA = "0xED74B0")]
		public string Welcome()
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xED74F4", Offset = "0xED74F4", VA = "0xED74F4")]
		private int Add(int a = 3, int b = 5)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xED74FC", Offset = "0xED74FC", VA = "0xED74FC")]
		private int Calc(ref int sum, int a, out int subtracted)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xED7514", Offset = "0xED7514", VA = "0xED7514")]
		public ExampleComponent()
		{
		}
	}
}
namespace TiltBrush
{
	[Token(Token = "0x2000231")]
	[ExecuteInEditMode]
	internal class TestPackInt : MonoBehaviour
	{
		[Token(Token = "0x4000DCD")]
		private const int kSelfContainedTest = 0;

		[Token(Token = "0x4000DCE")]
		private const int kTwoPassTestPack = 1;

		[Token(Token = "0x4000DCF")]
		private const int kTwoPassTestUnpackAndCheck = 2;

		[Token(Token = "0x4000DD0")]
		private const int kRenderUvPass = 3;

		[Token(Token = "0x4000DD1")]
		private const int kCopyPass = 4;

		[Token(Token = "0x4000DD2")]
		private const int kUnpackRepack = 5;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_runCount;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material sm_copyTextureMat;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_testMaterial;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture m_debugRt;

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1162954", Offset = "0x1162954", VA = "0x1162954")]
		private static void MyBlit(Texture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x11629D4", Offset = "0x11629D4", VA = "0x11629D4")]
		private static void MyBlit(Texture source, RenderTexture destination, Material mat, int pass)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1162BB4", Offset = "0x1162BB4", VA = "0x1162BB4")]
		private static Color32[] GetColors(RenderTexture rt)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1162DA8", Offset = "0x1162DA8", VA = "0x1162DA8")]
		private static void WriteTextureToDisk(RenderTexture rt, string name)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1163078", Offset = "0x1163078", VA = "0x1163078")]
		private static void CheckAllGreen(RenderTexture rt, RenderTexture output)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x11634AC", Offset = "0x11634AC", VA = "0x11634AC")]
		private static RenderTexture GetTemporaryTarget()
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1163554", Offset = "0x1163554", VA = "0x1163554")]
		public static void RunTests(Material testMaterial, RenderTexture output)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1163C94", Offset = "0x1163C94", VA = "0x1163C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1163E1C", Offset = "0x1163E1C", VA = "0x1163E1C")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1164110", Offset = "0x1164110", VA = "0x1164110")]
		public TestPackInt()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class AmbientGrid : MonoBehaviour
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_GridBig;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_GridSmall;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_GridBaseColor;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_GridSpacing;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_CameraTransform;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_MaterialBig;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_MaterialSmall;

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xFE1E84", Offset = "0xFE1E84", VA = "0xFE1E84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xFE1F88", Offset = "0xFE1F88", VA = "0xFE1F88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xFE21F8", Offset = "0xFE21F8", VA = "0xFE21F8")]
		public AmbientGrid()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class App : MonoBehaviour
	{
		[Token(Token = "0x2000234")]
		public enum AppState
		{
			[Token(Token = "0x4000E37")]
			Error,
			[Token(Token = "0x4000E38")]
			LoadingBrushesAndLighting,
			[Token(Token = "0x4000E39")]
			FadeFromBlack,
			[Token(Token = "0x4000E3A")]
			FirstRunIntro,
			[Token(Token = "0x4000E3B")]
			Intro,
			[Token(Token = "0x4000E3C")]
			Loading,
			[Token(Token = "0x4000E3D")]
			QuickLoad,
			[Token(Token = "0x4000E3E")]
			Standard,
			[Token(Token = "0x4000E3F")]
			MemoryExceeded,
			[Token(Token = "0x4000E40")]
			Saving,
			[Token(Token = "0x4000E41")]
			Reset,
			[Token(Token = "0x4000E42")]
			Uploading,
			[Token(Token = "0x4000E43")]
			AutoProfiling,
			[Token(Token = "0x4000E44")]
			OfflineRendering
		}

		[Token(Token = "0x2000235")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2940C", Offset = "0xB2940C")]
		private sealed class <DelayedSketchLoadedCard>d__199 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <stall>5__2;

			[Token(Token = "0x170001D7")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6000D81")]
				[Address(RVA = "0x111FCCC", Offset = "0x111FCCC", VA = "0x111FCCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D83")]
				[Address(RVA = "0x111FD14", Offset = "0x111FD14", VA = "0x111FD14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x111FB64", Offset = "0x111FB64", VA = "0x111FB64")]
			[DebuggerHidden]
			public <DelayedSketchLoadedCard>d__199(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x111FB90", Offset = "0x111FB90", VA = "0x111FB90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x111FB94", Offset = "0x111FB94", VA = "0x111FB94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D82")]
			[Address(RVA = "0x111FCD4", Offset = "0x111FCD4", VA = "0x111FCD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2941C", Offset = "0xB2941C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, int> <>9__247_0;

			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x111FB18", Offset = "0x111FB18", VA = "0x111FB18")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x111FB20", Offset = "0x111FB20", VA = "0x111FB20")]
			internal int <CopySupportFiles>b__247_0(string s)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000DDE")]
		public const float METERS_TO_UNITS = 10f;

		[Token(Token = "0x4000DDF")]
		public const float UNITS_TO_METERS = 0.1f;

		[Token(Token = "0x4000DE0")]
		public const string kAppDisplayName = "MultiBrush";

		[Token(Token = "0x4000DE1")]
		public const string kVendorName = "rendever";

		[Token(Token = "0x4000DE2")]
		public const string kDisplayVendorName = "Rendever";

		[Token(Token = "0x4000DE3")]
		public const string kGoogleServicesAppName = "MultiBrush";

		[Token(Token = "0x4000DE4")]
		public const string kConfigFileName = "Multibrush.cfg";

		[Token(Token = "0x4000DE5")]
		public const string kAppFolderName = "Tilt Brush";

		[Token(Token = "0x4000DE6")]
		public const string kDriveFolderName = "MultiBrush";

		[Token(Token = "0x4000DE7")]
		public const string kGuiBuildExecutableName = "multibrush";

		[Token(Token = "0x4000DE8")]
		public const string kGuiBuildWindowsExecutableName = "multibrush.exe";

		[Token(Token = "0x4000DE9")]
		public const string kGuiBuildOSXExecutableName = "multibrush.app";

		[Token(Token = "0x4000DEA")]
		public const string kGuiBuildAndroidExecutableName = "com.rendever.multibrush.apk";

		[Token(Token = "0x4000DEB")]
		public const string kPlayerPrefHasPlayedBefore = "Has played before";

		[Token(Token = "0x4000DEC")]
		public const string kReferenceImagesSeeded = "Reference Images seeded";

		[Token(Token = "0x4000DED")]
		private const string kDefaultConfigPath = "DefaultConfig";

		[Token(Token = "0x4000DEE")]
		private const int kHttpListenerPort = 40074;

		[Token(Token = "0x4000DEF")]
		private const string kProtocolHandlerPrefix = "tiltbrush://remix/";

		[Token(Token = "0x4000DF0")]
		private const string kFileMoveFilename = "WhereHaveMyFilesGone.txt";

		[Token(Token = "0x4000DF1")]
		private const string kFileMoveContents = "All your MultiBrush files have been moved to\n/sdcard/Tilt Brush.\n";

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static App m_Instance;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool ForceSkipIntroForMultiplayer;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2D694", Offset = "0xB2D694")]
		[SerializeField]
		private VrSdk m_VrSdk;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneScript m_SceneScript;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2D6F0", Offset = "0xB2D6F0")]
		private bool m_ForceHasRunAppPreviously;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_FadeFromBlackDuration;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_QuickLoadHintDelay;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GpuIntersector m_GpuIntersector;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TiltBrushManifest m_Manifest;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TiltBrushManifest m_ManifestExperimental;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionEffect m_SelectionEffect;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform m_SceneTransform;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform m_CanvasTransform;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform m_EnvironmentTransform;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_SketchSurface;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_ErrorDialog;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_OdsPrefab;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject m_OdsPivot;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2D7BC", Offset = "0xB2D7BC")]
		public bool m_ForceSkipIntro;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_IntroSketchFadeInDuration;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_IntroSketchFadeOutDuration;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_IntroSketchMobileFadeInDuration;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_IntroSketchMobileFadeOutDuration;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private FrameCountDisplay m_FrameCountDisplay;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject m_ShaderWarmup;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2D854", Offset = "0xB2D854")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private OAuth2Identity m_SketchfabIdentity;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Queue m_RequestedTiltFileQueue;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private HttpServer m_HttpServer;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SketchSurfacePanel m_SketchSurfacePanel;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UserConfig m_UserConfig;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string m_UserPath;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private string m_OldUserPath;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private PolyAssetCatalog m_PolyAssetCatalog;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Switchboard m_Switchboard;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private BrushColorController m_BrushColorController;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private GroupManager m_GroupManager;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private double m_sketchTimeBase;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_AppStateCountdown;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float m_QuickLoadHintCountdown;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_QuickLoadInputWasValid;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool m_QuickLoadEatInput;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private AppState m_CurrentAppState;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private AppState m_DesiredAppState_;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int m_TargetFrameRate;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_RoomRadius;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool m_AutosaveRestoreFileExists;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		private bool m_ShowAutosaveHint;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
		private bool? m_ShowControllers;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int m_QuickloadStallFrames;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GameObject m_IntroSketch;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Renderer[] m_IntroSketchRenderers;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float m_IntroFadeTimer;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool m_FirstRunExperience;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		private bool m_RequestingAudioReactiveMode;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private DriveAccess m_DriveAccess;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private DriveSync m_DriveSync;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GoogleUserSettings m_GoogleUserSettings;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D8C0", Offset = "0xB2D8C0")]
		private bool <HasPlayedBefore>k__BackingField;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D8D0", Offset = "0xB2D8D0")]
		private bool <StartupError>k__BackingField;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D8E0", Offset = "0xB2D8E0")]
		private TrTransform <OdsHeadPrimary>k__BackingField;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D8F0", Offset = "0xB2D8F0")]
		private TrTransform <OdsScenePrimary>k__BackingField;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D900", Offset = "0xB2D900")]
		private TrTransform <OdsHeadSecondary>k__BackingField;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2D910", Offset = "0xB2D910")]
		private TrTransform <OdsSceneSecondary>k__BackingField;

		[Token(Token = "0x170001B4")]
		public static Config Config
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xFE4228", Offset = "0xFE4228", VA = "0xFE4228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public static UserConfig UserConfig
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xFE4274", Offset = "0xFE4274", VA = "0xFE4274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public static PlatformConfig PlatformConfig
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xFE42CC", Offset = "0xFE42CC", VA = "0xFE42CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public static VrSdk VrSdk
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xFE1F30", Offset = "0xFE1F30", VA = "0xFE1F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public static SceneScript Scene
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xFE21A0", Offset = "0xFE21A0", VA = "0xFE21A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public static CanvasScript ActiveCanvas
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xFE4324", Offset = "0xFE4324", VA = "0xFE4324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public static PolyAssetCatalog PolyAssetCatalog
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xFE4344", Offset = "0xFE4344", VA = "0xFE4344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public static Switchboard Switchboard
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xFDF734", Offset = "0xFDF734", VA = "0xFDF734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public static BrushColorController BrushColor
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xFE439C", Offset = "0xFE439C", VA = "0xFE439C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		public static GroupManager GroupManager
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0xFE43F4", Offset = "0xFE43F4", VA = "0xFE43F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public static HttpServer HttpServer
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xFE444C", Offset = "0xFE444C", VA = "0xFE444C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public static DriveAccess DriveAccess
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xFE44A4", Offset = "0xFE44A4", VA = "0xFE44A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public static DriveSync DriveSync
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xFE44FC", Offset = "0xFE44FC", VA = "0xFE44FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public static OAuth2Identity GoogleIdentity
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xFDF35C", Offset = "0xFDF35C", VA = "0xFDF35C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C2")]
		public static OAuth2Identity SketchfabIdentity
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xFDF3B4", Offset = "0xFDF3B4", VA = "0xFDF3B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public static GoogleUserSettings GoogleUserSettings
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xFE4554", Offset = "0xFE4554", VA = "0xFE4554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		public static App Instance
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xFE45AC", Offset = "0xFE45AC", VA = "0xFE45AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public static AppState CurrentState
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xFE45F8", Offset = "0xFE45F8", VA = "0xFE45F8")]
			get
			{
				return default(AppState);
			}
		}

		[Token(Token = "0x170001C6")]
		public Transform m_RoomTransform
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xFE4AFC", Offset = "0xFE4AFC", VA = "0xFE4AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private AppState m_DesiredAppState
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xFE4C44", Offset = "0xFE4C44", VA = "0xFE4C44")]
			get
			{
				return default(AppState);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xFE4C4C", Offset = "0xFE4C4C", VA = "0xFE4C4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public double CurrentSketchTime
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xFE4D14", Offset = "0xFE4D14", VA = "0xFE4D14")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xFE4D44", Offset = "0xFE4D44", VA = "0xFE4D44")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public float RoomRadius
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0xFE4DD0", Offset = "0xFE4DD0", VA = "0xFE4DD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CA")]
		public SelectionEffect SelectionEffect
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xFE4DD8", Offset = "0xFE4DD8", VA = "0xFE4DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public bool IsFirstRunExperience
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xFE4DE0", Offset = "0xFE4DE0", VA = "0xFE4DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool HasPlayedBefore
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xFE4DE8", Offset = "0xFE4DE8", VA = "0xFE4DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB30", Offset = "0xB3BB30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xFE4DF0", Offset = "0xFE4DF0", VA = "0xFE4DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB40", Offset = "0xB3BB40")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public bool StartupError
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xFE4DFC", Offset = "0xFE4DFC", VA = "0xFE4DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB50", Offset = "0xB3BB50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xFE4E04", Offset = "0xFE4E04", VA = "0xFE4E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB60", Offset = "0xB3BB60")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool ShowControllers
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xFE4E10", Offset = "0xFE4E10", VA = "0xFE4E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xFE4E60", Offset = "0xFE4E60", VA = "0xFE4E60")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool AutosaveRestoreFileExists
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xFE4F1C", Offset = "0xFE4F1C", VA = "0xFE4F1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xFE4F24", Offset = "0xFE4F24", VA = "0xFE4F24")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public GpuIntersector GpuIntersector
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xFE50DC", Offset = "0xFE50DC", VA = "0xFE50DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public TrTransform OdsHeadPrimary
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xFE50E4", Offset = "0xFE50E4", VA = "0xFE50E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB70", Offset = "0xB3BB70")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xFE50FC", Offset = "0xFE50FC", VA = "0xFE50FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB80", Offset = "0xB3BB80")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public TrTransform OdsScenePrimary
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xFE5114", Offset = "0xFE5114", VA = "0xFE5114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB90", Offset = "0xB3BB90")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xFE512C", Offset = "0xFE512C", VA = "0xFE512C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBA0", Offset = "0xB3BBA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public TrTransform OdsHeadSecondary
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xFE5144", Offset = "0xFE5144", VA = "0xFE5144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBB0", Offset = "0xB3BBB0")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xFE515C", Offset = "0xFE515C", VA = "0xFE515C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBC0", Offset = "0xB3BBC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public TrTransform OdsSceneSecondary
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xFE5174", Offset = "0xFE5174", VA = "0xFE5174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBD0", Offset = "0xB3BBD0")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xFE518C", Offset = "0xFE518C", VA = "0xFE518C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BBE0", Offset = "0xB3BBE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public FrameCountDisplay FrameCountDisplay
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xFE51A4", Offset = "0xFE51A4", VA = "0xFE51A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public bool RequestingAudioReactiveMode
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xFE51AC", Offset = "0xFE51AC", VA = "0xFE51AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000049")]
		public event Action<AppState, AppState> StateChanged
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xFE473C", Offset = "0xFE473C", VA = "0xFE473C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAB0", Offset = "0xB3BAB0")]
			add
			{
			}
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0xFE47DC", Offset = "0xFE47DC", VA = "0xFE47DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAC0", Offset = "0xB3BAC0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action IntroComplete
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xFE487C", Offset = "0xFE487C", VA = "0xFE487C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAD0", Offset = "0xB3BAD0")]
			add
			{
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xFE491C", Offset = "0xFE491C", VA = "0xFE491C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAE0", Offset = "0xB3BAE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action ShouldAllowMultiplayer
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xFE49BC", Offset = "0xFE49BC", VA = "0xFE49BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BAF0", Offset = "0xB3BAF0")]
			add
			{
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xFE4A5C", Offset = "0xFE4A5C", VA = "0xFE4A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB00", Offset = "0xB3BB00")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action AppExit
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xFE4B04", Offset = "0xFE4B04", VA = "0xFE4B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB10", Offset = "0xB3BB10")]
			add
			{
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xFE4BA4", Offset = "0xFE4BA4", VA = "0xFE4BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BB20", Offset = "0xB3BB20")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xFE46A4", Offset = "0xFE46A4", VA = "0xFE46A4")]
		public static OAuth2Identity GetIdentity(Cloud cloud)
		{
			return null;
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xFE51B4", Offset = "0xFE51B4", VA = "0xFE51B4")]
		public void ToggleAudioReactiveModeRequest()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xFE51C4", Offset = "0xFE51C4", VA = "0xFE51C4")]
		public void ToggleAudioReactiveBrushesRequest()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xFE545C", Offset = "0xFE545C", VA = "0xFE545C")]
		public double SketchTimeToLevelLoadTime(double sketchTime)
		{
			return default(double);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xFE5468", Offset = "0xFE5468", VA = "0xFE5468")]
		public void SetOdsCameraTransforms(TrTransform headXf, TrTransform sceneXf)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xFE5594", Offset = "0xFE5594", VA = "0xFE5594")]
		private static void SetCurrentDirectoryToApplication()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xFE5598", Offset = "0xFE5598", VA = "0xFE5598")]
		private void CreateIntroSketch()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xFE5728", Offset = "0xFE5728", VA = "0xFE5728")]
		private void DestroyIntroSketch()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xFE57AC", Offset = "0xFE57AC", VA = "0xFE57AC")]
		private static string GetStartupString()
		{
			return null;
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xFE58F4", Offset = "0xFE58F4", VA = "0xFE58F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xFE7028", Offset = "0xFE7028", VA = "0xFE7028")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xFE7100", Offset = "0xFE7100", VA = "0xFE7100")]
		private string HttpLoadSketchCallback(HttpListenerRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xFE7230", Offset = "0xFE7230", VA = "0xFE7230")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xFE890C", Offset = "0xFE890C", VA = "0xFE890C")]
		private void AutoProfileOnStartAndQuit(AppState oldState, AppState newState)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xFE8A24", Offset = "0xFE8A24", VA = "0xFE8A24")]
		private void AutoProfileAndQuit()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xFE8AA4", Offset = "0xFE8AA4", VA = "0xFE8AA4")]
		public void SetDesiredState(AppState rDesiredState)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xFE8AA8", Offset = "0xFE8AA8", VA = "0xFE8AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xFEB7F8", Offset = "0xFEB7F8", VA = "0xFEB7F8")]
		public void ExitIntroSketch()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xFEB8DC", Offset = "0xFEB8DC", VA = "0xFEB8DC")]
		public void TrySkipIntro()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xFEB41C", Offset = "0xFEB41C", VA = "0xFEB41C")]
		private void StartReset()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xFEBA28", Offset = "0xFEBA28", VA = "0xFEBA28")]
		private void FinishReset()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xFEACE8", Offset = "0xFEACE8", VA = "0xFEACE8")]
		private void FinishLoading()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xFEBBC8", Offset = "0xFEBBC8", VA = "0xFEBBC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3BBF0", Offset = "0xB3BBF0")]
		private IEnumerator<Timeslice> DelayedSketchLoadedCard(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xFE80B8", Offset = "0xFE80B8", VA = "0xFE80B8")]
		private void SwitchState()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xFEA000", Offset = "0xFEA000", VA = "0xFEA000")]
		private bool HandleExternalTiltOpenRequest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xFEBF84", Offset = "0xFEBF84", VA = "0xFEBF84")]
		private bool HandlePolyRequest(string request)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xFEC058", Offset = "0xFEC058", VA = "0xFEC058")]
		public bool ShouldTintControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xFEC0D0", Offset = "0xFEC0D0", VA = "0xFEC0D0")]
		public bool IsInStateThatAllowsPainting()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xFEC174", Offset = "0xFEC174", VA = "0xFEC174")]
		public bool IsInStateThatAllowsAnyGrabbing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xFE137C", Offset = "0xFE137C", VA = "0xFE137C")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xFEA8CC", Offset = "0xFEA8CC", VA = "0xFEA8CC")]
		private void UpdateQuickLoadLogic()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xFEA4AC", Offset = "0xFEA4AC", VA = "0xFEA4AC")]
		private void OnIntroComplete()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xFEA63C", Offset = "0xFEA63C", VA = "0xFEA63C")]
		private bool UpdateIntroFadeIsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xFE9ECC", Offset = "0xFE9ECC", VA = "0xFE9ECC")]
		private void InitCursor()
		{
		}

		[Token(Token = "0x6000D58")]
		public static T DeserializeObjectWithWarning<T>(string text, out string warning)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xFE6BAC", Offset = "0xFE6BAC", VA = "0xFE6BAC")]
		private void CreateDefaultConfig()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xFE6CA4", Offset = "0xFE6CA4", VA = "0xFE6CA4")]
		public void RefreshUserConfig()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xFEC32C", Offset = "0xFEC32C", VA = "0xFEC32C")]
		public void CreateErrorDialog([Optional] string msg)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xFE808C", Offset = "0xFE808C", VA = "0xFE808C")]
		public static bool AppAllowsCreation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xFEC460", Offset = "0xFEC460", VA = "0xFEC460")]
		public static string PlatformPath()
		{
			return null;
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xFEC4E8", Offset = "0xFEC4E8", VA = "0xFEC4E8")]
		public static string SupportPath()
		{
			return null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xFEC56C", Offset = "0xFEC56C", VA = "0xFEC56C")]
		public static string DocumentsPath()
		{
			return null;
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xFE6960", Offset = "0xFE6960", VA = "0xFE6960")]
		private void InitUserPath()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xFEC5B4", Offset = "0xFEC5B4", VA = "0xFEC5B4")]
		private void MoveUserDataFromOldLocation()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xFEC250", Offset = "0xFEC250", VA = "0xFEC250")]
		public static string UserPath()
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xFEC7A4", Offset = "0xFEC7A4", VA = "0xFEC7A4")]
		public static bool InitDirectoryAtPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xFEC82C", Offset = "0xFEC82C", VA = "0xFEC82C")]
		public static string ShortenForDescriptionText(string desc)
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xFEC90C", Offset = "0xFEC90C", VA = "0xFEC90C")]
		public static bool InitMediaLibraryPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xFECAF8", Offset = "0xFECAF8", VA = "0xFECAF8")]
		public static bool InitModelLibraryPath(string[] defaultModels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xFECED0", Offset = "0xFECED0", VA = "0xFECED0")]
		public static bool InitReferenceImagePath(string[] defaultImages)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xFED10C", Offset = "0xFED10C", VA = "0xFED10C")]
		public static bool InitVideoLibraryPath(string[] defaultVideos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xFECA74", Offset = "0xFECA74", VA = "0xFECA74")]
		public static string MediaLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xFECE4C", Offset = "0xFECE4C", VA = "0xFECE4C")]
		public static string ModelLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xFED088", Offset = "0xFED088", VA = "0xFED088")]
		public static string ReferenceImagePath()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xFED254", Offset = "0xFED254", VA = "0xFED254")]
		public static string VideoLibraryPath()
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xFE8008", Offset = "0xFE8008", VA = "0xFE8008")]
		public static string UserSketchPath()
		{
			return null;
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xFED2D8", Offset = "0xFED2D8", VA = "0xFED2D8")]
		public static string AutosavePath()
		{
			return null;
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xFEC2A8", Offset = "0xFEC2A8", VA = "0xFEC2A8")]
		public static string ConfigPath()
		{
			return null;
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xFED35C", Offset = "0xFED35C", VA = "0xFED35C")]
		public static string UserExportPath()
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xFE5058", Offset = "0xFE5058", VA = "0xFE5058")]
		public static string AutosaveRestoreFilePath()
		{
			return null;
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xFED430", Offset = "0xFED430", VA = "0xFED430")]
		public static string SnapshotPath()
		{
			return null;
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xFED4B4", Offset = "0xFED4B4", VA = "0xFED4B4")]
		public static string VideosPath()
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xFE9ED0", Offset = "0xFE9ED0", VA = "0xFE9ED0")]
		public static string VrVideosPath()
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xFED538", Offset = "0xFED538", VA = "0xFED538")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xFEBC3C", Offset = "0xFEBC3C", VA = "0xFEBC3C")]
		private void OnPlaybackComplete()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xFE6F18", Offset = "0xFE6F18", VA = "0xFE6F18")]
		public TiltBrushManifest GetMergedManifest(bool consultUserConfig)
		{
			return null;
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xFE7FAC", Offset = "0xFE7FAC", VA = "0xFE7FAC")]
		public static bool InitializeUsd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xFED56C", Offset = "0xFED56C", VA = "0xFED56C")]
		public bool IsBrushExperimental(BrushDescriptor brush)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xFED5D4", Offset = "0xFED5D4", VA = "0xFED5D4")]
		private DateTime GetLinkerTime(Assembly assembly, [Optional] TimeZoneInfo target)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xFED630", Offset = "0xFED630", VA = "0xFED630")]
		public static void OpenURL(string url)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xFE5F84", Offset = "0xFE5F84", VA = "0xFE5F84")]
		private static void CopySupportFiles()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xFED758", Offset = "0xFED758", VA = "0xFED758")]
		public App()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class AppAudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_WaveformFloats;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_WaveformFloatsRightChannel;

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xFED7DC", Offset = "0xFED7DC", VA = "0xFED7DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xFED880", Offset = "0xFED880", VA = "0xFED880")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xFED9F8", Offset = "0xFED9F8", VA = "0xFED9F8")]
		public AppAudioMonitor()
		{
		}
	}
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2942C", Offset = "0xB2942C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB2942C", Offset = "0xB2942C")]
	public class AppQualitySettingLevels : ScriptableObject
	{
		[Token(Token = "0x2000239")]
		public enum BloomMode
		{
			[Token(Token = "0x4000E5A")]
			None,
			[Token(Token = "0x4000E5B")]
			Fast,
			[Token(Token = "0x4000E5C")]
			Full,
			[Token(Token = "0x4000E5D")]
			Mobile
		}

		[Serializable]
		[Token(Token = "0x200023A")]
		public class AppQualitySettings
		{
			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private BloomMode m_Bloom;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private bool m_Hdr;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[SerializeField]
			private bool m_Fxaa;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int m_MsaaLevel;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int m_MaxLod;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private AnisotropicFiltering m_Anisotropic;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2DA6C", Offset = "0xB2DA6C")]
			private string m_BloomLevels;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2DAB8", Offset = "0xB2DAB8")]
			private float m_ViewportScale;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private float m_EyeTextureScale;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2DB14", Offset = "0xB2DB14")]
			private float m_StrokeSimplification;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private int m_TargetMaxControlPoints;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private float m_MaxSimplification;

			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			private float m_MaxSimplificationUserStrokes;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2DB90", Offset = "0xB2DB90")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DB90", Offset = "0xB2DB90")]
			private int m_GpuLevel;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DBF4", Offset = "0xB2DBF4")]
			[SerializeField]
			private int m_FixedFoveationLevel;

			[NonSerialized]
			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int[] m_BloomLevelsAsInts;

			[Token(Token = "0x170001E4")]
			public BloomMode Bloom
			{
				[Token(Token = "0x6000D98")]
				[Address(RVA = "0x111FD1C", Offset = "0x111FD1C", VA = "0x111FD1C")]
				get
				{
					return default(BloomMode);
				}
			}

			[Token(Token = "0x170001E5")]
			public bool Hdr
			{
				[Token(Token = "0x6000D99")]
				[Address(RVA = "0x111FD24", Offset = "0x111FD24", VA = "0x111FD24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001E6")]
			public bool Fxaa
			{
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0x111FD2C", Offset = "0x111FD2C", VA = "0x111FD2C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001E7")]
			public int MsaaLevel
			{
				[Token(Token = "0x6000D9B")]
				[Address(RVA = "0x111FD34", Offset = "0x111FD34", VA = "0x111FD34")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001E8")]
			public int MaxLod
			{
				[Token(Token = "0x6000D9C")]
				[Address(RVA = "0x111FD3C", Offset = "0x111FD3C", VA = "0x111FD3C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001E9")]
			public AnisotropicFiltering Anisotropic
			{
				[Token(Token = "0x6000D9D")]
				[Address(RVA = "0x111FD44", Offset = "0x111FD44", VA = "0x111FD44")]
				get
				{
					return default(AnisotropicFiltering);
				}
			}

			[Token(Token = "0x170001EA")]
			public int FixedFoveationLevel
			{
				[Token(Token = "0x6000D9E")]
				[Address(RVA = "0x111FD4C", Offset = "0x111FD4C", VA = "0x111FD4C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001EB")]
			public int GpuLevel
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0x111FD54", Offset = "0x111FD54", VA = "0x111FD54")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001EC")]
			public float ViewportScale
			{
				[Token(Token = "0x6000DA0")]
				[Address(RVA = "0x111FD5C", Offset = "0x111FD5C", VA = "0x111FD5C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001ED")]
			public float EyeTextureScale
			{
				[Token(Token = "0x6000DA1")]
				[Address(RVA = "0x111FD64", Offset = "0x111FD64", VA = "0x111FD64")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001EE")]
			public int[] BloomLevels
			{
				[Token(Token = "0x6000DA2")]
				[Address(RVA = "0x111FD6C", Offset = "0x111FD6C", VA = "0x111FD6C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EF")]
			public float StrokeSimplification
			{
				[Token(Token = "0x6000DA3")]
				[Address(RVA = "0x111FEAC", Offset = "0x111FEAC", VA = "0x111FEAC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001F0")]
			public int TargetMaxControlPoints
			{
				[Token(Token = "0x6000DA4")]
				[Address(RVA = "0x111FEB4", Offset = "0x111FEB4", VA = "0x111FEB4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170001F1")]
			public float MaxSimplification
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0x111FEBC", Offset = "0x111FEBC", VA = "0x111FEBC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001F2")]
			public float MaxSimplificationUserStrokes
			{
				[Token(Token = "0x6000DA6")]
				[Address(RVA = "0x111FEC4", Offset = "0x111FEC4", VA = "0x111FEC4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x111FECC", Offset = "0x111FECC", VA = "0x111FECC")]
			public AppQualitySettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200023B")]
		public class TiltMeterPair
		{
			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor Brush;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Weight;

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x111FF60", Offset = "0x111FF60", VA = "0x111FF60")]
			public TiltMeterPair()
			{
			}
		}

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppQualitySettings[] m_qualityLevels;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TiltMeterPair[] m_tiltMeterWeights;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_maxPolySketchTriangles;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_warningPolySketchTriangles;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Guid, float> m_tiltMeterMap;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2D960", Offset = "0xB2D960")]
		private float m_HigherQualityGpuTrigger;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_HigherQualityFpsTrigger;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_LowerQualityGpuTrigger;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_LowerQualityFpsTrigger;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_FramesForLowerQuality;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int m_FramesForHigherQuality;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_BloomFadeTime;

		[Token(Token = "0x170001D9")]
		public int FramesForLowerQuality
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xFEEE60", Offset = "0xFEEE60", VA = "0xFEEE60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DA")]
		public int FramesForHigherQuality
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xFEEE68", Offset = "0xFEEE68", VA = "0xFEEE68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DB")]
		public float BloomFadeTime
		{
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xFEEE70", Offset = "0xFEEE70", VA = "0xFEEE70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DC")]
		public float HigherQualityGpuTrigger
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xFEEE78", Offset = "0xFEEE78", VA = "0xFEEE78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		public float HigherQualityFpsTrigger
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xFEEE80", Offset = "0xFEEE80", VA = "0xFEEE80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DE")]
		public float LowerQualityGpuTrigger
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xFEEE88", Offset = "0xFEEE88", VA = "0xFEEE88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DF")]
		public float LowerQualityFpsTrigger
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xFEEE90", Offset = "0xFEEE90", VA = "0xFEEE90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E0")]
		public AppQualitySettings Item
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xFEEE98", Offset = "0xFEEE98", VA = "0xFEEE98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public int Length
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xFEEEFC", Offset = "0xFEEEFC", VA = "0xFEEEFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E2")]
		public int MaxPolySketchTriangles
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xFEEF18", Offset = "0xFEEF18", VA = "0xFEEF18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		public int WarningPolySketchTriangles
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xFEEF20", Offset = "0xFEEF20", VA = "0xFEEF20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xFEEF28", Offset = "0xFEEF28", VA = "0xFEEF28")]
		public float GetWeightForBrush(Guid brush)
		{
			return default(float);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xFEEFB8", Offset = "0xFEEFB8", VA = "0xFEEFB8")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB3BCA0", Offset = "0xB3BCA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xFEF0D4", Offset = "0xFEF0D4", VA = "0xFEF0D4")]
		public AppQualitySettingLevels()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class AudioCaptureManager : MonoBehaviour
	{
		[Token(Token = "0x200023D")]
		private enum AudioCaptureType
		{
			[Token(Token = "0x4000E78")]
			File,
			[Token(Token = "0x4000E79")]
			System,
			[Token(Token = "0x4000E7A")]
			App
		}

		[Token(Token = "0x4000E70")]
		private const float DEVICE_SEARCH_DELAY = 1f;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioCaptureManager m_Instance;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SystemAudioMonitor m_SystemAudio;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_FileAudio;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_AppAudio;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioCaptureType m_Type;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_CaptureRequestedCount;

		[Token(Token = "0x170001F3")]
		public bool CaptureRequested
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xFEFD18", Offset = "0xFEFD18", VA = "0xFEFD18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		public int SampleRate
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xFEFD28", Offset = "0xFEFD28", VA = "0xFEFD28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F5")]
		public bool IsCapturingAudio
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xFEFD68", Offset = "0xFEFD68", VA = "0xFEFD68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xFEFCBC", Offset = "0xFEFCBC", VA = "0xFEFCBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xFEFE00", Offset = "0xFEFE00", VA = "0xFEFE00")]
		public string GetCaptureStatusMessage()
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xFE5270", Offset = "0xFE5270", VA = "0xFE5270")]
		public void CaptureAudio(bool bCapture)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xFEFF68", Offset = "0xFEFF68", VA = "0xFEFF68")]
		public AudioCaptureManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023E")]
	public class GameMusic
	{
		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D iconImage;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x101F284", Offset = "0x101F284", VA = "0x101F284")]
		public GameMusic()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000240")]
		private class AudioLoop
		{
			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GvrAudioSource m_GvrAudioSource;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_LoopName;

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x112426C", Offset = "0x112426C", VA = "0x112426C")]
			public AudioLoop()
			{
			}
		}

		[Token(Token = "0x2000241")]
		public enum FirstRunMusic
		{
			[Token(Token = "0x4000EEF")]
			IntroQuiet,
			[Token(Token = "0x4000EF0")]
			IntroLoud,
			[Token(Token = "0x4000EF1")]
			IntroAmbient
		}

		[Token(Token = "0x2000242")]
		public enum PinSoundType
		{
			[Token(Token = "0x4000EF3")]
			Enter,
			[Token(Token = "0x4000EF4")]
			Wobble,
			[Token(Token = "0x4000EF5")]
			Unpin
		}

		[Token(Token = "0x2000243")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294A8", Offset = "0xB294A8")]
		private sealed class <SelectionHighlightFadeDown>d__125 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fVolume>5__2;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF1")]
				[Address(RVA = "0x112404C", Offset = "0x112404C", VA = "0x112404C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DF3")]
				[Address(RVA = "0x1124094", Offset = "0x1124094", VA = "0x1124094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x1123F38", Offset = "0x1123F38", VA = "0x1123F38")]
			[DebuggerHidden]
			public <SelectionHighlightFadeDown>d__125(int <>1__state)
			{
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x1123F64", Offset = "0x1123F64", VA = "0x1123F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x1123F68", Offset = "0x1123F68", VA = "0x1123F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x1124054", Offset = "0x1124054", VA = "0x1124054", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294B8", Offset = "0xB294B8")]
		private sealed class <UploadLoopFadeDown>d__127 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fRemainingDuration>5__2;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF7")]
				[Address(RVA = "0x112421C", Offset = "0x112421C", VA = "0x112421C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DF9")]
				[Address(RVA = "0x1124264", Offset = "0x1124264", VA = "0x1124264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x112409C", Offset = "0x112409C", VA = "0x112409C")]
			[DebuggerHidden]
			public <UploadLoopFadeDown>d__127(int <>1__state)
			{
			}

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x11240C8", Offset = "0x11240C8", VA = "0x11240C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x11240CC", Offset = "0x11240CC", VA = "0x11240CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x1124224", Offset = "0x1124224", VA = "0x1124224", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000245")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294C8", Offset = "0xB294C8")]
		private sealed class <MirrorSoundCoroutine>d__159 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioManager <>4__this;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 vPos;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <vHeadtoMirror>5__2;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DFD")]
				[Address(RVA = "0x1123EE8", Offset = "0x1123EE8", VA = "0x1123EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DFF")]
				[Address(RVA = "0x1123F30", Offset = "0x1123F30", VA = "0x1123F30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x1123C5C", Offset = "0x1123C5C", VA = "0x1123C5C")]
			[DebuggerHidden]
			public <MirrorSoundCoroutine>d__159(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x1123C88", Offset = "0x1123C88", VA = "0x1123C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x1123C8C", Offset = "0x1123C8C", VA = "0x1123C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x1123EF0", Offset = "0x1123EF0", VA = "0x1123EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioManager m_Instance;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_AudioSfxEnabled;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_AudioOneShotPrefab;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_NumAudioOneShots;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GvrAudioSource[] m_AudioOneShots;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_NextAvailableAudioOneShot;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_AudioLoopPrefab;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioLoop[] m_AudioLoops;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int m_NumAudioLoops;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_RecentlyUsedAudioLoop;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip[] m_FirstRunMusic;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameMusic[] m_GameMusic;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_MusicPrefab;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip m_IntroReveal;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource m_Music;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_ActiveGameMusicIndex;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_IntroTransitionSound;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DCF4", Offset = "0xB2DCF4")]
		private float m_IntroTransitionGain;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioClip m_ActivatePanelSound;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip m_DeactivatePanelSound;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip m_PopUpSound;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DD64", Offset = "0xB2DD64")]
		[SerializeField]
		private float m_PopUpGain;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float m_PanelActivationVolume;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DDB4", Offset = "0xB2DDB4")]
		[SerializeField]
		private float m_PanelActivationGain;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_PanelActivateMinTriggerTime;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_PanelActivateTimestamp;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioClip[] m_ItemHoverSounds;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_ItemHoverVolume;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int m_ItemHoverSoundIndex;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioClip[] m_ItemSelectSounds;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DE24", Offset = "0xB2DE24")]
		[SerializeField]
		private float m_ItemSelectGain;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioClip m_ItemDisabledSound;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AudioClip[] m_UndoSounds;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioClip[] m_RedoSounds;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AudioClip m_InitWorldGrabSound;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DEA4", Offset = "0xB2DEA4")]
		private float m_InitWorldGrabGain;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_InitWorldGrabMinTriggerTime;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_InitWorldGrabTimestamp;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioClip m_WorldGrabLoop;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_WorldGrabLoopMaxVolume;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_WorldGrabLoopAttenuation;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_WorldGrabLoopSmoothSpeed;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AudioClip m_WidgetShowSound;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DF14", Offset = "0xB2DF14")]
		[SerializeField]
		private float m_WidgetShowGain;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private AudioClip m_WidgetHideSound;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DF64", Offset = "0xB2DF64")]
		[SerializeField]
		private float m_WidgetHideGain;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private float m_WidgetShowHideMinTriggerTime;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float m_WidgetShowHideTimestamp;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private AudioClip m_PanelFlipSound;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float m_PanelFlipVolume;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2DFD4", Offset = "0xB2DFD4")]
		[SerializeField]
		private float m_PanelFlipGain;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private AudioClip m_MagicControllerSound;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E024", Offset = "0xB2E024")]
		[SerializeField]
		private float m_MagicControllerGain;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioClip m_TeleportSound;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E074", Offset = "0xB2E074")]
		[SerializeField]
		private float m_TeleportVolume;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AudioClip m_DuplicateSound;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E0C4", Offset = "0xB2E0C4")]
		[SerializeField]
		private float m_DuplicateGain;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private AudioClip m_MirrorSound;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AudioClip m_MirrorReflectionSound;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AudioClip m_ScreenshotSound;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E134", Offset = "0xB2E134")]
		[SerializeField]
		private float m_ScreenshotVolume;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AudioClip m_TrashSound;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AudioClip m_TrashSoftSound;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AudioClip m_CountdownSound;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AudioClip m_HintAnimateSound;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private AudioClip m_SliderSound;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E1C4", Offset = "0xB2E1C4")]
		[SerializeField]
		private float m_SliderVolume;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AudioClip m_SketchLoadedSound;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E214", Offset = "0xB2E214")]
		[SerializeField]
		private float m_SketchLoadedGain;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AudioClip m_SketchUploadCompleteSound;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E264", Offset = "0xB2E264")]
		[SerializeField]
		private float m_SketchUploadCompleteGain;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private AudioClip m_SketchUploadCanceledSound;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private AudioClip m_ControllerSwapSound;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private AudioClip m_SaveSketchSound;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E2D4", Offset = "0xB2E2D4")]
		[SerializeField]
		private float m_SaveSketchGain;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private AudioClip m_PinCushionOpenSound;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E324", Offset = "0xB2E324")]
		[SerializeField]
		private float m_PinCushionOpenVolume;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private AudioClip m_PinCushionCloseSound;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E374", Offset = "0xB2E374")]
		[SerializeField]
		private float m_PinCushionCloseVolume;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private AudioClip m_PinCushionHoverSound;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E3C4", Offset = "0xB2E3C4")]
		[SerializeField]
		private float m_PinCushionHoverVolume;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private AudioClip m_DropperIntersectionSound;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private AudioClip m_DropperPickSound;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E424", Offset = "0xB2E424")]
		[SerializeField]
		private float m_DropperPickGain;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private AudioClip m_BasicToAdvancedModeSound;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E474", Offset = "0xB2E474")]
		[SerializeField]
		private float m_BasicToAdvancedModeGain;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		private AudioClip m_AdvancedToBasicModeSound;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E4C4", Offset = "0xB2E4C4")]
		[SerializeField]
		private float m_AdvancedToBasicModeGain;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private AudioClip m_TransformResetSound;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E514", Offset = "0xB2E514")]
		[SerializeField]
		private float m_TransformResetVolume;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private float m_HintAnimateMinTriggerTime;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float m_HintAnimateTimestamp;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private AudioClip m_PanelPaneAttachSound;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		private AudioClip m_PanelPaneMoveSound;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float m_PanelPanelMoveTimestamp;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[SerializeField]
		private float m_PanelPaneMoveMinTriggerTime;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		private AudioClip m_UploadLoop;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E5A4", Offset = "0xB2E5A4")]
		[SerializeField]
		private float m_UploadLoopGain;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		private AudioClip m_UploadLoopQuiet;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E5F4", Offset = "0xB2E5F4")]
		[SerializeField]
		private float m_UploadLoopQuietGain;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private float m_UploadLoopFadeDownDuration;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private AudioClip m_SelectionHighlightLoop;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2E654", Offset = "0xB2E654")]
		[SerializeField]
		private float m_SelectionHighlightVolume;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private float m_SelectionHighlightFadeDownSpeed;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private AudioClip m_PinEnterSound;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private AudioClip[] m_PinWobbleSounds;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private AudioClip m_UnpinSound;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2E6D4", Offset = "0xB2E6D4")]
		[SerializeField]
		private AudioClip m_ToggleToSelect;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private AudioClip m_ToggleToDeselect;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float m_SelectionToggleVolume;

		[Token(Token = "0x170001F6")]
		public static bool Enabled
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xFF01A4", Offset = "0xFF01A4", VA = "0xFF01A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xFE9F54", Offset = "0xFE9F54", VA = "0xFE9F54")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xFF021C", Offset = "0xFF021C", VA = "0xFF021C")]
		public int NumGameMusics()
		{
			return default(int);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xFF0238", Offset = "0xFF0238", VA = "0xFF0238")]
		public GameMusic GetGameMusic(int index)
		{
			return null;
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xFF0274", Offset = "0xFF0274", VA = "0xFF0274")]
		public int GetActiveGameMusic()
		{
			return default(int);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xFF027C", Offset = "0xFF027C", VA = "0xFF027C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xFF060C", Offset = "0xFF060C", VA = "0xFF060C")]
		public bool StartLoop(AudioClip rClip, string sLoopName, Transform targetTransform, float fVolume = 1f, float fGain = 0f, float fSpatialBlend = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xFF09A4", Offset = "0xFF09A4", VA = "0xFF09A4")]
		public void ChangeLoopVolume(string sLoopName, float fVolume)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xFF0A7C", Offset = "0xFF0A7C", VA = "0xFF0A7C")]
		public void StopLoop(string sLoopName)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xFF00B0", Offset = "0xFF00B0", VA = "0xFF00B0")]
		public void StopAllLoops()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xFF0B9C", Offset = "0xFF0B9C", VA = "0xFF0B9C")]
		public void SelectionHighlightLoop(bool bActive)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xFF0C98", Offset = "0xFF0C98", VA = "0xFF0C98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3BCD4", Offset = "0xB3BCD4")]
		private IEnumerator SelectionHighlightFadeDown()
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xFF0D04", Offset = "0xFF0D04", VA = "0xFF0D04")]
		public void UploadLoop(bool bActive)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xFF0E68", Offset = "0xFF0E68", VA = "0xFF0E68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3BD34", Offset = "0xB3BD34")]
		private IEnumerator UploadLoopFadeDown()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xFF0ED4", Offset = "0xFF0ED4", VA = "0xFF0ED4")]
		public void ItemHover(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xFF1148", Offset = "0xFF1148", VA = "0xFF1148")]
		public void PanelFlip(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xFF115C", Offset = "0xFF115C", VA = "0xFF115C")]
		public void ItemSelect(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xFF11F8", Offset = "0xFF11F8", VA = "0xFF11F8")]
		public void DisabledItemSelect(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xFF120C", Offset = "0xFF120C", VA = "0xFF120C")]
		public void ActivatePanel(bool bActivate, Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xFF1298", Offset = "0xFF1298", VA = "0xFF1298")]
		public void WorldGrabbed(Vector3 vPos, float fVolume = 1f)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xFF1320", Offset = "0xFF1320", VA = "0xFF1320")]
		public void WorldGrabLoop(bool bActive)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xFF1404", Offset = "0xFF1404", VA = "0xFF1404")]
		public void PlayIntroTransitionSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xFF1418", Offset = "0xFF1418", VA = "0xFF1418")]
		public void PlayPopUpSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xFF142C", Offset = "0xFF142C", VA = "0xFF142C")]
		public void ShowHideWidget(bool bShow, Vector3 vPos, float fVolume = 1f)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xFF14C8", Offset = "0xFF14C8", VA = "0xFF14C8")]
		public void PlayDuplicateSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xFF14DC", Offset = "0xFF14DC", VA = "0xFF14DC")]
		public void PlayTeleportSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xFF14F0", Offset = "0xFF14F0", VA = "0xFF14F0")]
		public void PlayScreenshotSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xFF1504", Offset = "0xFF1504", VA = "0xFF1504")]
		public void PlayTrashSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xFF1518", Offset = "0xFF1518", VA = "0xFF1518")]
		public void PlayTrashSoftSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xFF152C", Offset = "0xFF152C", VA = "0xFF152C")]
		public void PlayHintAnimateSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xFF15B0", Offset = "0xFF15B0", VA = "0xFF15B0")]
		public void PlayDropperIntersectionSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xFF15C4", Offset = "0xFF15C4", VA = "0xFF15C4")]
		public void PlayDropperPickSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xFF15D8", Offset = "0xFF15D8", VA = "0xFF15D8")]
		public void PlaySliderSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xFF15EC", Offset = "0xFF15EC", VA = "0xFF15EC")]
		public void PlayGroupedSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xFF1600", Offset = "0xFF1600", VA = "0xFF1600")]
		public void PlayUndoSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xFF169C", Offset = "0xFF169C", VA = "0xFF169C")]
		public void PlayRedoSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xFEBDB8", Offset = "0xFEBDB8", VA = "0xFEBDB8")]
		public void PlaySketchLoadedSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xFF1738", Offset = "0xFF1738", VA = "0xFF1738")]
		public void PlayUploadCompleteSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xFF174C", Offset = "0xFF174C", VA = "0xFF174C")]
		public void PlayUploadCanceledSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xFF1760", Offset = "0xFF1760", VA = "0xFF1760")]
		public void PlayControllerSwapSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xFF1774", Offset = "0xFF1774", VA = "0xFF1774")]
		public void PlayPanelPaneAttachSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xFF1788", Offset = "0xFF1788", VA = "0xFF1788")]
		public void PlayPanelPaneMoveSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xFF180C", Offset = "0xFF180C", VA = "0xFF180C")]
		public void PlayIntroReveal()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xFEA838", Offset = "0xFEA838", VA = "0xFEA838")]
		public void PlayMagicControllerSound()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xFF18B0", Offset = "0xFF18B0", VA = "0xFF18B0")]
		public void PlayMirrorSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xFF18DC", Offset = "0xFF18DC", VA = "0xFF18DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3BD94", Offset = "0xB3BD94")]
		private IEnumerator MirrorSoundCoroutine(Vector3 vPos)
		{
			return null;
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xFF196C", Offset = "0xFF196C", VA = "0xFF196C")]
		public void PlayPinSound(Vector3 vPos, PinSoundType type)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xFF1A40", Offset = "0xFF1A40", VA = "0xFF1A40")]
		public void PlaySaveSound(Vector3 vPos)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xFF1A54", Offset = "0xFF1A54", VA = "0xFF1A54")]
		public void PlayToggleSelect(Vector3 vPos, bool willSelect)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xFF1A88", Offset = "0xFF1A88", VA = "0xFF1A88")]
		public void PlayPinCushionSound(bool bShow)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xFF1B5C", Offset = "0xFF1B5C", VA = "0xFF1B5C")]
		public void PlayPinCushionHoverSound()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xFF1BE8", Offset = "0xFF1BE8", VA = "0xFF1BE8")]
		public void PlayTransformResetSound()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xFF1C6C", Offset = "0xFF1C6C", VA = "0xFF1C6C")]
		public void AdvancedModeSwitch(bool toAdvanced)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xFEBDCC", Offset = "0xFEBDCC", VA = "0xFEBDCC")]
		public void PlayFirstRunMusic(FirstRunMusic style, float delay = 0f)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xFF1D40", Offset = "0xFF1D40", VA = "0xFF1D40")]
		public void PlayGameMusic(int index)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xFEBEE0", Offset = "0xFEBEE0", VA = "0xFEBEE0")]
		public void SetMusicVolume(float volume)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xFF1E54", Offset = "0xFF1E54", VA = "0xFF1E54")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xFF0F58", Offset = "0xFF0F58", VA = "0xFF0F58")]
		public void TriggerOneShot(AudioClip rClip, Vector3 vPos, float fVolume, float fSpatialBlend = 1f, float fGain = 0f)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xFEFEFC", Offset = "0xFEFEFC", VA = "0xFEFEFC")]
		public void StopAudio()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xFF1EE4", Offset = "0xFF1EE4", VA = "0xFF1EE4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class AutoProfiler : MonoBehaviour
	{
		[Token(Token = "0x4000F03")]
		private const string LOG_FILE_BASE = "Temp/TiltBrushProfile";

		[Token(Token = "0x4000F04")]
		private const int NUM_LOG_FILES = 2;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_logRotatePeriod;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_pauseAppWhenPoor;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_poorDt;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_avgWindow;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_poorAvgDt;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool m_enableProfiling;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool m_useLogFiles;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_avgDt;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_disableReason;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_nextFileIndex;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isProfiling;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextLogRotateTime;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_disableAfterFrames;

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xFF2438", Offset = "0xFF2438", VA = "0xFF2438")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xFF243C", Offset = "0xFF243C", VA = "0xFF243C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xFF29F0", Offset = "0xFF29F0", VA = "0xFF29F0")]
		private void SchedulePauseIfEnabled(string reason)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xFF2898", Offset = "0xFF2898", VA = "0xFF2898")]
		private void EnableProfile()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xFF29A8", Offset = "0xFF29A8", VA = "0xFF29A8")]
		private void DisableProfile()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xFF2A18", Offset = "0xFF2A18", VA = "0xFF2A18")]
		public AutoProfiler()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class BaseChatScript : MonoBehaviour
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected TextMeshPro m_ChatText;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected ScrollRect m_Scroll;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected int m_NumLines;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int m_CharacterLineLimit;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_Lines;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly string m_Blue;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly string m_DarkGrey;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly string m_OffWhite;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool m_UseOffWhite;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x143BFB0", Offset = "0x143BFB0", VA = "0x143BFB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x143C034", Offset = "0x143C034", VA = "0x143C034")]
		protected void ClearChatLines()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x143C088", Offset = "0x143C088", VA = "0x143C088")]
		protected void AddLine(string s, string sRichFront = "", string sRichBack = "")
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x143C1D4", Offset = "0x143C1D4", VA = "0x143C1D4")]
		protected void RefreshChatText()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x143C34C", Offset = "0x143C34C", VA = "0x143C34C")]
		public BaseChatScript()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class Batch : MonoBehaviour
	{
		[Token(Token = "0x4000F1B")]
		private const int MAX_VERTS_SOFT = 15999;

		[Token(Token = "0x4000F1C")]
		private const int MAX_VERTS_HARD = 65534;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BatchPool m_ParentPool;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter m_MeshFilter;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_bVertexDataDirty;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_bTopologyDirty;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GeometryPool m_Geometry;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_InstantiatedMaterial;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_LastMeshUpdate;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<BatchSubset> m_Groups;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E7A0", Offset = "0xB2E7A0")]
		private ushort <BatchId>k__BackingField;

		[Token(Token = "0x170001FD")]
		public int LastMeshUpdate
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x1448920", Offset = "0x1448920", VA = "0x1448920")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FE")]
		public BatchPool ParentPool
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x1448928", Offset = "0x1448928", VA = "0x1448928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public GeometryPool Geometry
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x1448930", Offset = "0x1448930", VA = "0x1448930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public Material InstantiatedMaterial
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x1448938", Offset = "0x1448938", VA = "0x1448938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		public ushort BatchId
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x1448940", Offset = "0x1448940", VA = "0x1448940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BEE4", Offset = "0xB3BEE4")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x1448948", Offset = "0x1448948", VA = "0x1448948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3BEF4", Offset = "0xB3BEF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1448950", Offset = "0x1448950", VA = "0x1448950")]
		public static Batch Create(BatchPool parentPool, Transform rParent, Bounds rBounds)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1448EE4", Offset = "0x1448EE4", VA = "0x1448EE4")]
		public void ReplaceMaterial(Material newMaterial)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x1448F68", Offset = "0x1448F68", VA = "0x1448F68")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1448C78", Offset = "0x1448C78", VA = "0x1448C78")]
		private void Init(BatchPool parentPool, Bounds bounds, ushort batchId)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x1449124", Offset = "0x1449124", VA = "0x1449124")]
		public void ClearCachedGeometry()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1449188", Offset = "0x1449188", VA = "0x1449188")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x1447274", Offset = "0x1447274", VA = "0x1447274")]
		public void GetTriangles(out Vector3[] aVerts, out int nVerts, out int[] aTris, out int nTris)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x1449320", Offset = "0x1449320", VA = "0x1449320")]
		public bool HasSpaceFor(int nVert)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x1449360", Offset = "0x1449360", VA = "0x1449360")]
		private static Bounds GetBoundsFor(List<Vector3> aVert, int iVert, int nVert, [Optional] TrTransform? leftTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x1449438", Offset = "0x1449438", VA = "0x1449438")]
		private static Bounds GetBoundsFor(Vector3[] aVert, int iVert, int nVert, [Optional] TrTransform? leftTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x14495D0", Offset = "0x14495D0", VA = "0x14495D0")]
		private void AppendVertexData(int nVert, Vector3[] vertices, Vector3[] normals, Vector2[] uvs, List<Vector3> uvws, Color32[] colors, Vector4[] tangents)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x14497FC", Offset = "0x14497FC", VA = "0x14497FC")]
		private void AppendTriangleData(int iVertOffset, int nTriIndices, int[] tris)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x14499C0", Offset = "0x14499C0", VA = "0x14499C0")]
		public void DelayedUpdateMesh()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x1449A10", Offset = "0x1449A10", VA = "0x1449A10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x1449A14", Offset = "0x1449A14", VA = "0x1449A14")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x1448F6C", Offset = "0x1448F6C", VA = "0x1448F6C")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x1449A18", Offset = "0x1449A18", VA = "0x1449A18")]
		public void CopyToMesh(BatchSubset subset, GameObject obj)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x1449B20", Offset = "0x1449B20", VA = "0x1449B20")]
		public BatchSubset AddSubset(int nVert, int nTris, MasterBrush rMasterBrush)
		{
			return null;
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x1449DA0", Offset = "0x1449DA0", VA = "0x1449DA0")]
		public BatchSubset AddSubset(GeometryPool geom)
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x1449E20", Offset = "0x1449E20", VA = "0x1449E20")]
		public BatchSubset AddSubset(GeometryPool geom, int iVert, int nVert, int iTriIndex, int nTriIndex, [Optional] TrTransform? leftTransform)
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x144A07C", Offset = "0x144A07C", VA = "0x144A07C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB3BF04", Offset = "0xB3BF04")]
		private void SelfCheck()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x144A30C", Offset = "0x144A30C", VA = "0x144A30C")]
		public void RemoveSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x144A464", Offset = "0x144A464", VA = "0x144A464")]
		public void DisableSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x144A5D8", Offset = "0x144A5D8", VA = "0x144A5D8")]
		public void EnableSubset(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x144A714", Offset = "0x144A714", VA = "0x144A714")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x144A780", Offset = "0x144A780", VA = "0x144A780")]
		public Batch()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class BatchManager
	{
		[Token(Token = "0x200024A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294D8", Offset = "0xB294D8")]
		private sealed class <AllBatches>d__32 : IEnumerable<Batch>, IEnumerable, IEnumerator<Batch>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Batch <>2__current;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BatchManager <>4__this;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <iPool>5__2;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private BatchPool <pool>5__3;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <iBatch>5__4;

			[Token(Token = "0x17000205")]
			private Batch System.Collections.Generic.IEnumerator<TiltBrush.Batch>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0x11247DC", Offset = "0x11247DC", VA = "0x11247DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0x1124824", Offset = "0x1124824", VA = "0x1124824", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x1124648", Offset = "0x1124648", VA = "0x1124648")]
			[DebuggerHidden]
			public <AllBatches>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1124680", Offset = "0x1124680", VA = "0x1124680", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x1124684", Offset = "0x1124684", VA = "0x1124684", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x11247E4", Offset = "0x11247E4", VA = "0x11247E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x112482C", Offset = "0x112482C", VA = "0x112482C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Batch> System.Collections.Generic.IEnumerable<TiltBrush.Batch>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x11248D4", Offset = "0x11248D4", VA = "0x11248D4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200024B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294E8", Offset = "0xB294E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BatchPool, int> <>9__34_0;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Batch, int> <>9__35_0;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Batch, int> <>9__36_0;

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x112458C", Offset = "0x112458C", VA = "0x112458C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x1124594", Offset = "0x1124594", VA = "0x1124594")]
			internal int <CountBatches>b__34_0(BatchPool pool)
			{
				return default(int);
			}

			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x11245E4", Offset = "0x11245E4", VA = "0x11245E4")]
			internal int <CountAllBatchTriangles>b__35_0(Batch batch)
			{
				return default(int);
			}

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x1124624", Offset = "0x1124624", VA = "0x1124624")]
			internal int <CountAllBatchVertices>b__36_0(Batch batch)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F26")]
		public const int kBatchesToLeaveMutable = 1;

		[Token(Token = "0x4000F27")]
		public const int kTimeUntilBatchImmutable = 60;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<BatchPool> m_Pools;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Guid, BatchPool> m_BrushToPool;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bounds m_MeshBounds;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasScript m_owner;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_ParentTransform;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> m_MaterialKeywords;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_CurrentTimestamp;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ushort, Batch> sm_BatchMap;

		[Token(Token = "0x17000202")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x12776A0", Offset = "0x12776A0", VA = "0x12776A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public List<string> MaterialKeywords
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x12776A8", Offset = "0x12776A8", VA = "0x12776A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public int CurrentTimestamp
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x12776B0", Offset = "0x12776B0", VA = "0x12776B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x12776B8", Offset = "0x12776B8", VA = "0x12776B8")]
		public void Init(CanvasScript owner)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x12777B4", Offset = "0x12777B4", VA = "0x12777B4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1277CC0", Offset = "0x1277CC0", VA = "0x1277CC0")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1277EEC", Offset = "0x1277EEC", VA = "0x1277EEC")]
		private BatchPool GetPool(BrushDescriptor brush)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x1277F30", Offset = "0x1277F30", VA = "0x1277F30")]
		private BatchPool GetPool(Guid brushGuid)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x12782D0", Offset = "0x12782D0", VA = "0x12782D0")]
		public Batch GetBatch(ushort batchId)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x12783B4", Offset = "0x12783B4", VA = "0x12783B4")]
		private Batch GetBatch(BatchPool pool, int nVerts)
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x12785C8", Offset = "0x12785C8", VA = "0x12785C8")]
		public BatchSubset CreateSubset(BrushDescriptor brush, int nVerts, int nTris, MasterBrush geometry)
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x1278624", Offset = "0x1278624", VA = "0x1278624")]
		public BatchSubset CreateSubset(BrushDescriptor brush, GeometryPool geometry)
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x1278684", Offset = "0x1278684", VA = "0x1278684")]
		public BatchSubset CreateSubset(BatchSubset otherSubset, [Optional] TrTransform? leftTransform)
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x1278724", Offset = "0x1278724", VA = "0x1278724")]
		public void SetVisibility(bool visibility)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x1278A1C", Offset = "0x1278A1C", VA = "0x1278A1C")]
		public void ResetPools()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1278C98", Offset = "0x1278C98", VA = "0x1278C98")]
		public BatchPool GetBatchPool(int iPool)
		{
			return null;
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x1278D5C", Offset = "0x1278D5C", VA = "0x1278D5C")]
		public int GetNumBatchPools()
		{
			return default(int);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x1278DA8", Offset = "0x1278DA8", VA = "0x1278DA8")]
		public Bounds GetBoundsOfAllStrokes(bool onlyActive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x12790B4", Offset = "0x12790B4", VA = "0x12790B4")]
		public void CloneAsUndoObject(BatchSubset subset, GameObject clone)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1279218", Offset = "0x1279218", VA = "0x1279218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3BF3C", Offset = "0xB3BF3C")]
		public IEnumerable<Batch> AllBatches()
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1279284", Offset = "0x1279284", VA = "0x1279284")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x127953C", Offset = "0x127953C", VA = "0x127953C")]
		public int CountBatches()
		{
			return default(int);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x1279660", Offset = "0x1279660", VA = "0x1279660")]
		public int CountAllBatchTriangles()
		{
			return default(int);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x1279794", Offset = "0x1279794", VA = "0x1279794")]
		public int CountAllBatchVertices()
		{
			return default(int);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x12798C8", Offset = "0x12798C8", VA = "0x12798C8")]
		public BatchManager()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class BatchPool
	{
		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BatchManager m_owner;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Guid m_BrushGuid;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Batch> m_Batches;

		[Token(Token = "0x17000207")]
		public BatchManager Owner
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x12799C8", Offset = "0x12799C8", VA = "0x12799C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public string Name
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x12799D0", Offset = "0x12799D0", VA = "0x12799D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x12782A4", Offset = "0x12782A4", VA = "0x12782A4")]
		public BatchPool(BatchManager owner)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x127794C", Offset = "0x127794C", VA = "0x127794C")]
		public void TrimBatches()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1277DD4", Offset = "0x1277DD4", VA = "0x1277DD4")]
		public void FlushMeshUpdates()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x1277A40", Offset = "0x1277A40", VA = "0x1277A40")]
		public void ClearCachedGeometryFromBatches()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1278B78", Offset = "0x1278B78", VA = "0x1278B78")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class BatchSubset
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stroke m_Stroke;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Batch m_ParentBatch;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds m_Bounds;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_StartVertIndex;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_VertLength;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_iTriIndex;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_nTriIndex;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_Active;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ushort[] m_TriangleBackup;

		[Token(Token = "0x17000209")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x1279B7C", Offset = "0x1279B7C", VA = "0x1279B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1279BAC", Offset = "0x1279BAC", VA = "0x1279BAC")]
		public void ShiftIndices(int numVerts, int numTriIndices)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1279BC8", Offset = "0x1279BC8", VA = "0x1279BC8")]
		public BatchSubset()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class BillboardPanel : MonoBehaviour
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_BillboardTransform;

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x1279BD0", Offset = "0x1279BD0", VA = "0x1279BD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x1279C34", Offset = "0x1279C34", VA = "0x1279C34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1279D98", Offset = "0x1279D98", VA = "0x1279D98")]
		public BillboardPanel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200024F")]
	public struct BlocksMaterial
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BrushDescriptor brushDescriptor;
	}
	[Token(Token = "0x2000250")]
	public class BrushCatalog : MonoBehaviour
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BrushCatalog m_Instance;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D m_GlobalNoiseTexture;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BrushDescriptor m_DefaultBrush;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IsLoading;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, BrushDescriptor> m_GuidToBrush;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<BrushDescriptor> m_AllBrushes;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<BrushDescriptor> m_GuiBrushList;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public BlocksMaterial[] m_BlocksMaterials;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Material, BrushDescriptor> m_MaterialToBrush;

		[Token(Token = "0x1700020A")]
		public bool IsLoading
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x127AA88", Offset = "0x127AA88", VA = "0x127AA88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public BrushDescriptor DefaultBrush
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x127AA90", Offset = "0x127AA90", VA = "0x127AA90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public IEnumerable<BrushDescriptor> AllBrushes
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x127AA98", Offset = "0x127AA98", VA = "0x127AA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public List<BrushDescriptor> GuiBrushList
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x127AAA0", Offset = "0x127AAA0", VA = "0x127AAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action BrushCatalogChanged
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x127A948", Offset = "0x127A948", VA = "0x127A948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C00C", Offset = "0xB3C00C")]
			add
			{
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0x127A9E8", Offset = "0x127A9E8", VA = "0x127A9E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C01C", Offset = "0xB3C01C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x1279A94", Offset = "0x1279A94", VA = "0x1279A94")]
		public BrushDescriptor GetBrush(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x127AAA8", Offset = "0x127AAA8", VA = "0x127AAA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x127AC90", Offset = "0x127AC90", VA = "0x127AC90")]
		public void BeginReload()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x127BB3C", Offset = "0x127BB3C", VA = "0x127BB3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x127B6BC", Offset = "0x127B6BC", VA = "0x127B6BC")]
		private static List<BrushDescriptor> LoadBrushesInManifest()
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x127BB7C", Offset = "0x127BB7C", VA = "0x127BB7C")]
		public BrushCatalog()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class BrushColorController : ColorController
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_BrushLuminanceMin;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_BrushSaturationMax;

		[Token(Token = "0x1700020E")]
		public override Color CurrentColor
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x127BB84", Offset = "0x127BB84", VA = "0x127BB84", Slot = "4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x127BB90", Offset = "0x127BB90", VA = "0x127BB90", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public float BrushLuminanceMin
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x127BC90", Offset = "0x127BC90", VA = "0x127BC90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000210")]
		public float BrushSaturationMax
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x127BC98", Offset = "0x127BC98", VA = "0x127BC98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x127BCA0", Offset = "0x127BCA0", VA = "0x127BCA0", Slot = "6")]
		public override void SetCurrentColorSilently(Color color)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x127BD38", Offset = "0x127BD38", VA = "0x127BD38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x127BDFC", Offset = "0x127BDFC", VA = "0x127BDFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x127BEC0", Offset = "0x127BEC0", VA = "0x127BEC0")]
		private void OnMainPointerBrushChange(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x127BF40", Offset = "0x127BF40", VA = "0x127BF40")]
		public BrushColorController()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class BrushController : MonoBehaviour
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BrushController m_Instance;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BrushDescriptor m_ActiveBrush;

		[Token(Token = "0x17000211")]
		public BrushDescriptor ActiveBrush
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x127C308", Offset = "0x127C308", VA = "0x127C308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action<Stroke> StrokeSelected
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x127BF48", Offset = "0x127BF48", VA = "0x127BF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C02C", Offset = "0xB3C02C")]
			add
			{
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x127BFE8", Offset = "0x127BFE8", VA = "0x127BFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C03C", Offset = "0xB3C03C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action<BrushDescriptor> BrushChanged
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x127C088", Offset = "0x127C088", VA = "0x127C088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C04C", Offset = "0xB3C04C")]
			add
			{
			}
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x127C128", Offset = "0x127C128", VA = "0x127C128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C05C", Offset = "0xB3C05C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action BrushSetToDefault
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x127C1C8", Offset = "0x127C1C8", VA = "0x127C1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C06C", Offset = "0xB3C06C")]
			add
			{
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x127C268", Offset = "0x127C268", VA = "0x127C268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C07C", Offset = "0xB3C07C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x127C310", Offset = "0x127C310", VA = "0x127C310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x127C360", Offset = "0x127C360", VA = "0x127C360")]
		public void SetActiveBrush(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x127C59C", Offset = "0x127C59C", VA = "0x127C59C")]
		public void SetBrushToDefault()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x127C614", Offset = "0x127C614", VA = "0x127C614")]
		public void TriggerStrokeSelected(Stroke stroke)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x127C6BC", Offset = "0x127C6BC", VA = "0x127C6BC")]
		public BrushController()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public abstract class BaseBrushScript : MonoBehaviour
	{
		[Token(Token = "0x4000F5A")]
		public const float kPreviewDuration = 0.2f;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool m_bCanBatch;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BrushDescriptor m_Desc;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_EnableBackfaces;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool m_PreviewMode;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2E810", Offset = "0xB2E810")]
		protected bool m_IsLoading;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Color32 m_Color;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TrTransform m_LastSpawnXf;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float m_BaseSize_PS;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected StatelessRng m_rng;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2E820", Offset = "0xB2E820")]
		private Stroke <Stroke>k__BackingField;

		[Token(Token = "0x17000212")]
		protected Vector3 m_LastSpawnPos
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x1439314", Offset = "0x1439314", VA = "0x1439314")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000213")]
		public float StrokeScale
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x1439350", Offset = "0x1439350", VA = "0x1439350")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000214")]
		public float LOCAL_TO_POINTER
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x1439358", Offset = "0x1439358", VA = "0x1439358")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000215")]
		public float POINTER_TO_LOCAL
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x1439368", Offset = "0x1439368", VA = "0x1439368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000216")]
		public float BaseSize_PS
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x1439370", Offset = "0x1439370", VA = "0x1439370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x1439378", Offset = "0x1439378", VA = "0x1439378")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public float BaseSize_LS
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x1439380", Offset = "0x1439380", VA = "0x1439380")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000218")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x143938C", Offset = "0x143938C", VA = "0x143938C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public BrushDescriptor Descriptor
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x14393F4", Offset = "0x14393F4", VA = "0x14393F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public Color CurrentColor
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x14393FC", Offset = "0x14393FC", VA = "0x14393FC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700021B")]
		public int RandomSeed
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x1439408", Offset = "0x1439408", VA = "0x1439408")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x1439410", Offset = "0x1439410", VA = "0x1439410")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public Stroke Stroke
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x1439418", Offset = "0x1439418", VA = "0x1439418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C08C", Offset = "0xB3C08C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x1439420", Offset = "0x1439420", VA = "0x1439420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C09C", Offset = "0xB3C09C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1439030", Offset = "0x1439030", VA = "0x1439030")]
		public static BaseBrushScript Create(Transform parent, TrTransform xfInParentSpace, BrushDescriptor desc, Color color, float size_PS)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x143924C", Offset = "0x143924C", VA = "0x143924C")]
		public static float GetStrokeCost(BrushDescriptor desc, int verts, float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1439320", Offset = "0x1439320", VA = "0x1439320")]
		protected BaseBrushScript(bool bCanBatch)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1439428", Offset = "0x1439428", VA = "0x1439428")]
		public void SetIsLoading()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x1439434", Offset = "0x1439434", VA = "0x1439434")]
		public void SetPreviewMode()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x1439440", Offset = "0x1439440", VA = "0x1439440")]
		public GameObject CloneAsUndoObject()
		{
			return null;
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x143965C", Offset = "0x143965C", VA = "0x143965C")]
		public bool UpdatePosition_LS(TrTransform xf, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x14396E0", Offset = "0x14396E0", VA = "0x14396E0")]
		public void SetPreviewProperties(Color rColor, float fSize)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1439794", Offset = "0x1439794", VA = "0x1439794")]
		public void DestroyMesh()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1439874", Offset = "0x1439874", VA = "0x1439874", Slot = "4")]
		protected virtual void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1439914", Offset = "0x1439914", VA = "0x1439914", Slot = "5")]
		public virtual void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000E99")]
		public abstract GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc);

		[Token(Token = "0x6000E9A")]
		public abstract void ApplyChangesToVisuals();

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1439920", Offset = "0x1439920", VA = "0x1439920", Slot = "8")]
		public virtual void HideBrush(bool bHide)
		{
		}

		[Token(Token = "0x6000E9C")]
		public abstract int GetNumUsedVerts();

		[Token(Token = "0x6000E9D")]
		public abstract float GetSpawnInterval(float pressure01);

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1439958", Offset = "0x1439958", VA = "0x1439958", Slot = "11")]
		public virtual bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1439960", Offset = "0x1439960", VA = "0x1439960", Slot = "12")]
		public virtual void DecayBrush()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1439964", Offset = "0x1439964", VA = "0x1439964", Slot = "13")]
		public virtual bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA1")]
		protected abstract void InitUndoClone(GameObject clone);

		[Token(Token = "0x6000EA2")]
		protected abstract bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure);

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x143996C", Offset = "0x143996C", VA = "0x143996C", Slot = "16")]
		public virtual bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1439974", Offset = "0x1439974", VA = "0x1439974", Slot = "17")]
		public virtual bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1439984", Offset = "0x1439984", VA = "0x1439984", Slot = "18")]
		public virtual bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x143998C", Offset = "0x143998C", VA = "0x143998C", Slot = "19")]
		public virtual void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x6000EA7")]
		public abstract void FinalizeSolitaryBrush();

		[Token(Token = "0x6000EA8")]
		public abstract BatchSubset FinalizeBatchedBrush();

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x14399A4", Offset = "0x14399A4", VA = "0x14399A4")]
		protected float PressuredSize(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1439A00", Offset = "0x1439A00", VA = "0x1439A00")]
		protected float PressuredRandomSize(float pressure01, int salt)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1439A60", Offset = "0x1439A60", VA = "0x1439A60")]
		protected float PressuredOpacity(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1439AAC", Offset = "0x1439AAC", VA = "0x1439AAC")]
		private static Vector3 InDirectionOf(Vector3 desired, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x1439AE4", Offset = "0x1439AE4", VA = "0x1439AE4")]
		protected static void ComputeSurfaceFrameNew(Vector3 vPreferredR, Vector3 nMove, Quaternion ori, out Vector3 nRight, out Vector3 nNormal)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x1439CD4", Offset = "0x1439CD4", VA = "0x1439CD4")]
		private static double SetExponent(double x, int exp)
		{
			return default(double);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x1439CE8", Offset = "0x1439CE8", VA = "0x1439CE8")]
		protected static float HashFloat01(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6000EB0")]
		protected static void MirrorQuadFace<T>(T[] array, int index)
		{
		}

		[Token(Token = "0x6000EB1")]
		protected static void MirrorQuadFace<T>(List<T> array, int index)
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1439D80", Offset = "0x1439D80", VA = "0x1439D80")]
		protected static void MirrorTangents(Vector4[] array, int index)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1439E38", Offset = "0x1439E38", VA = "0x1439E38")]
		protected static void CreateDuplicateQuad(Vector3[] aVertArray, Vector3[] aNormArray, int iQuadIndex, Vector3 vQuadNormal)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1439F28", Offset = "0x1439F28", VA = "0x1439F28")]
		protected static void ComputeTangentSpaceForQuads(Vector3[] aVertices, Vector2[] aUVs, Vector3[] aNormals, Vector4[] aTangents, int stride, int iVert0, int iVert1)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x143A458", Offset = "0x143A458", VA = "0x143A458")]
		protected static void ComputeST(Vector3[] aVert, Vector2[] aUV, int iBaseVert, out Vector3 vS, out Vector3 vT)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x143A59C", Offset = "0x143A59C", VA = "0x143A59C")]
		protected static void ComputeST(IList<Vector3> aVert, IList<Vector2> aUV, int iBaseVert, int iv0, int iv1, int iv2, out Vector3 vS, out Vector3 vT)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x143A33C", Offset = "0x143A33C", VA = "0x143A33C")]
		protected static void ComputeS(Vector3[] aVert, Vector2[] aUV, int iBaseVert, out Vector3 vS)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class BlocksBrushScript : BaseBrushScript
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1279DA0", Offset = "0x1279DA0", VA = "0x1279DA0")]
		protected BlocksBrushScript()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1279DAC", Offset = "0x1279DAC", VA = "0x1279DAC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1279DD0", Offset = "0x1279DD0", VA = "0x1279DD0", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1279DD8", Offset = "0x1279DD8", VA = "0x1279DD8", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x1279DE0", Offset = "0x1279DE0", VA = "0x1279DE0", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1279DE8", Offset = "0x1279DE8", VA = "0x1279DE8", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x1279DF0", Offset = "0x1279DF0", VA = "0x1279DF0", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1279DF4", Offset = "0x1279DF4", VA = "0x1279DF4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1279DF8", Offset = "0x1279DF8", VA = "0x1279DF8", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class BrushDescriptor : ScriptableObject, IExportableMaterial
	{
		[Token(Token = "0x2000256")]
		public class AsStringGuidAttribute : PropertyAttribute
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x11248D8", Offset = "0x11248D8", VA = "0x11248D8")]
			public AsStringGuidAttribute()
			{
			}
		}

		[Token(Token = "0x4000F65")]
		private const string EXPORT_TEXTURE_DIR = "Support/ExportTextures";

		[Token(Token = "0x4000F66")]
		private const string EXPORT_TEXTURE_EXTENSION = ".png";

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ExportGlTF.ExportManifest sm_gltfManifest;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DisabledProperty]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2E830", Offset = "0xB2E830")]
		public SerializableGuid m_Guid;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[DisabledProperty]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2E87C", Offset = "0xB2E87C")]
		public string m_DurableName;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[DisabledProperty]
		public string m_CreationVersion;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[DisabledProperty]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2E8D8", Offset = "0xB2E8D8")]
		public string m_ShaderVersion;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[DisabledProperty]
		public GameObject m_BrushPrefab;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2E934", Offset = "0xB2E934")]
		public bool m_Nondeterministic;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2E96C", Offset = "0xB2E96C")]
		public BrushDescriptor m_Supersedes;

		[NonSerialized]
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BrushDescriptor m_SupersededBy;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2E9A4", Offset = "0xB2E9A4")]
		public bool m_LooksIdentical;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2E9DC", Offset = "0xB2E9DC")]
		public Texture2D m_ButtonTexture;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2EA14", Offset = "0xB2EA14")]
		public string m_Description;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2EA4C", Offset = "0xB2EA4C")]
		public string m_DescriptionExtra;

		[NonSerialized]
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool m_HiddenInGui;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EA84", Offset = "0xB2EA84")]
		public AudioClip[] m_BrushAudioLayers;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_BrushAudioBasePitch;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float m_BrushAudioMaxPitchShift;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_BrushAudioMaxVolume;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_BrushVolumeUpSpeed;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_BrushVolumeDownSpeed;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_VolumeVelocityRangeMultiplier;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool m_AudioReactive;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip m_ButtonAudio;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EABC", Offset = "0xB2EABC")]
		[SerializeField]
		private Material m_Material;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int m_TextureAtlasV;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_TileRate;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_UseBloomSwatchOnColorPicker;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EB08", Offset = "0xB2EB08")]
		[AttributeAttribute(Name = "Vec2AsRangeAttribute", RVA = "0xB2EB08", Offset = "0xB2EB08")]
		[DisabledProperty]
		public Vector2 m_BrushSizeRange;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[DisabledProperty]
		[SerializeField]
		[AttributeAttribute(Name = "Vec2AsRangeAttribute", RVA = "0xB2EB70", Offset = "0xB2EB70")]
		private Vector2 m_PressureSizeRange;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_SizeVariance;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2EBCC", Offset = "0xB2EBCC")]
		public float m_PreviewPressureSizeMin;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EBE8", Offset = "0xB2EBE8")]
		public float m_Opacity;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "Vec2AsRangeAttribute", RVA = "0xB2EC20", Offset = "0xB2EC20")]
		public Vector2 m_PressureOpacityRange;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2EC58", Offset = "0xB2EC58")]
		public float m_ColorLuminanceMin;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2EC70", Offset = "0xB2EC70")]
		public float m_ColorSaturationMax;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EC88", Offset = "0xB2EC88")]
		public float m_ParticleSpeed;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_ParticleRate;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_ParticleInitialRotationRange;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool m_RandomizeAlpha;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2ECC0", Offset = "0xB2ECC0")]
		public float m_SprayRateMultiplier;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float m_RotationVariance;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_PositionVariance;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector2 m_SizeRatio;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2ECF8", Offset = "0xB2ECF8")]
		public bool m_M11Compatibility;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2ED30", Offset = "0xB2ED30")]
		public float m_SolidMinLengthMeters_PS;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool m_TubeStoreRadiusInTexcoord0Z;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2ED68", Offset = "0xB2ED68")]
		public bool m_RenderBackfaces;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool m_BackIsInvisible;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_BackfaceHueShift;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_BoundsPadding;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2EDA0", Offset = "0xB2EDA0")]
		public bool m_PlayBackAtStrokeGranularity;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EDD8", Offset = "0xB2EDD8")]
		public ExportableMaterialBlendMode m_BlendMode;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_EmissiveFactor;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool m_AllowExport;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2EE10", Offset = "0xB2EE10")]
		public bool m_SupportsSimplification;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int m_HeadMinPoints;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int m_HeadPointStep;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int m_TailMinPoints;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public int m_TailPointStep;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int m_MiddlePointStep;

		[Token(Token = "0x4000FA3")]
		private const string kDefaultShaderPrefix = "Default-none";

		[Token(Token = "0x1700021D")]
		public static ExportGlTF.ExportManifest GltfManifest
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x127C6C4", Offset = "0x127C6C4", VA = "0x127C6C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public Guid UniqueName
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x127C974", Offset = "0x127C974", VA = "0x127C974", Slot = "4")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x1700021F")]
		public string DurableName
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x127C980", Offset = "0x127C980", VA = "0x127C980", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x127C988", Offset = "0x127C988", VA = "0x127C988", Slot = "6")]
			get
			{
				return default(ExportableMaterialBlendMode);
			}
		}

		[Token(Token = "0x17000221")]
		public float EmissiveFactor
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x127C990", Offset = "0x127C990", VA = "0x127C990", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000222")]
		public GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x127C998", Offset = "0x127C998", VA = "0x127C998", Slot = "8")]
			get
			{
				return default(GeometryPool.VertexLayout);
			}
		}

		[Token(Token = "0x17000223")]
		public bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x127CC80", Offset = "0x127CC80", VA = "0x127CC80", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		public string VertShaderUri
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x127CCFC", Offset = "0x127CCFC", VA = "0x127CCFC", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public string FragShaderUri
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x127CF5C", Offset = "0x127CF5C", VA = "0x127CF5C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public bool EnableCull
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x127CF9C", Offset = "0x127CF9C", VA = "0x127CF9C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000227")]
		public string UriBase
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x127CFBC", Offset = "0x127CFBC", VA = "0x127CFBC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x127CFC4", Offset = "0x127CFC4", VA = "0x127CFC4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x127D194", Offset = "0x127D194", VA = "0x127D194", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x127D1B4", Offset = "0x127D1B4", VA = "0x127D1B4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x127D1D4", Offset = "0x127D1D4", VA = "0x127D1D4", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x127D1F4", Offset = "0x127D1F4", VA = "0x127D1F4", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		private ExportGlTF.ExportedBrush ExportedBrush
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x127CD3C", Offset = "0x127CD3C", VA = "0x127CD3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		public bool NeedsStraightEdgeProxy
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x127D214", Offset = "0x127D214", VA = "0x127D214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public Material Material
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x127D318", Offset = "0x127D318", VA = "0x127D318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		public GeometryPool.Semantic m_uv0Semantic
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x127D3C4", Offset = "0x127D3C4", VA = "0x127D3C4")]
			get
			{
				return default(GeometryPool.Semantic);
			}
		}

		[Token(Token = "0x17000231")]
		public GeometryPool.Semantic m_uv1Semantic
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x127D3E8", Offset = "0x127D3E8", VA = "0x127D3E8")]
			get
			{
				return default(GeometryPool.Semantic);
			}
		}

		[Token(Token = "0x17000232")]
		public bool m_bFbxExportNormalAsTexcoord1
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x127D40C", Offset = "0x127D40C", VA = "0x127D40C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x127CACC", Offset = "0x127CACC", VA = "0x127CACC", Slot = "9")]
		public bool HasExportTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x127CBB0", Offset = "0x127CBB0", VA = "0x127CBB0", Slot = "10")]
		public string GetExportTextureFilename()
		{
			return null;
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x127D320", Offset = "0x127D320", VA = "0x127D320", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x127D438", Offset = "0x127D438", VA = "0x127D438")]
		public float PressureSizeMin(bool previewMode)
		{
			return default(float);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x127CE1C", Offset = "0x127CE1C", VA = "0x127CE1C")]
		public static string ComputeHostedUri(string brushName, string filename)
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x127CBB4", Offset = "0x127CBB4", VA = "0x127CBB4")]
		private string GetExportTextureFilenameStandalone()
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x127D450", Offset = "0x127D450", VA = "0x127D450")]
		public BrushDescriptor()
		{
		}
	}
	[Token(Token = "0x2000257")]
	internal class BubbleWandBrush : TubeBrush
	{
		[Token(Token = "0x4000FA4")]
		private const ushort kVertsInClosedCircle = 9;

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x12813EC", Offset = "0x12813EC", VA = "0x12813EC")]
		public BubbleWandBrush()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x12813F8", Offset = "0x12813F8", VA = "0x12813F8", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1281494", Offset = "0x1281494", VA = "0x1281494", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1281508", Offset = "0x1281508", VA = "0x1281508", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x1281BC8", Offset = "0x1281BC8", VA = "0x1281BC8", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class CandyCane : ParentBrush
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected int m_numGrossParents;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected Color32[] kCaneColors;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected BrushDescriptor[] m_caneBrushes;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected float m_grossRotationsPerRadian;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		protected float m_fineRotationsPerRadian;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected float m_caneGrossRadiusPct;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_caneFineRadiusPct;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected float m_strandSizePercent;

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1313508", Offset = "0x1313508", VA = "0x1313508", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x13138E0", Offset = "0x13138E0", VA = "0x13138E0")]
		public CandyCane()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class ConcaveHullBrush : GeometryBrush
	{
		[Token(Token = "0x200025A")]
		public class Vertex : IVertex
		{
			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2EF2C", Offset = "0xB2EF2C")]
			private double[] <Position>k__BackingField;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2EF3C", Offset = "0xB2EF3C")]
			private int <TempIndex>k__BackingField;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2EF4C", Offset = "0xB2EF4C")]
			private Vector3 <TempNormal>k__BackingField;

			[Token(Token = "0x17000233")]
			public double[] Position
			{
				[Token(Token = "0x6000EF7")]
				[Address(RVA = "0x1125B80", Offset = "0x1125B80", VA = "0x1125B80", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0AC", Offset = "0xB3C0AC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000EF8")]
				[Address(RVA = "0x1125B88", Offset = "0x1125B88", VA = "0x1125B88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0BC", Offset = "0xB3C0BC")]
				set
				{
				}
			}

			[Token(Token = "0x17000234")]
			public int TempIndex
			{
				[Token(Token = "0x6000EF9")]
				[Address(RVA = "0x1125B90", Offset = "0x1125B90", VA = "0x1125B90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0CC", Offset = "0xB3C0CC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000EFA")]
				[Address(RVA = "0x1125B98", Offset = "0x1125B98", VA = "0x1125B98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0DC", Offset = "0xB3C0DC")]
				set
				{
				}
			}

			[Token(Token = "0x17000235")]
			public Vector3 TempNormal
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0x1125BA0", Offset = "0x1125BA0", VA = "0x1125BA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0EC", Offset = "0xB3C0EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000EFC")]
				[Address(RVA = "0x1125BAC", Offset = "0x1125BAC", VA = "0x1125BAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C0FC", Offset = "0xB3C0FC")]
				set
				{
				}
			}

			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1125BB8", Offset = "0x1125BB8", VA = "0x1125BB8")]
			public Vertex()
			{
			}

			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1125C18", Offset = "0x1125C18", VA = "0x1125C18")]
			public void SetData(Vector3 v)
			{
			}
		}

		[Token(Token = "0x200025B")]
		public class Face : ConvexFace<Vertex, Face>
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1125B34", Offset = "0x1125B34", VA = "0x1125B34")]
			public Face()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200025C")]
		public enum KnotConversion
		{
			[Token(Token = "0x4000FBB")]
			Rapidograph,
			[Token(Token = "0x4000FBC")]
			QuillPen,
			[Token(Token = "0x4000FBD")]
			Tetrahedron,
			[Token(Token = "0x4000FBE")]
			Octahedron,
			[Token(Token = "0x4000FBF")]
			Cube
		}

		[Token(Token = "0x4000FAD")]
		private const double kToleranceMeters_PS = 1E-06;

		[Token(Token = "0x4000FAE")]
		private const int kVerticesPerKnot_Rapidograph = 1;

		[Token(Token = "0x4000FAF")]
		private const int kVerticesPerKnot_QuillPen = 2;

		[Token(Token = "0x4000FB0")]
		private const int kVerticesPerKnot_Tetrahedron = 4;

		[Token(Token = "0x4000FB1")]
		private const int kVerticesPerKnot_Octahedron = 6;

		[Token(Token = "0x4000FB2")]
		private const int kVerticesPerKnot_Cube = 8;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2EEC8", Offset = "0xB2EEC8")]
		[SerializeField]
		private int m_KnotsInHull;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool m_Faceted;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private KnotConversion m_KnotConversion;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vertex> m_AllVertices;

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x131EF10", Offset = "0x131EF10", VA = "0x131EF10")]
		private static Vector3 AsVector3(double[] ds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x131EF60", Offset = "0x131EF60", VA = "0x131EF60")]
		public ConcaveHullBrush()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x131F018", Offset = "0x131F018", VA = "0x131F018", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x131F9CC", Offset = "0x131F9CC", VA = "0x131F9CC", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x131F0C8", Offset = "0x131F0C8", VA = "0x131F0C8")]
		private void FixInitialKnotSize()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x131FA18", Offset = "0x131FA18", VA = "0x131FA18", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x131FA54", Offset = "0x131FA54", VA = "0x131FA54", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x131FCCC", Offset = "0x131FCCC", VA = "0x131FCCC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x131FCF0", Offset = "0x131FCF0", VA = "0x131FCF0")]
		private void ResizeVertices(int desired)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x131FDF0", Offset = "0x131FDF0", VA = "0x131FDF0")]
		private int GetNumVerticesPerKnot()
		{
			return default(int);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x131F1E4", Offset = "0x131F1E4", VA = "0x131F1E4")]
		private void CreateVerticesFromKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x131FA80", Offset = "0x131FA80", VA = "0x131FA80")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x131FE14", Offset = "0x131FE14", VA = "0x131FE14")]
		private ConvexHull<Vertex, Face> CreateHull(List<Vertex> input, bool enableSimplify)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x131FF40", Offset = "0x131FF40", VA = "0x131FF40")]
		private void CreateFacetedGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x13203A0", Offset = "0x13203A0", VA = "0x13203A0")]
		private void CreateSmoothGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1320DAC", Offset = "0x1320DAC", VA = "0x1320DAC")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x1320F38", Offset = "0x1320F38", VA = "0x1320F38")]
		private void AppendTri(ref Knot k, int vp0, int vp1, int vp2)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class EnvironmentBrushScript : BaseBrushScript
	{
		[Token(Token = "0x200025E")]
		private enum UvSetCount
		{
			[Token(Token = "0x4000FC2")]
			One,
			[Token(Token = "0x4000FC3")]
			Two
		}

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UvSetCount m_UvSetCount;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xED52D0", Offset = "0xED52D0", VA = "0xED52D0")]
		protected EnvironmentBrushScript()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xED52DC", Offset = "0xED52DC", VA = "0xED52DC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xED5380", Offset = "0xED5380", VA = "0xED5380", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xED5388", Offset = "0xED5388", VA = "0xED5388", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xED5390", Offset = "0xED5390", VA = "0xED5390", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xED5398", Offset = "0xED5398", VA = "0xED5398", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xED53A0", Offset = "0xED53A0", VA = "0xED53A0", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xED53A4", Offset = "0xED53A4", VA = "0xED53A4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xED53A8", Offset = "0xED53A8", VA = "0xED53A8", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x200025F")]
	internal class FlatGeometryBrush : GeometryBrush
	{
		[Token(Token = "0x2000260")]
		protected enum UVStyle
		{
			[Token(Token = "0x4000FD6")]
			Distance,
			[Token(Token = "0x4000FD7")]
			Stretch
		}

		[Token(Token = "0x4000FC4")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x4000FC5")]
		private const int kSharedVertsInSolidPair = 2;

		[Token(Token = "0x4000FC6")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x4000FC7")]
		private const int kSharedTrisInSolidPair = 0;

		[Token(Token = "0x4000FC8")]
		private const int kMinimumKnotsAfterBreak = 6;

		[Token(Token = "0x4000FC9")]
		protected const int BR = 0;

		[Token(Token = "0x4000FCA")]
		protected const int BL = 1;

		[Token(Token = "0x4000FCB")]
		protected const int FR = 2;

		[Token(Token = "0x4000FCC")]
		protected const int FL = 3;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<float> m_sizes;

		[Token(Token = "0x4000FCE")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4000FCF")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4000FD0")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4000FD1")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4000FD2")]
		private const int kSmoothingWindow = 1;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected bool m_bOffsetInTexcoord1;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1018088", Offset = "0x1018088", VA = "0x1018088")]
		public FlatGeometryBrush()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x10181D0", Offset = "0x10181D0", VA = "0x10181D0", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x1018598", Offset = "0x1018598", VA = "0x1018598", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1018654", Offset = "0x1018654", VA = "0x1018654", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x10186BC", Offset = "0x10186BC", VA = "0x10186BC", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x101A2A0", Offset = "0x101A2A0", VA = "0x101A2A0")]
		private void TrimShortStrokeAfterBreak()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x101A3D0", Offset = "0x101A3D0", VA = "0x101A3D0", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x101A4DC", Offset = "0x101A4DC", VA = "0x101A4DC", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x10188AC", Offset = "0x10188AC", VA = "0x10188AC")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1018ED8", Offset = "0x1018ED8", VA = "0x1018ED8")]
		private void OnChanged_MakeVertsAndNormals(int iKnot0)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x10199EC", Offset = "0x10199EC", VA = "0x10199EC")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1019CEC", Offset = "0x1019CEC", VA = "0x1019CEC")]
		private void OnChanged_DistanceUVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x101A02C", Offset = "0x101A02C", VA = "0x101A02C")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}
	}
	[Token(Token = "0x2000261")]
	internal class GeniusParticlesBrush : GeometryBrush
	{
		[Token(Token = "0x4000FD8")]
		private const float kSpawnInterval_PS = 0.024999999f;

		[Token(Token = "0x4000FD9")]
		private const float kSingleParticleTriggerPressure = 0.8f;

		[Token(Token = "0x4000FDA")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x4000FDB")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x4000FDC")]
		private const int kSaltMaxParticlesPerKnot = 16;

		[Token(Token = "0x4000FDD")]
		private const int kSaltMaxSaltsPerParticle = 16;

		[Token(Token = "0x4000FDE")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x4000FDF")]
		private const int kSaltAlpha = 1;

		[Token(Token = "0x4000FE0")]
		private const int kSaltOnSphere = 2;

		[Token(Token = "0x4000FE1")]
		private const int kSaltRotation = 4;

		[Token(Token = "0x4000FE2")]
		private const int kSaltRoll = 7;

		[Token(Token = "0x4000FE3")]
		private const int kSaltAtlas = 8;

		[Token(Token = "0x4000FE4")]
		private const int kBr = 0;

		[Token(Token = "0x4000FE5")]
		private const int kBl = 1;

		[Token(Token = "0x4000FE6")]
		private const int kFr = 2;

		[Token(Token = "0x4000FE7")]
		private const int kFl = 3;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector4 m_TextureAtlas00;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector4 m_TextureAtlas05;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly Vector4 m_TextureAtlas50;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly Vector4 m_TextureAtlas55;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<float> m_DecayTimers;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_DecayedKnots;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_DistancePointerTravelled;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_LastPos;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<float> m_LengthsAtKnot;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_SpawnInterval;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_ParticleSizeScale;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x101F768", Offset = "0x101F768", VA = "0x101F768")]
		public GeniusParticlesBrush()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x101F928", Offset = "0x101F928", VA = "0x101F928")]
		protected int CalculateSalt(int knotIndex, int particleIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x101F93C", Offset = "0x101F93C", VA = "0x101F93C", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x101F944", Offset = "0x101F944", VA = "0x101F944", Slot = "23")]
		protected override float DistanceFromKnot(int knotIndex, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x101FAA4", Offset = "0x101FAA4", VA = "0x101FAA4", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x101FAAC", Offset = "0x101FAAC", VA = "0x101FAAC", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x101FBEC", Offset = "0x101FBEC", VA = "0x101FBEC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x101FC88", Offset = "0x101FC88", VA = "0x101FC88", Slot = "12")]
		public override void DecayBrush()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1020238", Offset = "0x1020238", VA = "0x1020238", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1020954", Offset = "0x1020954", VA = "0x1020954", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1020B68", Offset = "0x1020B68", VA = "0x1020B68", Slot = "22")]
		protected override void ControlPointsChanged(int firstKnotIndex)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1021CC8", Offset = "0x1021CC8", VA = "0x1021CC8", Slot = "13")]
		public override bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1021CD0", Offset = "0x1021CD0", VA = "0x1021CD0", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x1021F24", Offset = "0x1021F24", VA = "0x1021F24", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x10211B8", Offset = "0x10211B8", VA = "0x10211B8")]
		private float StrokeLengthAtKnot(int knotIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x1020E88", Offset = "0x1020E88", VA = "0x1020E88")]
		private void InvalidateLengthsFromKnot(int knotIndex)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1020F2C", Offset = "0x1020F2C", VA = "0x1020F2C")]
		private int TotalParticlesAtKnot(int knotIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1021CF4", Offset = "0x1021CF4", VA = "0x1021CF4")]
		private void FinalizeParticleMesh()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1020F6C", Offset = "0x1020F6C", VA = "0x1020F6C")]
		private void SetGeometrySpaceForKnot(int knotIndex, int particleCount)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x10213C4", Offset = "0x10213C4", VA = "0x10213C4")]
		private void CreateParticleGeometry(int knotIndex, int particleIndex, Vector3 pos, float size)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public abstract class GeometryBrush : BaseBrushScript
	{
		[Token(Token = "0x2000263")]
		public struct Knot
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PointerManager.ControlPoint point;

			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 smoothedPos;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float smoothedPressure;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float length;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion qFrame;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 nRight;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 nSurface;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int iTri;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public ushort iVert;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
			public ushort nTri;

			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ushort nVert;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
			public bool startsGeometry;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
			public bool endsGeometry;

			[Token(Token = "0x17000238")]
			public bool HasGeometry
			{
				[Token(Token = "0x6000F4A")]
				[Address(RVA = "0x115560C", Offset = "0x115560C", VA = "0x115560C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000239")]
			public Quaternion? Frame
			{
				[Token(Token = "0x6000F4B")]
				[Address(RVA = "0x115561C", Offset = "0x115561C", VA = "0x115561C")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float kPressureSmoothWindowMeters_PS;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_UpperBoundVertsPerKnot;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool m_bDoubleSided;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		protected readonly bool m_bSmoothPositions;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		protected bool m_bM11Compatibility;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly int m_SoftVertexLimit;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int NS;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected List<Knot> m_knots;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected GeometryPool m_geometry;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int m_CachedNumVerts;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected int m_CachedNumTris;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int? m_FirstChangedControlPoint;

		[Token(Token = "0x17000236")]
		public int NumVerts
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x102203C", Offset = "0x102203C", VA = "0x102203C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000237")]
		public int NumTris
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x102209C", Offset = "0x102209C", VA = "0x102209C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x10180F8", Offset = "0x10180F8", VA = "0x10180F8")]
		public GeometryBrush(bool bCanBatch, int upperBoundVertsPerKnot, bool bDoubleSided, bool bSmoothPositions = true)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x10220FC", Offset = "0x10220FC", VA = "0x10220FC")]
		protected void CheckKnotInvariants()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x101FEFC", Offset = "0x101FEFC", VA = "0x101FEFC")]
		protected void RemoveInitialKnots(int knotsToShift)
		{
		}

		[Token(Token = "0x6000F2F")]
		protected abstract void ControlPointsChanged(int iKnot);

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x101F9E0", Offset = "0x101F9E0", VA = "0x101F9E0", Slot = "23")]
		protected virtual float DistanceFromKnot(int knotIndex, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1022100", Offset = "0x1022100", VA = "0x1022100", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x1022108", Offset = "0x1022108", VA = "0x1022108", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x102210C", Offset = "0x102210C", VA = "0x102210C", Slot = "16")]
		public override bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x102214C", Offset = "0x102214C", VA = "0x102214C", Slot = "17")]
		public override bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1022198", Offset = "0x1022198", VA = "0x1022198", Slot = "18")]
		public override bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x10209D0", Offset = "0x10209D0", VA = "0x10209D0", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1018520", Offset = "0x1018520", VA = "0x1018520")]
		protected void SetDoubleSided(BrushDescriptor desc)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x10182D4", Offset = "0x10182D4", VA = "0x10182D4", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x10221BC", Offset = "0x10221BC", VA = "0x10221BC", Slot = "19")]
		public override void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x101A3F4", Offset = "0x101A3F4", VA = "0x101A3F4", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x101A500", Offset = "0x101A500", VA = "0x101A500", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x1022364", Offset = "0x1022364", VA = "0x1022364", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x10224B0", Offset = "0x10224B0", VA = "0x10224B0", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x1020370", Offset = "0x1020370", VA = "0x1020370", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x101A540", Offset = "0x101A540", VA = "0x101A540")]
		protected void SetTri(int iTri, int iVert, int tp, int vp0, int vp1, int vp2)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x101A68C", Offset = "0x101A68C", VA = "0x101A68C")]
		protected void SetVert(int iVert, int vp, Vector3 v, Vector3 n, Color32 c, float alpha)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x101A960", Offset = "0x101A960", VA = "0x101A960")]
		protected void SetUv0(int iVert, int vp, Vector2 data)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x1021F48", Offset = "0x1021F48", VA = "0x1021F48")]
		protected void SetUv0(int iVert, int vp, Vector4 data)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x101A878", Offset = "0x101A878", VA = "0x101A878")]
		protected void SetUv1(int iVert, int vp, Vector3 data)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1022608", Offset = "0x1022608", VA = "0x1022608")]
		protected void SetUv1(int iVert, int vp, Vector4 data)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x101AA30", Offset = "0x101AA30", VA = "0x101AA30")]
		protected void SetTangent(int iVert, int vp, Vector3 tangent, float w = 1f)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1018DD8", Offset = "0x1018DD8", VA = "0x1018DD8")]
		protected void ResizeGeometry()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x10226FC", Offset = "0x10226FC", VA = "0x10226FC")]
		protected void BruteForceRecomputeTangents(int iKnot0, List<Vector2> uvs)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1022510", Offset = "0x1022510", VA = "0x1022510")]
		protected void ApplySmoothing(Knot prev, ref Knot next)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class GeometryPool
	{
		[Serializable]
		[Token(Token = "0x2000265")]
		public enum Semantic
		{
			[Token(Token = "0x400101C")]
			Unspecified,
			[Token(Token = "0x400101D")]
			Position,
			[Token(Token = "0x400101E")]
			Vector,
			[Token(Token = "0x400101F")]
			XyIsUvZIsDistance,
			[Token(Token = "0x4001020")]
			UnitlessVector,
			[Token(Token = "0x4001021")]
			XyIsUv,
			[Token(Token = "0x4001022")]
			Timestamp
		}

		[Token(Token = "0x2000266")]
		public struct TexcoordInfo : IEquatable<TexcoordInfo>
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Semantic semantic;

			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x11558A4", Offset = "0x11558A4", VA = "0x11558A4")]
			public static bool operator ==(TexcoordInfo lhs, TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x11558EC", Offset = "0x11558EC", VA = "0x11558EC")]
			public static bool operator !=(TexcoordInfo lhs, TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x11558C4", Offset = "0x11558C4", VA = "0x11558C4", Slot = "4")]
			public bool Equals(TexcoordInfo rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x115590C", Offset = "0x115590C", VA = "0x115590C", Slot = "0")]
			public override bool Equals(object rhso)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x11559A0", Offset = "0x11559A0", VA = "0x11559A0", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000267")]
		public struct TexcoordData
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<Vector2> v2;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Vector3> v3;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector4> v4;

			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x11556AC", Offset = "0x11556AC", VA = "0x11556AC")]
			public void SetSize(int size)
			{
			}

			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x1155800", Offset = "0x1155800", VA = "0x1155800")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000268")]
		public struct VertexLayout : IEquatable<VertexLayout>
		{
			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TexcoordInfo texcoord0;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TexcoordInfo texcoord1;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexcoordInfo texcoord2;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool bUseNormals;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Semantic normalSemantic;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool bUseColors;

			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool bUseTangents;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool bUseVertexIds;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool bFbxExportNormalAsTexcoord1;

			[Token(Token = "0x1700023E")]
			internal int uv0Size
			{
				[Token(Token = "0x6000F85")]
				[Address(RVA = "0x1155A28", Offset = "0x1155A28", VA = "0x1155A28")]
				set
				{
				}
			}

			[Token(Token = "0x1700023F")]
			internal int uv1Size
			{
				[Token(Token = "0x6000F86")]
				[Address(RVA = "0x1155A30", Offset = "0x1155A30", VA = "0x1155A30")]
				set
				{
				}
			}

			[Token(Token = "0x17000240")]
			internal Semantic uv0Semantic
			{
				[Token(Token = "0x6000F87")]
				[Address(RVA = "0x1155A38", Offset = "0x1155A38", VA = "0x1155A38")]
				set
				{
				}
			}

			[Token(Token = "0x17000241")]
			internal Semantic uv1Semantic
			{
				[Token(Token = "0x6000F88")]
				[Address(RVA = "0x1155A40", Offset = "0x1155A40", VA = "0x1155A40")]
				set
				{
				}
			}

			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x11559AC", Offset = "0x11559AC", VA = "0x11559AC")]
			public TexcoordInfo GetTexcoordInfo(int channel)
			{
				return default(TexcoordInfo);
			}

			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x1155A48", Offset = "0x1155A48", VA = "0x1155A48")]
			public static bool operator ==(VertexLayout lhs, VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x1155B54", Offset = "0x1155B54", VA = "0x1155B54")]
			public static bool operator !=(VertexLayout lhs, VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x1155A7C", Offset = "0x1155A7C", VA = "0x1155A7C", Slot = "4")]
			public bool Equals(VertexLayout rhs)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x1155B8C", Offset = "0x1155B8C", VA = "0x1155B8C", Slot = "0")]
			public override bool Equals(object rhso)
			{
				return default(bool);
			}

			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x1155C28", Offset = "0x1155C28", VA = "0x1155C28", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000269")]
		private class BackingFileInfo
		{
			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filename;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numVertsInFile;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numTriIndicesInFile;

			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x11556A4", Offset = "0x11556A4", VA = "0x11556A4")]
			public BackingFileInfo()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200026A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB294F8", Offset = "0xB294F8")]
		private struct <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int meshVertexCount;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool useFallbackTexcoord;
		}

		[Token(Token = "0x400100C")]
		private const uint kMagic = 1869574215u;

		[Token(Token = "0x400100D")]
		public const int kNumTexcoords = 3;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<GeometryPool> sm_unused;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> m_Vertices;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> m_Tris;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> m_Normals;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TexcoordData m_Texcoord0;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TexcoordData m_Texcoord1;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TexcoordData m_Texcoord2;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Color32> m_Colors;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector4> m_Tangents;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VertexLayout m_Layout;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_IsResident;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh m_BackingMesh;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BackingFileInfo m_BackingFileInfo;

		[Token(Token = "0x1700023A")]
		public bool IsGeometryResident
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x15D184C", Offset = "0x15D184C", VA = "0x15D184C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023B")]
		public VertexLayout Layout
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x15D1854", Offset = "0x15D1854", VA = "0x15D1854")]
			get
			{
				return default(VertexLayout);
			}
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x15D1148", Offset = "0x15D1148", VA = "0x15D1148")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public int NumVerts
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x15D1868", Offset = "0x15D1868", VA = "0x15D1868")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x15D1924", Offset = "0x15D1924", VA = "0x15D1924")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public int NumTriIndices
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x15D1CB8", Offset = "0x15D1CB8", VA = "0x15D1CB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x15D1D80", Offset = "0x15D1D80", VA = "0x15D1D80")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x15D0794", Offset = "0x15D0794", VA = "0x15D0794")]
		public static GeometryPool Allocate()
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x15D0AF4", Offset = "0x15D0AF4", VA = "0x15D0AF4")]
		public static void Free(GeometryPool g)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x15D0F0C", Offset = "0x15D0F0C", VA = "0x15D0F0C")]
		public static GeometryPool[] FromMesh(Mesh mesh, VertexLayout?[] layouts, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		private static List<T> StealArrayForList<T>(T[] data)
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x15D16BC", Offset = "0x15D16BC", VA = "0x15D16BC")]
		private static TexcoordData GetTexcoordDataFromMesh(Mesh mesh, int channel, int uvSize)
		{
			return default(TexcoordData);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x15D1E5C", Offset = "0x15D1E5C", VA = "0x15D1E5C")]
		public void ShiftForward(int verts, int tris)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x15D0990", Offset = "0x15D0990", VA = "0x15D0990")]
		public GeometryPool()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x15D21A0", Offset = "0x15D21A0", VA = "0x15D21A0")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x15D22A8", Offset = "0x15D22A8", VA = "0x15D22A8")]
		public GeometryPool Clone()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x15D0C60", Offset = "0x15D0C60", VA = "0x15D0C60")]
		public void Reset(bool keepVertexLayout = true)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x15D28C0", Offset = "0x15D28C0", VA = "0x15D28C0")]
		public void MakeGeometryNotResident(string backingFile)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x15D2E88", Offset = "0x15D2E88", VA = "0x15D2E88")]
		public void MakeGeometryPermanentlyNotResident()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x15D2F44", Offset = "0x15D2F44", VA = "0x15D2F44")]
		public void MakeGeometryNotResident(Mesh mesh)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x15D2E3C", Offset = "0x15D2E3C", VA = "0x15D2E3C")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x15D30D4", Offset = "0x15D30D4", VA = "0x15D30D4")]
		public Mesh GetBackingMesh()
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x15D1BB4", Offset = "0x15D1BB4", VA = "0x15D1BB4")]
		public void EnsureGeometryResident()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x15D30DC", Offset = "0x15D30DC", VA = "0x15D30DC")]
		private void ReloadFromMesh()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x15D33C8", Offset = "0x15D33C8", VA = "0x15D33C8")]
		private void ReloadFromFile()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x15D21A4", Offset = "0x15D21A4", VA = "0x15D21A4")]
		private void ClearBackingFile()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x15D1C6C", Offset = "0x15D1C6C", VA = "0x15D1C6C")]
		public TexcoordData GetTexcoordData(int channel)
		{
			return default(TexcoordData);
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x15D3054", Offset = "0x15D3054", VA = "0x15D3054")]
		private unsafe ref TexcoordData InternalGetTexcoordDataRef(int channel)
		{
			return ref *(TexcoordData*)null;
		}

		[Token(Token = "0x6000F68")]
		private static T[] SubArray<T>(List<T> list, int start, int length)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		private static List<T> SubList<T>(List<T> list, int start, int length)
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x15D3AC4", Offset = "0x15D3AC4", VA = "0x15D3AC4")]
		public void CopyToMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x15D3C34", Offset = "0x15D3C34", VA = "0x15D3C34")]
		public void CopyToMesh(Mesh mesh, int iVert, int nVert, int iTriIndex, int nTriIndex)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x15D4018", Offset = "0x15D4018", VA = "0x15D4018")]
		private static int GetVertexCount(Stroke stroke)
		{
			return default(int);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x15D40E8", Offset = "0x15D40E8", VA = "0x15D40E8")]
		public bool Append(Stroke stroke, int vertexLimit = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x15D42FC", Offset = "0x15D42FC", VA = "0x15D42FC")]
		public void Append(Mesh mesh, [Optional] VertexLayout? layout, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x15D11A4", Offset = "0x15D11A4", VA = "0x15D11A4")]
		public void AppendVertexData(Mesh mesh, [Optional] VertexLayout? layout, [Optional] Color32? fallbackColor, bool useFallbackTexcoord = false)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x15D43FC", Offset = "0x15D43FC", VA = "0x15D43FC")]
		public void Append(BatchSubset subset)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x15D2384", Offset = "0x15D2384", VA = "0x15D2384")]
		public void Append(GeometryPool rhs, int iVert, int nVert, int iTriIndex, int nTriIndex, [Optional] TrTransform? leftTransform)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x15D462C", Offset = "0x15D462C", VA = "0x15D462C")]
		public void ApplyTransform(TrTransform leftTransform, int iVert, int nVert)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x15D4760", Offset = "0x15D4760", VA = "0x15D4760")]
		public void ApplyTransform(Matrix4x4 xf, Matrix4x4 xfBivector, float xfDist, int iVert, int nVert)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x15D4A6C", Offset = "0x15D4A6C", VA = "0x15D4A6C")]
		private static void ApplyTransformToVector3(Matrix4x4 mat, float scale, int iVert, int iVertEnd, List<Vector3> v3List, Semantic semantic)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x15D4D38", Offset = "0x15D4D38", VA = "0x15D4D38")]
		private static void ApplyTransformToVector4(Matrix4x4 mat, float scale, int iVert, int iVertEnd, List<Vector4> v4List, Semantic semantic)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x15D444C", Offset = "0x15D444C", VA = "0x15D444C")]
		public bool VerifySizes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x15D4F18", Offset = "0x15D4F18", VA = "0x15D4F18")]
		private static void WriteTexcoordData(SketchBinaryWriter writer, TexcoordData texcoordData, int texcoordSize)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x15D2B54", Offset = "0x15D2B54", VA = "0x15D2B54")]
		public void SerializeToStream(Stream stream)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x15D5010", Offset = "0x15D5010", VA = "0x15D5010")]
		private static bool ReadTexcoordData(SketchBinaryReader reader, out TexcoordData texcoordData, int texcoordSize, int numVerts)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x15D3614", Offset = "0x15D3614", VA = "0x15D3614")]
		public bool DeserializeFromStream(Stream stream)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C10C", Offset = "0xB3C10C")]
		internal static void <AppendVertexData>g__CopyTexcoordWithDefault|59_0<T>(List<T> dst, List<T> src, int channel, ref <>c__DisplayClass59_0 P_3)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class HolidayTree : ParentBrush
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_trunkBrush;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_trunkColor;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected BrushDescriptor m_branchBrush;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected Color m_branchColor;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_branchRelativeSize;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected float m_branchFrequency;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected float m_branchScale;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected BrushDescriptor m_frondBrush;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected Color m_frondColor;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected float m_frondRelativeSize;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		protected float m_frondFrequency;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected float m_frondScale;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected BrushDescriptor m_decoBrush;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected float m_decoTwist;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected Vector3 m_decoOffset;

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x13C5360", Offset = "0x13C5360", VA = "0x13C5360", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x13C5820", Offset = "0x13C5820", VA = "0x13C5820")]
		public HolidayTree()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class HullBrush : GeometryBrush
	{
		[Token(Token = "0x200026D")]
		public class Vertex : IVertex
		{
			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F0CC", Offset = "0xB2F0CC")]
			private double[] <Position>k__BackingField;

			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F0DC", Offset = "0xB2F0DC")]
			private bool <DefinitelyInterior>k__BackingField;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F0EC", Offset = "0xB2F0EC")]
			private int <TempIndex>k__BackingField;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F0FC", Offset = "0xB2F0FC")]
			private Vector3 <TempNormal>k__BackingField;

			[Token(Token = "0x17000242")]
			public double[] Position
			{
				[Token(Token = "0x6000FA5")]
				[Address(RVA = "0xFF71F0", Offset = "0xFF71F0", VA = "0xFF71F0", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C11C", Offset = "0xB3C11C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000FA6")]
				[Address(RVA = "0xFF71F8", Offset = "0xFF71F8", VA = "0xFF71F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C12C", Offset = "0xB3C12C")]
				set
				{
				}
			}

			[Token(Token = "0x17000243")]
			public bool DefinitelyInterior
			{
				[Token(Token = "0x6000FA7")]
				[Address(RVA = "0xFF7200", Offset = "0xFF7200", VA = "0xFF7200")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C13C", Offset = "0xB3C13C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000FA8")]
				[Address(RVA = "0xFF7208", Offset = "0xFF7208", VA = "0xFF7208")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C14C", Offset = "0xB3C14C")]
				set
				{
				}
			}

			[Token(Token = "0x17000244")]
			public int TempIndex
			{
				[Token(Token = "0x6000FA9")]
				[Address(RVA = "0xFF7214", Offset = "0xFF7214", VA = "0xFF7214")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C15C", Offset = "0xB3C15C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6000FAA")]
				[Address(RVA = "0xFF721C", Offset = "0xFF721C", VA = "0xFF721C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C16C", Offset = "0xB3C16C")]
				set
				{
				}
			}

			[Token(Token = "0x17000245")]
			public Vector3 TempNormal
			{
				[Token(Token = "0x6000FAB")]
				[Address(RVA = "0xFF7224", Offset = "0xFF7224", VA = "0xFF7224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C17C", Offset = "0xB3C17C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6000FAC")]
				[Address(RVA = "0xFF7230", Offset = "0xFF7230", VA = "0xFF7230")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C18C", Offset = "0xB3C18C")]
				set
				{
				}
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xFF723C", Offset = "0xFF723C", VA = "0xFF723C")]
			public Vertex()
			{
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xFF729C", Offset = "0xFF729C", VA = "0xFF729C")]
			public void SetData(Vector3 v)
			{
			}
		}

		[Token(Token = "0x200026E")]
		public class Face : ConvexFace<Vertex, Face>
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xFF71A4", Offset = "0xFF71A4", VA = "0xFF71A4")]
			public Face()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200026F")]
		public enum KnotConversion
		{
			[Token(Token = "0x4001057")]
			Point,
			[Token(Token = "0x4001058")]
			Tetrahedron,
			[Token(Token = "0x4001059")]
			DirectedSphere
		}

		[Serializable]
		[Token(Token = "0x2000270")]
		public enum SimplifyMode
		{
			[Token(Token = "0x400105B")]
			Disabled,
			[Token(Token = "0x400105C")]
			SimplifyAtEnd,
			[Token(Token = "0x400105D")]
			SimplifyInteractively
		}

		[Serializable]
		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29508", Offset = "0xB29508")]
		private sealed class <>c
		{
			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, bool> <>9__19_0;

			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, bool> <>9__29_0;

			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xFF715C", Offset = "0xFF715C", VA = "0xFF715C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xFF7164", Offset = "0xFF7164", VA = "0xFF7164")]
			internal bool <ShouldCurrentLineEnd>b__19_0(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xFF7184", Offset = "0xFF7184", VA = "0xFF7184")]
			internal bool <OnChanged_MakeGeometry>b__29_0(Vertex v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001045")]
		private const double kToleranceMeters_PS = 1E-06;

		[Token(Token = "0x4001046")]
		private const int kVerticesPerKnot_Point = 1;

		[Token(Token = "0x4001047")]
		private const int kVerticesPerKnot_Tetrahedron = 4;

		[Token(Token = "0x4001048")]
		private const int kDirectedSphereRingPoints = 4;

		[Token(Token = "0x4001049")]
		private const int kDirectedSphereRings = 2;

		[Token(Token = "0x400104A")]
		private const float kDirectedSphereRingAngleDegrees = 45f;

		[Token(Token = "0x400104B")]
		private const int kVerticesPerKnot_DirectedSphere = 9;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_Faceted;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool m_TrackInterior;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private KnotConversion m_KnotConversion;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_Simplification_PS;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private SimplifyMode m_SimplifyMode;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vertex> m_AllVertices;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x13C68D0", Offset = "0x13C68D0", VA = "0x13C68D0")]
		private static Vector3 AsVector3(double[] ds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x13C6920", Offset = "0x13C6920", VA = "0x13C6920")]
		public HullBrush()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x13C69D8", Offset = "0x13C69D8", VA = "0x13C69D8", Slot = "17")]
		public override bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x13C6B7C", Offset = "0x13C6B7C", VA = "0x13C6B7C", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x13C72D0", Offset = "0x13C72D0", VA = "0x13C72D0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x13C730C", Offset = "0x13C730C", VA = "0x13C730C", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x13C7D2C", Offset = "0x13C7D2C", VA = "0x13C7D2C", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x13C7D70", Offset = "0x13C7D70", VA = "0x13C7D70", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x13C7DAC", Offset = "0x13C7DAC", VA = "0x13C7DAC")]
		private void ResizeVertices(int desired)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x13C7344", Offset = "0x13C7344", VA = "0x13C7344")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x13C7EAC", Offset = "0x13C7EAC", VA = "0x13C7EAC")]
		private int GetNumVerticesPerKnot()
		{
			return default(int);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x13C6C34", Offset = "0x13C6C34", VA = "0x13C6C34")]
		private void CreateVerticesFromKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x13C7550", Offset = "0x13C7550", VA = "0x13C7550")]
		private void OnChanged_MakeGeometry(bool isEnd = false)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x13C7ED0", Offset = "0x13C7ED0", VA = "0x13C7ED0")]
		private ConvexHull<Vertex, Face> CreateHull(List<Vertex> input, bool enableSimplify)
		{
			return null;
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x13C9058", Offset = "0x13C9058", VA = "0x13C9058")]
		private static Color32 FlipColor(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x13C809C", Offset = "0x13C809C", VA = "0x13C809C")]
		private void CreateFacetedGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x13C850C", Offset = "0x13C850C", VA = "0x13C850C")]
		private void CreateSmoothGeometry(ref Knot knot, ConvexHull<Vertex, Face> hull)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x13C93BC", Offset = "0x13C93BC", VA = "0x13C93BC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x13C9094", Offset = "0x13C9094", VA = "0x13C9094")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x13C9268", Offset = "0x13C9268", VA = "0x13C9268")]
		private void AppendTri(ref Knot k, int vp0, int vp1, int vp2)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class MasterBrush : IPoolable
	{
		[Token(Token = "0x4001061")]
		public const int kActiveStrokeQuads = 1000;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pool<MasterBrush> sm_pool;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_NumVerts;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] m_Vertices;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] m_Tris;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] m_Normals;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] m_UVs;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> m_UVWs;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color32[] m_Colors;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4[] m_Tangents;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GeometryPool.VertexLayout? m_VertexLayout;

		[Token(Token = "0x17000246")]
		public static Pool<MasterBrush> Pool
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x10DA87C", Offset = "0x10DA87C", VA = "0x10DA87C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public GeometryPool.VertexLayout? VertexLayout
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x10DA8E0", Offset = "0x10DA8E0", VA = "0x10DA8E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x10DA8F4", Offset = "0x10DA8F4", VA = "0x10DA8F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public int NumVerts
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x10DA9DC", Offset = "0x10DA9DC", VA = "0x10DA9DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x10DA9E4", Offset = "0x10DA9E4", VA = "0x10DA9E4")]
		public MasterBrush()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x10DAE1C", Offset = "0x10DAE1C", VA = "0x10DAE1C")]
		public void Reset(int numVerts = -1)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x10DAE60", Offset = "0x10DAE60", VA = "0x10DAE60", Slot = "4")]
		public void OnPoolPut()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x10DAE64", Offset = "0x10DAE64", VA = "0x10DAE64", Slot = "5")]
		public void OnPoolGet()
		{
		}
	}
	[Token(Token = "0x2000273")]
	internal class MidpointPlusLifetimeSprayBrush : GeometryBrush
	{
		[Token(Token = "0x400106C")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x400106D")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x400106E")]
		private const int kMaxQuadsPerKnot = 500;

		[Token(Token = "0x400106F")]
		private const int kSaltMaxQuadsPerKnot = 5;

		[Token(Token = "0x4001070")]
		private const int kSaltMaxSaltsPerQuad = 10;

		[Token(Token = "0x4001071")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x4001072")]
		private const int kSaltRotation = 1;

		[Token(Token = "0x4001073")]
		private const int kSaltPosition = 2;

		[Token(Token = "0x4001074")]
		private const int kSaltAlpha = 5;

		[Token(Token = "0x4001075")]
		private const int kSaltAtlas = 6;

		[Token(Token = "0x4001076")]
		protected const int BR = 0;

		[Token(Token = "0x4001077")]
		protected const int BL = 1;

		[Token(Token = "0x4001078")]
		protected const int FR = 2;

		[Token(Token = "0x4001079")]
		protected const int FL = 3;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector2 m_TextureAtlas00;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Vector2 m_TextureAtlas05;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector2 m_TextureAtlas50;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Vector2 m_TextureAtlas55;

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xF313E4", Offset = "0xF313E4", VA = "0xF313E4")]
		public MidpointPlusLifetimeSprayBrush()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xF3146C", Offset = "0xF3146C", VA = "0xF3146C", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xF31508", Offset = "0xF31508", VA = "0xF31508", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xF315A0", Offset = "0xF315A0", VA = "0xF315A0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xF315D8", Offset = "0xF315D8", VA = "0xF315D8", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xF31628", Offset = "0xF31628", VA = "0xF31628")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xF31938", Offset = "0xF31938", VA = "0xF31938")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xF3205C", Offset = "0xF3205C", VA = "0xF3205C")]
		private void OnChanged_UVs(int iKnot0)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xF32318", Offset = "0xF32318", VA = "0xF32318")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xF32560", Offset = "0xF32560", VA = "0xF32560")]
		private int GetNumQuadsAllowed()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000274")]
	public abstract class ParentBrush : BaseBrushScript
	{
		[Serializable]
		[Token(Token = "0x2000275")]
		public enum AttachFrame
		{
			[Token(Token = "0x4001083")]
			Pointer,
			[Token(Token = "0x4001084")]
			LineTangent,
			[Token(Token = "0x4001085")]
			RibbonTangent
		}

		[Token(Token = "0x2000276")]
		protected class PbKnot
		{
			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrTransform m_pointer;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion? m_tangentFrame;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float m_distance;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float m_pressuredSize;

			[Token(Token = "0x17000249")]
			public TrTransform CanvasFromTool
			{
				[Token(Token = "0x6000FD9")]
				[Address(RVA = "0x10E9234", Offset = "0x10E9234", VA = "0x10E9234")]
				get
				{
					return default(TrTransform);
				}
			}

			[Token(Token = "0x1700024A")]
			public TrTransform CanvasFromTangent
			{
				[Token(Token = "0x6000FDA")]
				[Address(RVA = "0x10E9304", Offset = "0x10E9304", VA = "0x10E9304")]
				get
				{
					return default(TrTransform);
				}
			}

			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x10E8F04", Offset = "0x10E8F04", VA = "0x10E8F04")]
			public TrTransform GetFrame(AttachFrame frame)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x10E9458", Offset = "0x10E9458", VA = "0x10E9458")]
			public PbKnot Clone()
			{
				return null;
			}

			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x10E94F4", Offset = "0x10E94F4", VA = "0x10E94F4")]
			public PbKnot()
			{
			}
		}

		[Token(Token = "0x2000277")]
		protected abstract class PbChild
		{
			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BaseBrushScript m_brush;

			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x10E8C34", Offset = "0x10E8C34", VA = "0x10E8C34")]
			public TrTransform CalculateChildXfFixedScale(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000FDF")]
			protected abstract TrTransform CalculateChildXf(List<PbKnot> parentKnots);

			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x10E8D58", Offset = "0x10E8D58", VA = "0x10E8D58")]
			protected PbChild()
			{
			}
		}

		[Token(Token = "0x2000278")]
		protected class PbChildIdentityXf : PbChild
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0x10E8D60", Offset = "0x10E8D60", VA = "0x10E8D60", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}

			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x10E8DE8", Offset = "0x10E8DE8", VA = "0x10E8DE8")]
			public PbChildIdentityXf()
			{
			}
		}

		[Token(Token = "0x2000279")]
		protected abstract class PbChildWithKnotBasedFrame : PbChild
		{
			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int m_frameKnot;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly AttachFrame m_frame;

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x10E8DF0", Offset = "0x10E8DF0", VA = "0x10E8DF0")]
			public PbChildWithKnotBasedFrame(int frameKnot, AttachFrame frame)
			{
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x10E8E28", Offset = "0x10E8E28", VA = "0x10E8E28")]
			public PbKnot GetAttachKnot(List<PbKnot> parentKnots)
			{
				return null;
			}

			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x10E8EBC", Offset = "0x10E8EBC", VA = "0x10E8EBC")]
			public TrTransform GetAttachTransform(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x200027A")]
		protected class PbChildWithOffset : PbChildWithKnotBasedFrame
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrTransform m_offset;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_twist;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool m_pressureAffectsOffset;

			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x10E8F84", Offset = "0x10E8F84", VA = "0x10E8F84")]
			public PbChildWithOffset(int frameKnot, AttachFrame frame, TrTransform offset, float twist, bool pressureAffectsOffset = true)
			{
			}

			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x10E8FEC", Offset = "0x10E8FEC", VA = "0x10E8FEC", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x400107E")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<PbKnot> m_knots;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected List<PbChild> m_children;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int m_recursionLevel;

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x11405E8", Offset = "0x11405E8", VA = "0x11405E8")]
		public ParentBrush()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x11406A4", Offset = "0x11406A4", VA = "0x11406A4")]
		protected void InitializeAndAddChild(PbChild child, BrushDescriptor desc, Color color, float relativeSize = 1f)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x11409A0", Offset = "0x11409A0", VA = "0x11409A0")]
		private void MaybeCreateChildren()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1140A44", Offset = "0x1140A44", VA = "0x1140A44")]
		protected float DistanceSinceLastKnotBasedChild()
		{
			return default(float);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1140C24", Offset = "0x1140C24", VA = "0x1140C24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FCC")]
		protected abstract void MaybeCreateChildrenImpl();

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1140DA4", Offset = "0x1140DA4", VA = "0x1140DA4", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 translation, Quaternion rotation, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1141164", Offset = "0x1141164", VA = "0x1141164")]
		private void CommonInit(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1141254", Offset = "0x1141254", VA = "0x1141254", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x11412A4", Offset = "0x11412A4", VA = "0x11412A4", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1141478", Offset = "0x1141478", VA = "0x1141478", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1141480", Offset = "0x1141480", VA = "0x1141480", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1141508", Offset = "0x1141508", VA = "0x1141508", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1141634", Offset = "0x1141634", VA = "0x1141634", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x114176C", Offset = "0x114176C", VA = "0x114176C", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1141790", Offset = "0x1141790", VA = "0x1141790", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1141794", Offset = "0x1141794", VA = "0x1141794", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x11418C4", Offset = "0x11418C4", VA = "0x11418C4", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}
	}
	[Token(Token = "0x200027B")]
	public class PbrBrushScript : BaseBrushScript
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x11437CC", Offset = "0x11437CC", VA = "0x11437CC")]
		protected PbrBrushScript()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x11437D8", Offset = "0x11437D8", VA = "0x11437D8", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x114384C", Offset = "0x114384C", VA = "0x114384C", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1143854", Offset = "0x1143854", VA = "0x1143854", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x114385C", Offset = "0x114385C", VA = "0x114385C", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1143864", Offset = "0x1143864", VA = "0x1143864", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x114386C", Offset = "0x114386C", VA = "0x114386C", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1143870", Offset = "0x1143870", VA = "0x1143870", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1143874", Offset = "0x1143874", VA = "0x1143874", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class PlaitBrush : ParentBrush
	{
		[Token(Token = "0x200027D")]
		protected class PbChildPlait : PbChild
		{
			[Token(Token = "0x4001098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected PlaitBrush m_owner;

			[Token(Token = "0x4001099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected int m_strand;

			[Token(Token = "0x1700024E")]
			protected PlaitBrush O
			{
				[Token(Token = "0x6000FF6")]
				[Address(RVA = "0x10E9DD8", Offset = "0x10E9DD8", VA = "0x10E9DD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x10E9DE0", Offset = "0x10E9DE0", VA = "0x10E9DE0")]
			public PbChildPlait(PlaitBrush owner, int strand)
			{
			}

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x10E9E1C", Offset = "0x10E9E1C", VA = "0x10E9E1C")]
			protected Vector2 SomePeriodicFunction(float t01)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x10E9E94", Offset = "0x10E9E94", VA = "0x10E9E94", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x4001090")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_baseBrush;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F11C", Offset = "0xB2F11C")]
		[SerializeField]
		protected float m_numStrands;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F15C", Offset = "0xB2F15C")]
		[SerializeField]
		protected int m_recursionLimit;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected Color32[] m_colors;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F1AC", Offset = "0xB2F1AC")]
		protected float m_childScaleFineTune;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected float m_cyclesPerMeterAtUnitSize;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected float m_rotationsPerCycle;

		[Token(Token = "0x1700024B")]
		public float CyclesPerMeter
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x10273A8", Offset = "0x10273A8", VA = "0x10273A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024C")]
		public float RotationsPerCycle
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x10273D0", Offset = "0x10273D0", VA = "0x10273D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024D")]
		public float NumStrands
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x10273D8", Offset = "0x10273D8", VA = "0x10273D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x10273E0", Offset = "0x10273E0", VA = "0x10273E0", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x10275B8", Offset = "0x10275B8", VA = "0x10275B8")]
		public PlaitBrush()
		{
		}
	}
	[Token(Token = "0x200027E")]
	internal class PrintableBrush : GeometryBrush
	{
		[Token(Token = "0x400109A")]
		protected const int BR = 0;

		[Token(Token = "0x400109B")]
		protected const int BL = 1;

		[Token(Token = "0x400109C")]
		protected const int BT = 2;

		[Token(Token = "0x400109D")]
		protected const int BB = 3;

		[Token(Token = "0x400109E")]
		protected const int FR = 4;

		[Token(Token = "0x400109F")]
		protected const int FL = 5;

		[Token(Token = "0x40010A0")]
		protected const int FT = 6;

		[Token(Token = "0x40010A1")]
		protected const int FB = 7;

		[Token(Token = "0x40010A2")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x40010A3")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x40010A4")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x40010A5")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x40010A6")]
		private const float kCrossSectionAspectRatio = 0.375f;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_UseEnvelope;

		[Token(Token = "0x40010A8")]
		private const float kInitialEnvelope = 0.8f;

		[Token(Token = "0x40010A9")]
		private const float kFinalEnvelope = 0.3f;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x11F1C40", Offset = "0x11F1C40", VA = "0x11F1C40")]
		public PrintableBrush()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x11F1CB4", Offset = "0x11F1CB4", VA = "0x11F1CB4", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x11F1D50", Offset = "0x11F1D50", VA = "0x11F1D50", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x11F1DB4", Offset = "0x11F1DB4", VA = "0x11F1DB4", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x11F1E1C", Offset = "0x11F1E1C", VA = "0x11F1E1C", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x11F2BD4", Offset = "0x11F2BD4", VA = "0x11F2BD4")]
		private void SetKnotEnvelope(int i, float width)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x11F2464", Offset = "0x11F2464", VA = "0x11F2464")]
		private void OnChanged_SetEnvelope(int iKnot0)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x11F1EF8", Offset = "0x11F1EF8", VA = "0x11F1EF8")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x11F26AC", Offset = "0x11F26AC", VA = "0x11F26AC")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x11F2CE8", Offset = "0x11F2CE8", VA = "0x11F2CE8")]
		private void MySetVert(int iVert, int vp, Vector3 v, Vector3 n)
		{
		}
	}
	[Token(Token = "0x200027F")]
	public abstract class QuadStripBrush : BaseBrushScript
	{
		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float kPressureSmoothWindowMeters_PS;

		[Token(Token = "0x40010AB")]
		private const float kSolidMinLengthMeters_PS = 0.0015f;

		[Token(Token = "0x40010AC")]
		private const float kMinimumMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x40010AD")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected MasterBrush m_Geometry;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 m_LastFacing;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector3 m_LastQuadCenter;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector3 m_LastQuadForward;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected Vector3 m_LastQuadRight;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 m_LastQuadNormal;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int m_LastSegmentLengthSolids;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float m_LastSpawnPressure;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float m_LastSizeShrink;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int m_NumQuads;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int m_LeadingQuadIndex;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int m_InitialQuadIndex;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected bool m_AllowStripBreak;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int? m_LeadingSegmentInitialQuadIndex;

		[Token(Token = "0x1700024F")]
		protected int Stride
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x11F8928", Offset = "0x11F8928", VA = "0x11F8928")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x11F8940", Offset = "0x11F8940", VA = "0x11F8940")]
		public QuadStripBrush()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x11F8954", Offset = "0x11F8954", VA = "0x11F8954")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x11F8A38", Offset = "0x11F8A38", VA = "0x11F8A38", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x11F8A98", Offset = "0x11F8A98", VA = "0x11F8A98", Slot = "9")]
		public override int GetNumUsedVerts()
		{
			return default(int);
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x11F8B54", Offset = "0x11F8B54", VA = "0x11F8B54", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x11F8B5C", Offset = "0x11F8B5C", VA = "0x11F8B5C", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x11F8C90", Offset = "0x11F8C90", VA = "0x11F8C90", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x11F8F00", Offset = "0x11F8F00", VA = "0x11F8F00", Slot = "19")]
		public override void DebugGetGeometry(out Vector3[] verts, out int nVerts, out Vector2[] uv0s, out int[] tris, out int nTris)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x11F8F94", Offset = "0x11F8F94", VA = "0x11F8F94", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x600100E")]
		private static T[] SubsetOf<T>(T[] array, int num)
		{
			return null;
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x11F901C", Offset = "0x11F901C", VA = "0x11F901C", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x11F9424", Offset = "0x11F9424", VA = "0x11F9424", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x11F966C", Offset = "0x11F966C", VA = "0x11F966C")]
		private static void WeldSingleSidedQuadStrip(GeometryPool.VertexLayout layout, MasterBrush geometry, int numVerts, out int newNumVerts, out int newNumTris)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x11FA030", Offset = "0x11FA030", VA = "0x11FA030", Slot = "14")]
		protected override void InitUndoClone(GameObject clone)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x11FA090", Offset = "0x11FA090", VA = "0x11FA090", Slot = "18")]
		public override bool ShouldDiscard()
		{
			return default(bool);
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x11FA0B4", Offset = "0x11FA0B4", VA = "0x11FA0B4")]
		private void AppendLeadingQuad(bool bGenerateNew, float opacity01, Vector3 vCenter, Vector3 vForward, Vector3 vNormal, Vector3 vRight, MasterBrush rMasterBrush, out int earliestChangedQuad)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x11FA74C", Offset = "0x11FA74C", VA = "0x11FA74C")]
		private void PositionQuad(Vector3[] aVerts, int iVertIndex, Vector3 vCenter, Vector3 vForward, Vector3 vRight)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x11FAB74", Offset = "0x11FAB74", VA = "0x11FAB74")]
		private void MakeConsistentBacksideQuad(Vector3[] aVerts, Vector3[] aNorms, int iFrontsideVertIndex)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x11FA894", Offset = "0x11FA894", VA = "0x11FA894")]
		private void FuseQuads(Vector3[] aVerts, Vector3[] aNorms, int iBackQuadVertIndex, int iFrontQuadVertIndex, bool alterBackQuad)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x11FAEB8", Offset = "0x11FAEB8", VA = "0x11FAEB8")]
		private float GetSmoothedPressure(float pressure01, Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x11FAFB4", Offset = "0x11FAFB4", VA = "0x11FAFB4", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x11FB0B4", Offset = "0x11FB0B4", VA = "0x11FB0B4", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 vPos, Quaternion ori, float fPressure)
		{
			return default(bool);
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x11FB814", Offset = "0x11FB814", VA = "0x11FB814", Slot = "16")]
		public override bool IsOutOfVerts()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		protected abstract void UpdateUVsForQuad(int iQuadIndex);

		[Token(Token = "0x600101D")]
		protected abstract void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size);

		[Token(Token = "0x600101E")]
		protected abstract void UpdateUVs(int iQuad0, int iQuad1, float size);

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x11FB838", Offset = "0x11FB838", VA = "0x11FB838")]
		protected float SolidLength(Vector3[] aVerts, int iSolid)
		{
			return default(float);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x11FB930", Offset = "0x11FB930", VA = "0x11FB930")]
		protected float QuadLength(Vector3[] aVerts, int iQuad)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000280")]
	public class QuadStripBrushDistanceUV : QuadStripBrush
	{
		[Token(Token = "0x2000281")]
		private struct UpdateTangentRequest
		{
			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int back;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int front;

			[Token(Token = "0x17000250")]
			public bool IsValid
			{
				[Token(Token = "0x600102B")]
				[Address(RVA = "0x10F0544", Offset = "0x10F0544", VA = "0x10F0544")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x10F0554", Offset = "0x10F0554", VA = "0x10F0554")]
			public void Clear()
			{
			}

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x10F0560", Offset = "0x10F0560", VA = "0x10F0560")]
			public void Set(int back_, int front_)
			{
			}
		}

		[Token(Token = "0x40010BC")]
		private const float kOpacityFadeDistanceMeters_PS = 0.025f;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UpdateTangentRequest m_UpdateTangentRequest;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x11FB99C", Offset = "0x11FB99C", VA = "0x11FB99C", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x11FB9D8", Offset = "0x11FB9D8", VA = "0x11FB9D8", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x11FBA14", Offset = "0x11FBA14", VA = "0x11FBA14", Slot = "23")]
		protected override void UpdateUVsForSegment(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x11FBF3C", Offset = "0x11FBF3C", VA = "0x11FBF3C", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x11FBEB4", Offset = "0x11FBEB4", VA = "0x11FBEB4")]
		private void LazyUpdateTangentsForSegment(int iQuad0, int iQuad1)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x11FBF60", Offset = "0x11FBF60", VA = "0x11FBF60")]
		private void FlushUpdateTangentRequest()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x11FC064", Offset = "0x11FC064", VA = "0x11FC064", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x11FC078", Offset = "0x11FC078", VA = "0x11FC078", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x11FC07C", Offset = "0x11FC07C", VA = "0x11FC07C")]
		public QuadStripBrushDistanceUV()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class QuadStripBrushStretchUV : QuadStripBrush
	{
		[Token(Token = "0x2000283")]
		private struct UpdateUVRequest
		{
			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int back;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int front;

			[Token(Token = "0x17000251")]
			public bool IsValid
			{
				[Token(Token = "0x6001038")]
				[Address(RVA = "0x10F0568", Offset = "0x10F0568", VA = "0x10F0568")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x10F0578", Offset = "0x10F0578", VA = "0x10F0578")]
			public void Clear()
			{
			}

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x10F0584", Offset = "0x10F0584", VA = "0x10F0584")]
			public void Set(int back_, int front_)
			{
			}
		}

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool m_StoreWidthInTexcoord0Z;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] m_QuadLengths;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UpdateUVRequest m_UpdateUVRequest;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x11FC0EC", Offset = "0x11FC0EC", VA = "0x11FC0EC", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x11FC17C", Offset = "0x11FC17C", VA = "0x11FC17C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x11FC224", Offset = "0x11FC224", VA = "0x11FC224", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x11FC2BC", Offset = "0x11FC2BC", VA = "0x11FC2BC", Slot = "23")]
		protected override void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x11FC868", Offset = "0x11FC868", VA = "0x11FC868", Slot = "7")]
		public override void ApplyChangesToVisuals()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x11FC344", Offset = "0x11FC344", VA = "0x11FC344")]
		protected void FlushUpdateUVRequest()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x11FC998", Offset = "0x11FC998", VA = "0x11FC998", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x11FCA28", Offset = "0x11FCA28", VA = "0x11FCA28", Slot = "21")]
		public override BatchSubset FinalizeBatchedBrush()
		{
			return null;
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x11FCA4C", Offset = "0x11FCA4C", VA = "0x11FCA4C", Slot = "20")]
		public override void FinalizeSolitaryBrush()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x11FCA70", Offset = "0x11FCA70", VA = "0x11FCA70")]
		public QuadStripBrushStretchUV()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class QuadStripUnitizedUVBrush : QuadStripBrush
	{
		[Token(Token = "0x600103B")]
		[Address(RVA = "0x11FCAE0", Offset = "0x11FCAE0", VA = "0x11FCAE0", Slot = "24")]
		protected override void UpdateUVs(int iQuad0, int iQuad1, float size)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x11FCCEC", Offset = "0x11FCCEC", VA = "0x11FCCEC", Slot = "22")]
		protected override void UpdateUVsForQuad(int iQuadIndex)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x11FCCF0", Offset = "0x11FCCF0", VA = "0x11FCCF0", Slot = "23")]
		protected override void UpdateUVsForSegment(int iSegmentBack, int iSegmentFront, float size)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x11FCCF4", Offset = "0x11FCCF4", VA = "0x11FCCF4")]
		public QuadStripUnitizedUVBrush()
		{
		}
	}
	[Token(Token = "0x2000285")]
	internal class SliceBrush : GeometryBrush
	{
		[Token(Token = "0x40010C5")]
		private const float M2U = 10f;

		[Token(Token = "0x40010C6")]
		private const float U2M = 0.1f;

		[Token(Token = "0x40010C7")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x40010C8")]
		private const float kMinimumMove_PS = 0.0050000004f;

		[Token(Token = "0x40010C9")]
		private const ushort kVertsInQuad = 4;

		[Token(Token = "0x40010CA")]
		private const float kSolidMinLengthMeters_PS = 0.0001f;

		[Token(Token = "0x40010CB")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x107441C", Offset = "0x107441C", VA = "0x107441C")]
		public SliceBrush()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1074490", Offset = "0x1074490", VA = "0x1074490", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x107452C", Offset = "0x107452C", VA = "0x107452C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1074590", Offset = "0x1074590", VA = "0x1074590", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x10745F0", Offset = "0x10745F0", VA = "0x10745F0", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1074DD0", Offset = "0x1074DD0", VA = "0x1074DD0")]
		private static Quaternion ComputeMinimalRotationFrame(Vector3 nTangent, Quaternion qPrevFrame)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x10746C8", Offset = "0x10746C8", VA = "0x10746C8")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x10749AC", Offset = "0x10749AC", VA = "0x10749AC")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1074E70", Offset = "0x1074E70", VA = "0x1074E70")]
		private void MakeQuad(ref Knot k, Vector3 center, float halfSize, Vector3 up, Vector3 rt, Vector3 fwd, float w)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1075048", Offset = "0x1075048", VA = "0x1075048")]
		private void AppendVert(ref Knot k, Vector3 pos, Vector3 n, Vector3 tan, float u, float v, float w)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1075284", Offset = "0x1075284", VA = "0x1075284")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x10753F8", Offset = "0x10753F8", VA = "0x10753F8")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000286")]
	public class SnowflakeBrush : ParentBrush
	{
		[Token(Token = "0x2000287")]
		protected class PbChildKnotBasedMirror : PbChildWithKnotBasedFrame
		{
			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected Plane m_plane;

			[Token(Token = "0x600104E")]
			[Address(RVA = "0xF21844", Offset = "0xF21844", VA = "0xF21844")]
			public PbChildKnotBasedMirror(int frameKnot, AttachFrame frame, Plane plane)
			{
			}

			[Token(Token = "0x600104F")]
			[Address(RVA = "0xF21890", Offset = "0xF21890", VA = "0xF21890", Slot = "4")]
			protected override TrTransform CalculateChildXf(List<PbKnot> parentKnots)
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane kReflectionPlane;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected BrushDescriptor m_baseBrush;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F22C", Offset = "0xB2F22C")]
		[SerializeField]
		protected float m_saturationDelta;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F26C", Offset = "0xB2F26C")]
		protected float m_hueDeltaPct;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F2AC", Offset = "0xB2F2AC")]
		[SerializeField]
		protected int m_numRotations;

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x11AAD10", Offset = "0x11AAD10", VA = "0x11AAD10", Slot = "22")]
		protected override void MaybeCreateChildrenImpl()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x11AB054", Offset = "0x11AB054", VA = "0x11AB054")]
		public SnowflakeBrush()
		{
		}
	}
	[Token(Token = "0x2000288")]
	internal class SprayBrush : GeometryBrush
	{
		[Token(Token = "0x40010D2")]
		private const int kVertsInSolid = 4;

		[Token(Token = "0x40010D3")]
		private const int kTrisInSolid = 2;

		[Token(Token = "0x40010D4")]
		private const int kMaxQuadsPerKnot = 500;

		[Token(Token = "0x40010D5")]
		private const int kSaltMaxQuadsPerKnot = 12;

		[Token(Token = "0x40010D6")]
		private const int kSaltMaxSaltsPerQuad = 10;

		[Token(Token = "0x40010D7")]
		private const int kSaltPressure = 0;

		[Token(Token = "0x40010D8")]
		private const int kSaltRotation = 1;

		[Token(Token = "0x40010D9")]
		private const int kSaltPosition = 2;

		[Token(Token = "0x40010DA")]
		private const int kSaltAlpha = 5;

		[Token(Token = "0x40010DB")]
		private const int kSaltAtlas = 6;

		[Token(Token = "0x40010DC")]
		protected const int BR = 0;

		[Token(Token = "0x40010DD")]
		protected const int BL = 1;

		[Token(Token = "0x40010DE")]
		protected const int FR = 2;

		[Token(Token = "0x40010DF")]
		protected const int FL = 3;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector2 m_TextureAtlas00;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Vector2 m_TextureAtlas05;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Vector2 m_TextureAtlas50;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Vector2 m_TextureAtlas55;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<float> m_DecayTimers;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_DecayedKnots;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x11AC638", Offset = "0x11AC638", VA = "0x11AC638")]
		public SprayBrush()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x11AC708", Offset = "0x11AC708", VA = "0x11AC708")]
		protected int CalculateSalt(int knotIndex, int quadIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x11AC740", Offset = "0x11AC740", VA = "0x11AC740", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x11AC778", Offset = "0x11AC778", VA = "0x11AC778", Slot = "11")]
		public override bool AlwaysRebuildPreviewBrush()
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x11AC780", Offset = "0x11AC780", VA = "0x11AC780", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x11AC870", Offset = "0x11AC870", VA = "0x11AC870", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x11AC8F8", Offset = "0x11AC8F8", VA = "0x11AC8F8", Slot = "12")]
		public override void DecayBrush()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x11ACA58", Offset = "0x11ACA58", VA = "0x11ACA58", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x11ACADC", Offset = "0x11ACADC", VA = "0x11ACADC", Slot = "15")]
		protected override bool UpdatePositionImpl(Vector3 pos, Quaternion ori, float pressure)
		{
			return default(bool);
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x11ACBBC", Offset = "0x11ACBBC", VA = "0x11ACBBC", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x11ADA7C", Offset = "0x11ADA7C", VA = "0x11ADA7C", Slot = "13")]
		public override bool NeedsStraightEdgeProxy()
		{
			return default(bool);
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x11ACC0C", Offset = "0x11ACC0C", VA = "0x11ACC0C")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x11ACF1C", Offset = "0x11ACF1C", VA = "0x11ACF1C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x11AD558", Offset = "0x11AD558", VA = "0x11AD558")]
		private void OnChanged_UVs(int iKnot0)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x11AD834", Offset = "0x11AD834", VA = "0x11AD834")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x11ADA84", Offset = "0x11ADA84", VA = "0x11ADA84")]
		private int GetNumQuadsAllowed()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000289")]
	internal class Square3DPrintBrush : GeometryBrush
	{
		[Token(Token = "0x200028A")]
		private class GeometryBasis
		{
			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector3 nStrokeTangent;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly bool strokeInlineWithPlaneNormal;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Vector3 nCrossSectionNormal;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public readonly Vector3 nCrossSectionTangentWidth;

			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public readonly Vector3 nCrossSectionTangentThickness;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public readonly Vector3 widthVectorToEdge;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly Vector3 thicknessVectorToEdge;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public readonly Vector3 widthVectorToBevel;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public readonly Vector3 thicknessVectorToBevel;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public readonly Vector3 capNormalOffset;

			[Token(Token = "0x600107A")]
			[Address(RVA = "0xF2208C", Offset = "0xF2208C", VA = "0xF2208C")]
			public GeometryBasis(Knot knot, Square3DPrintBrush brushInfo, [Optional] Vector3? manuallySetStrokeTangent)
			{
			}
		}

		[Token(Token = "0x40010E6")]
		private const float kRingDenseDistanceMeters_LS = 0.005f;

		[Token(Token = "0x40010E7")]
		private const float kRingSparseDistanceMeters_LS = 0.1f;

		[Token(Token = "0x40010E8")]
		private const float kMaxCapForwardRatio = 0.01f;

		[Token(Token = "0x40010E9")]
		private const float kMinDistKnotsMeters_LS = 0.003f;

		[Token(Token = "0x40010EA")]
		private const float kSwingBreakValue = 0.94f;

		[Token(Token = "0x40010EB")]
		private const float kTwistBreakValue = 0.94f;

		[Token(Token = "0x40010EC")]
		private const float kIndicatorPlaneBreakValue = 0.0087f;

		[Token(Token = "0x40010ED")]
		private const int kNumCapVerts = 4;

		[Token(Token = "0x40010EE")]
		private const int kMaxBevelVerts = 10;

		[Token(Token = "0x40010EF")]
		private const float kDefaultThickness = 0.2f;

		[Token(Token = "0x40010F0")]
		private const float kDefaultBevelSize = 0.01f;

		[Token(Token = "0x40010F1")]
		private const int kDefaultBevelVerts = 2;

		[Token(Token = "0x40010F2")]
		private const float kDefaultTesselation = 1f;

		[Token(Token = "0x40010F3")]
		private const byte kDefaultTransparency = byte.MaxValue;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_bevelRatio;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F2F0", Offset = "0xB2F2F0")]
		private int m_bevelVerts;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_tessellation;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F308", Offset = "0xB2F308")]
		private byte m_transparency;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool m_debugShowSurfaceOrientation;

		[Token(Token = "0x17000252")]
		private int m_vertsPerRing
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x11ADD70", Offset = "0x11ADD70", VA = "0x11ADD70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x11ADCC8", Offset = "0x11ADCC8", VA = "0x11ADCC8")]
		public Square3DPrintBrush()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x11ADCD0", Offset = "0x11ADCD0", VA = "0x11ADCD0")]
		public Square3DPrintBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x11ADD7C", Offset = "0x11ADD7C", VA = "0x11ADD7C", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x11ADE84", Offset = "0x11ADE84", VA = "0x11ADE84", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x11ADF74", Offset = "0x11ADF74", VA = "0x11ADF74")]
		private bool OnChanged_FrameKnots(int iKnot0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x11AE55C", Offset = "0x11AE55C", VA = "0x11AE55C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x11AEC60", Offset = "0x11AEC60", VA = "0x11AEC60")]
		private void AddStartCapVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x11AF144", Offset = "0x11AF144", VA = "0x11AF144")]
		private void AddEndCapVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x11AEE20", Offset = "0x11AEE20", VA = "0x11AEE20")]
		private void AddRingVerts(ref Knot cur, Vector3 pos, GeometryBasis gb)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x11AF510", Offset = "0x11AF510", VA = "0x11AF510")]
		private void AddBevelVerts(ref Knot cur, Vector3 pos, float startAngle, float stopAngle, GeometryBasis gb, Color32 c)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x11AEDC0", Offset = "0x11AEDC0", VA = "0x11AEDC0")]
		private void AddStartCapTris(ref Knot cur, int cap)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x11AF2A4", Offset = "0x11AF2A4", VA = "0x11AF2A4")]
		private void AddEndCapTris(ref Knot cur, int cap)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x11AF2F8", Offset = "0x11AF2F8", VA = "0x11AF2F8")]
		private void AddRingFaceTris(ref Knot cur, int ring, bool cw)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x11AF094", Offset = "0x11AF094", VA = "0x11AF094")]
		private void AddMiddleRingTris(ref Knot cur, int ring)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x11AF9E0", Offset = "0x11AF9E0", VA = "0x11AF9E0")]
		private void AddMiddleRingTrisAcrossFlip(ref Knot cur, int ring)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x11AEF74", Offset = "0x11AEF74", VA = "0x11AEF74")]
		private void AddCapToRingTris(ref Knot cur, int ring, int cap)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x11AF988", Offset = "0x11AF988", VA = "0x11AF988")]
		private void AppendQuad(ref Knot cur, int v0, int v1, int v2, int v3)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x11AFAB4", Offset = "0x11AFAB4", VA = "0x11AFAB4")]
		private void AppendFan(ref Knot cur, int pivot, int start, int end)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x11AF76C", Offset = "0x11AF76C", VA = "0x11AF76C")]
		private static Vector3 EllipseOffset(Vector3 rt, float halfRt, Vector3 up, float halfUp, float theta)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x11AFB3C", Offset = "0x11AFB3C", VA = "0x11AFB3C", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x11AF3AC", Offset = "0x11AF3AC", VA = "0x11AF3AC")]
		private void AppendVertSquare(ref Knot k, Vector3 v, Color32 c)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x11AFBB0", Offset = "0x11AFBB0", VA = "0x11AFBB0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x11AF814", Offset = "0x11AF814", VA = "0x11AF814")]
		protected void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x11AEA10", Offset = "0x11AEA10", VA = "0x11AEA10")]
		protected bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x11AEAE0", Offset = "0x11AEAE0", VA = "0x11AEAE0")]
		private bool AlignmentParityReverses(ref Knot cur, ref Knot prev)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028B")]
	internal class SquareBrush : GeometryBrush
	{
		[Token(Token = "0x4001103")]
		protected const int BBR_B = 0;

		[Token(Token = "0x4001104")]
		protected const int BBR_R = 1;

		[Token(Token = "0x4001105")]
		protected const int BTL_T = 2;

		[Token(Token = "0x4001106")]
		protected const int BTL_L = 3;

		[Token(Token = "0x4001107")]
		protected const int BTR_T = 4;

		[Token(Token = "0x4001108")]
		protected const int BTR_R = 5;

		[Token(Token = "0x4001109")]
		protected const int BBL_B = 6;

		[Token(Token = "0x400110A")]
		protected const int BBL_L = 7;

		[Token(Token = "0x400110B")]
		protected const int FBR_B = 8;

		[Token(Token = "0x400110C")]
		protected const int FBR_R = 9;

		[Token(Token = "0x400110D")]
		protected const int FTL_T = 10;

		[Token(Token = "0x400110E")]
		protected const int FTL_L = 11;

		[Token(Token = "0x400110F")]
		protected const int FTR_T = 12;

		[Token(Token = "0x4001110")]
		protected const int FTR_R = 13;

		[Token(Token = "0x4001111")]
		protected const int FBL_B = 14;

		[Token(Token = "0x4001112")]
		protected const int FBL_L = 15;

		[Token(Token = "0x4001113")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4001114")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x4001115")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x4001116")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4001117")]
		private const float kCrossSectionAspectRatio = 0.375f;

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x11AFC44", Offset = "0x11AFC44", VA = "0x11AFC44")]
		public SquareBrush()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x11AFCB8", Offset = "0x11AFCB8", VA = "0x11AFCB8", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x11AFD54", Offset = "0x11AFD54", VA = "0x11AFD54", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x11AFDB8", Offset = "0x11AFDB8", VA = "0x11AFDB8", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x11AFE20", Offset = "0x11AFE20", VA = "0x11AFE20", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x11AFEF4", Offset = "0x11AFEF4", VA = "0x11AFEF4")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x11B0464", Offset = "0x11B0464", VA = "0x11B0464")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x11B0BB0", Offset = "0x11B0BB0", VA = "0x11B0BB0")]
		private void MySetVert(int iVert, int vp, Vector3 v, Vector3 n)
		{
		}
	}
	[Token(Token = "0x200028C")]
	internal class TetraBrush : GeometryBrush
	{
		[Token(Token = "0x200028D")]
		protected enum UVStyle
		{
			[Token(Token = "0x4001126")]
			Distance,
			[Token(Token = "0x4001127")]
			Unitized
		}

		[Token(Token = "0x4001118")]
		private const float M2U = 10f;

		[Token(Token = "0x4001119")]
		private const float U2M = 0.1f;

		[Token(Token = "0x400111A")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x400111B")]
		private const float kMinimumMove = 0.0050000004f;

		[Token(Token = "0x400111C")]
		private const float kCapAspect = 0.8f;

		[Token(Token = "0x400111D")]
		private const ushort kVertsInClosedCircle = 4;

		[Token(Token = "0x400111E")]
		private const ushort kVertsInCap = 3;

		[Token(Token = "0x400111F")]
		private const float kBreakAngleScalar = 3f;

		[Token(Token = "0x4001120")]
		private const float kSolidMinLengthMeters = 0.002f;

		[Token(Token = "0x4001121")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_BreakAngleMultiplier;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_TextureEdgeChop;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1164FB0", Offset = "0x1164FB0", VA = "0x1164FB0")]
		public TetraBrush()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1164FB8", Offset = "0x1164FB8", VA = "0x1164FB8")]
		public TetraBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1165040", Offset = "0x1165040", VA = "0x1165040", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x11650DC", Offset = "0x11650DC", VA = "0x11650DC", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1165154", Offset = "0x1165154", VA = "0x1165154", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1165184", Offset = "0x1165184", VA = "0x1165184", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1165AD8", Offset = "0x1165AD8", VA = "0x1165AD8")]
		private static Quaternion ComputeMinimalRotationFrame(Vector3 nTangent, Quaternion qPrevFrame)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x116525C", Offset = "0x116525C", VA = "0x116525C")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x116567C", Offset = "0x116567C", VA = "0x116567C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x11661D4", Offset = "0x11661D4", VA = "0x11661D4")]
		private void MakeCapVerts(ref Knot k, int num, Vector3 tip, Vector3 circleCenter, float radius, float u0, float v0, float v1, float uRate, Vector3 up, Vector3 rt, Vector3 fwd)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1165B78", Offset = "0x1165B78", VA = "0x1165B78")]
		private void MakeClosedCircle(ref Knot k, Vector3 center, float radius, int num, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1165D5C", Offset = "0x1165D5C", VA = "0x1165D5C")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n, Color32 c, Vector3 tan, Vector2 uv)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1166060", Offset = "0x1166060", VA = "0x1166060")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1166408", Offset = "0x1166408", VA = "0x1166408")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028E")]
	internal class ThickGeometryBrush : GeometryBrush
	{
		[Token(Token = "0x200028F")]
		protected enum UVStyle
		{
			[Token(Token = "0x400113F")]
			Distance,
			[Token(Token = "0x4001140")]
			Stretch
		}

		[Token(Token = "0x4001128")]
		private const int kVertsInSolid = 12;

		[Token(Token = "0x4001129")]
		private const int kSharedVertsInSolidPair = 6;

		[Token(Token = "0x400112A")]
		private const int kTrisInSolid = 8;

		[Token(Token = "0x400112B")]
		private const int kSharedTrisInSolidPair = 0;

		[Token(Token = "0x400112C")]
		protected const int BRT = 0;

		[Token(Token = "0x400112D")]
		protected const int BRB = 1;

		[Token(Token = "0x400112E")]
		protected const int BMT = 2;

		[Token(Token = "0x400112F")]
		protected const int BMB = 3;

		[Token(Token = "0x4001130")]
		protected const int BLT = 4;

		[Token(Token = "0x4001131")]
		protected const int BLB = 5;

		[Token(Token = "0x4001132")]
		protected const int FRT = 6;

		[Token(Token = "0x4001133")]
		protected const int FRB = 7;

		[Token(Token = "0x4001134")]
		protected const int FMT = 8;

		[Token(Token = "0x4001135")]
		protected const int FMB = 9;

		[Token(Token = "0x4001136")]
		protected const int FLT = 10;

		[Token(Token = "0x4001137")]
		protected const int FLB = 11;

		[Token(Token = "0x4001138")]
		private const float kSolidMinLengthMeters_PS = 0.002f;

		[Token(Token = "0x4001139")]
		private const float kMinMoveLengthMeters_PS = 0.0005f;

		[Token(Token = "0x400113A")]
		private const float kBreakAngleScalar = 2f;

		[Token(Token = "0x400113B")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_TextureEdgeChop;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x116764C", Offset = "0x116764C", VA = "0x116764C")]
		public ThickGeometryBrush()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x11676CC", Offset = "0x11676CC", VA = "0x11676CC", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1167768", Offset = "0x1167768", VA = "0x1167768", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x11677E0", Offset = "0x11677E0", VA = "0x11677E0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1167840", Offset = "0x1167840", VA = "0x1167840", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1167994", Offset = "0x1167994", VA = "0x1167994")]
		private void OnChanged_FrameKnots(int iKnot0)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1167DAC", Offset = "0x1167DAC", VA = "0x1167DAC")]
		private void OnChanged_MakeVertsAndNormals(int iKnot0)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1169048", Offset = "0x1169048", VA = "0x1169048")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x11684BC", Offset = "0x11684BC", VA = "0x11684BC")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x11688C4", Offset = "0x11688C4", VA = "0x11688C4")]
		private void OnChanged_DistanceUVs(int iKnot0)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1168D28", Offset = "0x1168D28", VA = "0x1168D28")]
		private void OnChanged_Tangents(int iKnot0)
		{
		}
	}
	[Token(Token = "0x2000290")]
	internal class TubeBrush : GeometryBrush
	{
		[Token(Token = "0x2000291")]
		protected enum UVStyle
		{
			[Token(Token = "0x4001154")]
			Distance,
			[Token(Token = "0x4001155")]
			Stretch
		}

		[Token(Token = "0x2000292")]
		protected enum ShapeModifier
		{
			[Token(Token = "0x4001157")]
			None,
			[Token(Token = "0x4001158")]
			DoubleSidedTaper,
			[Token(Token = "0x4001159")]
			Sin,
			[Token(Token = "0x400115A")]
			Comet,
			[Token(Token = "0x400115B")]
			Taper,
			[Token(Token = "0x400115C")]
			Petal
		}

		[Token(Token = "0x2000293")]
		internal class LoftedProfile
		{
			[Token(Token = "0x400115D")]
			private const int kNumEndKnots = 5;

			[Token(Token = "0x400115E")]
			private const int kMinKnotCount = 3;

			[Token(Token = "0x400115F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float partialProgress;

			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int knotCount;

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xF26EC4", Offset = "0xF26EC4", VA = "0xF26EC4")]
			public LoftedProfile(GeometryBrush brush, int firstKnotIndex, int lastKnotIndex, float totalLength, float lastLength, List<Knot> knots)
			{
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xF26F98", Offset = "0xF26F98", VA = "0xF26F98")]
			public float ComputeCurve(int iKnot, int firstKnotIndex, int lastKnotIndex, float t, float tPrev)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001141")]
		private const float TWOPI = (float)Math.PI * 2f;

		[Token(Token = "0x4001142")]
		private const float kMinimumMoveMeters_PS = 0.0005f;

		[Token(Token = "0x4001143")]
		private const ushort kUpperBoundVertsPerKnot = 12;

		[Token(Token = "0x4001144")]
		private const float kBreakAngleScalar = 3f;

		[Token(Token = "0x4001145")]
		private const float kSolidAspectRatio = 0.2f;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_CapAspect;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private ushort m_PointsInClosedCircle;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[SerializeField]
		private bool m_EndCaps;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		[SerializeField]
		private bool m_HardEdges;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected UVStyle m_uvStyle;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected ShapeModifier m_ShapeModifier;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_TaperScalar;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_PetalDisplacementAmt;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_PetalDisplacementExp;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_BreakAngleMultiplier;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_VertsInClosedCircle;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_VertsInCap;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Vector3> m_Displacements;

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x123CE68", Offset = "0x123CE68", VA = "0x123CE68")]
		public TubeBrush()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x123CE70", Offset = "0x123CE70", VA = "0x123CE70")]
		public TubeBrush(bool bCanBatch)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x123CF18", Offset = "0x123CF18", VA = "0x123CF18", Slot = "4")]
		protected override void InitBrush(BrushDescriptor desc, TrTransform localPointerXf)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x123D040", Offset = "0x123D040", VA = "0x123D040", Slot = "5")]
		public override void ResetBrushForPreview(TrTransform unused)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x123D0C0", Offset = "0x123D0C0", VA = "0x123D0C0", Slot = "10")]
		public override float GetSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x123D138", Offset = "0x123D138", VA = "0x123D138", Slot = "22")]
		protected override void ControlPointsChanged(int iKnot0)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x123D254", Offset = "0x123D254", VA = "0x123D254")]
		private bool OnChanged_FrameKnots(int iKnot0)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x123D64C", Offset = "0x123D64C", VA = "0x123D64C")]
		private void OnChanged_MakeGeometry(int iKnot0)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x123E058", Offset = "0x123E058", VA = "0x123E058")]
		private void OnChanged_StretchUVs(int iChangedKnot)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x123E7D0", Offset = "0x123E7D0", VA = "0x123E7D0")]
		private int ModifyStretchUVsOfSegment(int initialSegmentKnot)
		{
			return default(int);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x123E148", Offset = "0x123E148", VA = "0x123E148")]
		private void OnChanged_ModifySilhouette(int iChangedKnot)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x123EA84", Offset = "0x123EA84", VA = "0x123EA84")]
		private int ModifySilhouetteOfSegment(int initialSegmentKnot)
		{
			return default(int);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x123E308", Offset = "0x123E308", VA = "0x123E308")]
		private void MakeCapVerts(ref Knot k, int numPoints, Vector3 tip, Vector3 circleCenter, float radius, float u0, float v0, float v1, float uRate, Vector3 up, Vector3 rt, Vector3 fwd)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x123E600", Offset = "0x123E600", VA = "0x123E600")]
		private void MakeClosedCircle(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x123F898", Offset = "0x123F898", VA = "0x123F898")]
		private void MakeClosedCircleSoftEdges(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x123F4B0", Offset = "0x123F4B0", VA = "0x123F4B0")]
		private void MakeClosedCircleHardEdges(ref Knot k, Vector3 center, float radius, int numPoints, Vector3 up, Vector3 rt, Vector3 fwd, float u, float v0, float v1)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x123FA84", Offset = "0x123FA84", VA = "0x123FA84", Slot = "6")]
		public override GeometryPool.VertexLayout GetVertexLayout(BrushDescriptor desc)
		{
			return default(GeometryPool.VertexLayout);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x123F3A4", Offset = "0x123F3A4", VA = "0x123F3A4")]
		private void AppendDisplacement(ref Knot k, Vector3 v)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x123F03C", Offset = "0x123F03C", VA = "0x123F03C")]
		private void AppendVert(ref Knot k, Vector3 v, Vector3 n, Color32 c, Vector3 tan, Vector2 uv, float radius)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x123E65C", Offset = "0x123E65C", VA = "0x123E65C")]
		private void AppendTri(ref Knot k, int t0, int t1, int t2)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x123E238", Offset = "0x123E238", VA = "0x123E238")]
		private bool IsPenultimate(int iKnot)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000294")]
	public class BuildVersionScript : MonoBehaviour
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x12824E0", Offset = "0x12824E0", VA = "0x12824E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x12825F0", Offset = "0x12825F0", VA = "0x12825F0")]
		public BuildVersionScript()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class CameraConfig : MonoBehaviour
	{
		[Token(Token = "0x4001161")]
		private const string CAMERA_FOV = "Camera_Fov";

		[Token(Token = "0x4001162")]
		private const string CAMERA_SMOOTHING = "Camera_Smoothing";

		[Token(Token = "0x4001163")]
		private const string POST_EFFECTS = "Camera_PostEffects";

		[Token(Token = "0x4001164")]
		private const string WATERMARK = "Camera_Watermark";

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float m_Fov;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float m_Smoothing;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool m_PostEffects;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private static bool m_Watermark;

		[Token(Token = "0x400116C")]
		public const float kFovDefault = 80f;

		[Token(Token = "0x400116D")]
		public const float kFovMin = 10f;

		[Token(Token = "0x400116E")]
		public const float kFovMax = 140f;

		[Token(Token = "0x400116F")]
		public const float kSmoothingDefault = 0.98f;

		[Token(Token = "0x4001170")]
		public const float kSmoothingMin = 0.8f;

		[Token(Token = "0x4001171")]
		public const float kSmoothingMax = 1f;

		[Token(Token = "0x17000253")]
		public static float Fov
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x1285024", Offset = "0x1285024", VA = "0x1285024")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000254")]
		public static float Fov01
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x1285070", Offset = "0x1285070", VA = "0x1285070")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x12850CC", Offset = "0x12850CC", VA = "0x12850CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public static float Smoothing
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x1285188", Offset = "0x1285188", VA = "0x1285188")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000256")]
		public static float Smoothing01
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x12851D4", Offset = "0x12851D4", VA = "0x12851D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x1285230", Offset = "0x1285230", VA = "0x1285230")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public static bool PostEffects
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x12852D4", Offset = "0x12852D4", VA = "0x12852D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x1285320", Offset = "0x1285320", VA = "0x1285320")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public static bool Watermark
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x12853BC", Offset = "0x12853BC", VA = "0x12853BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x1285408", Offset = "0x1285408", VA = "0x1285408")]
			set
			{
			}
		}

		[Token(Token = "0x14000051")]
		public static event Action FovChanged
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x1284B04", Offset = "0x1284B04", VA = "0x1284B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C19C", Offset = "0xB3C19C")]
			add
			{
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x1284BC0", Offset = "0x1284BC0", VA = "0x1284BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C1AC", Offset = "0xB3C1AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public static event Action PostEffectsChanged
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x1284C7C", Offset = "0x1284C7C", VA = "0x1284C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C1BC", Offset = "0xB3C1BC")]
			add
			{
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x1284D3C", Offset = "0x1284D3C", VA = "0x1284D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C1CC", Offset = "0xB3C1CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public static event Action WatermarkChanged
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x1284DFC", Offset = "0x1284DFC", VA = "0x1284DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C1DC", Offset = "0xB3C1DC")]
			add
			{
			}
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x1284EBC", Offset = "0x1284EBC", VA = "0x1284EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C1EC", Offset = "0xB3C1EC")]
			remove
			{
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1284F7C", Offset = "0x1284F7C", VA = "0x1284F7C")]
		public static void DeletePrefs()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x12854A4", Offset = "0x12854A4", VA = "0x12854A4")]
		public static void Init()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x12856D8", Offset = "0x12856D8", VA = "0x12856D8")]
		public CameraConfig()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class KnotDescriptor
	{
		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CameraPathKnot knot;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int control;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int? positionKnotIndex;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PathT? pathT;

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x12EA260", Offset = "0x12EA260", VA = "0x12EA260")]
		public void Set(KnotDescriptor k)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x12EA28C", Offset = "0x12EA28C", VA = "0x12EA28C")]
		public void Set(CameraPathKnot _k, int _c, int? _ki, PathT? _t)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x12EA2A0", Offset = "0x12EA2A0", VA = "0x12EA2A0")]
		public KnotDescriptor()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public struct PathT : IEquatable<PathT>
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float t;

		[Token(Token = "0x17000259")]
		public float T
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x114353C", Offset = "0x114353C", VA = "0x114353C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1143510", Offset = "0x1143510", VA = "0x1143510")]
		public static int Cmp(PathT lhs, PathT rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1143544", Offset = "0x1143544", VA = "0x1143544")]
		public PathT(float _t)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x114354C", Offset = "0x114354C", VA = "0x114354C")]
		public PathT(PathT pt)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1143554", Offset = "0x1143554", VA = "0x1143554")]
		public void Zero()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x114355C", Offset = "0x114355C", VA = "0x114355C")]
		public void Clamp(int positionCount)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x11435BC", Offset = "0x11435BC", VA = "0x11435BC")]
		public int Floor()
		{
			return default(int);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x11435C8", Offset = "0x11435C8", VA = "0x11435C8")]
		public static bool operator <(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x11435F8", Offset = "0x11435F8", VA = "0x11435F8")]
		public static bool operator >(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x114362C", Offset = "0x114362C", VA = "0x114362C")]
		public static bool operator <=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1143660", Offset = "0x1143660", VA = "0x1143660")]
		public static bool operator >=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1143694", Offset = "0x1143694", VA = "0x1143694")]
		public static bool operator ==(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x11436C8", Offset = "0x11436C8", VA = "0x11436C8")]
		public static bool operator !=(PathT lhs, PathT rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x11436FC", Offset = "0x11436FC", VA = "0x11436FC", Slot = "4")]
		public bool Equals(PathT other)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1143730", Offset = "0x1143730", VA = "0x1143730", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x11437C4", Offset = "0x11437C4", VA = "0x11437C4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000298")]
	public class KnotSegmentStep
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 start_RS;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 end_RS;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length_CS;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x12EA2B0", Offset = "0x12EA2B0", VA = "0x12EA2B0")]
		public float RefreshLength()
		{
			return default(float);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x12EA34C", Offset = "0x12EA34C", VA = "0x12EA34C")]
		public KnotSegmentStep()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class KnotSegment
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineRenderer renderer;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds extents;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KnotSegmentStep[] steps;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x12EA2A8", Offset = "0x12EA2A8", VA = "0x12EA2A8")]
		public KnotSegment()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class CameraPath
	{
		[Token(Token = "0x200029B")]
		public enum EndType
		{
			[Token(Token = "0x4001191")]
			None,
			[Token(Token = "0x4001192")]
			Head,
			[Token(Token = "0x4001193")]
			Tail
		}

		[Token(Token = "0x200029C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29518", Offset = "0xB29518")]
		private sealed class <DelayRefresh>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraPath <>4__this;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600111B")]
				[Address(RVA = "0x1124C5C", Offset = "0x1124C5C", VA = "0x1124C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600111D")]
				[Address(RVA = "0x1124CA4", Offset = "0x1124CA4", VA = "0x1124CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001118")]
			[Address(RVA = "0x1124A38", Offset = "0x1124A38", VA = "0x1124A38")]
			[DebuggerHidden]
			public <DelayRefresh>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001119")]
			[Address(RVA = "0x1124A64", Offset = "0x1124A64", VA = "0x1124A64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600111A")]
			[Address(RVA = "0x1124A68", Offset = "0x1124A68", VA = "0x1124A68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600111C")]
			[Address(RVA = "0x1124C64", Offset = "0x1124C64", VA = "0x1124C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29528", Offset = "0xB29528")]
		private sealed class <>c
		{
			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CameraPathPositionKnot, CameraPathPositionKnotMetadata> <>9__76_0;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<CameraPathRotationKnot, CameraPathRotationKnotMetadata> <>9__76_1;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<CameraPathSpeedKnot, CameraPathSpeedKnotMetadata> <>9__76_2;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<CameraPathFovKnot, CameraPathFovKnotMetadata> <>9__76_3;

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x11249C0", Offset = "0x11249C0", VA = "0x11249C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x11249C8", Offset = "0x11249C8", VA = "0x11249C8")]
			internal CameraPathPositionKnotMetadata <SerializeToCameraPathMetadata>b__76_0(CameraPathPositionKnot k)
			{
				return null;
			}

			[Token(Token = "0x6001121")]
			[Address(RVA = "0x11249E4", Offset = "0x11249E4", VA = "0x11249E4")]
			internal CameraPathRotationKnotMetadata <SerializeToCameraPathMetadata>b__76_1(CameraPathRotationKnot k)
			{
				return null;
			}

			[Token(Token = "0x6001122")]
			[Address(RVA = "0x1124A00", Offset = "0x1124A00", VA = "0x1124A00")]
			internal CameraPathSpeedKnotMetadata <SerializeToCameraPathMetadata>b__76_2(CameraPathSpeedKnot k)
			{
				return null;
			}

			[Token(Token = "0x6001123")]
			[Address(RVA = "0x1124A1C", Offset = "0x1124A1C", VA = "0x1124A1C")]
			internal CameraPathFovKnotMetadata <SerializeToCameraPathMetadata>b__76_3(CameraPathFovKnot k)
			{
				return null;
			}
		}

		[Token(Token = "0x400117E")]
		private const int kNumSegmentPoints = 30;

		[Token(Token = "0x400117F")]
		private const float kEpsilon = 0.0001f;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CameraPathKnot> AllKnots;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CameraPathPositionKnot> PositionKnots;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CameraPathRotationKnot> RotationKnots;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<CameraPathSpeedKnot> SpeedKnots;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<CameraPathFovKnot> FovKnots;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<KnotSegment> Segments;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_Widget;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_SegmentRadius;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SegmentStepInterval;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_EndRadius;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_DefaultSpeed;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_DefaultFov;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_PathLoops;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private KnotDescriptor m_LastPlacedKnotInfo;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_GizmoBasePos;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_GizmoProjectedPosition;

		[Token(Token = "0x1700025A")]
		public bool PathLoops
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x15A09E0", Offset = "0x15A09E0", VA = "0x15A09E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x15A09E8", Offset = "0x15A09E8", VA = "0x15A09E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public int NumPositionKnots
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x15A0B2C", Offset = "0x15A0B2C", VA = "0x15A0B2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025C")]
		public KnotDescriptor LastPlacedKnotInfo
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x15A0BBC", Offset = "0x15A0BBC", VA = "0x15A0BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x15A0BC4", Offset = "0x15A0BC4", VA = "0x15A0BC4")]
		public CameraPath(Transform widget, float segmentRad, float endRad, float speed, float fov)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x15A0DF4", Offset = "0x15A0DF4", VA = "0x15A0DF4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x15A109C", Offset = "0x15A109C", VA = "0x15A109C")]
		public void SetKnotsActive(bool active)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x15A16F0", Offset = "0x15A16F0", VA = "0x15A16F0")]
		public bool IsPositionNearHead(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x15A17B4", Offset = "0x15A17B4", VA = "0x15A17B4")]
		public bool ShouldPathLoop()
		{
			return default(bool);
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x15A1530", Offset = "0x15A1530", VA = "0x15A1530")]
		public void ValidatePathLooping()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x15A1870", Offset = "0x15A1870", VA = "0x15A1870")]
		public static KnotSegment CreateSegment(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x15A1B24", Offset = "0x15A1B24", VA = "0x15A1B24")]
		public CameraPathSpeedKnot CreateSpeedKnot(PathT pathT)
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x15A1EA8", Offset = "0x15A1EA8", VA = "0x15A1EA8")]
		public void AddSpeedKnot(CameraPathSpeedKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x15A225C", Offset = "0x15A225C", VA = "0x15A225C")]
		public CameraPathFovKnot CreateFovKnot(PathT pathT)
		{
			return null;
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x15A23A8", Offset = "0x15A23A8", VA = "0x15A23A8")]
		public void AddFovKnot(CameraPathFovKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x15A25C0", Offset = "0x15A25C0", VA = "0x15A25C0")]
		public CameraPathRotationKnot CreateRotationKnot(PathT pathT, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x15A2704", Offset = "0x15A2704", VA = "0x15A2704")]
		public void AddRotationKnot(CameraPathRotationKnot knot, PathT pathT)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x15A2914", Offset = "0x15A2914", VA = "0x15A2914")]
		public void RefreshRotationKnotPolarities()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x15A2ADC", Offset = "0x15A2ADC", VA = "0x15A2ADC")]
		public CameraPathPositionKnot CreatePositionKnot(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x15A2C14", Offset = "0x15A2C14", VA = "0x15A2C14")]
		public void InsertPositionKnot(CameraPathPositionKnot knot, int index)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x15A3164", Offset = "0x15A3164", VA = "0x15A3164")]
		public void SortKnotList(CameraPathKnot.Type type)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x15A33D4", Offset = "0x15A33D4", VA = "0x15A33D4")]
		private static int CompareKnotsByPathT(CameraPathKnot a, CameraPathKnot b)
		{
			return default(int);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x15A2DC0", Offset = "0x15A2DC0", VA = "0x15A2DC0")]
		private void RefreshPathAfterPositionKnotAdded(int insertIndex)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x15A3710", Offset = "0x15A3710", VA = "0x15A3710")]
		public CameraPathKnot GetKnotAtPosition(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x15A39A4", Offset = "0x15A39A4", VA = "0x15A39A4")]
		public void RemoveKnot(CameraPathKnot knot)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x15A4158", Offset = "0x15A4158", VA = "0x15A4158")]
		public List<CameraPathKnot> GetKnotsOrphanedByKnotRemoval(CameraPathKnot knot)
		{
			return null;
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x15A3D8C", Offset = "0x15A3D8C", VA = "0x15A3D8C")]
		private void RefreshPathAfterPositionRemoval(int removalIndex)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x15A4620", Offset = "0x15A4620", VA = "0x15A4620")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C1FC", Offset = "0xB3C1FC")]
		public IEnumerator DelayRefresh()
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x15A468C", Offset = "0x15A468C", VA = "0x15A468C")]
		public void RefreshFromPathKnotMovement(int pathKnotIndex)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x15A3524", Offset = "0x15A3524", VA = "0x15A3524")]
		private void RefreshRotationKnot(int index)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x15A35C0", Offset = "0x15A35C0", VA = "0x15A35C0")]
		private void RefreshSpeedKnot(int index)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x15A3668", Offset = "0x15A3668", VA = "0x15A3668")]
		private void RefreshFovKnot(int index)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x15A120C", Offset = "0x15A120C", VA = "0x15A120C")]
		public void RefreshSegment(int knot)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x15A48D8", Offset = "0x15A48D8", VA = "0x15A48D8")]
		public void RefreshSegmentVisuals(Vector3 segPos, KnotSegment seg, CameraPathTool.ExtendPathType extendType)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x15A4DA0", Offset = "0x15A4DA0", VA = "0x15A4DA0")]
		public EndType IsPositionNearEnd(Vector3 pos)
		{
			return default(EndType);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x15A33FC", Offset = "0x15A33FC", VA = "0x15A33FC")]
		private void RecomputeKnotPlacementAfterPositionAdded(CameraPathKnot knot, int addedKnotIndex, float[] prevSegmentLengths, float[] newSegmentLengths)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x15A44A0", Offset = "0x15A44A0", VA = "0x15A44A0")]
		private void RecomputeKnotPlacementAfterPositionRemoved(CameraPathKnot knot, int removedKnotIndex, float[] prevSegmentLengths, float[] newSegmentLengths)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x15A50AC", Offset = "0x15A50AC", VA = "0x15A50AC")]
		public Vector3? ProjectPositionOntoPath(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x15A5454", Offset = "0x15A5454", VA = "0x15A5454")]
		public bool ProjectPositionOnToPath(Vector3 pos, out PathT pathT, out Vector3 error)
		{
			return default(bool);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x15A5360", Offset = "0x15A5360", VA = "0x15A5360")]
		private float CalculateTFromPointOnSegment(Vector3 segmentStart, Vector3 segmentEnd, Vector3 posOnSegment)
		{
			return default(float);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x15A57D8", Offset = "0x15A57D8", VA = "0x15A57D8")]
		public PathT MaybeSnapPathTToEnd(PathT pathT, float snapDistance)
		{
			return default(PathT);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x15A20C0", Offset = "0x15A20C0", VA = "0x15A20C0")]
		public float GetSegmentDistanceToT(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x15A5978", Offset = "0x15A5978", VA = "0x15A5978")]
		public float GetRatioToPathDistance(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x15A4F24", Offset = "0x15A4F24", VA = "0x15A4F24")]
		private PathT GetPathTFromDistance(int segment, float distance)
		{
			return default(PathT);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x15A1C70", Offset = "0x15A1C70", VA = "0x15A1C70")]
		public Vector3 GetPosition(PathT pathT)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x15A5AB8", Offset = "0x15A5AB8", VA = "0x15A5AB8")]
		private float GetUnsignedDistanceFromTtoT(PathT t1, PathT t2)
		{
			return default(float);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x15A5D08", Offset = "0x15A5D08", VA = "0x15A5D08")]
		private Vector4 CalculateHermite(float t, Vector4 pos0, Vector4 tangent0, Vector4 pos1, Vector4 tangent1)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x15A4D04", Offset = "0x15A4D04", VA = "0x15A4D04")]
		private Vector3 CalculateHermite(float t, Vector3 pos0, Vector3 tangent0, Vector3 pos1, Vector3 tangent1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x15A5F3C", Offset = "0x15A5F3C", VA = "0x15A5F3C")]
		private float CalculateHermite(float t, float pos0, float tangent0, float pos1, float tangent1)
		{
			return default(float);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x15A5F90", Offset = "0x15A5F90", VA = "0x15A5F90")]
		public Quaternion GetRotation(PathT pathT)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x15A6AF8", Offset = "0x15A6AF8", VA = "0x15A6AF8")]
		public float GetSpeed(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x15A7134", Offset = "0x15A7134", VA = "0x15A7134")]
		public float GetFov(PathT pathT)
		{
			return default(float);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x15A6AB8", Offset = "0x15A6AB8", VA = "0x15A6AB8")]
		private int ClampIndex(int index, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x15A779C", Offset = "0x15A779C", VA = "0x15A779C")]
		public bool MoveAlongPath(float movementAmount, PathT startT, out PathT endT)
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x15A7984", Offset = "0x15A7984", VA = "0x15A7984")]
		public CameraPathMetadata SerializeToCameraPathMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x15A7DE4", Offset = "0x15A7DE4", VA = "0x15A7DE4")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x15A8020", Offset = "0x15A8020", VA = "0x15A8020")]
		private void GizmoDrawBox(Bounds bounds)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x15A833C", Offset = "0x15A833C", VA = "0x15A833C")]
		private void GizmoDrawBox(Vector3 posA, Vector3 posB)
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class CameraPathCaptureRig : MonoBehaviour
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Object;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Camera;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraPathPreviewWidget m_Widget;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ScreenshotManager m_Manager;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UsdPathSerializer m_VideoUsdSerializer;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_CameraComponent;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 m_CameraClipPlanesBase;

		[Token(Token = "0x1700025F")]
		public bool Enabled
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x15A9048", Offset = "0x15A9048", VA = "0x15A9048")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000260")]
		public ScreenshotManager Manager
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x15A9064", Offset = "0x15A9064", VA = "0x15A9064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x15A906C", Offset = "0x15A906C", VA = "0x15A906C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x15A9310", Offset = "0x15A9310", VA = "0x15A9310")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x15A95B4", Offset = "0x15A95B4", VA = "0x15A95B4")]
		public void Init()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x15A96F0", Offset = "0x15A96F0", VA = "0x15A96F0")]
		public void SetPreviewWidgetCompletionPercent(float zeroToOne)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x15A97D4", Offset = "0x15A97D4", VA = "0x15A97D4")]
		public void OverridePreviewWidgetPathT(PathT? t)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x15A97F4", Offset = "0x15A97F4", VA = "0x15A97F4")]
		public float? GetCompletionOfCameraAlongPath()
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x15A98D8", Offset = "0x15A98D8", VA = "0x15A98D8")]
		public void UpdateCameraTransform(Transform xf)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x15A9964", Offset = "0x15A9964", VA = "0x15A9964")]
		public void SetFov(float fov)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x15A9980", Offset = "0x15A9980", VA = "0x15A9980")]
		public void RecordPath()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x15A9984", Offset = "0x15A9984", VA = "0x15A9984")]
		public void StopRecordingPath(bool saveCapture)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x15A9EC0", Offset = "0x15A9EC0", VA = "0x15A9EC0")]
		private void RefreshVisibility()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x15A9F88", Offset = "0x15A9F88", VA = "0x15A9F88")]
		private void OnPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x15A9FE0", Offset = "0x15A9FE0", VA = "0x15A9FE0")]
		private void OnToolChanged()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x15AA08C", Offset = "0x15AA08C", VA = "0x15AA08C")]
		public CameraPathCaptureRig()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class CameraPathFovKnot : CameraPathKnot
	{
		[Token(Token = "0x20002A0")]
		public enum ControlType
		{
			[Token(Token = "0x40011AE")]
			Knot,
			[Token(Token = "0x40011AF")]
			FovControl
		}

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_FovControlColor;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_FovControlColorInactive;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_FovLineRenderer;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject m_FovControl;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Renderer m_FovControlMesh;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected TextMeshPro m_Text;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_TextAnchor;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected Vector2 m_FovRange;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected float m_FovMaxVisualLength;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_FovValue;

		[Token(Token = "0x17000261")]
		public float CameraFov
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x15A7788", Offset = "0x15A7788", VA = "0x15A7788")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000262")]
		public float FovValue
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x15AA094", Offset = "0x15AA094", VA = "0x15AA094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x15AA09C", Offset = "0x15AA09C", VA = "0x15AA09C")]
			set
			{
			}
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x15AA13C", Offset = "0x15AA13C", VA = "0x15AA13C", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x15AA170", Offset = "0x15AA170", VA = "0x15AA170", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x15AA494", Offset = "0x15AA494", VA = "0x15AA494")]
		public float GetFovValueFromY(float y_GS)
		{
			return default(float);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x15AA54C", Offset = "0x15AA54C", VA = "0x15AA54C", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x15AA6F8", Offset = "0x15AA6F8", VA = "0x15AA6F8", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x15AA900", Offset = "0x15AA900", VA = "0x15AA900", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x15AAB94", Offset = "0x15AAB94", VA = "0x15AAB94", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x15AADC4", Offset = "0x15AADC4", VA = "0x15AADC4", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x15AAEE4", Offset = "0x15AAEE4", VA = "0x15AAEE4", Slot = "12")]
		public override bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x15AB00C", Offset = "0x15AB00C", VA = "0x15AB00C")]
		public CameraPathFovKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x15AB0F8", Offset = "0x15AB0F8", VA = "0x15AB0F8")]
		public CameraPathFovKnot()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class CameraPathKnot : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		public enum Type
		{
			[Token(Token = "0x40011BD")]
			Position,
			[Token(Token = "0x40011BE")]
			Rotation,
			[Token(Token = "0x40011BF")]
			Speed,
			[Token(Token = "0x40011C0")]
			Fov,
			[Token(Token = "0x40011C1")]
			Invalid
		}

		[Token(Token = "0x40011B0")]
		public const int kDefaultControl = 0;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_ActivePathVisuals;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject m_InactivePathVisuals;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_GrabRadius;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected Color m_ActiveColor;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected Color m_InactiveColor;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public PathT PathT;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float m_DistanceAlongSegment;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Type m_Type;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Renderer[] m_Meshes;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<MeshFilter> m_RenderHighlights;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected List<MeshFilter> m_InactiveRenderHighlights;

		[Token(Token = "0x17000263")]
		public Type KnotType
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x15AB120", Offset = "0x15AB120", VA = "0x15AB120")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x17000264")]
		public float DistanceAlongSegment
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x15AB128", Offset = "0x15AB128", VA = "0x15AB128")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x15AB130", Offset = "0x15AB130", VA = "0x15AB130")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public Transform KnotXf
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x15A48D0", Offset = "0x15A48D0", VA = "0x15A48D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x15AA168", Offset = "0x15AA168", VA = "0x15AA168", Slot = "4")]
		public virtual Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x15AA1A8", Offset = "0x15AA1A8", VA = "0x15AA1A8", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x15AB184", Offset = "0x15AB184", VA = "0x15AB184")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x15AB218", Offset = "0x15AB218", VA = "0x15AB218", Slot = "6")]
		protected virtual void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x15A4884", Offset = "0x15A4884", VA = "0x15A4884")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x15AB268", Offset = "0x15AB268", VA = "0x15AB268", Slot = "7")]
		public virtual void RefreshVisuals()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x15AB138", Offset = "0x15AB138", VA = "0x15AB138")]
		public void SetActivePathVisuals(bool onActivePath)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x15AB26C", Offset = "0x15AB26C", VA = "0x15AB26C", Slot = "8")]
		public virtual void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x15AA9D4", Offset = "0x15AA9D4", VA = "0x15AA9D4", Slot = "9")]
		public virtual void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x15AAC40", Offset = "0x15AAC40", VA = "0x15AAC40", Slot = "10")]
		public virtual void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x15AB33C", Offset = "0x15AB33C", VA = "0x15AB33C", Slot = "11")]
		public virtual float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x15AAF90", Offset = "0x15AAF90", VA = "0x15AAF90", Slot = "12")]
		public virtual bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x15AB10C", Offset = "0x15AB10C", VA = "0x15AB10C")]
		public CameraPathKnot()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class CameraPathPositionKnot : CameraPathKnot
	{
		[Token(Token = "0x20002A4")]
		public enum ControlType
		{
			[Token(Token = "0x40011CC")]
			Knot,
			[Token(Token = "0x40011CD")]
			TangentControlForward,
			[Token(Token = "0x40011CE")]
			TangentControlBack
		}

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_TangentControlColor;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_TangentControlColorInactive;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_TangentRenderer;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject[] m_TangentControl;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected GameObject[] m_TangentControlMesh;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_TangentScalar;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_KnotMesh;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_TangentMagnitude;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 m_BaseKnotMeshLocalScale;

		[Token(Token = "0x17000266")]
		public Vector3 ScaledTangent
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x15A4C38", Offset = "0x15A4C38", VA = "0x15A4C38")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000267")]
		public float TangentMagnitude
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x15AB420", Offset = "0x15AB420", VA = "0x15AB420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x15AB428", Offset = "0x15AB428", VA = "0x15AB428")]
			set
			{
			}
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x15AB430", Offset = "0x15AB430", VA = "0x15AB430", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x15AB4A8", Offset = "0x15AB4A8", VA = "0x15AB4A8", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x15AB4F8", Offset = "0x15AB4F8", VA = "0x15AB4F8")]
		public float GetTangentMagnitudeFromControlXf(TrTransform controlXf)
		{
			return default(float);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x15AB5D4", Offset = "0x15AB5D4", VA = "0x15AB5D4", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x15AB7F8", Offset = "0x15AB7F8", VA = "0x15AB7F8", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x15AB9F8", Offset = "0x15AB9F8", VA = "0x15AB9F8", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x15ABB48", Offset = "0x15ABB48", VA = "0x15ABB48", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x15ABC88", Offset = "0x15ABC88", VA = "0x15ABC88", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x15A0B78", Offset = "0x15A0B78", VA = "0x15A0B78")]
		public void SetVisuallySpecial(bool special)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x15ABE34", Offset = "0x15ABE34", VA = "0x15ABE34")]
		public CameraPathPositionKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x15ABF18", Offset = "0x15ABF18", VA = "0x15ABF18")]
		public CameraPathPositionKnot()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class CameraPathRotationKnot : CameraPathKnot
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x15AD678", Offset = "0x15AD678", VA = "0x15AD678", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x15AD6A0", Offset = "0x15AD6A0", VA = "0x15AD6A0")]
		public CameraPathRotationKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x15AD784", Offset = "0x15AD784", VA = "0x15AD784")]
		public CameraPathRotationKnot()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class CameraPathSpeedKnot : CameraPathKnot
	{
		[Token(Token = "0x20002A7")]
		public enum ControlType
		{
			[Token(Token = "0x40011DB")]
			Knot,
			[Token(Token = "0x40011DC")]
			SpeedControl
		}

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float kMinSpeed;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Color m_SpeedControlColor;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Color m_SpeedControlColorInactive;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected LineRenderer m_SpeedLineRenderer;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected GameObject m_SpeedControl;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Renderer m_SpeedControlMesh;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected TextMeshPro m_Text;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected Transform m_TextAnchor;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected float m_MaxSpeed;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		protected float m_SpeedMaxVisualLength;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_SpeedValue;

		[Token(Token = "0x17000268")]
		public float CameraSpeed
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x15A70BC", Offset = "0x15A70BC", VA = "0x15A70BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000269")]
		public float SpeedValue
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x15AD798", Offset = "0x15AD798", VA = "0x15AD798")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x15AD7A0", Offset = "0x15AD7A0", VA = "0x15AD7A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x15AD834", Offset = "0x15AD834", VA = "0x15AD834", Slot = "4")]
		public override Transform GetGrabTransform(int control)
		{
			return null;
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x15AD860", Offset = "0x15AD860", VA = "0x15AD860", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x15AD894", Offset = "0x15AD894", VA = "0x15AD894")]
		public float GetSpeedValueFromY(float y_GS)
		{
			return default(float);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x15AD94C", Offset = "0x15AD94C", VA = "0x15AD94C", Slot = "7")]
		public override void RefreshVisuals()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x15ADAF8", Offset = "0x15ADAF8", VA = "0x15ADAF8", Slot = "8")]
		public override void ActivateTint(bool active)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x15ADD00", Offset = "0x15ADD00", VA = "0x15ADD00", Slot = "9")]
		public override void RegisterHighlight(int control, bool showInactive = false)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x15ADDD4", Offset = "0x15ADDD4", VA = "0x15ADDD4", Slot = "10")]
		public override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x15ADE80", Offset = "0x15ADE80", VA = "0x15ADE80", Slot = "11")]
		public override float CollisionWithPoint(Vector3 point, out int control)
		{
			return default(float);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x15ADFA0", Offset = "0x15ADFA0", VA = "0x15ADFA0", Slot = "12")]
		public override bool KnotCollisionWithPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x15AE04C", Offset = "0x15AE04C", VA = "0x15AE04C")]
		public CameraPathSpeedKnotMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x15AE138", Offset = "0x15AE138", VA = "0x15AE138")]
		public CameraPathSpeedKnot()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class CameraPathTinter : MonoBehaviour
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<KnotSegment> m_TintedSegments;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<CameraPathKnot> m_TintedKnots;

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x15AE1A0", Offset = "0x15AE1A0", VA = "0x15AE1A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x15AE250", Offset = "0x15AE250", VA = "0x15AE250")]
		private void Update()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x15AE444", Offset = "0x15AE444", VA = "0x15AE444")]
		public void TintKnot(CameraPathKnot knot)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x15AE4D0", Offset = "0x15AE4D0", VA = "0x15AE4D0")]
		public void TintSegment(KnotSegment segment)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x15AE574", Offset = "0x15AE574", VA = "0x15AE574")]
		public CameraPathTinter()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class CameraProjection : MonoBehaviour
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x13133B8", Offset = "0x13133B8", VA = "0x13133B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1313500", Offset = "0x1313500", VA = "0x1313500")]
		public CameraProjection()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class CanvasScript : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		public delegate void PoseChangedEventHandler(TrTransform prev, TrTransform current);

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_BatchKeywords;

		[Token(Token = "0x40011E0")]
		private const float kScaleMin = 0.0001f;

		[Token(Token = "0x40011E1")]
		private const float kScaleMax = 10000f;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_bInitialized;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BatchManager m_BatchManager;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TransformExtensions.RelativeAccessor AsCanvas;

		[Token(Token = "0x1700026A")]
		public BatchManager BatchManager
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x1313A14", Offset = "0x1313A14", VA = "0x1313A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public TrTransform Pose
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x1313A1C", Offset = "0x1313A1C", VA = "0x1313A1C")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x1313ABC", Offset = "0x1313ABC", VA = "0x1313ABC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public TrTransform LocalPose
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0x1313C68", Offset = "0x1313C68", VA = "0x1313C68")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x1313D08", Offset = "0x1313D08", VA = "0x1313D08")]
			set
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event PoseChangedEventHandler PoseChanged
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x130F518", Offset = "0x130F518", VA = "0x130F518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2AC", Offset = "0xB3C2AC")]
			add
			{
			}
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x130F670", Offset = "0x130F670", VA = "0x130F670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2BC", Offset = "0xB3C2BC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1313E7C", Offset = "0x1313E7C", VA = "0x1313E7C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1313ED8", Offset = "0x1313ED8", VA = "0x1313ED8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1313F84", Offset = "0x1313F84", VA = "0x1313F84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1313FA0", Offset = "0x1313FA0", VA = "0x1313FA0")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1313FBC", Offset = "0x1313FBC", VA = "0x1313FBC")]
		public Bounds GetCanvasBoundingBox(bool onlyActive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x131400C", Offset = "0x131400C", VA = "0x131400C")]
		public void OnScenePoseChanged(TrTransform previousScene, TrTransform currentScene)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x131419C", Offset = "0x131419C", VA = "0x131419C")]
		public CanvasScript()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class CircleGesture
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_InitPosition;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_MinCircleSize;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_BeginGestureDist;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CloseLoopDist;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_StepDist;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_MaxAngle;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_LastCurrentPosition;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_WorkingPosition;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_CircleStarted;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_CircleSizeValid;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_CircleAnglesValid;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_LastStepNormalized;

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x13162E8", Offset = "0x13162E8", VA = "0x13162E8")]
		public void InitGesture(Vector3 initPos, float minSize, float beginDist, float closeLoopDist, float step, float maxAngle)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x13162FC", Offset = "0x13162FC", VA = "0x13162FC")]
		public void ResetGesture()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x131634C", Offset = "0x131634C", VA = "0x131634C")]
		public void UpdateGesture(Vector3 currentPos)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1316508", Offset = "0x1316508", VA = "0x1316508")]
		public bool IsGestureComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1316574", Offset = "0x1316574", VA = "0x1316574")]
		public bool DidGestureSucceed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1316594", Offset = "0x1316594", VA = "0x1316594")]
		public CircleGesture()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class ClipboardManager : MonoBehaviour
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F684", Offset = "0xB2F684")]
		private static ClipboardManager <Instance>k__BackingField;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_DuplicateOffset;

		[Token(Token = "0x1700026D")]
		public static ClipboardManager Instance
		{
			[Token(Token = "0x6001192")]
			[Address(RVA = "0x1316DB0", Offset = "0x1316DB0", VA = "0x1316DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2CC", Offset = "0xB3C2CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x1316DFC", Offset = "0x1316DFC", VA = "0x1316DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2DC", Offset = "0xB3C2DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public bool CanCopy
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0x1316E4C", Offset = "0x1316E4C", VA = "0x1316E4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1316EA4", Offset = "0x1316EA4", VA = "0x1316EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1316EF4", Offset = "0x1316EF4", VA = "0x1316EF4")]
		public void DuplicateSelection(bool offsetDuplicate = false)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1317198", Offset = "0x1317198", VA = "0x1317198")]
		public ClipboardManager()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class Clock : MonoBehaviour
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_Text;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x13171A0", Offset = "0x13171A0", VA = "0x13171A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x13172F4", Offset = "0x13172F4", VA = "0x13172F4")]
		public Clock()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class ColorController : MonoBehaviour
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Color m_DefaultColor;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool m_Hdr;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected Color m_CurrentColor;

		[Token(Token = "0x1700026F")]
		public bool IsHdr
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x1317718", Offset = "0x1317718", VA = "0x1317718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		public virtual Color CurrentColor
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x1317720", Offset = "0x1317720", VA = "0x1317720", Slot = "4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x131772C", Offset = "0x131772C", VA = "0x131772C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action<ColorPickerMode, Vector3> CurrentColorSet
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x13175D8", Offset = "0x13175D8", VA = "0x13175D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2EC", Offset = "0xB3C2EC")]
			add
			{
			}
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x1317678", Offset = "0x1317678", VA = "0x1317678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C2FC", Offset = "0xB3C2FC")]
			remove
			{
			}
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1317CE4", Offset = "0x1317CE4", VA = "0x1317CE4", Slot = "6")]
		public virtual void SetCurrentColorSilently(Color color)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1317C44", Offset = "0x1317C44", VA = "0x1317C44")]
		protected void TriggerCurrentColorSet(ColorPickerMode mode, Vector3 rawColor)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1317CF0", Offset = "0x1317CF0", VA = "0x1317CF0")]
		public void SetColorToDefault()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1317D04", Offset = "0x1317D04", VA = "0x1317D04")]
		public ColorController()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class BaseCommand : IDisposable
	{
		[Serializable]
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29538", Offset = "0xB29538")]
		private sealed class <>c
		{
			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BaseCommand, bool> <>9__5_0;

			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x11242D4", Offset = "0x11242D4", VA = "0x11242D4")]
			public <>c()
			{
			}

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x11242DC", Offset = "0x11242DC", VA = "0x11242DC")]
			internal bool <get_NeedsSave>b__5_0(BaseCommand c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<BaseCommand> m_Children;

		[Token(Token = "0x17000271")]
		public virtual bool NeedsSave
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x143C558", Offset = "0x143C558", VA = "0x143C558", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		protected virtual bool IsNoop
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x143C6A8", Offset = "0x143C6A8", VA = "0x143C6A8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x143C3E0", Offset = "0x143C3E0", VA = "0x143C3E0")]
		protected static Vector3 GetPositionForCommand(Stroke stroke)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x143C454", Offset = "0x143C454", VA = "0x143C454")]
		protected static Vector3 GetPositionForCommand(Stroke[] strokes)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x143C494", Offset = "0x143C494", VA = "0x143C494")]
		public BaseCommand([Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x143C6B0", Offset = "0x143C6B0", VA = "0x143C6B0")]
		public void Undo()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x143C9B0", Offset = "0x143C9B0", VA = "0x143C9B0", Slot = "7")]
		protected virtual void OnUndo()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x143C9B4", Offset = "0x143C9B4", VA = "0x143C9B4")]
		public void Redo()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x143CAD8", Offset = "0x143CAD8", VA = "0x143CAD8", Slot = "8")]
		protected virtual void OnRedo()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x143CADC", Offset = "0x143CADC", VA = "0x143CADC", Slot = "9")]
		public virtual bool Merge(BaseCommand other)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x143CAFC", Offset = "0x143CAFC", VA = "0x143CAFC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x143CDFC", Offset = "0x143CDFC", VA = "0x143CDFC", Slot = "10")]
		protected virtual void OnDispose()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class BaseKnotCommand : BaseCommand
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F6E4", Offset = "0xB2F6E4")]
		private readonly bool <MergesWithCreateCommand>k__BackingField;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F6F4", Offset = "0xB2F6F4")]
		private readonly CameraPathKnot <Knot>k__BackingField;

		[Token(Token = "0x17000273")]
		public bool MergesWithCreateCommand
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x143E8FC", Offset = "0x143E8FC", VA = "0x143E8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C30C", Offset = "0xB3C30C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		public CameraPathKnot Knot
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x143E904", Offset = "0x143E904", VA = "0x143E904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C31C", Offset = "0xB3C31C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x143E90C", Offset = "0x143E90C", VA = "0x143E90C")]
		public BaseKnotCommand(CameraPathKnot knot, bool mergesWithCreateCommand, BaseCommand parent)
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class BaseKnotCommand<T> : BaseKnotCommand where T : CameraPathKnot
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F704", Offset = "0xB2F704")]
		private readonly T <Knot>k__BackingField;

		[Token(Token = "0x17000275")]
		public new T Knot
		{
			[Token(Token = "0x60011B5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C32C", Offset = "0xB3C32C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B6")]
		public BaseKnotCommand(T knot, bool mergesWithCreateCommand = false, [Optional] BaseCommand parent)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class BrushStrokeCommand : BaseCommand
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_Stroke;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StencilWidget m_Widget;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_LineLength_CS;

		[Token(Token = "0x17000276")]
		private Vector3 CommandAudioPosition
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x1280190", Offset = "0x1280190", VA = "0x1280190")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000277")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x12801E8", Offset = "0x12801E8", VA = "0x12801E8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x128019C", Offset = "0x128019C", VA = "0x128019C")]
		public BrushStrokeCommand(Stroke stroke, [Optional] StencilWidget widget, float lineLength = -1f, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x12801F0", Offset = "0x12801F0", VA = "0x12801F0", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1280260", Offset = "0x1280260", VA = "0x1280260", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x12804D4", Offset = "0x12804D4", VA = "0x12804D4", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1280704", Offset = "0x1280704", VA = "0x1280704", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B5")]
	public class CreatePathKnotCommand : BaseCommand
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraPathWidget m_Widget;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraPathKnot.Type m_KnotType;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TrTransform m_SpawnXf;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraPathKnot m_CreatedKnot;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PathT m_PathT;

		[Token(Token = "0x17000278")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x159865C", Offset = "0x159865C", VA = "0x159865C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x15985FC", Offset = "0x15985FC", VA = "0x15985FC")]
		public CreatePathKnotCommand(CameraPathWidget widget, CameraPathKnot.Type knotType, PathT pathT, TrTransform spawnXf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1598664", Offset = "0x1598664", VA = "0x1598664", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1598744", Offset = "0x1598744", VA = "0x1598744", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1598C9C", Offset = "0x1598C9C", VA = "0x1598C9C", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1598D64", Offset = "0x1598D64", VA = "0x1598D64", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B6")]
	public class CreateWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_SpawnAggression;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_TiltMeterCost;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_TiltMeterCostUndone;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GrabWidget m_Prefab;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_SpawnXf;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_EndXf;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion? m_DesiredEndForward;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CanvasScript m_Canvas;

		[Token(Token = "0x17000279")]
		public GrabWidget Widget
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x1599264", Offset = "0x1599264", VA = "0x1599264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x159926C", Offset = "0x159926C", VA = "0x159926C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x1599068", Offset = "0x1599068", VA = "0x1599068")]
		public CreateWidgetCommand(GrabWidget widgetPrefab, TrTransform spawnXf, [Optional] Quaternion? desiredEndForward, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x1599274", Offset = "0x1599274", VA = "0x1599274", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x15993CC", Offset = "0x15993CC", VA = "0x15993CC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x159986C", Offset = "0x159986C", VA = "0x159986C", Slot = "10")]
		protected override void OnDispose()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x15999A4", Offset = "0x15999A4", VA = "0x15999A4")]
		public void SetWidgetCost(int iCost)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class DeleteSelectionCommand : BaseCommand
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke[] m_Strokes;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_Widgets;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_InitialSelectionTransform;

		[Token(Token = "0x1700027B")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xEC5E74", Offset = "0xEC5E74", VA = "0xEC5E74", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xEC5C4C", Offset = "0xEC5C4C", VA = "0xEC5C4C")]
		public DeleteSelectionCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xEC5E7C", Offset = "0xEC5E7C", VA = "0xEC5E7C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xEC616C", Offset = "0xEC616C", VA = "0xEC616C", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class DeleteStrokeCommand : BaseCommand
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_TargetStroke;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_SilenceFirstAudio;

		[Token(Token = "0x1700027C")]
		private Vector3 CommandAudioPosition
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xEC6460", Offset = "0xEC6460", VA = "0xEC6460")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700027D")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xEC64A4", Offset = "0xEC64A4", VA = "0xEC64A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xEC646C", Offset = "0xEC646C", VA = "0xEC646C")]
		public DeleteStrokeCommand(Stroke stroke, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xEC64AC", Offset = "0xEC64AC", VA = "0xEC64AC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xEC6678", Offset = "0xEC6678", VA = "0xEC6678", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class DuplicateSelectionCommand : BaseCommand
	{
		[Serializable]
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29548", Offset = "0xB29548")]
		private sealed class <>c
		{
			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Stroke, Stroke> <>9__7_0;

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x1150C80", Offset = "0x1150C80", VA = "0x1150C80")]
			public <>c()
			{
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x1150C88", Offset = "0x1150C88", VA = "0x1150C88")]
			internal Stroke <.ctor>b__7_0(Stroke stroke)
			{
				return null;
			}
		}

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_SelectedStrokes;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_SelectedWidgets;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Stroke> m_DuplicatedStrokes;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GrabWidget> m_DuplicatedWidgets;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_OriginTransform;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_DuplicateTransform;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_DupeInPlace;

		[Token(Token = "0x1700027E")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xED2608", Offset = "0xED2608", VA = "0xED2608", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xED1E8C", Offset = "0xED1E8C", VA = "0xED1E8C")]
		public DuplicateSelectionCommand(TrTransform xf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xED2610", Offset = "0xED2610", VA = "0xED2610", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xED2A10", Offset = "0xED2A10", VA = "0xED2A10", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xED2DF8", Offset = "0xED2DF8", VA = "0xED2DF8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BB")]
	public class FlipSelectionCommand : BaseCommand
	{
		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_StrokesFlipped;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_WidgetsFlipped;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Plane m_FlipPlane_CS;

		[Token(Token = "0x1700027F")]
		private CanvasScript Canvas
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x101ABAC", Offset = "0x101ABAC", VA = "0x101ABAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x101ABD0", Offset = "0x101ABD0", VA = "0x101ABD0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x101ABD8", Offset = "0x101ABD8", VA = "0x101ABD8")]
		public FlipSelectionCommand(ICollection<Stroke> strokesFlipped, ICollection<GrabWidget> widgetsFlipped, Plane flipPlane, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x101AD38", Offset = "0x101AD38", VA = "0x101AD38", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x101B4EC", Offset = "0x101B4EC", VA = "0x101B4EC", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x101B4F0", Offset = "0x101B4F0", VA = "0x101B4F0", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x101AD3C", Offset = "0x101AD3C", VA = "0x101AD3C")]
		private void FlipSelection()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class GroupStrokesAndWidgetsCommand : BaseCommand
	{
		[Serializable]
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29558", Offset = "0xB29558")]
		private sealed class <>c
		{
			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Stroke, SketchGroupTag> <>9__7_0;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GrabWidget, SketchGroupTag> <>9__7_1;

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xFF6D1C", Offset = "0xFF6D1C", VA = "0xFF6D1C")]
			public <>c()
			{
			}

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xFF6D24", Offset = "0xFF6D24", VA = "0xFF6D24")]
			internal SketchGroupTag <.ctor>b__7_0(Stroke s)
			{
				return default(SketchGroupTag);
			}

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xFF6D3C", Offset = "0xFF6D3C", VA = "0xFF6D3C")]
			internal SketchGroupTag <.ctor>b__7_1(GrabWidget s)
			{
				return default(SketchGroupTag);
			}
		}

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke[] m_Strokes;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GrabWidget[] m_Widgets;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SketchGroupTag[] m_InitialStrokesGroups;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SketchGroupTag[] m_InitialWidgetsGroups;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SketchGroupTag m_TargetGroup;

		[Token(Token = "0x17000281")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xFACBA0", Offset = "0xFACBA0", VA = "0xFACBA0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xFACBA8", Offset = "0xFACBA8", VA = "0xFACBA8")]
		public GroupStrokesAndWidgetsCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, SketchGroupTag? targetGroup, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xFACE80", Offset = "0xFACE80", VA = "0xFACE80", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xFACF34", Offset = "0xFACF34", VA = "0xFACF34", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class HideWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_WidgetTransform;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_TiltMeterCost;

		[Token(Token = "0x17000282")]
		public GrabWidget Widget
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x13C2F88", Offset = "0x13C2F88", VA = "0x13C2F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x13C318C", Offset = "0x13C318C", VA = "0x13C318C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x13C2F90", Offset = "0x13C2F90", VA = "0x13C2F90")]
		public HideWidgetCommand(GrabWidget widget, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x13C3194", Offset = "0x13C3194", VA = "0x13C3194", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x13C32E4", Offset = "0x13C32E4", VA = "0x13C32E4", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class InvertSelectionCommand : BaseCommand
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_StrokesOn;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Stroke> m_StrokesOff;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GrabWidget> m_WidgetsOn;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GrabWidget> m_WidgetsOff;

		[Token(Token = "0x17000284")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x12DBA34", Offset = "0x12DBA34", VA = "0x12DBA34", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x12DBA3C", Offset = "0x12DBA3C", VA = "0x12DBA3C")]
		public InvertSelectionCommand(ICollection<Stroke> strokesOn, ICollection<Stroke> strokesOff, ICollection<GrabWidget> widgetsOn, ICollection<GrabWidget> widgetsOff, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x12DBC28", Offset = "0x12DBC28", VA = "0x12DBC28", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x12DBD24", Offset = "0x12DBD24", VA = "0x12DBD24", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x12DBE20", Offset = "0x12DBE20", VA = "0x12DBE20", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C0")]
	public class ModifyFogCommand : BaseCommand
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_StartColor;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color m_EndColor;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_StartDensity;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_EndDensity;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Final;

		[Token(Token = "0x17000285")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xF3C8A0", Offset = "0xF3C8A0", VA = "0xF3C8A0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000056")]
		public static event Action OnNewFogFinalized
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xF3C608", Offset = "0xF3C608", VA = "0xF3C608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C33C", Offset = "0xB3C33C")]
			add
			{
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xF3C6C4", Offset = "0xF3C6C4", VA = "0xF3C6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C34C", Offset = "0xB3C34C")]
			remove
			{
			}
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xF3C780", Offset = "0xF3C780", VA = "0xF3C780")]
		public ModifyFogCommand(Color endColor, float endDensity, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xF3C8A8", Offset = "0xF3C8A8", VA = "0xF3C8A8", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xF3C928", Offset = "0xF3C928", VA = "0xF3C928", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xF3C9A8", Offset = "0xF3C9A8", VA = "0xF3C9A8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C1")]
	public class ModifyFovKnotCommand : BaseKnotCommand<CameraPathFovKnot>
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_StartFov;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_EndFov;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Final;

		[Token(Token = "0x17000286")]
		public override bool NeedsSave
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xF3CB1C", Offset = "0xF3CB1C", VA = "0xF3CB1C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xF3CA78", Offset = "0xF3CA78", VA = "0xF3CA78")]
		public ModifyFovKnotCommand(CameraPathFovKnot knot, float endFov, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xF3CB24", Offset = "0xF3CB24", VA = "0xF3CB24", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xF3CBD0", Offset = "0xF3CBD0", VA = "0xF3CBD0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xF3CC7C", Offset = "0xF3CC7C", VA = "0xF3CC7C", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C2")]
	public class ModifyLightCommand : BaseCommand
	{
		[Token(Token = "0x20002C3")]
		public delegate void LightFinalizedDelegate(LightMode light, Color color, Quaternion rotation);

		[Serializable]
		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29568", Offset = "0xB29568")]
		private sealed class <>c
		{
			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<LightsPanel> <>9__13_0;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LightsPanel> <>9__14_0;

			[Token(Token = "0x600120D")]
			[Address(RVA = "0x1002C34", Offset = "0x1002C34", VA = "0x1002C34")]
			public <>c()
			{
			}

			[Token(Token = "0x600120E")]
			[Address(RVA = "0x1002C3C", Offset = "0x1002C3C", VA = "0x1002C3C")]
			internal void <OnUndo>b__13_0(LightsPanel x)
			{
			}

			[Token(Token = "0x600120F")]
			[Address(RVA = "0x1002C58", Offset = "0x1002C58", VA = "0x1002C58")]
			internal void <OnRedo>b__14_0(LightsPanel x)
			{
			}
		}

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LightMode m_ModifiedLight;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color m_StartColor;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color m_EndColor;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion m_StartRot;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_EndRot;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_Final;

		[Token(Token = "0x17000287")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xF3D05C", Offset = "0xF3D05C", VA = "0xF3D05C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000057")]
		public static event LightFinalizedDelegate OnNewLightFinalized
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0xF3CD44", Offset = "0xF3CD44", VA = "0xF3CD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C35C", Offset = "0xB3C35C")]
			add
			{
			}
			[Token(Token = "0x6001202")]
			[Address(RVA = "0xF3CE00", Offset = "0xF3CE00", VA = "0xF3CE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C36C", Offset = "0xB3C36C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xF3CEBC", Offset = "0xF3CEBC", VA = "0xF3CEBC")]
		public ModifyLightCommand(LightMode light, Color endColor, Quaternion endRot, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xF3D064", Offset = "0xF3D064", VA = "0xF3D064", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xF3D21C", Offset = "0xF3D21C", VA = "0xF3D21C", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xF3D3D4", Offset = "0xF3D3D4", VA = "0xF3D3D4", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C5")]
	public class ModifyPositionKnotCommand : BaseKnotCommand<CameraPathPositionKnot>
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraPath m_Path;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraPathPositionKnot m_KnotLoopPartner;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_StartRotation_CS;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_EndRotation_CS;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion m_PartnerStartRotation_CS;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_StartSpeed;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_EndSpeed;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_PartnerStartSpeed;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_KnotIndex;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_PartnerKnotIndex;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_Final;

		[Token(Token = "0x17000288")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xF3D780", Offset = "0xF3D780", VA = "0xF3D780", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xF3D4B4", Offset = "0xF3D4B4", VA = "0xF3D4B4")]
		public ModifyPositionKnotCommand(CameraPath path, KnotDescriptor knotDesc, float endSpeed, Vector3 endForward_GS, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xF3D788", Offset = "0xF3D788", VA = "0xF3D788", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xF3D908", Offset = "0xF3D908", VA = "0xF3D908", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xF3DA88", Offset = "0xF3DA88", VA = "0xF3DA88", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C6")]
	public class ModifySkyboxCommand : BaseCommand
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color m_StartColorA;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color m_EndColorA;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color m_StartColorB;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_EndColorB;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_StartOrientation;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_EndOrientation;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_Final;

		[Token(Token = "0x17000289")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0xF3DEA8", Offset = "0xF3DEA8", VA = "0xF3DEA8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000058")]
		public static event Action OnNewSkyFinalized
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xF3DBAC", Offset = "0xF3DBAC", VA = "0xF3DBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C37C", Offset = "0xB3C37C")]
			add
			{
			}
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xF3DC68", Offset = "0xF3DC68", VA = "0xF3DC68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C38C", Offset = "0xB3C38C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xF3DD24", Offset = "0xF3DD24", VA = "0xF3DD24")]
		public ModifySkyboxCommand(Color endColorA, Color endColorB, Quaternion endOrient, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xF3DEB0", Offset = "0xF3DEB0", VA = "0xF3DEB0", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xF3DF54", Offset = "0xF3DF54", VA = "0xF3DF54", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xF3DFF8", Offset = "0xF3DFF8", VA = "0xF3DFF8", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C7")]
	public class ModifySpeedKnotCommand : BaseKnotCommand<CameraPathSpeedKnot>
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_StartSpeed;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_EndSpeed;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Final;

		[Token(Token = "0x1700028A")]
		public override bool NeedsSave
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xF3E174", Offset = "0xF3E174", VA = "0xF3E174", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF3E0D0", Offset = "0xF3E0D0", VA = "0xF3E0D0")]
		public ModifySpeedKnotCommand(CameraPathSpeedKnot knot, float endSpeed, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF3E17C", Offset = "0xF3E17C", VA = "0xF3E17C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF3E228", Offset = "0xF3E228", VA = "0xF3E228", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF3E2D4", Offset = "0xF3E2D4", VA = "0xF3E2D4", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C8")]
	public class MoveConstrainedKnotCommand : BaseKnotCommand
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraPath m_Path;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_StartRotation_CS;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_EndRotation_CS;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PathT m_StartT;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private PathT m_EndT;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Final;

		[Token(Token = "0x1700028B")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xF3E698", Offset = "0xF3E698", VA = "0xF3E698", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF3E548", Offset = "0xF3E548", VA = "0xF3E548")]
		public MoveConstrainedKnotCommand(CameraPath path, KnotDescriptor knotDesc, Quaternion rot_GS, bool mergesWithCreateCommand = false, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF3E6A0", Offset = "0xF3E6A0", VA = "0xF3E6A0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF3E7FC", Offset = "0xF3E7FC", VA = "0xF3E7FC", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xF3E958", Offset = "0xF3E958", VA = "0xF3E958", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C9")]
	public class MovePositionKnotCommand : BaseKnotCommand<CameraPathPositionKnot>
	{
		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraPath m_Path;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrTransform m_StartXf_CS;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrTransform m_EndXf_CS;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_KnotIndex;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_StartTangentMagnitude;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Final;

		[Token(Token = "0x1700028C")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xF3ED2C", Offset = "0xF3ED2C", VA = "0xF3ED2C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF3EA70", Offset = "0xF3EA70", VA = "0xF3EA70")]
		public MovePositionKnotCommand(CameraPath path, KnotDescriptor knotDesc, TrTransform endXf_GS, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF3ED34", Offset = "0xF3ED34", VA = "0xF3ED34", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF3EEF4", Offset = "0xF3EEF4", VA = "0xF3EEF4", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF3F008", Offset = "0xF3F008", VA = "0xF3F008", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CA")]
	public class MoveWidgetCommand : BaseCommand
	{
		[Token(Token = "0x20002CB")]
		private enum Type
		{
			[Token(Token = "0x400126E")]
			Guide,
			[Token(Token = "0x400126F")]
			Media,
			[Token(Token = "0x4001270")]
			Symmetry,
			[Token(Token = "0x4001271")]
			Selection
		}

		[Token(Token = "0x20002CC")]
		private struct CustomDimension
		{
			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 startState;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 endState;
		}

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Type m_Type;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_StartTransform;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrTransform m_EndTransform;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TrTransform m_StartSelectionTransform;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TrTransform m_EndSelectionTransform;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CustomDimension m_CustomDimension;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_Final;

		[Token(Token = "0x1700028D")]
		public GrabWidget Widget
		{
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xF3F134", Offset = "0xF3F134", VA = "0xF3F134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		public override bool NeedsSave
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0xF3F3C0", Offset = "0xF3F3C0", VA = "0xF3F3C0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xF3F13C", Offset = "0xF3F13C", VA = "0xF3F13C")]
		public MoveWidgetCommand(GrabWidget widget, TrTransform endXf, Vector3 endCustomDimension, bool final = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xF3F3C8", Offset = "0xF3F3C8", VA = "0xF3F3C8", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF3F53C", Offset = "0xF3F53C", VA = "0xF3F53C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xF3F6EC", Offset = "0xF3F6EC", VA = "0xF3F6EC", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CD")]
	public class PinWidgetCommand : BaseCommand
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrabWidget m_Widget;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Pinning;

		[Token(Token = "0x1700028F")]
		public GrabWidget Widget
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x1026F30", Offset = "0x1026F30", VA = "0x1026F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public bool IsPinning
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x1026F38", Offset = "0x1026F38", VA = "0x1026F38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1026E10", Offset = "0x1026E10", VA = "0x1026E10")]
		public PinWidgetCommand(GrabWidget widget, bool pin, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1026F40", Offset = "0x1026F40", VA = "0x1026F40", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1026FCC", Offset = "0x1026FCC", VA = "0x1026FCC", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1027060", Offset = "0x1027060", VA = "0x1027060", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CE")]
	public class RemovePathKnotCommand : BaseCommand
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraPathWidget m_Widget;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_RemovedXf;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_KnotIndex;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private PathT m_PathT;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2F744", Offset = "0xB2F744")]
		private readonly CameraPathKnot <Knot>k__BackingField;

		[Token(Token = "0x17000291")]
		public CameraPathKnot Knot
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xFB5570", Offset = "0xFB5570", VA = "0xFB5570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C39C", Offset = "0xB3C39C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xFB5684", Offset = "0xFB5684", VA = "0xFB5684", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xFB5578", Offset = "0xFB5578", VA = "0xFB5578")]
		public RemovePathKnotCommand(CameraPathWidget widget, CameraPathKnot knot, TrTransform removeXf, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xFB568C", Offset = "0xFB568C", VA = "0xFB568C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xFB5924", Offset = "0xFB5924", VA = "0xFB5924", Slot = "8")]
		protected override void OnRedo()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class RepaintStrokeCommand : BaseCommand
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stroke m_TargetStroke;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_StartColor;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Guid m_StartGuid;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_EndColor;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Guid m_EndGuid;

		[Token(Token = "0x17000293")]
		public override bool NeedsSave
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xFB69B0", Offset = "0xFB69B0", VA = "0xFB69B0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xFB692C", Offset = "0xFB692C", VA = "0xFB692C")]
		public RepaintStrokeCommand(Stroke stroke, Color newcolor, Guid newGuid, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xFB69B8", Offset = "0xFB69B8", VA = "0xFB69B8")]
		private void ApplyColorAndBrushToObject(Color color, Guid brushGuid)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xFB6AF0", Offset = "0xFB6AF0", VA = "0xFB6AF0", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xFB6B00", Offset = "0xFB6B00", VA = "0xFB6B00", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class SelectCommand : BaseCommand
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Stroke> m_Strokes;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GrabWidget> m_Widgets;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrTransform m_InitialTransform;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_Deselect;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_Initial;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_Final;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool m_CheckForClearedSelection;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_IsGrabbingGroup;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_IsEndGrabbingGroup;

		[Token(Token = "0x17000294")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xE6E880", Offset = "0xE6E880", VA = "0xE6E880", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE6E934", Offset = "0xE6E934", VA = "0xE6E934")]
		public void ResetInitialTransform()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xE6E9A4", Offset = "0xE6E9A4", VA = "0xE6E9A4")]
		public SelectCommand(ICollection<Stroke> strokes, ICollection<GrabWidget> widgets, TrTransform initialTransform, bool deselect = false, bool initial = false, bool checkForClearedSelection = false, bool isGrabbingGroup = false, bool isEndGrabbingGroup = false, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xE6F610", Offset = "0xE6F610", VA = "0xE6F610", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xE70E14", Offset = "0xE70E14", VA = "0xE70E14", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE7105C", Offset = "0xE7105C", VA = "0xE7105C", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D1")]
	public class StencilsVisibleCommand : BaseCommand
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_StencilsStartDisabled;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x11B3818", Offset = "0x11B3818", VA = "0x11B3818")]
		public StencilsVisibleCommand([Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x11B38AC", Offset = "0x11B38AC", VA = "0x11B38AC", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x11B392C", Offset = "0x11B392C", VA = "0x11B392C", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class SwitchEnvironmentCommand : BaseCommand
	{
		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CustomLights m_PrevLights;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CustomEnvironment m_PrevBackdrop;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Environment m_PrevEnvironment;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Environment m_NextEnvironment;

		[Token(Token = "0x17000295")]
		public override bool NeedsSave
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x11B83A4", Offset = "0x11B83A4", VA = "0x11B83A4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000296")]
		protected override bool IsNoop
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x11B843C", Offset = "0x11B843C", VA = "0x11B843C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x11B829C", Offset = "0x11B829C", VA = "0x11B829C")]
		public SwitchEnvironmentCommand(Environment nextEnv, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x11B8460", Offset = "0x11B8460", VA = "0x11B8460", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x11B84EC", Offset = "0x11B84EC", VA = "0x11B84EC", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x11B8650", Offset = "0x11B8650", VA = "0x11B8650", Slot = "9")]
		public override bool Merge(BaseCommand other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D3")]
	public class SymmetryWidgetVisibleCommand : BaseCommand
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_Visible;

		[Token(Token = "0x17000297")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x11BB77C", Offset = "0x11BB77C", VA = "0x11BB77C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x11BB734", Offset = "0x11BB734", VA = "0x11BB734")]
		public SymmetryWidgetVisibleCommand(SymmetryWidget widget, [Optional] BaseCommand parent)
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x11BB784", Offset = "0x11BB784", VA = "0x11BB784", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x11BB870", Offset = "0x11BB870", VA = "0x11BB870", Slot = "7")]
		protected override void OnUndo()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class UnlockSkyboxCommand : BaseCommand
	{
		[Token(Token = "0x17000298")]
		public override bool NeedsSave
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x1249218", Offset = "0x1249218", VA = "0x1249218", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1249220", Offset = "0x1249220", VA = "0x1249220", Slot = "8")]
		protected override void OnRedo()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x124927C", Offset = "0x124927C", VA = "0x124927C", Slot = "7")]
		protected override void OnUndo()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x12490A8", Offset = "0x12490A8", VA = "0x12490A8")]
		public UnlockSkyboxCommand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D5")]
	public enum SdkMode
	{
		[Token(Token = "0x4001290")]
		Unset = -1,
		[Token(Token = "0x4001291")]
		Oculus,
		[Token(Token = "0x4001292")]
		SteamVR,
		[Token(Token = "0x4001293")]
		Cardboard_Deprecated,
		[Token(Token = "0x4001294")]
		Monoscopic,
		[Token(Token = "0x4001295")]
		Ods,
		[Token(Token = "0x4001296")]
		Gvr,
		[Token(Token = "0x4001297")]
		Tablet,
		[Token(Token = "0x4001298")]
		ARFoundation,
		[Token(Token = "0x4001299")]
		Pico
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	public enum VrHardware
	{
		[Token(Token = "0x400129B")]
		Unset,
		[Token(Token = "0x400129C")]
		None,
		[Token(Token = "0x400129D")]
		Rift,
		[Token(Token = "0x400129E")]
		Vive,
		[Token(Token = "0x400129F")]
		Daydream,
		[Token(Token = "0x40012A0")]
		Wmr,
		[Token(Token = "0x40012A1")]
		Quest,
		[Token(Token = "0x40012A2")]
		PicoNeo
	}
	[Token(Token = "0x20002D7")]
	public enum DescriptionType
	{
		[Token(Token = "0x40012A4")]
		None = -1,
		[Token(Token = "0x40012A5")]
		Button,
		[Token(Token = "0x40012A6")]
		Slider,
		[Token(Token = "0x40012A7")]
		PreviewCube
	}
	[Token(Token = "0x20002D8")]
	public enum AppBuildType
	{
		[Token(Token = "0x40012A9")]
		Standard,
		[Token(Token = "0x40012AA")]
		RendeverFit
	}
	[Token(Token = "0x20002D9")]
	public class Config : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DA")]
		public class BrushReplacement
		{
			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[BrushDescriptor.AsStringGuid]
			public string FromGuid;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[BrushDescriptor.AsStringGuid]
			public string ToGuid;

			[Token(Token = "0x6001269")]
			[Address(RVA = "0x1125C88", Offset = "0x1125C88", VA = "0x1125C88")]
			public BrushReplacement()
			{
			}
		}

		[Token(Token = "0x20002DB")]
		private class UserConfigChange
		{
			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo section;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MemberInfo setting;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object value;

			[Token(Token = "0x600126A")]
			[Address(RVA = "0x1125C90", Offset = "0x1125C90", VA = "0x1125C90")]
			public UserConfigChange()
			{
			}
		}

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool kModelWidgetsWaitForLoad;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Config m_SingletonState;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F754", Offset = "0xB2F754")]
		public string m_FakeCommandLineArgsInEditor;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F78C", Offset = "0xB2F78C")]
		private PlatformConfig m_PlatformConfig;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_IsExperimental;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_AutoProfile;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_AutoProfileWaitTime;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F7D8", Offset = "0xB2F7D8")]
		public bool m_LocalizationEnabled;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SecretsConfig Secrets;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] m_SketchFiles;

		[NonSerialized]
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_QuickLoad;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F810", Offset = "0xB2F810")]
		public int m_OdsNumFrames;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_OdsFps;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string m_OdsOutputPath;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string m_OdsOutputPrefix;

		[NonSerialized]
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_OdsPreview;

		[NonSerialized]
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool m_OdsCollapseIpd;

		[NonSerialized]
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_OdsTurnTableDegrees;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F848", Offset = "0xB2F848")]
		public string m_VersionNumber;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string m_BuildStamp;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F880", Offset = "0xB2F880")]
		public GameObject m_SteamVrRenderPrefab;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_UseBatchedBrushes;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool m_EnableBatchMemoryOptimization;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_MediaLibraryReadme;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DropperTool m_Dropper;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool m_AxisManipulationIsResize;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject m_LabsButtonOverlayPrefab;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_GpuIntersectionEnabled;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool m_AutosaveRestoreEnabled;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool m_AllowWidgetPinning;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public bool m_DebugWebRequest;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool m_ToggleProfileOnAppButton;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F8B8", Offset = "0xB2F8B8")]
		public Shader m_BlitToComputeShader;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F8F0", Offset = "0xB2F8F0")]
		public bool m_ForceDeterministicBirthTimeForExport;

		[NonSerialized]
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<string> m_FilePatternsToExport;

		[NonSerialized]
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string m_ExportPath;

		[NonSerialized]
		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string m_VideoPathToRender;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool m_EnableReferenceModelExport;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool m_EnableGlbVersion2;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2F928", Offset = "0xB2F928")]
		public bool m_DebugUpload;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TbtSettings m_TbtSettings;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F960", Offset = "0xB2F960")]
		public bool m_ReplaceBrushesOnLoad;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private List<BrushReplacement> m_BrushReplacementMap;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string m_IntroSketchUsdFilename;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB2F9A8", Offset = "0xB2F9A8")]
		public float m_IntroSketchSpeed;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool m_IntroLooped;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F9C4", Offset = "0xB2F9C4")]
		public bool CreateShaderWarmupList;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB2F9FC", Offset = "0xB2F9FC")]
		[SerializeField]
		private GameObject m_ButtonDescriptionOneLinePrefab;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_ButtonDescriptionTwoLinesPrefab;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_ButtonDescriptionThreeLinesPrefab;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject m_SliderDescriptionOneLinePrefab;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private GameObject m_SliderDescriptionTwoLinesPrefab;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject m_PreviewCubeDescriptionOneLinePrefab;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject m_PreviewCubeDescriptionTwoLinesPrefab;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private VrHardware m_VrHardware;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Dictionary<Guid, Guid> m_BrushReplacement;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UserConfigChange> m_UserConfigChanges;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private string m_HeadsetModelName;

		[Token(Token = "0x17000299")]
		public SecretsConfig.ServiceAuthData GoogleSecrets
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x158DA94", Offset = "0x158DA94", VA = "0x158DA94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public SecretsConfig.ServiceAuthData SketchfabSecrets
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x158DB98", Offset = "0x158DB98", VA = "0x158DB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public SecretsConfig.ServiceAuthData OculusSecrets
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x158DBB8", Offset = "0x158DBB8", VA = "0x158DBB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public SecretsConfig.ServiceAuthData OculusMobileSecrets
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x158DBD8", Offset = "0x158DBD8", VA = "0x158DBD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public VrHardware VrHardware
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x158DBF8", Offset = "0x158DBF8", VA = "0x158DBF8")]
			get
			{
				return default(VrHardware);
			}
		}

		[Token(Token = "0x1700029E")]
		public bool IsMobileHardware
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x158DD1C", Offset = "0x158DD1C", VA = "0x158DD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029F")]
		public bool OfflineRender
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x158DF74", Offset = "0x158DF74", VA = "0x158DF74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public PlatformConfig PlatformConfig
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x158DFEC", Offset = "0x158DFEC", VA = "0x158DFEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public static bool IsExperimental
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x158F404", Offset = "0x158F404", VA = "0x158F404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x158DD44", Offset = "0x158DD44", VA = "0x158DD44")]
		public GameObject CreateDescriptionFor(DescriptionType type, int numberOfLines)
		{
			return null;
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x158DFF4", Offset = "0x158DFF4", VA = "0x158DFF4")]
		public Guid GetReplacementBrush(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x158E084", Offset = "0x158E084", VA = "0x158E084")]
		private void ParseArgs(string[] args)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x158F45C", Offset = "0x158F45C", VA = "0x158F45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x158DD3C", Offset = "0x158DD3C", VA = "0x158DD3C")]
		private VrHardware GetHwTrackedInSteamVr()
		{
			return default(VrHardware);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x158F02C", Offset = "0x158F02C", VA = "0x158F02C")]
		private void ParseUserSetting(string setting, string value)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x158F650", Offset = "0x158F650", VA = "0x158F650")]
		public void ApplyUserConfigOverrides(UserConfig userConfig)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x158FB90", Offset = "0x158FB90", VA = "0x158FB90")]
		public Config()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public static class Coords
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TransformExtensions.GlobalAccessor AsRoom;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static TransformExtensions.GlobalAccessor AsGlobal;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static TransformExtensions.LocalAccessor AsLocal;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TransformExtensions.RelativeAccessor AsCanvas;

		[Token(Token = "0x170002A2")]
		public static TrTransform CanvasPose
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0x15983C4", Offset = "0x15983C4", VA = "0x15983C4")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0x159840C", Offset = "0x159840C", VA = "0x159840C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public static TrTransform CanvasLocalPose
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0x159845C", Offset = "0x159845C", VA = "0x159845C")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0x15984A4", Offset = "0x15984A4", VA = "0x15984A4")]
			set
			{
			}
		}

		[Token(Token = "0x14000059")]
		public static event CanvasScript.PoseChangedEventHandler CanvasPoseChanged
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x159834C", Offset = "0x159834C", VA = "0x159834C")]
			add
			{
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0x1598388", Offset = "0x1598388", VA = "0x1598388")]
			remove
			{
			}
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x15984F4", Offset = "0x15984F4", VA = "0x15984F4")]
		public static void Init(App app)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class ProfilingManager
	{
		[Serializable]
		[Token(Token = "0x20002DE")]
		public enum Mode
		{
			[Token(Token = "0x40012F7")]
			Standard,
			[Token(Token = "0x40012F8")]
			Light,
			[Token(Token = "0x40012F9")]
			Deep
		}

		[Token(Token = "0x20002DF")]
		private struct FrameData
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float elapsedNanoseconds;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int numCalls;
		}

		[Token(Token = "0x20002E0")]
		private struct Sample
		{
			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Profiling.Recorder recorder;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<FrameData> frameData;
		}

		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29578", Offset = "0xB29578")]
		private sealed class <Update>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProfilingManager <>4__this;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001280")]
				[Address(RVA = "0x10F02A8", Offset = "0x10F02A8", VA = "0x10F02A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001282")]
				[Address(RVA = "0x10F02F0", Offset = "0x10F02F0", VA = "0x10F02F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600127D")]
			[Address(RVA = "0x10F0054", Offset = "0x10F0054", VA = "0x10F0054")]
			[DebuggerHidden]
			public <Update>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x10F0080", Offset = "0x10F0080", VA = "0x10F0080", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127F")]
			[Address(RVA = "0x10F0084", Offset = "0x10F0084", VA = "0x10F0084", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001281")]
			[Address(RVA = "0x10F02B0", Offset = "0x10F02B0", VA = "0x10F02B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29588", Offset = "0xB29588")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float percentScale;

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x10EFF2C", Offset = "0x10EFF2C", VA = "0x10EFF2C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x10EFF34", Offset = "0x10EFF34", VA = "0x10EFF34")]
			internal float <OutputStats>b__1(int x)
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29598", Offset = "0xB29598")]
		private sealed class <>c
		{
			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, float> <>9__17_0;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<FrameData, float> <>9__18_1;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<float, bool> <>9__18_2;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<float, string> <>9__19_0;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<float, string> <>9__20_0;

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x10EFE40", Offset = "0x10EFE40", VA = "0x10EFE40")]
			public <>c()
			{
			}

			[Token(Token = "0x6001287")]
			[Address(RVA = "0x10EFE48", Offset = "0x10EFE48", VA = "0x10EFE48")]
			internal float <OutputStats>b__17_0(int x)
			{
				return default(float);
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0x10EFE64", Offset = "0x10EFE64", VA = "0x10EFE64")]
			internal float <HumanReadableOutput>b__18_1(FrameData x)
			{
				return default(float);
			}

			[Token(Token = "0x6001289")]
			[Address(RVA = "0x10EFE78", Offset = "0x10EFE78", VA = "0x10EFE78")]
			internal bool <HumanReadableOutput>b__18_2(float x)
			{
				return default(bool);
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0x10EFE84", Offset = "0x10EFE84", VA = "0x10EFE84")]
			internal string <CsvOutput>b__19_0(float x)
			{
				return null;
			}

			[Token(Token = "0x600128B")]
			[Address(RVA = "0x10EFED8", Offset = "0x10EFED8", VA = "0x10EFED8")]
			internal string <PerfgateOutput>b__20_0(float x)
			{
				return null;
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB295A8", Offset = "0xB295A8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ProfilingManager <>4__this;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float[] frameRatePercentages;

			[Token(Token = "0x600128C")]
			[Address(RVA = "0x10EFF44", Offset = "0x10EFF44", VA = "0x10EFF44")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600128D")]
			[Address(RVA = "0x10EFF4C", Offset = "0x10EFF4C", VA = "0x10EFF4C")]
			internal string <HumanReadableOutput>b__0(int i)
			{
				return null;
			}
		}

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProfilingManager m_Instance;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Profiling;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Mode m_Mode;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<float> m_FrameTimes;

		[Token(Token = "0x40012F2")]
		private const int k_NumFrames = 450;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_UpdateCoroutine;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] m_ValidFramerates;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Sample> m_Samples;

		[Token(Token = "0x170002A4")]
		public static ProfilingManager Instance
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x11F48CC", Offset = "0x11F48CC", VA = "0x11F48CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x11F4A04", Offset = "0x11F4A04", VA = "0x11F4A04")]
		public void StartProfiling(Mode mode)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x11F4FD0", Offset = "0x11F4FD0", VA = "0x11F4FD0")]
		public void StopProfiling()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x11F4E34", Offset = "0x11F4E34", VA = "0x11F4E34")]
		private string GetProfilingFilename()
		{
			return null;
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x11F4F64", Offset = "0x11F4F64", VA = "0x11F4F64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C3AC", Offset = "0xB3C3AC")]
		private IEnumerator Update()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x11F521C", Offset = "0x11F521C", VA = "0x11F521C")]
		private void OutputStats()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x11F5FBC", Offset = "0x11F5FBC", VA = "0x11F5FBC")]
		private void HumanReadableOutput(StringBuilder output, Statistics.Summary stats, int numBatches, int numTriangles, float[] frameRatePercentages)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x11F5B48", Offset = "0x11F5B48", VA = "0x11F5B48")]
		private void CsvOutput(StringBuilder output, Statistics.Summary stats, int numBatches, int numTriangles, float[] frameRatePercentages, string filename)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x11F5948", Offset = "0x11F5948", VA = "0x11F5948")]
		private void PerfgateOutput(StringBuilder output, float[] frameTimes, int numBatches, int numTriangles, string filename)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x11F4944", Offset = "0x11F4944", VA = "0x11F4944")]
		public ProfilingManager()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public static class SpoofMobileHardware
	{
		[Token(Token = "0x170002A7")]
		public static bool MobileHardware
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x11AC630", Offset = "0x11AC630", VA = "0x11AC630")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x20002E6")]
	public static class Statistics
	{
		[Token(Token = "0x20002E7")]
		public class Summary
		{
			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAC8", Offset = "0xB2FAC8")]
			private float <Min>k__BackingField;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAD8", Offset = "0xB2FAD8")]
			private float <Max>k__BackingField;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAE8", Offset = "0xB2FAE8")]
			private float <Median>k__BackingField;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FAF8", Offset = "0xB2FAF8")]
			private float <Mean>k__BackingField;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB08", Offset = "0xB2FB08")]
			private float <InterquartileMean>k__BackingField;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB18", Offset = "0xB2FB18")]
			private float <StandardDeviation>k__BackingField;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB28", Offset = "0xB2FB28")]
			private float <StandardDeviationPcOfMedian>k__BackingField;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB38", Offset = "0xB2FB38")]
			private float <StandardDeviationPcOfMean>k__BackingField;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FB48", Offset = "0xB2FB48")]
			private float <StandardDeviationPcOfInterquartileMean>k__BackingField;

			[Token(Token = "0x170002A8")]
			public float Min
			{
				[Token(Token = "0x600128F")]
				[Address(RVA = "0xF22370", Offset = "0xF22370", VA = "0xF22370")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C45C", Offset = "0xB3C45C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001290")]
				[Address(RVA = "0xF22378", Offset = "0xF22378", VA = "0xF22378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C46C", Offset = "0xB3C46C")]
				private set
				{
				}
			}

			[Token(Token = "0x170002A9")]
			public float Max
			{
				[Token(Token = "0x6001291")]
				[Address(RVA = "0xF22380", Offset = "0xF22380", VA = "0xF22380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C47C", Offset = "0xB3C47C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001292")]
				[Address(RVA = "0xF22388", Offset = "0xF22388", VA = "0xF22388")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C48C", Offset = "0xB3C48C")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AA")]
			public float Median
			{
				[Token(Token = "0x6001293")]
				[Address(RVA = "0xF22390", Offset = "0xF22390", VA = "0xF22390")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C49C", Offset = "0xB3C49C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001294")]
				[Address(RVA = "0xF22398", Offset = "0xF22398", VA = "0xF22398")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4AC", Offset = "0xB3C4AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AB")]
			public float Mean
			{
				[Token(Token = "0x6001295")]
				[Address(RVA = "0xF223A0", Offset = "0xF223A0", VA = "0xF223A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4BC", Offset = "0xB3C4BC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001296")]
				[Address(RVA = "0xF223A8", Offset = "0xF223A8", VA = "0xF223A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4CC", Offset = "0xB3C4CC")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AC")]
			public float InterquartileMean
			{
				[Token(Token = "0x6001297")]
				[Address(RVA = "0xF223B0", Offset = "0xF223B0", VA = "0xF223B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4DC", Offset = "0xB3C4DC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001298")]
				[Address(RVA = "0xF223B8", Offset = "0xF223B8", VA = "0xF223B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4EC", Offset = "0xB3C4EC")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AD")]
			public float StandardDeviation
			{
				[Token(Token = "0x6001299")]
				[Address(RVA = "0xF223C0", Offset = "0xF223C0", VA = "0xF223C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C4FC", Offset = "0xB3C4FC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600129A")]
				[Address(RVA = "0xF223C8", Offset = "0xF223C8", VA = "0xF223C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C50C", Offset = "0xB3C50C")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AE")]
			public float StandardDeviationPcOfMedian
			{
				[Token(Token = "0x600129B")]
				[Address(RVA = "0xF223D0", Offset = "0xF223D0", VA = "0xF223D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C51C", Offset = "0xB3C51C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600129C")]
				[Address(RVA = "0xF223D8", Offset = "0xF223D8", VA = "0xF223D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C52C", Offset = "0xB3C52C")]
				private set
				{
				}
			}

			[Token(Token = "0x170002AF")]
			public float StandardDeviationPcOfMean
			{
				[Token(Token = "0x600129D")]
				[Address(RVA = "0xF223E0", Offset = "0xF223E0", VA = "0xF223E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C53C", Offset = "0xB3C53C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600129E")]
				[Address(RVA = "0xF223E8", Offset = "0xF223E8", VA = "0xF223E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C54C", Offset = "0xB3C54C")]
				private set
				{
				}
			}

			[Token(Token = "0x170002B0")]
			public float StandardDeviationPcOfInterquartileMean
			{
				[Token(Token = "0x600129F")]
				[Address(RVA = "0xF223F0", Offset = "0xF223F0", VA = "0xF223F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C55C", Offset = "0xB3C55C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60012A0")]
				[Address(RVA = "0xF223F8", Offset = "0xF223F8", VA = "0xF223F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C56C", Offset = "0xB3C56C")]
				private set
				{
				}
			}

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xF22400", Offset = "0xF22400", VA = "0xF22400")]
			public Summary(float[] data)
			{
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xF2269C", Offset = "0xF2269C", VA = "0xF2269C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C57C", Offset = "0xB3C57C")]
			private float <.ctor>b__36_0(float x)
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x20002E8")]
	internal class DemoManager : MonoBehaviour
	{
		[Token(Token = "0x20002E9")]
		private enum DemoState
		{
			[Token(Token = "0x400131D")]
			WaitingForFirstStroke,
			[Token(Token = "0x400131E")]
			Standard,
			[Token(Token = "0x400131F")]
			FadingOut
		}

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DemoManager m_Instance;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2FB58", Offset = "0xB2FB58")]
		private float m_TimesUpFadeOutDuration;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2FBA4", Offset = "0xB2FBA4")]
		private float m_FadeOutDuration;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2FBF0", Offset = "0xB2FBF0")]
		[SerializeField]
		private float m_FadeInDuration;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_DemoGuiPrefab;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DemoManagerGui m_DemoGui;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DemoState m_DemoState;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_SecondsRemainingInState;

		[Token(Token = "0x170002B1")]
		public bool DemoModeEnabled
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0xEC6844", Offset = "0xEC6844", VA = "0xEC6844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B2")]
		public bool ShouldUseCountdownTimer
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xEC6868", Offset = "0xEC6868", VA = "0xEC6868")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B3")]
		public string TimeRemaining
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xEC6908", Offset = "0xEC6908", VA = "0xEC6908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xEC69FC", Offset = "0xEC69FC", VA = "0xEC69FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xEC6AF0", Offset = "0xEC6AF0", VA = "0xEC6AF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xEC6BF0", Offset = "0xEC6BF0", VA = "0xEC6BF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xEC6E70", Offset = "0xEC6E70", VA = "0xEC6E70")]
		private void UpdateKeyboardCommands()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xEC6B34", Offset = "0xEC6B34", VA = "0xEC6B34")]
		private void OnSessionStart()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xEC6DA4", Offset = "0xEC6DA4", VA = "0xEC6DA4")]
		public void FadeOut(float duration)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xEC6FD8", Offset = "0xEC6FD8", VA = "0xEC6FD8")]
		public DemoManager()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class DemoManagerGui : MonoBehaviour
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_CountdownTimerUI;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_TimeRemainingText;

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xEC6FE0", Offset = "0xEC6FE0", VA = "0xEC6FE0")]
		public DemoManagerGui()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public enum TiltFormat
	{
		[Token(Token = "0x4001323")]
		Directory,
		[Token(Token = "0x4001324")]
		Inherit,
		[Token(Token = "0x4001325")]
		Zip
	}
	[Token(Token = "0x20002EC")]
	public class DevOptions : MonoBehaviour
	{
		[Token(Token = "0x4001326")]
		private const string OPTIONS_FILE_NAME = "../DevOptions.json";

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DevOptions I;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BufferBeforeZip;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BufferAfterZip;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ResaveLegacyScenes;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool UseAutoProfiler;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AllowStripBreak;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltFormat PreferredTiltFormat;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PointerScript.BrushLerp BrushLerp;

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xEC753C", Offset = "0xEC753C", VA = "0xEC753C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xEC75A4", Offset = "0xEC75A4", VA = "0xEC75A4")]
		public DevOptions()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class DynamicBounds : MonoBehaviour
	{
		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] m_BoundsBeams;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] m_BoundsCorners;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_BeamBaseScale;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_BoundsScale;

		[Token(Token = "0x170002B4")]
		public Vector3 BoundsScale
		{
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xED2F1C", Offset = "0xED2F1C", VA = "0xED2F1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xED2F28", Offset = "0xED2F28", VA = "0xED2F28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xED2F7C", Offset = "0xED2F7C", VA = "0xED2F7C")]
		public void BuildBounds()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xED328C", Offset = "0xED328C", VA = "0xED328C")]
		public DynamicBounds()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class EditTimeAssetReferences : ScriptableObject
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformConfig m_PlatformConfigMobile;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlatformConfig m_PlatformConfigPc;

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xED39E4", Offset = "0xED39E4", VA = "0xED39E4")]
		public EditTimeAssetReferences()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class OculusAuth : MonoBehaviour
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string OculusUsername;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_EntitlementText;

		[NonSerialized]
		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_Authenticated;

		[NonSerialized]
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_CheckComplete;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_ForceFailure;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private bool _MainSceneLoaded;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xFCF7DC", Offset = "0xFCF7DC", VA = "0xFCF7DC")]
		public OculusAuth()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xFCF804", Offset = "0xFCF804", VA = "0xFCF804")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xFCF9C0", Offset = "0xFCF9C0", VA = "0xFCF9C0")]
		private void InitializeComplete(Message<PlatformInitialize> message)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xFCFAAC", Offset = "0xFCFAAC", VA = "0xFCFAAC")]
		public void Update()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xFCFB88", Offset = "0xFCFB88", VA = "0xFCFB88")]
		private void EntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xFCFD8C", Offset = "0xFCFD8C", VA = "0xFCFD8C")]
		private void TryGetTokenAndUser()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xFCFF04", Offset = "0xFCFF04", VA = "0xFCFF04")]
		private void GetAccessTokenComplete(Message<string> msg)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xFD0104", Offset = "0xFD0104", VA = "0xFD0104")]
		private void GetLoggedInUserHandler(Message<Oculus.Platform.Models.User> message)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xFD0538", Offset = "0xFD0538", VA = "0xFD0538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C58C", Offset = "0xB3C58C")]
		private void <Awake>b__7_0(Scene scene, LoadSceneMode mode)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB295B8", Offset = "0xB295B8")]
	public class Environment : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20002F1")]
		public struct Light
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Color m_Color;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private float m_Intensity;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 m_Position;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion m_Rotation;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LightType m_Type;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float m_Range;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float m_SpotAngle;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool m_ShadowsEnabled;

			[Token(Token = "0x170002B6")]
			public Color Color
			{
				[Token(Token = "0x60012C3")]
				[Address(RVA = "0x1150D34", Offset = "0x1150D34", VA = "0x1150D34")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60012C4")]
				[Address(RVA = "0x1150D5C", Offset = "0x1150D5C", VA = "0x1150D5C")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20002F2")]
		public struct RenderSettingsLite
		{
			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_FogEnabled;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color m_FogColor;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_FogDensity;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_FogStartDistance;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_FogEndDistance;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_ClearColor;

			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_AmbientColor;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_SkyboxExposure;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color m_SkyboxTint;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string m_EnvironmentPrefab;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string m_EnvironmentReverbZonePrefab;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Cubemap m_SkyboxCubemap;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Cubemap m_ReflectionCubemap;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float m_ReflectionIntensity;

			[Token(Token = "0x170002B7")]
			public FogMode m_FogMode
			{
				[Token(Token = "0x60012C5")]
				[Address(RVA = "0x1150D70", Offset = "0x1150D70", VA = "0x1150D70")]
				get
				{
					return default(FogMode);
				}
				[Token(Token = "0x60012C6")]
				[Address(RVA = "0x1150D78", Offset = "0x1150D78", VA = "0x1150D78")]
				set
				{
				}
			}
		}

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableGuid m_Guid;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_Description;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D m_IconTexture;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderSettingsLite m_RenderSettings;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Light> m_Lights;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float m_TeleportBoundsHalfWidth;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_ControllerXRayHeight;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB2FC6C", Offset = "0xB2FC6C")]
		public Vector3 m_WidgetHome;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material m_DerivedSkyboxMaterial;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color m_SkyboxColorA;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color m_SkyboxColorB;

		[Token(Token = "0x170002B5")]
		public Material m_SkyboxMaterial
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xED51A4", Offset = "0xED51A4", VA = "0xED51A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xED5040", Offset = "0xED5040", VA = "0xED5040")]
		public static void SetRenderSettings(RenderSettingsLite src)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xED50DC", Offset = "0xED50DC", VA = "0xED50DC")]
		public static RenderSettingsLite GetRenderSettings()
		{
			return default(RenderSettingsLite);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xED5290", Offset = "0xED5290", VA = "0xED5290")]
		public Environment()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class EnvironmentCatalog : MonoBehaviour
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EnvironmentCatalog m_Instance;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_SkyboxMaterial;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Environment m_DefaultEnvironment;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IsLoading;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Guid, Environment> m_GuidToEnvironment;

		[Token(Token = "0x170002B8")]
		public IEnumerable<Environment> AllEnvironments
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xED54EC", Offset = "0xED54EC", VA = "0xED54EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		public Environment DefaultEnvironment
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xED5540", Offset = "0xED5540", VA = "0xED5540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public bool IsLoading
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xED55D8", Offset = "0xED55D8", VA = "0xED55D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400005A")]
		public event Action EnvironmentsChanged
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xED53AC", Offset = "0xED53AC", VA = "0xED53AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C59C", Offset = "0xB3C59C")]
			add
			{
			}
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xED544C", Offset = "0xED544C", VA = "0xED544C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C5AC", Offset = "0xB3C5AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xED5548", Offset = "0xED5548", VA = "0xED5548")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xED55E0", Offset = "0xED55E0", VA = "0xED55E0")]
		public void BeginReload()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xED5B08", Offset = "0xED5B08", VA = "0xED5B08")]
		public Environment GetEnvironment(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xED5BF0", Offset = "0xED5BF0", VA = "0xED5BF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xED59CC", Offset = "0xED59CC", VA = "0xED59CC")]
		private static void LoadEnvironmentsInManifest(List<Environment> output)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xED5C30", Offset = "0xED5C30", VA = "0xED5C30")]
		public EnvironmentCatalog()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class ExceptionRenderScript : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		public class ExceptionLine
		{
			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Condition;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_StackTrace;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_Lifetime;

			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x1150E98", Offset = "0x1150E98", VA = "0x1150E98")]
			public ExceptionLine()
			{
			}
		}

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_TextMesh;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_MaxNumLines;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ExceptionLine> m_Lines;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_LineLifetime;

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xED751C", Offset = "0xED751C", VA = "0xED751C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xED764C", Offset = "0xED764C", VA = "0xED764C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xED79C8", Offset = "0xED79C8", VA = "0xED79C8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xED7A98", Offset = "0xED7A98", VA = "0xED7A98")]
		public static string StreamlineStackTrace(string stackTrace)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xED7B38", Offset = "0xED7B38", VA = "0xED7B38")]
		private void HandleException(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xED7784", Offset = "0xED7784", VA = "0xED7784")]
		private void UpdateMeshText()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xED7C90", Offset = "0xED7C90", VA = "0xED7C90")]
		public ExceptionRenderScript()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class ExperimentalOnly : MonoBehaviour
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_ExperimentalOnly;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xED7E7C", Offset = "0xED7E7C", VA = "0xED7E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xED7F00", Offset = "0xED7F00", VA = "0xED7F00")]
		public ExperimentalOnly()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class DynamicExportableMaterial : IExportableMaterial
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2FD14", Offset = "0xB2FD14")]
		private readonly BrushDescriptor <Parent>k__BackingField;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Guid m_UniqueName;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string m_DurableName;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_UriBase;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, string> m_TextureUris;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, Vector2> m_TextureSizes;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, float> m_FloatParams;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, Vector3> m_VectorParams;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Color> m_ColorParams;

		[Token(Token = "0x170002BB")]
		public Color BaseColorFactor
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xED3708", Offset = "0xED3708", VA = "0xED3708")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xED3490", Offset = "0xED3490", VA = "0xED3490")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public string BaseColorTex
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xED3774", Offset = "0xED3774", VA = "0xED3774")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0xED352C", Offset = "0xED352C", VA = "0xED352C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float MetallicFactor
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0xED37E0", Offset = "0xED37E0", VA = "0xED37E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0xED3610", Offset = "0xED3610", VA = "0xED3610")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float RoughnessFactor
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xED384C", Offset = "0xED384C", VA = "0xED384C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xED368C", Offset = "0xED368C", VA = "0xED368C")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public Guid UniqueName
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xED38B8", Offset = "0xED38B8", VA = "0xED38B8", Slot = "4")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x170002C0")]
		public string DurableName
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xED38C4", Offset = "0xED38C4", VA = "0xED38C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xED38CC", Offset = "0xED38CC", VA = "0xED38CC", Slot = "6")]
			get
			{
				return default(ExportableMaterialBlendMode);
			}
		}

		[Token(Token = "0x170002C2")]
		public float EmissiveFactor
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xED38E8", Offset = "0xED38E8", VA = "0xED38E8", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C3")]
		public GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xED38F0", Offset = "0xED38F0", VA = "0xED38F0", Slot = "8")]
			get
			{
				return default(GeometryPool.VertexLayout);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0xED3950", Offset = "0xED3950", VA = "0xED3950", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public string VertShaderUri
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xED3958", Offset = "0xED3958", VA = "0xED3958", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public string FragShaderUri
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0xED3974", Offset = "0xED3974", VA = "0xED3974", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		public bool EnableCull
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xED3990", Offset = "0xED3990", VA = "0xED3990", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C8")]
		public string UriBase
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xED39AC", Offset = "0xED39AC", VA = "0xED39AC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xED39B4", Offset = "0xED39B4", VA = "0xED39B4", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xED39BC", Offset = "0xED39BC", VA = "0xED39BC", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xED39C4", Offset = "0xED39C4", VA = "0xED39C4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		public Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xED39CC", Offset = "0xED39CC", VA = "0xED39CC", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xED39D4", Offset = "0xED39D4", VA = "0xED39D4", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public BrushDescriptor Parent
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xED39DC", Offset = "0xED39DC", VA = "0xED39DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C5BC", Offset = "0xB3C5BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xED3294", Offset = "0xED3294", VA = "0xED3294")]
		public DynamicExportableMaterial(BrushDescriptor parent, string durableName, Guid uniqueName, string uriBase)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xED3940", Offset = "0xED3940", VA = "0xED3940", Slot = "9")]
		public bool HasExportTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xED3948", Offset = "0xED3948", VA = "0xED3948", Slot = "10")]
		public string GetExportTextureFilename()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F8")]
	public static class Export
	{
		[Token(Token = "0x20002F9")]
		private class Progress
		{
			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<string, float> m_workAmount;

			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_totalWork;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float m_completedWork;

			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x11510A0", Offset = "0x11510A0", VA = "0x11510A0")]
			public Progress()
			{
			}

			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x115115C", Offset = "0x115115C", VA = "0x115115C")]
			public void SetWork(string name, float effort = 1f)
			{
			}

			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x11512D0", Offset = "0x11512D0", VA = "0x11512D0")]
			public void CompleteWork(string name)
			{
			}
		}

		[Token(Token = "0x20002FA")]
		public class AutoTimer : IDisposable
		{
			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Stopwatch timer;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_tag;

			[Token(Token = "0x60012FC")]
			[Address(RVA = "0x1150EA0", Offset = "0x1150EA0", VA = "0x1150EA0")]
			public AutoTimer(string tag)
			{
			}

			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x1150F28", Offset = "0x1150F28", VA = "0x1150F28", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4001373")]
		private const string kExportDocumentationUrl = "https://docs.google.com/document/d/11ZsHozYn9FnWG7y3s3WAyKIACfbfwb4PbaS8cZ_xjvo#heading=h.im5f33smiavy";

		[Token(Token = "0x4001374")]
		private const string kExportReadmeName = "README.txt";

		[Token(Token = "0x4001375")]
		private const string kExportReadmeBody = "Please see https://docs.google.com/document/d/11ZsHozYn9FnWG7y3s3WAyKIACfbfwb4PbaS8cZ_xjvo#heading=h.im5f33smiavy";

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xED7F10", Offset = "0xED7F10", VA = "0xED7F10")]
		private static string MakeExportPath(string parent, string basename, string ext)
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xED8060", Offset = "0xED8060", VA = "0xED8060")]
		public static void ExportScene()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	internal class ExportCollector
	{
		[Token(Token = "0x20002FC")]
		private struct PrefabGeometry
		{
			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Model model;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GeometryPool pool;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IExportableMaterial exportableMaterial;
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29604", Offset = "0xB29604")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool includeLocalMediaContent;

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x115172C", Offset = "0x115172C", VA = "0x115172C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x1151734", Offset = "0x1151734", VA = "0x1151734")]
			internal bool <GetExportPayload>g__IsModelExportable|0(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x11517CC", Offset = "0x11517CC", VA = "0x11517CC")]
			internal bool <GetExportPayload>g__IsImageExportable|2(ImageWidget w)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29614", Offset = "0xB29614")]
		private sealed class <>c
		{
			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ModelWidget, bool> <>9__2_1;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GrabWidgetData, Media2dWidget> <>9__2_3;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Media2dWidget, bool> <>9__2_4;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Media2dWidget, bool> <>9__2_5;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ImageWidget, ReferenceImage> <>9__2_6;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ModelWidget, Model> <>9__14_0;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<IExportableMaterial, GeometryPool.VertexLayout?> <>9__16_1;

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x11513E8", Offset = "0x11513E8", VA = "0x11513E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x11513F0", Offset = "0x11513F0", VA = "0x11513F0")]
			internal bool <GetExportPayload>b__2_1(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x115141C", Offset = "0x115141C", VA = "0x115141C")]
			internal Media2dWidget <GetExportPayload>b__2_3(GrabWidgetData grab)
			{
				return null;
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x11514A4", Offset = "0x11514A4", VA = "0x11514A4")]
			internal bool <GetExportPayload>b__2_4(Media2dWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x1151534", Offset = "0x1151534", VA = "0x1151534")]
			internal bool <GetExportPayload>b__2_5(Media2dWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x11515B0", Offset = "0x11515B0", VA = "0x11515B0")]
			internal ReferenceImage <GetExportPayload>b__2_6(ImageWidget widget)
			{
				return null;
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x11515C8", Offset = "0x11515C8", VA = "0x11515C8")]
			internal Model <BuildModelsAsModelMeshes>b__14_0(ModelWidget widget)
			{
				return null;
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x11515E0", Offset = "0x11515E0", VA = "0x11515E0")]
			internal GeometryPool.VertexLayout? <GetPrefabGameObjMeshes>b__16_1(IExportableMaterial iem)
			{
				return null;
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29624", Offset = "0xB29624")]
		private sealed class <GetPrefabGameObjs>d__15 : IEnumerable<PrefabGeometry[]>, IEnumerable, IEnumerator<PrefabGeometry[]>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PrefabGeometry[] <>2__current;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Model prefab;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Model <>3__prefab;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ExportUtils.SceneStatePayload payload;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ExportUtils.SceneStatePayload <>3__payload;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB2FD24", Offset = "0xB2FD24")]
			private IEnumerator<(MeshFilter, int)> <>7__wrap1;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private MeshFilter <meshFilter>5__3;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <index>5__4;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private MeshRenderer <renderer>5__5;

			[Token(Token = "0x170002CF")]
			private PrefabGeometry[] System.Collections.Generic.IEnumerator<TiltBrush.ExportCollector.PrefabGeometry[]>.Current
			{
				[Token(Token = "0x600131E")]
				[Address(RVA = "0x1152674", Offset = "0x1152674", VA = "0x1152674", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001320")]
				[Address(RVA = "0x11526BC", Offset = "0x11526BC", VA = "0x11526BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x1152018", Offset = "0x1152018", VA = "0x1152018")]
			[DebuggerHidden]
			public <GetPrefabGameObjs>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x1152050", Offset = "0x1152050", VA = "0x1152050", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x1152138", Offset = "0x1152138", VA = "0x1152138", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x115207C", Offset = "0x115207C", VA = "0x115207C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x115267C", Offset = "0x115267C", VA = "0x115267C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x11526C4", Offset = "0x11526C4", VA = "0x11526C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PrefabGeometry[]> System.Collections.Generic.IEnumerable<TiltBrush.ExportCollector.PrefabGeometry[]>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x1152774", Offset = "0x1152774", VA = "0x1152774", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29634", Offset = "0xB29634")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Model prefab;

			[Token(Token = "0x6001323")]
			[Address(RVA = "0x1151708", Offset = "0x1151708", VA = "0x1151708")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001324")]
			[Address(RVA = "0x1151710", Offset = "0x1151710", VA = "0x1151710")]
			internal IExportableMaterial <GetPrefabGameObjMeshes>b__0(Material mat)
			{
				return null;
			}
		}

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29644", Offset = "0xB29644")]
		private sealed class <GetPrefabGameObjMeshes>d__16 : IEnumerable<PrefabGeometry>, IEnumerable, IEnumerator<PrefabGeometry>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PrefabGeometry <>2__current;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Model prefab;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Model <>3__prefab;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Material[] meshMaterials;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Material[] <>3__meshMaterials;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Mesh mesh;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Mesh <>3__mesh;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private ExportUtils.SceneStatePayload payload;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public ExportUtils.SceneStatePayload <>3__payload;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int meshIndex;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public int <>3__meshIndex;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private string <exportName>5__2;

			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private IExportableMaterial[] <exportableMaterials>5__3;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private GeometryPool[] <subMeshPools>5__4;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <subMeshIndex>5__5;

			[Token(Token = "0x170002D1")]
			private PrefabGeometry System.Collections.Generic.IEnumerator<TiltBrush.ExportCollector.PrefabGeometry>.Current
			{
				[Token(Token = "0x6001328")]
				[Address(RVA = "0x1151E98", Offset = "0x1151E98", VA = "0x1151E98", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PrefabGeometry);
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600132A")]
				[Address(RVA = "0x1151EE8", Offset = "0x1151EE8", VA = "0x1151EE8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x11517FC", Offset = "0x11517FC", VA = "0x11517FC")]
			[DebuggerHidden]
			public <GetPrefabGameObjMeshes>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x1151834", Offset = "0x1151834", VA = "0x1151834", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x1151838", Offset = "0x1151838", VA = "0x1151838", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x1151EA8", Offset = "0x1151EA8", VA = "0x1151EA8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x1151F4C", Offset = "0x1151F4C", VA = "0x1151F4C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PrefabGeometry> System.Collections.Generic.IEnumerable<TiltBrush.ExportCollector.PrefabGeometry>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x1152014", Offset = "0x1152014", VA = "0x1152014", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Guid kPbrTransparentGuid;

		[Token(Token = "0x400137C")]
		private const float kRefimageMetallicFactor = 0f;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xED8A90", Offset = "0xED8A90", VA = "0xED8A90")]
		public static ExportUtils.SceneStatePayload GetExportPayload(AxisConvention axes, bool includeLocalMediaContent = false, [Optional] string temporaryDirectory)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xED9884", Offset = "0xED9884", VA = "0xED9884")]
		private static void BuildGenerator(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xED9900", Offset = "0xED9900", VA = "0xED9900")]
		private static void BuildEnvironment(ExportUtils.SceneStatePayload payload, bool includeSkyCubemap = false)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xED9A88", Offset = "0xED9A88", VA = "0xED9A88")]
		private static void BuildLights(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xEDAA3C", Offset = "0xEDAA3C", VA = "0xEDAA3C")]
		private static void BuildEmptyXforms(ExportUtils.SceneStatePayload payload, IEnumerable<MediaWidget> widgets)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xED9D4C", Offset = "0xED9D4C", VA = "0xED9D4C")]
		private static void BuildBrushMeshes(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xEDB41C", Offset = "0xEDB41C", VA = "0xEDB41C")]
		private static void BuildBrushMeshesFromExportCanvas(ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xEDB768", Offset = "0xEDB768", VA = "0xEDB768")]
		private static ExportUtils.GroupPayload BuildGroupPayload(ExportUtils.SceneStatePayload payload, ExportUtils.ExportGroup exportGroup)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xEDC2EC", Offset = "0xEDC2EC", VA = "0xEDC2EC")]
		private static Guid MakeDeterministicUniqueName(Guid descriptor, ReferenceImage ri, int id)
		{
			return default(Guid);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xEDAE1C", Offset = "0xEDAE1C", VA = "0xEDAE1C")]
		private static DynamicExportableMaterial CreateImageQuadMaterial(ReferenceImage ri)
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xEDAFDC", Offset = "0xEDAFDC", VA = "0xEDAFDC")]
		private static ExportUtils.ImageQuadPayload BuildImageQuadPayload(ExportUtils.SceneStatePayload payload, ImageWidget widget, DynamicExportableMaterial material, int id)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xED9DAC", Offset = "0xED9DAC", VA = "0xED9DAC")]
		private static void BuildModelsAsModelMeshes(ExportUtils.SceneStatePayload payload, IEnumerable<ModelWidget> modelWidgets)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xEDC3DC", Offset = "0xEDC3DC", VA = "0xEDC3DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C5CC", Offset = "0xB3C5CC")]
		private static IEnumerable<PrefabGeometry[]> GetPrefabGameObjs(ExportUtils.SceneStatePayload payload, Model prefab)
		{
			return null;
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xEDC458", Offset = "0xEDC458", VA = "0xEDC458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C62C", Offset = "0xB3C62C")]
		private static IEnumerable<PrefabGeometry> GetPrefabGameObjMeshes(Mesh mesh, Material[] meshMaterials, ExportUtils.SceneStatePayload payload, Model prefab, int meshIndex)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xEDC4F4", Offset = "0xEDC4F4", VA = "0xEDC4F4")]
		public ExportCollector()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class ExportFileReference
	{
		[Token(Token = "0x2000303")]
		public class DisambiguationContext
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<string> m_exportedFileNames;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, ExportFileReference> m_filesByOriginalLocation;

			[Token(Token = "0x6001336")]
			[Address(RVA = "0x1152778", Offset = "0x1152778", VA = "0x1152778")]
			public DisambiguationContext()
			{
			}
		}

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool m_local;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string m_originalLocation;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string m_uri;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x100A1E8", Offset = "0x100A1E8", VA = "0x100A1E8")]
		private static string GetFullPathForUri(string sourceUri, string uriBase)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x100A450", Offset = "0x100A450", VA = "0x100A450")]
		public static bool IsHttp(string uri)
		{
			return default(bool);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x100A4E0", Offset = "0x100A4E0", VA = "0x100A4E0")]
		public static ExportFileReference CreateSafeLocal(string originalLocation, string unsafeName)
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x100A7D4", Offset = "0x100A7D4", VA = "0x100A7D4")]
		public static ExportFileReference CreateLocal(string originalLocation, string name)
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x100A94C", Offset = "0x100A94C", VA = "0x100A94C")]
		public static ExportFileReference CreateHttp(string uri)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x100AA04", Offset = "0x100AA04", VA = "0x100AA04")]
		public static ExportFileReference GetOrCreateSafeLocal(DisambiguationContext disambiguationContext, string sourceUri, string uriBase, [Optional] string suggestedName)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x100A908", Offset = "0x100A908", VA = "0x100A908")]
		private ExportFileReference(bool local, string originalLocation, string uri)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x100AD4C", Offset = "0x100AD4C", VA = "0x100AD4C")]
		public string AsJson()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x100ADC0", Offset = "0x100ADC0", VA = "0x100ADC0")]
		public bool IsHttp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000304")]
	public class ExportGlTF
	{
		[Token(Token = "0x2000305")]
		public struct ExportResults
		{
			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool success;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int numTris;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string[] exportedFiles;
		}

		[Serializable]
		[Token(Token = "0x2000306")]
		public class ExportManifest
		{
			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tiltBrushVersion;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tiltBrushBuildStamp;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<Guid, ExportedBrush> brushes;

			[Token(Token = "0x600133F")]
			[Address(RVA = "0x1152920", Offset = "0x1152920", VA = "0x1152920")]
			public ExportManifest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000307")]
		public class ExportedBrush
		{
			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Guid guid;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderName;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string shaderVersion;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string vertexShader;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fragmentShader;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExportableMaterialBlendMode blendMode;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool enableCull;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Dictionary<string, string> textures;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Dictionary<string, Vector2> textureSizes;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Dictionary<string, float> floatParams;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Dictionary<string, Vector3> vectorParams;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Dictionary<string, Color> colorParams;

			[Token(Token = "0x6001340")]
			[Address(RVA = "0x1152998", Offset = "0x1152998", VA = "0x1152998")]
			public ExportedBrush()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29654", Offset = "0xB29654")]
		private sealed class <>c
		{
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ExportUtils.GroupPayload, IEnumerable<ExportUtils.BrushMeshPayload>> <>9__10_0;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB2FDA8", Offset = "0xB2FDA8")]
			public static Func<ExportUtils.ModelMeshPayload, (Model, int)> <>9__10_1;

			[Token(Token = "0x6001342")]
			[Address(RVA = "0x1152890", Offset = "0x1152890", VA = "0x1152890")]
			public <>c()
			{
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0x1152898", Offset = "0x1152898", VA = "0x1152898")]
			internal IEnumerable<ExportUtils.BrushMeshPayload> <WriteObjectsAndConnections>b__10_0(ExportUtils.GroupPayload g)
			{
				return null;
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0x11528B0", Offset = "0x11528B0", VA = "0x11528B0")]
			internal (Model, int) <WriteObjectsAndConnections>b__10_1(ExportUtils.ModelMeshPayload m)
			{
				return default((Model, int));
			}
		}

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GlTF_ScriptableExporter m_exporter;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x100ADC8", Offset = "0x100ADC8", VA = "0x100ADC8")]
		public ExportResults ExportBrushStrokes(string outputFile, AxisConvention axes, bool binary, bool doExtras, bool includeLocalMediaContent, int gltfVersion, bool selfContained = true)
		{
			return default(ExportResults);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x100AF28", Offset = "0x100AF28", VA = "0x100AF28")]
		private ExportResults ExportHelper(ExportUtils.SceneStatePayload payload, string outputFile, bool binary, bool doExtras, int gltfVersion, bool allowHttpUri)
		{
			return default(ExportResults);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x100CBFC", Offset = "0x100CBFC", VA = "0x100CBFC")]
		private static string CommaFormattedFloatRGB(Color c)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x100CCD0", Offset = "0x100CCD0", VA = "0x100CCD0")]
		private static string CommaFormattedVector3(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x100B494", Offset = "0x100B494", VA = "0x100B494")]
		private void SetExtras(GlTF_ScriptableExporter exporter, ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x100CDA4", Offset = "0x100CDA4", VA = "0x100CDA4")]
		public GlTF_Node GetGroupNode(uint groupId)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x100BB10", Offset = "0x100BB10", VA = "0x100BB10")]
		private void WriteObjectsAndConnections(GlTF_ScriptableExporter exporter, ExportUtils.SceneStatePayload payload)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x100CED4", Offset = "0x100CED4", VA = "0x100CED4")]
		public ExportGlTF()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public static class ExportRaw
	{
		[Token(Token = "0x6001345")]
		[Address(RVA = "0x100CEDC", Offset = "0x100CEDC", VA = "0x100CEDC")]
		public static bool Export(string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x100D728", Offset = "0x100D728", VA = "0x100D728")]
		private static void DestroyFile(string path)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x100D468", Offset = "0x100D468", VA = "0x100D468")]
		private static void WriteBrushes(JsonWriter json, Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x100D774", Offset = "0x100D774", VA = "0x100D774")]
		private static void WriteBrush(JsonWriter json, BrushDescriptor brush)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x100D2CC", Offset = "0x100D2CC", VA = "0x100D2CC")]
		private static void WriteStrokes(JsonWriter json, out Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x100D89C", Offset = "0x100D89C", VA = "0x100D89C")]
		private static void WriteStroke(JsonWriter json, Stroke stroke, Dictionary<Guid, int> brushMap)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x100DBDC", Offset = "0x100DBDC", VA = "0x100DBDC")]
		private static void WriteMesh(JsonWriter json, Mesh mesh, GeometryPool.VertexLayout layout)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x100DFBC", Offset = "0x100DFBC", VA = "0x100DFBC")]
		private static void WriteUvChannel(JsonWriter json, int channel, int numComponents, Mesh mesh, int n)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x100DF54", Offset = "0x100DF54", VA = "0x100DF54")]
		private static void WriteArray(JsonWriter json, string name, byte[] buf)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x100E2D0", Offset = "0x100E2D0", VA = "0x100E2D0")]
		private static byte[] AsByte(Color32[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x100E4E4", Offset = "0x100E4E4", VA = "0x100E4E4")]
		private static byte[] AsByte(int[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x100E5C8", Offset = "0x100E5C8", VA = "0x100E5C8")]
		private static byte[] AsByte(Vector2[] a, int n)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x100DE20", Offset = "0x100DE20", VA = "0x100DE20")]
		private static byte[] AsByte(Vector3[] a, int n, bool flip = false)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x100E3B4", Offset = "0x100E3B4", VA = "0x100E3B4")]
		private static byte[] AsByte(Vector4[] a, int n, bool flip = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200030A")]
	public static class ExportStl
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x100E6AC", Offset = "0x100E6AC", VA = "0x100E6AC")]
		public static void Export(string outputFile)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public static class ExportUtils
	{
		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB29664", Offset = "0xB29664")]
		public class ExportCanvas
		{
			[Serializable]
			[Token(Token = "0x200030D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29678", Offset = "0xB29678")]
			private sealed class <>c
			{
				[Token(Token = "0x40013CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40013CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Stroke, SketchGroupTag> <>9__4_0;

				[Token(Token = "0x40013CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<IGrouping<SketchGroupTag, Stroke>, ExportGroup> <>9__4_1;

				[Token(Token = "0x40013CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static Func<Stroke, Guid> <>9__5_0;

				[Token(Token = "0x40013D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public static Func<IGrouping<Guid, Stroke>, ExportBrush> <>9__5_1;

				[Token(Token = "0x6001368")]
				[Address(RVA = "0x210C894", Offset = "0x210C894", VA = "0x210C894")]
				public <>c()
				{
				}

				[Token(Token = "0x6001369")]
				[Address(RVA = "0x210C89C", Offset = "0x210C89C", VA = "0x210C89C")]
				internal SketchGroupTag <SplitByGroup>b__4_0(Stroke stroke)
				{
					return default(SketchGroupTag);
				}

				[Token(Token = "0x600136A")]
				[Address(RVA = "0x210C8B4", Offset = "0x210C8B4", VA = "0x210C8B4")]
				internal ExportGroup <SplitByGroup>b__4_1(IGrouping<SketchGroupTag, Stroke> g)
				{
					return null;
				}

				[Token(Token = "0x600136B")]
				[Address(RVA = "0x210C914", Offset = "0x210C914", VA = "0x210C914")]
				internal Guid <SplitByBrush>b__5_0(Stroke stroke)
				{
					return default(Guid);
				}

				[Token(Token = "0x600136C")]
				[Address(RVA = "0x210C92C", Offset = "0x210C92C", VA = "0x210C92C")]
				internal ExportBrush <SplitByBrush>b__5_1(IGrouping<Guid, Stroke> g)
				{
					return null;
				}
			}

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasScript m_canvas;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x6001363")]
			[Address(RVA = "0x11539FC", Offset = "0x11539FC", VA = "0x11539FC")]
			public ExportCanvas(CanvasScript canvas, IEnumerable<Stroke> strokes)
			{
			}

			[Token(Token = "0x6001364")]
			[Address(RVA = "0x1152C58", Offset = "0x1152C58", VA = "0x1152C58")]
			public ExportCanvas(IGrouping<CanvasScript, Stroke> group)
			{
			}

			[Token(Token = "0x6001365")]
			[Address(RVA = "0x1153A70", Offset = "0x1153A70", VA = "0x1153A70")]
			public IEnumerable<ExportGroup> SplitByGroup()
			{
				return null;
			}

			[Token(Token = "0x6001366")]
			[Address(RVA = "0x1153C68", Offset = "0x1153C68", VA = "0x1153C68")]
			public IEnumerable<ExportBrush> SplitByBrush()
			{
				return null;
			}
		}

		[Token(Token = "0x200030E")]
		public class ExportGroup
		{
			[Serializable]
			[Token(Token = "0x200030F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29688", Offset = "0xB29688")]
			private sealed class <>c
			{
				[Token(Token = "0x40013D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40013D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Stroke, Guid> <>9__3_0;

				[Token(Token = "0x40013D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<IGrouping<Guid, Stroke>, ExportBrush> <>9__3_1;

				[Token(Token = "0x6001370")]
				[Address(RVA = "0x210C9EC", Offset = "0x210C9EC", VA = "0x210C9EC")]
				public <>c()
				{
				}

				[Token(Token = "0x6001371")]
				[Address(RVA = "0x210C9F4", Offset = "0x210C9F4", VA = "0x210C9F4")]
				internal Guid <SplitByBrush>b__3_0(Stroke stroke)
				{
					return default(Guid);
				}

				[Token(Token = "0x6001372")]
				[Address(RVA = "0x210CA0C", Offset = "0x210CA0C", VA = "0x210CA0C")]
				internal ExportBrush <SplitByBrush>b__3_1(IGrouping<Guid, Stroke> g)
				{
					return null;
				}
			}

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchGroupTag m_group;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x600136D")]
			[Address(RVA = "0x1153E60", Offset = "0x1153E60", VA = "0x1153E60")]
			public ExportGroup(IGrouping<SketchGroupTag, Stroke> group)
			{
			}

			[Token(Token = "0x600136E")]
			[Address(RVA = "0x1153F4C", Offset = "0x1153F4C", VA = "0x1153F4C")]
			public IEnumerable<ExportBrush> SplitByBrush()
			{
				return null;
			}
		}

		[Token(Token = "0x2000310")]
		public class ExportBrush
		{
			[Token(Token = "0x2000311")]
			public struct PoolAndStrokes
			{
				[Token(Token = "0x40013D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GeometryPool pool;

				[Token(Token = "0x40013D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public List<Stroke> strokes;
			}

			[Serializable]
			[Token(Token = "0x2000312")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29698", Offset = "0xB29698")]
			private sealed class <>c
			{
				[Token(Token = "0x40013DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40013DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Stroke, GeometryPool> <>9__5_0;

				[Token(Token = "0x40013DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<PointerManager.ControlPoint, float> <>9__7_0;

				[Token(Token = "0x600137A")]
				[Address(RVA = "0x210B4C8", Offset = "0x210B4C8", VA = "0x210B4C8")]
				public <>c()
				{
				}

				[Token(Token = "0x600137B")]
				[Address(RVA = "0x210B4D0", Offset = "0x210B4D0", VA = "0x210B4D0")]
				internal GeometryPool <PreserveBatchResidency>b__5_0(Stroke stroke)
				{
					return null;
				}

				[Token(Token = "0x600137C")]
				[Address(RVA = "0x210B4DC", Offset = "0x210B4DC", VA = "0x210B4DC")]
				internal float <AppendTimestamps>b__7_0(PointerManager.ControlPoint cp)
				{
					return default(float);
				}
			}

			[Token(Token = "0x2000313")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB296A8", Offset = "0xB296A8")]
			private sealed class <PreserveBatchResidency>d__5 : IEnumerable<Stroke>, IEnumerable, IEnumerator<Stroke>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40013DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40013DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Stroke <>2__current;

				[Token(Token = "0x40013DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x40013E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private IEnumerable<Stroke> input;

				[Token(Token = "0x40013E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public IEnumerable<Stroke> <>3__input;

				[Token(Token = "0x40013E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private IEnumerator<IGrouping<GeometryPool, Stroke>> <>7__wrap1;

				[Token(Token = "0x40013E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private GeometryPool <pool>5__3;

				[Token(Token = "0x40013E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private Mesh <previousBackingMesh>5__4;

				[Token(Token = "0x40013E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private IEnumerator<Stroke> <>7__wrap4;

				[Token(Token = "0x170002D3")]
				private Stroke System.Collections.Generic.IEnumerator<TiltBrush.Stroke>.Current
				{
					[Token(Token = "0x6001382")]
					[Address(RVA = "0x210BDF0", Offset = "0x210BDF0", VA = "0x210BDF0", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170002D4")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001384")]
					[Address(RVA = "0x210BE38", Offset = "0x210BE38", VA = "0x210BE38", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600137D")]
				[Address(RVA = "0x210B4F8", Offset = "0x210B4F8", VA = "0x210B4F8")]
				[DebuggerHidden]
				public <PreserveBatchResidency>d__5(int <>1__state)
				{
				}

				[Token(Token = "0x600137E")]
				[Address(RVA = "0x210B530", Offset = "0x210B530", VA = "0x210B530", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600137F")]
				[Address(RVA = "0x210B738", Offset = "0x210B738", VA = "0x210B738", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001380")]
				[Address(RVA = "0x210B67C", Offset = "0x210B67C", VA = "0x210B67C")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x6001381")]
				[Address(RVA = "0x210B5C0", Offset = "0x210B5C0", VA = "0x210B5C0")]
				private void <>m__Finally2()
				{
				}

				[Token(Token = "0x6001383")]
				[Address(RVA = "0x210BDF8", Offset = "0x210BDF8", VA = "0x210BDF8", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6001385")]
				[Address(RVA = "0x210BE40", Offset = "0x210BE40", VA = "0x210BE40", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<Stroke> System.Collections.Generic.IEnumerable<TiltBrush.Stroke>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6001386")]
				[Address(RVA = "0x210BEE8", Offset = "0x210BEE8", VA = "0x210BEE8", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x2000314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB296B8", Offset = "0xB296B8")]
			private sealed class <ToGeometryBatches>d__8 : IEnumerable<PoolAndStrokes>, IEnumerable, IEnumerator<PoolAndStrokes>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40013E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40013E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private PoolAndStrokes <>2__current;

				[Token(Token = "0x40013E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private int <>l__initialThreadId;

				[Token(Token = "0x40013E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public ExportBrush <>4__this;

				[Token(Token = "0x40013EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int vertexLimit;

				[Token(Token = "0x40013EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				public int <>3__vertexLimit;

				[Token(Token = "0x40013EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private GeometryPool.VertexLayout <layout>5__2;

				[Token(Token = "0x40013ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private IEnumerator<Stroke> <>7__wrap2;

				[Token(Token = "0x40013EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				private Stroke <stroke>5__4;

				[Token(Token = "0x170002D5")]
				private PoolAndStrokes System.Collections.Generic.IEnumerator<TiltBrush.ExportUtils.ExportBrush.PoolAndStrokes>.Current
				{
					[Token(Token = "0x600138B")]
					[Address(RVA = "0x210C6D4", Offset = "0x210C6D4", VA = "0x210C6D4", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return default(PoolAndStrokes);
					}
				}

				[Token(Token = "0x170002D6")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600138D")]
					[Address(RVA = "0x210C720", Offset = "0x210C720", VA = "0x210C720", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001387")]
				[Address(RVA = "0x210BEEC", Offset = "0x210BEEC", VA = "0x210BEEC")]
				[DebuggerHidden]
				public <ToGeometryBatches>d__8(int <>1__state)
				{
				}

				[Token(Token = "0x6001388")]
				[Address(RVA = "0x210BF24", Offset = "0x210BF24", VA = "0x210BF24", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001389")]
				[Address(RVA = "0x210BFFC", Offset = "0x210BFFC", VA = "0x210BFFC", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600138A")]
				[Address(RVA = "0x210BF40", Offset = "0x210BF40", VA = "0x210BF40")]
				private void <>m__Finally1()
				{
				}

				[Token(Token = "0x600138C")]
				[Address(RVA = "0x210C6E0", Offset = "0x210C6E0", VA = "0x210C6E0", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x600138E")]
				[Address(RVA = "0x210C780", Offset = "0x210C780", VA = "0x210C780", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<PoolAndStrokes> System.Collections.Generic.IEnumerable<TiltBrush.ExportUtils.ExportBrush.PoolAndStrokes>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x600138F")]
				[Address(RVA = "0x210C830", Offset = "0x210C830", VA = "0x210C830", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BrushDescriptor m_desc;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<Stroke> m_strokes;

			[Token(Token = "0x6001373")]
			[Address(RVA = "0x115320C", Offset = "0x115320C", VA = "0x115320C")]
			public ExportBrush(IGrouping<Guid, Stroke> group)
			{
			}

			[Token(Token = "0x6001374")]
			[Address(RVA = "0x1153338", Offset = "0x1153338", VA = "0x1153338")]
			private static GeometryPool GetPool(Stroke stroke)
			{
				return null;
			}

			[Token(Token = "0x6001375")]
			[Address(RVA = "0x115336C", Offset = "0x115336C", VA = "0x115336C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C76C", Offset = "0xB3C76C")]
			private IEnumerable<Stroke> PreserveBatchResidency(IEnumerable<Stroke> input)
			{
				return null;
			}

			[Token(Token = "0x6001376")]
			[Address(RVA = "0x11533D8", Offset = "0x11533D8", VA = "0x11533D8")]
			private static void AugmentWithTimestamps(GeometryPool pool, ref List<Vector3> timestamps)
			{
			}

			[Token(Token = "0x6001377")]
			[Address(RVA = "0x1153524", Offset = "0x1153524", VA = "0x1153524")]
			private static void AppendTimestamps(Stroke stroke, int numVerts, List<Vector3> timestamps)
			{
			}

			[Token(Token = "0x6001378")]
			[Address(RVA = "0x1153980", Offset = "0x1153980", VA = "0x1153980")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C7CC", Offset = "0xB3C7CC")]
			public IEnumerable<PoolAndStrokes> ToGeometryBatches(int vertexLimit = 65534)
			{
				return null;
			}
		}

		[Token(Token = "0x2000315")]
		public class DeterministicIdGenerator
		{
			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Dictionary<int, int> m_instanceIdToId;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nextAvailable;

			[Token(Token = "0x6001390")]
			[Address(RVA = "0x1153090", Offset = "0x1153090", VA = "0x1153090")]
			public int GetIdFromInstanceId(UnityEngine.Object obj)
			{
				return default(int);
			}

			[Token(Token = "0x6001391")]
			[Address(RVA = "0x1153184", Offset = "0x1153184", VA = "0x1153184")]
			public DeterministicIdGenerator()
			{
			}
		}

		[Token(Token = "0x2000316")]
		public class SceneStatePayload
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string generator;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DeterministicIdGenerator idGenerator;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly AxisConvention axes;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public readonly bool reverseWinding;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public readonly float exportUnitsFromAppUnits;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public EnvPayload env;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LightsPayload lights;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public List<GroupPayload> groups;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GroupIdMapping groupIdMapping;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public List<ModelMeshPayload> modelMeshes;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public List<ImageQuadPayload> imageQuads;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public List<XformPayload> referenceThings;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public readonly string temporaryDirectory;

			[Token(Token = "0x6001392")]
			[Address(RVA = "0x1154574", Offset = "0x1154574", VA = "0x1154574")]
			public SceneStatePayload(AxisConvention axes, string temporaryDirectory)
			{
			}

			[Token(Token = "0x6001393")]
			[Address(RVA = "0x11547F0", Offset = "0x11547F0", VA = "0x11547F0")]
			public void Destroy()
			{
			}
		}

		[Token(Token = "0x2000317")]
		public class GroupPayload
		{
			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint id;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BrushMeshPayload> brushMeshes;

			[Token(Token = "0x6001394")]
			[Address(RVA = "0x1154144", Offset = "0x1154144", VA = "0x1154144")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6001395")]
			[Address(RVA = "0x1154264", Offset = "0x1154264", VA = "0x1154264")]
			public GroupPayload()
			{
			}
		}

		[Token(Token = "0x2000318")]
		public class EnvPayload
		{
			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Guid guid;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string description;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Cubemap skyCubemap;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useGradient;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Color skyColorA;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color skyColorB;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 skyGradientDir;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Color fogColor;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public float fogDensity;

			[Token(Token = "0x6001396")]
			[Address(RVA = "0x1153204", Offset = "0x1153204", VA = "0x1153204")]
			public EnvPayload()
			{
			}
		}

		[Token(Token = "0x2000319")]
		public class LightPayload
		{
			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightType type;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string legacyUniqueName;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color lightColor;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Matrix4x4 xform;

			[Token(Token = "0x6001397")]
			[Address(RVA = "0x1154384", Offset = "0x1154384", VA = "0x1154384")]
			public LightPayload()
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB296C8", Offset = "0xB296C8")]
		public class LightsPayload
		{
			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color ambientColor;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<LightPayload> lights;

			[Token(Token = "0x6001398")]
			[Address(RVA = "0x115438C", Offset = "0x115438C", VA = "0x115438C")]
			public LightsPayload()
			{
			}
		}

		[Token(Token = "0x200031B")]
		public abstract class BaseMeshPayload
		{
			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string legacyUniqueName;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string nodeName;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4 xform;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GeometryPool geometry;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string geometryName;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public IExportableMaterial exportableMaterial;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public readonly uint group;

			[Token(Token = "0x170002D7")]
			public abstract string MeshNamespace
			{
				[Token(Token = "0x600139A")]
				get;
			}

			[Token(Token = "0x6001399")]
			[Address(RVA = "0x1152F54", Offset = "0x1152F54", VA = "0x1152F54")]
			protected BaseMeshPayload(uint groupId)
			{
			}

			[Token(Token = "0x600139B")]
			[Address(RVA = "0x1152FB8", Offset = "0x1152FB8", VA = "0x1152FB8")]
			public void Destroy()
			{
			}
		}

		[Token(Token = "0x200031C")]
		public class ImageQuadPayload : BaseMeshPayload
		{
			[Token(Token = "0x170002D8")]
			public override string MeshNamespace
			{
				[Token(Token = "0x600139C")]
				[Address(RVA = "0x11542DC", Offset = "0x11542DC", VA = "0x11542DC", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600139D")]
			[Address(RVA = "0x1154320", Offset = "0x1154320", VA = "0x1154320")]
			public ImageQuadPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x200031D")]
		public class ModelMeshPayload : BaseMeshPayload
		{
			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Model model;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int modelId;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Matrix4x4 parentXform;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public Matrix4x4 localXform;

			[Token(Token = "0x170002D9")]
			public override string MeshNamespace
			{
				[Token(Token = "0x600139E")]
				[Address(RVA = "0x1154404", Offset = "0x1154404", VA = "0x1154404", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600139F")]
			[Address(RVA = "0x1154510", Offset = "0x1154510", VA = "0x1154510")]
			public ModelMeshPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x200031E")]
		public class BrushMeshPayload : BaseMeshPayload
		{
			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public List<Stroke> strokes;

			[Token(Token = "0x170002DA")]
			public override string MeshNamespace
			{
				[Token(Token = "0x60013A0")]
				[Address(RVA = "0x1152FE8", Offset = "0x1152FE8", VA = "0x1152FE8", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x115302C", Offset = "0x115302C", VA = "0x115302C")]
			public BrushMeshPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x200031F")]
		public class XformPayload
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly uint group;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4 xform;

			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x1154A3C", Offset = "0x1154A3C", VA = "0x1154A3C")]
			public XformPayload(uint groupId)
			{
			}
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB296DC", Offset = "0xB296DC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<Guid> allowedBrushGuids;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CanvasScript main;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasScript selection;

			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x1152D7C", Offset = "0x1152D7C", VA = "0x1152D7C")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x1152D84", Offset = "0x1152D84", VA = "0x1152D84")]
			internal bool <ExportMainCanvas>b__2(Stroke stroke)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB296EC", Offset = "0xB296EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BrushDescriptor, bool> <>9__20_0;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<BrushDescriptor, Guid> <>9__20_1;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<BrushDescriptor, bool> <>9__21_0;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<BrushDescriptor, Guid> <>9__21_1;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Stroke, CanvasScript> <>9__21_3;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<IGrouping<CanvasScript, Stroke>, ExportCanvas> <>9__21_4;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Color32, Color> <>9__24_0;

			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x1152B70", Offset = "0x1152B70", VA = "0x1152B70")]
			public <>c()
			{
			}

			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x1152B78", Offset = "0x1152B78", VA = "0x1152B78")]
			internal bool <ExportMainCanvas>b__20_0(BrushDescriptor b)
			{
				return default(bool);
			}

			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x1152B90", Offset = "0x1152B90", VA = "0x1152B90")]
			internal Guid <ExportMainCanvas>b__20_1(BrushDescriptor b)
			{
				return default(Guid);
			}

			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x1152BAC", Offset = "0x1152BAC", VA = "0x1152BAC")]
			internal bool <ExportAllCanvases>b__21_0(BrushDescriptor b)
			{
				return default(bool);
			}

			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x1152BC4", Offset = "0x1152BC4", VA = "0x1152BC4")]
			internal Guid <ExportAllCanvases>b__21_1(BrushDescriptor b)
			{
				return default(Guid);
			}

			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x1152BE0", Offset = "0x1152BE0", VA = "0x1152BE0")]
			internal CanvasScript <ExportAllCanvases>b__21_3(Stroke stroke)
			{
				return null;
			}

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x1152BFC", Offset = "0x1152BFC", VA = "0x1152BFC")]
			internal ExportCanvas <ExportAllCanvases>b__21_4(IGrouping<CanvasScript, Stroke> canvasStrokes)
			{
				return null;
			}

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x1152D44", Offset = "0x1152D44", VA = "0x1152D44")]
			internal Color <ConvertToLinearColorspace>b__24_0(Color32 c32)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB296FC", Offset = "0xB296FC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<Guid> allowedBrushGuids;

			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x1152EC0", Offset = "0x1152EC0", VA = "0x1152EC0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x1152EC8", Offset = "0x1152EC8", VA = "0x1152EC8")]
			internal bool <ExportAllCanvases>b__2(Stroke stroke)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40013C4")]
		public const string kBuiltInPrefix = "tiltbrush://";

		[Token(Token = "0x40013C5")]
		public const string kShaderDirectory = "shaders/brushes";

		[Token(Token = "0x40013C6")]
		public const string kProjectRelativeBrushExportRoot = "Support/TiltBrush.com/shaders/brushes";

		[Token(Token = "0x40013C7")]
		public const string kProjectRelativeEnvironmentExportRoot = "Support/TiltBrush.com/environments";

		[Token(Token = "0x40013C8")]
		public const string kProjectRelativeTextureExportRoot = "Support/TiltBrush.com/textures";

		[Token(Token = "0x40013C9")]
		public const string kProjectRelativeSupportBrushTexturesRoot = "Support/shaders/brushes";

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x100F2E8", Offset = "0x100F2E8", VA = "0x100F2E8")]
		public static ExportCanvas ExportMainCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x100F698", Offset = "0x100F698", VA = "0x100F698")]
		public static List<ExportCanvas> ExportAllCanvases()
		{
			return null;
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x100FB94", Offset = "0x100FB94", VA = "0x100FB94")]
		public static void ConvertUnitsAndChangeBasis(GeometryPool pool, SceneStatePayload payload)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x100FCA0", Offset = "0x100FCA0", VA = "0x100FCA0")]
		private static void ConvertScaleAndChangeBasis(GeometryPool pool, float unitChange, Matrix4x4 basisChange)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x100FDC0", Offset = "0x100FDC0", VA = "0x100FDC0")]
		public static List<Color> ConvertToLinearColorspace(List<Color32> srgb)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x100FF28", Offset = "0x100FF28", VA = "0x100FF28")]
		public static void ConvertToSrgbColorspace(Color[] linear)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x100FFB0", Offset = "0x100FFB0", VA = "0x100FFB0")]
		public static void ReverseTriangleWinding(GeometryPool pool, int indexA, int indexB)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1010154", Offset = "0x1010154", VA = "0x1010154")]
		public static Matrix4x4 ChangeBasis(Matrix4x4 xfInput, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x10101FC", Offset = "0x10101FC", VA = "0x10101FC")]
		public static TrTransform ChangeBasis(TrTransform xfInput, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x101033C", Offset = "0x101033C", VA = "0x101033C")]
		public static void ChangeBasis(Vector3 inputTranslation, Quaternion inputRotation, Vector3 inputScale, out Vector3 translation, out Quaternion rotation, out Vector3 scale, Matrix4x4 outputFromInput, Matrix4x4 inputFromOutput)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x10105D4", Offset = "0x10105D4", VA = "0x10105D4")]
		public static Matrix4x4 ChangeBasis(TrTransform xfInput, SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x10107AC", Offset = "0x10107AC", VA = "0x10107AC")]
		public static Matrix4x4 ChangeBasis(Transform xfInput, SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x100FBE8", Offset = "0x100FBE8", VA = "0x100FBE8")]
		public static Matrix4x4 GetFromUnity_Axes(SceneStatePayload payload)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x100B904", Offset = "0x100B904", VA = "0x100B904")]
		public static string GetTexturePath(Texture texture)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x100AB84", Offset = "0x100AB84", VA = "0x100AB84")]
		public static string CreateUniqueName(string originalName, HashSet<string> names)
		{
			return null;
		}
	}
	[Token(Token = "0x2000323")]
	public static class ExportVrml
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x10109A4", Offset = "0x10109A4", VA = "0x10109A4")]
		public static bool Export(string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x10111E4", Offset = "0x10111E4", VA = "0x10111E4")]
		private static void AppendVertex(ref StringBuilder buffer, GeometryPool pool, int i)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x10115BC", Offset = "0x10115BC", VA = "0x10115BC")]
		private static void AppendTriangle(ref StringBuilder buffer, GeometryPool pool, int j, int chunkStartingVertex)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x101196C", Offset = "0x101196C", VA = "0x101196C")]
		private static void AppendColorRGB(ref StringBuilder buffer, Color32 lastColor)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1011BB0", Offset = "0x1011BB0", VA = "0x1011BB0")]
		private static void AppendColorA(ref StringBuilder buffer, Color32 lastColor)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x10110B4", Offset = "0x10110B4", VA = "0x10110B4")]
		private static void AppendSceneHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1011D08", Offset = "0x1011D08", VA = "0x1011D08")]
		private static void AppendSceneFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x101110C", Offset = "0x101110C", VA = "0x101110C")]
		private static void AppendchunkHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x101118C", Offset = "0x101118C", VA = "0x101118C")]
		private static void AppendchunkVerticesHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x101150C", Offset = "0x101150C", VA = "0x101150C")]
		private static void AppendchunkVerticesFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1011564", Offset = "0x1011564", VA = "0x1011564")]
		private static void AppendchunkTrianglesHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x10118BC", Offset = "0x10118BC", VA = "0x10118BC")]
		private static void AppendchunkTrianglesFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1011914", Offset = "0x1011914", VA = "0x1011914")]
		private static void AppendchunkAppearanceHeader(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1011C58", Offset = "0x1011C58", VA = "0x1011C58")]
		private static void AppendchunkAppearanceFooter(ref StringBuilder buffer)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1011CB0", Offset = "0x1011CB0", VA = "0x1011CB0")]
		private static void AppendchunkFooter(ref StringBuilder buffer)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public static class FbxUtils
	{
		[Token(Token = "0x400142B")]
		public const string kRequiredToolkitVersion = "16.0";

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1011F08", Offset = "0x1011F08", VA = "0x1011F08")]
		public static void ApplyFbxTexcoordHack(GeometryPool pool)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000325")]
	public enum ExportableMaterialBlendMode
	{
		[Token(Token = "0x400142D")]
		None,
		[Token(Token = "0x400142E")]
		AlphaMask,
		[Token(Token = "0x400142F")]
		AdditiveBlend,
		[Token(Token = "0x4001430")]
		AlphaBlend
	}
	[Token(Token = "0x2000326")]
	public interface IExportableMaterial
	{
		[Token(Token = "0x170002DB")]
		Guid UniqueName
		{
			[Token(Token = "0x60013C0")]
			get;
		}

		[Token(Token = "0x170002DC")]
		string DurableName
		{
			[Token(Token = "0x60013C1")]
			get;
		}

		[Token(Token = "0x170002DD")]
		ExportableMaterialBlendMode BlendMode
		{
			[Token(Token = "0x60013C2")]
			get;
		}

		[Token(Token = "0x170002DE")]
		float EmissiveFactor
		{
			[Token(Token = "0x60013C3")]
			get;
		}

		[Token(Token = "0x170002DF")]
		GeometryPool.VertexLayout VertexLayout
		{
			[Token(Token = "0x60013C4")]
			get;
		}

		[Token(Token = "0x170002E0")]
		string UriBase
		{
			[Token(Token = "0x60013C7")]
			get;
		}

		[Token(Token = "0x170002E1")]
		bool SupportsDetailedMaterialInfo
		{
			[Token(Token = "0x60013C8")]
			get;
		}

		[Token(Token = "0x170002E2")]
		string VertShaderUri
		{
			[Token(Token = "0x60013C9")]
			get;
		}

		[Token(Token = "0x170002E3")]
		string FragShaderUri
		{
			[Token(Token = "0x60013CA")]
			get;
		}

		[Token(Token = "0x170002E4")]
		bool EnableCull
		{
			[Token(Token = "0x60013CB")]
			get;
		}

		[Token(Token = "0x170002E5")]
		Dictionary<string, string> TextureUris
		{
			[Token(Token = "0x60013CC")]
			get;
		}

		[Token(Token = "0x170002E6")]
		Dictionary<string, Vector2> TextureSizes
		{
			[Token(Token = "0x60013CD")]
			get;
		}

		[Token(Token = "0x170002E7")]
		Dictionary<string, float> FloatParams
		{
			[Token(Token = "0x60013CE")]
			get;
		}

		[Token(Token = "0x170002E8")]
		Dictionary<string, Vector3> VectorParams
		{
			[Token(Token = "0x60013CF")]
			get;
		}

		[Token(Token = "0x170002E9")]
		Dictionary<string, Color> ColorParams
		{
			[Token(Token = "0x60013D0")]
			get;
		}

		[Token(Token = "0x60013C5")]
		bool HasExportTexture();

		[Token(Token = "0x60013C6")]
		string GetExportTextureFilename();
	}
	[Token(Token = "0x2000327")]
	public class ImportMaterialCollector : IImportMaterialCollector
	{
		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string m_AssetLocation;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Guid m_guidNamespace;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Material, IExportableMaterial> m_MaterialToIem;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_numAdded;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x12D4ACC", Offset = "0x12D4ACC", VA = "0x12D4ACC")]
		public ImportMaterialCollector(string assetLocation, string uniqueSeed)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x12D4BE4", Offset = "0x12D4BE4", VA = "0x12D4BE4", Slot = "4")]
		public void Add(GltfMaterialConverter.UnityMaterial um, GltfMaterialBase gltfMaterial)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x12D4F54", Offset = "0x12D4F54", VA = "0x12D4F54")]
		[Pure]
		public Guid MakeDeterministicUniqueName(int data, string data2)
		{
			return default(Guid);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x12D5038", Offset = "0x12D5038", VA = "0x12D5038")]
		public IExportableMaterial GetExportableMaterial(Material unityMaterial)
		{
			return null;
		}
	}
	[Token(Token = "0x2000328")]
	public class TiltBrushUriLoader : IUriLoader
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_uriBase;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IUriLoader m_delegate;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_loadImages;

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1170588", Offset = "0x1170588", VA = "0x1170588")]
		public TiltBrushUriLoader(string glbPath, string uriBase, bool loadImages)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1170624", Offset = "0x1170624", VA = "0x1170624", Slot = "4")]
		public IBufferReader Load(string uri)
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x1170720", Offset = "0x1170720", VA = "0x1170720", Slot = "5")]
		public bool CanLoadImages()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x1170728", Offset = "0x1170728", VA = "0x1170728", Slot = "6")]
		public TiltBrushToolkit.RawImage LoadAsImage(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	public class FileWatcher
	{
		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FileSystemWatcher m_InternalFileWatcher;

		[Token(Token = "0x170002EA")]
		public NotifyFilters NotifyFilter
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x1017E14", Offset = "0x1017E14", VA = "0x1017E14")]
			get
			{
				return default(NotifyFilters);
			}
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x1017E2C", Offset = "0x1017E2C", VA = "0x1017E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public bool EnableRaisingEvents
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x1017E40", Offset = "0x1017E40", VA = "0x1017E40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x1015894", Offset = "0x1015894", VA = "0x1015894")]
			set
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event FileSystemEventHandler FileChanged
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x10157F4", Offset = "0x10157F4", VA = "0x10157F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C91C", Offset = "0xB3C91C")]
			add
			{
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x1017E60", Offset = "0x1017E60", VA = "0x1017E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C92C", Offset = "0xB3C92C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event FileSystemEventHandler FileCreated
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x10156B4", Offset = "0x10156B4", VA = "0x10156B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C93C", Offset = "0xB3C93C")]
			add
			{
			}
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x1017F00", Offset = "0x1017F00", VA = "0x1017F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C94C", Offset = "0xB3C94C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event FileSystemEventHandler FileDeleted
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0x1015754", Offset = "0x1015754", VA = "0x1015754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C95C", Offset = "0xB3C95C")]
			add
			{
			}
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x1017FA0", Offset = "0x1017FA0", VA = "0x1017FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C96C", Offset = "0xB3C96C")]
			remove
			{
			}
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x1017C4C", Offset = "0x1017C4C", VA = "0x1017C4C")]
		public FileWatcher(string path)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x1015608", Offset = "0x1015608", VA = "0x1015608")]
		public FileWatcher(string path, string filter)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x1017CF0", Offset = "0x1017CF0", VA = "0x1017CF0")]
		private void AddEventsToInternalFileWatcher()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x1014F1C", Offset = "0x1014F1C", VA = "0x1014F1C")]
		public void NotifyDelete(string fullpath)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x1015B00", Offset = "0x1015B00", VA = "0x1015B00")]
		public void NotifyCreated(string fullpath)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1015C10", Offset = "0x1015C10", VA = "0x1015C10")]
		public void NotifyChanged(string fullpath)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x1018040", Offset = "0x1018040", VA = "0x1018040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C97C", Offset = "0xB3C97C")]
		private void <AddEventsToInternalFileWatcher>b__3_0(object sender, FileSystemEventArgs args)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x1018058", Offset = "0x1018058", VA = "0x1018058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C98C", Offset = "0xB3C98C")]
		private void <AddEventsToInternalFileWatcher>b__3_1(object sender, FileSystemEventArgs args)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x1018070", Offset = "0x1018070", VA = "0x1018070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3C99C", Offset = "0xB3C99C")]
		private void <AddEventsToInternalFileWatcher>b__3_2(object sender, FileSystemEventArgs args)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class FrameTimingGUI : MonoBehaviour
	{
		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2970C", Offset = "0xB2970C")]
		private sealed class <FadeMessage>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FrameTimingGUI <>4__this;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Material <material>5__2;

			[Token(Token = "0x170002EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F4")]
				[Address(RVA = "0x11553D4", Offset = "0x11553D4", VA = "0x11553D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F6")]
				[Address(RVA = "0x115541C", Offset = "0x115541C", VA = "0x115541C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x11551A4", Offset = "0x11551A4", VA = "0x11551A4")]
			[DebuggerHidden]
			public <FadeMessage>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x11551D0", Offset = "0x11551D0", VA = "0x11551D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x11551D4", Offset = "0x11551D4", VA = "0x11551D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x11553DC", Offset = "0x11553DC", VA = "0x11553DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_DroppedFramesBar;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_DroppedFramesBarBasePos;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_DroppedFramesBarBaseScale;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FrameTimingInfo m_TimingInfo;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform m_Message;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x101D264", Offset = "0x101D264", VA = "0x101D264")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x101D2DC", Offset = "0x101D2DC", VA = "0x101D2DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x101D448", Offset = "0x101D448", VA = "0x101D448")]
		private Color SetAlpha(Color c, float a)
		{
			return default(Color);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x101D450", Offset = "0x101D450", VA = "0x101D450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3C9AC", Offset = "0xB3C9AC")]
		private IEnumerator FadeMessage(string message)
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x101D4C8", Offset = "0x101D4C8", VA = "0x101D4C8")]
		public FrameTimingGUI()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class FrameTimingInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2971C", Offset = "0xB2971C")]
		private sealed class <>c
		{
			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__15_0;

			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1155484", Offset = "0x1155484", VA = "0x1155484")]
			public <>c()
			{
			}

			[Token(Token = "0x6001401")]
			[Address(RVA = "0x115548C", Offset = "0x115548C", VA = "0x115548C")]
			internal void <.ctor>b__15_0()
			{
			}
		}

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FrameTimingInfo m_Instance;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_FrameTimingHistorySize;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<int> m_DroppedFramesQueue;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_RollingDroppedFrameCount;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_LifetimeDroppedFrameCount;

		[Token(Token = "0x170002EE")]
		public int LifetimeDroppedFrameCount
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x101D4D0", Offset = "0x101D4D0", VA = "0x101D4D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EF")]
		public int RollingDroppedFrameCount
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x101D4D8", Offset = "0x101D4D8", VA = "0x101D4D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action OnDroppedFrames
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x101D70C", Offset = "0x101D70C", VA = "0x101D70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA5C", Offset = "0xB3CA5C")]
			add
			{
			}
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x101D7AC", Offset = "0x101D7AC", VA = "0x101D7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA6C", Offset = "0xB3CA6C")]
			remove
			{
			}
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x101D4E0", Offset = "0x101D4E0", VA = "0x101D4E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x101D530", Offset = "0x101D530", VA = "0x101D530")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x101D5A0", Offset = "0x101D5A0", VA = "0x101D5A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x101D84C", Offset = "0x101D84C", VA = "0x101D84C")]
		public FrameTimingInfo()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ActionButton : BaseButton
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public UnityEvent m_Action;

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xFDF148", Offset = "0xFDF148", VA = "0xFDF148", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xFDF164", Offset = "0xFDF164", VA = "0xFDF164")]
		public ActionButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public class AdminPanelAnimButton
	{
		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform button;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Renderer renderer;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 baseLocalPos;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector3 baseScale;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xFDFCE4", Offset = "0xFDFCE4", VA = "0xFDFCE4")]
		public AdminPanelAnimButton()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AdminPanel : BasePanel
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private AdminPanelAnimButton[] m_AnimButtons;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private GameObject m_SaveNewButton;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private GameObject m_SaveOptionsButton;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private GameObject m_SettingsButton;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private GameObject m_MoreButton;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private OptionButton m_ShareButton;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private OptionButton m_ShareButton_Notify;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[SerializeField]
		private GameObject m_AdvancedModeBorder;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private GameObject m_BeginnerModeButton;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private GameObject m_AdvancedModeButton;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private GameObject m_ButtonRotationContainer;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private GameObject m_MemoryWarning;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private GameObject m_MemoryWarningButton;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private Color m_MemoryWarningColor;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private float m_ButtonRotationAngle;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private string m_ShareButtonLoggedOutExtraText;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private HintObjectScript m_AdvancedModeHintObject;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private bool? m_UpdateShareButtonState;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		private Vector3 m_MemoryWarningBaseScale;

		[Token(Token = "0x170002F0")]
		public Transform ShareButton
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xFDF218", Offset = "0xFDF218", VA = "0xFDF218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		public Transform AdvancedButton
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xFDF234", Offset = "0xFDF234", VA = "0xFDF234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		public HintObjectScript AdvancedModeHintObject
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xFDF250", Offset = "0xFDF250", VA = "0xFDF250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xFDF258", Offset = "0xFDF258", VA = "0xFDF258")]
		private void UpdateShareButtonText()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xFDF40C", Offset = "0xFDF40C", VA = "0xFDF40C")]
		private void RefreshButtonsForAdvancedMode()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xFDF504", Offset = "0xFDF504", VA = "0xFDF504", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xFDF87C", Offset = "0xFDF87C", VA = "0xFDF87C")]
		private void Update()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xFDF9E8", Offset = "0xFDF9E8", VA = "0xFDF9E8", Slot = "16")]
		public override void ForceUpdatePanelVisuals()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xFDFA10", Offset = "0xFDFA10", VA = "0xFDFA10", Slot = "18")]
		protected override void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xFDFC70", Offset = "0xFDFC70", VA = "0xFDFC70", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xFDF78C", Offset = "0xFDF78C", VA = "0xFDF78C")]
		private void OnMemoryExceededChanged()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xFDFC78", Offset = "0xFDFC78", VA = "0xFDFC78")]
		public AdminPanel()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public struct AdvancedPanelLayouts
	{
		[Token(Token = "0x2000332")]
		private class AdvancedPanelDiskLayout
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BasePanel.PanelType type;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool fixedToPane;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float yOffset;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float attachAngle;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pos;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rot;

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x111FA74", Offset = "0x111FA74", VA = "0x111FA74")]
			public AdvancedPanelDiskLayout()
			{
			}
		}

		[Token(Token = "0x4001466")]
		private const string kPlayerPrefAdvancedLayout = "AdvancedLayout";

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<AdvancedPanelDiskLayout> layouts;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xFDFCEC", Offset = "0xFDFCEC", VA = "0xFDFCEC")]
		public static void ClearPlayerPrefs()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xFDFD34", Offset = "0xFDFD34", VA = "0xFDFD34")]
		public void PopulateFromPlayerPrefs()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xFE051C", Offset = "0xFE051C", VA = "0xFE051C")]
		public void WriteToPlayerPrefs(List<PanelManager.PanelData> panels)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xFE0B2C", Offset = "0xFE0B2C", VA = "0xFE0B2C")]
		public bool ApplyLayoutToPanel(BasePanel p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xFE0D90", Offset = "0xFE0D90", VA = "0xFE0D90")]
		public void ReviveFloatingPanelWithLayout(BasePanel p)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class AudioVizButton : OptionButton
	{
		[Token(Token = "0x6001417")]
		[Address(RVA = "0xFF1F5C", Offset = "0xFF1F5C", VA = "0xFF1F5C", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xFF20A0", Offset = "0xFF20A0", VA = "0xFF20A0")]
		public AudioVizButton()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class AudioVizPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float m_AudioFoundDuration;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_AudioFoundText;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMesh m_StatusText;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private int m_MaxStatusLength;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Renderer m_HintText;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float m_AudioSearchHintDelay;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_AudioFound;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_AudioFoundTimer;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_AudioSearchTimer;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xFF20A8", Offset = "0xFF20A8", VA = "0xFF20A8", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xFF20E8", Offset = "0xFF20E8", VA = "0xFF20E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xFF22C4", Offset = "0xFF22C4", VA = "0xFF22C4", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xFF2338", Offset = "0xFF2338", VA = "0xFF2338", Slot = "6")]
		public override bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFF2428", Offset = "0xFF2428", VA = "0xFF2428")]
		public AudioVizPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class BackdropButton : BaseButton
	{
		[Token(Token = "0x2000336")]
		public enum ColorMode
		{
			[Token(Token = "0x400147B")]
			SkyColorA,
			[Token(Token = "0x400147C")]
			SkyColorB,
			[Token(Token = "0x400147D")]
			Fog
		}

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ColorMode m_ColorMode;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject[] m_ObjectsToHideBehindPopups;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xFF35FC", Offset = "0xFF35FC", VA = "0xFF35FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xFF36CC", Offset = "0xFF36CC", VA = "0xFF36CC", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xFF37A8", Offset = "0xFF37A8", VA = "0xFF37A8", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xFF3CDC", Offset = "0xFF3CDC", VA = "0xFF3CDC")]
		private void OnColorChanged()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xFF3D90", Offset = "0xFF3D90", VA = "0xFF3D90", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xFF3E2C", Offset = "0xFF3E2C", VA = "0xFF3E2C", Slot = "25")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xFF3EBC", Offset = "0xFF3EBC", VA = "0xFF3EBC")]
		private void OnPopUpClose()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xFF3F2C", Offset = "0xFF3F2C", VA = "0xFF3F2C")]
		private void OnSkyAColorPicked(Color color)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xFF4064", Offset = "0xFF4064", VA = "0xFF4064")]
		private void OnSkyBColorPicked(Color color)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xFF419C", Offset = "0xFF419C", VA = "0xFF419C")]
		private void SkyColorFinalized()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xFF42E0", Offset = "0xFF42E0", VA = "0xFF42E0")]
		private void OnSkyColorAPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xFF4418", Offset = "0xFF4418", VA = "0xFF4418")]
		private void OnSkyColorBPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xFF4550", Offset = "0xFF4550", VA = "0xFF4550")]
		private void OnFogColorPicked(Color color)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xFF4650", Offset = "0xFF4650", VA = "0xFF4650")]
		private void FogColorFinalized()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xFF4750", Offset = "0xFF4750", VA = "0xFF4750")]
		private void OnFogColorPickedAsFinal(Color color)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xFF4850", Offset = "0xFF4850", VA = "0xFF4850")]
		public BackdropButton()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class BaseButton : UIComponent
	{
		[Token(Token = "0x2000338")]
		protected enum ButtonState
		{
			[Token(Token = "0x4001497")]
			Untouched,
			[Token(Token = "0x4001498")]
			Hover,
			[Token(Token = "0x4001499")]
			Held,
			[Token(Token = "0x400149A")]
			Pressed
		}

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Texture2D m_ButtonTexture;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected bool m_AtlasTexture;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		protected bool m_ToggleButton;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		protected bool m_LongPressReleaseButton;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		protected bool m_ButtonHasPressedAudio;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected float m_ZAdjustHover;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected float m_ZAdjustClick;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		protected float m_HoverScale;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected float m_HoverBoxColliderGrow;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB300DC", Offset = "0xB300DC")]
		private bool m_AddOverlay;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Renderer m_ButtonRenderer;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool m_ToggleActive;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		protected bool m_ButtonSelected;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Texture2D m_LastTextureAtlased;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_AtlasFlag_Activated;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_AtlasFlag_Focus;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector2> m_MeshUvsForAtlasing;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Texture2D m_CurrentButtonTexture;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected ButtonState m_CurrentButtonState;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float m_ZAdjustBase;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Vector3 m_ScaleBase;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Vector3? m_BoxColliderSizeBase;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected bool m_UseScale;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		protected bool m_AllowBypassHover;

		[Token(Token = "0x170002F3")]
		public Vector3 ScaleBase
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x143A9B4", Offset = "0x143A9B4", VA = "0x143A9B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x143A9C0", Offset = "0x143A9C0", VA = "0x143A9C0")]
		public bool IsPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x143A9D0", Offset = "0x143A9D0", VA = "0x143A9D0")]
		public bool IsHover()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x143A9E0", Offset = "0x143A9E0", VA = "0x143A9E0")]
		protected void RefreshAtlasedMaterial()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x143AA88", Offset = "0x143AA88", VA = "0x143AA88")]
		protected bool AssignAtlasedTexture(Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x143ACC4", Offset = "0x143ACC4", VA = "0x143ACC4", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x143B0F8", Offset = "0x143B0F8", VA = "0x143B0F8", Slot = "34")]
		protected virtual void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x143B1F0", Offset = "0x143B1F0", VA = "0x143B1F0", Slot = "11")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x143B248", Offset = "0x143B248", VA = "0x143B248")]
		public void SetButtonTexture(Texture2D rTexture, float aspect = -1f)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x143B498", Offset = "0x143B498", VA = "0x143B498", Slot = "35")]
		protected virtual void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x143B4FC", Offset = "0x143B4FC", VA = "0x143B4FC", Slot = "36")]
		public virtual void SetButtonGrayscale(bool bGrayscale)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x143B588", Offset = "0x143B588", VA = "0x143B588")]
		protected void SetButtonActivated(bool bActivated)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x143B620", Offset = "0x143B620", VA = "0x143B620", Slot = "37")]
		public virtual void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x143B62C", Offset = "0x143B62C", VA = "0x143B62C")]
		public void SetButtonAvailable(bool bAvailable, bool alwaysUnsetSelected = true)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x143B6B8", Offset = "0x143B6B8", VA = "0x143B6B8", Slot = "38")]
		protected virtual void SetMaterialColor(Color rColor)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x143B7A4", Offset = "0x143B7A4", VA = "0x143B7A4", Slot = "7")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x143B7D8", Offset = "0x143B7D8", VA = "0x143B7D8")]
		public void SetHDRButtonColor(Color color, Color secondaryColor)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x143B96C", Offset = "0x143B96C", VA = "0x143B96C", Slot = "14")]
		public override void ForceDescriptionDeactivate()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x143B9AC", Offset = "0x143B9AC", VA = "0x143B9AC", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x143BA1C", Offset = "0x143BA1C", VA = "0x143BA1C", Slot = "39")]
		public virtual void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x143BA20", Offset = "0x143BA20", VA = "0x143BA20", Slot = "18")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x143BBA0", Offset = "0x143BBA0", VA = "0x143BBA0", Slot = "40")]
		protected virtual void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x143BBA4", Offset = "0x143BBA4", VA = "0x143BBA4", Slot = "20")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x143BC30", Offset = "0x143BC30", VA = "0x143BC30", Slot = "21")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x143BD3C", Offset = "0x143BD3C", VA = "0x143BD3C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x143BDE0", Offset = "0x143BDE0", VA = "0x143BDE0", Slot = "41")]
		protected virtual void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrow)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x143B69C", Offset = "0x143B69C", VA = "0x143B69C")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x143AFE8", Offset = "0x143AFE8", VA = "0x143AFE8")]
		private void UpdateUVsForAspect(float aspect)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x143BF90", Offset = "0x143BF90", VA = "0x143BF90")]
		public BaseButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public struct PopupMapKey
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_PopUpPrefab;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SketchControlsScript.GlobalCommands m_Command;
	}
	[Token(Token = "0x200033A")]
	public class BasePanel : MonoBehaviour
	{
		[Token(Token = "0x200033B")]
		protected class TextSpring
		{
			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_CurrentAngle;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_DesiredAngle;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_Velocity;

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x11244C4", Offset = "0x11244C4", VA = "0x11244C4")]
			public void Update(float fK, float fDampen)
			{
			}

			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x112451C", Offset = "0x112451C", VA = "0x112451C")]
			public TextSpring()
			{
			}
		}

		[Token(Token = "0x200033C")]
		protected enum DescriptionState
		{
			[Token(Token = "0x4001514")]
			Open,
			[Token(Token = "0x4001515")]
			Closing,
			[Token(Token = "0x4001516")]
			Closed
		}

		[Token(Token = "0x200033D")]
		protected enum PanelState
		{
			[Token(Token = "0x4001518")]
			Unused,
			[Token(Token = "0x4001519")]
			Unavailable,
			[Token(Token = "0x400151A")]
			Available
		}

		[Serializable]
		[Token(Token = "0x200033E")]
		public enum PanelType
		{
			[Token(Token = "0x400151C")]
			SketchSurface,
			[Token(Token = "0x400151D")]
			Color,
			[Token(Token = "0x400151E")]
			Brush,
			[Token(Token = "0x400151F")]
			AudioReactor,
			[Token(Token = "0x4001520")]
			AdminPanelMobile,
			[Token(Token = "0x4001521")]
			ToolsBasicMobile,
			[Token(Token = "0x4001522")]
			ToolsBasic,
			[Token(Token = "0x4001523")]
			Experimental,
			[Token(Token = "0x4001524")]
			ToolsAdvancedMobile,
			[Token(Token = "0x4001525")]
			MemoryWarning,
			[Token(Token = "0x4001526")]
			Labs,
			[Token(Token = "0x4001527")]
			Sketchbook,
			[Token(Token = "0x4001528")]
			SketchbookMobile,
			[Token(Token = "0x4001529")]
			BrushMobile,
			[Token(Token = "0x400152A")]
			AppSettings,
			[Token(Token = "0x400152B")]
			Tutorials,
			[Token(Token = "0x400152C")]
			Reference,
			[Token(Token = "0x400152D")]
			Lights,
			[Token(Token = "0x400152E")]
			GuideTools,
			[Token(Token = "0x400152F")]
			Environment,
			[Token(Token = "0x4001530")]
			Camera,
			[Token(Token = "0x4001531")]
			Testing,
			[Token(Token = "0x4001532")]
			Poly,
			[Token(Token = "0x4001533")]
			BrushExperimental,
			[Token(Token = "0x4001534")]
			ToolsAdvanced,
			[Token(Token = "0x4001535")]
			AppSettingsMobile,
			[Token(Token = "0x4001536")]
			AdminPanel,
			[Token(Token = "0x4001537")]
			ExtraPanel,
			[Token(Token = "0x4001538")]
			ExtraMobile,
			[Token(Token = "0x4001539")]
			PolyMobile,
			[Token(Token = "0x400153A")]
			LabsMobile,
			[Token(Token = "0x400153B")]
			ReferenceMobile,
			[Token(Token = "0x400153C")]
			CameraPath,
			[Token(Token = "0x400153D")]
			BrushLab,
			[Token(Token = "0x400153E")]
			Multiplayer,
			[Token(Token = "0x400153F")]
			KeyboardPanel,
			[Token(Token = "0x4001540")]
			Notification,
			[Token(Token = "0x4001541")]
			Invite,
			[Token(Token = "0x4001542")]
			RuntimeTests,
			[Token(Token = "0x4001543")]
			Passthrough,
			[Token(Token = "0x4001544")]
			None
		}

		[Token(Token = "0x200033F")]
		private enum FixedTransitionState
		{
			[Token(Token = "0x4001546")]
			Floating,
			[Token(Token = "0x4001547")]
			FixedToFloating,
			[Token(Token = "0x4001548")]
			FloatingToFixed,
			[Token(Token = "0x4001549")]
			Fixed
		}

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float GAZE_DISTANCE;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float LARGE_DISTANCE;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected PanelType m_PanelType;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Collider m_Collider;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject m_Mesh;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer m_Border;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Collider m_MeshCollider;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Vector3 m_ParticleBounds;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected PopupMapKey[] m_PanelPopUpMap;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected string m_PanelDescription;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected GameObject m_PanelDescriptionPrefab;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Vector3 m_PanelDescriptionOffset;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected Color m_PanelDescriptionColor;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected GameObject m_PanelFlairPrefab;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected Vector3 m_PanelFlairOffset;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		protected float m_DescriptionSpringK;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected float m_DescriptionSpringDampen;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		protected float m_DescriptionClosedAngle;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected float m_DescriptionOpenAngle;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		protected float m_DescriptionAlphaDistance;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected GameObject[] m_Decor;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected float m_GazeHighlightScaleMultiplier;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float m_BorderMeshWidth;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float m_BorderMeshAdvWidth;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public float m_PanelSensitivity;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		protected bool m_ClampToBounds;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		protected Vector3 m_ReticleBounds;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public float m_BorderSphereHighlightRadius;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		protected Vector2 m_PositioningSpheresBounds;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		protected float m_PositioningSphereRadius;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public bool m_UseGazeRotation;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public float m_MaxGazeRotation;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected float m_GazeActivateSpeed;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		public Vector3 m_InitialSpawnPos;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		public Vector3 m_InitialSpawnRotEulers;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		public float m_WandAttachAngle;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		public float m_WandAttachYOffset;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		public float m_WandAttachHalfHeight;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool m_BeginFixed;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[SerializeField]
		private bool m_CanBeFixedToWand;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		[SerializeField]
		private bool m_CanBeDetachedFromWand;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private float m_PopUpGazeDuration;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected MeshRenderer[] m_PromoBorders;

		[Token(Token = "0x40014C8")]
		protected const float m_SwipeThreshold = 0.4f;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Material m_BorderMaterial;

		[NonSerialized]
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public float m_SweetSpotDistance;

		[NonSerialized]
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool m_Fixed;

		[NonSerialized]
		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool m_WandPrimedForAttach;

		[NonSerialized]
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float m_WandAttachRadiusAdjust;

		[NonSerialized]
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public float m_WandAttachYOffset_Target;

		[NonSerialized]
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float m_WandAttachYOffset_Stable;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected PopUpWindow m_ActivePopUp;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected SketchControlsScript.GlobalCommands m_DelayedCommand;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		protected int m_DelayedCommandParam;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected int m_DelayedCommandParam2;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject m_PanelDescriptionObject;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Renderer m_PanelDescriptionRenderer;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected TextMeshPro m_PanelDescriptionTextMeshPro;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected float m_AdjustedScale;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected TextSpring m_PanelDescriptionTextSpring;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected TextSpring m_PanelFlairSpring;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected PanelFlair m_PanelFlair;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected Vector3 m_ReticleOffset;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected Vector3 m_Bounds;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected Vector3 m_WorkingReticleBounds;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected DescriptionState m_PanelDescriptionState;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected DescriptionState m_PanelFlairState;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected float m_CloseAngleThreshold;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected PanelState m_CurrentState;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected PanelState m_DesiredState;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected bool m_GazeActive;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		protected bool m_GazeWasActive;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
		protected bool m_GazeDescriptionsActive;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
		protected bool m_InputValid;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		protected bool m_EatInput;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected Ray m_ReticleSelectionRay;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected float m_PositioningPercent;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		protected float m_MaxGazeOffsetDistance;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector3 m_GazeRotationAxis;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected float m_GazeRotationAngle;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected Quaternion m_GazeRotationAmount;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		protected float m_GazeActivePercent;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected UIComponentManager m_UIComponentManager;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected NonScaleChild m_NonScaleChild;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private List<Renderer> m_DecorRenderers;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private List<TextMeshPro> m_DecorTextMeshes;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float m_ScaledPositioningSphereRadius;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private float m_PositioningExtent;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Vector3[] m_PositioningSpheres;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3[] m_PositioningSpheresTransformed;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 m_PositioningHome;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float m_PositioningK;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float m_PositioningDampen;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float m_DepenetrationScalar;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Vector3 m_PositioningVelocity;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector3 m_GazeHitPositionCurrent;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Vector3 m_GazeHitPositionDesired;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float m_GazeHitPositionSpeed;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		protected Vector2 m_SwipeRecentMotion;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private FixedTransitionState m_TransitionState;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private TrTransform m_WandTransitionTarget;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float m_WandTransitionDuration;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float m_WandTransitionPercent;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private float m_WandAttachAdjustSpeed;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float m_WandAttachYOffset_Initial;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private float m_WandAttachAngle_Initial;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private PanelWidget m_WidgetSibling;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private GameObject m_TempPopUpCollider;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float m_PopUpGazeTimer;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private bool m_AdvancedModePanel;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F5")]
		private bool m_CurrentlyVisibleInAdvancedMode;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F6")]
		private bool m_PanelInitializationStarted;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F7")]
		private bool m_PanelInitializationFinished;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float m_PanelDescriptionCounter;

		[Token(Token = "0x170002F4")]
		public bool BeginFixed
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x143EA20", Offset = "0x143EA20", VA = "0x143EA20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public bool CanBeDetached
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x143EA30", Offset = "0x143EA30", VA = "0x143EA30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F6")]
		public PanelWidget WidgetSibling
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x143EA64", Offset = "0x143EA64", VA = "0x143EA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public bool AdvancedModePanel
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x143EA6C", Offset = "0x143EA6C", VA = "0x143EA6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F8")]
		public bool CurrentlyVisibleInAdvancedMode
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x143EA74", Offset = "0x143EA74", VA = "0x143EA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public Vector3 ParticleBounds
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x143EA7C", Offset = "0x143EA7C", VA = "0x143EA7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002FA")]
		public PopUpWindow PanelPopUp
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x143EA88", Offset = "0x143EA88", VA = "0x143EA88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		public PanelType Type
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x143EB10", Offset = "0x143EB10", VA = "0x143EB10")]
			get
			{
				return default(PanelType);
			}
		}

		[Token(Token = "0x170002FC")]
		public virtual bool ShouldRegister
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x143EB18", Offset = "0x143EB18", VA = "0x143EB18", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		public float PopUpOffset
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x143EB34", Offset = "0x143EB34", VA = "0x143EB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x143E94C", Offset = "0x143E94C", VA = "0x143E94C")]
		public Vector3 GetBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x143E95C", Offset = "0x143E95C", VA = "0x143E95C")]
		public float GetPositioningExtent()
		{
			return default(float);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x143E964", Offset = "0x143E964", VA = "0x143E964")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x143E974", Offset = "0x143E974", VA = "0x143E974")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x143E97C", Offset = "0x143E97C", VA = "0x143E97C")]
		public bool IsOpeningOrClosing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x143E9A8", Offset = "0x143E9A8", VA = "0x143E9A8")]
		public bool IsOpening()
		{
			return default(bool);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x143E9E4", Offset = "0x143E9E4", VA = "0x143E9E4")]
		public bool IsClosing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x143EA28", Offset = "0x143EA28", VA = "0x143EA28")]
		public void ClearBeginFixed()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x143EA38", Offset = "0x143EA38", VA = "0x143EA38")]
		public bool IsInInitialPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x143EA90", Offset = "0x143EA90", VA = "0x143EA90")]
		public Color GetGazeColorFromActiveGazePercent()
		{
			return default(Color);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x143EB20", Offset = "0x143EB20", VA = "0x143EB20")]
		public void InitAdvancedFlag(bool advanced)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x143EBB8", Offset = "0x143EBB8", VA = "0x143EBB8", Slot = "5")]
		protected virtual void CalculateBounds()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x143ECC8", Offset = "0x143ECC8", VA = "0x143ECC8")]
		public void ActivatePromoBorder(bool activate)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x143EE04", Offset = "0x143EE04", VA = "0x143EE04", Slot = "6")]
		public virtual void SetInIntroMode(bool inIntro)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x143EE08", Offset = "0x143EE08", VA = "0x143EE08")]
		public void SetPositioningPercent(float fPercent)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x143EE10", Offset = "0x143EE10", VA = "0x143EE10")]
		public void SetScale(float fScale)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x143EE60", Offset = "0x143EE60", VA = "0x143EE60")]
		public bool PanelIsUsed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x143EE70", Offset = "0x143EE70", VA = "0x143EE70")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x143EE78", Offset = "0x143EE78", VA = "0x143EE78")]
		public bool HasMeshCollider()
		{
			return default(bool);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x143EEE4", Offset = "0x143EEE4", VA = "0x143EEE4", Slot = "7")]
		public virtual bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x143F224", Offset = "0x143F224", VA = "0x143F224", Slot = "8")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x143F240", Offset = "0x143F240", VA = "0x143F240")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x143F25C", Offset = "0x143F25C", VA = "0x143F25C")]
		public bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x143F278", Offset = "0x143F278", VA = "0x143F278")]
		public bool UndoRedoBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x143F30C", Offset = "0x143F30C", VA = "0x143F30C", Slot = "9")]
		public virtual void OnPanelMoved()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x143F310", Offset = "0x143F310", VA = "0x143F310", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x143F330", Offset = "0x143F330", VA = "0x143F330", Slot = "11")]
		public virtual void InitPanel()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1440044", Offset = "0x1440044", VA = "0x1440044")]
		public void CloseActivePopUp(bool force)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1440188", Offset = "0x1440188", VA = "0x1440188")]
		public void VerifyStateForFloating()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1440198", Offset = "0x1440198", VA = "0x1440198")]
		public void SetPanelStableToTarget()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x14401A4", Offset = "0x14401A4", VA = "0x14401A4")]
		public void ResetPanelToInitialPosition()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x14401E0", Offset = "0x14401E0", VA = "0x14401E0")]
		public void ResetPanel()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x14400FC", Offset = "0x14400FC", VA = "0x14400FC")]
		public void InvalidateIfActivePopup(PopUpWindow activePopup)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1440578", Offset = "0x1440578", VA = "0x1440578")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1440584", Offset = "0x1440584", VA = "0x1440584")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1440594", Offset = "0x1440594", VA = "0x1440594", Slot = "12")]
		protected virtual void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x1440650", Offset = "0x1440650", VA = "0x1440650", Slot = "13")]
		protected virtual void OnDisablePanel()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1440708", Offset = "0x1440708", VA = "0x1440708")]
		public void ResetReticleOffset()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1440738", Offset = "0x1440738", VA = "0x1440738")]
		public void UpdateReticleOffset(float fXDelta, float fYDelta)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x14407AC", Offset = "0x14407AC", VA = "0x14407AC", Slot = "14")]
		public virtual void GetReticleTransformFromPosDir(Vector3 vInPos, Vector3 vInDir, out Vector3 vOutPos, out Vector3 vForward)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1440AC4", Offset = "0x1440AC4", VA = "0x1440AC4", Slot = "15")]
		public virtual void GetReticleTransform(out Vector3 vPos, out Vector3 vForward, bool bGazeAndTap)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1440CF0", Offset = "0x1440CF0", VA = "0x1440CF0", Slot = "16")]
		public virtual void ForceUpdatePanelVisuals()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1440D0C", Offset = "0x1440D0C", VA = "0x1440D0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1440D10", Offset = "0x1440D10", VA = "0x1440D10")]
		protected void BaseUpdate()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x1440D60", Offset = "0x1440D60", VA = "0x1440D60")]
		protected void UpdateState()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x1441B54", Offset = "0x1441B54", VA = "0x1441B54", Slot = "17")]
		protected virtual void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x1441B58", Offset = "0x1441B58", VA = "0x1441B58")]
		private void UpdateMeshRotation()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1441010", Offset = "0x1441010", VA = "0x1441010")]
		protected void UpdateDescriptions()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1441C4C", Offset = "0x1441C4C", VA = "0x1441C4C", Slot = "18")]
		protected virtual void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1441F40", Offset = "0x1441F40", VA = "0x1441F40")]
		public Color GetGazeColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1441888", Offset = "0x1441888", VA = "0x1441888")]
		protected void UpdateFixedTransition()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x14420EC", Offset = "0x14420EC", VA = "0x14420EC")]
		public void WidgetSiblingBeginInteraction()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x144216C", Offset = "0x144216C", VA = "0x144216C")]
		public void WidgetSiblingEndInteraction()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x14422D8", Offset = "0x14422D8", VA = "0x14422D8")]
		public void TransitionToWand(bool bFixed, TrTransform target)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x14403C0", Offset = "0x14403C0", VA = "0x14403C0")]
		private void UpdatePanelColor(Color rPanelColor)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x1442318", Offset = "0x1442318", VA = "0x1442318", Slot = "19")]
		protected virtual void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x144231C", Offset = "0x144231C", VA = "0x144231C", Slot = "20")]
		public virtual void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1442370", Offset = "0x1442370", VA = "0x1442370")]
		private void SetPanelFlairText(string sText)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1441B20", Offset = "0x1441B20", VA = "0x1441B20")]
		public void ResetPanelFlair()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x144248C", Offset = "0x144248C", VA = "0x144248C", Slot = "21")]
		public virtual void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1442490", Offset = "0x1442490", VA = "0x1442490", Slot = "22")]
		public virtual void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1442494", Offset = "0x1442494", VA = "0x1442494", Slot = "23")]
		public virtual void OnWidgetHide()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1442498", Offset = "0x1442498", VA = "0x1442498")]
		protected int AccumulateSwipe()
		{
			return default(int);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x14425A4", Offset = "0x14425A4", VA = "0x14425A4", Slot = "24")]
		public virtual bool IncrementMotionAndCheckForSwipe(float fMotion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x14425CC", Offset = "0x14425CC", VA = "0x14425CC")]
		public void UpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1442C78", Offset = "0x1442C78", VA = "0x1442C78", Slot = "25")]
		public virtual void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1442C7C", Offset = "0x1442C7C", VA = "0x1442C7C")]
		public void InitForPanelMovement()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1442CD0", Offset = "0x1442CD0", VA = "0x1442CD0", Slot = "26")]
		public virtual void PanelHasStoppedMoving()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1442D10", Offset = "0x1442D10", VA = "0x1442D10")]
		public void CreatePopUp(SketchControlsScript.GlobalCommands rCommand, int iCommandParam, int iCommandParam2, string sDelayedText = "", [Optional] Action delayedClose, [Optional] Action<GameObject> onPopupCreated)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x1442D80", Offset = "0x1442D80", VA = "0x1442D80")]
		public void CreatePopUp(SketchControlsScript.GlobalCommands rCommand, int iCommandParam, int iCommandParam2, Vector3 vPopupOffset, string sDelayedText = "", [Optional] Action delayedClose, [Optional] Action<GameObject> onPopupCreated)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x14432B4", Offset = "0x14432B4", VA = "0x14432B4")]
		public void PositionPopUp(Vector3 basePos)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1443308", Offset = "0x1443308", VA = "0x1443308")]
		public void ResolveDelayedButtonCommand(bool bConfirm, bool bKeepOpen = false)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x144348C", Offset = "0x144348C", VA = "0x144348C", Slot = "27")]
		public virtual void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1443490", Offset = "0x1443490", VA = "0x1443490", Slot = "28")]
		public virtual void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1443494", Offset = "0x1443494", VA = "0x1443494")]
		public void InitForCollisionDetection()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x1443544", Offset = "0x1443544", VA = "0x1443544")]
		public void CalculateDepenetration(BasePanel rOther)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1443764", Offset = "0x1443764", VA = "0x1443764")]
		public void CalculateDepenetration(Vector3 vOtherPos, float fCombinedRadius)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1443858", Offset = "0x1443858", VA = "0x1443858")]
		public void UpdatePositioningForces()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x14439E4", Offset = "0x14439E4", VA = "0x14439E4")]
		public void UpdateDelayedCommandParameter(int newParam)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x14439EC", Offset = "0x14439EC", VA = "0x14439EC")]
		public static bool DoesRayHitCollider(Ray rRay, Collider rCollider, bool skipAngleCheck = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1440A64", Offset = "0x1440A64", VA = "0x1440A64")]
		public static bool DoesRayHitCollider(Ray rRay, Collider rCollider, out RaycastHit rHitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1443B08", Offset = "0x1443B08", VA = "0x1443B08")]
		public BasePanel()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class BaseSlider : UIComponent
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public GameObject m_Nob;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_Mesh;

		[NonSerialized]
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 m_MeshScale;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float m_CurrentValue;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool m_IsAvailable;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Renderer[] m_TintableMeshes;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1445A6C", Offset = "0x1445A6C", VA = "0x1445A6C")]
		public float GetCurrentValue()
		{
			return default(float);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1445A74", Offset = "0x1445A74", VA = "0x1445A74", Slot = "5")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x1445A94", Offset = "0x1445A94", VA = "0x1445A94")]
		protected void SetAvailable(bool available)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1445AA4", Offset = "0x1445AA4", VA = "0x1445AA4", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1445B84", Offset = "0x1445B84", VA = "0x1445B84", Slot = "13")]
		protected override void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1445C64", Offset = "0x1445C64", VA = "0x1445C64", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1445D20", Offset = "0x1445D20", VA = "0x1445D20", Slot = "34")]
		public virtual void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1445D28", Offset = "0x1445D28", VA = "0x1445D28")]
		public void SetSliderPositionToReflectValue()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1445E1C", Offset = "0x1445E1C", VA = "0x1445E1C", Slot = "18")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1445FFC", Offset = "0x1445FFC", VA = "0x1445FFC", Slot = "19")]
		public override void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1446050", Offset = "0x1446050", VA = "0x1446050", Slot = "21")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x144605C", Offset = "0x144605C", VA = "0x144605C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1445E98", Offset = "0x1445E98", VA = "0x1445E98")]
		protected void PositionSliderNob(Vector3 pos_WS)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1446068", Offset = "0x1446068", VA = "0x1446068", Slot = "35")]
		protected virtual void OnPositionSliderNobUpdated()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x144606C", Offset = "0x144606C", VA = "0x144606C")]
		public BaseSlider()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class BrushGrid : UIComponent
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_PrevButton;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_NextButton;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshPro m_PageIndexText;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_PadSwipeGiveExponent;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_PadSwipeGiveScale;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_PadSwipeGiveMaxPercent;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_PageFlipSpeed;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_PageScrollRatio;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BrushTypeButton[] m_BrushButtons;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_BaseBrushIndex;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_PageIndex;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_RequestedPageIndex;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_NumPages;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_PadSwipePerPage;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_PrevDirection;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_EatPadInput;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_PageFlipSleepTime;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_PageFlipSleepValue;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_BoundaryThreshold;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector2 m_SwipeRecentMotion;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector2 m_AccumulatedSwipeMotion;

		[Token(Token = "0x4001566")]
		private const float m_SwipeThreshold = 0.4f;

		[Token(Token = "0x4001567")]
		private const float NUM_COLS = 4f;

		[Token(Token = "0x4001568")]
		private const float ANGLE_HIGHLIGHT_THRESHOLD = 5f;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x127D4F8", Offset = "0x127D4F8", VA = "0x127D4F8", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x127D8AC", Offset = "0x127D8AC", VA = "0x127D8AC", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x127D910", Offset = "0x127D910", VA = "0x127D910", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x127D944", Offset = "0x127D944", VA = "0x127D944", Slot = "22")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x127DD40", Offset = "0x127DD40", VA = "0x127DD40", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x127DF18", Offset = "0x127DF18", VA = "0x127DF18", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x127DF68", Offset = "0x127DF68", VA = "0x127DF68", Slot = "30")]
		public override void ReceiveMessage(ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x127E0F0", Offset = "0x127E0F0", VA = "0x127E0F0", Slot = "32")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x127E1D0", Offset = "0x127E1D0", VA = "0x127E1D0", Slot = "33")]
		public override float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x127E360", Offset = "0x127E360", VA = "0x127E360", Slot = "31")]
		public override bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x127E3A8", Offset = "0x127E3A8", VA = "0x127E3A8")]
		private void CountPages()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x127E4FC", Offset = "0x127E4FC", VA = "0x127E4FC")]
		public void RefreshNavigationButtons()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x127E570", Offset = "0x127E570", VA = "0x127E570")]
		private void RefreshButtonSelection()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x127D7E4", Offset = "0x127D7E4", VA = "0x127D7E4")]
		private void SetPageIndexText()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x127E700", Offset = "0x127E700", VA = "0x127E700")]
		private void OnStrokeSelected(Stroke stroke)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x127E704", Offset = "0x127E704", VA = "0x127E704")]
		private void OnBrushSetToDefault()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x127EC20", Offset = "0x127EC20", VA = "0x127EC20")]
		private void OnAudioReactiveStateChanged()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x127EF2C", Offset = "0x127EF2C", VA = "0x127EF2C")]
		private void OnBrushChanged(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x127EF30", Offset = "0x127EF30", VA = "0x127EF30")]
		private void OnBrushCatalogChanged()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x127EF54", Offset = "0x127EF54", VA = "0x127EF54")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x127E73C", Offset = "0x127E73C", VA = "0x127E73C")]
		private void RefreshButtonPositions()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x127EC24", Offset = "0x127EC24", VA = "0x127EC24")]
		private void RefreshButtonProperties()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x127DCCC", Offset = "0x127DCCC", VA = "0x127DCCC")]
		private void SnapPage()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x127DB9C", Offset = "0x127DB9C", VA = "0x127DB9C")]
		private int AccumulateSwipe()
		{
			return default(int);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x127F4E8", Offset = "0x127F4E8", VA = "0x127F4E8")]
		private bool IncrementMotionAndCheckForSwipe(float fMotion)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x127F600", Offset = "0x127F600", VA = "0x127F600")]
		private float GetSwipeRatio(float motion)
		{
			return default(float);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x127E338", Offset = "0x127E338", VA = "0x127E338")]
		private float GetSwipeRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x127E310", Offset = "0x127E310", VA = "0x127E310")]
		private float GetAccumulatedSwipeRatio()
		{
			return default(float);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x127E0B4", Offset = "0x127E0B4", VA = "0x127E0B4")]
		public void GotoPage(int page)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x127DFD8", Offset = "0x127DFD8", VA = "0x127DFD8")]
		public void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x127DD00", Offset = "0x127DD00", VA = "0x127DD00")]
		private void AdvancePage(float amount)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x127F624", Offset = "0x127F624", VA = "0x127F624")]
		public BrushGrid()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class BrushTypeButton : BaseButton
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Texture2D m_PreviewBGTexture;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_AudioReactiveIcon;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject m_ExperimentalIcon;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private TMP_Text m_BrushNumberText;

		[NonSerialized]
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public BrushDescriptor m_Brush;

		[NonSerialized]
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Vector3 m_OriginPosition;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected PreviewCubeScript m_PreviewCubeScript;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Renderer m_AudioReactiveIconRenderer;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Renderer m_ExperimentalIconRenderer;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 m_AudioReactiveIconBaseLocalPos;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 m_ExperimentalIconBaseLocalPos;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 m_BrushNumberTextBaseLocalPos;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Texture2D m_BrushIconTexture;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x12808C8", Offset = "0x12808C8", VA = "0x12808C8", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1280ABC", Offset = "0x1280ABC", VA = "0x1280ABC", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1280B84", Offset = "0x1280B84", VA = "0x1280B84", Slot = "13")]
		protected override void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1280BE8", Offset = "0x1280BE8", VA = "0x1280BE8", Slot = "11")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1280C88", Offset = "0x1280C88", VA = "0x1280C88", Slot = "34")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x127F0B8", Offset = "0x127F0B8", VA = "0x127F0B8")]
		public void SetButtonProperties(BrushDescriptor rBrush, int brushIndex)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1280D1C", Offset = "0x1280D1C", VA = "0x1280D1C", Slot = "15")]
		protected override void OnDescriptionActivated()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1280D7C", Offset = "0x1280D7C", VA = "0x1280D7C", Slot = "16")]
		protected override void OnDescriptionDeactivated()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1280D90", Offset = "0x1280D90", VA = "0x1280D90", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1280E28", Offset = "0x1280E28", VA = "0x1280E28", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1280F50", Offset = "0x1280F50", VA = "0x1280F50", Slot = "37")]
		public override void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1281088", Offset = "0x1281088", VA = "0x1281088", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1280E54", Offset = "0x1280E54", VA = "0x1280E54")]
		private void PlaceIconsOnPreviewCube(float offsetPercent)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x128113C", Offset = "0x128113C", VA = "0x128113C", Slot = "7")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1280A0C", Offset = "0x1280A0C", VA = "0x1280A0C")]
		public void SetBrushNumberDisplayState(bool shouldShow)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x128121C", Offset = "0x128121C", VA = "0x128121C")]
		public BrushTypeButton()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class BrushesPanel : BasePanel
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		protected GameObject m_Container;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		protected Collider m_SinglePlayerMeshCollider;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		protected Renderer m_SinglePlayerBorder;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		protected BaseButton m_MultiplayerButton;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		protected Vector3 m_SinglePlayerPosition;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[SerializeField]
		protected Vector3 m_MultiPlayerPosition;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1281224", Offset = "0x1281224", VA = "0x1281224", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1281388", Offset = "0x1281388", VA = "0x1281388")]
		public BrushesPanel()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class CameraModeSlider : BaseSlider
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly int kCameraModeCount;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x15A05A0", Offset = "0x15A05A0", VA = "0x15A05A0", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x15A0744", Offset = "0x15A0744", VA = "0x15A0744", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x15A0908", Offset = "0x15A0908", VA = "0x15A0908")]
		public CameraModeSlider()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class CameraPathButtons : UIComponent
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_PathObjects;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_NoPathObjects;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshPro m_NoPathText;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string m_FirstPathMessage;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string m_NonFirstPathMessage;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private OptionButton m_RecordButton;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x15A8728", Offset = "0x15A8728", VA = "0x15A8728", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x15A8980", Offset = "0x15A8980", VA = "0x15A8980", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x15A8B0C", Offset = "0x15A8B0C", VA = "0x15A8B0C", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x15A8D40", Offset = "0x15A8D40", VA = "0x15A8D40", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x15A8DCC", Offset = "0x15A8DCC", VA = "0x15A8DCC", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x15A8E00", Offset = "0x15A8E00", VA = "0x15A8E00", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x15A8FD8", Offset = "0x15A8FD8", VA = "0x15A8FD8", Slot = "26")]
		public override void ManagerLostFocus()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x15A900C", Offset = "0x15A900C", VA = "0x15A900C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x15A8984", Offset = "0x15A8984", VA = "0x15A8984")]
		private void RefreshButtonsVisibility()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x15A9040", Offset = "0x15A9040", VA = "0x15A9040")]
		public CameraPathButtons()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class CameraPathPreviewScreen : OptionButton
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Material m_UninitializedCameraMaterial;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject m_PauseIcon;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_PlayIcon;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Collider m_ScrubBar;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Transform m_ScrubBarCursor;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private Transform m_ScrubBarForeground;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ScreenshotManager m_SsMgr;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_PreviewOn;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_ScrubBarHasFocus;

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x15ABF2C", Offset = "0x15ABF2C", VA = "0x15ABF2C", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x15AC1CC", Offset = "0x15AC1CC", VA = "0x15AC1CC", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x15AC3C0", Offset = "0x15AC3C0", VA = "0x15AC3C0")]
		private void UpdateScreenVisuals()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x15AC4EC", Offset = "0x15AC4EC", VA = "0x15AC4EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x15AC5E0", Offset = "0x15AC5E0", VA = "0x15AC5E0")]
		private void PositionScrubBar(float zeroToOne)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x15AC688", Offset = "0x15AC688", VA = "0x15AC688", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x15AC7AC", Offset = "0x15AC7AC", VA = "0x15AC7AC", Slot = "26")]
		public override void ManagerLostFocus()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x15AC7F8", Offset = "0x15AC7F8", VA = "0x15AC7F8", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x15AC98C", Offset = "0x15AC98C", VA = "0x15AC98C", Slot = "19")]
		public override void ButtonHeld(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x15ACAA0", Offset = "0x15ACAA0", VA = "0x15ACAA0", Slot = "20")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x15AC99C", Offset = "0x15AC99C", VA = "0x15AC99C")]
		private void SetScrubBarToReticlePosition()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x15ACAA8", Offset = "0x15ACAA8", VA = "0x15ACAA8")]
		public CameraPathPreviewScreen()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class CameraPathToolModeButton : BaseButton
	{
		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private CameraPathTool.Mode m_Mode;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x15B0290", Offset = "0x15B0290", VA = "0x15B0290", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x15B0330", Offset = "0x15B0330", VA = "0x15B0330", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x15B03D0", Offset = "0x15B03D0", VA = "0x15B03D0", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x15B05B0", Offset = "0x15B05B0", VA = "0x15B05B0", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x15B06F8", Offset = "0x15B06F8", VA = "0x15B06F8")]
		public CameraPathToolModeButton()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class CameraPathsVisibilityButton : OptionButton
	{
		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1313270", Offset = "0x1313270", VA = "0x1313270", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1313310", Offset = "0x1313310", VA = "0x1313310", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x13133B0", Offset = "0x13133B0", VA = "0x13133B0")]
		public CameraPathsVisibilityButton()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class ColorPicker : UIComponent
	{
		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ColorPickerSelector m_ColorPickerSelector;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ColorPickerSlider m_ColorPickerSlider;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Renderer m_ColorPickerSelectorBorderCube;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_ColorPickerSelectorBorderCylinder;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject m_CircleBack;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ColorController m_ColorController;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject m_ActiveInputObject;

		[Token(Token = "0x170002FE")]
		public ColorController Controller
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x1317F8C", Offset = "0x1317F8C", VA = "0x1317F8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action<Color> ColorPicked
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x1317D0C", Offset = "0x1317D0C", VA = "0x1317D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA7C", Offset = "0xB3CA7C")]
			add
			{
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x1317DAC", Offset = "0x1317DAC", VA = "0x1317DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA8C", Offset = "0xB3CA8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event Action ColorFinalized
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x1317E4C", Offset = "0x1317E4C", VA = "0x1317E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CA9C", Offset = "0xB3CA9C")]
			add
			{
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x1317EEC", Offset = "0x1317EEC", VA = "0x1317EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAAC", Offset = "0xB3CAAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1317F94", Offset = "0x1317F94", VA = "0x1317F94", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1318188", Offset = "0x1318188", VA = "0x1318188", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x13181F4", Offset = "0x13181F4", VA = "0x13181F4", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x131831C", Offset = "0x131831C", VA = "0x131831C", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x131874C", Offset = "0x131874C", VA = "0x131874C", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1318804", Offset = "0x1318804", VA = "0x1318804")]
		private void UpdateColorSelectorAndSlider(bool inputValid, Ray inputRay, Collider parentCollider)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1319764", Offset = "0x1319764", VA = "0x1319764", Slot = "29")]
		public override bool CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x13199B4", Offset = "0x13199B4", VA = "0x13199B4", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x13192B0", Offset = "0x13192B0", VA = "0x13192B0")]
		private void TriggerColorPicked(Color color)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1319034", Offset = "0x1319034", VA = "0x1319034")]
		private void ResetActiveInputObject()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x13191C4", Offset = "0x13191C4", VA = "0x13191C4")]
		private void UpdateSelectorSlider(float value)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x13191E4", Offset = "0x13191E4", VA = "0x13191E4")]
		private void UpdateSliderPosition()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1319A24", Offset = "0x1319A24", VA = "0x1319A24")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1319C7C", Offset = "0x1319C7C", VA = "0x1319C7C")]
		private void OnCurrentColorSet(ColorPickerMode mode, Vector3 rawColor)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1319CF8", Offset = "0x1319CF8", VA = "0x1319CF8")]
		public ColorPicker()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class ColorPickerPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ColorPicker m_ColorPicker;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private CustomColorPalette m_CustomColorPalette;

		[Token(Token = "0x170002FF")]
		public ColorPicker ColorPicker
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x1319D08", Offset = "0x1319D08", VA = "0x1319D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public CustomColorPalette CustomColorPalette
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x1319D10", Offset = "0x1319D10", VA = "0x1319D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1319D18", Offset = "0x1319D18", VA = "0x1319D18")]
		public ColorPickerPopUpWindow()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class ColorPickerSelector : MonoBehaviour
	{
		[Token(Token = "0x400159B")]
		private const float SQRT3 = 1.7320508f;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_HighlightMesh;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider m_Collider;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_Renderer;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh m_StandardMesh;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh m_TriangleMesh;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_CurrentValueTransform;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ColorPickerMode m_LocalMode;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FixedSelectorPlane;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_RawValue;

		[Token(Token = "0x17000301")]
		public Vector3 RawValue
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x1319D28", Offset = "0x1319D28", VA = "0x1319D28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x1319518", Offset = "0x1319518", VA = "0x1319518")]
			set
			{
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1319D20", Offset = "0x1319D20", VA = "0x1319D20")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1319D34", Offset = "0x1319D34", VA = "0x1319D34")]
		public void SetLocalMode(ColorPickerMode mode)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1319D3C", Offset = "0x1319D3C", VA = "0x1319D3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1319FD8", Offset = "0x1319FD8", VA = "0x1319FD8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x131A088", Offset = "0x131A088", VA = "0x131A088")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1319344", Offset = "0x1319344", VA = "0x1319344")]
		public Vector3 GetValueFromHit(RaycastHit hit)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x13184EC", Offset = "0x13184EC", VA = "0x13184EC")]
		public void SetTintColor(Color rColor)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x131A144", Offset = "0x131A144", VA = "0x131A144")]
		public ColorPickerSelector()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class ColorPickerSlider : MonoBehaviour
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Width;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_Height;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_sliderTex;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] m_tempColors;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_CurrentValueTransform;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider m_Collider;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ColorPickerMode m_LocalMode;

		[Token(Token = "0x17000302")]
		public float RawValue
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x131A154", Offset = "0x131A154", VA = "0x131A154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x13199DC", Offset = "0x13199DC", VA = "0x13199DC")]
			set
			{
			}
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x131A14C", Offset = "0x131A14C", VA = "0x131A14C")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x131A184", Offset = "0x131A184", VA = "0x131A184")]
		public void SetLocalMode(ColorPickerMode mode)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x131A18C", Offset = "0x131A18C", VA = "0x131A18C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x131A320", Offset = "0x131A320", VA = "0x131A320")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1319130", Offset = "0x1319130", VA = "0x1319130")]
		public float GetValueFromHit(RaycastHit hit)
		{
			return default(float);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x131A3D0", Offset = "0x131A3D0", VA = "0x131A3D0")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1319684", Offset = "0x1319684", VA = "0x1319684")]
		public void OnColorChanged(ColorPickerMode mode, Vector3 raw)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1318604", Offset = "0x1318604", VA = "0x1318604")]
		public void SetTintColor(Color rColor)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x131A59C", Offset = "0x131A59C", VA = "0x131A59C")]
		public ColorPickerSlider()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class ColorSpaceToggle : MultistateButton
	{
		[Token(Token = "0x6001538")]
		[Address(RVA = "0x131B348", Offset = "0x131B348", VA = "0x131B348", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x131B404", Offset = "0x131B404", VA = "0x131B404", Slot = "42")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x131B6B0", Offset = "0x131B6B0", VA = "0x131B6B0", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x131B42C", Offset = "0x131B42C", VA = "0x131B42C")]
		public void RefreshOptions()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x131B76C", Offset = "0x131B76C", VA = "0x131B76C", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x131B774", Offset = "0x131B774", VA = "0x131B774")]
		private void OnModeChanged()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x131B828", Offset = "0x131B828", VA = "0x131B828")]
		public ColorSpaceToggle()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class CommandHighlightOptionButton : OptionButton
	{
		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private List<SketchControlsScript.GlobalCommands> m_OtherHighlightCommands;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x131E8F0", Offset = "0x131E8F0", VA = "0x131E8F0", Slot = "42")]
		protected override bool IsCommandActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x131EAA0", Offset = "0x131EAA0", VA = "0x131EAA0")]
		public CommandHighlightOptionButton()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class CommonValueSlider : BaseSlider
	{
		[Token(Token = "0x2000350")]
		public enum ValueType
		{
			[Token(Token = "0x40015B0")]
			CameraFov,
			[Token(Token = "0x40015B1")]
			CameraSmoothing
		}

		[Token(Token = "0x40015AD")]
		private const float kCameraSmoothingPow = 0.2f;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ValueType m_ValueType;

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x131EAA8", Offset = "0x131EAA8", VA = "0x131EAA8", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x131ED74", Offset = "0x131ED74", VA = "0x131ED74", Slot = "25")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x131EE18", Offset = "0x131EE18", VA = "0x131EE18", Slot = "34")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x131EB04", Offset = "0x131EB04", VA = "0x131EB04")]
		private void UpdateDescription()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x131EEC4", Offset = "0x131EEC4", VA = "0x131EEC4")]
		private float SanitizeValue(float target)
		{
			return default(float);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x131EF08", Offset = "0x131EF08", VA = "0x131EF08")]
		public CommonValueSlider()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class ConfirmationButton : BaseButton
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		public bool m_Confirm;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		public bool m_KeepParentOpen;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x158FC74", Offset = "0x158FC74", VA = "0x158FC74", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x158FD1C", Offset = "0x158FD1C", VA = "0x158FD1C")]
		public ConfirmationButton()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class CustomColorButton : BaseButton
	{
		[Token(Token = "0x2000353")]
		public enum State
		{
			[Token(Token = "0x40015BB")]
			ReadyForAdd,
			[Token(Token = "0x40015BC")]
			Set,
			[Token(Token = "0x40015BD")]
			Off
		}

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Texture2D m_ColorTexture;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool m_Trash;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ColorController m_ColorController;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_StorageIndex;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Color m_CustomColor;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private State m_CurrentState;

		[Token(Token = "0x17000303")]
		public Color CustomColor
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x159B6B4", Offset = "0x159B6B4", VA = "0x159B6B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x159B6C8", Offset = "0x159B6C8", VA = "0x159B6C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x159B568", Offset = "0x159B568", VA = "0x159B568")]
		public bool IsReadyForAdd()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x159B578", Offset = "0x159B578", VA = "0x159B578")]
		public bool IsOff()
		{
			return default(bool);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x159B588", Offset = "0x159B588", VA = "0x159B588")]
		public bool IsSet()
		{
			return default(bool);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x159B598", Offset = "0x159B598", VA = "0x159B598", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x159B6AC", Offset = "0x159B6AC", VA = "0x159B6AC")]
		public void SetStorageIndex(int index)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x159B9F4", Offset = "0x159B9F4", VA = "0x159B9F4")]
		public void ClearCustomColor()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x159B87C", Offset = "0x159B87C", VA = "0x159B87C")]
		public void SetState(State desiredState)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x159BAA4", Offset = "0x159BAA4", VA = "0x159BAA4", Slot = "22")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x159BC10", Offset = "0x159BC10", VA = "0x159BC10", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x159BFDC", Offset = "0x159BFDC", VA = "0x159BFDC")]
		public CustomColorButton()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class CustomColorPalette : UIComponent
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CustomColorButton[] m_Buttons;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CustomColorButton m_TrashButton;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3 m_TrashButtonPlacementOffset;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_TrashButtonLocalZ;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x14000061")]
		public event Action<Color> ColorPicked
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x159BFE4", Offset = "0x159BFE4", VA = "0x159BFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CABC", Offset = "0xB3CABC")]
			add
			{
			}
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x159C084", Offset = "0x159C084", VA = "0x159C084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CACC", Offset = "0xB3CACC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x159C124", Offset = "0x159C124", VA = "0x159C124", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x159C1F0", Offset = "0x159C1F0", VA = "0x159C1F0", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x159C2B8", Offset = "0x159C2B8", VA = "0x159C2B8", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x159C418", Offset = "0x159C418", VA = "0x159C418", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x159C570", Offset = "0x159C570", VA = "0x159C570", Slot = "22")]
		public override void HasFocus(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x159BB70", Offset = "0x159BB70", VA = "0x159BB70")]
		public void PlaceTrash(Vector3 parentPos_LS, int storageIndex)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x159C704", Offset = "0x159C704", VA = "0x159C704")]
		private void HideTrash()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x159BE80", Offset = "0x159BE80", VA = "0x159BE80")]
		public void RefreshPaletteButtons()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x159C8C4", Offset = "0x159C8C4", VA = "0x159C8C4", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x159CA9C", Offset = "0x159CA9C", VA = "0x159CA9C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x159BDEC", Offset = "0x159BDEC", VA = "0x159BDEC")]
		public void TriggerColorPicked(Color color)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x159CB14", Offset = "0x159CB14", VA = "0x159CB14")]
		public CustomColorPalette()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class CustomColorPaletteStorage : MonoBehaviour
	{
		[Token(Token = "0x2000356")]
		public struct StoredColor
		{
			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool valid;
		}

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CustomColorPaletteStorage m_Instance;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModeAndPickerInfo[] m_ModeToPickerInfo;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_NumColors;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StoredColor[] m_StoredColors;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ColorPickerMode m_Mode;

		[Token(Token = "0x17000304")]
		public ModeAndPickerInfo[] ModeToPickerInfo
		{
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x159CC5C", Offset = "0x159CC5C", VA = "0x159CC5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public ColorPickerMode Mode
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x159CC64", Offset = "0x159CC64", VA = "0x159CC64")]
			get
			{
				return default(ColorPickerMode);
			}
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x159CC6C", Offset = "0x159CC6C", VA = "0x159CC6C")]
			set
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event Action StoredColorsChanged
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x159C378", Offset = "0x159C378", VA = "0x159C378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CADC", Offset = "0xB3CADC")]
			add
			{
			}
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x159C4D0", Offset = "0x159C4D0", VA = "0x159C4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAEC", Offset = "0xB3CAEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event Action ModeChanged
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x159CB1C", Offset = "0x159CB1C", VA = "0x159CB1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CAFC", Offset = "0xB3CAFC")]
			add
			{
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x159CBBC", Offset = "0x159CBBC", VA = "0x159CBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB0C", Offset = "0xB3CB0C")]
			remove
			{
			}
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x159CD04", Offset = "0x159CD04", VA = "0x159CD04")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x159CD7C", Offset = "0x159CD7C", VA = "0x159CD7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x159C820", Offset = "0x159C820", VA = "0x159C820")]
		public int GetNumValidColors()
		{
			return default(int);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x159C880", Offset = "0x159C880", VA = "0x159C880")]
		public Color GetColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x159B774", Offset = "0x159B774", VA = "0x159B774")]
		public void SetColor(int index, Color col, bool colorsChanged = false)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x159CDF8", Offset = "0x159CDF8", VA = "0x159CDF8")]
		public void ClearAllColors()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x159BA50", Offset = "0x159BA50", VA = "0x159BA50")]
		public void ClearColor(int index)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x159CE64", Offset = "0x159CE64", VA = "0x159CE64")]
		public Palette GetPaletteForSaving()
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x159CFC8", Offset = "0x159CFC8", VA = "0x159CFC8")]
		public void SetColorsFromPalette(Palette palette)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x159C734", Offset = "0x159C734", VA = "0x159C734")]
		public void RefreshStoredColors()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x159D190", Offset = "0x159D190", VA = "0x159D190")]
		public CustomColorPaletteStorage()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class DeleteCameraPathPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x6001575")]
		[Address(RVA = "0xEC59E0", Offset = "0xEC59E0", VA = "0xEC59E0", Slot = "4")]
		public override void Init(GameObject parent, string text)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xEC5B58", Offset = "0xEC5B58", VA = "0xEC5B58", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xEC5C44", Offset = "0xEC5C44", VA = "0xEC5C44")]
		public DeleteCameraPathPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class DownloadPopupWindow : PopUpWindow
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int m_SketchIndex;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Renderer m_ProgressBar;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GoogleDriveSketchSet.GoogleDriveFileInfo m_SceneFileInfo;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private TaskAndCts m_DownloadTask;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xECACEC", Offset = "0xECACEC", VA = "0xECACEC", Slot = "5")]
		public override void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xECAEA8", Offset = "0xECAEA8", VA = "0xECAEA8", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xECAF48", Offset = "0xECAF48", VA = "0xECAF48", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xECAFFC", Offset = "0xECAFFC", VA = "0xECAFFC", Slot = "6")]
		public override bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xECB050", Offset = "0xECB050", VA = "0xECB050")]
		public DownloadPopupWindow()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class DrivePopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_DriveLinkEnabledElements;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_DriveLinkDisabledElements;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_DriveFullElements;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_BackupCompleteElements;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_BackingUpElements;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TextMesh m_BackingUpProgress;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_DriveSyncing;

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xECD3F4", Offset = "0xECD3F4", VA = "0xECD3F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xECD530", Offset = "0xECD530", VA = "0xECD530")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xECD66C", Offset = "0xECD66C", VA = "0xECD66C", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xECD7CC", Offset = "0xECD7CC", VA = "0xECD7CC", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xECD6B8", Offset = "0xECD6B8", VA = "0xECD6B8")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xECD8AC", Offset = "0xECD8AC", VA = "0xECD8AC")]
		private void RefreshBackupProgressText()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xECDBCC", Offset = "0xECDBCC", VA = "0xECDBCC")]
		public DrivePopUpWindow()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class DriveSyncProgress : MonoBehaviour
	{
		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_Material;

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xECF354", Offset = "0xECF354", VA = "0xECF354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xECF3B8", Offset = "0xECF3B8", VA = "0xECF3B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xECF438", Offset = "0xECF438", VA = "0xECF438")]
		public DriveSyncProgress()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class ExitTiltBrushPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected TextMesh m_Title;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected SaveAndConfirmButton m_SaveButton;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_Title_Saving;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string m_Title_NoSaving;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string m_SaveButtonDescription_Saving;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string m_SaveButtonDescription_NoSaving;

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xED7CA0", Offset = "0xED7CA0", VA = "0xED7CA0", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xED7E74", Offset = "0xED7E74", VA = "0xED7E74")]
		public ExitTiltBrushPopUpWindow()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class FloatPropertySlider : BaseSlider
	{
		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SerializedPropertyReferenceFloat m_Property;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "Vec2AsRangeAttribute", RVA = "0xB30838", Offset = "0xB30838")]
		[SerializeField]
		private Vector2 m_Range;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB30870", Offset = "0xB30870")]
		private float m_PowerCurve;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x101B7A4", Offset = "0x101B7A4", VA = "0x101B7A4", Slot = "34")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x101B860", Offset = "0x101B860", VA = "0x101B860", Slot = "36")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x101B924", Offset = "0x101B924", VA = "0x101B924")]
		public FloatPropertySlider()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class FogDensitySlider : BaseSlider
	{
		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Renderer m_FogDensity;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_MaxFogDensity;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x101CA20", Offset = "0x101CA20", VA = "0x101CA20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x101CAD0", Offset = "0x101CAD0", VA = "0x101CAD0", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x101CB8C", Offset = "0x101CB8C", VA = "0x101CB8C", Slot = "34")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x101CD24", Offset = "0x101CD24", VA = "0x101CD24", Slot = "35")]
		protected override void OnPositionSliderNobUpdated()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x101CE24", Offset = "0x101CE24", VA = "0x101CE24", Slot = "20")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x101CF3C", Offset = "0x101CF3C", VA = "0x101CF3C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x101CF6C", Offset = "0x101CF6C", VA = "0x101CF6C")]
		private void OnFogDensityChanged()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x101CE3C", Offset = "0x101CE3C", VA = "0x101CE3C")]
		private void EndModifyCommand()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x101CFE4", Offset = "0x101CFE4", VA = "0x101CFE4")]
		public FogDensitySlider()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class FrameCountDisplay : MonoBehaviour
	{
		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_numFrames;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x101D0DC", Offset = "0x101D0DC", VA = "0x101D0DC")]
		public void SetFramesTotal(int frames)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x101D18C", Offset = "0x101D18C", VA = "0x101D18C")]
		public void SetCurrentFrame(int frame)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x101D25C", Offset = "0x101D25C", VA = "0x101D25C")]
		public FrameCountDisplay()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class GalleryButton : ModeButton
	{
		[Token(Token = "0x2000360")]
		public enum Type
		{
			[Token(Token = "0x40015E8")]
			Delete,
			[Token(Token = "0x40015E9")]
			Selection,
			[Token(Token = "0x40015EA")]
			LogOut,
			[Token(Token = "0x40015EB")]
			Liked,
			[Token(Token = "0x40015EC")]
			Exit,
			[Token(Token = "0x40015ED")]
			Showcase,
			[Token(Token = "0x40015EE")]
			Local,
			[Token(Token = "0x40015EF")]
			Drive
		}

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Type m_ButtonType;

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x101F1C0", Offset = "0x101F1C0", VA = "0x101F1C0", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x101F27C", Offset = "0x101F27C", VA = "0x101F27C")]
		public GalleryButton()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class GpuTextRender : MonoBehaviour
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_Material;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_Width;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_Height;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0xB3091C", Offset = "0xB3091C")]
		private string m_Text;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture m_TargetTexture;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D m_SourceTexture;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_Data;

		[Token(Token = "0x17000306")]
		public RenderTexture RenderedTexture
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xFA48C4", Offset = "0xFA48C4", VA = "0xFA48C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xFA48CC", Offset = "0xFA48CC", VA = "0xFA48CC")]
		public void SetData(int index, float value)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xFA4908", Offset = "0xFA4908", VA = "0xFA4908")]
		private void Awake()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xFA4E68", Offset = "0xFA4E68", VA = "0xFA4E68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xFA4F14", Offset = "0xFA4F14", VA = "0xFA4F14")]
		public GpuTextRender()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class InspectSketchButton : BaseButton
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int m_SketchIndex;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private SketchSetType m_SketchSetType;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x12DAD68", Offset = "0x12DAD68", VA = "0x12DAD68")]
		public void SetSketchDetails(int index, SketchSetType type)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x12DAD70", Offset = "0x12DAD70", VA = "0x12DAD70", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x12DAE0C", Offset = "0x12DAE0C", VA = "0x12DAE0C")]
		public InspectSketchButton()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class LightButton : BaseButton
	{
		[Serializable]
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2972C", Offset = "0xB2972C")]
		private sealed class <>c
		{
			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__4_0;

			[Token(Token = "0x60015A8")]
			[Address(RVA = "0xFFEB20", Offset = "0xFFEB20", VA = "0xFFEB20")]
			public <>c()
			{
			}

			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xFFEB28", Offset = "0xFFEB28", VA = "0xFFEB28")]
			internal bool <SetDescriptionText>b__4_0(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool[] m_SkipDescriptionsTranslationsArray;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LightMode m_ButtonType;

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x10D0540", Offset = "0x10D0540", VA = "0x10D0540", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x10D08B0", Offset = "0x10D08B0", VA = "0x10D08B0", Slot = "7")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x10D0A14", Offset = "0x10D0A14", VA = "0x10D0A14", Slot = "6")]
		public override void SetDescriptionText(params string[] strings)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x10D0E6C", Offset = "0x10D0E6C", VA = "0x10D0E6C")]
		public LightButton()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class LightGizmo : MonoBehaviour
	{
		[Token(Token = "0x2000366")]
		private enum DragState
		{
			[Token(Token = "0x400160E")]
			None,
			[Token(Token = "0x400160F")]
			Hover,
			[Token(Token = "0x4001610")]
			Drag
		}

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_ColorIndicator;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_BroadCollider;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_LightMesh;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer[] m_TintableMeshes;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform[] m_HighlightMeshXfs;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DampenDeadRadius;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_DampenRadius;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DampenExp;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Mesh[] m_HighlightMeshes;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_LightID;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Light m_Light;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_Rotation_SS;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DragState m_State;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private TrTransform m_BaseDragXf_LS;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LightsPanel m_ParentPanel;

		[Token(Token = "0x17000307")]
		public Collider BroadCollider
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x10D111C", Offset = "0x10D111C", VA = "0x10D111C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public Collider Collider
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x10D1124", Offset = "0x10D1124", VA = "0x10D1124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public bool Visible
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x10D112C", Offset = "0x10D112C", VA = "0x10D112C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool IsBeingDragged
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x10D114C", Offset = "0x10D114C", VA = "0x10D114C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public bool IsBeingHovered
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x10D115C", Offset = "0x10D115C", VA = "0x10D115C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x10D116C", Offset = "0x10D116C", VA = "0x10D116C")]
		public void SetParentPanel(LightsPanel panel)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x10D1214", Offset = "0x10D1214", VA = "0x10D1214")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x10D1380", Offset = "0x10D1380", VA = "0x10D1380")]
		public Color SetLight(int ID)
		{
			return default(Color);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x10D14C0", Offset = "0x10D14C0", VA = "0x10D14C0", Slot = "4")]
		public virtual void SetColor(Color color)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x10D15CC", Offset = "0x10D15CC", VA = "0x10D15CC")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x10D15E8", Offset = "0x10D15E8", VA = "0x10D15E8")]
		public void UpdateTint()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x10D1784", Offset = "0x10D1784", VA = "0x10D1784")]
		public bool UpdateDragState(bool hit, bool activate)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x10D2084", Offset = "0x10D2084", VA = "0x10D2084")]
		public void SetRotation(Quaternion rotation_SS)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x10D20FC", Offset = "0x10D20FC", VA = "0x10D20FC")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x10D23DC", Offset = "0x10D23DC", VA = "0x10D23DC")]
		public LightGizmo()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x10D23F8", Offset = "0x10D23F8", VA = "0x10D23F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB1C", Offset = "0xB3CB1C")]
		private void <SetParentPanel>b__27_0(TrTransform prev, TrTransform current)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class LightingButton : BaseButton
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Environment m_Preset;

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x10D266C", Offset = "0x10D266C", VA = "0x10D266C", Slot = "34")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x10D2700", Offset = "0x10D2700", VA = "0x10D2700")]
		public void SetPreset(Environment rPreset)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x10D27DC", Offset = "0x10D27DC", VA = "0x10D27DC", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x10D2CF8", Offset = "0x10D2CF8", VA = "0x10D2CF8")]
		public LightingButton()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class LightingPopUpWindow : PagingPopUpWindow
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string m_CurrentPresetDesc;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Environment> m_Environments;

		[Token(Token = "0x1700030C")]
		protected override int m_DataCount
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x10D2D00", Offset = "0x10D2D00", VA = "0x10D2D00", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x10D2D4C", Offset = "0x10D2D4C", VA = "0x10D2D4C", Slot = "17")]
		protected override void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x10D2D68", Offset = "0x10D2D68", VA = "0x10D2D68", Slot = "18")]
		protected override void RefreshIcon(ImageIcon icon, int iCatalog)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x10D2EA0", Offset = "0x10D2EA0", VA = "0x10D2EA0", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x10D30E4", Offset = "0x10D30E4", VA = "0x10D30E4")]
		protected void OnFadingToDesiredEnvironment()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x10D3194", Offset = "0x10D3194", VA = "0x10D3194")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x10D3270", Offset = "0x10D3270", VA = "0x10D3270")]
		public LightingPopUpWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public enum LightMode
	{
		[Token(Token = "0x4001615")]
		Ambient = -1,
		[Token(Token = "0x4001616")]
		Shadow,
		[Token(Token = "0x4001617")]
		NoShadow,
		[Token(Token = "0x4001618")]
		NumLights
	}
	[Token(Token = "0x200036A")]
	public class LightsPanel : BasePanel
	{
		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2973C", Offset = "0xB2973C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightsPanel <>4__this;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightMode mode;

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xFFEB4C", Offset = "0xFFEB4C", VA = "0xFFEB4C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xFFEB54", Offset = "0xFFEB54", VA = "0xFFEB54")]
			internal void <OnColorPicked>b__0(Color c)
			{
			}
		}

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2974C", Offset = "0xB2974C")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightsPanel <>4__this;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightMode mode;

			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xFFEC18", Offset = "0xFFEC18", VA = "0xFFEC18")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xFFEC20", Offset = "0xFFEC20", VA = "0xFFEC20")]
			internal void <ButtonPressed>b__0(Color c)
			{
			}
		}

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2975C", Offset = "0xB2975C")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightsPanel <>4__this;

			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightMode mode;

			[Token(Token = "0x60015EB")]
			[Address(RVA = "0xFFEDB0", Offset = "0xFFEDB0", VA = "0xFFEDB0")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xFFEDB8", Offset = "0xFFEDB8", VA = "0xFFEDB8")]
			internal void <MakeOnPopUpClose>b__0()
			{
			}
		}

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2976C", Offset = "0xB2976C")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightMode mode;

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xFFEF94", Offset = "0xFFEF94", VA = "0xFFEF94")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xFFEF9C", Offset = "0xFFEF9C", VA = "0xFFEF9C")]
			internal void <MakeLightColorFinalized>b__0()
			{
			}
		}

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2977C", Offset = "0xB2977C")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightsPanel <>4__this;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightMode mode;

			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xFFF150", Offset = "0xFFF150", VA = "0xFFF150")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xFFF158", Offset = "0xFFF158", VA = "0xFFF158")]
			internal void <MakeLightColorPickedAsFinal>b__0(Color c)
			{
			}
		}

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private LightButton[] m_LightButtons;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private LightGizmo m_MainLightGizmoPrefab;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private LightGizmo m_SecondaryLightGizmoPrefab;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private float m_LightSize;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Material m_PreviewSphereMaterial;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private Material m_LightButtonHDRMaterial;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Transform m_PreviewSphereParent;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[SerializeField]
		private float m_ColorPickerPopUpHeightOffset;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[SerializeField]
		private Transform m_ShadowLightFake;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private Renderer m_ShadowLightColorIndicator;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private Transform m_NoShadowLightFake;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Renderer m_NoShadowLightColorIndicator;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private Transform m_PreviewSphere;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private Transform m_PreviewSphereBase;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private Material m_PreviewSphereMaterialInstance;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private LightGizmo m_LightGizmo_Shadow;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private LightGizmo m_LightGizmo_NoShadow;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private LightGizmo m_GizmoPointedAt;

		[Token(Token = "0x1700030D")]
		public Vector3 PreviewCenter
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x10D2058", Offset = "0x10D2058", VA = "0x10D2058")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700030E")]
		public bool IsLightGizmoBeingDragged
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x10D3D50", Offset = "0x10D3D50", VA = "0x10D3D50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030F")]
		public bool IsLightGizmoBeingHovered
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x10D3D94", Offset = "0x10D3D94", VA = "0x10D3D94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000310")]
		public Vector3 ActiveLightGizmoPosition
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x10D3DD8", Offset = "0x10D3DD8", VA = "0x10D3DD8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x10D2310", Offset = "0x10D2310", VA = "0x10D2310")]
		public Vector3 LightWidgetPosition(Quaternion lightRot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x10D3E20", Offset = "0x10D3E20", VA = "0x10D3E20", Slot = "9")]
		public override void OnPanelMoved()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x10D408C", Offset = "0x10D408C", VA = "0x10D408C")]
		private bool IsPositionCloserThanPreview(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x10D4160", Offset = "0x10D4160", VA = "0x10D4160")]
		private void ActivateButtons(bool show)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x10D41E8", Offset = "0x10D41E8", VA = "0x10D41E8", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x10D4510", Offset = "0x10D4510", VA = "0x10D4510", Slot = "21")]
		public override void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x10D4564", Offset = "0x10D4564", VA = "0x10D4564", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x10D46D8", Offset = "0x10D46D8", VA = "0x10D46D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x10D46E4", Offset = "0x10D46E4", VA = "0x10D46E4", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x10D48CC", Offset = "0x10D48CC", VA = "0x10D48CC", Slot = "13")]
		protected override void OnDisablePanel()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x10D43F4", Offset = "0x10D43F4", VA = "0x10D43F4")]
		public Color GetLightColor(LightMode mode)
		{
			return default(Color);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x10D3C94", Offset = "0x10D3C94", VA = "0x10D3C94")]
		public void SetDiscoLights(Color ambient, Color shadow, Color noShadow, bool noRecord)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x10D4A08", Offset = "0x10D4A08", VA = "0x10D4A08")]
		private void SetLightColor(LightMode mode, Color color, bool noRecord = false)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x10D3C6C", Offset = "0x10D3C6C", VA = "0x10D3C6C")]
		public LightGizmo GetLight(LightMode light)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x10D4DF0", Offset = "0x10D4DF0", VA = "0x10D4DF0")]
		private Action<Color> OnColorPicked(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x10D4EC0", Offset = "0x10D4EC0", VA = "0x10D4EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x10D5214", Offset = "0x10D5214", VA = "0x10D5214", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x10D56A0", Offset = "0x10D56A0", VA = "0x10D56A0", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x10D57D8", Offset = "0x10D57D8", VA = "0x10D57D8", Slot = "20")]
		public override void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x10D58E4", Offset = "0x10D58E4", VA = "0x10D58E4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x10D4BB0", Offset = "0x10D4BB0", VA = "0x10D4BB0")]
		private void RefreshLightButtons()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x10D5A9C", Offset = "0x10D5A9C", VA = "0x10D5A9C", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x10D436C", Offset = "0x10D436C", VA = "0x10D436C")]
		private string LightModeToString(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x10D05F4", Offset = "0x10D05F4", VA = "0x10D05F4")]
		public void ButtonPressed(LightMode mode)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x10D5B0C", Offset = "0x10D5B0C", VA = "0x10D5B0C")]
		private Action MakeOnPopUpClose(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x10D5BC8", Offset = "0x10D5BC8", VA = "0x10D5BC8")]
		private Action MakeLightColorFinalized(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x10D5C74", Offset = "0x10D5C74", VA = "0x10D5C74")]
		private Action<Color> MakeLightColorPickedAsFinal(LightMode mode)
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x10D4454", Offset = "0x10D4454", VA = "0x10D4454")]
		private string ColorDescription(Color color)
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x10D6090", Offset = "0x10D6090", VA = "0x10D6090", Slot = "18")]
		protected override void UpdateGazeBehavior()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x10D6378", Offset = "0x10D6378", VA = "0x10D6378")]
		public LightsPanel()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class LoadReferenceImageButton : BaseButton
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB30AC8", Offset = "0xB30AC8")]
		private ReferenceImage <ReferenceImage>k__BackingField;

		[Token(Token = "0x17000311")]
		public ReferenceImage ReferenceImage
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0x10D65A4", Offset = "0x10D65A4", VA = "0x10D65A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB2C", Offset = "0xB3CB2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x10D65AC", Offset = "0x10D65AC", VA = "0x10D65AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CB3C", Offset = "0xB3CB3C")]
			set
			{
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x10D65B4", Offset = "0x10D65B4", VA = "0x10D65B4")]
		public void RefreshDescription()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x10D6694", Offset = "0x10D6694", VA = "0x10D6694", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x10D68EC", Offset = "0x10D68EC", VA = "0x10D68EC", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x10D6980", Offset = "0x10D6980", VA = "0x10D6980")]
		public LoadReferenceImageButton()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class LoadSketchButton : BaseButton
	{
		[Serializable]
		[Token(Token = "0x2000372")]
		public struct MenuButton
		{
			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SketchControlsScript.GlobalCommands m_Command;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture m_Icon;
		}

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private InspectSketchButton m_MenuButton;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_Warning;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_WarningMaterial;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Material m_ErrorMaterial;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_ThumbnailLoaded;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_SizeOk;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector2 m_DynamicUvScale;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 m_DynamicUvOffset;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_DynamicUvTransitionSpeed;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_DynamicUvTransitionValue;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_SketchIndex;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SketchSet m_SketchSet;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x17000312")]
		public int SketchIndex
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x10D6988", Offset = "0x10D6988", VA = "0x10D6988")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0x10D6990", Offset = "0x10D6990", VA = "0x10D6990")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public SketchSet SketchSet
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x10D6D54", Offset = "0x10D6D54", VA = "0x10D6D54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x10D6D5C", Offset = "0x10D6D5C", VA = "0x10D6D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public bool ThumbnailLoaded
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x10D6D64", Offset = "0x10D6D64", VA = "0x10D6D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0x10D6D6C", Offset = "0x10D6D6C", VA = "0x10D6D6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public float FadeIn
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x10D6D78", Offset = "0x10D6D78", VA = "0x10D6D78")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public bool WarningVisible
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x10D6E84", Offset = "0x10D6E84", VA = "0x10D6E84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x10D6DE0", Offset = "0x10D6DE0", VA = "0x10D6DE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x10D6998", Offset = "0x10D6998", VA = "0x10D6998")]
		private void RefreshDetails()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x10D6F20", Offset = "0x10D6F20", VA = "0x10D6F20")]
		public void UpdateUvOffsetAndScale(Vector2 offset, Vector2 scale)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x10D7000", Offset = "0x10D7000", VA = "0x10D7000", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x10D7090", Offset = "0x10D7090", VA = "0x10D7090", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x10D7218", Offset = "0x10D7218", VA = "0x10D7218", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x10D74C0", Offset = "0x10D74C0", VA = "0x10D74C0", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x10D76B8", Offset = "0x10D76B8", VA = "0x10D76B8", Slot = "21")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x10D77D0", Offset = "0x10D77D0", VA = "0x10D77D0", Slot = "22")]
		public override void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x10D7914", Offset = "0x10D7914", VA = "0x10D7914", Slot = "23")]
		public override void LostFocus()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x10D7958", Offset = "0x10D7958", VA = "0x10D7958", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x10D6F18", Offset = "0x10D6F18", VA = "0x10D6F18")]
		private bool AlwaysShowMenuButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x10D79AC", Offset = "0x10D79AC", VA = "0x10D79AC")]
		public LoadSketchButton()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class LocalModelButton : ModelButton
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private BaseButton m_MenuButton;

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x10D8120", Offset = "0x10D8120", VA = "0x10D8120", Slot = "45")]
		protected override void RequestModelPreloadInternal(string reason)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x10D815C", Offset = "0x10D815C", VA = "0x10D815C", Slot = "46")]
		protected override void CancelRequestModelPreload()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x10D8160", Offset = "0x10D8160", VA = "0x10D8160")]
		public LocalModelButton()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class LongPressButton : OptionButton
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float m_LongPressDuration;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float m_PressTimer;

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x10D9D50", Offset = "0x10D9D50", VA = "0x10D9D50", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x10D9D78", Offset = "0x10D9D78", VA = "0x10D9D78")]
		private void OnLongPress()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x10D9F14", Offset = "0x10D9F14", VA = "0x10D9F14", Slot = "18")]
		public override void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x10D9F7C", Offset = "0x10D9F7C", VA = "0x10D9F7C", Slot = "19")]
		public override void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x10D9FDC", Offset = "0x10D9FDC", VA = "0x10D9FDC", Slot = "20")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x10DA0C4", Offset = "0x10DA0C4", VA = "0x10DA0C4", Slot = "21")]
		public override void GainFocus()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x10DA184", Offset = "0x10DA184", VA = "0x10DA184")]
		public LongPressButton()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class LongPressToolButton : LongPressButton
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private BaseTool.ToolType m_Tool;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private bool m_EatGazeInputOnPress;

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x10DA198", Offset = "0x10DA198", VA = "0x10DA198", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x10DA23C", Offset = "0x10DA23C", VA = "0x10DA23C", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x10DA2DC", Offset = "0x10DA2DC", VA = "0x10DA2DC", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x10DA390", Offset = "0x10DA390", VA = "0x10DA390", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x10DA484", Offset = "0x10DA484", VA = "0x10DA484")]
		public LongPressToolButton()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class MemoryWarningMessage : UIComponent
	{
		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_ExceededMessage;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_WarningMessage;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TextMeshPro m_MemoryRoomOwnerText;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro m_StrategyText;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_StrategyButtons;

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x10E11B4", Offset = "0x10E11B4", VA = "0x10E11B4", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x10E12A8", Offset = "0x10E12A8", VA = "0x10E12A8", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x10E139C", Offset = "0x10E139C", VA = "0x10E139C")]
		private void OnMemoryStateChanged()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x10E16D0", Offset = "0x10E16D0", VA = "0x10E16D0")]
		public MemoryWarningMessage()
		{
		}
	}
	[Token(Token = "0x2000377")]
	internal class MenuPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x600161F")]
		[Address(RVA = "0x10E16D8", Offset = "0x10E16D8", VA = "0x10E16D8", Slot = "5")]
		public override void SetPopupCommandParameters(int iCommandParam, int iCommandParam2)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x10E1794", Offset = "0x10E1794", VA = "0x10E1794")]
		public MenuPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class MirrorTray : UIComponent
	{
		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2978C", Offset = "0xB2978C")]
		private sealed class <Animate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MirrorTray <>4__this;

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool showPanel;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <localScale>5__2;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <x>5__3;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001630")]
				[Address(RVA = "0x100118C", Offset = "0x100118C", VA = "0x100118C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001632")]
				[Address(RVA = "0x10011D4", Offset = "0x10011D4", VA = "0x10011D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600162D")]
			[Address(RVA = "0x1000F48", Offset = "0x1000F48", VA = "0x1000F48")]
			[DebuggerHidden]
			public <Animate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600162E")]
			[Address(RVA = "0x1000F74", Offset = "0x1000F74", VA = "0x1000F74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162F")]
			[Address(RVA = "0x1000F78", Offset = "0x1000F78", VA = "0x1000F78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x1001194", Offset = "0x1001194", VA = "0x1001194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_Border;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_AnimateSpeed;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector2 m_AnimateRange;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LongPressButton m_Button;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_AnimationCoroutine;

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xF32610", Offset = "0xF32610", VA = "0xF32610", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xF326E0", Offset = "0xF326E0", VA = "0xF326E0", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xF32784", Offset = "0xF32784", VA = "0xF32784", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xF32830", Offset = "0xF32830", VA = "0xF32830", Slot = "10")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xF328BC", Offset = "0xF328BC", VA = "0xF328BC", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xF3298C", Offset = "0xF3298C", VA = "0xF3298C", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xF329C0", Offset = "0xF329C0", VA = "0xF329C0", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xF32B98", Offset = "0xF32B98", VA = "0xF32B98", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xF32BCC", Offset = "0xF32BCC", VA = "0xF32BCC", Slot = "28")]
		public override bool RaycastAgainstCustomCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xF32C90", Offset = "0xF32C90", VA = "0xF32C90")]
		private void OnMirrorVisibilityChanged()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xF32D6C", Offset = "0xF32D6C", VA = "0xF32D6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CB4C", Offset = "0xB3CB4C")]
		private IEnumerator Animate(bool showPanel)
		{
			return null;
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xF32DEC", Offset = "0xF32DEC", VA = "0xF32DEC")]
		public MirrorTray()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public abstract class ModalPanel : BasePanel
	{
		[Token(Token = "0x200037B")]
		protected enum PageFlipState
		{
			[Token(Token = "0x4001668")]
			Standard,
			[Token(Token = "0x4001669")]
			TransitionOut,
			[Token(Token = "0x400166A")]
			TransitionIn
		}

		[Serializable]
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2979C", Offset = "0xB2979C")]
		private sealed class <>c
		{
			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NavButton, bool> <>9__19_0;

			[Token(Token = "0x6001644")]
			[Address(RVA = "0x10012B0", Offset = "0x10012B0", VA = "0x10012B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001645")]
			[Address(RVA = "0x10012B8", Offset = "0x10012B8", VA = "0x10012B8")]
			internal bool <Start>b__19_0(NavButton b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		protected GameObject m_PrevButton;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		protected GameObject m_NextButton;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		protected NavButton[] m_NavigationButtons;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		protected ModeButton[] m_ModeButtons;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		protected PageFlipState m_CurrentPageFlipState;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float m_PageFlipTransitionAmount;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float m_PageFlipSpeed;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private List<BaseButton> m_Icons;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int m_PageIndex;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		protected int m_RequestedPageIndex;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		protected int m_NumPages;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		protected int m_IndexOffset;

		[Token(Token = "0x17000319")]
		protected virtual int PageIndex
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xF34AD4", Offset = "0xF34AD4", VA = "0xF34AD4", Slot = "29")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001634")]
			[Address(RVA = "0xF34ADC", Offset = "0xF34ADC", VA = "0xF34ADC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		protected virtual List<BaseButton> Icons
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xF34AE4", Offset = "0xF34AE4", VA = "0xF34AE4", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001636")]
		public abstract bool IsInButtonMode(ModeButton button);

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xF34AEC", Offset = "0xF34AEC", VA = "0xF34AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xF34CF8", Offset = "0xF34CF8", VA = "0xF34CF8", Slot = "33")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xF34CFC", Offset = "0xF34CFC", VA = "0xF34CFC", Slot = "34")]
		protected virtual void RefreshPage()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xF35114", Offset = "0xF35114", VA = "0xF35114")]
		protected void PageFlipUpdate()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xF352EC", Offset = "0xF352EC", VA = "0xF352EC", Slot = "35")]
		protected virtual void UpdateIndexOffset()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xF35190", Offset = "0xF35190", VA = "0xF35190")]
		private void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xF35260", Offset = "0xF35260", VA = "0xF35260")]
		private void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xF35368", Offset = "0xF35368", VA = "0xF35368", Slot = "36")]
		protected virtual void UpdateButtonTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xF35508", Offset = "0xF35508", VA = "0xF35508", Slot = "27")]
		public override void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xF35540", Offset = "0xF35540", VA = "0xF35540", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xF35590", Offset = "0xF35590", VA = "0xF35590")]
		protected void ResetPageIndex()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xF355DC", Offset = "0xF355DC", VA = "0xF355DC")]
		protected ModalPanel()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public abstract class ModeButton : BaseButton
	{
		[Token(Token = "0x6001646")]
		[Address(RVA = "0xF35648", Offset = "0xF35648", VA = "0xF35648", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xF35768", Offset = "0xF35768", VA = "0xF35768")]
		protected ModeButton()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public abstract class ModelButton : BaseButton
	{
		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297AC", Offset = "0xB297AC")]
		private sealed class <LoadModelAndRefreshButton>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ModelButton <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600165B")]
				[Address(RVA = "0x1002A8C", Offset = "0x1002A8C", VA = "0x1002A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600165D")]
				[Address(RVA = "0x1002AD4", Offset = "0x1002AD4", VA = "0x1002AD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001658")]
			[Address(RVA = "0x1002994", Offset = "0x1002994", VA = "0x1002994")]
			[DebuggerHidden]
			public <LoadModelAndRefreshButton>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0x10029C0", Offset = "0x10029C0", VA = "0x10029C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600165A")]
			[Address(RVA = "0x10029C4", Offset = "0x10029C4", VA = "0x10029C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0x1002A94", Offset = "0x1002A94", VA = "0x1002A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected Transform m_PreviewParent;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_RotationSeconds;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Texture2D m_UnloadedTexture;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Texture2D m_LoadedTexture;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Texture2D m_ErrorTexture;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string m_LoadHelpText;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Model m_Model;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Model m_ModelPreviewModel;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected int m_ModelIndex;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Transform m_ModelPreview;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected Quaternion m_PreviewBaseRotation;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float m_AnimateValue;

		[Token(Token = "0x1700031B")]
		protected virtual Texture2D UnloadedTexture
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xF375B4", Offset = "0xF375B4", VA = "0xF375B4", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		protected virtual string ModelName
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xF375BC", Offset = "0xF375BC", VA = "0xF375BC", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xF375D4", Offset = "0xF375D4", VA = "0xF375D4")]
		public void CreatePreviewModel()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xF378DC", Offset = "0xF378DC", VA = "0xF378DC", Slot = "44")]
		protected virtual void RefreshModelButton()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xF37B88", Offset = "0xF37B88", VA = "0xF37B88")]
		public void RequestModelPreload(int pageIndex)
		{
		}

		[Token(Token = "0x600164D")]
		protected abstract void RequestModelPreloadInternal(string reason);

		[Token(Token = "0x600164E")]
		protected abstract void CancelRequestModelPreload();

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xF37C4C", Offset = "0xF37C4C", VA = "0xF37C4C", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xF38090", Offset = "0xF38090", VA = "0xF38090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CBFC", Offset = "0xB3CBFC")]
		private IEnumerator LoadModelAndRefreshButton()
		{
			return null;
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xF37CA0", Offset = "0xF37CA0", VA = "0xF37CA0")]
		protected void SpawnValidModel(Model model)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xF38128", Offset = "0xF38128", VA = "0xF38128")]
		public void SetPreset(Model model, int index)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xF38188", Offset = "0xF38188", VA = "0xF38188", Slot = "47")]
		public virtual string UnloadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xF38190", Offset = "0xF38190", VA = "0xF38190", Slot = "48")]
		public virtual string LoadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF38198", Offset = "0xF38198", VA = "0xF38198")]
		public void DestroyModelPreview()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF3826C", Offset = "0xF3826C", VA = "0xF3826C", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xF383F4", Offset = "0xF383F4", VA = "0xF383F4")]
		protected ModelButton()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class MultistateButton : BaseButton
	{
		[Serializable]
		[Token(Token = "0x2000381")]
		public struct Option
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_Description;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Texture m_Texture;
		}

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[SerializeField]
		private bool m_ShowRotation;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_RotationSpeedMultiplier;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private SketchControlsScript.GlobalCommands m_Command;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected Option[] m_Options;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_CurrentOptionIdx;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GameObject m_OptionContainer;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GameObject[] m_Sides;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Renderer[] m_SideRenderers;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color? m_MaterialTint;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Dictionary<string, float> m_MaterialFloats;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_CurrentRotation;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float m_TargetRotation;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_IsRotating;

		[Token(Token = "0x1700031F")]
		private int NumOptions
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x10A3BB4", Offset = "0x10A3BB4", VA = "0x10A3BB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		private Option CurrentOption
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x10A3BD0", Offset = "0x10A3BD0", VA = "0x10A3BD0")]
			get
			{
				return default(Option);
			}
		}

		[Token(Token = "0x17000321")]
		private float OptionAngleDeltaDegrees
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x10A3C10", Offset = "0x10A3C10", VA = "0x10A3C10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000322")]
		private float OptionAngleDeltaRadians
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x10A3C3C", Offset = "0x10A3C3C", VA = "0x10A3C3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000323")]
		private float OptionSideDistance
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x10A3C6C", Offset = "0x10A3C6C", VA = "0x10A3C6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x10A3CC4", Offset = "0x10A3CC4", VA = "0x10A3CC4", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x10A3D48", Offset = "0x10A3D48", VA = "0x10A3D48", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x10A3DC8", Offset = "0x10A3DC8", VA = "0x10A3DC8", Slot = "42")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x10A45B0", Offset = "0x10A45B0", VA = "0x10A45B0", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x10A46BC", Offset = "0x10A46BC", VA = "0x10A46BC")]
		private void HideOtherSides()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x10A4738", Offset = "0x10A4738", VA = "0x10A4738")]
		private void ShowAllSides()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x10A4544", Offset = "0x10A4544", VA = "0x10A4544")]
		protected void ForceSelectedOption(int index)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x10A47A8", Offset = "0x10A47A8", VA = "0x10A47A8")]
		protected void SetSelectedOption(int index)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x10A4844", Offset = "0x10A4844", VA = "0x10A4844", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x10A3E98", Offset = "0x10A3E98", VA = "0x10A3E98")]
		protected void CreateOptionSides()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x10A48EC", Offset = "0x10A48EC", VA = "0x10A48EC", Slot = "38")]
		protected override void SetMaterialColor(Color rColor)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x10A4A44", Offset = "0x10A4A44", VA = "0x10A4A44", Slot = "35")]
		protected override void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x10A4B3C", Offset = "0x10A4B3C", VA = "0x10A4B3C")]
		public MultistateButton()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class MusicButton : BaseButton
	{
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int m_GameMusicIndex;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x10A4B58", Offset = "0x10A4B58", VA = "0x10A4B58", Slot = "34")]
		protected override void ConfigureTextureAtlas()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x10A4BEC", Offset = "0x10A4BEC", VA = "0x10A4BEC")]
		public void SetPreset(int index)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x10A4CF4", Offset = "0x10A4CF4", VA = "0x10A4CF4", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x10A4DCC", Offset = "0x10A4DCC", VA = "0x10A4DCC")]
		public MusicButton()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class MusicPopUpWindow : PagingPopUpWindow
	{
		[Token(Token = "0x17000324")]
		protected override int m_DataCount
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x10A4DD4", Offset = "0x10A4DD4", VA = "0x10A4DD4", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x10A4E2C", Offset = "0x10A4E2C", VA = "0x10A4E2C", Slot = "17")]
		protected override void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x10A4E48", Offset = "0x10A4E48", VA = "0x10A4E48", Slot = "18")]
		protected override void RefreshIcon(ImageIcon icon, int index)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10A4F20", Offset = "0x10A4F20", VA = "0x10A4F20", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x10A4FAC", Offset = "0x10A4FAC", VA = "0x10A4FAC")]
		public MusicPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class NavButton : BaseButton
	{
		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture2D m_SelectionTexture;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ComponentMessage m_ButtonType;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int m_GotoPage;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TextMesh m_TextMesh;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Renderer m_TextMeshRenderer;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_InactiveColor;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x10A4FB4", Offset = "0x10A4FB4", VA = "0x10A4FB4", Slot = "11")]
		protected override void OnRegisterComponent()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10A50A4", Offset = "0x10A50A4", VA = "0x10A50A4", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10A5134", Offset = "0x10A5134", VA = "0x10A5134", Slot = "37")]
		public override void SetButtonSelected(bool bSelected)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x10A52BC", Offset = "0x10A52BC", VA = "0x10A52BC")]
		public void SetGotoPage(int iPage)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10A53D8", Offset = "0x10A53D8", VA = "0x10A53D8")]
		public NavButton()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class NewSketchButton : OptionButton
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float m_AdjustDistanceAmount;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Renderer m_NewSketchButtonBG;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xFCB070", Offset = "0xFCB070", VA = "0xFCB070", Slot = "41")]
		protected override void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrowAmount)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xFCB17C", Offset = "0xFCB17C", VA = "0xFCB17C", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xFCB498", Offset = "0xFCB498", VA = "0xFCB498")]
		public NewSketchButton()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class OptionButton : BaseButton
	{
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public SketchControlsScript.GlobalCommands m_Command;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public int m_CommandParam;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		protected int m_CommandParam2;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		protected bool m_RequiresPopup;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[SerializeField]
		protected bool m_CenterPopupOnButton;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected Vector3 m_PopupOffset;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected string m_PopupText;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected string m_ToggleOnDescription;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		protected Texture2D m_ToggleOnTexture;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected bool m_AllowUnavailable;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_LinkedUIObject;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string m_DefaultDescription;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Texture2D m_DefaultTexture;

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xFD8DF0", Offset = "0xFD8DF0", VA = "0xFD8DF0")]
		public void SetCommandParameters(int iCommandParam, int iCommandParam2 = -1)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xFD8DF8", Offset = "0xFD8DF8", VA = "0xFD8DF8", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xFD8EB0", Offset = "0xFD8EB0", VA = "0xFD8EB0", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xFD8F74", Offset = "0xFD8F74", VA = "0xFD8F74", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xFD9010", Offset = "0xFD9010", VA = "0xFD9010", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xFD9050", Offset = "0xFD9050", VA = "0xFD9050", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xFD931C", Offset = "0xFD931C", VA = "0xFD931C", Slot = "42")]
		protected virtual bool IsCommandActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xFD9394", Offset = "0xFD9394", VA = "0xFD9394", Slot = "43")]
		protected virtual void UpdateAvailability()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xFD9458", Offset = "0xFD9458", VA = "0xFD9458", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xFCB49C", Offset = "0xFCB49C", VA = "0xFCB49C")]
		public OptionButton()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class OptionsPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_ColorTransitionDuration;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_ColorTransitionValue;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material m_ColorBackground;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xFD96B8", Offset = "0xFD96B8", VA = "0xFD96B8", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xFD9740", Offset = "0xFD9740", VA = "0xFD9740", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xFD986C", Offset = "0xFD986C", VA = "0xFD986C", Slot = "11")]
		protected override void UpdateOpening()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xFD9910", Offset = "0xFD9910", VA = "0xFD9910", Slot = "12")]
		protected override void UpdateClosing()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xFD99E0", Offset = "0xFD99E0", VA = "0xFD99E0", Slot = "14")]
		public override void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xFD9A74", Offset = "0xFD9A74", VA = "0xFD9A74")]
		public void TryClose()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xFD9A84", Offset = "0xFD9A84", VA = "0xFD9A84")]
		public OptionsPopUpWindow()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public abstract class PagingPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x2000389")]
		public class ImageIcon
		{
			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Icon;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BaseButton m_IconScript;

			[Token(Token = "0x40016B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_TextureAssigned;

			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool m_Valid;

			[Token(Token = "0x600169E")]
			[Address(RVA = "0x10E8914", Offset = "0x10E8914", VA = "0x10E8914")]
			public ImageIcon()
			{
			}
		}

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMesh m_NoDataText;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		protected GameObject m_ButtonPrefab;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected Texture2D m_UnknownImageTexture;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		protected float m_IconSpacing;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		protected int m_IconGridWidthFullPage;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		protected int m_IconGridHeightFullPage;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		protected int m_IconCountNavPage;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected ImageIcon[] m_Icons;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int m_IconCountFullPage;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected int m_BaseIndex;

		[Token(Token = "0x17000325")]
		protected abstract int m_DataCount
		{
			[Token(Token = "0x6001692")]
			get;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xFDCDB4", Offset = "0xFDCDB4", VA = "0xFDCDB4", Slot = "17")]
		protected virtual void InitIcon(ImageIcon icon)
		{
		}

		[Token(Token = "0x6001694")]
		protected abstract void RefreshIcon(ImageIcon icon, int iCatalog);

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xFDCDB8", Offset = "0xFDCDB8", VA = "0xFDCDB8", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xFDDA5C", Offset = "0xFDDA5C", VA = "0xFDDA5C", Slot = "9")]
		protected override void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xFDDBE8", Offset = "0xFDDBE8", VA = "0xFDDBE8", Slot = "10")]
		protected override void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xFDDAF0", Offset = "0xFDDAF0", VA = "0xFDDAF0")]
		private void UpdateIconTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xFDD424", Offset = "0xFDD424", VA = "0xFDD424")]
		protected void RefreshPage()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xFDDC5C", Offset = "0xFDDC5C", VA = "0xFDDC5C", Slot = "8")]
		protected override void UpdateVisuals()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xFDDCE0", Offset = "0xFDDCE0", VA = "0xFDDCE0", Slot = "14")]
		public override void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xFDDEBC", Offset = "0xFDDEBC", VA = "0xFDDEBC", Slot = "15")]
		public override void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xFDE030", Offset = "0xFDE030", VA = "0xFDE030")]
		protected PagingPopUpWindow()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class PanelButton : BaseButton
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public BasePanel.PanelType m_Type;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected bool m_AlwaysSpawn;

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1134D1C", Offset = "0x1134D1C", VA = "0x1134D1C", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1134DBC", Offset = "0x1134DBC", VA = "0x1134DBC", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1134E5C", Offset = "0x1134E5C", VA = "0x1134E5C", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1135174", Offset = "0x1135174", VA = "0x1135174", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1135488", Offset = "0x1135488", VA = "0x1135488")]
		public PanelButton()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class PanelFlair : MonoBehaviour
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_AlwaysShow;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshPro m_TextMesh;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material m_DefaultMaterial;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_BloomMaterial;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_Offset;

		[Token(Token = "0x17000326")]
		public bool AlwaysShow
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x1135490", Offset = "0x1135490", VA = "0x1135490")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1135498", Offset = "0x1135498", VA = "0x1135498")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x11355F8", Offset = "0x11355F8", VA = "0x11355F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x11356BC", Offset = "0x11356BC", VA = "0x11356BC")]
		public void ParentToPanel(Transform parent, Vector3 panelOffset)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1135564", Offset = "0x1135564", VA = "0x1135564")]
		public void Hide()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1135780", Offset = "0x1135780", VA = "0x1135780")]
		public void Show()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1135814", Offset = "0x1135814", VA = "0x1135814")]
		public void UpdateAnimationOnPanel(Vector3 panelBounds, Quaternion orient, float alpha)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1135AB4", Offset = "0x1135AB4", VA = "0x1135AB4")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1135B64", Offset = "0x1135B64", VA = "0x1135B64")]
		private void OnMainPointerBrushChange(BrushDescriptor brush)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1135BA4", Offset = "0x1135BA4", VA = "0x1135BA4")]
		public PanelFlair()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038C")]
	public struct PanelMapKey
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_PanelPrefab;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_ModeVr;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool m_ModeVrExperimental;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool m_ModeMono;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool m_ModeQuest;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool m_ModeGvr;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool m_Basic;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool m_Advanced;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1137168", Offset = "0x1137168", VA = "0x1137168")]
		public bool IsValidForSdkMode(SdkMode mode)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200038D")]
	public class WandPane
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BasePanel> orderedPanelList;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleOffset;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xF03D44", Offset = "0xF03D44", VA = "0xF03D44")]
		public WandPane()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class PanelManager : MonoBehaviour
	{
		[Token(Token = "0x200038F")]
		private enum RotateSnapState
		{
			[Token(Token = "0x4001729")]
			Done,
			[Token(Token = "0x400172A")]
			Snapping,
			[Token(Token = "0x400172B")]
			Jiggling,
			[Token(Token = "0x400172C")]
			Resting
		}

		[Token(Token = "0x2000390")]
		private enum PanelsState
		{
			[Token(Token = "0x400172E")]
			Visible,
			[Token(Token = "0x400172F")]
			Exiting,
			[Token(Token = "0x4001730")]
			Hidden,
			[Token(Token = "0x4001731")]
			Entering
		}

		[Token(Token = "0x2000391")]
		public enum PanelMode
		{
			[Token(Token = "0x4001733")]
			Standard,
			[Token(Token = "0x4001734")]
			Sketchbook,
			[Token(Token = "0x4001735")]
			Settings,
			[Token(Token = "0x4001736")]
			MemoryWarning,
			[Token(Token = "0x4001737")]
			Camera,
			[Token(Token = "0x4001738")]
			BrushLab,
			[Token(Token = "0x4001739")]
			RuntimeTests,
			[Token(Token = "0x400173A")]
			StandardToSketchbook,
			[Token(Token = "0x400173B")]
			SketchbookToStandard,
			[Token(Token = "0x400173C")]
			StandardToSettings,
			[Token(Token = "0x400173D")]
			SettingsToStandard,
			[Token(Token = "0x400173E")]
			StandardToCamera,
			[Token(Token = "0x400173F")]
			CameraToStandard,
			[Token(Token = "0x4001740")]
			StandardToBrushLab,
			[Token(Token = "0x4001741")]
			BrushLabToStandard,
			[Token(Token = "0x4001742")]
			MemoryWarningToStandard,
			[Token(Token = "0x4001743")]
			Multiplayer,
			[Token(Token = "0x4001744")]
			StandardToMultiplayer,
			[Token(Token = "0x4001745")]
			MultiplayerToStandard,
			[Token(Token = "0x4001746")]
			StandardToRuntimeTests,
			[Token(Token = "0x4001747")]
			RuntimeTestsToStandard
		}

		[Token(Token = "0x2000392")]
		public enum PaneVisualsState
		{
			[Token(Token = "0x4001749")]
			Hidden,
			[Token(Token = "0x400174A")]
			HiddenToShowing,
			[Token(Token = "0x400174B")]
			Showing,
			[Token(Token = "0x400174C")]
			ShowingToHidden
		}

		[Token(Token = "0x2000393")]
		public class RevealParticle
		{
			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform xf;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem.EmissionModule emission;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystem.ShapeModule shape;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float baseRate;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform parentXf;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 bounds;

			[Token(Token = "0x6001716")]
			[Address(RVA = "0x10E8AD8", Offset = "0x10E8AD8", VA = "0x10E8AD8")]
			public void UpdateTransform()
			{
			}

			[Token(Token = "0x6001717")]
			[Address(RVA = "0x10E8B9C", Offset = "0x10E8B9C", VA = "0x10E8B9C")]
			public void StartEmitting()
			{
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0x10E8BAC", Offset = "0x10E8BAC", VA = "0x10E8BAC")]
			public void StopEmitting()
			{
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0x10E8BBC", Offset = "0x10E8BBC", VA = "0x10E8BBC")]
			public RevealParticle()
			{
			}
		}

		[Token(Token = "0x2000394")]
		public class PanelData
		{
			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BasePanel m_Panel;

			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PanelWidget m_Widget;

			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_RestoreFlag;

			[Token(Token = "0x4001756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RevealParticle m_RevealParticles;

			[Token(Token = "0x1700032E")]
			public bool AvailableInCurrentMode
			{
				[Token(Token = "0x600171A")]
				[Address(RVA = "0x10E8A24", Offset = "0x10E8A24", VA = "0x10E8A24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600171B")]
			[Address(RVA = "0x10E8AD0", Offset = "0x10E8AD0", VA = "0x10E8AD0")]
			public PanelData()
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297BC", Offset = "0xB297BC")]
		private sealed class <>c__DisplayClass131_0
		{
			[Token(Token = "0x4001757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BasePanel.PanelType type;

			[Token(Token = "0x600171C")]
			[Address(RVA = "0x10E89C0", Offset = "0x10E89C0", VA = "0x10E89C0")]
			public <>c__DisplayClass131_0()
			{
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0x10E89C8", Offset = "0x10E89C8", VA = "0x10E89C8")]
			internal bool <GetActivePanelByType>b__1(BasePanel x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297CC", Offset = "0xB297CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PanelData, BasePanel> <>9__131_0;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PanelData, bool> <>9__155_0;

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x10E897C", Offset = "0x10E897C", VA = "0x10E897C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0x10E8984", Offset = "0x10E8984", VA = "0x10E8984")]
			internal BasePanel <GetActivePanelByType>b__131_0(PanelData x)
			{
				return null;
			}

			[Token(Token = "0x6001721")]
			[Address(RVA = "0x10E899C", Offset = "0x10E899C", VA = "0x10E899C")]
			internal bool <GetFixedPanels>b__155_0(PanelData p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PanelManager m_Instance;

		[Token(Token = "0x40016C7")]
		public const string kPlayerPrefAdvancedMode = "AdvancedMode";

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_UxExplorationPrefab;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected PanelMapKey[] m_PanelMap;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_WandPanelsRotationFeedbackInterval;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_WandPanelsRotationScalar;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_WandPanelsRotationVelocityScalar;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_WandPanelsRotationDecay;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RotateSnapRestTime;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_WandRadius;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_AdminPanelWandRadius;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_SketchbookOffset;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 m_SketchbookRotation;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_WandPanelsInitialSketchLoadOriginAngle;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_WandPanelsDefaultOriginAngle;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_AltModeSwipeThreshold;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_AltModeSwipeTeaseAmount;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_AdvancedModeRevealSpinSpeed;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_AdvancedModeRevealParticlePrefab;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_WandSnapDistance;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_WandRadiusManipulationAdjust;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_WandPanelSnapStepDistance;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_WandPanelSnapStickyPercent;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_WandPaneHeightOffset;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_WandPaneHalfWidth;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_WandPaneMaxY;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_WandPaneMinY;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_WandPaneVisualOffsetRadius;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_WandPaneAttachMaxFacingAngle;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_WandPaneHapticDelay;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject m_WandPaneVisualsPrefab;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color m_WandPaneVisualsColorOK;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color m_WandPaneVisualsColorBad;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_WandPaneVisualsShowSpeed;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_PanelMipmapBias;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Color m_PanelHighlightActiveColor;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color m_PanelHighlightInactiveColor;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color m_PanelBorderMeshBaseColor;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Color m_PanelBorderMeshOutlineColor;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 m_DefaultMonoPanelPosition;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private Vector3 m_DefaultMonoPanelRotation;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public PanelSweetSpotScript m_SweetSpot;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject m_WandPaneVisuals;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Renderer m_WandPaneVisualsMeshRenderer;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float m_WandPaneVisualsShowValue;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private PaneVisualsState m_WandPaneVisualsState;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WandPane[] m_WandPanes;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int? m_WandPanePanelSnapPreviousStep;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool m_WandPanePanelWasAttached;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool m_PanelsCustomized;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float m_AltModeSwipeAmount;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool m_AltModeSwipeEatStickInput;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float m_AdvancedModeRevealSpinValue;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float m_AdvancedModeRevealSpinTarget;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_AdvancedModeRevealSpinFinalAngle;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_AdvancedModeRevealActive;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GrabWidget m_ImmovableWidget;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject m_RevealParticleParent;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private List<PanelData> m_AllPanels;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private List<BasePanel> m_SketchbookPanels;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private List<BasePanel> m_SettingsPanels;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private List<BasePanel> m_MultiplayerPanels;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private List<BasePanel> m_RuntimeTestsPanels;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private List<BasePanel> m_MemoryWarningPanels;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<BasePanel> m_CameraPanels;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<BasePanel> m_BrushLabPanels;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private BasePanel m_AdminPanel;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private AdvancedPanelLayouts m_CachedPanelLayouts;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float m_WandPanelsOriginAngle;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float m_WandPanelsOriginAngleOffset;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float m_RotateSnapAnimTime;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float m_RotateSnapAnimDir;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private RotateSnapState m_RotateSnapState;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_WandPanelsSketchbookOriginAngle;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float m_WandPanelsRotationLastFeedbackAngle;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float[] m_WandPanelsRotationDiffHistory;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int m_WandPanelsRotationDiffIndex;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private int m_WandPanelsRotationDiffCount;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float m_WandPanelsRotationVelocity;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float m_MasterScale;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float m_StandardScale;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private float m_SketchbookScale;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float m_SettingsScale;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float m_MultiplayerScale;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float m_RuntimeTestsScale;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float m_MemoryWarningScale;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float m_CameraScale;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float m_BrushLabScale;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private PanelsState m_PanelsState;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private PanelMode _PanelsMode;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private GameObject m_UxExploration;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private int m_LastOpenedPanelIndex;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private BasePanel m_LastPanelInteractedWith;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private bool m_IntroSketchbookMode;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x261")]
		private bool m_FirstSketchLoad;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x262")]
		private bool m_AdvancedPanels;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Action<PanelMode> m_OnPanelModeChanged;

		[Token(Token = "0x17000327")]
		public PanelMode m_PanelsMode
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x1135BAC", Offset = "0x1135BAC", VA = "0x1135BAC")]
			private get
			{
				return default(PanelMode);
			}
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x1135BB4", Offset = "0x1135BB4", VA = "0x1135BB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public Color PanelHighlightActiveColor
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x1135C28", Offset = "0x1135C28", VA = "0x1135C28")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000329")]
		public Color PanelHighlightInactiveColor
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x1135C34", Offset = "0x1135C34", VA = "0x1135C34")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700032A")]
		public Color PanelBorderMeshBaseColor
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x1135C40", Offset = "0x1135C40", VA = "0x1135C40")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700032B")]
		public Color PanelBorderMeshOutlineColor
		{
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x1135C54", Offset = "0x1135C54", VA = "0x1135C54")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700032C")]
		public bool IntroSketchbookMode
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0x1135C68", Offset = "0x1135C68", VA = "0x1135C68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032D")]
		public BasePanel LastPanelInteractedWith
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x11361BC", Offset = "0x11361BC", VA = "0x11361BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x11361C4", Offset = "0x11361C4", VA = "0x11361C4")]
			set
			{
			}
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1135C70", Offset = "0x1135C70", VA = "0x1135C70")]
		public float GetSnapStepDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x1135C78", Offset = "0x1135C78", VA = "0x1135C78")]
		public bool PanelsAreStable()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1135CB4", Offset = "0x1135CB4", VA = "0x1135CB4")]
		public bool StandardActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1135CC4", Offset = "0x1135CC4", VA = "0x1135CC4")]
		public bool SketchbookActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1135CD4", Offset = "0x1135CD4", VA = "0x1135CD4")]
		public bool SettingsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1135CE4", Offset = "0x1135CE4", VA = "0x1135CE4")]
		public bool MultiplayerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x1135CF4", Offset = "0x1135CF4", VA = "0x1135CF4")]
		public bool RuntimeTestsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1135D14", Offset = "0x1135D14", VA = "0x1135D14")]
		public bool CameraActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1135D04", Offset = "0x1135D04", VA = "0x1135D04")]
		public bool MemoryWarningActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1135D24", Offset = "0x1135D24", VA = "0x1135D24")]
		public bool BrushLabActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1135D34", Offset = "0x1135D34", VA = "0x1135D34")]
		public bool PanelsHaveBeenCustomized()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1135D3C", Offset = "0x1135D3C", VA = "0x1135D3C")]
		public bool AdvancedModeActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1135D44", Offset = "0x1135D44", VA = "0x1135D44")]
		public bool SketchbookActiveIncludingTransitions()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1135D60", Offset = "0x1135D60", VA = "0x1135D60")]
		public BasePanel GetPanelByType(BasePanel.PanelType type)
		{
			return null;
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1135E50", Offset = "0x1135E50", VA = "0x1135E50")]
		public BasePanel GetActivePanelByType(BasePanel.PanelType type)
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1136030", Offset = "0x1136030", VA = "0x1136030")]
		public BasePanel GetSketchBookPanel()
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x11360A0", Offset = "0x11360A0", VA = "0x11360A0")]
		public BasePanel GetPanel(int index)
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x113611C", Offset = "0x113611C", VA = "0x113611C")]
		public BasePanel LastOpenedPanel()
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x113619C", Offset = "0x113619C", VA = "0x113619C")]
		public bool GazePanelsAreVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x11361AC", Offset = "0x11361AC", VA = "0x11361AC")]
		public List<PanelData> GetAllPanels()
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x11361B4", Offset = "0x11361B4", VA = "0x11361B4")]
		public BasePanel GetAdminPanel()
		{
			return null;
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x11361CC", Offset = "0x11361CC", VA = "0x11361CC")]
		public bool IsAdminPanel(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x11361E4", Offset = "0x11361E4", VA = "0x11361E4")]
		public bool IsPanelUnique(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x113622C", Offset = "0x113622C", VA = "0x113622C")]
		public bool IsPanelCore(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x113626C", Offset = "0x113626C", VA = "0x113626C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x11362BC", Offset = "0x11362BC", VA = "0x11362BC")]
		public void Init()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1136A40", Offset = "0x1136A40", VA = "0x1136A40")]
		private void CreatePanel(PanelMapKey key, bool advancedPanel)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x11372B4", Offset = "0x11372B4", VA = "0x11372B4")]
		public void ResetPanel(int index)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x113738C", Offset = "0x113738C", VA = "0x113738C")]
		public void SetInIntroSketchbookMode(bool inIntro)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x11374C0", Offset = "0x11374C0", VA = "0x11374C0")]
		public void ResetWandPanelRotation()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x11374CC", Offset = "0x11374CC", VA = "0x11374CC")]
		public void RefreshConfiguredFlag()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1137708", Offset = "0x1137708", VA = "0x1137708")]
		public void InitPanels(bool bWandPanels)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1137E50", Offset = "0x1137E50", VA = "0x1137E50")]
		public void HidePanelsForStartup()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x11382E4", Offset = "0x11382E4", VA = "0x11382E4")]
		public void ReviveFloatingPanelsForStartup()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x11383E4", Offset = "0x11383E4", VA = "0x11383E4")]
		public void ToggleAdvancedPanels()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x11381C8", Offset = "0x11381C8", VA = "0x11381C8")]
		private IEnumerable<PanelData> GetFixedPanels()
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x11379BC", Offset = "0x11379BC", VA = "0x11379BC")]
		public void SetSweetSpotPosition(Vector3 vSweetSpot)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x1138E54", Offset = "0x1138E54", VA = "0x1138E54")]
		public Vector3 GetSketchSurfaceResetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1138EEC", Offset = "0x1138EEC", VA = "0x1138EEC")]
		public void UpdateWandOrientationControls()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x113932C", Offset = "0x113932C", VA = "0x113932C")]
		private void UpdateSnapRotate(bool bWandRot, float wandScrollXDelta)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x11391C4", Offset = "0x11391C4", VA = "0x11391C4")]
		private void UpdateSwipeRotate(bool bWandRot, float wandScrollXDelta)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1139664", Offset = "0x1139664", VA = "0x1139664")]
		private void UpdateWandPanelsOriginAngle(float fDiff, float fOffset = 0f)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1139784", Offset = "0x1139784", VA = "0x1139784")]
		public void UpdatePanels()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1139FE8", Offset = "0x1139FE8", VA = "0x1139FE8")]
		private float GetWandCircumference()
		{
			return default(float);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x113A2D0", Offset = "0x113A2D0", VA = "0x113A2D0")]
		private void PanelMovedHaptics()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x113A34C", Offset = "0x113A34C", VA = "0x113A34C")]
		public void InitPanesForPanelAttach(bool bPanelStartedFixed)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x113A35C", Offset = "0x113A35C", VA = "0x113A35C")]
		public void ResetWandPanelsConfiguration()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x113A5A0", Offset = "0x113A5A0", VA = "0x113A5A0")]
		public void SetFixedPanelsToStableOffsets()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x113A87C", Offset = "0x113A87C", VA = "0x113A87C")]
		public void AttachHeldPanelToWand(BasePanel panel)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x113B348", Offset = "0x113B348", VA = "0x113B348")]
		private bool MovePanePanelsUpToFit(WandPane pane, float panelHeight, float attachOffset, int insertIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x113B4DC", Offset = "0x113B4DC", VA = "0x113B4DC")]
		private bool MovePanePanelsDownToFit(WandPane pane, float panelHeight, float attachOffset, int insertIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x113B8D8", Offset = "0x113B8D8", VA = "0x113B8D8")]
		public void ClosePanePanelGaps()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x113723C", Offset = "0x113723C", VA = "0x113723C")]
		private void TintWandPaneVisuals(bool ok)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x113B8C4", Offset = "0x113B8C4", VA = "0x113B8C4")]
		public void ResetPaneVisuals()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1139870", Offset = "0x1139870", VA = "0x1139870")]
		public void LockUxExplorationToController()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1139974", Offset = "0x1139974", VA = "0x1139974")]
		public void LockPanelsToController()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x113B66C", Offset = "0x113B66C", VA = "0x113B66C")]
		public void SetPanelXfFromWand(BasePanel panel, Transform wandTransform, float originAngle, float originOffset, float radius, bool ignoreReveal = false)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x113C198", Offset = "0x113C198", VA = "0x113C198")]
		private void SetAltPanelXfFromWand(BasePanel panel, Transform wandTransform)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x113C38C", Offset = "0x113C38C", VA = "0x113C38C")]
		public void UpdateWandTransitionXf(BasePanel panel, TrTransform target, float percent)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x113C528", Offset = "0x113C528", VA = "0x113C528")]
		public Vector3 GetFixedPanelPosClosestToPoint(Vector3 vPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x113C6C0", Offset = "0x113C6C0", VA = "0x113C6C0")]
		public void SetVisible(bool bVisible)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x113CC0C", Offset = "0x113CC0C", VA = "0x113CC0C")]
		public void ShowIntroSketchbookPanels()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x11395FC", Offset = "0x11395FC", VA = "0x11395FC")]
		public void ToggleSketchbookPanels(bool isLoadingSketch = false)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x11395E8", Offset = "0x11395E8", VA = "0x11395E8")]
		public void ToggleSettingsPanels()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1139628", Offset = "0x1139628", VA = "0x1139628")]
		public void ToggleMultiplayerPanels()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x113963C", Offset = "0x113963C", VA = "0x113963C")]
		public void ToggleRuntimeTestsPanel()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1139650", Offset = "0x1139650", VA = "0x1139650")]
		public void ToggleCameraPanels()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x113D244", Offset = "0x113D244", VA = "0x113D244")]
		public void ToggleBrushLabPanels()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x113D258", Offset = "0x113D258", VA = "0x113D258")]
		public void ToggleMemoryWarningMode()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x113CCC8", Offset = "0x113CCC8", VA = "0x113CCC8")]
		private void ToggleMode(List<BasePanel> panels, PanelMode mode, PanelMode toMode, PanelMode fromMode)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x113D32C", Offset = "0x113D32C", VA = "0x113D32C")]
		private void ForceModeScale(PanelMode mode)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x113D7F8", Offset = "0x113D7F8", VA = "0x113D7F8")]
		private void ComputeWandPanelSketchbookOriginAngleFromHead()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x113D448", Offset = "0x113D448", VA = "0x113D448")]
		private void RefreshPanelsForAnimations()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x113D994", Offset = "0x113D994", VA = "0x113D994")]
		private void SetPanelListScaleAndActive(List<BasePanel> panels, float scale)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x113DA94", Offset = "0x113DA94", VA = "0x113DA94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x113E238", Offset = "0x113E238", VA = "0x113E238")]
		private void AnimateScaleToMode(ref float from, ref float to, PanelMode targetMode)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x113E2DC", Offset = "0x113E2DC", VA = "0x113E2DC")]
		public void PrimeCollisionSimForKeyboardMouse()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x113E5A8", Offset = "0x113E5A8", VA = "0x113E5A8")]
		public void DoCollisionSimulationForKeyboardMouse(BasePanel movingPanel)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x113EA08", Offset = "0x113EA08", VA = "0x113EA08")]
		public void PrimeCollisionSimForWidgets(GrabWidget immovableWidget)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x113BCC0", Offset = "0x113BCC0", VA = "0x113BCC0")]
		private void OrderPanes()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x113EB68", Offset = "0x113EB68", VA = "0x113EB68")]
		private static int ComparePanelsByAttachHeight(BasePanel a, BasePanel b)
		{
			return default(int);
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x113EB90", Offset = "0x113EB90", VA = "0x113EB90")]
		public void DoCollisionSimulationForWidgetPanels()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x113EEEC", Offset = "0x113EEEC", VA = "0x113EEEC")]
		public bool IsAffectedByCollision(PanelData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x113EFC4", Offset = "0x113EFC4", VA = "0x113EFC4")]
		public void OpenPanel(BasePanel.PanelType type, TrTransform trSpawnXf)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1134F68", Offset = "0x1134F68", VA = "0x1134F68")]
		public bool IsPanelOpen(BasePanel.PanelType type)
		{
			return default(bool);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1135368", Offset = "0x1135368", VA = "0x1135368")]
		public void DismissNonCorePanel(BasePanel.PanelType type)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1138C44", Offset = "0x1138C44", VA = "0x1138C44")]
		private void _DismissPanelInternal(int index, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x113F37C", Offset = "0x113F37C", VA = "0x113F37C")]
		public void HideAllPanels(bool force = false)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x113F568", Offset = "0x113F568", VA = "0x113F568")]
		public void RestoreHiddenPanels()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1138A5C", Offset = "0x1138A5C", VA = "0x1138A5C")]
		private void _RestorePanelInternal(int index)
		{
		}

		[Token(Token = "0x6001713")]
		public void ExecuteOnPanel<T>(Action<T> action) where T : BasePanel
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x113F6CC", Offset = "0x113F6CC", VA = "0x113F6CC")]
		public void SetCurrentColorOnAllColorPickers(Color col)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x113F724", Offset = "0x113F724", VA = "0x113F724")]
		public PanelManager()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class PassthroughAlphaSlider : BaseSlider
	{
		[Token(Token = "0x14000064")]
		public event Action<float> ValueChanged
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0x114247C", Offset = "0x114247C", VA = "0x114247C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CCAC", Offset = "0xB3CCAC")]
			add
			{
			}
			[Token(Token = "0x6001723")]
			[Address(RVA = "0x114251C", Offset = "0x114251C", VA = "0x114251C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CCBC", Offset = "0xB3CCBC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x11425BC", Offset = "0x11425BC", VA = "0x11425BC", Slot = "34")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x114271C", Offset = "0x114271C", VA = "0x114271C", Slot = "35")]
		protected override void OnPositionSliderNobUpdated()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x114277C", Offset = "0x114277C", VA = "0x114277C")]
		public PassthroughAlphaSlider()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class PassthroughPanel : BasePanel
	{
		[Token(Token = "0x400175C")]
		private const string PREFS_KEY_PASSTHROUGH_WELCOME_SHOWN = "PassthroughPanelWelcomeShown";

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private ColorPicker m_ColorPicker;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private ColorController m_ColorController;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private PassthroughAlphaSlider m_AlphaSlider;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private GameObject m_InitialMessage;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private GameObject m_MainPanel;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private GameObject m_MainPanelsContainer;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private GameObject m_EdgeDetectionOptions;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Color m_EdgeColor;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1142EA0", Offset = "0x1142EA0", VA = "0x1142EA0", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1142F24", Offset = "0x1142F24", VA = "0x1142F24", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1143104", Offset = "0x1143104", VA = "0x1143104")]
		private void OnEdgeDetectionChanged(bool edgeDetectionOn)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x114316C", Offset = "0x114316C", VA = "0x114316C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1143280", Offset = "0x1143280", VA = "0x1143280")]
		private void UpdatePassthroughState()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x11432C8", Offset = "0x11432C8", VA = "0x11432C8")]
		private void OnAlphaValueChanged(float alpha)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1143320", Offset = "0x1143320", VA = "0x1143320")]
		private void OnColorPicked(Color rgb)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x114336C", Offset = "0x114336C", VA = "0x114336C")]
		public void ClickUnderstoodOnInitialMessage()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x11433F0", Offset = "0x11433F0", VA = "0x11433F0")]
		public PassthroughPanel()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class PinCushion : MonoBehaviour
	{
		[Token(Token = "0x200039A")]
		public enum VisualState
		{
			[Token(Token = "0x4001774")]
			Hidden,
			[Token(Token = "0x4001775")]
			HiddenToShowing,
			[Token(Token = "0x4001776")]
			Showing,
			[Token(Token = "0x4001777")]
			ShowingToHidden
		}

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ShowDelay;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_RootObject;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_SelectionObject;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PinCushionItem m_DefaultItem;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SphereCollider m_DefaultCollider;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_TimerAudioThreshold;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PinCushionItem[] m_Items;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_BaseSelectionObjectOffset;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_SelectionOffset;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_ControllerBaseRotation;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_HighlightedItem;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private VisualState m_CurrentVisualState;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_VisualScaleTimer;

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1025340", Offset = "0x1025340", VA = "0x1025340")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1025350", Offset = "0x1025350", VA = "0x1025350")]
		private void Start()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x10254D8", Offset = "0x10254D8", VA = "0x10254D8")]
		public void ShowPinCushion(bool show)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x102540C", Offset = "0x102540C", VA = "0x102540C")]
		private void RefreshVisualsForAnimations()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x10257CC", Offset = "0x10257CC", VA = "0x10257CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1025958", Offset = "0x1025958", VA = "0x1025958")]
		private void UpdateSelection()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1025D50", Offset = "0x1025D50", VA = "0x1025D50")]
		private void UpdateHighlightedItem()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1025DE8", Offset = "0x1025DE8", VA = "0x1025DE8")]
		private void TriggerFeedbackOnItemChange(int prevItem)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1026168", Offset = "0x1026168", VA = "0x1026168")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1026418", Offset = "0x1026418", VA = "0x1026418")]
		public PinCushion()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class PinCushionItem : MonoBehaviour
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string m_ToolName;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_InMultiplayerRoomToolName;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public TextMeshPro m_PanelText;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture m_Icon;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseTool.ToolType m_Tool;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_HighlightScale;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_MinAngle;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_MaxAngle;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer m_ButtonRenderer;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer m_Border;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x1700032F")]
		public BaseTool.ToolType Tool
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x102642C", Offset = "0x102642C", VA = "0x102642C")]
			get
			{
				return default(BaseTool.ToolType);
			}
		}

		[Token(Token = "0x17000330")]
		public float MinAngle
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x1026434", Offset = "0x1026434", VA = "0x1026434")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000331")]
		public float MaxAngle
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x102643C", Offset = "0x102643C", VA = "0x102643C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1026444", Offset = "0x1026444", VA = "0x1026444")]
		private void Awake()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1026480", Offset = "0x1026480", VA = "0x1026480")]
		private void Start()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1025EBC", Offset = "0x1025EBC", VA = "0x1025EBC")]
		public void Highlight(bool highlight)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1026508", Offset = "0x1026508", VA = "0x1026508")]
		public PinCushionItem()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class PointerAngleSlider : BaseSlider
	{
		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1029538", Offset = "0x1029538", VA = "0x1029538", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x10295B8", Offset = "0x10295B8", VA = "0x10295B8", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1029684", Offset = "0x1029684", VA = "0x1029684", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x10296D8", Offset = "0x10296D8", VA = "0x10296D8")]
		public PointerAngleSlider()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class PolyModelButton : ModelButton
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297DC", Offset = "0xB297DC")]
		private sealed class <SpawnModelCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyModelButton <>4__this;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string reason;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <assetId>5__2;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Model <model>5__3;

			[Token(Token = "0x17000335")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001757")]
				[Address(RVA = "0x10ECDA8", Offset = "0x10ECDA8", VA = "0x10ECDA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001759")]
				[Address(RVA = "0x10ECDF0", Offset = "0x10ECDF0", VA = "0x10ECDF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001754")]
			[Address(RVA = "0x10ECAF8", Offset = "0x10ECAF8", VA = "0x10ECAF8")]
			[DebuggerHidden]
			public <SpawnModelCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x10ECB24", Offset = "0x10ECB24", VA = "0x10ECB24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x10ECB28", Offset = "0x10ECB28", VA = "0x10ECB28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0x10ECDB0", Offset = "0x10ECDB0", VA = "0x10ECDB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject m_LoadingOverlay;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private PolyAssetCatalog.AssetDetails m_PacAsset;

		[Token(Token = "0x17000332")]
		public PolyAssetCatalog.AssetDetails Asset
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x1036814", Offset = "0x1036814", VA = "0x1036814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		protected override Texture2D UnloadedTexture
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x103681C", Offset = "0x103681C", VA = "0x103681C", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		protected override string ModelName
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x10368C4", Offset = "0x10368C4", VA = "0x10368C4", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x10368E0", Offset = "0x10368E0", VA = "0x10368E0", Slot = "5")]
		public override bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1036934", Offset = "0x1036934", VA = "0x1036934")]
		public void SetPreset(PolyAssetCatalog.AssetDetails asset, int index)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1036A68", Offset = "0x1036A68", VA = "0x1036A68", Slot = "45")]
		protected override void RequestModelPreloadInternal(string reason)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1036ABC", Offset = "0x1036ABC", VA = "0x1036ABC", Slot = "46")]
		protected override void CancelRequestModelPreload()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1036B44", Offset = "0x1036B44", VA = "0x1036B44", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1036BC8", Offset = "0x1036BC8", VA = "0x1036BC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CCCC", Offset = "0xB3CCCC")]
		protected IEnumerator SpawnModelCoroutine(string reason)
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1036C40", Offset = "0x1036C40", VA = "0x1036C40", Slot = "44")]
		protected override void RefreshModelButton()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1036D00", Offset = "0x1036D00", VA = "0x1036D00", Slot = "47")]
		public override string UnloadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1036DCC", Offset = "0x1036DCC", VA = "0x1036DCC", Slot = "48")]
		public override string LoadedExtraDescription()
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1036DDC", Offset = "0x1036DDC", VA = "0x1036DDC", Slot = "39")]
		public override void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1036E3C", Offset = "0x1036E3C", VA = "0x1036E3C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1036E7C", Offset = "0x1036E7C", VA = "0x1036E7C")]
		public PolyModelButton()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public enum PolySetType
	{
		[Token(Token = "0x400178C")]
		User,
		[Token(Token = "0x400178D")]
		Liked,
		[Token(Token = "0x400178E")]
		Featured
	}
	[Token(Token = "0x20003A0")]
	public class PolyPanel : ModalPanel
	{
		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private TextMesh m_PanelTextSubtitle;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private TextMesh m_PanelTextUserSubtitle;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private string m_PanelTextStandard;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private string m_PanelTextFeatured;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private string m_PanelTextLiked;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private Renderer m_PolyGalleryRenderer;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private GameObject m_NoObjectsMessage;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private GameObject m_InternetError;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[SerializeField]
		private GameObject m_NoAuthoredModelsMessage;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private GameObject m_NoLikesMessage;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private GameObject m_NotLoggedInMessage;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[SerializeField]
		private GameObject m_OutOfDateMessage;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[SerializeField]
		private GameObject m_NoPolyConnectionMessage;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private PolySetType m_CurrentSet;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private bool m_LoggedIn;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int m_LastPageIndexForLoad;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private PolySetType m_LastSetTypeForLoad;

		[Token(Token = "0x17000337")]
		public bool ShowingFeatured
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x1036E84", Offset = "0x1036E84", VA = "0x1036E84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public bool ShowingLikes
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x1036E94", Offset = "0x1036E94", VA = "0x1036E94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000339")]
		public bool ShowingUser
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0x1036DBC", Offset = "0x1036DBC", VA = "0x1036DBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1036EA4", Offset = "0x1036EA4", VA = "0x1036EA4", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1036F00", Offset = "0x1036F00", VA = "0x1036F00", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1036FD0", Offset = "0x1036FD0", VA = "0x1036FD0", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x10370B4", Offset = "0x10370B4", VA = "0x10370B4", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1036EAC", Offset = "0x1036EAC", VA = "0x1036EAC")]
		private void SetVisiblePolySet(PolySetType type)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x10372D0", Offset = "0x10372D0", VA = "0x10372D0")]
		private void OnPolyAssetCatalogChanged()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x10372E0", Offset = "0x10372E0", VA = "0x10372E0", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1037828", Offset = "0x1037828", VA = "0x1037828")]
		private void RefreshPanelText()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x103793C", Offset = "0x103793C", VA = "0x103793C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x10379B0", Offset = "0x10379B0", VA = "0x10379B0", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1037D94", Offset = "0x1037D94", VA = "0x1037D94")]
		public void ButtonPressed(PolySetType rType)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1037D98", Offset = "0x1037D98", VA = "0x1037D98")]
		public PolyPanel()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class PolySetButton : ModeButton
	{
		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PolySetType m_ButtonType;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x11ED904", Offset = "0x11ED904", VA = "0x11ED904", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x11ED9BC", Offset = "0x11ED9BC", VA = "0x11ED9BC")]
		public PolySetButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A2")]
	public struct PopUpButton
	{
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D m_ButtonTexture;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_ButtonPrefab;

		[NonSerialized]
		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BaseButton m_ButtonScript;
	}
	[Token(Token = "0x20003A3")]
	public class PopUpWindow : MonoBehaviour
	{
		[Token(Token = "0x20003A4")]
		protected enum State
		{
			[Token(Token = "0x40017CA")]
			Uninitialized,
			[Token(Token = "0x40017CB")]
			Opening,
			[Token(Token = "0x40017CC")]
			Standard,
			[Token(Token = "0x40017CD")]
			Closing,
			[Token(Token = "0x40017CE")]
			Closed
		}

		[Token(Token = "0x20003A5")]
		protected enum PageFlipState
		{
			[Token(Token = "0x40017D0")]
			Standard,
			[Token(Token = "0x40017D1")]
			TransitionOut,
			[Token(Token = "0x40017D2")]
			TransitionIn
		}

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject m_Background;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GameObject m_TopBorder;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject m_BottomBorder;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected TextMesh m_WindowText;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected TextMesh m_WindowSubText;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float m_CharacterWidth;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected float m_SubtitleCharacterWidth;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float m_ButtonWidth;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected Vector3 m_BaseButtonOffset;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected Vector3 m_ReticleBounds;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		protected float m_PopUpForwardOffset;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected PopUpButton[] m_AutoPlaceButtons;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected float m_TransitionDuration;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		protected float m_OpenDelay;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected bool m_Persistent;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		protected bool m_AudioOnOpen;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		protected bool m_BlockUndoRedo;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		protected bool m_IsLongPressPopUp;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected NavButton[] m_OrderedPageButtons;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected GameObject m_PrevButton;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected GameObject m_NextButton;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected BoxCollider m_WindowCollider;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected BasePanel m_ParentPanel;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected State m_CurrentState;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float m_TransitionValue;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool m_SpoofTransitionValue;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected int m_PageIndex;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int m_RequestedPageIndex;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected int m_NumPages;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected UIComponentManager m_UIComponentManager;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected PageFlipState m_CurrentPageFlipState;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float m_PageFlipTransitionAmount;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float m_PageFlipSpeed;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float m_BaseIconScale;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action m_OnClose;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x11F02C4", Offset = "0x11F02C4", VA = "0x11F02C4")]
		public Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x11F02CC", Offset = "0x11F02CC", VA = "0x11F02CC")]
		public BasePanel GetParentPanel()
		{
			return null;
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x11F02D4", Offset = "0x11F02D4", VA = "0x11F02D4")]
		public void SpoofTransitionValue()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x11F02E0", Offset = "0x11F02E0", VA = "0x11F02E0")]
		public float GetPopUpForwardOffset()
		{
			return default(float);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x11F02E8", Offset = "0x11F02E8", VA = "0x11F02E8")]
		public Vector3 GetReticleBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x11F02F4", Offset = "0x11F02F4", VA = "0x11F02F4")]
		public bool IsLongPressPopUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x11F02FC", Offset = "0x11F02FC", VA = "0x11F02FC")]
		public bool BlockUndoRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x11F0304", Offset = "0x11F0304", VA = "0x11F0304")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x11F030C", Offset = "0x11F030C", VA = "0x11F030C")]
		private void CreateAutoPlaceButtons()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x11F0658", Offset = "0x11F0658", VA = "0x11F0658", Slot = "4")]
		public virtual void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x11F08B4", Offset = "0x11F08B4", VA = "0x11F08B4", Slot = "5")]
		public virtual void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x11F08B8", Offset = "0x11F08B8", VA = "0x11F08B8", Slot = "6")]
		public virtual bool RequestClose(bool bForceClose = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x11F08DC", Offset = "0x11F08DC", VA = "0x11F08DC")]
		public bool InputObjectHasFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x11F0954", Offset = "0x11F0954", VA = "0x11F0954")]
		public bool IsOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x11F0964", Offset = "0x11F0964", VA = "0x11F0964")]
		public bool IsClosingOrClosed()
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x11F0978", Offset = "0x11F0978", VA = "0x11F0978")]
		public float GetTransitionRatioForVisuals()
		{
			return default(float);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x11F09AC", Offset = "0x11F09AC", VA = "0x11F09AC")]
		private float GetTransitionRatio()
		{
			return default(float);
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x11F09D8", Offset = "0x11F09D8", VA = "0x11F09D8")]
		public GameObject DuplicateCollider()
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x11F0BA4", Offset = "0x11F0BA4", VA = "0x11F0BA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x11F0BD8", Offset = "0x11F0BD8", VA = "0x11F0BD8", Slot = "7")]
		protected virtual void BaseUpdate()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x11F0C74", Offset = "0x11F0C74", VA = "0x11F0C74", Slot = "8")]
		protected virtual void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x11F0C90", Offset = "0x11F0C90", VA = "0x11F0C90", Slot = "9")]
		protected virtual void UpdateTransitionOut()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x11F0C9C", Offset = "0x11F0C9C", VA = "0x11F0C9C", Slot = "10")]
		protected virtual void UpdateTransitionIn()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x11F0CA4", Offset = "0x11F0CA4", VA = "0x11F0CA4", Slot = "11")]
		protected virtual void UpdateOpening()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x11F0D6C", Offset = "0x11F0D6C", VA = "0x11F0D6C", Slot = "12")]
		protected virtual void UpdateClosing()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x11F0E54", Offset = "0x11F0E54", VA = "0x11F0E54", Slot = "13")]
		protected virtual void DestroyPopUpWindow()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x11F0EE4", Offset = "0x11F0EE4", VA = "0x11F0EE4", Slot = "14")]
		public virtual void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x11F0F38", Offset = "0x11F0F38", VA = "0x11F0F38", Slot = "15")]
		public virtual void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x11F10A4", Offset = "0x11F10A4", VA = "0x11F10A4")]
		public void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x11F10DC", Offset = "0x11F10DC", VA = "0x11F10DC")]
		public void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x11F1118", Offset = "0x11F1118", VA = "0x11F1118")]
		public PopUpWindow()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class ProfilePopUpButton : OptionButton
	{
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool m_CommandIgnored;

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x11F3E40", Offset = "0x11F3E40", VA = "0x11F3E40", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x11F4118", Offset = "0x11F4118", VA = "0x11F4118")]
		public ProfilePopUpButton()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class ProfilePopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x20003A8")]
		public enum Mode
		{
			[Token(Token = "0x40017F2")]
			Accounts,
			[Token(Token = "0x40017F3")]
			TakeOffHeadset,
			[Token(Token = "0x40017F4")]
			GoogleHelp,
			[Token(Token = "0x40017F5")]
			DriveHelp,
			[Token(Token = "0x40017F6")]
			SketchfabHelp,
			[Token(Token = "0x40017F7")]
			ConfirmLogin
		}

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_GoogleSignedInElements;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_GoogleSignedOutElements;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_GoogleConfirmSignOutElements;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_SketchfabSignedInElements;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_SketchfabSignedOutElements;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_SketchfabConfirmSignOutElements;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Renderer m_GooglePhoto;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Renderer m_SketchfabPhoto;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TextMeshPro m_GoogleNameText;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private TextMeshPro m_SketchfabNameText;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Texture2D m_GenericPhoto;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_Accounts;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject m_TakeOffHeadset;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject m_GoogleInfoElements;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject m_DriveInfoElements;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject m_SketchfabInfoElements;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private GameObject m_DriveSyncEnabledElements;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject m_DriveSyncDisabledElements;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GameObject m_DriveFullElements;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject m_DriveSyncIconEnabled;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_DriveSyncIconDisabled;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject m_DriveSyncIconDriveFull;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private GameObject m_BackupCompleteElements;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private GameObject m_BackingUpElements;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private TextMesh m_BackingUpProgress;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB31668", Offset = "0xB31668")]
		private GameObject m_ConfirmLoginElements;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private SaveAndOptionButton m_SaveAndProceedButton;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Mode m_CurrentMode;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private bool m_DriveSyncing;

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x11F4120", Offset = "0x11F4120", VA = "0x11F4120")]
		private void Start()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x11F41C0", Offset = "0x11F41C0", VA = "0x11F41C0", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x11F4514", Offset = "0x11F4514", VA = "0x11F4514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x11F4618", Offset = "0x11F4618", VA = "0x11F4618", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x11F42A4", Offset = "0x11F42A4", VA = "0x11F42A4")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x11F4674", Offset = "0x11F4674", VA = "0x11F4674")]
		private void RefreshBackupProgressText()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x11F475C", Offset = "0x11F475C", VA = "0x11F475C")]
		private void UpdateMode(Mode newMode)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x11F488C", Offset = "0x11F488C", VA = "0x11F488C")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x11F3EB4", Offset = "0x11F3EB4", VA = "0x11F3EB4")]
		public void OnProfilePopUpButtonPressed(ProfilePopUpButton button)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x11F48C4", Offset = "0x11F48C4", VA = "0x11F48C4")]
		public ProfilePopUpWindow()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class PropertyToggleButton : BaseButton
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private SerializedPropertyReferenceBool m_Property;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool m_InverseHighlight;

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x11F8394", Offset = "0x11F8394", VA = "0x11F8394", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x11F8464", Offset = "0x11F8464", VA = "0x11F8464", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x11F8520", Offset = "0x11F8520", VA = "0x11F8520", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x11F83BC", Offset = "0x11F83BC", VA = "0x11F83BC")]
		protected void HighlightButton()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x11F8548", Offset = "0x11F8548", VA = "0x11F8548")]
		public PropertyToggleButton()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class QualitySlider : BaseSlider
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] m_Steps;

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x11FF480", Offset = "0x11FF480", VA = "0x11FF480", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x11FF610", Offset = "0x11FF610", VA = "0x11FF610")]
		private void PositionNobAtCurrentQuality()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x11FF770", Offset = "0x11FF770", VA = "0x11FF770", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x11FF71C", Offset = "0x11FF71C", VA = "0x11FF71C")]
		private string GetDescriptionExtraText()
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x11FF960", Offset = "0x11FF960", VA = "0x11FF960")]
		public QualitySlider()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class ReferenceButton : ModeButton
	{
		[Token(Token = "0x20003AC")]
		public enum Type
		{
			[Token(Token = "0x40017FD")]
			Images,
			[Token(Token = "0x40017FE")]
			Models,
			[Token(Token = "0x40017FF")]
			AddAssets,
			[Token(Token = "0x4001800")]
			Videos
		}

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Type m_ButtonType;

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xFAF058", Offset = "0xFAF058", VA = "0xFAF058", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xFAF35C", Offset = "0xFAF35C", VA = "0xFAF35C")]
		public ReferenceButton()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class ReferencePanel : ModalPanel
	{
		[Token(Token = "0x20003AE")]
		private enum Mode
		{
			[Token(Token = "0x400180A")]
			Images,
			[Token(Token = "0x400180B")]
			Models
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297EC", Offset = "0xB297EC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReferenceButton.Type rType;

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x10F2384", Offset = "0x10F2384", VA = "0x10F2384")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x10F238C", Offset = "0x10F238C", VA = "0x10F238C")]
			internal bool <ButtonPressed>b__0(ReferencePanelTab x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB316E4", Offset = "0xB316E4")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private GameObject m_NoData;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private Texture2D m_UnknownImageTexture;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private ReferencePanelTab[] m_Tabs;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private MeshRenderer[] m_ExtraBorders;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private GameObject m_RefreshingSpinner;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private ReferencePanelTab m_CurrentTab;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private int m_EnabledCount;

		[Token(Token = "0x1700033A")]
		public Texture2D UnknownImageTexture
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xFB1BA8", Offset = "0xFB1BA8", VA = "0xFB1BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		protected override int PageIndex
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xFB1BB0", Offset = "0xFB1BB0", VA = "0xFB1BB0", Slot = "29")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xFB1BCC", Offset = "0xFB1BCC", VA = "0xFB1BCC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		protected override List<BaseButton> Icons
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xFB1BE8", Offset = "0xFB1BE8", VA = "0xFB1BE8", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xFB1D38", Offset = "0xFB1D38", VA = "0xFB1D38", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xFB1E5C", Offset = "0xFB1E5C", VA = "0xFB1E5C", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xFB21B8", Offset = "0xFB21B8", VA = "0xFB21B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xFB2358", Offset = "0xFB2358", VA = "0xFB2358", Slot = "23")]
		public override void OnWidgetHide()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xFB2378", Offset = "0xFB2378", VA = "0xFB2378", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xFB2508", Offset = "0xFB2508", VA = "0xFB2508")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xFB2674", Offset = "0xFB2674", VA = "0xFB2674", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xFB2684", Offset = "0xFB2684", VA = "0xFB2684", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xFAF10C", Offset = "0xFAF10C", VA = "0xFAF10C")]
		public void ButtonPressed(ReferenceButton.Type rType)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xFB1FC4", Offset = "0xFB1FC4", VA = "0xFB1FC4")]
		public void SwitchTab(ReferencePanelTab newTab)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xFB27E0", Offset = "0xFB27E0", VA = "0xFB27E0", Slot = "27")]
		public override void GotoPage(int iIndex)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xFB2830", Offset = "0xFB2830", VA = "0xFB2830", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xFB286C", Offset = "0xFB286C", VA = "0xFB286C", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xFB2A28", Offset = "0xFB2A28", VA = "0xFB2A28")]
		private void OnCatalogChanged()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xFB2A38", Offset = "0xFB2A38", VA = "0xFB2A38", Slot = "19")]
		protected override void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xFB2B34", Offset = "0xFB2B34", VA = "0xFB2B34", Slot = "36")]
		protected override void UpdateButtonTransitionScale(float fScale)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xFB2B54", Offset = "0xFB2B54", VA = "0xFB2B54", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xFB2C0C", Offset = "0xFB2C0C", VA = "0xFB2C0C")]
		public ReferencePanel()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class RuntimeTestsNumControlPointsSlider : BaseSlider
	{
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xFB8F80", Offset = "0xFB8F80", VA = "0xFB8F80", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xFB8FC4", Offset = "0xFB8FC4", VA = "0xFB8FC4", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xFB900C", Offset = "0xFB900C", VA = "0xFB900C", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xFB903C", Offset = "0xFB903C", VA = "0xFB903C")]
		public RuntimeTestsNumControlPointsSlider()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class RuntimeTestsNumStrokesSlider : BaseSlider
	{
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xFB9044", Offset = "0xFB9044", VA = "0xFB9044", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xFB9088", Offset = "0xFB9088", VA = "0xFB9088", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xFB90D0", Offset = "0xFB90D0", VA = "0xFB90D0", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xFB9100", Offset = "0xFB9100", VA = "0xFB9100")]
		public RuntimeTestsNumStrokesSlider()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class SaveAndConfirmButton : ConfirmationButton
	{
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xFBB394", Offset = "0xFBB394", VA = "0xFBB394", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xFBB644", Offset = "0xFBB644", VA = "0xFBB644")]
		public SaveAndConfirmButton()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class SaveAndOptionButton : OptionButton
	{
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xFBB64C", Offset = "0xFBB64C", VA = "0xFBB64C", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xFBB6DC", Offset = "0xFBB6DC", VA = "0xFBB6DC")]
		public SaveAndOptionButton()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class SelectCameraPathButton : OptionButton
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		protected int m_PathNumber;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected GameObject m_AddPathMesh;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		protected TextMeshPro m_PathNumberText;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private CameraPathWidget m_PathWidget;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int m_NumActivePaths;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE6E004", Offset = "0xE6E004", VA = "0xE6E004", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE6E448", Offset = "0xE6E448", VA = "0xE6E448", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE6E5A8", Offset = "0xE6E5A8", VA = "0xE6E5A8", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE6E7A4", Offset = "0xE6E7A4", VA = "0xE6E7A4", Slot = "22")]
		public override void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE6E878", Offset = "0xE6E878", VA = "0xE6E878")]
		public SelectCameraPathButton()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class SelectionTray : UIComponent
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB297FC", Offset = "0xB297FC")]
		private sealed class <Animate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionTray <>4__this;

			[Token(Token = "0x400181E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <localScale>5__2;

			[Token(Token = "0x400181F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <x>5__3;

			[Token(Token = "0x1700033D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017DC")]
				[Address(RVA = "0x10F70EC", Offset = "0x10F70EC", VA = "0x10F70EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017DE")]
				[Address(RVA = "0x10F7134", Offset = "0x10F7134", VA = "0x10F7134", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x10F6EA8", Offset = "0x10F6EA8", VA = "0x10F6EA8")]
			[DebuggerHidden]
			public <Animate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x10F6ED4", Offset = "0x10F6ED4", VA = "0x10F6ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x10F6ED8", Offset = "0x10F6ED8", VA = "0x10F6ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x10F70F4", Offset = "0x10F70F4", VA = "0x10F70F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_Border;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_AnimateSpeed;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector2 m_AnimateRange;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private OptionButton m_GroupButton;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIComponentManager m_UIComponentManager;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_AnimationCoroutine;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_AnimateIn;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_AnimateWhenEnabled;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE7A680", Offset = "0xE7A680", VA = "0xE7A680", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xE7A7A4", Offset = "0xE7A7A4", VA = "0xE7A7A4", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xE7A84C", Offset = "0xE7A84C", VA = "0xE7A84C", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xE7A94C", Offset = "0xE7A94C", VA = "0xE7A94C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xE7A9F8", Offset = "0xE7A9F8", VA = "0xE7A9F8", Slot = "10")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xE7AA98", Offset = "0xE7AA98", VA = "0xE7AA98", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xE7AB68", Offset = "0xE7AB68", VA = "0xE7AB68", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xE7AB9C", Offset = "0xE7AB9C", VA = "0xE7AB9C", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xE7AD74", Offset = "0xE7AD74", VA = "0xE7AD74", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xE7ADA8", Offset = "0xE7ADA8", VA = "0xE7ADA8", Slot = "28")]
		public override bool RaycastAgainstCustomCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xE7AE6C", Offset = "0xE7AE6C", VA = "0xE7AE6C")]
		private void OnToolChanged()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xE7AF40", Offset = "0xE7AF40", VA = "0xE7AF40")]
		private void OnSelectionChanged()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xE7A98C", Offset = "0xE7A98C", VA = "0xE7A98C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CD7C", Offset = "0xB3CD7C")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xE7AF64", Offset = "0xE7AF64", VA = "0xE7AF64")]
		public SelectionTray()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class SketchSurfacePanel : BasePanel
	{
		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchSurfacePanel m_Instance;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool m_BacksideIsActive;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool m_FreePaintMode;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private BaseTool[] m_Tools;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int m_ActiveToolIndex;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float m_ToolSelectionAggregateValue;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private float m_ToolSelectionThreshold;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private List<BaseTool> m_ToolsToMonitor;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		protected bool m_ToolHideRequested;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
		private bool m_SurfaceIsDrawable;

		[NonSerialized]
		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x322")]
		public bool m_UpdatedToolThisFrame;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x323")]
		private bool m_AddedNewPoseListener;

		[Token(Token = "0x1700033F")]
		public BaseTool ActiveTool
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x106B008", Offset = "0x106B008", VA = "0x106B008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public BaseTool.ToolType ActiveToolType
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x106B048", Offset = "0x106B048", VA = "0x106B048")]
			get
			{
				return default(BaseTool.ToolType);
			}
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x106AFA4", Offset = "0x106AFA4", VA = "0x106AFA4")]
		public bool IsSurfaceDrawable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x106AFAC", Offset = "0x106AFAC", VA = "0x106AFAC")]
		public bool IsSketchSurfaceToolActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x106AFF4", Offset = "0x106AFF4", VA = "0x106AFF4")]
		public void SetInFreePaintMode(bool bFreePaint)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x106B000", Offset = "0x106B000", VA = "0x106B000")]
		public bool IsInFreePaintMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x106B090", Offset = "0x106B090", VA = "0x106B090")]
		private BaseTool.ToolType DefaultToolType()
		{
			return default(BaseTool.ToolType);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x106B0A4", Offset = "0x106B0A4", VA = "0x106B0A4", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x106B14C", Offset = "0x106B14C", VA = "0x106B14C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x106B238", Offset = "0x106B238", VA = "0x106B238")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x106B2DC", Offset = "0x106B2DC", VA = "0x106B2DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x106B65C", Offset = "0x106B65C", VA = "0x106B65C")]
		public void BeginMonitoringTool(BaseTool tool)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x106B73C", Offset = "0x106B73C", VA = "0x106B73C")]
		public void StopMonitoringTool(BaseTool tool)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x106B824", Offset = "0x106B824", VA = "0x106B824")]
		public void SetBacksideActive(Vector3 vCamPosition)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x106B934", Offset = "0x106B934", VA = "0x106B934", Slot = "15")]
		public override void GetReticleTransform(out Vector3 vPos, out Vector3 vForward, bool bGazeAndTap)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x106BA08", Offset = "0x106BA08", VA = "0x106BA08")]
		public void EnableSpecificTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x106BB00", Offset = "0x106BB00", VA = "0x106BB00")]
		public void DisableSpecificTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x106BB58", Offset = "0x106BB58", VA = "0x106BB58")]
		public void EnableDefaultTool()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x106BB6C", Offset = "0x106BB6C", VA = "0x106BB6C")]
		public bool IsDefaultToolEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x106BBB0", Offset = "0x106BBB0", VA = "0x106BBB0")]
		public BaseTool GetToolOfType(BaseTool.ToolType type)
		{
			return null;
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x106BC18", Offset = "0x106BC18", VA = "0x106BC18")]
		public void VerifyValidToolWithColorUpdate()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x106BC84", Offset = "0x106BC84", VA = "0x106BC84")]
		public void EnsureUserHasBasicToolEnabled()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x106BCF0", Offset = "0x106BCF0", VA = "0x106BCF0")]
		public void RequestHideActiveTool(bool bHide)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x106BCFC", Offset = "0x106BCFC", VA = "0x106BCFC")]
		private bool IsScrollableTool(BaseTool.ToolType rType)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x106BD2C", Offset = "0x106BD2C", VA = "0x106BD2C")]
		public void CheckForToolSelection()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x106C054", Offset = "0x106C054", VA = "0x106C054")]
		public void NextTool()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x106C1F0", Offset = "0x106C1F0", VA = "0x106C1F0")]
		public void PreviousTool()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x106C390", Offset = "0x106C390", VA = "0x106C390")]
		public void UpdateCurrentTool()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x106C494", Offset = "0x106C494", VA = "0x106C494")]
		public void OnNewPoses()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x106C4CC", Offset = "0x106C4CC", VA = "0x106C4CC")]
		public bool DoesCurrentToolAllowWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x106C4F4", Offset = "0x106C4F4", VA = "0x106C4F4")]
		public void UpdateToolSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x106C52C", Offset = "0x106C52C", VA = "0x106C52C")]
		public float ToolSize01()
		{
			return default(float);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x106C554", Offset = "0x106C554", VA = "0x106C554")]
		public void SetCurrentToolColor(Color rColor)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x106C5AC", Offset = "0x106C5AC", VA = "0x106C5AC")]
		public void UpdateCurrentToolExtraText(string sText)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x106C5E4", Offset = "0x106C5E4", VA = "0x106C5E4")]
		public void UpdateCurrentToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x106C61C", Offset = "0x106C61C", VA = "0x106C61C")]
		public bool ShouldShowTransformGizmo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x106C63C", Offset = "0x106C63C", VA = "0x106C63C")]
		public bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x106C660", Offset = "0x106C660", VA = "0x106C660")]
		public void EatToolsInput()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x106C680", Offset = "0x106C680", VA = "0x106C680")]
		public void AllowDrawing(bool bAllow)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x106C6B0", Offset = "0x106C6B0", VA = "0x106C6B0")]
		public bool CanAdjustToolSize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x106C6D8", Offset = "0x106C6D8", VA = "0x106C6D8", Slot = "8")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x106C710", Offset = "0x106C710", VA = "0x106C710")]
		public float GetCurrentToolSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x106AFD4", Offset = "0x106AFD4", VA = "0x106AFD4")]
		public BaseTool.ToolType GetCurrentToolType()
		{
			return default(BaseTool.ToolType);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x106C750", Offset = "0x106C750", VA = "0x106C750")]
		public void EnableRenderer(bool bEnable)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x106C7EC", Offset = "0x106C7EC", VA = "0x106C7EC")]
		public SketchSurfacePanel()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class SketchbookButton : OptionButton
	{
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float m_AdjustDistanceAmount;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Renderer m_IconRenderer;

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x106DAB0", Offset = "0x106DAB0", VA = "0x106DAB0", Slot = "41")]
		protected override void AdjustButtonPositionAndScale(float posAmount, float scaleAmount, float boxColliderGrowAmount)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x106DB90", Offset = "0x106DB90", VA = "0x106DB90", Slot = "35")]
		protected override void SetMaterialFloat(string name, float value)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x106DBDC", Offset = "0x106DBDC", VA = "0x106DBDC")]
		public SketchbookButton()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class SketchbookPanel : ModalPanel
	{
		[Serializable]
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2980C", Offset = "0xB2980C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, LoadSketchButton> <>9__65_0;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LoadSketchButton, bool> <>9__65_1;

			[Token(Token = "0x600182D")]
			[Address(RVA = "0xF20134", Offset = "0xF20134", VA = "0xF20134")]
			public <>c()
			{
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0xF2013C", Offset = "0xF2013C", VA = "0xF2013C")]
			internal LoadSketchButton <SetVisibleSketchSet>b__65_0(GameObject icon)
			{
				return null;
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0xF20190", Offset = "0xF20190", VA = "0xF20190")]
			internal bool <SetVisibleSketchSet>b__65_1(LoadSketchButton icon)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action AfterPanelStart;

		[Token(Token = "0x400182F")]
		private const int kElementNumberGalleryButtonLocal = 0;

		[Token(Token = "0x4001830")]
		private const float kGalleryButtonLocalPadding = 0.15f;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[SerializeField]
		private Texture2D m_LoadingImageTexture;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[SerializeField]
		private Texture2D m_UnknownImageTexture;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[SerializeField]
		private TextMesh m_PanelText;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[SerializeField]
		private TextMeshPro m_PanelTextPro;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[SerializeField]
		private string m_PanelTextStandard;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[SerializeField]
		private string m_PanelTextShowcase;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[SerializeField]
		private string m_PanelTextLiked;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[SerializeField]
		private string m_PanelTextDrive;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[SerializeField]
		private GameObject m_NoSketchesMessage;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[SerializeField]
		private GameObject m_NoDriveSketchesMessage;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[SerializeField]
		private GameObject m_NoLikesMessage;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[SerializeField]
		private GameObject m_NotLoggedInMessage;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		[SerializeField]
		private GameObject m_NotLoggedInDriveMessage;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[SerializeField]
		private GameObject m_NoShowcaseMessage;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[SerializeField]
		private GameObject m_ContactingServerMessage;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private GameObject m_OutOfDateMessage;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[SerializeField]
		private GameObject m_NoPolyConnectionMessage;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[SerializeField]
		private Renderer m_OnlineGalleryButtonRenderer;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[SerializeField]
		private GameObject[] m_IconsOnFirstPage;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[SerializeField]
		private GameObject[] m_IconsOnNormalPage;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[SerializeField]
		private GameObject m_NewSketchButton;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[SerializeField]
		private GameObject m_SaveNewButton;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[SerializeField]
		private GameObject m_SaveOptionsButton;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[SerializeField]
		private EnableBySDKMode m_SaveNewButtonEnabled;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[SerializeField]
		private GalleryButton[] m_GalleryButtons;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[SerializeField]
		private int m_ElementNumberGalleryButtonDrive;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		[SerializeField]
		private float m_GalleryButtonHeight;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[SerializeField]
		private Renderer m_ProfileButtonRenderer;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[SerializeField]
		private GameObject m_LoadingGallery;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[SerializeField]
		private GameObject m_DriveSyncProgress;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		[SerializeField]
		private GameObject m_SyncingDriveIcon;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[SerializeField]
		private GameObject m_DriveEnabledIcon;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[SerializeField]
		private GameObject m_DriveDisabledIcon;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		[SerializeField]
		private GameObject m_DriveFullIcon;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		[SerializeField]
		private Vector2 m_SketchIconUvScale;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		[SerializeField]
		private Vector3 m_ReadOnlyPopupOffset;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		private float m_ImageAspect;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private Vector2 m_HalfInvUvScale;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private SceneFileInfo m_FirstSketch;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x481")]
		private bool m_AllSketchesAreAvailable;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private SketchSetType m_CurrentSketchSet;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private SketchSet m_SketchSet;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private OptionButton m_NewSketchButtonScript;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private OptionButton m_PaintButtonScript;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private List<BaseButton> m_IconScriptsOnFirstPage;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private List<BaseButton> m_IconScriptsOnNormalPage;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private bool m_DriveSetHasSketches;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B1")]
		private bool m_ReadOnlyShown;

		[Token(Token = "0x17000341")]
		public float ImageAspect
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x106DBE4", Offset = "0x106DBE4", VA = "0x106DBE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000342")]
		public SketchSet SketchSet
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x106DBEC", Offset = "0x106DBEC", VA = "0x106DBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		protected override List<BaseButton> Icons
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x106DD30", Offset = "0x106DD30", VA = "0x106DD30", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x106DBF4", Offset = "0x106DBF4", VA = "0x106DBF4", Slot = "6")]
		public override void SetInIntroMode(bool inIntro)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x106DD70", Offset = "0x106DD70", VA = "0x106DD70", Slot = "32")]
		public override bool IsInButtonMode(ModeButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x106DEA4", Offset = "0x106DEA4", VA = "0x106DEA4", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x106E0A8", Offset = "0x106E0A8", VA = "0x106E0A8", Slot = "33")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x106F180", Offset = "0x106F180", VA = "0x106F180")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x106F28C", Offset = "0x106F28C", VA = "0x106F28C", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x106E4E4", Offset = "0x106E4E4", VA = "0x106E4E4")]
		private void SetVisibleSketchSet(SketchSetType type)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x106F498", Offset = "0x106F498", VA = "0x106F498")]
		private void ComputeNumPages()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x106F608", Offset = "0x106F608", VA = "0x106F608")]
		private List<int> GetIconLoadIndices()
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x106F79C", Offset = "0x106F79C", VA = "0x106F79C", Slot = "34")]
		protected override void RefreshPage()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x10705BC", Offset = "0x10705BC", VA = "0x10705BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x106E43C", Offset = "0x106E43C", VA = "0x106E43C")]
		private void OnDriveSetHasSketchesChanged()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1070DF0", Offset = "0x1070DF0", VA = "0x1070DF0")]
		private void UpdateIcons()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1071734", Offset = "0x1071734", VA = "0x1071734", Slot = "25")]
		public override void OnUpdatePanel(Vector3 vToPanel, Vector3 vHitPoint)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1071980", Offset = "0x1071980", VA = "0x1071980", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1071C6C", Offset = "0x1071C6C", VA = "0x1071C6C", Slot = "19")]
		protected override void OnUpdateGazeBehavior(Color rPanelColor)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1071EB8", Offset = "0x1071EB8", VA = "0x1071EB8", Slot = "7")]
		public override bool RaycastAgainstMeshCollider(Ray rRay, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x106EFC8", Offset = "0x106EFC8", VA = "0x106EFC8")]
		public void ButtonPressed(GalleryButton.Type rType, [Optional] BaseButton button)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1071FA4", Offset = "0x1071FA4", VA = "0x1071FA4")]
		private void OnSketchSetDirty()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x106F350", Offset = "0x106F350", VA = "0x106F350")]
		public void LoadPolyAssetsFromResources()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x10721A8", Offset = "0x10721A8", VA = "0x10721A8")]
		public void ForceSketchSetDirty()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x10721AC", Offset = "0x10721AC", VA = "0x10721AC")]
		public void ForceHideNavButtons()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1072308", Offset = "0x1072308", VA = "0x1072308", Slot = "35")]
		protected override void UpdateIndexOffset()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x10723BC", Offset = "0x10723BC", VA = "0x10723BC")]
		public void ForceNoInternetError()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1072514", Offset = "0x1072514", VA = "0x1072514")]
		public SketchbookPanel()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x107253C", Offset = "0x107253C", VA = "0x107253C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CE2C", Offset = "0xB3CE2C")]
		private void <OnStart>b__62_0()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class SketchesPanel : BasePanel
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private GameObject m_NewSaveButton;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private GameObject m_SaveOptionsButton;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private OptionButton m_ShareButton;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private Material m_ShareButtonStandard;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private Material m_ShareButtonNotify;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private string m_ShareButtonLoggedOutExtraText;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[SerializeField]
		private Renderer m_ProfileButtonRenderer;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private bool m_LoggedIn;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private float m_LastUploadProgress;

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x10725B4", Offset = "0x10725B4", VA = "0x10725B4", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1072680", Offset = "0x1072680", VA = "0x1072680")]
		private void Update()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x10729DC", Offset = "0x10729DC", VA = "0x10729DC")]
		private void SetShareNotification(bool notify)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1072604", Offset = "0x1072604", VA = "0x1072604")]
		private void RefreshLoginButtonText(bool loggedIn)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1072AF8", Offset = "0x1072AF8", VA = "0x1072AF8", Slot = "17")]
		protected override void OnUpdateActive()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1072BA4", Offset = "0x1072BA4", VA = "0x1072BA4", Slot = "20")]
		public override void PanelGazeActive(bool bActive)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1072C80", Offset = "0x1072C80", VA = "0x1072C80")]
		public SketchesPanel()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class SkyboxControl : UIComponent
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_HoverVisualAdjust;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer m_Renderer;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SphereCollider m_SphereCollider;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion m_SkyboxHandleGrabStart;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_SkyboxHandleGrabOffset;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x10733CC", Offset = "0x10733CC", VA = "0x10733CC", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x10735E4", Offset = "0x10735E4", VA = "0x10735E4", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x10736F8", Offset = "0x10736F8", VA = "0x10736F8", Slot = "7")]
		public override void SetColor(Color color)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x107378C", Offset = "0x107378C", VA = "0x107378C", Slot = "18")]
		public override void ButtonPressed(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x107399C", Offset = "0x107399C", VA = "0x107399C", Slot = "19")]
		public override void ButtonHeld(RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1073BFC", Offset = "0x1073BFC", VA = "0x1073BFC", Slot = "20")]
		public override void ButtonReleased()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1073D3C", Offset = "0x1073D3C", VA = "0x1073D3C", Slot = "29")]
		public override bool CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1073F1C", Offset = "0x1073F1C", VA = "0x1073F1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1073850", Offset = "0x1073850", VA = "0x1073850")]
		private Vector3 IntersectionPointOnBackside(Vector3 hitPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1073A40", Offset = "0x1073A40", VA = "0x1073A40")]
		private void SetRotation(Quaternion rot)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1073F80", Offset = "0x1073F80", VA = "0x1073F80")]
		private void MaintainSceneSpaceRotation()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x107409C", Offset = "0x107409C", VA = "0x107409C")]
		private void OnGradientActiveChanged()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1074200", Offset = "0x1074200", VA = "0x1074200")]
		private void OnSkyboxChanged()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x10742F4", Offset = "0x10742F4", VA = "0x10742F4")]
		public SkyboxControl()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x10742FC", Offset = "0x10742FC", VA = "0x10742FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CE3C", Offset = "0xB3CE3C")]
		private void <Awake>b__5_0(TrTransform prev, TrTransform current)
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class SliderEndCapScript : MonoBehaviour
	{
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D m_Icon;

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x10754C8", Offset = "0x10754C8", VA = "0x10754C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1075534", Offset = "0x1075534", VA = "0x1075534")]
		public SliderEndCapScript()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class SnapshotPreview : UIComponent
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_Mesh;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_CameraAttach;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MultiCamCaptureRig m_SketchControlsCaptureRig;

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x11AAAA8", Offset = "0x11AAAA8", VA = "0x11AAAA8", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x11AAB40", Offset = "0x11AAB40", VA = "0x11AAB40", Slot = "17")]
		public override bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x11AAC28", Offset = "0x11AAC28", VA = "0x11AAC28", Slot = "25")]
		public override void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x11AAD08", Offset = "0x11AAD08", VA = "0x11AAD08")]
		public SnapshotPreview()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class StencilButton : BaseButton
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private StencilType m_Type;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x11B1588", Offset = "0x11B1588", VA = "0x11B1588", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x11B17C8", Offset = "0x11B17C8", VA = "0x11B17C8")]
		public StencilButton()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class StencilsVisibilityButton : OptionButton
	{
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x11B3598", Offset = "0x11B3598", VA = "0x11B3598", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x11B36D4", Offset = "0x11B36D4", VA = "0x11B36D4", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x11B3810", Offset = "0x11B3810", VA = "0x11B3810")]
		public StencilsVisibilityButton()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class StrokeSimplificationSlider : BaseSlider
	{
		[Token(Token = "0x20003C2")]
		public struct Step
		{
			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sliderRatio;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float simplification;
		}

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject[] m_HideOnChange;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject[] m_ShowOnChange;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float[] m_SimplificationAmounts;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Step[] m_Steps;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_ProposedSimplificationLevel;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x11B7054", Offset = "0x11B7054", VA = "0x11B7054", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x11B7270", Offset = "0x11B7270", VA = "0x11B7270")]
		private void PositionNobAtSimplificationLevel(float level)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x11B7420", Offset = "0x11B7420", VA = "0x11B7420")]
		private int GetStepFromLevel(float level)
		{
			return default(int);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x11B74A0", Offset = "0x11B74A0", VA = "0x11B74A0")]
		private void ShowConfirmation(bool show)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x11B7684", Offset = "0x11B7684", VA = "0x11B7684", Slot = "34")]
		public override void UpdateValue(float fValue)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x11B733C", Offset = "0x11B733C", VA = "0x11B733C")]
		private string GetDescriptionExtraText(int step)
		{
			return null;
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x11B78C0", Offset = "0x11B78C0", VA = "0x11B78C0")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB3CE4C", Offset = "0xB3CE4C")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x11B79A4", Offset = "0x11B79A4", VA = "0x11B79A4")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB3CE80", Offset = "0xB3CE80")]
		public void CancelSettings()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x11B7A14", Offset = "0x11B7A14", VA = "0x11B7A14", Slot = "10")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x11B7A40", Offset = "0x11B7A40", VA = "0x11B7A40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x11B7B80", Offset = "0x11B7B80", VA = "0x11B7B80")]
		public StrokeSimplificationSlider()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class TestingButton : BaseButton
	{
		[Token(Token = "0x20003C4")]
		public enum Type
		{
			[Token(Token = "0x4001883")]
			Back,
			[Token(Token = "0x4001884")]
			Next,
			[Token(Token = "0x4001885")]
			Result
		}

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string m_ResultText;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Type m_Type;

		[Token(Token = "0x17000344")]
		public string ResultText
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x116411C", Offset = "0x116411C", VA = "0x116411C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1164124", Offset = "0x1164124", VA = "0x1164124", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x11642DC", Offset = "0x11642DC", VA = "0x11642DC")]
		public void ToggleActive(bool active)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x11642E8", Offset = "0x11642E8", VA = "0x11642E8")]
		public TestingButton()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class TestingPanel : BasePanel
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private TestingButton m_PassButton;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private TestingButton m_FailButton;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[SerializeField]
		private TestingButton m_NAButton;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private TextMeshPro m_Summary;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[SerializeField]
		private TextMeshPro m_Steps;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[SerializeField]
		private TextMeshPro m_ExpectedResult;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private string[,] m_TestCases;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int m_TestIndex;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private int m_SummaryIndex;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private int m_StepsIndex;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private int m_ExpectedResultIndex;

		[Token(Token = "0x17000345")]
		private static string InputFilePath
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x11642F0", Offset = "0x11642F0", VA = "0x11642F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private static string OutputFilePath
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0x1164378", Offset = "0x1164378", VA = "0x1164378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public override bool ShouldRegister
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0x116442C", Offset = "0x116442C", VA = "0x116442C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x11641E0", Offset = "0x11641E0", VA = "0x11641E0")]
		public void OnButtonPressed(TestingButton.Type type, string text = "")
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x11646A0", Offset = "0x11646A0", VA = "0x11646A0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x11646C8", Offset = "0x11646C8", VA = "0x11646C8", Slot = "13")]
		protected override void OnDisablePanel()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x1164728", Offset = "0x1164728", VA = "0x1164728", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x1164788", Offset = "0x1164788", VA = "0x1164788")]
		public void ResetTests()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x1164434", Offset = "0x1164434", VA = "0x1164434")]
		private void RefreshPanel()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x11647C0", Offset = "0x11647C0", VA = "0x11647C0")]
		private void PopulateCases(string input)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1164C80", Offset = "0x1164C80", VA = "0x1164C80")]
		private void AddResultsColumn()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x1164EC0", Offset = "0x1164EC0", VA = "0x1164EC0", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1164F38", Offset = "0x1164F38", VA = "0x1164F38")]
		public TestingPanel()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public enum WatermarkStyle
	{
		[Token(Token = "0x4001892")]
		Standard,
		[Token(Token = "0x4001893")]
		Labs,
		[Token(Token = "0x4001894")]
		None
	}
	[Token(Token = "0x20003C7")]
	public class TiltBrushWatermark : MonoBehaviour
	{
		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Watermark;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_WatermarkLabs;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WatermarkStyle m_WatermarkStyle;

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1170860", Offset = "0x1170860", VA = "0x1170860")]
		private void Awake()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x11708E4", Offset = "0x11708E4", VA = "0x11708E4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x1170A78", Offset = "0x1170A78", VA = "0x1170A78")]
		public TiltBrushWatermark()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class TiltasaurusButton : BaseButton
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x11731C8", Offset = "0x11731C8", VA = "0x11731C8", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x1173264", Offset = "0x1173264", VA = "0x1173264")]
		public TiltasaurusButton()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class TiltasaurusPopUpWindow : PopUpWindow
	{
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2981C", Offset = "0xB2981C")]
		private sealed class <Refresh>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TiltasaurusPopUpWindow <>4__this;

			[Token(Token = "0x17000348")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600187C")]
				[Address(RVA = "0xF26918", Offset = "0xF26918", VA = "0xF26918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000349")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187E")]
				[Address(RVA = "0xF26960", Offset = "0xF26960", VA = "0xF26960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0xF266DC", Offset = "0xF266DC", VA = "0xF266DC")]
			[DebuggerHidden]
			public <Refresh>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0xF26708", Offset = "0xF26708", VA = "0xF26708", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0xF2670C", Offset = "0xF2670C", VA = "0xF2670C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0xF26920", Offset = "0xF26920", VA = "0xF26920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001898")]
		private const string kNoPeeking = "        Tiltasaurus says...\r\n                              No Peeking!\r\n     Category: {0}";

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMesh m_DrawingPrompt;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TextMesh m_Category;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_DrawingPromptMaxWidth;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_NoPeekingCameraPrefab;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GameObject m_NoPeekingCamera;

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1173340", Offset = "0x1173340", VA = "0x1173340", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x11735C0", Offset = "0x11735C0", VA = "0x11735C0", Slot = "13")]
		protected override void DestroyPopUpWindow()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1173238", Offset = "0x1173238", VA = "0x1173238")]
		public void RefreshWord()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x117366C", Offset = "0x117366C", VA = "0x117366C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CEB4", Offset = "0xB3CEB4")]
		private IEnumerator Refresh()
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x11736D8", Offset = "0x11736D8", VA = "0x11736D8")]
		private static void SetTextResize(string text, TextMesh dest, float maxWidth)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x117340C", Offset = "0x117340C", VA = "0x117340C")]
		private void RefreshDrawingPrompt()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x1173768", Offset = "0x1173768", VA = "0x1173768")]
		public TiltasaurusPopUpWindow()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class ToolButton : BaseButton
	{
		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected BaseTool.ToolType m_Tool;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool m_EatGazeInputOnPress;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x11748A4", Offset = "0x11748A4", VA = "0x11748A4", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x1174944", Offset = "0x1174944", VA = "0x1174944", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x11749E4", Offset = "0x11749E4", VA = "0x11749E4", Slot = "24")]
		public override void UpdateVisuals()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1174A98", Offset = "0x1174A98", VA = "0x1174A98", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1174B8C", Offset = "0x1174B8C", VA = "0x1174B8C")]
		public ToolButton()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class TutorialPanel : BasePanel
	{
		[Token(Token = "0x20003CD")]
		private enum TransitionState
		{
			[Token(Token = "0x40018AC")]
			Out,
			[Token(Token = "0x40018AD")]
			In,
			[Token(Token = "0x40018AE")]
			None
		}

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		[SerializeField]
		private float m_TipTransitionSpeed;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		[SerializeField]
		private GameObject m_Title;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private TextMeshPro m_TipNumber;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private TransitionState m_TipTransitionState;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		private float m_TipTransitionValue;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private GameObject m_TutorialObject;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private TutorialType m_CurrentTutorialType;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private TutorialType m_DesiredTutorialType;

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x1241BFC", Offset = "0x1241BFC", VA = "0x1241BFC", Slot = "11")]
		public override void InitPanel()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1241CC4", Offset = "0x1241CC4", VA = "0x1241CC4", Slot = "21")]
		public override void OnWidgetShowAnimStart()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1241CE4", Offset = "0x1241CE4", VA = "0x1241CE4", Slot = "22")]
		public override void OnWidgetShowAnimComplete()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1241D04", Offset = "0x1241D04", VA = "0x1241D04", Slot = "12")]
		protected override void OnEnablePanel()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1241D30", Offset = "0x1241D30", VA = "0x1241D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x1241E80", Offset = "0x1241E80", VA = "0x1241E80")]
		private void SetTutorial(TutorialType type)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1241C28", Offset = "0x1241C28", VA = "0x1241C28")]
		private void ShowTutorialOfType(TutorialType type)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x12420E4", Offset = "0x12420E4", VA = "0x12420E4", Slot = "28")]
		public override void AdvancePage(int iAmount)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x1242104", Offset = "0x1242104", VA = "0x1242104")]
		public TutorialPanel()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public abstract class UIComponent : MonoBehaviour
	{
		[Token(Token = "0x20003CF")]
		protected enum DescriptionState
		{
			[Token(Token = "0x40018C4")]
			Deactivated,
			[Token(Token = "0x40018C5")]
			Activating,
			[Token(Token = "0x40018C6")]
			Active,
			[Token(Token = "0x40018C7")]
			Deactivating
		}

		[Token(Token = "0x20003D0")]
		public enum ComponentMessage
		{
			[Token(Token = "0x40018C9")]
			NextPage,
			[Token(Token = "0x40018CA")]
			PrevPage,
			[Token(Token = "0x40018CB")]
			GotoPage,
			[Token(Token = "0x40018CC")]
			ClosePopup
		}

		[Serializable]
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2982C", Offset = "0xB2982C")]
		private sealed class <>c
		{
			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__32_0;

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xF271D4", Offset = "0xF271D4", VA = "0xF271D4")]
			public <>c()
			{
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0xF271DC", Offset = "0xF271DC", VA = "0xF271DC")]
			internal bool <SetDescriptionText>b__32_0(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018AF")]
		public const float kUnavailableTintAmount = 0.4f;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected DescriptionType m_DescriptionType;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float m_DescriptionYOffset;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string m_DescriptionText;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string m_DescriptionTextExtra;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float m_DescriptionActivateSpeed;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float m_DescriptionZScale;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool m_SkipDescriptionTranslation;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Collider m_Collider;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected UIComponentManager m_Manager;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject m_Description;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected UIComponentDescription m_DescriptionScript;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float m_DescriptionActivateTimer;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected DescriptionState m_DescriptionState;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_HoldFocus;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_StealFocus;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_HadFocus;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		protected bool m_HadButtonPress;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected bool m_ForceUpdateVisuals;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		protected bool m_Available;

		[Token(Token = "0x1700034A")]
		public string Description
		{
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x12431E4", Offset = "0x12431E4", VA = "0x12431E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public string DescriptionExtra
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x12431EC", Offset = "0x12431EC", VA = "0x12431EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x12431DC", Offset = "0x12431DC", VA = "0x12431DC", Slot = "4")]
		public virtual Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x12431F4", Offset = "0x12431F4", VA = "0x12431F4")]
		public bool IsDescriptionActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1243204", Offset = "0x1243204", VA = "0x1243204", Slot = "5")]
		public virtual bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x124320C", Offset = "0x124320C", VA = "0x124320C")]
		public void SetIsAvailable(bool available)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x1243230", Offset = "0x1243230", VA = "0x1243230")]
		public void SetDescriptionUnavailable(bool unavailable)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x124324C", Offset = "0x124324C", VA = "0x124324C")]
		public void SetExtraDescriptionText(string sDescExtra)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1243330", Offset = "0x1243330", VA = "0x1243330", Slot = "6")]
		public virtual void SetDescriptionText(params string[] strings)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x1243A34", Offset = "0x1243A34", VA = "0x1243A34")]
		public void SetSkipTranslationFlag(bool shouldSkipTranslation)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x1243A40", Offset = "0x1243A40", VA = "0x1243A40")]
		public void AdjustDescriptionScale()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x1243B84", Offset = "0x1243B84", VA = "0x1243B84", Slot = "7")]
		public virtual void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x1243B88", Offset = "0x1243B88", VA = "0x1243B88")]
		protected Color DimIfUnavailable(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x1243C04", Offset = "0x1243C04", VA = "0x1243C04", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x1243E44", Offset = "0x1243E44", VA = "0x1243E44", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x1243E48", Offset = "0x1243E48", VA = "0x1243E48", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x1243D18", Offset = "0x1243D18", VA = "0x1243D18")]
		public void RegisterComponent()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1243E4C", Offset = "0x1243E4C", VA = "0x1243E4C")]
		private void UnregisterComponent()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1243FA4", Offset = "0x1243FA4", VA = "0x1243FA4", Slot = "11")]
		protected virtual void OnRegisterComponent()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1243FA8", Offset = "0x1243FA8", VA = "0x1243FA8", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x1243FAC", Offset = "0x1243FAC", VA = "0x1243FAC", Slot = "13")]
		protected virtual void OnDescriptionChanged()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1244080", Offset = "0x1244080", VA = "0x1244080")]
		public void SetDescriptionActive(bool active)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1244174", Offset = "0x1244174", VA = "0x1244174", Slot = "14")]
		public virtual void ForceDescriptionDeactivate()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x124421C", Offset = "0x124421C", VA = "0x124421C")]
		protected void SetDescriptionVisualsAvailable(bool available)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1244388", Offset = "0x1244388", VA = "0x1244388", Slot = "15")]
		protected virtual void OnDescriptionActivated()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x124438C", Offset = "0x124438C", VA = "0x124438C", Slot = "16")]
		protected virtual void OnDescriptionDeactivated()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1244390", Offset = "0x1244390", VA = "0x1244390", Slot = "17")]
		public virtual bool UpdateStateWithInput(bool inputValid, Ray inputRay, GameObject parentActiveObject, Collider parentCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x12447B4", Offset = "0x12447B4", VA = "0x12447B4", Slot = "18")]
		public virtual void ButtonPressed(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x12447B8", Offset = "0x12447B8", VA = "0x12447B8", Slot = "19")]
		public virtual void ButtonHeld(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x12447BC", Offset = "0x12447BC", VA = "0x12447BC", Slot = "20")]
		public virtual void ButtonReleased()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x12447C0", Offset = "0x12447C0", VA = "0x12447C0", Slot = "21")]
		public virtual void GainFocus()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x12447C4", Offset = "0x12447C4", VA = "0x12447C4", Slot = "22")]
		public virtual void HasFocus(RaycastHit rHitInfo)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x12447C8", Offset = "0x12447C8", VA = "0x12447C8", Slot = "23")]
		public virtual void LostFocus()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x12447CC", Offset = "0x12447CC", VA = "0x12447CC", Slot = "24")]
		public virtual void UpdateVisuals()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x12449D0", Offset = "0x12449D0", VA = "0x12449D0")]
		public void ForceUpdateVisuals()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1244A08", Offset = "0x1244A08", VA = "0x1244A08", Slot = "25")]
		public virtual void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1244A0C", Offset = "0x1244A0C", VA = "0x1244A0C", Slot = "26")]
		public virtual void ManagerLostFocus()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1244A10", Offset = "0x1244A10", VA = "0x1244A10", Slot = "27")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1244A18", Offset = "0x1244A18", VA = "0x1244A18", Slot = "28")]
		public virtual bool RaycastAgainstCustomCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1244A30", Offset = "0x1244A30", VA = "0x1244A30", Slot = "29")]
		public virtual bool CalculateReticleCollision(Ray ray, ref Vector3 pos, ref Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1244B24", Offset = "0x1244B24", VA = "0x1244B24", Slot = "30")]
		public virtual void ReceiveMessage(ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1244B28", Offset = "0x1244B28", VA = "0x1244B28", Slot = "31")]
		public virtual bool BrushPadAnimatesOnHover()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1244B30", Offset = "0x1244B30", VA = "0x1244B30", Slot = "32")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1244B34", Offset = "0x1244B34", VA = "0x1244B34", Slot = "33")]
		public virtual float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1244B3C", Offset = "0x1244B3C", VA = "0x1244B3C")]
		protected UIComponent()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class UIComponentDescription : MonoBehaviour
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_BG;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_RightCap;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] m_TintVisuals;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMesh[] m_Text;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_UnavailableColor;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB31D30", Offset = "0xB31D30")]
		[SerializeField]
		private bool m_PlaceOnRightEdge;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_DefaultScale;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color m_StandardColor;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_YOffset;

		[Token(Token = "0x1700034C")]
		public float YOffset
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x1244B58", Offset = "0x1244B58", VA = "0x1244B58")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public int NumberOfLines
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x1243750", Offset = "0x1243750", VA = "0x1243750")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x124376C", Offset = "0x124376C", VA = "0x124376C")]
		public void SetDescription(string[] strings, bool skipTranslation = false)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1244B60", Offset = "0x1244B60", VA = "0x1244B60")]
		public void SetDescription(string[] strings, bool[] skipTranslations)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1243AC8", Offset = "0x1243AC8", VA = "0x1243AC8")]
		public void AdjustDescriptionScale()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x12442B8", Offset = "0x12442B8", VA = "0x12442B8")]
		public void SetAvailabilityVisuals(bool available)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1244E4C", Offset = "0x1244E4C", VA = "0x1244E4C")]
		public UIComponentDescription()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class UIComponentManager : MonoBehaviour
	{
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<UIComponent> m_UIComponents;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_ActiveInputObject;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIComponent m_ActiveInputUIComponent;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BasePanel m_PopUpPanel;

		[Token(Token = "0x1700034E")]
		public GameObject ActiveInputObject
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x1244E8C", Offset = "0x1244E8C", VA = "0x1244E8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x1244E94", Offset = "0x1244E94", VA = "0x1244E94")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public UIComponent ActiveInputUIComponent
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x1244E9C", Offset = "0x1244E9C", VA = "0x1244E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public UIComponentManager ParentManager
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x1244EA4", Offset = "0x1244EA4", VA = "0x1244EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1244F74", Offset = "0x1244F74", VA = "0x1244F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x1243EDC", Offset = "0x1243EDC", VA = "0x1243EDC")]
		public void RegisterUIComponent(UIComponent comp)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1243F40", Offset = "0x1243F40", VA = "0x1243F40")]
		public void UnregisterUIComponent(UIComponent comp)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1244FE4", Offset = "0x1244FE4", VA = "0x1244FE4")]
		public BasePanel GetPanelForPopUps()
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x1245164", Offset = "0x1245164", VA = "0x1245164")]
		private BasePanel GetPanelFromManager(UIComponentManager manager)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x124526C", Offset = "0x124526C", VA = "0x124526C")]
		public void SetColor(Color col)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1245340", Offset = "0x1245340", VA = "0x1245340")]
		public void UpdateVisuals()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x12453E8", Offset = "0x12453E8", VA = "0x12453E8")]
		public void ManagerLostFocus()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1245490", Offset = "0x1245490", VA = "0x1245490")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1245570", Offset = "0x1245570", VA = "0x1245570")]
		public void GazeRatioChanged(float gazeRatio)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1245628", Offset = "0x1245628", VA = "0x1245628")]
		public bool BrushPadAnimatesOnAnyHover()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x12456E0", Offset = "0x12456E0", VA = "0x12456E0")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1245790", Offset = "0x1245790", VA = "0x1245790")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1245860", Offset = "0x1245860", VA = "0x1245860")]
		public void ResetInput()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1245868", Offset = "0x1245868", VA = "0x1245868")]
		public void UpdateUIComponents(Ray selectionRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1245A34", Offset = "0x1245A34", VA = "0x1245A34")]
		public void SendMessageToComponents(UIComponent.ComponentMessage type, int param)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x1245CF0", Offset = "0x1245CF0", VA = "0x1245CF0")]
		public bool RaycastAgainstCustomColliders(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1245E08", Offset = "0x1245E08", VA = "0x1245E08")]
		public void CalculateReticleCollision(Ray castRay, ref Vector3 pos, ref Vector3 forward)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x1245EFC", Offset = "0x1245EFC", VA = "0x1245EFC")]
		public UIComponentManager()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class UnlockSkyboxButton : BaseButton
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject[] m_HideOnPress;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject[] m_ShowOnPress;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float m_TransitionDuration;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_Title;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_TransitionToUnlockedSkybox;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float m_TransitionTimer;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float[] m_HideStartSizes;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float[] m_ShowEndSizes;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x1248794", Offset = "0x1248794", VA = "0x1248794", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x12489AC", Offset = "0x12489AC", VA = "0x12489AC", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x1248A64", Offset = "0x1248A64", VA = "0x1248A64")]
		private void Update()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x1249018", Offset = "0x1249018", VA = "0x1249018", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x12490B4", Offset = "0x12490B4", VA = "0x12490B4")]
		private void OnGradientActiveChanged()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x1248DE0", Offset = "0x1248DE0", VA = "0x1248DE0")]
		private void SetSkyboxUnlocked()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x1248EFC", Offset = "0x1248EFC", VA = "0x1248EFC")]
		private void SetSkyboxLocked()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x1249204", Offset = "0x1249204", VA = "0x1249204")]
		public UnlockSkyboxButton()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class UploadOptionButton : OptionButton
	{
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x12492D8", Offset = "0x12492D8", VA = "0x12492D8", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x124930C", Offset = "0x124930C", VA = "0x124930C", Slot = "43")]
		protected override void UpdateAvailability()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x12493D0", Offset = "0x12493D0", VA = "0x12493D0")]
		public UploadOptionButton()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class UploadSketchButton : OptionButton
	{
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x124A078", Offset = "0x124A078", VA = "0x124A078", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x124A274", Offset = "0x124A274", VA = "0x124A274")]
		public UploadSketchButton()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class VideoPositionSlider : BaseSlider
	{
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private VideoWidget m_VideoWidget;

		[Token(Token = "0x17000351")]
		public VideoWidget VideoWidget
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x124BFF4", Offset = "0x124BFF4", VA = "0x124BFF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x124BFFC", Offset = "0x124BFFC", VA = "0x124BFFC")]
			set
			{
			}
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x124C004", Offset = "0x124C004", VA = "0x124C004", Slot = "34")]
		public override void UpdateValue(float value)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x124C0B0", Offset = "0x124C0B0", VA = "0x124C0B0", Slot = "36")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x124C174", Offset = "0x124C174", VA = "0x124C174")]
		public VideoPositionSlider()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class GeometryTags : MonoBehaviour
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_HighLod;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_LowLod;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_ExcludeFromPolyExport;

		[Token(Token = "0x17000352")]
		public bool IsHighLod
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x15D5294", Offset = "0x15D5294", VA = "0x15D5294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000353")]
		public bool IsLowLod
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x15D529C", Offset = "0x15D529C", VA = "0x15D529C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000354")]
		public bool ExcludeFromPolyExport
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x15D52A4", Offset = "0x15D52A4", VA = "0x15D52A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x15D52C4", Offset = "0x15D52C4", VA = "0x15D52C4")]
		public GeometryTags()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class GifEncodeTask
	{
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int m_GifWidth;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int m_GifHeight;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string m_GifName;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_FrameDelayMs;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly bool m_bSavePngs;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private readonly bool m_bPalettePerFrame;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float m_DitherStrength;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Color32[]> m_Frames;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_CreationPercent;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread m_Thread;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_ErrorMessage;

		[Token(Token = "0x17000355")]
		public bool IsDone
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x15D52CC", Offset = "0x15D52CC", VA = "0x15D52CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000356")]
		public string GifName
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x15D52F8", Offset = "0x15D52F8", VA = "0x15D52F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000357")]
		public string Error
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x15D5300", Offset = "0x15D5300", VA = "0x15D5300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		public float CreationPercent
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x15D5370", Offset = "0x15D5370", VA = "0x15D5370")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x15D5378", Offset = "0x15D5378", VA = "0x15D5378")]
		public GifEncodeTask(List<Color32[]> frames, int frameDelayMs, int frameWidth, int frameHeight, string gifName, float ditherStrength = 0.125f, bool palettePerFrame = false)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x15D54A4", Offset = "0x15D54A4", VA = "0x15D54A4")]
		public void Start()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x15D5560", Offset = "0x15D5560", VA = "0x15D5560")]
		private void WriteFrameAsPng(DirectoryInfo di, int i)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x15D5810", Offset = "0x15D5810", VA = "0x15D5810")]
		private void Run()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x15D5938", Offset = "0x15D5938", VA = "0x15D5938")]
		private void RunLow()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x15D5E30", Offset = "0x15D5E30", VA = "0x15D5E30")]
		private static bool IsSymmetric(List<Color32[]> frames)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DA")]
	public class GuiManager : MonoBehaviour
	{
		[Token(Token = "0x20003DB")]
		private enum SlideState
		{
			[Token(Token = "0x40018FE")]
			Hidden,
			[Token(Token = "0x40018FF")]
			MovingIn,
			[Token(Token = "0x4001900")]
			Showing,
			[Token(Token = "0x4001901")]
			MovingOut
		}

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GuiManager m_Instance;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform m_Sidebar;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Login;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_Profile;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_Text;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_SlideDuration;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_SlideTimer;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SlideState m_SlideState;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SidebarPosX;

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xFAD018", Offset = "0xFAD018", VA = "0xFAD018")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xFAD340", Offset = "0xFAD340", VA = "0xFAD340")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xFAD3D0", Offset = "0xFAD3D0", VA = "0xFAD3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xFAD49C", Offset = "0xFAD49C", VA = "0xFAD49C")]
		public void Show(bool show)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xFAD4D4", Offset = "0xFAD4D4", VA = "0xFAD4D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xFAD120", Offset = "0xFAD120", VA = "0xFAD120")]
		private void RefreshObjects()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xFAD5E4", Offset = "0xFAD5E4", VA = "0xFAD5E4")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xFAD5E8", Offset = "0xFAD5E8", VA = "0xFAD5E8")]
		public GuiManager()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class GvrOverlay : MonoBehaviour
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer m_ProgressIndicator;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_Message;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Camera> m_ExtraCameras;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_ModifiedCamera;

		[Token(Token = "0x4001907")]
		private const int kOverlayMask = 16777216;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int OriginalCameraCullingMask;

		[Token(Token = "0x17000359")]
		public MeshRenderer ProgressIndicator
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0xFAE1E0", Offset = "0xFAE1E0", VA = "0xFAE1E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public TextMeshPro Status
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xFAE1E8", Offset = "0xFAE1E8", VA = "0xFAE1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public float Progress
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xFAE1F0", Offset = "0xFAE1F0", VA = "0xFAE1F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xFAE264", Offset = "0xFAE264", VA = "0xFAE264")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xFAE548", Offset = "0xFAE548", VA = "0xFAE548")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xFAE828", Offset = "0xFAE828", VA = "0xFAE828")]
		public void SetText(string message)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xFAE84C", Offset = "0xFAE84C", VA = "0xFAE84C")]
		public void SetExtraCameras(List<Camera> extraCameras)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xFAE854", Offset = "0xFAE854", VA = "0xFAE854")]
		public GvrOverlay()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public struct HSLColor
	{
		[Token(Token = "0x4001909")]
		public const float HUE_MAX = 6f;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float l;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x1700035C")]
		public float HueDegrees
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x13BEC8C", Offset = "0x13BEC8C", VA = "0x13BEC8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600190D")]
			[Address(RVA = "0x13BECA0", Offset = "0x13BECA0", VA = "0x13BECA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public float Hue01
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0x13BECF0", Offset = "0x13BECF0", VA = "0x13BECF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x13BED04", Offset = "0x13BED04", VA = "0x13BED04")]
			set
			{
			}
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x13BED48", Offset = "0x13BED48", VA = "0x13BED48")]
		public HSLColor(float H, float S, float L, float alpha = 1f)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x13BEDA0", Offset = "0x13BEDA0", VA = "0x13BEDA0")]
		public static implicit operator HSLColor(Color32 color)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x13BEDBC", Offset = "0x13BEDBC", VA = "0x13BEDBC")]
		public static explicit operator HSLColor(Color color)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x13BEF30", Offset = "0x13BEF30", VA = "0x13BEF30")]
		public static explicit operator Color(HSLColor hslColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x13BF104", Offset = "0x13BF104", VA = "0x13BF104")]
		private static float ColorCalc(float c, float t1, float t2)
		{
			return default(float);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x13BF178", Offset = "0x13BF178", VA = "0x13BF178", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x13BF330", Offset = "0x13BF330", VA = "0x13BF330")]
		public HSLColor GetBaseColor()
		{
			return default(HSLColor);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x13BF37C", Offset = "0x13BF37C", VA = "0x13BF37C")]
		public static HSLColor FromHSV(float h, float s, float v, float a = 1f)
		{
			return default(HSLColor);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x13BF410", Offset = "0x13BF410", VA = "0x13BF410")]
		public void ToHSV(out float out_H, out float out_S, out float out_V)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public interface IReferenceItemCatalog
	{
		[Token(Token = "0x1700035E")]
		int ItemCount
		{
			[Token(Token = "0x6001919")]
			get;
		}

		[Token(Token = "0x1700035F")]
		bool IsScanning
		{
			[Token(Token = "0x600191A")]
			get;
		}

		[Token(Token = "0x14000065")]
		event Action CatalogChanged;

		[Token(Token = "0x600191D")]
		void ForceCatalogScan();
	}
	[Token(Token = "0x20003DF")]
	public static class ImageCache
	{
		[Token(Token = "0x400190E")]
		private const string kImageCacheNamespace = "Images";

		[Token(Token = "0x400190F")]
		private const string kSignatureFile = "Signature.bin";

		[Token(Token = "0x4001910")]
		private const string kIconFile = "Icon.bin";

		[Token(Token = "0x4001911")]
		private const string kImageFile = "Image.bin";

		[Token(Token = "0x4001912")]
		private const string kAspectRatioFile = "AspectRatio.bin";

		[Token(Token = "0x17000360")]
		public static string CacheBaseDirectory
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x13CC700", Offset = "0x13CC700", VA = "0x13CC700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x13CB904", Offset = "0x13CB904", VA = "0x13CB904")]
		public static void SaveIconCache(Texture2D iconTexture, string filePath, float aspectRatio)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x13CBB84", Offset = "0x13CBB84", VA = "0x13CBB84")]
		public static Texture2D LoadIconCache(string filePath, out float aspectRatio)
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x13CBDF4", Offset = "0x13CBDF4", VA = "0x13CBDF4")]
		public static void SaveImageCache(Texture2D imageTexture, string filePath)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x13CBE54", Offset = "0x13CBE54", VA = "0x13CBE54")]
		public static Texture2D LoadImageCache(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x13CBEB4", Offset = "0x13CBEB4", VA = "0x13CBEB4")]
		public static byte[] BytesFromTexture(Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x13CC240", Offset = "0x13CC240", VA = "0x13CC240")]
		public static Texture2D TextureFromBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x13CC788", Offset = "0x13CC788", VA = "0x13CC788")]
		public static string CacheDirectory(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x13CC83C", Offset = "0x13CC83C", VA = "0x13CC83C")]
		public static void DeleteObsoleteCaches()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x13CCDEC", Offset = "0x13CCDEC", VA = "0x13CCDEC")]
		private static byte[] GetCacheSignature(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x13CB970", Offset = "0x13CB970", VA = "0x13CB970")]
		private static void SaveTextureCache(string cacheFileName, Texture2D texture, string filePath, float aspectRatio = -1f)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x13CBBE0", Offset = "0x13CBBE0", VA = "0x13CBBE0")]
		private static Texture2D LoadTextureCache(string cacheFileName, string filePath, out float aspectRatio)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E0")]
	public class InfoCardAnimation : MonoBehaviour
	{
		[Token(Token = "0x20003E1")]
		public enum State
		{
			[Token(Token = "0x4001935")]
			Intro,
			[Token(Token = "0x4001936")]
			Holding,
			[Token(Token = "0x4001937")]
			Falling
		}

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int s_NumCards;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Mesh;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMesh m_Text;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_IntroStateDuration;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_FallingStateDistance;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_IntroPopAmount;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 m_IntroPopVector;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_HoldingTranslatePercent;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_FallAcceleration;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FallRotationAcceleration;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_FallTranslateAcceleration;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_FallScaleDistance;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip[] m_FallSounds;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_FallVolume;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_ControllerInteractDistance;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_FaceInteractDistance;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_ControllerInteractDecay;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_FaceInteractDecay;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_InteractScalar;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private State m_CurrentState;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_StateTimer;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_HoldingStateDuration;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_TabletHoldingStateDuration;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_IntroPopVectorTransformed;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_FallVelocity;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_FallStartY;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_FallRotationAxis;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_FallRotationVelocity;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_FallTranslateDirection;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_FallTranslateVelocity;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_FallForces;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 m_FaceForces;

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x12D50B4", Offset = "0x12D50B4", VA = "0x12D50B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x12D5108", Offset = "0x12D5108", VA = "0x12D5108")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x12D515C", Offset = "0x12D515C", VA = "0x12D515C")]
		public void Init(WordIDs wordID, [Optional] string insertedString, float fPopScalar = 1f)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x12D53FC", Offset = "0x12D53FC", VA = "0x12D53FC")]
		public void Init(string sText, float fPopScalar = 1f)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x12D5660", Offset = "0x12D5660", VA = "0x12D5660")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x12D5D20", Offset = "0x12D5D20", VA = "0x12D5D20")]
		private Vector3? GetControllerInteractionForce()
		{
			return null;
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x12D5B78", Offset = "0x12D5B78", VA = "0x12D5B78")]
		private void UpdateFaceForces()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x12D6390", Offset = "0x12D6390", VA = "0x12D6390")]
		private Vector3? GetFaceInteractionForce()
		{
			return null;
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x12D59A0", Offset = "0x12D59A0", VA = "0x12D59A0")]
		private void UpdateIntroAnimation()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x12D5C14", Offset = "0x12D5C14", VA = "0x12D5C14")]
		private void UpdateHoldingAnimation()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x12D5FC0", Offset = "0x12D5FC0", VA = "0x12D5FC0")]
		private void UpdateFallingAnimation()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x12D53AC", Offset = "0x12D53AC", VA = "0x12D53AC")]
		private void UpdateScale(float fScale)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x12D64A8", Offset = "0x12D64A8", VA = "0x12D64A8")]
		public InfoCardAnimation()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class AnimateOculusTouchSteam : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ControllerGeometry m_geometry;

		[Token(Token = "0x17000361")]
		public ControllerInfo Controller
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xFE2A94", Offset = "0xFE2A94", VA = "0xFE2A94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xFE2B28", Offset = "0xFE2B28", VA = "0xFE2B28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xFE2CB8", Offset = "0xFE2CB8", VA = "0xFE2CB8")]
		private void Update()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xFE2EE4", Offset = "0xFE2EE4", VA = "0xFE2EE4")]
		public AnimateOculusTouchSteam()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class ArFoundationControllerInfo : ControllerInfo
	{
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB31FBC", Offset = "0xB31FBC")]
		private bool <IsTrackedObjectValid>k__BackingField;

		[Token(Token = "0x17000362")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xFEF0F8", Offset = "0xFEF0F8", VA = "0xFEF0F8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CF84", Offset = "0xB3CF84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193C")]
			[Address(RVA = "0xFEF100", Offset = "0xFEF100", VA = "0xFEF100", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3CF94", Offset = "0xB3CF94")]
			set
			{
			}
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xFEF10C", Offset = "0xFEF10C", VA = "0xFEF10C")]
		public ArFoundationControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xFEF114", Offset = "0xFEF114", VA = "0xFEF114", Slot = "9")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xFEF11C", Offset = "0xFEF11C", VA = "0xFEF11C", Slot = "10")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xFEF124", Offset = "0xFEF124", VA = "0xFEF124", Slot = "11")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xFEF12C", Offset = "0xFEF12C", VA = "0xFEF12C", Slot = "12")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xFEF134", Offset = "0xFEF134", VA = "0xFEF134", Slot = "13")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xFEF13C", Offset = "0xFEF13C", VA = "0xFEF13C", Slot = "14")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xFEF144", Offset = "0xFEF144", VA = "0xFEF144", Slot = "15")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xFEF14C", Offset = "0xFEF14C", VA = "0xFEF14C", Slot = "16")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xFEF154", Offset = "0xFEF154", VA = "0xFEF154", Slot = "19")]
		public override bool GetVrInputTouch(VrInput button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xFEF15C", Offset = "0xFEF15C", VA = "0xFEF15C", Slot = "17")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xFEF178", Offset = "0xFEF178", VA = "0xFEF178", Slot = "18")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xFEF194", Offset = "0xFEF194", VA = "0xFEF194", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class BaseControllerBehavior : MonoBehaviour
	{
		[Token(Token = "0x20003E5")]
		public enum GripState
		{
			[Token(Token = "0x4001945")]
			Standard,
			[Token(Token = "0x4001946")]
			ReadyToGrip,
			[Token(Token = "0x4001947")]
			Gripped
		}

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2983C", Offset = "0xB2983C")]
		private sealed class <GlowHands>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BaseControllerBehavior <>4__this;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int delay;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OculusHandController <handController>5__2;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001967")]
				[Address(RVA = "0x1124474", Offset = "0x1124474", VA = "0x1124474", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001969")]
				[Address(RVA = "0x11244BC", Offset = "0x11244BC", VA = "0x11244BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001964")]
			[Address(RVA = "0x11242FC", Offset = "0x11242FC", VA = "0x11242FC")]
			[DebuggerHidden]
			public <GlowHands>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1124328", Offset = "0x1124328", VA = "0x1124328", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001966")]
			[Address(RVA = "0x112432C", Offset = "0x112432C", VA = "0x112432C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001968")]
			[Address(RVA = "0x112447C", Offset = "0x112447C", VA = "0x112447C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputManager.ControllerName m_ControllerName;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerGeometry m_ControllerGeometryPrefab;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB31FEC", Offset = "0xB31FEC")]
		private Vector3 m_GeometryOffset;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB32038", Offset = "0xB32038")]
		private Quaternion m_GeometryRotation;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_Tint;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_BaseIntensity;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_GlowIntensity;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private GripState m_CurrentGripState;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ControllerGeometry m_ControllerGeometry;

		[Token(Token = "0x17000363")]
		public InputManager.ControllerName ControllerName
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x143CE00", Offset = "0x143CE00", VA = "0x143CE00")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x17000364")]
		private GameObject TransformVisuals
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x143CE08", Offset = "0x143CE08", VA = "0x143CE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public ControllerGeometry ControllerGeometry
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x143CE30", Offset = "0x143CE30", VA = "0x143CE30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public ControllerInfo ControllerInfo
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x143D038", Offset = "0x143D038", VA = "0x143D038")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public Transform PointerAttachAnchor
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x143D290", Offset = "0x143D290", VA = "0x143D290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public Transform PointerAttachPoint
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x143D2B0", Offset = "0x143D2B0", VA = "0x143D2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public Transform ToolAttachAnchor
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x143D2D0", Offset = "0x143D2D0", VA = "0x143D2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public Transform PinCushionSpawn
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x143D2F0", Offset = "0x143D2F0", VA = "0x143D2F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x143CEB4", Offset = "0x143CEB4", VA = "0x143CEB4")]
		public void InstantiateControllerGeometryFromPrefab(ControllerGeometry prefab)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x143D310", Offset = "0x143D310", VA = "0x143D310")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x143D318", Offset = "0x143D318", VA = "0x143D318")]
		private void Update()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x143D7E0", Offset = "0x143D7E0", VA = "0x143D7E0", Slot = "4")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x143D7E4", Offset = "0x143D7E4", VA = "0x143D7E4", Slot = "5")]
		public virtual void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x143D7E8", Offset = "0x143D7E8", VA = "0x143D7E8", Slot = "6")]
		public virtual void DisplayControllerSwapAnimation()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x143DAE0", Offset = "0x143DAE0", VA = "0x143DAE0")]
		public void BuzzAndGlow(float buzzLength, int numPulses, float interval)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x143DA64", Offset = "0x143DA64", VA = "0x143DA64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3CFA4", Offset = "0xB3CFA4")]
		private IEnumerator GlowHands(int delay)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x143DDA4", Offset = "0x143DDA4", VA = "0x143DDA4")]
		private static void SwapPoses(Transform a, Transform b)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x143D0DC", Offset = "0x143D0DC", VA = "0x143D0DC")]
		private void SetGeometry(ControllerGeometry geom)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x143DEC8", Offset = "0x143DEC8", VA = "0x143DEC8")]
		public static void SwapBehaviors(BaseControllerBehavior a, BaseControllerBehavior b)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x143DF48", Offset = "0x143DF48", VA = "0x143DF48")]
		public void SetTouchLocatorActive(bool active)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x143E014", Offset = "0x143E014", VA = "0x143E014")]
		public void SetTouchLocatorPosition(Vector2 loc)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x143E168", Offset = "0x143E168", VA = "0x143E168")]
		public void SetTint(Color rTintColor, float fBaseIntensity, float fGlowIntensity)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x143D7C8", Offset = "0x143D7C8", VA = "0x143D7C8")]
		private Color GetTintColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x143E42C", Offset = "0x143E42C", VA = "0x143E42C")]
		public void EnableTransformVisuals(bool bEnable, float fIntensity)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x143E528", Offset = "0x143E528", VA = "0x143E528")]
		public void SetGripState(GripState state)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x143E8C8", Offset = "0x143E8C8", VA = "0x143E8C8")]
		public BaseControllerBehavior()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class ControllerActivationEffectScript : MonoBehaviour
	{
		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Time;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Duration;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_Renderer;

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x15902F4", Offset = "0x15902F4", VA = "0x15902F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1590348", Offset = "0x1590348", VA = "0x1590348")]
		private void Update()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x159048C", Offset = "0x159048C", VA = "0x159048C")]
		public ControllerActivationEffectScript()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class ControllerBehaviorBrush : BaseControllerBehavior
	{
		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1590494", Offset = "0x1590494", VA = "0x1590494")]
		public void EnablePointAtPanelsHintObject(bool bEnable)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1590564", Offset = "0x1590564", VA = "0x1590564", Slot = "5")]
		public override void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x15905A0", Offset = "0x15905A0", VA = "0x15905A0")]
		public ControllerBehaviorBrush()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class ControllerBehaviorWand : BaseControllerBehavior
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_QuickLoadHintRequested;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_QuickLoadHintFirstAppearance;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x15905A8", Offset = "0x15905A8", VA = "0x15905A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x15905B0", Offset = "0x15905B0", VA = "0x15905B0")]
		public void EnableQuickLoadHintObject(bool bEnable)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x15905C4", Offset = "0x15905C4", VA = "0x15905C4")]
		public void EnableSketchbookPanelActivateHint(bool bEnable)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1590600", Offset = "0x1590600", VA = "0x1590600", Slot = "4")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1590864", Offset = "0x1590864", VA = "0x1590864", Slot = "5")]
		public override void ActivateHint(bool bActivate)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x15908A0", Offset = "0x15908A0", VA = "0x15908A0")]
		public ControllerBehaviorWand()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class ControllerConsoleScript : MonoBehaviour
	{
		[Token(Token = "0x20003EB")]
		public class InfoLine
		{
			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Line;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMesh m_TextMesh;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer m_Renderer;

			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_LineWidth;

			[Token(Token = "0x6001982")]
			[Address(RVA = "0x1125DC4", Offset = "0x1125DC4", VA = "0x1125DC4")]
			public InfoLine()
			{
			}
		}

		[Token(Token = "0x20003EC")]
		private enum State
		{
			[Token(Token = "0x400197A")]
			Disabled,
			[Token(Token = "0x400197B")]
			DelayBeforeActivate,
			[Token(Token = "0x400197C")]
			Activating,
			[Token(Token = "0x400197D")]
			Active,
			[Token(Token = "0x400197E")]
			Disabling
		}

		[Token(Token = "0x4001952")]
		private const int kSplitSearchMagnitude = 10;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerConsoleScript m_Instance;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_RenderablesParent;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_DynamicBackground;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Title;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Clock;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_Notification;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_NotificationAnchor;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_AutosaveIcon;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_NotificationDisplayDuration;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector2 m_NotificationShrinkRange;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_InfoLinePrefab;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 m_BaseLineLocalPositionOffset;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_LineSpacing;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int m_NumLines;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_MinBackgroundWidth;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InputManager.ControllerName m_AttachedControllerName;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color m_StandardTextColor;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Color m_NotificationTextColor;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_NotificationHapticPulse;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_NotificationHapticTimeOffset;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_MaxLineWidth;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Renderer[] m_MeshRenderers;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_NotificationDisplayTimer;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_LastLoggedLine;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private InfoLine[] m_InfoLines;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_LineOperateIndex;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_ActivationAngle_Default;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_ActivationAngle_LogitechPen;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_ActivateAngle;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_ActivateSpeed;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_ActivateTimer;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_ActivateDelayDuration;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_ActivateDelayTimer;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private State m_CurrentState;

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x1590ACC", Offset = "0x1590ACC", VA = "0x1590ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x1591188", Offset = "0x1591188", VA = "0x1591188")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x1591230", Offset = "0x1591230", VA = "0x1591230")]
		private void Start()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x15912B8", Offset = "0x15912B8", VA = "0x15912B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x1591094", Offset = "0x1591094", VA = "0x1591094")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x15917EC", Offset = "0x15917EC", VA = "0x15917EC")]
		private void UpdateMeterScale(float fRatio)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x159090C", Offset = "0x159090C", VA = "0x159090C")]
		public void AddNewLine(string sText, bool bNotify = false, bool skipLog = false)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1591838", Offset = "0x1591838", VA = "0x1591838")]
		private void AddNewLineImpl(string sText, bool bNotify = false)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1590E8C", Offset = "0x1590E8C", VA = "0x1590E8C")]
		private void UpdateBackgroundWidth()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1591C4C", Offset = "0x1591C4C", VA = "0x1591C4C")]
		private void AttachToBrush()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1591CC0", Offset = "0x1591CC0", VA = "0x1591CC0")]
		public void AttachToController(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1591E1C", Offset = "0x1591E1C", VA = "0x1591E1C")]
		public ControllerConsoleScript()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class ControllerGeometry : MonoBehaviour
	{
		[Token(Token = "0x20003EE")]
		private class PopupAnimState
		{
			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly VrInput input;

			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Transform anchor;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly float initialY;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public readonly float initialScale;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float current;

			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x1125DCC", Offset = "0x1125DCC", VA = "0x1125DCC")]
			public PopupAnimState(Transform anchor, VrInput input)
			{
			}
		}

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerStyle m_ControllerStyle;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_PointerAttachAnchor;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_PointerAttachPoint;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_ToolAttachAnchor;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_ToolAttachPoint;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_PinCushionSpawn;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_MainAxisAttachPoint;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_CameraAttachPoint;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_ConsoleAttachPoint;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_BaseAttachPoint;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_GripAttachPoint;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_DropperDescAttachPoint;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_MainMesh;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Renderer m_TriggerMesh;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer[] m_OtherMeshes;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Renderer m_LeftGripMesh;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_RightGripMesh;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform m_PadTouchLocator;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_TriggerAnchor;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HintObjectScript m_PinHint;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private HintObjectScript m_UnpinHint;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private HintObjectScript m_PreviewKnotHint;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_TransformVisualsRenderer;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject m_ActivateEffectPrefab;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject m_HighlightEffectPrefab;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject m_XRayVisuals;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB32394", Offset = "0xB32394")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32394", Offset = "0xB32394")]
		[SerializeField]
		private Vector2 m_TriggerRotation;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_TouchLocatorTranslateScale;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private float m_TouchLocatorTranslateClamp;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_GripReadyMaterial;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Material m_GrippedMaterial;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector3 m_LeftGripPopInVector;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private Vector3 m_LeftGripPopOutVector;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32464", Offset = "0xB32464")]
		[SerializeField]
		private float m_PadPopUpAmount;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private float m_PadScaleAmount;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float m_PadSpeed;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB324D0", Offset = "0xB324D0")]
		private float m_HapticPulseOn;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float m_HapticPulseOff;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3252C", Offset = "0xB3252C")]
		[SerializeField]
		private Transform m_PadAnchor;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_PadMesh;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32588", Offset = "0xB32588")]
		[SerializeField]
		private Transform m_Joystick;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Renderer m_JoystickMesh;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Renderer m_JoystickPad;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Renderer m_Button01Mesh;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Renderer m_Button02Mesh;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32614", Offset = "0xB32614")]
		private Renderer m_PinCushion;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32660", Offset = "0xB32660")]
		private HintObjectScript m_QuickLoadHintObject;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private HintObjectScript m_SwipeHint;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private HintObjectScript m_MenuPanelHintObject;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB326CC", Offset = "0xB326CC")]
		[SerializeField]
		private LineRenderer m_GuideLine;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private HintObjectScript m_PaintHintObject;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private HintObjectScript m_BrushSizeHintObject;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private HintObjectScript m_PointAtPanelsHintObject;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private HintObjectScript m_ShareSketchHintObject;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private HintObjectScript m_FloatingPanelHintObject;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private HintObjectScript m_AdvancedModeHintObject;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private HintObjectScript m_SelectionHint;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private GameObject m_SelectionHintButton;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private HintObjectScript m_DeselectionHint;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GameObject m_DeselectionHintButton;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private HintObjectScript m_DuplicateHint;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private HintObjectScript m_SaveIconHint;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB327D8", Offset = "0xB327D8")]
		[SerializeField]
		public bool m_HandsActive;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public HintObjectScript m_SwapControllersHintObject;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32824", Offset = "0xB32824")]
		public HintObjectScript m_TriggerToPaintHintHands;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public HintObjectScript m_PointAtPanelsHintObjectHands;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public HintObjectScript m_SwipeToUnlockHintHands;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3285C", Offset = "0xB3285C")]
		private bool <PadEnabled>k__BackingField;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private PopupAnimState m_JoyAnimState;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private PopupAnimState m_PadAnimState;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int m_LastPadButton;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Material m_BaseGrippedMaterial;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float m_LogitechPenHandednessHysteresis;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool m_LogitechPenHandedness;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private BaseControllerBehavior m_Behavior;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private InputManager.ControllerName m_ControllerName;

		[Token(Token = "0x1700036D")]
		public Vector2 TriggerRotation
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x1591E40", Offset = "0x1591E40", VA = "0x1591E40")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700036E")]
		public float TouchLocatorTranslateScale
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0x1591E48", Offset = "0x1591E48", VA = "0x1591E48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036F")]
		public float TouchLocatorTranslateClamp
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0x1591E50", Offset = "0x1591E50", VA = "0x1591E50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000370")]
		public Material GripReadyMaterial
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0x1591E58", Offset = "0x1591E58", VA = "0x1591E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public Material GrippedMaterial
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0x1591E60", Offset = "0x1591E60", VA = "0x1591E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public Material BaseGrippedMaterial
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x1591E68", Offset = "0x1591E68", VA = "0x1591E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public Vector3 LeftGripPopInVector
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x1591E70", Offset = "0x1591E70", VA = "0x1591E70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000374")]
		public Vector3 LeftGripPopOutVector
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x1591E80", Offset = "0x1591E80", VA = "0x1591E80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000375")]
		public Transform PointerAttachAnchor
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x1591E90", Offset = "0x1591E90", VA = "0x1591E90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public Transform PointerAttachPoint
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x1591E98", Offset = "0x1591E98", VA = "0x1591E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public Transform ToolAttachAnchor
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x1591EA0", Offset = "0x1591EA0", VA = "0x1591EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		public Transform ToolAttachPoint
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x1591EA8", Offset = "0x1591EA8", VA = "0x1591EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public Transform PinCushionSpawn
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x1591EB0", Offset = "0x1591EB0", VA = "0x1591EB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		public Transform MainAxisAttachPoint
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x1591EB8", Offset = "0x1591EB8", VA = "0x1591EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public Transform CameraAttachPoint
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x1591EC0", Offset = "0x1591EC0", VA = "0x1591EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public Transform ConsoleAttachPoint
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1591EC8", Offset = "0x1591EC8", VA = "0x1591EC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public Transform BaseAttachPoint
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x1591ED0", Offset = "0x1591ED0", VA = "0x1591ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public Transform GripAttachPoint
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x1591ED8", Offset = "0x1591ED8", VA = "0x1591ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		public Transform DropperDescAttachPoint
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x1591EE0", Offset = "0x1591EE0", VA = "0x1591EE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public Renderer MainMesh
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x1591EE8", Offset = "0x1591EE8", VA = "0x1591EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		public Renderer TriggerMesh
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x1591EF0", Offset = "0x1591EF0", VA = "0x1591EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public Renderer[] OtherMeshes
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x1591EF8", Offset = "0x1591EF8", VA = "0x1591EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public Renderer LeftGripMesh
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x1591F00", Offset = "0x1591F00", VA = "0x1591F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public Renderer RightGripMesh
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x1591F08", Offset = "0x1591F08", VA = "0x1591F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public Transform PadTouchLocator
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x1591F10", Offset = "0x1591F10", VA = "0x1591F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public Transform TriggerAnchor
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x1591F18", Offset = "0x1591F18", VA = "0x1591F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public HintObjectScript PinHint
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x1591F20", Offset = "0x1591F20", VA = "0x1591F20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public HintObjectScript UnpinHint
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1591F28", Offset = "0x1591F28", VA = "0x1591F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		public HintObjectScript PreviewKnotHint
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x1591F30", Offset = "0x1591F30", VA = "0x1591F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		public HintObjectScript SelectionHint
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x1591F38", Offset = "0x1591F38", VA = "0x1591F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		public GameObject SelectionHintButton
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x1591F40", Offset = "0x1591F40", VA = "0x1591F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public HintObjectScript DeselectionHint
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x1591F48", Offset = "0x1591F48", VA = "0x1591F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		public GameObject DeselectionHintButton
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x1591F50", Offset = "0x1591F50", VA = "0x1591F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		public HintObjectScript DuplicateHint
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x1591F58", Offset = "0x1591F58", VA = "0x1591F58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		public HintObjectScript SaveIconHint
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1591F60", Offset = "0x1591F60", VA = "0x1591F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		public Renderer TransformVisualsRenderer
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1591F68", Offset = "0x1591F68", VA = "0x1591F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		public GameObject ActivateEffectPrefab
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x1591F70", Offset = "0x1591F70", VA = "0x1591F70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public GameObject HighlightEffectPrefab
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x1591F78", Offset = "0x1591F78", VA = "0x1591F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public GameObject XRayVisuals
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x1591F80", Offset = "0x1591F80", VA = "0x1591F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public Transform PadAnchor
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x1591F88", Offset = "0x1591F88", VA = "0x1591F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public Renderer PadMesh
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1591F90", Offset = "0x1591F90", VA = "0x1591F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public Transform Joystick
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x1591F98", Offset = "0x1591F98", VA = "0x1591F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public Renderer JoystickMesh
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0x1591FA0", Offset = "0x1591FA0", VA = "0x1591FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public Renderer JoystickPad
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x1591FA8", Offset = "0x1591FA8", VA = "0x1591FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public Renderer Button01Mesh
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x1591FB0", Offset = "0x1591FB0", VA = "0x1591FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public Renderer Button02Mesh
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x1591FB8", Offset = "0x1591FB8", VA = "0x1591FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public Renderer PinCushionMesh
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x1591FC0", Offset = "0x1591FC0", VA = "0x1591FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		public HintObjectScript QuickLoadHintObject
		{
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x1591FC8", Offset = "0x1591FC8", VA = "0x1591FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public HintObjectScript SwipeHintObject
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0x1591FD0", Offset = "0x1591FD0", VA = "0x1591FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x1591FD8", Offset = "0x1591FD8", VA = "0x1591FD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public HintObjectScript MenuPanelHintObject
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x1591FE0", Offset = "0x1591FE0", VA = "0x1591FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public LineRenderer GuideLine
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x1591FE8", Offset = "0x1591FE8", VA = "0x1591FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public HintObjectScript PaintHintObject
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1591FF0", Offset = "0x1591FF0", VA = "0x1591FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x1591FF8", Offset = "0x1591FF8", VA = "0x1591FF8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public HintObjectScript BrushSizeHintObject
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x1592000", Offset = "0x1592000", VA = "0x1592000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		public HintObjectScript PointAtPanelsHintObject
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x1592008", Offset = "0x1592008", VA = "0x1592008")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x1592010", Offset = "0x1592010", VA = "0x1592010")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public HintObjectScript ShareSketchHintObject
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1592018", Offset = "0x1592018", VA = "0x1592018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public HintObjectScript FloatingPanelHintObject
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x1592020", Offset = "0x1592020", VA = "0x1592020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public HintObjectScript AdvancedModeHintObject
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x1592028", Offset = "0x1592028", VA = "0x1592028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public bool PadEnabled
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x1592030", Offset = "0x1592030", VA = "0x1592030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D054", Offset = "0xB3D054")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x1592038", Offset = "0x1592038", VA = "0x1592038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D064", Offset = "0xB3D064")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public BaseControllerBehavior Behavior
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x1592044", Offset = "0x1592044", VA = "0x1592044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public InputManager.ControllerName ControllerName
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x159204C", Offset = "0x159204C", VA = "0x159204C")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x170003A9")]
		public ControllerStyle Style
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1592054", Offset = "0x1592054", VA = "0x1592054")]
			get
			{
				return default(ControllerStyle);
			}
		}

		[Token(Token = "0x170003AA")]
		public ControllerStyle TempWritableStyle
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x159205C", Offset = "0x159205C", VA = "0x159205C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public ControllerInfo ControllerInfo
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x15921E0", Offset = "0x15921E0", VA = "0x15921E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		private bool EmptyGeometry
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x15921FC", Offset = "0x15921FC", VA = "0x15921FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AD")]
		private ControllerMaterialCatalog Materials
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x1592300", Offset = "0x1592300", VA = "0x1592300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1592210", Offset = "0x1592210", VA = "0x1592210")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x159234C", Offset = "0x159234C", VA = "0x159234C")]
		private float GetPadRatio(VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x15923D4", Offset = "0x15923D4", VA = "0x15923D4")]
		private void UpdatePadAnimation(PopupAnimState state, Material active)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x15926C8", Offset = "0x15926C8", VA = "0x15926C8")]
		private void UpdateLogitechPadHandedness(Transform padXf)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x159277C", Offset = "0x159277C", VA = "0x159277C")]
		private Material SelectPadTouched(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x15927E4", Offset = "0x15927E4", VA = "0x15927E4")]
		private Material SelectThumbStickTouched(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x159284C", Offset = "0x159284C", VA = "0x159284C")]
		private Material SelectBasedOn(Material active, Material inactive)
		{
			return null;
		}

		[Token(Token = "0x60019CF")]
		private T SelectIfTouched<T>(VrInput input, T active, T inactive)
		{
			return (T)null;
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x15929A8", Offset = "0x15929A8", VA = "0x15929A8")]
		private void SetColor(Renderer obj, VrInput input, string colorName, Color activeColor, Color inactiveColor)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1592B04", Offset = "0x1592B04", VA = "0x1592B04")]
		private void RefreshMaterialTint(Color tintColor)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1592D08", Offset = "0x1592D08", VA = "0x1592D08")]
		private void UpdateButtonColor()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1593010", Offset = "0x1593010", VA = "0x1593010")]
		public void OnHandsAvailable(bool active)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1593060", Offset = "0x1593060", VA = "0x1593060")]
		public void OnBehaviorChanged()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1593178", Offset = "0x1593178", VA = "0x1593178")]
		public void OnMaterialsAssigned(Color tintColor)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x159327C", Offset = "0x159327C", VA = "0x159327C")]
		public void ShowTutorialMode()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1593610", Offset = "0x1593610", VA = "0x1593610")]
		public void TogglePadSnapHint(bool snappingOn, bool enabled)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1593714", Offset = "0x1593714", VA = "0x1593714")]
		public void EnableSwapControllersHint(bool bEnabled)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x15937B4", Offset = "0x15937B4", VA = "0x15937B4")]
		public void ToggleCancelOnly(bool enabled, bool enableFillTimer = true)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1593924", Offset = "0x1593924", VA = "0x1593924")]
		public void ShowWorldTransformReset()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1593A14", Offset = "0x1593A14", VA = "0x1593A14")]
		public void ShowBrushSizer()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1593CC8", Offset = "0x1593CC8", VA = "0x1593CC8")]
		public void ShowSelectionToggle()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1593FFC", Offset = "0x1593FFC", VA = "0x1593FFC")]
		public void ShowPinToggle(bool isPinning)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x1594390", Offset = "0x1594390", VA = "0x1594390")]
		public void ShowDuplicateOption()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1594500", Offset = "0x1594500", VA = "0x1594500")]
		public void ShowSelectionOptions()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x15945F8", Offset = "0x15945F8", VA = "0x15945F8")]
		public void ToggleTrash(bool enabled)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1594784", Offset = "0x1594784", VA = "0x1594784")]
		public void ShowMulticamSwipe(bool showHint)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1594A7C", Offset = "0x1594A7C", VA = "0x1594A7C")]
		public void ShowCapturingVideo()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1594B6C", Offset = "0x1594B6C", VA = "0x1594B6C")]
		public void ShowShareVideo()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1594DB4", Offset = "0x1594DB4", VA = "0x1594DB4")]
		public void ShowShareOrCancel()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x15953A0", Offset = "0x15953A0", VA = "0x15953A0")]
		public void ShowRotatePanels()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x15954E8", Offset = "0x15954E8", VA = "0x15954E8")]
		public void ShowUndoRedo(bool canUndo, bool canRedo)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x1595770", Offset = "0x1595770", VA = "0x1595770")]
		public void ShowPinCushion()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x159585C", Offset = "0x159585C", VA = "0x159585C")]
		public void ShowBrushPage(bool active)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1595B20", Offset = "0x1595B20", VA = "0x1595B20")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1595E0C", Offset = "0x1595E0C", VA = "0x1595E0C")]
		public ControllerGeometry()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class ControllerGrabVisuals : MonoBehaviour
	{
		[Token(Token = "0x20003F0")]
		public enum VisualState
		{
			[Token(Token = "0x40019EC")]
			Off,
			[Token(Token = "0x40019ED")]
			WorldWandGrip,
			[Token(Token = "0x40019EE")]
			WorldBrushGrip,
			[Token(Token = "0x40019EF")]
			WorldDoubleGrip,
			[Token(Token = "0x40019F0")]
			WidgetWandGrip,
			[Token(Token = "0x40019F1")]
			WidgetBrushGrip
		}

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Line;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_LineOutline;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_LineHorizontalOffset;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_LineOutlineWidth;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_LineBaseWidth;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_HintIntensity;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_DrawInDuration;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_AnimalRulerAnchor;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer m_AnimalRuler;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_AnimalRulerUZeroPoint;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_AnimalRulerUExtent;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector2 m_AnimalRulerSquishRange;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2 m_AnimalRulerShrinkRange;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_AnimalRulerScaleSpeed;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_AnimalRulerTextureRatio;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer m_LineRenderer;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer m_LineOutlineRenderer;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Renderer[] m_AnimalRulerRenderers;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VisualState m_CurrentVisualState;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private VisualState m_DesiredVisualState;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_Intensity;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_LineDrawInTime;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_LineT;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_AnimalRulerRequestVisible;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_HeldWidget;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_WandInWidgetRange;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_BrushInWidgetRange;

		[Token(Token = "0x170003AE")]
		public bool WandInWidgetRange
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x1595E30", Offset = "0x1595E30", VA = "0x1595E30")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public bool BrushInWidgetRange
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1595F18", Offset = "0x1595F18", VA = "0x1595F18")]
			set
			{
			}
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1595FFC", Offset = "0x1595FFC", VA = "0x1595FFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x15961A0", Offset = "0x15961A0", VA = "0x15961A0")]
		public void SetDesiredVisualState(VisualState state)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x15961A8", Offset = "0x15961A8", VA = "0x15961A8")]
		public void SetHeldWidget(Transform xfWidget)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x15961B0", Offset = "0x15961B0", VA = "0x15961B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x159668C", Offset = "0x159668C", VA = "0x159668C")]
		private void UpdateLineT()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x1596AF8", Offset = "0x1596AF8", VA = "0x1596AF8")]
		private Vector3 GetControllerAttachPos(InputManager.ControllerName controllerName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x159670C", Offset = "0x159670C", VA = "0x159670C")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x15962AC", Offset = "0x15962AC", VA = "0x15962AC")]
		private void SwitchState()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x1595E3C", Offset = "0x1595E3C", VA = "0x1595E3C")]
		private void UpdateWandControllerGripState()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x1595F24", Offset = "0x1595F24", VA = "0x1595F24")]
		private void UpdateBrushControllerGripState()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x1596BC4", Offset = "0x1596BC4", VA = "0x1596BC4")]
		private void UpdateAnimalRuler()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x1596154", Offset = "0x1596154", VA = "0x1596154")]
		private void SetAnimalRulerScale(float fScale)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x1597038", Offset = "0x1597038", VA = "0x1597038")]
		public ControllerGrabVisuals()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public abstract class ControllerInfo
	{
		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 m_Position;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 m_Velocity;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Acceleration;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_WasTracked;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_TimeSinceHapticTrigger;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_HapticPulseCount;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_HapticTimer;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_HapticInterval;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_HapticPulseLength;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<VrInput, Vector2> m_InputHoldTimers;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VrInput? m_LastHeldInput;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Transform m_Transform;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly BaseControllerBehavior m_Behavior;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ControllerTutorialScript m_Tutorial;

		[Token(Token = "0x170003B0")]
		public BaseControllerBehavior Behavior
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x15970D0", Offset = "0x15970D0", VA = "0x15970D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public Transform Transform
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x15970D8", Offset = "0x15970D8", VA = "0x15970D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		public ControllerGeometry Geometry
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x1596BA8", Offset = "0x1596BA8", VA = "0x1596BA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		public ControllerTutorialScript Tutorial
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x15970E0", Offset = "0x15970E0", VA = "0x15970E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public abstract bool IsTrackedObjectValid
		{
			[Token(Token = "0x6001A00")]
			get;
			[Token(Token = "0x6001A01")]
			set;
		}

		[Token(Token = "0x170003B5")]
		public VrInput? LastHeldInput
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x15970E8", Offset = "0x15970E8", VA = "0x15970E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x15970F0", Offset = "0x15970F0", VA = "0x15970F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		private float ButtonTimerThreshold
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x15970F8", Offset = "0x15970F8", VA = "0x15970F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x1597068", Offset = "0x1597068", VA = "0x1597068")]
		protected static bool IsInPosition(Vector2 padOrStickPos, VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1597160", Offset = "0x1597160", VA = "0x1597160")]
		public ControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x159726C", Offset = "0x159726C", VA = "0x159726C", Slot = "6")]
		public virtual void ShowController(bool bShow)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x159732C", Offset = "0x159732C", VA = "0x159732C", Slot = "7")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x15973B0", Offset = "0x15973B0", VA = "0x15973B0", Slot = "8")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x15928A4", Offset = "0x15928A4", VA = "0x15928A4")]
		public bool GetCommand(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x1597438", Offset = "0x1597438", VA = "0x1597438")]
		public bool GetCommandDown(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x1597538", Offset = "0x1597538", VA = "0x1597538")]
		public VrInput? GetCommandHoldInput(InputManager.SketchCommands rCommand)
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x15975EC", Offset = "0x15975EC", VA = "0x15975EC")]
		public bool GetCommandHeld(InputManager.SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x1597878", Offset = "0x1597878", VA = "0x1597878")]
		public VrInput? GetLastHeldInput()
		{
			return null;
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x1597970", Offset = "0x1597970", VA = "0x1597970")]
		public float GetCommandHoldProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x1597680", Offset = "0x1597680", VA = "0x1597680")]
		private bool UpdateCommandHold(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x15973E8", Offset = "0x15973E8", VA = "0x15973E8")]
		public bool IsTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x1597524", Offset = "0x1597524", VA = "0x1597524")]
		public bool IsTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x15973FC", Offset = "0x15973FC", VA = "0x15973FC")]
		public bool GetPadTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x1597410", Offset = "0x1597410", VA = "0x1597410")]
		public bool GetThumbStickTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x1597424", Offset = "0x1597424", VA = "0x1597424")]
		public bool GetControllerGrip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		public abstract float GetTriggerRatio();

		[Token(Token = "0x6001A16")]
		public abstract Vector2 GetPadValue();

		[Token(Token = "0x6001A17")]
		public abstract Vector2 GetThumbStickValue();

		[Token(Token = "0x6001A18")]
		public abstract Vector2 GetPadValueDelta();

		[Token(Token = "0x6001A19")]
		public abstract float GetGripValue();

		[Token(Token = "0x6001A1A")]
		public abstract float GetTriggerValue();

		[Token(Token = "0x6001A1B")]
		public abstract float GetScrollXDelta();

		[Token(Token = "0x6001A1C")]
		public abstract float GetScrollYDelta();

		[Token(Token = "0x6001A1D")]
		public abstract bool GetVrInput(VrInput input);

		[Token(Token = "0x6001A1E")]
		public abstract bool GetVrInputDown(VrInput input);

		[Token(Token = "0x6001A1F")]
		public abstract bool GetVrInputTouch(VrInput input);

		[Token(Token = "0x6001A20")]
		public abstract void TriggerControllerHaptics(float seconds);
	}
	[Serializable]
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2984C", Offset = "0xB2984C")]
	public class ControllerMaterialCatalog : MonoBehaviour
	{
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB29860", Offset = "0xB29860")]
		public class CatalogMaterialAttribute : Attribute
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x1125E8C", Offset = "0x1125E8C", VA = "0x1125E8C")]
			public CatalogMaterialAttribute()
			{
			}
		}

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControllerMaterialCatalog m_Instance;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_Standard;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3295C", Offset = "0xB3295C")]
		private Material <Standard>k__BackingField;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_Blank;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3297C", Offset = "0xB3297C")]
		private Material <Blank>k__BackingField;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_SnapOn;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3299C", Offset = "0xB3299C")]
		private Material <SnapOn>k__BackingField;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_SnapOff;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB329BC", Offset = "0xB329BC")]
		private Material <SnapOff>k__BackingField;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material m_PanelsRotate;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB329DC", Offset = "0xB329DC")]
		private Material <PanelsRotate>k__BackingField;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material m_UndoRedo;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB329FC", Offset = "0xB329FC")]
		private Material <UndoRedo>k__BackingField;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material m_UndoRedo_Undo;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A1C", Offset = "0xB32A1C")]
		private Material <UndoRedo_Undo>k__BackingField;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Material m_UndoRedo_Redo;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A3C", Offset = "0xB32A3C")]
		private Material <UndoRedo_Redo>k__BackingField;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Material m_Undo;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A5C", Offset = "0xB32A5C")]
		private Material <Undo>k__BackingField;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Material m_Redo;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A7C", Offset = "0xB32A7C")]
		private Material <Redo>k__BackingField;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Material m_WorldTransformReset;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32A9C", Offset = "0xB32A9C")]
		private Material <WorldTransformReset>k__BackingField;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material m_PinCushion;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32ABC", Offset = "0xB32ABC")]
		private Material <PinCushion>k__BackingField;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Material m_Cancel;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32ADC", Offset = "0xB32ADC")]
		private Material <Cancel>k__BackingField;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Material m_Cancel_Rot180;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32AFC", Offset = "0xB32AFC")]
		private Material <Cancel_Rot180>k__BackingField;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material m_Multicam;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32B1C", Offset = "0xB32B1C")]
		private Material <Multicam>k__BackingField;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Material m_MulticamActive;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32B3C", Offset = "0xB32B3C")]
		private Material <MulticamActive>k__BackingField;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Material m_MulticamSwipeHint;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32B5C", Offset = "0xB32B5C")]
		private Material <MulticamSwipeHint>k__BackingField;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Material m_TutorialPad;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32B7C", Offset = "0xB32B7C")]
		private Material <TutorialPad>k__BackingField;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Material m_YesOrCancel;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32B9C", Offset = "0xB32B9C")]
		private Material <YesOrCancel>k__BackingField;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Material m_YesOrCancel_Yes;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32BBC", Offset = "0xB32BBC")]
		private Material <YesOrCancel_Yes>k__BackingField;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Material m_YesOrCancel_Cancel;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32BDC", Offset = "0xB32BDC")]
		private Material <YesOrCancel_Cancel>k__BackingField;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Material m_YesOrCancel_Rot180;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32BFC", Offset = "0xB32BFC")]
		private Material <YesOrCancel_Rot180>k__BackingField;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Material m_YesOrCancel_Yes_Rot180;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C1C", Offset = "0xB32C1C")]
		private Material <YesOrCancel_Yes_Rot180>k__BackingField;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Material m_YesOrCancel_Cancel_Rot180;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C3C", Offset = "0xB32C3C")]
		private Material <YesOrCancel_Cancel_Rot180>k__BackingField;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Material m_Yes;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C5C", Offset = "0xB32C5C")]
		private Material <Yes>k__BackingField;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Material m_Yes_Rot180;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C7C", Offset = "0xB32C7C")]
		private Material <Yes_Rot180>k__BackingField;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Material m_ShareYt;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32C9C", Offset = "0xB32C9C")]
		private Material <ShareYt>k__BackingField;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Material m_ShareYtActive;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32CBC", Offset = "0xB32CBC")]
		private Material <ShareYtActive>k__BackingField;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private Material m_ShareYtActive_Rot180;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32CDC", Offset = "0xB32CDC")]
		private Material <ShareYtActive_Rot180>k__BackingField;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Material m_Trash;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32CFC", Offset = "0xB32CFC")]
		private Material <Trash>k__BackingField;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Material m_BrushPage;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32D1C", Offset = "0xB32D1C")]
		private Material <BrushPage>k__BackingField;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private Material m_BrushPageActive;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32D3C", Offset = "0xB32D3C")]
		private Material <BrushPageActive>k__BackingField;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Material m_BrushPageActive_LogitechPen;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32D5C", Offset = "0xB32D5C")]
		private Material <BrushPageActive_LogitechPen>k__BackingField;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Material m_BrushSizer;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32D7C", Offset = "0xB32D7C")]
		private Material <BrushSizer>k__BackingField;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Material m_BrushSizer_LogitechPen;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32D9C", Offset = "0xB32D9C")]
		private Material <BrushSizer_LogitechPen>k__BackingField;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Material m_BrushSizerActive;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32DBC", Offset = "0xB32DBC")]
		private Material <BrushSizerActive>k__BackingField;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private Material m_BrushSizerActive_LogitechPen;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32DDC", Offset = "0xB32DDC")]
		private Material <BrushSizerActive_LogitechPen>k__BackingField;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private Material m_ToggleSelectionOn;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32DFC", Offset = "0xB32DFC")]
		private Material <ToggleSelectionOn>k__BackingField;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private Material m_ToggleSelectionOff;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32E1C", Offset = "0xB32E1C")]
		private Material <ToggleSelectionOff>k__BackingField;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		private Material m_SelectionOptions;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32E3C", Offset = "0xB32E3C")]
		private Material <SelectionOptions>k__BackingField;

		[Token(Token = "0x170003B7")]
		[CatalogMaterial]
		public Material Standard
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x1597A38", Offset = "0x1597A38", VA = "0x1597A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D074", Offset = "0xB3D074")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x1597A40", Offset = "0x1597A40", VA = "0x1597A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D084", Offset = "0xB3D084")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		[CatalogMaterial]
		public Material Blank
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x1597A48", Offset = "0x1597A48", VA = "0x1597A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D094", Offset = "0xB3D094")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x1597A50", Offset = "0x1597A50", VA = "0x1597A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0A4", Offset = "0xB3D0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		[CatalogMaterial]
		public Material SnapOn
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x1597A58", Offset = "0x1597A58", VA = "0x1597A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0B4", Offset = "0xB3D0B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x1597A60", Offset = "0x1597A60", VA = "0x1597A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0C4", Offset = "0xB3D0C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BA")]
		[CatalogMaterial]
		public Material SnapOff
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1597A68", Offset = "0x1597A68", VA = "0x1597A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0D4", Offset = "0xB3D0D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x1597A70", Offset = "0x1597A70", VA = "0x1597A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0E4", Offset = "0xB3D0E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		[CatalogMaterial]
		public Material PanelsRotate
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x1597A78", Offset = "0x1597A78", VA = "0x1597A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D0F4", Offset = "0xB3D0F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1597A80", Offset = "0x1597A80", VA = "0x1597A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D104", Offset = "0xB3D104")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		[CatalogMaterial]
		public Material UndoRedo
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x1597A88", Offset = "0x1597A88", VA = "0x1597A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D114", Offset = "0xB3D114")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x1597A90", Offset = "0x1597A90", VA = "0x1597A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D124", Offset = "0xB3D124")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		[CatalogMaterial]
		public Material UndoRedo_Undo
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x1597A98", Offset = "0x1597A98", VA = "0x1597A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D134", Offset = "0xB3D134")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x1597AA0", Offset = "0x1597AA0", VA = "0x1597AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D144", Offset = "0xB3D144")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		[CatalogMaterial]
		public Material UndoRedo_Redo
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1597AA8", Offset = "0x1597AA8", VA = "0x1597AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D154", Offset = "0xB3D154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x1597AB0", Offset = "0x1597AB0", VA = "0x1597AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D164", Offset = "0xB3D164")]
			private set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		[CatalogMaterial]
		public Material Undo
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x1597AB8", Offset = "0x1597AB8", VA = "0x1597AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D174", Offset = "0xB3D174")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x1597AC0", Offset = "0x1597AC0", VA = "0x1597AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D184", Offset = "0xB3D184")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		[CatalogMaterial]
		public Material Redo
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x1597AC8", Offset = "0x1597AC8", VA = "0x1597AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D194", Offset = "0xB3D194")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x1597AD0", Offset = "0x1597AD0", VA = "0x1597AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1A4", Offset = "0xB3D1A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		[CatalogMaterial]
		public Material WorldTransformReset
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x1597AD8", Offset = "0x1597AD8", VA = "0x1597AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1B4", Offset = "0xB3D1B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x1597AE0", Offset = "0x1597AE0", VA = "0x1597AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1C4", Offset = "0xB3D1C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		[CatalogMaterial]
		public Material PinCushion
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0x1597AE8", Offset = "0x1597AE8", VA = "0x1597AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1D4", Offset = "0xB3D1D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0x1597AF0", Offset = "0x1597AF0", VA = "0x1597AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1E4", Offset = "0xB3D1E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		[CatalogMaterial]
		public Material Cancel
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x1597AF8", Offset = "0x1597AF8", VA = "0x1597AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D1F4", Offset = "0xB3D1F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x1597B00", Offset = "0x1597B00", VA = "0x1597B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D204", Offset = "0xB3D204")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		[CatalogMaterial]
		public Material Cancel_Rot180
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x1597B08", Offset = "0x1597B08", VA = "0x1597B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D214", Offset = "0xB3D214")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x1597B10", Offset = "0x1597B10", VA = "0x1597B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D224", Offset = "0xB3D224")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		[CatalogMaterial]
		public Material Multicam
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0x1597B18", Offset = "0x1597B18", VA = "0x1597B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D234", Offset = "0xB3D234")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0x1597B20", Offset = "0x1597B20", VA = "0x1597B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D244", Offset = "0xB3D244")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		[CatalogMaterial]
		public Material MulticamActive
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0x1597B28", Offset = "0x1597B28", VA = "0x1597B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D254", Offset = "0xB3D254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0x1597B30", Offset = "0x1597B30", VA = "0x1597B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D264", Offset = "0xB3D264")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		[CatalogMaterial]
		public Material MulticamSwipeHint
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x1597B38", Offset = "0x1597B38", VA = "0x1597B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D274", Offset = "0xB3D274")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A42")]
			[Address(RVA = "0x1597B40", Offset = "0x1597B40", VA = "0x1597B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D284", Offset = "0xB3D284")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		[CatalogMaterial]
		public Material TutorialPad
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x1597B48", Offset = "0x1597B48", VA = "0x1597B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D294", Offset = "0xB3D294")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x1597B50", Offset = "0x1597B50", VA = "0x1597B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2A4", Offset = "0xB3D2A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		[CatalogMaterial]
		public Material YesOrCancel
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x1597B58", Offset = "0x1597B58", VA = "0x1597B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2B4", Offset = "0xB3D2B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x1597B60", Offset = "0x1597B60", VA = "0x1597B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2C4", Offset = "0xB3D2C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		[CatalogMaterial]
		public Material YesOrCancel_Yes
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x1597B68", Offset = "0x1597B68", VA = "0x1597B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2D4", Offset = "0xB3D2D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x1597B70", Offset = "0x1597B70", VA = "0x1597B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2E4", Offset = "0xB3D2E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		[CatalogMaterial]
		public Material YesOrCancel_Cancel
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x1597B78", Offset = "0x1597B78", VA = "0x1597B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D2F4", Offset = "0xB3D2F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x1597B80", Offset = "0x1597B80", VA = "0x1597B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D304", Offset = "0xB3D304")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		[CatalogMaterial]
		public Material YesOrCancel_Rot180
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x1597B88", Offset = "0x1597B88", VA = "0x1597B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D314", Offset = "0xB3D314")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x1597B90", Offset = "0x1597B90", VA = "0x1597B90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D324", Offset = "0xB3D324")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		[CatalogMaterial]
		public Material YesOrCancel_Yes_Rot180
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x1597B98", Offset = "0x1597B98", VA = "0x1597B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D334", Offset = "0xB3D334")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x1597BA0", Offset = "0x1597BA0", VA = "0x1597BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D344", Offset = "0xB3D344")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		[CatalogMaterial]
		public Material YesOrCancel_Cancel_Rot180
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x1597BA8", Offset = "0x1597BA8", VA = "0x1597BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D354", Offset = "0xB3D354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x1597BB0", Offset = "0x1597BB0", VA = "0x1597BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D364", Offset = "0xB3D364")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		[CatalogMaterial]
		public Material Yes
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x1597BB8", Offset = "0x1597BB8", VA = "0x1597BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D374", Offset = "0xB3D374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x1597BC0", Offset = "0x1597BC0", VA = "0x1597BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D384", Offset = "0xB3D384")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		[CatalogMaterial]
		public Material Yes_Rot180
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x1597BC8", Offset = "0x1597BC8", VA = "0x1597BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D394", Offset = "0xB3D394")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x1597BD0", Offset = "0x1597BD0", VA = "0x1597BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3A4", Offset = "0xB3D3A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		[CatalogMaterial]
		public Material ShareYt
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x1597BD8", Offset = "0x1597BD8", VA = "0x1597BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3B4", Offset = "0xB3D3B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x1597BE0", Offset = "0x1597BE0", VA = "0x1597BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3C4", Offset = "0xB3D3C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		[CatalogMaterial]
		public Material ShareYtActive
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x1597BE8", Offset = "0x1597BE8", VA = "0x1597BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3D4", Offset = "0xB3D3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x1597BF0", Offset = "0x1597BF0", VA = "0x1597BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3E4", Offset = "0xB3D3E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		[CatalogMaterial]
		public Material ShareYtActive_Rot180
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x1597BF8", Offset = "0x1597BF8", VA = "0x1597BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D3F4", Offset = "0xB3D3F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x1597C00", Offset = "0x1597C00", VA = "0x1597C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D404", Offset = "0xB3D404")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		[CatalogMaterial]
		public Material Trash
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x1597C08", Offset = "0x1597C08", VA = "0x1597C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D414", Offset = "0xB3D414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x1597C10", Offset = "0x1597C10", VA = "0x1597C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D424", Offset = "0xB3D424")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		[CatalogMaterial]
		public Material BrushPage
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x1597C18", Offset = "0x1597C18", VA = "0x1597C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D434", Offset = "0xB3D434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x1597C20", Offset = "0x1597C20", VA = "0x1597C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D444", Offset = "0xB3D444")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		[CatalogMaterial]
		public Material BrushPageActive
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0x1597C28", Offset = "0x1597C28", VA = "0x1597C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D454", Offset = "0xB3D454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x1597C30", Offset = "0x1597C30", VA = "0x1597C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D464", Offset = "0xB3D464")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		[CatalogMaterial]
		public Material BrushPageActive_LogitechPen
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x1597C38", Offset = "0x1597C38", VA = "0x1597C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D474", Offset = "0xB3D474")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x1597C40", Offset = "0x1597C40", VA = "0x1597C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D484", Offset = "0xB3D484")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		[CatalogMaterial]
		public Material BrushSizer
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x1597C48", Offset = "0x1597C48", VA = "0x1597C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D494", Offset = "0xB3D494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x1597C50", Offset = "0x1597C50", VA = "0x1597C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4A4", Offset = "0xB3D4A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		[CatalogMaterial]
		public Material BrushSizer_LogitechPen
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x1597C58", Offset = "0x1597C58", VA = "0x1597C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4B4", Offset = "0xB3D4B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1597C60", Offset = "0x1597C60", VA = "0x1597C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4C4", Offset = "0xB3D4C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		[CatalogMaterial]
		public Material BrushSizerActive
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x1597C68", Offset = "0x1597C68", VA = "0x1597C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4D4", Offset = "0xB3D4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x1597C70", Offset = "0x1597C70", VA = "0x1597C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4E4", Offset = "0xB3D4E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		[CatalogMaterial]
		public Material BrushSizerActive_LogitechPen
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x1597C78", Offset = "0x1597C78", VA = "0x1597C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D4F4", Offset = "0xB3D4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x1597C80", Offset = "0x1597C80", VA = "0x1597C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D504", Offset = "0xB3D504")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		[CatalogMaterial]
		public Material ToggleSelectionOn
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x1597C88", Offset = "0x1597C88", VA = "0x1597C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D514", Offset = "0xB3D514")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0x1597C90", Offset = "0x1597C90", VA = "0x1597C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D524", Offset = "0xB3D524")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		[CatalogMaterial]
		public Material ToggleSelectionOff
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x1597C98", Offset = "0x1597C98", VA = "0x1597C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D534", Offset = "0xB3D534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x1597CA0", Offset = "0x1597CA0", VA = "0x1597CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D544", Offset = "0xB3D544")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		[CatalogMaterial]
		public Material SelectionOptions
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0x1597CA8", Offset = "0x1597CA8", VA = "0x1597CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D554", Offset = "0xB3D554")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0x1597CB0", Offset = "0x1597CB0", VA = "0x1597CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D564", Offset = "0xB3D564")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x1597CB8", Offset = "0x1597CB8", VA = "0x1597CB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x1593524", Offset = "0x1593524", VA = "0x1593524")]
		public void Assign(Renderer renderer, Material catalogMat)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x1597F54", Offset = "0x1597F54", VA = "0x1597F54")]
		public ControllerMaterialCatalog()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class DetectLogitechVrPen : MonoBehaviour
	{
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerGeometry m_LogiPenControllerGeometryPrefab;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_TryToSwap;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_IsPen;

		[Token(Token = "0x170003DF")]
		public bool IsPen
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xEC7310", Offset = "0xEC7310", VA = "0xEC7310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xEC7318", Offset = "0xEC7318", VA = "0xEC7318")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xEC73B4", Offset = "0xEC73B4", VA = "0xEC73B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xEC74E8", Offset = "0xEC74E8", VA = "0xEC74E8")]
		public void Initialize(int deviceIndex)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xEC752C", Offset = "0xEC752C", VA = "0xEC752C")]
		public static bool IsLogitechPen(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xEC7534", Offset = "0xEC7534", VA = "0xEC7534")]
		public DetectLogitechVrPen()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class NonVrControllerInfo : ControllerInfo
	{
		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB32E5C", Offset = "0xB32E5C")]
		private bool <IsTrackedObjectValid>k__BackingField;

		[Token(Token = "0x170003E0")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xFCD358", Offset = "0xFCD358", VA = "0xFCD358", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D574", Offset = "0xB3D574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xFCD360", Offset = "0xFCD360", VA = "0xFCD360", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D584", Offset = "0xB3D584")]
			set
			{
			}
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xFCD36C", Offset = "0xFCD36C", VA = "0xFCD36C")]
		public NonVrControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xFCD374", Offset = "0xFCD374", VA = "0xFCD374", Slot = "9")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xFCD37C", Offset = "0xFCD37C", VA = "0xFCD37C", Slot = "10")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xFCD384", Offset = "0xFCD384", VA = "0xFCD384", Slot = "11")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFCD38C", Offset = "0xFCD38C", VA = "0xFCD38C", Slot = "12")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xFCD394", Offset = "0xFCD394", VA = "0xFCD394", Slot = "13")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xFCD39C", Offset = "0xFCD39C", VA = "0xFCD39C", Slot = "14")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xFCD3A4", Offset = "0xFCD3A4", VA = "0xFCD3A4", Slot = "15")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xFCD3AC", Offset = "0xFCD3AC", VA = "0xFCD3AC", Slot = "16")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xFCD3B4", Offset = "0xFCD3B4", VA = "0xFCD3B4", Slot = "19")]
		public override bool GetVrInputTouch(VrInput button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xFCD3BC", Offset = "0xFCD3BC", VA = "0xFCD3BC", Slot = "17")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xFCD3C4", Offset = "0xFCD3C4", VA = "0xFCD3C4", Slot = "18")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xFCD3CC", Offset = "0xFCD3CC", VA = "0xFCD3CC", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class OculusControllerInfo : ControllerInfo
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29874", Offset = "0xB29874")]
		private sealed class <DoVibration>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVRInput.Controller controller;

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AA2")]
				[Address(RVA = "0x10E64E0", Offset = "0x10E64E0", VA = "0x10E64E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AA4")]
				[Address(RVA = "0x10E6528", Offset = "0x10E6528", VA = "0x10E6528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x10E6364", Offset = "0x10E6364", VA = "0x10E6364")]
			[DebuggerHidden]
			public <DoVibration>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x10E6390", Offset = "0x10E6390", VA = "0x10E6390", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x10E6394", Offset = "0x10E6394", VA = "0x10E6394", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0x10E64E8", Offset = "0x10E64E8", VA = "0x10E64E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_IsValid;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine m_VibrationCoroutine;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public OVRInput.Controller m_ControllerType;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool m_IsLeftHand;

		[Token(Token = "0x170003E1")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xFD0838", Offset = "0xFD0838", VA = "0xFD0838", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0xFD0840", Offset = "0xFD0840", VA = "0xFD0840", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xFD084C", Offset = "0xFD084C", VA = "0xFD084C")]
		public OculusControllerInfo(BaseControllerBehavior behavior, bool isLeftHand)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xFD087C", Offset = "0xFD087C", VA = "0xFD087C")]
		public void SetControllerType(bool isLeftHand)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xFD0970", Offset = "0xFD0970", VA = "0xFD0970")]
		public void UpdatePosesAndValidity()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xFD0B70", Offset = "0xFD0B70", VA = "0xFD0B70", Slot = "9")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xFD0CE0", Offset = "0xFD0CE0", VA = "0xFD0CE0")]
		private OVRInput.Button MapVrInput(VrInput input)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xFD0D00", Offset = "0xFD0D00", VA = "0xFD0D00")]
		private OVRInput.Touch MapVrTouch(VrInput input)
		{
			return default(OVRInput.Touch);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xFD0D20", Offset = "0xFD0D20", VA = "0xFD0D20", Slot = "10")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xFD0D2C", Offset = "0xFD0D2C", VA = "0xFD0D2C", Slot = "11")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xFD0E14", Offset = "0xFD0E14", VA = "0xFD0E14", Slot = "12")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xFD0E68", Offset = "0xFD0E68", VA = "0xFD0E68", Slot = "13")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xFD0ED4", Offset = "0xFD0ED4", VA = "0xFD0ED4", Slot = "14")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xFD0FA4", Offset = "0xFD0FA4", VA = "0xFD0FA4", Slot = "15")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xFD10C4", Offset = "0xFD10C4", VA = "0xFD10C4", Slot = "16")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xFD1150", Offset = "0xFD1150", VA = "0xFD1150", Slot = "17")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xFD1318", Offset = "0xFD1318", VA = "0xFD1318", Slot = "18")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xFD1458", Offset = "0xFD1458", VA = "0xFD1458", Slot = "19")]
		public override bool GetVrInputTouch(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xFD1590", Offset = "0xFD1590", VA = "0xFD1590", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xFD1658", Offset = "0xFD1658", VA = "0xFD1658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3D594", Offset = "0xB3D594")]
		private IEnumerator DoVibration(OVRInput.Controller controller, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xFD16D4", Offset = "0xFD16D4", VA = "0xFD16D4", Slot = "6")]
		public override void ShowController(bool bShow)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class OculusHandTrackingManager : MonoBehaviour
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OculusHandTrackingManager m_Instance;

		[Token(Token = "0x14000066")]
		public static event Action NewPosesApplied
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xFD2E24", Offset = "0xFD2E24", VA = "0xFD2E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D644", Offset = "0xB3D644")]
			add
			{
			}
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xFD2EE4", Offset = "0xFD2EE4", VA = "0xFD2EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D654", Offset = "0xB3D654")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xFD2FA4", Offset = "0xFD2FA4", VA = "0xFD2FA4")]
		public void SwapLeftRight()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xFD3104", Offset = "0xFD3104", VA = "0xFD3104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xFD3154", Offset = "0xFD3154", VA = "0xFD3154")]
		public void OnPreCull()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xFD3288", Offset = "0xFD3288", VA = "0xFD3288")]
		public OculusHandTrackingManager()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class OculusPreCullHook : MonoBehaviour
	{
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xFD4CDC", Offset = "0xFD4CDC", VA = "0xFD4CDC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xFD4D84", Offset = "0xFD4D84", VA = "0xFD4D84")]
		public OculusPreCullHook()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class SteamControllerInfo : ControllerInfo
	{
		[Token(Token = "0x4001A5F")]
		private const float kInputScrollScalar = 0.5f;

		[Token(Token = "0x4001A60")]
		private const float kWmrThumbstickDeadzone = 0.1f;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly float kThumbstickDeadzone;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_HapticsDurationScale;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_HapticsAmplitudeScale;

		[Token(Token = "0x170003E4")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x11B1454", Offset = "0x11B1454", VA = "0x11B1454", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x11B145C", Offset = "0x11B145C", VA = "0x11B145C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		private int Index
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x11B1460", Offset = "0x11B1460", VA = "0x11B1460")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x11B1468", Offset = "0x11B1468", VA = "0x11B1468")]
		public SteamControllerInfo(BaseControllerBehavior behavior)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x11B14D4", Offset = "0x11B14D4", VA = "0x11B14D4")]
		private bool IndexIsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x11B14DC", Offset = "0x11B14DC", VA = "0x11B14DC", Slot = "9")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x11B14E4", Offset = "0x11B14E4", VA = "0x11B14E4", Slot = "10")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x11B14EC", Offset = "0x11B14EC", VA = "0x11B14EC", Slot = "11")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x11B14F4", Offset = "0x11B14F4", VA = "0x11B14F4", Slot = "12")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x11B14FC", Offset = "0x11B14FC", VA = "0x11B14FC", Slot = "13")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x11B1504", Offset = "0x11B1504", VA = "0x11B1504", Slot = "14")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x11B150C", Offset = "0x11B150C", VA = "0x11B150C", Slot = "15")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x11B1514", Offset = "0x11B1514", VA = "0x11B1514", Slot = "16")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x11B151C", Offset = "0x11B151C", VA = "0x11B151C", Slot = "19")]
		public override bool GetVrInputTouch(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x11B1524", Offset = "0x11B1524", VA = "0x11B1524")]
		private float DeadStickMap(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x11B1574", Offset = "0x11B1574", VA = "0x11B1574", Slot = "17")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x11B157C", Offset = "0x11B157C", VA = "0x11B157C", Slot = "18")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x11B1584", Offset = "0x11B1584", VA = "0x11B1584", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class VrControllers : MonoBehaviour
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ControllerBehaviorWand m_Wand;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ControllerBehaviorBrush m_Brush;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour[] m_TrackingComponents;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32EAC", Offset = "0xB32EAC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB32EAC", Offset = "0xB32EAC")]
		[SerializeField]
		private float m_HapticsDurationScale;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_HapticAmplitudeScale;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB32F2C", Offset = "0xB32F2C")]
		private Vector2 m_TriggerActivationRange;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 m_GripActivationRange;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 m_TouchpadActivationRange;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector2 m_LogitechPenActivationRange;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_WandRotateJoystickPercent;

		[Token(Token = "0x170003E6")]
		public float HapticsDurationScale
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xEFFFE8", Offset = "0xEFFFE8", VA = "0xEFFFE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E7")]
		public float HapticsAmplitudeScale
		{
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xEFFFF0", Offset = "0xEFFFF0", VA = "0xEFFFF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E8")]
		public ControllerStyle BaseControllerStyle
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xF00168", Offset = "0xF00168", VA = "0xF00168")]
			get
			{
				return default(ControllerStyle);
			}
		}

		[Token(Token = "0x170003E9")]
		public Vector2 TouchpadActivationRange
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xF001CC", Offset = "0xF001CC", VA = "0xF001CC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003EA")]
		public float WandRotateJoystickPercent
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xF001D4", Offset = "0xF001D4", VA = "0xF001D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EB")]
		public Vector2 GripActivationRange
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0xF001DC", Offset = "0xF001DC", VA = "0xF001DC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003EC")]
		public ControllerBehaviorWand Wand
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0xF001E4", Offset = "0xF001E4", VA = "0xF001E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		public ControllerBehaviorBrush Brush
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xF001EC", Offset = "0xF001EC", VA = "0xF001EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xEFFFF8", Offset = "0xEFFFF8", VA = "0xEFFFF8")]
		public BaseControllerBehavior GetBehavior(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xF00094", Offset = "0xF00094", VA = "0xF00094")]
		public BaseControllerBehavior[] GetBehaviors()
		{
			return null;
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xF001F4", Offset = "0xF001F4", VA = "0xF001F4")]
		public bool LogitechPenIsPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xF0025C", Offset = "0xF0025C", VA = "0xF0025C")]
		public bool PrimaryScrollDirectionIsX(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xF00290", Offset = "0xF00290", VA = "0xF00290")]
		public Vector2 TriggerActivationRange(InputManager.ControllerName name)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xF002EC", Offset = "0xF002EC", VA = "0xF002EC")]
		public void EnablePoseTracking(bool enabled)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xF00368", Offset = "0xF00368", VA = "0xF00368")]
		public GameObject GetBrush()
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xF00384", Offset = "0xF00384", VA = "0xF00384")]
		public GameObject GetWand()
		{
			return null;
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xF003A0", Offset = "0xF003A0", VA = "0xF003A0")]
		public VrControllers()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public enum VrInput
	{
		[Token(Token = "0x4001A6F")]
		Button01,
		[Token(Token = "0x4001A70")]
		Button02,
		[Token(Token = "0x4001A71")]
		Button03,
		[Token(Token = "0x4001A72")]
		Button04,
		[Token(Token = "0x4001A73")]
		Button05,
		[Token(Token = "0x4001A74")]
		Button06,
		[Token(Token = "0x4001A75")]
		Directional,
		[Token(Token = "0x4001A76")]
		Trigger,
		[Token(Token = "0x4001A77")]
		Grip,
		[Token(Token = "0x4001A78")]
		Any,
		[Token(Token = "0x4001A79")]
		Thumbstick,
		[Token(Token = "0x4001A7A")]
		Touchpad
	}
	[Token(Token = "0x20003FD")]
	public class XrPluginControllerInfo : ControllerInfo
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<VrInput, bool> ButtonDownDict;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<VrInput, bool> ButtonStateDict;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<VrInput, bool> ButtonTouchDownDict;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<VrInput, bool> ButtonTouchStateDict;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _IsValid;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UnityEngine.XR.InputDevice _AssociatedXrInputDevice;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_IsLeftHand;

		[Token(Token = "0x170003EE")]
		public override bool IsTrackedObjectValid
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x111D4D8", Offset = "0x111D4D8", VA = "0x111D4D8", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x111D4E0", Offset = "0x111D4E0", VA = "0x111D4E0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x111D4EC", Offset = "0x111D4EC", VA = "0x111D4EC")]
		public XrPluginControllerInfo(BaseControllerBehavior behavior, bool isLeftHand)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x111D718", Offset = "0x111D718", VA = "0x111D718")]
		private void OnDeviceConnected(UnityEngine.XR.InputDevice newInputDevice)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x111D63C", Offset = "0x111D63C", VA = "0x111D63C")]
		private void FindAndAssignInputDevice(bool isLeftHand)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x111D720", Offset = "0x111D720", VA = "0x111D720")]
		public void UpdateButtonAndTouchStates()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x111DE68", Offset = "0x111DE68", VA = "0x111DE68")]
		public void UpdatePosesAndValidity()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x111DFCC", Offset = "0x111DFCC", VA = "0x111DFCC", Slot = "9")]
		public override float GetTriggerRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x111E00C", Offset = "0x111E00C", VA = "0x111E00C", Slot = "10")]
		public override Vector2 GetPadValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x111E018", Offset = "0x111E018", VA = "0x111E018", Slot = "11")]
		public override Vector2 GetThumbStickValue()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x111E030", Offset = "0x111E030", VA = "0x111E030", Slot = "12")]
		public override Vector2 GetPadValueDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x111E084", Offset = "0x111E084", VA = "0x111E084", Slot = "13")]
		public override float GetGripValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x111E0C4", Offset = "0x111E0C4", VA = "0x111E0C4", Slot = "14")]
		public override float GetTriggerValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x111E104", Offset = "0x111E104", VA = "0x111E104", Slot = "15")]
		public override float GetScrollXDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x111E144", Offset = "0x111E144", VA = "0x111E144", Slot = "16")]
		public override float GetScrollYDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x111E188", Offset = "0x111E188", VA = "0x111E188", Slot = "17")]
		public override bool GetVrInput(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x111E27C", Offset = "0x111E27C", VA = "0x111E27C", Slot = "18")]
		public override bool GetVrInputDown(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x111E328", Offset = "0x111E328", VA = "0x111E328", Slot = "19")]
		public override bool GetVrInputTouch(VrInput input)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x111E494", Offset = "0x111E494", VA = "0x111E494", Slot = "20")]
		public override void TriggerControllerHaptics(float seconds)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x111E52C", Offset = "0x111E52C", VA = "0x111E52C")]
		public void SetControllerType(bool isLeftHand)
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class XrPluginHandTrackingManager : MonoBehaviour
	{
		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static XrPluginHandTrackingManager m_Instance;

		[Token(Token = "0x14000067")]
		public static event Action NewPosesApplied
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x111E538", Offset = "0x111E538", VA = "0x111E538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D664", Offset = "0xB3D664")]
			add
			{
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x111E5F8", Offset = "0x111E5F8", VA = "0x111E5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D674", Offset = "0xB3D674")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x111E6B8", Offset = "0x111E6B8", VA = "0x111E6B8")]
		public void SwapLeftRight()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x111E7E4", Offset = "0x111E7E4", VA = "0x111E7E4")]
		public void SetHandedness(bool leftHandPaints)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x111E900", Offset = "0x111E900", VA = "0x111E900")]
		public void SetRightHanded()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x111E904", Offset = "0x111E904", VA = "0x111E904")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x111E954", Offset = "0x111E954", VA = "0x111E954")]
		public void OnPreCull()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x111EAA0", Offset = "0x111EAA0", VA = "0x111EAA0")]
		public XrPluginHandTrackingManager()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class XrPluginPreCullHook : MonoBehaviour
	{
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x111EAA8", Offset = "0x111EAA8", VA = "0x111EAA8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x111EB50", Offset = "0x111EB50", VA = "0x111EB50")]
		public XrPluginPreCullHook()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x2000401")]
		public enum ControllerName
		{
			[Token(Token = "0x4001A9C")]
			Wand,
			[Token(Token = "0x4001A9D")]
			Brush,
			[Token(Token = "0x4001A9E")]
			Num,
			[Token(Token = "0x4001A9F")]
			None
		}

		[Token(Token = "0x2000402")]
		public enum SketchCommands
		{
			[Token(Token = "0x4001AA1")]
			Activate,
			[Token(Token = "0x4001AA2")]
			AltActivate,
			[Token(Token = "0x4001AA3")]
			PanelShowHide,
			[Token(Token = "0x4001AA4")]
			LockToHead,
			[Token(Token = "0x4001AA5")]
			PivotRotation,
			[Token(Token = "0x4001AA6")]
			WandRotation,
			[Token(Token = "0x4001AA7")]
			LockToController,
			[Token(Token = "0x4001AA8")]
			Scale,
			[Token(Token = "0x4001AA9")]
			Sensitivity,
			[Token(Token = "0x4001AAA")]
			Reset,
			[Token(Token = "0x4001AAB")]
			Undo,
			[Token(Token = "0x4001AAC")]
			Redo,
			[Token(Token = "0x4001AAD")]
			Delete,
			[Token(Token = "0x4001AAE")]
			Abort,
			[Token(Token = "0x4001AAF")]
			Panic,
			[Token(Token = "0x4001AB0")]
			RewindTimeline,
			[Token(Token = "0x4001AB1")]
			AdvanceTimeline,
			[Token(Token = "0x4001AB2")]
			TimelineHome,
			[Token(Token = "0x4001AB3")]
			TimelineEnd,
			[Token(Token = "0x4001AB4")]
			MultiCamSelection,
			[Token(Token = "0x4001AB5")]
			WorldTransformReset,
			[Token(Token = "0x4001AB6")]
			Teleport,
			[Token(Token = "0x4001AB7")]
			ShowPinCushion,
			[Token(Token = "0x4001AB8")]
			ToggleDefaultTool,
			[Token(Token = "0x4001AB9")]
			RespawnPanels,
			[Token(Token = "0x4001ABA")]
			SwapControls,
			[Token(Token = "0x4001ABB")]
			MenuContextClick,
			[Token(Token = "0x4001ABC")]
			PinWidget,
			[Token(Token = "0x4001ABD")]
			ToggleSelection,
			[Token(Token = "0x4001ABE")]
			GroupStrokes,
			[Token(Token = "0x4001ABF")]
			DuplicateSelection,
			[Token(Token = "0x4001AC0")]
			Confirm,
			[Token(Token = "0x4001AC1")]
			Cancel,
			[Token(Token = "0x4001AC2")]
			Trash,
			[Token(Token = "0x4001AC3")]
			Share
		}

		[Token(Token = "0x2000403")]
		public enum KeyboardShortcut
		{
			[Token(Token = "0x4001AC5")]
			LockToHead,
			[Token(Token = "0x4001AC6")]
			PivotRotation,
			[Token(Token = "0x4001AC7")]
			Scale,
			[Token(Token = "0x4001AC8")]
			RewindTimeline,
			[Token(Token = "0x4001AC9")]
			AdvanceTimeline,
			[Token(Token = "0x4001ACA")]
			TimelineHome,
			[Token(Token = "0x4001ACB")]
			TimelineEnd,
			[Token(Token = "0x4001ACC")]
			Reset,
			[Token(Token = "0x4001ACD")]
			Undo,
			[Token(Token = "0x4001ACE")]
			Redo,
			[Token(Token = "0x4001ACF")]
			Delete,
			[Token(Token = "0x4001AD0")]
			Abort,
			[Token(Token = "0x4001AD1")]
			SaveNew,
			[Token(Token = "0x4001AD2")]
			ExportAll,
			[Token(Token = "0x4001AD3")]
			SwitchCamera,
			[Token(Token = "0x4001AD4")]
			_Unused_1,
			[Token(Token = "0x4001AD5")]
			CycleCanvas,
			[Token(Token = "0x4001AD6")]
			ViewOnly,
			[Token(Token = "0x4001AD7")]
			ToggleScreenMirroring,
			[Token(Token = "0x4001AD8")]
			PreviousTool,
			[Token(Token = "0x4001AD9")]
			NextTool,
			[Token(Token = "0x4001ADA")]
			_Unused_2,
			[Token(Token = "0x4001ADB")]
			_Unused_3,
			[Token(Token = "0x4001ADC")]
			CycleSymmetryMode,
			[Token(Token = "0x4001ADD")]
			Export,
			[Token(Token = "0x4001ADE")]
			StoreHeadTransform,
			[Token(Token = "0x4001ADF")]
			RecallHeadTransform,
			[Token(Token = "0x4001AE0")]
			ToggleLightType,
			[Token(Token = "0x4001AE1")]
			CheckStrokes,
			[Token(Token = "0x4001AE2")]
			ResetScene,
			[Token(Token = "0x4001AE3")]
			StraightEdge,
			[Token(Token = "0x4001AE4")]
			Save,
			[Token(Token = "0x4001AE5")]
			Load,
			[Token(Token = "0x4001AE6")]
			Forward,
			[Token(Token = "0x4001AE7")]
			Backward,
			[Token(Token = "0x4001AE8")]
			PositionMonoCamera,
			[Token(Token = "0x4001AE9")]
			ToggleHeadStationaryOrWobble,
			[Token(Token = "0x4001AEA")]
			ToggleHeadStationaryOrFollow,
			[Token(Token = "0x4001AEB")]
			DecreaseSlowFollowSmoothing,
			[Token(Token = "0x4001AEC")]
			IncreaseSlowFollowSmoothing,
			[Token(Token = "0x4001AED")]
			ToggleGVRAudio,
			[Token(Token = "0x4001AEE")]
			ResetEverything,
			[Token(Token = "0x4001AEF")]
			GotoInitialPosition,
			[Token(Token = "0x4001AF0")]
			ExtendDemoTimer,
			[Token(Token = "0x4001AF1")]
			InstantUpload,
			[Token(Token = "0x4001AF2")]
			TossWidget,
			[Token(Token = "0x4001AF3")]
			ToggleProfile
		}

		[Serializable]
		[Token(Token = "0x2000404")]
		public struct HmdInfo
		{
			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshRenderer m_Renderer;
		}

		[Token(Token = "0x2000405")]
		public struct TouchInput
		{
			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_Valid;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector2 m_Pos;
		}

		[Token(Token = "0x4001A84")]
		private const string PLAYER_PREF_WAND_ON_RIGHT = "WandOnRight";

		[Token(Token = "0x4001A85")]
		private const float kSteamTrackpadButtonSqrMagnitudeThreshold = 0.010000001f;

		[Token(Token = "0x4001A86")]
		private const float kSwapDistMeters = 0.04f;

		[Token(Token = "0x4001A87")]
		private const float kSwapResetDistMeters = 0.16f;

		[Token(Token = "0x4001A88")]
		private const float kSwapForwardAngle = 130f;

		[Token(Token = "0x4001A89")]
		private const float kSwapVelocityAngle = 150f;

		[Token(Token = "0x4001A8A")]
		private const float kSwapAcceleration = 10f;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, Key[]> m_KeyMap;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<int, Key[]> m_DemoKeyMap;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static InputManager m_Instance;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static MultiBrushInputSystem UnityInputMultiBrush;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_SwapEffect;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HmdInfo m_HmdInfo;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_AllowVrControllers;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ControllerInfo[] m_ControllerInfos;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_InhibitControllerSwap;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_InputThreshold;

		[Token(Token = "0x4001A96")]
		private const float kTriggerActivateThreshold = 0.01f;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TouchInput m_Touch;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_WandOnRight;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, KeyboardShortcut?> m_SketchToKeyboardCommandMap;

		[Token(Token = "0x170003EF")]
		private Dictionary<int, Key[]> ActiveKeyMap
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x12D65F8", Offset = "0x12D65F8", VA = "0x12D65F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public static ControllerInfo[] Controllers
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x12D66B8", Offset = "0x12D66B8", VA = "0x12D66B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		public static ControllerInfo Wand
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x12D6314", Offset = "0x12D6314", VA = "0x12D6314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public static ControllerInfo Brush
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x12D6294", Offset = "0x12D6294", VA = "0x12D6294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		public bool AllowVrControllers
		{
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x12D6AC8", Offset = "0x12D6AC8", VA = "0x12D6AC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x12D6AD0", Offset = "0x12D6AD0", VA = "0x12D6AD0")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public bool WandOnRight
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x12D6B6C", Offset = "0x12D6B6C", VA = "0x12D6B6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x12D6B74", Offset = "0x12D6B74", VA = "0x12D6B74")]
			set
			{
			}
		}

		[Token(Token = "0x14000068")]
		public static event Action OnSwapControllers
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x12D6728", Offset = "0x12D6728", VA = "0x12D6728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D684", Offset = "0xB3D684")]
			add
			{
			}
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x12D6820", Offset = "0x12D6820", VA = "0x12D6820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D694", Offset = "0xB3D694")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action ControllerPosesApplied
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x12D6988", Offset = "0x12D6988", VA = "0x12D6988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D6A4", Offset = "0xB3D6A4")]
			add
			{
			}
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x12D6A28", Offset = "0x12D6A28", VA = "0x12D6A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D6B4", Offset = "0xB3D6B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x12D6918", Offset = "0x12D6918", VA = "0x12D6918")]
		public static void ControllersHaveChanged()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x12D6ADC", Offset = "0x12D6ADC", VA = "0x12D6ADC")]
		public void EnableVrControllers(bool bEnable)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x12D6CF8", Offset = "0x12D6CF8", VA = "0x12D6CF8")]
		public void EnablePoseTracking(bool enabled)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x12D6DFC", Offset = "0x12D6DFC", VA = "0x12D6DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x12D6F54", Offset = "0x12D6F54", VA = "0x12D6F54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x12D6FFC", Offset = "0x12D6FFC", VA = "0x12D6FFC")]
		private void CreateControllerInfos()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x12D7324", Offset = "0x12D7324", VA = "0x12D7324")]
		private bool SetSteamControllerStyle(SteamControllerInfo steamInfo, out string style)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x12D7374", Offset = "0x12D7374", VA = "0x12D7374")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x12D728C", Offset = "0x12D728C", VA = "0x12D728C")]
		public void ShowControllers(bool show)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x12D74C8", Offset = "0x12D74C8", VA = "0x12D74C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x12D7568", Offset = "0x12D7568", VA = "0x12D7568")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x12D7798", Offset = "0x12D7798", VA = "0x12D7798")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x12D7808", Offset = "0x12D7808", VA = "0x12D7808")]
		private void OnControllerPosesApplied()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x12D7A68", Offset = "0x12D7A68", VA = "0x12D7A68")]
		public bool GetKeyboardShortcut(KeyboardShortcut shortcut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x12D7B7C", Offset = "0x12D7B7C", VA = "0x12D7B7C")]
		public bool GetKeyboardShortcutDown(KeyboardShortcut shortcut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x12D7C9C", Offset = "0x12D7C9C", VA = "0x12D7C9C")]
		public bool GetAnyShift()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x12D7D5C", Offset = "0x12D7D5C", VA = "0x12D7D5C")]
		private KeyboardShortcut? MapCommandToKeyboard(SketchCommands rCommand)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x12D7FE4", Offset = "0x12D7FE4", VA = "0x12D7FE4")]
		public bool GetCommand(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x12D8618", Offset = "0x12D8618", VA = "0x12D8618")]
		public bool GetCommandHeld(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x12D87A8", Offset = "0x12D87A8", VA = "0x12D87A8")]
		public bool GetCommandDown(SketchCommands rCommand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x12D8A70", Offset = "0x12D8A70", VA = "0x12D8A70")]
		private bool HasSwapGestureCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x12D90EC", Offset = "0x12D90EC", VA = "0x12D90EC")]
		public bool ControllersAreSwapping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x12D90F4", Offset = "0x12D90F4", VA = "0x12D90F4")]
		public Vector2 GetMouseMoveDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x12D91D4", Offset = "0x12D91D4", VA = "0x12D91D4")]
		public float GetMouseWheel()
		{
			return default(float);
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x12D8374", Offset = "0x12D8374", VA = "0x12D8374")]
		public bool GetMouseButton(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x12D8E68", Offset = "0x12D8E68", VA = "0x12D8E68")]
		public bool GetMouseButtonDown(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x12D927C", Offset = "0x12D927C", VA = "0x12D927C")]
		public bool IsBrushScrollActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x12D9320", Offset = "0x12D9320", VA = "0x12D9320")]
		public float GetBrushScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x12D94BC", Offset = "0x12D94BC", VA = "0x12D94BC")]
		public float GetAdjustedBrushScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x12D94FC", Offset = "0x12D94FC", VA = "0x12D94FC")]
		public float GetWandScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x12D95C0", Offset = "0x12D95C0", VA = "0x12D95C0")]
		public float GetAdjustedWandScrollAmount()
		{
			return default(float);
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x12D9600", Offset = "0x12D9600", VA = "0x12D9600")]
		public float GetToolSelection()
		{
			return default(float);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x12D96F8", Offset = "0x12D96F8", VA = "0x12D96F8")]
		public bool GetTouchPosition(out Vector2 touchPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x12D9708", Offset = "0x12D9708", VA = "0x12D9708")]
		public void ClearTouchPosition()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x12D9710", Offset = "0x12D9710", VA = "0x12D9710")]
		public void TriggerHaptics(ControllerName eName, float durationInSeconds)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x12D975C", Offset = "0x12D975C", VA = "0x12D975C")]
		public void TriggerHaptics(ControllerName eName, float durationInSeconds, float minTimeBetweenPulses)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x12D97F8", Offset = "0x12D97F8", VA = "0x12D97F8")]
		public void TriggerHapticsPulse(ControllerName eName, int iNumPulses, float fInterval, float durationInSeconds)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x12D9888", Offset = "0x12D9888", VA = "0x12D9888")]
		public BaseControllerBehavior GetControllerBehavior(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x12D98CC", Offset = "0x12D98CC", VA = "0x12D98CC")]
		public ControllerTutorialScript GetControllerTutorial(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x12D9910", Offset = "0x12D9910", VA = "0x12D9910")]
		public void TintControllersAndHMD(Color rTintColor, float fBaseIntensity, float fGlowIntensity)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x12D9B6C", Offset = "0x12D9B6C", VA = "0x12D9B6C")]
		public Transform GetPinCushionSpawn()
		{
			return null;
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x12D9C24", Offset = "0x12D9C24", VA = "0x12D9C24")]
		public Transform GetBrushControllerAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x12D9D2C", Offset = "0x12D9D2C", VA = "0x12D9D2C")]
		public Transform GetWandControllerAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x12D9DE0", Offset = "0x12D9DE0", VA = "0x12D9DE0")]
		public void SetControllersAttachAngle(float fAngle)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x12DA050", Offset = "0x12DA050", VA = "0x12DA050")]
		public Transform GetController(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x12DA094", Offset = "0x12DA094", VA = "0x12DA094")]
		public static ControllerGeometry GetControllerGeometry(ControllerName eName)
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x12DA134", Offset = "0x12DA134", VA = "0x12DA134")]
		public Quaternion GetControllerRotation(ControllerName eName)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x12DA180", Offset = "0x12DA180", VA = "0x12DA180")]
		public Vector3 GetControllerPosition(ControllerName eName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x12DA1CC", Offset = "0x12DA1CC", VA = "0x12DA1CC")]
		public Vector3 GetControllerAttachPointPosition(ControllerName eName)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x12DA20C", Offset = "0x12DA20C", VA = "0x12DA20C")]
		public ControllerName GetDominantController(SketchCommands rCommand)
		{
			return default(ControllerName);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x12DA2D4", Offset = "0x12DA2D4", VA = "0x12DA2D4")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class BadJson : Exception
	{
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1438594", Offset = "0x1438594", VA = "0x1438594")]
		public BadJson(string message)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1438608", Offset = "0x1438608", VA = "0x1438608")]
		public BadJson(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1438698", Offset = "0x1438698", VA = "0x1438698")]
		public BadJson(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class CustomJsonWriter : JsonTextWriter
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool terseFormatting;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xEC47C8", Offset = "0xEC47C8", VA = "0xEC47C8")]
		public CustomJsonWriter(TextWriter textWriter)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xEC47F8", Offset = "0xEC47F8", VA = "0xEC47F8")]
		public void WriteStartArray(bool terse)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xEC4808", Offset = "0xEC4808", VA = "0xEC4808")]
		public void WriteStartObject(bool terse)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xEC4818", Offset = "0xEC4818", VA = "0xEC4818", Slot = "78")]
		protected override void WriteEnd(JsonToken token)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xEC4840", Offset = "0xEC4840", VA = "0xEC4840", Slot = "79")]
		protected override void WriteIndent()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xEC4860", Offset = "0xEC4860", VA = "0xEC4860", Slot = "67")]
		public override void Close()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xEC48A4", Offset = "0xEC48A4", VA = "0xEC48A4")]
		public void WriteValue(Vector3 v)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xEC4928", Offset = "0xEC4928", VA = "0xEC4928")]
		public void WriteValue(Vector2 v)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xEC49A8", Offset = "0xEC49A8", VA = "0xEC49A8")]
		public void WriteValue(Color v)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xEC4A2C", Offset = "0xEC4A2C", VA = "0xEC4A2C")]
		public void WriteValue(Color32 v)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xEC4AE0", Offset = "0xEC4AE0", VA = "0xEC4AE0")]
		public void WriteValue(Quaternion v)
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class JsonVectorConverter : JsonConverter
	{
		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x12E7F94", Offset = "0x12E7F94", VA = "0x12E7F94", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x12E817C", Offset = "0x12E817C", VA = "0x12E817C")]
		private static float ReadFloat(JsonReader reader)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x12E8298", Offset = "0x12E8298", VA = "0x12E8298", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x12E8758", Offset = "0x12E8758", VA = "0x12E8758", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x12E8BAC", Offset = "0x12E8BAC", VA = "0x12E8BAC")]
		public JsonVectorConverter()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB29884", Offset = "0xB29884")]
	public class JsonTrTransformConverter : JsonConverter
	{
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x12E7AE4", Offset = "0x12E7AE4", VA = "0x12E7AE4", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x12E7B70", Offset = "0x12E7B70", VA = "0x12E7B70", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer s)
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x12E7D90", Offset = "0x12E7D90", VA = "0x12E7D90", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer s)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x12E7F8C", Offset = "0x12E7F8C", VA = "0x12E7F8C")]
		public JsonTrTransformConverter()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class JsonGuidConverter : JsonConverter
	{
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x12E76B0", Offset = "0x12E76B0", VA = "0x12E76B0", Slot = "6")]
		public override bool CanConvert(Type objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x12E773C", Offset = "0x12E773C", VA = "0x12E773C", Slot = "5")]
		public override object ReadJson(JsonReader reader, Type t, object o, JsonSerializer s)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x12E7864", Offset = "0x12E7864", VA = "0x12E7864", Slot = "4")]
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer s)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x12E7ADC", Offset = "0x12E7ADC", VA = "0x12E7ADC")]
		public JsonGuidConverter()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class CustomJsonContractResolver : DefaultContractResolver
	{
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xEC44B8", Offset = "0xEC44B8", VA = "0xEC44B8", Slot = "18")]
		protected override JsonContract CreateContract(Type objectType)
		{
			return null;
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xEC4764", Offset = "0xEC4764", VA = "0xEC4764")]
		public CustomJsonContractResolver()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class LightsControlScript : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		public struct DiscoCurve
		{
			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quaternion start;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion target;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color startColor;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color targetColor;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color lerpColor;
		}

		[Token(Token = "0x200040E")]
		private enum Movement
		{
			[Token(Token = "0x4001B0C")]
			Still,
			[Token(Token = "0x4001B0D")]
			Drift
		}

		[Token(Token = "0x200040F")]
		public struct CustomEnvLight
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color color;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;
		}

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LightsControlScript m_Instance;

		[Token(Token = "0x4001AF9")]
		public const int kLightCount = 2;

		[Token(Token = "0x4001AFA")]
		public const float kRotationChangeEpsilon = 0.0001f;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEnvLight[] m_EnvLights;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Color> m_Colors;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_BeatThreshold;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DriftSpeed;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_JumpInterval;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Movement m_MoveMode;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Jumping;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_JumpTimer;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_MoveTimer;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DiscoCurve[] m_DiscoCurves;

		[Token(Token = "0x170003F5")]
		public bool DiscoMode
		{
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x10D3278", Offset = "0x10D3278", VA = "0x10D3278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x10D1DB4", Offset = "0x10D1DB4", VA = "0x10D1DB4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public bool LightsChanged
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x10D29C4", Offset = "0x10D29C4", VA = "0x10D29C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F7")]
		public CustomLights CustomLights
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x10D3374", Offset = "0x10D3374", VA = "0x10D3374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x10D3570", Offset = "0x10D3570", VA = "0x10D3570")]
			set
			{
			}
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x10D3288", Offset = "0x10D3288", VA = "0x10D3288")]
		public static bool IsLightRotationCloseEnough(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x10D3688", Offset = "0x10D3688", VA = "0x10D3688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x10D36FC", Offset = "0x10D36FC", VA = "0x10D36FC")]
		public void AddColor(Color c)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x10D37A8", Offset = "0x10D37A8", VA = "0x10D37A8")]
		private void AdvanceCurves()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x10D38F0", Offset = "0x10D38F0", VA = "0x10D38F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x10D3D34", Offset = "0x10D3D34", VA = "0x10D3D34")]
		public LightsControlScript()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class LoadingScene : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB298B8", Offset = "0xB298B8")]
		private sealed class <LoadScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScene <>4__this;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B60")]
				[Address(RVA = "0xFFFF48", Offset = "0xFFFF48", VA = "0xFFFF48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B62")]
				[Address(RVA = "0xFFFF90", Offset = "0xFFFF90", VA = "0xFFFF90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xFFFC58", Offset = "0xFFFC58", VA = "0xFFFC58")]
			[DebuggerHidden]
			public <LoadScene>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xFFFC84", Offset = "0xFFFC84", VA = "0xFFFC84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xFFFC88", Offset = "0xFFFC88", VA = "0xFFFC88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xFFFF50", Offset = "0xFFFF50", VA = "0xFFFF50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool StartedLoadingScene;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GvrOverlay m_Overlay;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_MaximumLoadingTime;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_SceneLoadRatio;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro m_EntitlementsFailedText;

		[NonSerialized]
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OculusAuth m_OculusAuth;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_FakeLoadingRate;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_CurrentLoadingPosition;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x10D79C4", Offset = "0x10D79C4", VA = "0x10D79C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x10D7CA8", Offset = "0x10D7CA8", VA = "0x10D7CA8")]
		public void StartLoadingScene()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x10D7A80", Offset = "0x10D7A80", VA = "0x10D7A80")]
		private void InitializeOverlay()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x10D7D24", Offset = "0x10D7D24", VA = "0x10D7D24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3D6C4", Offset = "0xB3D6C4")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x10D7D90", Offset = "0x10D7D90", VA = "0x10D7D90")]
		private void UpdateProgress(float start, float scale, float progress)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x10D7E08", Offset = "0x10D7E08", VA = "0x10D7E08")]
		public void SetCamera(Camera newCamera)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x10D7E10", Offset = "0x10D7E10", VA = "0x10D7E10")]
		public LoadingScene()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class MaterialCache : MonoBehaviour
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_SiblingRenderer;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Material, Material> m_CachedMaterialMap;

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x10DAF2C", Offset = "0x10DAF2C", VA = "0x10DAF2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x10DB008", Offset = "0x10DB008", VA = "0x10DB008")]
		public void AssignMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x10DB104", Offset = "0x10DB104", VA = "0x10DB104")]
		public MaterialCache()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class Model
	{
		[Token(Token = "0x2000414")]
		public struct Location
		{
			[Token(Token = "0x2000415")]
			public enum Type
			{
				[Token(Token = "0x4001B30")]
				Invalid,
				[Token(Token = "0x4001B31")]
				LocalFile,
				[Token(Token = "0x4001B32")]
				PolyAssetId
			}

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string path;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string id;

			[Token(Token = "0x170003FF")]
			public string AbsolutePath
			{
				[Token(Token = "0x6001B81")]
				[Address(RVA = "0x1001680", Offset = "0x1001680", VA = "0x1001680")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			public string RelativePath
			{
				[Token(Token = "0x6001B82")]
				[Address(RVA = "0x1001CE0", Offset = "0x1001CE0", VA = "0x1001CE0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			public string AssetId
			{
				[Token(Token = "0x6001B83")]
				[Address(RVA = "0x1001D48", Offset = "0x1001D48", VA = "0x1001D48")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x1001CB8", Offset = "0x1001CB8", VA = "0x1001CB8")]
			public static Location File(string relativePath)
			{
				return default(Location);
			}

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x1001CCC", Offset = "0x1001CCC", VA = "0x1001CCC")]
			public static Location PolyAsset(string assetId, string path)
			{
				return default(Location);
			}

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x1001DB0", Offset = "0x1001DB0", VA = "0x1001DB0")]
			public Type GetLocationType()
			{
				return default(Type);
			}

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x1001DB8", Offset = "0x1001DB8", VA = "0x1001DB8", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x1001DDC", Offset = "0x1001DDC", VA = "0x1001DDC", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x1001E94", Offset = "0x1001E94", VA = "0x1001E94", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x1001F34", Offset = "0x1001F34", VA = "0x1001F34")]
			public static bool operator ==(Location a, Location b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x1001F5C", Offset = "0x1001F5C", VA = "0x1001F5C")]
			public static bool operator !=(Location a, Location b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000416")]
		public struct LoadError
		{
			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly string message;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string detail;

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x10015C4", Offset = "0x10015C4", VA = "0x10015C4")]
			public LoadError(string message, [Optional] string detail)
			{
			}
		}

		[Token(Token = "0x2000417")]
		private abstract class ModelBuilder
		{
			[Serializable]
			[Token(Token = "0x2000418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB298C8", Offset = "0xB298C8")]
			private sealed class <>c
			{
				[Token(Token = "0x4001B3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001B3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Action<IDisposable> <>9__10_0;

				[Token(Token = "0x4001B3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<MeshFilter, Mesh> <>9__11_0;

				[Token(Token = "0x6001B94")]
				[Address(RVA = "0x210D8B4", Offset = "0x210D8B4", VA = "0x210D8B4")]
				public <>c()
				{
				}

				[Token(Token = "0x6001B95")]
				[Address(RVA = "0x210D8BC", Offset = "0x210D8BC", VA = "0x210D8BC")]
				internal void <BeginAsyncLoad>b__10_0(IDisposable id)
				{
				}

				[Token(Token = "0x6001B96")]
				[Address(RVA = "0x210D964", Offset = "0x210D964", VA = "0x210D964")]
				internal Mesh <CancelAsyncLoad>b__11_0(MeshFilter x)
				{
					return null;
				}
			}

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			protected string m_localPath;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Future<IDisposable> m_stateReader;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IEnumerator<Null> m_meshEnumerator;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ImportMaterialCollector m_ImportMaterialCollector;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject m_root;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33098", Offset = "0xB33098")]
			private bool <IsValid>k__BackingField;

			[Token(Token = "0x17000402")]
			public bool IsValid
			{
				[Token(Token = "0x6001B8B")]
				[Address(RVA = "0x1001F9C", Offset = "0x1001F9C", VA = "0x1001F9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D7D4", Offset = "0xB3D7D4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001B8C")]
				[Address(RVA = "0x1001FA4", Offset = "0x1001FA4", VA = "0x1001FA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D7E4", Offset = "0xB3D7E4")]
				protected set
				{
				}
			}

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x1001768", Offset = "0x1001768", VA = "0x1001768")]
			public ModelBuilder(string localPath)
			{
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x1001FB0", Offset = "0x1001FB0", VA = "0x1001FB0")]
			public void BeginAsyncLoad()
			{
			}

			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x1002194", Offset = "0x1002194", VA = "0x1002194")]
			public void CancelAsyncLoad()
			{
			}

			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x1002614", Offset = "0x1002614", VA = "0x1002614")]
			public bool TryEndAsyncLoad(out GameObject root, out ImportMaterialCollector importMaterialCollector)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B91")]
			protected abstract IDisposable DoBackgroundThreadWork();

			[Token(Token = "0x6001B92")]
			protected abstract GameObject DoUnityThreadWork(IDisposable state, out IEnumerable<Null> meshCreator, out ImportMaterialCollector importMaterialCollector);
		}

		[Token(Token = "0x2000419")]
		private class GltfModelBuilder : ModelBuilder
		{
			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			private readonly bool m_useThreadedImageLoad;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			private readonly bool m_fromPoly;

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x100161C", Offset = "0x100161C", VA = "0x100161C")]
			public GltfModelBuilder(Location location, bool useThreadedImageLoad)
			{
			}

			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x1001798", Offset = "0x1001798", VA = "0x1001798", Slot = "4")]
			protected override IDisposable DoBackgroundThreadWork()
			{
				return null;
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x1001964", Offset = "0x1001964", VA = "0x1001964", Slot = "5")]
			protected override GameObject DoUnityThreadWork(IDisposable state__, out IEnumerable<Null> meshEnumerable, out ImportMaterialCollector importMaterialCollector)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB298D8", Offset = "0xB298D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshFilter, Mesh> <>9__39_0;

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x1001338", Offset = "0x1001338", VA = "0x1001338")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x1001340", Offset = "0x1001340", VA = "0x1001340")]
			internal Mesh <UnloadModel>b__39_0(MeshFilter x)
			{
				return null;
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB298E8", Offset = "0xB298E8")]
		private sealed class <LoadFullyCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Model <>4__this;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string reason;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BA0")]
				[Address(RVA = "0x10015CC", Offset = "0x10015CC", VA = "0x10015CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BA2")]
				[Address(RVA = "0x1001614", Offset = "0x1001614", VA = "0x1001614", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x100135C", Offset = "0x100135C", VA = "0x100135C")]
			[DebuggerHidden]
			public <LoadFullyCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x1001388", Offset = "0x1001388", VA = "0x1001388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x100138C", Offset = "0x100138C", VA = "0x100138C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x10015D4", Offset = "0x10015D4", VA = "0x10015D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float kMeshMsPerFrame;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly GltfImportOptions kPolyGltfImportOptions;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly GltfImportOptions kGltfImportOptions;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static RateLimiter sm_Limiter;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_ModelParent;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bounds m_MeshBounds;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_Valid;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadError? m_LoadError;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_UsageCount;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Location m_Location;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_AllowExport;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ImportMaterialCollector m_ImportMaterialCollector;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ModelBuilder m_builder;

		[Token(Token = "0x170003FA")]
		public LoadError? Error
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xF35770", Offset = "0xF35770", VA = "0xF35770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		public string RelativePath
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xF35784", Offset = "0xF35784", VA = "0xF35784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		public string AssetId
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xF35790", Offset = "0xF35790", VA = "0xF35790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		public string HumanName
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xF3579C", Offset = "0xF3579C", VA = "0xF3579C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		public bool AllowExport
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xF35814", Offset = "0xF35814", VA = "0xF35814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xF3581C", Offset = "0xF3581C", VA = "0xF3581C")]
		public IExportableMaterial GetExportableMaterial(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xF35838", Offset = "0xF35838", VA = "0xF35838")]
		public Model(Location location)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xF35870", Offset = "0xF35870", VA = "0xF35870")]
		public Location GetLocation()
		{
			return default(Location);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xF35884", Offset = "0xF35884", VA = "0xF35884")]
		private GameObject LoadUsd(List<string> warnings)
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xF35928", Offset = "0xF35928", VA = "0xF35928")]
		private GameObject LoadFbx(List<string> warningsOut)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xF359CC", Offset = "0xF359CC", VA = "0xF359CC")]
		private GameObject LoadGltf(List<string> warnings)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xF35DB4", Offset = "0xF35DB4", VA = "0xF35DB4")]
		public void CancelLoadModelAsync()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xF35DE4", Offset = "0xF35DE4", VA = "0xF35DE4")]
		public void LoadModelAsync(bool useThreadedImageLoad)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xF35F18", Offset = "0xF35F18", VA = "0xF35F18")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xF35F28", Offset = "0xF35F28", VA = "0xF35F28")]
		public bool TryLoadModel()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xF36A80", Offset = "0xF36A80", VA = "0xF36A80")]
		public void LoadModel()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xF3631C", Offset = "0xF3631C", VA = "0xF3631C")]
		private void CreatePrefab(GameObject go)
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xF36CE8", Offset = "0xF36CE8", VA = "0xF36CE8")]
		public void UnloadModel()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xF37174", Offset = "0xF37174", VA = "0xF37174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3D774", Offset = "0xB3D774")]
		public IEnumerator LoadFullyCoroutine(string reason)
		{
			return null;
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xF36A88", Offset = "0xF36A88", VA = "0xF36A88")]
		private void DisplayWarnings(List<string> warnings)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xF371EC", Offset = "0xF371EC", VA = "0xF371EC")]
		public bool IsCached()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xF3721C", Offset = "0xF3721C", VA = "0xF3721C")]
		public void RefreshCache()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xF372E0", Offset = "0xF372E0", VA = "0xF372E0")]
		public MeshFilter[] GetMeshes()
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xF3737C", Offset = "0xF3737C", VA = "0xF3737C")]
		public string GetExportName()
		{
			return null;
		}
	}
	[Token(Token = "0x200041C")]
	public class ModelCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Serializable]
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB298F8", Offset = "0xB298F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TiltModels75, bool> <>9__20_2;

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x1002B3C", Offset = "0x1002B3C", VA = "0x1002B3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x1002B44", Offset = "0x1002B44", VA = "0x1002B44")]
			internal bool <get_MissingModels>b__20_2(TiltModels75 m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ModelCatalog m_Instance;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_DefaultModels;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_ObjLoaderStandardMaterial;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material m_ObjLoaderTransparentMaterial;

		[NonSerialized]
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, Model> m_ModelsByRelativePath;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, TrTransform[]> m_MissingNormalizedModelsByRelativePath;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, TrTransform[]> m_MissingModelsByRelativePath;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string> m_OrderedModelNames;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_FolderChanged;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_ModelsDirectory;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_ChangedFile;

		[Token(Token = "0x17000405")]
		public bool IsScanning
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xF3853C", Offset = "0xF3853C", VA = "0xF3853C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000406")]
		public int ItemCount
		{
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xF38544", Offset = "0xF38544", VA = "0xF38544", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000407")]
		public IEnumerable<TiltModels75> MissingModels
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xF38598", Offset = "0xF38598", VA = "0xF38598")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400006A")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xF383FC", Offset = "0xF383FC", VA = "0xF383FC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D844", Offset = "0xB3D844")]
			add
			{
			}
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xF3849C", Offset = "0xF3849C", VA = "0xF3849C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D854", Offset = "0xB3D854")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xF387B4", Offset = "0xF387B4", VA = "0xF387B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xF38808", Offset = "0xF38808", VA = "0xF38808")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xF38FF8", Offset = "0xF38FF8", VA = "0xF38FF8")]
		private void OnChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xF39048", Offset = "0xF39048", VA = "0xF39048")]
		public void ClearMissingModels()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xF390AC", Offset = "0xF390AC", VA = "0xF390AC")]
		public void AddMissingModel(string relativePath, TrTransform[] xfs, TrTransform[] rawXfs)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xF39160", Offset = "0xF39160", VA = "0xF39160")]
		public void PrintMissingModelWarnings()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xF39394", Offset = "0xF39394", VA = "0xF39394")]
		public Model GetModelAtIndex(int i)
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF38A74", Offset = "0xF38A74", VA = "0xF38A74")]
		public void LoadModels()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF39CE8", Offset = "0xF39CE8", VA = "0xF39CE8", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xF39D20", Offset = "0xF39D20", VA = "0xF39D20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF3942C", Offset = "0xF3942C", VA = "0xF3942C")]
		private void ProcessDirectory(string sPath, Dictionary<string, Model> oldModels)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xF39D30", Offset = "0xF39D30", VA = "0xF39D30")]
		public Model GetModel(string relativePath)
		{
			return null;
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xF39DA4", Offset = "0xF39DA4", VA = "0xF39DA4")]
		public ModelCatalog()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xF39DAC", Offset = "0xF39DAC", VA = "0xF39DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D864", Offset = "0xB3D864")]
		private TiltModels75 <get_MissingModels>b__20_0(KeyValuePair<string, TrTransform[]> e)
		{
			return null;
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xF39EAC", Offset = "0xF39EAC", VA = "0xF39EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3D874", Offset = "0xB3D874")]
		private TiltModels75 <get_MissingModels>b__20_1(KeyValuePair<string, TrTransform[]> e)
		{
			return null;
		}
	}
	[Token(Token = "0x200041E")]
	public class MonoCameraControlScript : MonoBehaviour
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_xScale;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_yScale;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_yClamp;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_cameraRotation;

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xF3E39C", Offset = "0xF3E39C", VA = "0xF3E39C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xF3E518", Offset = "0xF3E518", VA = "0xF3E518")]
		public MonoCameraControlScript()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public enum MultiCamStyle
	{
		[Token(Token = "0x4001B5A")]
		Snapshot,
		[Token(Token = "0x4001B5B")]
		AutoGif,
		[Token(Token = "0x4001B5C")]
		TimeGif,
		[Token(Token = "0x4001B5D")]
		Video,
		[Token(Token = "0x4001B5E")]
		Num
	}
	[Serializable]
	[Token(Token = "0x2000420")]
	public struct MultiCamCaptureObject
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_Object;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_Visuals;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_Camera;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_Screen;

		[NonSerialized]
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotManager m_Manager;

		[NonSerialized]
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_CameraComponent;

		[NonSerialized]
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_CameraClipPlanesBase;
	}
	[Token(Token = "0x2000421")]
	public class MultiCamCaptureRig : MonoBehaviour
	{
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29908", Offset = "0xB29908")]
		private sealed class <SnapshotFlashAnimation>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamCaptureRig <>4__this;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camera;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture texture;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxTime>5__2;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject <screen>5__3;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <screenMaterial>5__4;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__5;

			[Token(Token = "0x1700040A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD2")]
				[Address(RVA = "0x1007018", Offset = "0x1007018", VA = "0x1007018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD4")]
				[Address(RVA = "0x1007060", Offset = "0x1007060", VA = "0x1007060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x1006D9C", Offset = "0x1006D9C", VA = "0x1006D9C")]
			[DebuggerHidden]
			public <SnapshotFlashAnimation>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x1006DC8", Offset = "0x1006DC8", VA = "0x1006DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x1006DCC", Offset = "0x1006DCC", VA = "0x1006DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x1007020", Offset = "0x1007020", VA = "0x1007020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MultiCamCaptureObject[] m_CaptureObjects;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_SnapshotFlashAnimation;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve m_SnapshotAlphaAnimation;

		[NonSerialized]
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiCamStyle m_ActiveStyle;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UsdPathSerializer m_VideoUsdSerializer;

		[Token(Token = "0x17000408")]
		public UsdPathSerializer UsdPathSerializer
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x1098C18", Offset = "0x1098C18", VA = "0x1098C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		public float SnapshotFlashDuration
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x1099A64", Offset = "0x1099A64", VA = "0x1099A64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x1098C20", Offset = "0x1098C20", VA = "0x1098C20")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x1098F14", Offset = "0x1098F14", VA = "0x1098F14")]
		public void UpdateAllObjectVisualsTransform(Transform xf)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x1098FFC", Offset = "0x1098FFC", VA = "0x1098FFC")]
		public void UpdateObjectVisualsTransform(MultiCamStyle style, Transform xf)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x10990DC", Offset = "0x10990DC", VA = "0x10990DC")]
		public void UpdateAllObjectCameraTransform(Transform xf, float videoCameraLerpT)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x10991E0", Offset = "0x10991E0", VA = "0x10991E0")]
		public void UpdateObjectCameraTransform(MultiCamStyle style, Transform xf, float cameraLerpT)
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x10994CC", Offset = "0x10994CC", VA = "0x10994CC")]
		public void UpdateObjectCameraLocalTransform(MultiCamStyle style, TrTransform xf_LS)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1099588", Offset = "0x1099588", VA = "0x1099588")]
		public void ForceClippingPlanes(MultiCamStyle style)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x109975C", Offset = "0x109975C", VA = "0x109975C")]
		public ScreenshotManager ManagerFromStyle(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x109979C", Offset = "0x109979C", VA = "0x109979C")]
		public void EnableCaptureObject(MultiCamStyle style, bool enable)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x10997E8", Offset = "0x10997E8", VA = "0x10997E8")]
		public void ScaleVisuals(MultiCamStyle style, Vector3 scale)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1099864", Offset = "0x1099864", VA = "0x1099864")]
		public void EnableAllVisuals(bool enable)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1098E58", Offset = "0x1098E58", VA = "0x1098E58")]
		public void UpdateFovs()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x10998E4", Offset = "0x10998E4", VA = "0x10998E4")]
		public void EnableScreen(bool enable)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x1099964", Offset = "0x1099964", VA = "0x1099964")]
		public void EnableCamera(bool enable)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x10999E4", Offset = "0x10999E4", VA = "0x10999E4")]
		public void EnableCameraRender(bool enable)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1099ADC", Offset = "0x1099ADC", VA = "0x1099ADC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3D884", Offset = "0xB3D884")]
		public IEnumerator SnapshotFlashAnimation(int camera, Texture texture)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1099B60", Offset = "0x1099B60", VA = "0x1099B60")]
		public MultiCamCaptureRig()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class Multiplayer : MonoBehaviour
	{
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x10A099C", Offset = "0x10A099C", VA = "0x10A099C")]
		public Multiplayer()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class NonScaleChild : MonoBehaviour
	{
		[Token(Token = "0x2000425")]
		public enum Parent
		{
			[Token(Token = "0x4001B78")]
			Canvas,
			[Token(Token = "0x4001B79")]
			Scene
		}

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Parent m_Parent;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrTransform m_xfLocal;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CanvasScript m_canvas;

		[Token(Token = "0x1700040C")]
		public TrTransform PositionRotationInParentSpace
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xFCCB28", Offset = "0xFCCB28", VA = "0xFCCB28")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xFCCB40", Offset = "0xFCCB40", VA = "0xFCCB40")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xFCCC48", Offset = "0xFCCC48", VA = "0xFCCC48")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xFCCC54", Offset = "0xFCCC54", VA = "0xFCCC54")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public CanvasScript ParentCanvas
		{
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xFCCD24", Offset = "0xFCCD24", VA = "0xFCCD24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xFCCD74", Offset = "0xFCCD74", VA = "0xFCCD74")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public Transform parent
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xFCCCB8", Offset = "0xFCCCB8", VA = "0xFCCCB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		public Vector3 globalScale
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xFCD2E0", Offset = "0xFCD2E0", VA = "0xFCD2E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xFCD304", Offset = "0xFCD304", VA = "0xFCD304")]
			set
			{
			}
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xFCCFCC", Offset = "0xFCCFCC", VA = "0xFCCFCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xFCD0A0", Offset = "0xFCD0A0", VA = "0xFCD0A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xFCD1A8", Offset = "0xFCD1A8", VA = "0xFCD1A8")]
		private void OnParentPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xFCCF18", Offset = "0xFCCF18", VA = "0xFCCF18")]
		public void OnPosRotChanged()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xFCD350", Offset = "0xFCD350", VA = "0xFCD350")]
		public NonScaleChild()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class ObjModelScript : MonoBehaviour
	{
		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_NumVertsInMeshes;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter[] m_MeshChildren;

		[Token(Token = "0x17000411")]
		public int NumMeshes
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xFCEBD0", Offset = "0xFCEBD0", VA = "0xFCEBD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xFCEBEC", Offset = "0xFCEBEC", VA = "0xFCEBEC")]
		public int GetNumVertsInMeshes()
		{
			return default(int);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xFCED10", Offset = "0xFCED10", VA = "0xFCED10")]
		private static void GetAllMeshFilters(List<MeshFilter> filters, Transform t, bool isRoot)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xFCF100", Offset = "0xFCF100", VA = "0xFCF100")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xFCF1B4", Offset = "0xFCF1B4", VA = "0xFCF1B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xFCF1F8", Offset = "0xFCF1F8", VA = "0xFCF1F8")]
		public void RegisterHighlight()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xFCF1FC", Offset = "0xFCF1FC", VA = "0xFCF1FC")]
		public void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xFCF200", Offset = "0xFCF200", VA = "0xFCF200")]
		public ObjModelScript()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class OutputWindowScript : MonoBehaviour
	{
		[Token(Token = "0x2000428")]
		public enum LineType
		{
			[Token(Token = "0x4001B97")]
			None,
			[Token(Token = "0x4001B98")]
			Standard,
			[Token(Token = "0x4001B99")]
			StandardNoSound,
			[Token(Token = "0x4001B9A")]
			Special,
			[Token(Token = "0x4001B9B")]
			SpecialWithSound
		}

		[Token(Token = "0x2000429")]
		public enum InfoCardSpawnPos
		{
			[Token(Token = "0x4001B9D")]
			None,
			[Token(Token = "0x4001B9E")]
			Wand,
			[Token(Token = "0x4001B9F")]
			Brush,
			[Token(Token = "0x4001BA0")]
			UIReticle
		}

		[Token(Token = "0x200042A")]
		public class OutputLine
		{
			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_Enabled;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_Line;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer m_Renderer;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro m_TextMesh;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float m_CurrentHeight;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float m_DesiredHeight;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float m_SpringAngle;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float m_SpringVelocity;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float m_LifeCountdown;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color m_Color;

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x10E7A58", Offset = "0x10E7A58", VA = "0x10E7A58")]
			public OutputLine()
			{
			}
		}

		[Token(Token = "0x200042B")]
		public class QueuedLine
		{
			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Text;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LineType m_Type;

			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x10E7A60", Offset = "0x10E7A60", VA = "0x10E7A60")]
			public QueuedLine()
			{
			}
		}

		[Token(Token = "0x200042C")]
		public class DeferredErrorMessage
		{
			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputManager.ControllerName m_Controller;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_Msg;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public object m_Detail;

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x10E7A50", Offset = "0x10E7A50", VA = "0x10E7A50")]
			public DeferredErrorMessage()
			{
			}
		}

		[Token(Token = "0x4001B7C")]
		private const int CONTROLLER_DETAIL_MAX_LENGTH = 70;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OutputWindowScript m_Instance;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip m_StandardOutputSound;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip m_SpecialOutputSound;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_AudioMinTriggerTime;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_TextLine;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_TextSpecialColor;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_SpringK;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_SpringDampen;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_SpawnAngle;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_DesiredAngle;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 m_BaseOffset;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_LineSpacing;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_LineOffset;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_LineHeightSpeed;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_HoldDuration;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_NumLines;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_InfoCardPrefab;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_AudioVolume;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_AudioTimestamp;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_BasePosition;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private OutputLine[] m_Lines;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<QueuedLine> m_LineQueue;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<DeferredErrorMessage> m_DeferredErrors;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xFD9A8C", Offset = "0xFD9A8C", VA = "0xFD9A8C")]
		public static void Error(string msg, [Optional] object detail)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xFD9AA0", Offset = "0xFD9AA0", VA = "0xFD9AA0")]
		public static void Error(InputManager.ControllerName controller, string msg, [Optional] object detail)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xFDA234", Offset = "0xFDA234", VA = "0xFDA234")]
		public static string GetShorterFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xFDA2D4", Offset = "0xFDA2D4", VA = "0xFDA2D4")]
		public static void ReportFileSaved(WordIDs exclamationID, string filename, InfoCardSpawnPos spawnPos = InfoCardSpawnPos.None)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xFDA6B0", Offset = "0xFDA6B0", VA = "0xFDA6B0")]
		public static void ReportFileSaved(string exclamation, string filename, InfoCardSpawnPos spawnPos = InfoCardSpawnPos.None)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xFDA9F0", Offset = "0xFDA9F0", VA = "0xFDA9F0")]
		public void UpdateBasePositionHeight(float fHeightAdjust)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xFD9E40", Offset = "0xFD9E40", VA = "0xFD9E40")]
		private static void DeferError(InputManager.ControllerName controller, string msg, object obj)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xFDAA00", Offset = "0xFDAA00", VA = "0xFDAA00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xFDAE50", Offset = "0xFDAE50", VA = "0xFDAE50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xFDAFB8", Offset = "0xFDAFB8", VA = "0xFDAFB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xFDA0E8", Offset = "0xFDA0E8", VA = "0xFDA0E8")]
		public void CreateInfoCardAtController(InputManager.ControllerName eName, string sText, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xFD9F58", Offset = "0xFD9F58", VA = "0xFD9F58")]
		public void CreateInfoCardAtController(InputManager.ControllerName eName, WordIDs wordID, [Optional] string insertedText, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xFDA890", Offset = "0xFDA890", VA = "0xFDA890")]
		public void CreateInfoCard(Vector3 vPos, string sText, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xFDB6BC", Offset = "0xFDB6BC", VA = "0xFDB6BC")]
		public void CreateInfoCard(Vector3 vPos, WordIDs wordID, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xFDA504", Offset = "0xFDA504", VA = "0xFDA504")]
		public void CreateInfoCard(Vector3 vPos, WordIDs wordID, string insertedString, float fPopScalar = 1f, bool alsoConsole = true)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xFDB864", Offset = "0xFDB864", VA = "0xFDB864")]
		public void AddNewLine(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xFDB874", Offset = "0xFDB874", VA = "0xFDB874")]
		public void AddNewLine(LineType type, string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xFDB2CC", Offset = "0xFDB2CC", VA = "0xFDB2CC")]
		private void CreateLineFromQueue(string sNewLine, LineType rSoundType)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xFDB9F4", Offset = "0xFDB9F4", VA = "0xFDB9F4")]
		private void RequestPlaySound(AudioClip sound, Vector3 vPos)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xFDB964", Offset = "0xFDB964", VA = "0xFDB964")]
		private int GetOpenLineIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xFDB250", Offset = "0xFDB250", VA = "0xFDB250")]
		private void AdjustLineHeights(float fAmount, float fCutoffPoint)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xFDBAC0", Offset = "0xFDBAC0", VA = "0xFDBAC0")]
		public void EnableRendering(bool bEnable)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xFDBCB0", Offset = "0xFDBCB0", VA = "0xFDBCB0")]
		public OutputWindowScript()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public enum OverlayType
	{
		[Token(Token = "0x4001BB1")]
		LoadSketch,
		[Token(Token = "0x4001BB2")]
		LoadModel,
		[Token(Token = "0x4001BB3")]
		LoadGeneric,
		[Token(Token = "0x4001BB4")]
		LoadImages,
		[Token(Token = "0x4001BB5")]
		Export,
		[Token(Token = "0x4001BB6")]
		LoadMedia
	}
	[Token(Token = "0x200042E")]
	public enum OverlayState
	{
		[Token(Token = "0x4001BB8")]
		Hidden,
		[Token(Token = "0x4001BB9")]
		Visible,
		[Token(Token = "0x4001BBA")]
		Exiting
	}
	[Token(Token = "0x200042F")]
	public class OverlayManager : MonoBehaviour
	{
		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29918", Offset = "0xB29918")]
		private sealed class <RunInCompositor>d__36 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OverlayType overlayType;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool bFullProgress;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeDuration;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerator<Null> action;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool showSuccessText;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool <routineInterrupted>5__2;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <t>5__3;

			[Token(Token = "0x17000415")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001C22")]
				[Address(RVA = "0x10E88C4", Offset = "0x10E88C4", VA = "0x10E88C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C24")]
				[Address(RVA = "0x10E890C", Offset = "0x10E890C", VA = "0x10E890C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x10E8188", Offset = "0x10E8188", VA = "0x10E8188")]
			[DebuggerHidden]
			public <RunInCompositor>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x10E81B4", Offset = "0x10E81B4", VA = "0x10E81B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x10E8378", Offset = "0x10E8378", VA = "0x10E8378", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x10E82FC", Offset = "0x10E82FC", VA = "0x10E82FC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x10E8248", Offset = "0x10E8248", VA = "0x10E8248")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x10E88CC", Offset = "0x10E88CC", VA = "0x10E88CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29928", Offset = "0xB29928")]
		private struct <FadeCompositorAndOverlayAsync>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float end;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float start;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsed>5__2;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private object <>u__1;

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x10E7E80", Offset = "0x10E7E80", VA = "0x10E7E80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x10E817C", Offset = "0x10E817C", VA = "0x10E817C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29938", Offset = "0xB29938")]
		private struct <RunInCompositorAsync>d__38<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayType overlayType;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeDuration;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IProgress<double>, Task<T>> taskCreator;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool showSuccessText;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>u__1;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Task<T> <inner>5__2;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__3;

			[Token(Token = "0x6001C27")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C28")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29948", Offset = "0xB29948")]
		private struct <RunInCompositorAsync>d__39<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OverlayType overlayType;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float fadeDuration;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> action;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool showSuccessText;

			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>u__1;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <result>5__2;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001C29")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C2A")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29958", Offset = "0xB29958")]
		private sealed class <AsCoroutine>d__42 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000417")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001C2E")]
				[Address(RVA = "0x10E7AD4", Offset = "0x10E7AD4", VA = "0x10E7AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C30")]
				[Address(RVA = "0x10E7B1C", Offset = "0x10E7B1C", VA = "0x10E7B1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x10E7A68", Offset = "0x10E7A68", VA = "0x10E7A68")]
			[DebuggerHidden]
			public <AsCoroutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x10E7A94", Offset = "0x10E7A94", VA = "0x10E7A94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x10E7A98", Offset = "0x10E7A98", VA = "0x10E7A98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x10E7ADC", Offset = "0x10E7ADC", VA = "0x10E7ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29968", Offset = "0xB29968")]
		private sealed class <ConsumeAsProgress>d__43 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> coroutine;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OverlayManager <>4__this;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<float> <coroutineWithProgress>5__2;

			[Token(Token = "0x17000419")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001C35")]
				[Address(RVA = "0x10E7E30", Offset = "0x10E7E30", VA = "0x10E7E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C37")]
				[Address(RVA = "0x10E7E78", Offset = "0x10E7E78", VA = "0x10E7E78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x10E7B24", Offset = "0x10E7B24", VA = "0x10E7B24")]
			[DebuggerHidden]
			public <ConsumeAsProgress>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x10E7B50", Offset = "0x10E7B50", VA = "0x10E7B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x10E7C28", Offset = "0x10E7C28", VA = "0x10E7C28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x10E7B6C", Offset = "0x10E7B6C", VA = "0x10E7B6C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x10E7E38", Offset = "0x10E7E38", VA = "0x10E7E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OverlayManager m_Instance;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_OverlayOffsetDistance;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_OverlayHeight;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture m_BlackTexture;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_OverlayStateTransitionDuration;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material m_Material;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Font m_Font;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Rect m_LogoArea;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Rect m_TextArea;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_FontSize;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int m_Size;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color m_BackgroundColor;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Color m_TextColor;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Progress<double> m_progress;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture m_GUILogo;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_RefuseProgressChanges;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private OverlayState m_CurrentOverlayState;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_OverlayStateTransitionValue;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private OverlayType m_CurrentOverlayType;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] m_TextVertices;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] m_TextUvs;

		[Token(Token = "0x17000412")]
		public IProgress<double> Progress
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xFDBCCC", Offset = "0xFDBCCC", VA = "0xFDBCCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		public bool CanDisplayQuickloadOverlay
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xFDBCD4", Offset = "0xFDBCD4", VA = "0xFDBCD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000414")]
		public OverlayState CurrentOverlayState
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xFDBD20", Offset = "0xFDBD20", VA = "0xFDBD20")]
			get
			{
				return default(OverlayState);
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xFDBD28", Offset = "0xFDBD28", VA = "0xFDBD28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xFDC4F8", Offset = "0xFDC4F8", VA = "0xFDC4F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xFDC5A8", Offset = "0xFDC5A8", VA = "0xFDC5A8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xFDC734", Offset = "0xFDC734", VA = "0xFDC734")]
		public void SetOverlayFromType(OverlayType type)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xFDC87C", Offset = "0xFDC87C", VA = "0xFDC87C")]
		private void OnProgressChanged(object sender, double value)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xFDC894", Offset = "0xFDC894", VA = "0xFDC894")]
		public void UpdateProgress(float fProg, bool bForce = false)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xFDC8AC", Offset = "0xFDC8AC", VA = "0xFDC8AC")]
		public void RefuseProgressBarChanges(bool bRefuse)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xFDC8B8", Offset = "0xFDC8B8", VA = "0xFDC8B8")]
		public IEnumerator<Null> RunInCompositorWithProgress(OverlayType overlayType, IEnumerator<float> coroutineWithProgress, float fadeDuration)
		{
			return null;
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xFDCA30", Offset = "0xFDCA30", VA = "0xFDCA30")]
		public IEnumerator<Null> RunInCompositor(OverlayType overlayType, Action action, float fadeDuration, bool bFullProgress = false, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xFDC97C", Offset = "0xFDC97C", VA = "0xFDC97C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3D934", Offset = "0xB3D934")]
		public IEnumerator<Null> RunInCompositor(OverlayType overlayType, IEnumerator<Null> action, float fadeDuration, bool bFullProgress = false, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xFDCAF8", Offset = "0xFDCAF8", VA = "0xFDCAF8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB3D994", Offset = "0xB3D994")]
		private Task FadeCompositorAndOverlayAsync(float start, float end, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001C14")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB3D9F4", Offset = "0xB3D9F4")]
		public Task<T> RunInCompositorAsync<T>(OverlayType overlayType, Func<IProgress<double>, Task<T>> taskCreator, float fadeDuration, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x6001C15")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB3DA54", Offset = "0xB3DA54")]
		public Task<T> RunInCompositorAsync<T>(OverlayType overlayType, Func<T> action, float fadeDuration, bool showSuccessText = false)
		{
			return null;
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xFDCC2C", Offset = "0xFDCC2C", VA = "0xFDCC2C")]
		public void SetOverlayTransitionRatio(float fRatio)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xFDCCD0", Offset = "0xFDCCD0", VA = "0xFDCCD0")]
		public void HideOverlay()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xFDCA8C", Offset = "0xFDCA8C", VA = "0xFDCA8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DAB4", Offset = "0xB3DAB4")]
		private static IEnumerator<Null> AsCoroutine(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xFDC904", Offset = "0xFDC904", VA = "0xFDC904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DB14", Offset = "0xB3DB14")]
		private IEnumerator<Null> ConsumeAsProgress(IEnumerator<float> coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xFDC244", Offset = "0xFDC244", VA = "0xFDC244")]
		public void RenderLogo(double progress)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xFDBE9C", Offset = "0xFDBE9C", VA = "0xFDBE9C")]
		public void SetText(WordIDs wordID)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xFDCCE8", Offset = "0xFDCCE8", VA = "0xFDCCE8")]
		public OverlayManager()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class OverrideCameraFramerate : MonoBehaviour
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_FramesToSkip;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frameCount;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xFDCCF8", Offset = "0xFDCCF8", VA = "0xFDCCF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xFDCD5C", Offset = "0xFDCD5C", VA = "0xFDCD5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xFDCDAC", Offset = "0xFDCDAC", VA = "0xFDCDAC")]
		public OverrideCameraFramerate()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class PanelSweetSpotScript : MonoBehaviour
	{
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_PanelAttachRadius;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_MeshRadius;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_BorderSphere;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector4 m_BorderSphereHighlightPos;

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x113F7C4", Offset = "0x113F7C4", VA = "0x113F7C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x113F824", Offset = "0x113F824", VA = "0x113F824")]
		public void EnableBorderSphere(bool bEnable, Vector3 vHightlightPos, float fHighlightRadius)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x113F940", Offset = "0x113F940", VA = "0x113F940")]
		public PanelSweetSpotScript()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public abstract class ParametricStrokeCreator
	{
		[Token(Token = "0x4001C06")]
		public const float kSecondsToMs = 1000f;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TrTransform m_initialTransform;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_previousFinalRotation;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected double m_initialTime;

		[Token(Token = "0x1700041B")]
		public TrTransform InitialTransform
		{
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x11404A4", Offset = "0x11404A4", VA = "0x11404A4")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x11404B0", Offset = "0x11404B0", VA = "0x11404B0")]
		public ParametricStrokeCreator(TrTransform initialTransform)
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1140538", Offset = "0x1140538", VA = "0x1140538")]
		public IEnumerable<PointerManager.ControlPoint> GetPoints(TrTransform finalTransform)
		{
			return null;
		}

		[Token(Token = "0x6001C41")]
		protected abstract IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform);

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x11405E4", Offset = "0x11405E4", VA = "0x11405E4", Slot = "5")]
		public virtual float ProcessBrushSize(float currentBrushSize_RS)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000439")]
	public class SphereCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29978", Offset = "0xB29978")]
		private sealed class <DoGetPoints>d__5 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private TrTransform finalTransform;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public SphereCreator <>4__this;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float <radius>5__2;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <time0>5__3;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private double <time1>5__4;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float <loops>5__5;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float <thetaOffset>5__6;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private int <pointTotal>5__7;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private TrTransform <spherePose>5__8;

			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <k>5__9;

			[Token(Token = "0x1700041C")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x6001C49")]
				[Address(RVA = "0xF21EEC", Offset = "0xF21EEC", VA = "0xF21EEC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x1700041D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C4B")]
				[Address(RVA = "0xF21F44", Offset = "0xF21F44", VA = "0xF21F44", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xF21A14", Offset = "0xF21A14", VA = "0xF21A14")]
			[DebuggerHidden]
			public <DoGetPoints>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xF21A4C", Offset = "0xF21A4C", VA = "0xF21A4C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xF21A50", Offset = "0xF21A50", VA = "0xF21A50", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xF21F04", Offset = "0xF21F04", VA = "0xF21F04", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xF21FB0", Offset = "0xF21FB0", VA = "0xF21FB0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xF22088", Offset = "0xF22088", VA = "0xF22088", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C0A")]
		private const float kMinimumBrushSize_RS = 0.3f;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly float m_BrushSize_RS;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private readonly float m_BrushSize_CS;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x11AB830", Offset = "0x11AB830", VA = "0x11AB830", Slot = "5")]
		public override float ProcessBrushSize(float currentBrushSize_RS)
		{
			return default(float);
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x11AB838", Offset = "0x11AB838", VA = "0x11AB838")]
		public SphereCreator(TrTransform initialTransform, float brushSize_RS, float canvasScale)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x11AB8A4", Offset = "0x11AB8A4", VA = "0x11AB8A4", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DC94", Offset = "0xB3DC94")]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x200043B")]
	public class LineCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29988", Offset = "0xB29988")]
		private sealed class <DoGetPoints>d__4 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LineCreator <>4__this;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TrTransform finalTransform;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private double <t0>5__2;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <t1>5__3;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private TrTransform <xf0>5__4;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TrTransform <xf1>5__5;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private int <n>5__6;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private int <i>5__7;

			[Token(Token = "0x1700041E")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x6001C53")]
				[Address(RVA = "0xFFF8FC", Offset = "0xFFF8FC", VA = "0xFFF8FC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x1700041F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C55")]
				[Address(RVA = "0xFFF954", Offset = "0xFFF954", VA = "0xFFF954", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xFFF344", Offset = "0xFFF344", VA = "0xFFF344")]
			[DebuggerHidden]
			public <DoGetPoints>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xFFF37C", Offset = "0xFFF37C", VA = "0xFFF37C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xFFF380", Offset = "0xFFF380", VA = "0xFFF380", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xFFF914", Offset = "0xFFF914", VA = "0xFFF914", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xFFF9C0", Offset = "0xFFF9C0", VA = "0xFFF9C0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xFFFA98", Offset = "0xFFFA98", VA = "0xFFFA98", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_flat;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion m_qPreviousInput;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion m_qPreviousOutput;

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x10D63F4", Offset = "0x10D63F4", VA = "0x10D63F4")]
		public LineCreator(TrTransform initialTransform, bool flat = false)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x10D6454", Offset = "0x10D6454", VA = "0x10D6454", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DD64", Offset = "0xB3DD64")]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	public class CircleCreator : ParametricStrokeCreator
	{
		[Token(Token = "0x200043E")]
		private struct ComputeTangentState
		{
			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 nRadius;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 preferred;
		}

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29998", Offset = "0xB29998")]
		private sealed class <DoGetPoints>d__6 : IEnumerable<PointerManager.ControlPoint>, IEnumerable, IEnumerator<PointerManager.ControlPoint>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private PointerManager.ControlPoint <>2__current;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CircleCreator <>4__this;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TrTransform finalTransform;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public TrTransform <>3__finalTransform;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private double <t0>5__2;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private double <t1>5__3;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Vector3 <center>5__4;

			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private Vector3 <nAxis>5__5;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TrTransform <xf0>5__6;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private int <n>5__7;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private int <i>5__8;

			[Token(Token = "0x17000420")]
			private PointerManager.ControlPoint System.Collections.Generic.IEnumerator<TiltBrush.PointerManager.ControlPoint>.Current
			{
				[Token(Token = "0x6001C60")]
				[Address(RVA = "0x11256DC", Offset = "0x11256DC", VA = "0x11256DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(PointerManager.ControlPoint);
				}
			}

			[Token(Token = "0x17000421")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C62")]
				[Address(RVA = "0x1125734", Offset = "0x1125734", VA = "0x1125734", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x11252C0", Offset = "0x11252C0", VA = "0x11252C0")]
			[DebuggerHidden]
			public <DoGetPoints>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x11252F8", Offset = "0x11252F8", VA = "0x11252F8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x11252FC", Offset = "0x11252FC", VA = "0x11252FC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x11256F4", Offset = "0x11256F4", VA = "0x11256F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x11257A0", Offset = "0x11257A0", VA = "0x11257A0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<PointerManager.ControlPoint> System.Collections.Generic.IEnumerable<TiltBrush.PointerManager.ControlPoint>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0x1125878", Offset = "0x1125878", VA = "0x1125878", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 m_vPreferredTangent;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1315FC8", Offset = "0x1315FC8", VA = "0x1315FC8")]
		public CircleCreator(TrTransform initialTransform)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1316010", Offset = "0x1316010", VA = "0x1316010")]
		private static Vector3 InDirectionOf(Vector3 desired, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x1316048", Offset = "0x1316048", VA = "0x1316048")]
		private static Vector3 PerpendicularPart(Vector3 nPerp, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x1316078", Offset = "0x1316078", VA = "0x1316078")]
		private Vector3 ComputeTangent(ComputeTangentState s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1316264", Offset = "0x1316264", VA = "0x1316264", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DE34", Offset = "0xB3DE34")]
		protected override IEnumerable<PointerManager.ControlPoint> DoGetPoints(TrTransform finalTransform)
		{
			return null;
		}
	}
	[Token(Token = "0x2000440")]
	public class ParticlePositionedScript : MonoBehaviour
	{
		[Token(Token = "0x2000441")]
		public class ManagedObject
		{
			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Object;

			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrailRenderer m_TrailRenderer;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_Enabled;

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x10E94FC", Offset = "0x10E94FC", VA = "0x10E94FC")]
			public ManagedObject()
			{
			}
		}

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_ObjectPrefab;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_NumObjects;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ManagedObject[] m_Objects;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] m_ObjectUpdated;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<uint, int> m_ObjectParticleMap;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] m_Particles;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_BaseTrailTime;

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1141904", Offset = "0x1141904", VA = "0x1141904")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x1141C84", Offset = "0x1141C84", VA = "0x1141C84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x1141C88", Offset = "0x1141C88", VA = "0x1141C88")]
		protected void UpdateObjects()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x11420A4", Offset = "0x11420A4", VA = "0x11420A4")]
		private int GetOpenIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x11419E8", Offset = "0x11419E8", VA = "0x11419E8")]
		private void PopulateObjects()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x114210C", Offset = "0x114210C", VA = "0x114210C")]
		public ParticlePositionedScript()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB299A8", Offset = "0xB299A8")]
	public class PlatformConfig : ScriptableObject
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int HullBrushMaxVertInputs;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int HullBrushMaxKnots;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ReferenceImagesMaxFileSize;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int ReferenceImagesMaxDimension;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ReferenceImagesResizeDimension;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MemoryWarningVertCount;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UseFileSystemWatcher;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool EnableAutosave;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB332F8", Offset = "0xB332F8")]
		public float QuickLoadMaxDistancePerFrame;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject IntroSketchPrefab;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB33330", Offset = "0xB33330")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB33330", Offset = "0xB33330")]
		public bool EnablePolyPreload;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB33390", Offset = "0xB33390")]
		public bool AvoidUploadHandlerFile;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB333C8", Offset = "0xB333C8")]
		public bool EnableExportFbx;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool EnableExportGlb;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool EnableExportJson;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool EnableExportUsd;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool EnableExportMemoryOptimization;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB33400", Offset = "0xB33400")]
		public bool EnableMulticamPreview;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MultiCamStyle[] EnabledMulticamStyles;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int MaxSnapshotDimension;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve FrameRateToPreviewRenderGap;

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x1028CB4", Offset = "0x1028CB4", VA = "0x1028CB4")]
		public PlatformConfig()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public enum PlaybackCapabilities
	{

	}
	[Token(Token = "0x2000444")]
	public interface IScenePlayback
	{
		[Token(Token = "0x17000422")]
		int MaxPointerUnderrun
		{
			[Token(Token = "0x6001C71")]
			get;
		}

		[Token(Token = "0x17000423")]
		int MemoryObjectsDrawn
		{
			[Token(Token = "0x6001C72")]
			get;
		}

		[Token(Token = "0x6001C6D")]
		bool Update();

		[Token(Token = "0x6001C6E")]
		void QuickLoadRemaining();

		[Token(Token = "0x6001C6F")]
		void AddStroke(Stroke stroke);

		[Token(Token = "0x6001C70")]
		void RemoveStroke(Stroke stroke);
	}
	[Token(Token = "0x2000445")]
	public class StrokePlaybackByDistance : StrokePlayback
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScenePlaybackByStrokeDistance m_parent;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_playBackAtStrokeGranularity;

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x11B6CB8", Offset = "0x11B6CB8", VA = "0x11B6CB8")]
		public StrokePlaybackByDistance(ScenePlaybackByStrokeDistance parent)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x11B6D38", Offset = "0x11B6D38", VA = "0x11B6D38")]
		public void Init(Stroke stroke, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x11B6E28", Offset = "0x11B6E28", VA = "0x11B6E28", Slot = "5")]
		protected override bool IsControlPointReady(PointerManager.ControlPoint controlPoint)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000446")]
	public class ScenePlaybackByStrokeDistance : IScenePlayback
	{
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB299FC", Offset = "0xB299FC")]
		private sealed class <DrawWhileMetersRemaining>d__14 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScenePlaybackByStrokeDistance <>4__this;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<Stroke> strokes;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CanvasScript targetCanvas;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private StrokePlaybackByDistance <playback>5__2;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<Stroke> <>7__wrap2;

			[Token(Token = "0x17000429")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001C86")]
				[Address(RVA = "0x10F5844", Offset = "0x10F5844", VA = "0x10F5844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C88")]
				[Address(RVA = "0x10F588C", Offset = "0x10F588C", VA = "0x10F588C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x10F53C8", Offset = "0x10F53C8", VA = "0x10F53C8")]
			[DebuggerHidden]
			public <DrawWhileMetersRemaining>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x10F53F4", Offset = "0x10F53F4", VA = "0x10F53F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x10F54CC", Offset = "0x10F54CC", VA = "0x10F54CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x10F5410", Offset = "0x10F5410", VA = "0x10F5410")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x10F584C", Offset = "0x10F584C", VA = "0x10F584C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Timeslice> m_drawer;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_MemoryObjectsDrawn;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_metersRemaining;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_OutOfMeters;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_bQuickLoad;

		[Token(Token = "0x17000424")]
		public bool QuickLoad
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xFC2944", Offset = "0xFC2944", VA = "0xFC2944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000425")]
		private float MetersPerSecond
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xFC294C", Offset = "0xFC294C", VA = "0xFC294C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000426")]
		public bool HasMetersRemaining
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xFC29C4", Offset = "0xFC29C4", VA = "0xFC29C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000427")]
		public int MaxPointerUnderrun
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xFC2BD0", Offset = "0xFC2BD0", VA = "0xFC2BD0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000428")]
		public int MemoryObjectsDrawn
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xFC2BD8", Offset = "0xFC2BD8", VA = "0xFC2BD8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xFC29D4", Offset = "0xFC29D4", VA = "0xFC29D4")]
		public void TryDecrementDistance(float decrementAmount)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xFC29F8", Offset = "0xFC29F8", VA = "0xFC29F8")]
		public ScenePlaybackByStrokeDistance(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xFC2AC0", Offset = "0xFC2AC0", VA = "0xFC2AC0", Slot = "4")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xFC2A40", Offset = "0xFC2A40", VA = "0xFC2A40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3DF04", Offset = "0xB3DF04")]
		private IEnumerator<Timeslice> DrawWhileMetersRemaining(IEnumerable<Stroke> strokes, CanvasScript targetCanvas)
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xFC2BBC", Offset = "0xFC2BBC", VA = "0xFC2BBC", Slot = "5")]
		public void QuickLoadRemaining()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xFC2BC8", Offset = "0xFC2BC8", VA = "0xFC2BC8", Slot = "6")]
		public void AddStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xFC2BCC", Offset = "0xFC2BCC", VA = "0xFC2BCC", Slot = "7")]
		public void RemoveStroke(Stroke stroke)
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class StrokePlaybackByTime : StrokePlayback
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LinkedListNode<Stroke> m_strokeNode;

		[Token(Token = "0x1700042B")]
		public LinkedListNode<Stroke> StrokeNode
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x11B6EE4", Offset = "0x11B6EE4", VA = "0x11B6EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x11B6EEC", Offset = "0x11B6EEC", VA = "0x11B6EEC")]
		public void Init(LinkedListNode<Stroke> memoryObjectNode, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x11B6F60", Offset = "0x11B6F60", VA = "0x11B6F60", Slot = "4")]
		public override void ClearPlayback()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x11B6F68", Offset = "0x11B6F68", VA = "0x11B6F68", Slot = "5")]
		protected override bool IsControlPointReady(PointerManager.ControlPoint controlPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x11B6FE8", Offset = "0x11B6FE8", VA = "0x11B6FE8")]
		public StrokePlaybackByTime()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class ScenePlaybackByTimeLayered : IScenePlayback
	{
		[Serializable]
		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A0C", Offset = "0xB29A0C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Stroke, Stroke, bool> <>9__11_0;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Stroke, Stroke, bool> <>9__11_1;

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x10F58F4", Offset = "0x10F58F4", VA = "0x10F58F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x10F58FC", Offset = "0x10F58FC", VA = "0x10F58FC")]
			internal bool <.ctor>b__11_0(Stroke a, Stroke b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x10F5948", Offset = "0x10F5948", VA = "0x10F5948")]
			internal bool <.ctor>b__11_1(Stroke a, Stroke b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StrokePlaybackByTime[] m_strokePlaybacks;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_lastTimeMs;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SortedLinkedList<Stroke> m_unrenderedStrokes;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SortedLinkedList<Stroke> m_renderedStrokes;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_strokeCount;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_maxPointerUnderrun;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasScript m_targetCanvas;

		[Token(Token = "0x1700042C")]
		public int MaxPointerUnderrun
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xFC2BE0", Offset = "0xFC2BE0", VA = "0xFC2BE0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700042D")]
		public int MemoryObjectsDrawn
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xFC2BE8", Offset = "0xFC2BE8", VA = "0xFC2BE8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xFC2BF0", Offset = "0xFC2BF0", VA = "0xFC2BF0")]
		public ScenePlaybackByTimeLayered(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xFC2F48", Offset = "0xFC2F48", VA = "0xFC2F48", Slot = "4")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xFC350C", Offset = "0xFC350C", VA = "0xFC350C", Slot = "6")]
		public void AddStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xFC3584", Offset = "0xFC3584", VA = "0xFC3584", Slot = "7")]
		public void RemoveStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xFC360C", Offset = "0xFC360C", VA = "0xFC360C", Slot = "5")]
		public void QuickLoadRemaining()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public abstract class StrokePlayback
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HashSet<Guid> sm_BrushGuidWarnings;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Stroke m_stroke;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PointerScript m_pointer;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_nextControlPoint;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isDone;

		[Token(Token = "0x1400006B")]
		public static event Action<Stroke> OnStrokePlaybackStarted
		{
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x11B61D0", Offset = "0x11B61D0", VA = "0x11B61D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFB4", Offset = "0xB3DFB4")]
			add
			{
			}
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x11B62C4", Offset = "0x11B62C4", VA = "0x11B62C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFC4", Offset = "0xB3DFC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x11B63B8", Offset = "0x11B63B8", VA = "0x11B63B8")]
		public void BaseInit(Stroke stroke, PointerScript pointer, CanvasScript canvas)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x11B67B4", Offset = "0x11B67B4", VA = "0x11B67B4", Slot = "4")]
		public virtual void ClearPlayback()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x11B67FC", Offset = "0x11B67FC", VA = "0x11B67FC")]
		public bool IsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		protected abstract bool IsControlPointReady(PointerManager.ControlPoint controlPoint);

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x11B6804", Offset = "0x11B6804", VA = "0x11B6804")]
		public void Update()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x11B6C20", Offset = "0x11B6C20", VA = "0x11B6C20")]
		protected StrokePlayback()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class PodiumScript : MonoBehaviour
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_Base;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_Stand;

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1029530", Offset = "0x1029530", VA = "0x1029530")]
		public PodiumScript()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class PointerManager : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		public enum SymmetryMode
		{
			[Token(Token = "0x4001CAE")]
			None,
			[Token(Token = "0x4001CAF")]
			SinglePlane,
			[Token(Token = "0x4001CB0")]
			FourAroundY,
			[Token(Token = "0x4001CB1")]
			DebugMultiple
		}

		[Token(Token = "0x200044F")]
		public struct ControlPoint
		{
			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_Pos;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion m_Orient;

			[Token(Token = "0x4001CB4")]
			public const uint EXTENSIONS = 3u;

			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_Pressure;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint m_TimestampMs;
		}

		[Token(Token = "0x2000450")]
		protected class PointerData
		{
			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerScript m_Script;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TrTransform m_StraightEdgeXf_CS;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool m_UiEnabled;

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x10EA604", Offset = "0x10EA604", VA = "0x10EA604")]
			public PointerData()
			{
			}
		}

		[Token(Token = "0x2000451")]
		private enum LineCreationState
		{
			[Token(Token = "0x4001CBB")]
			WaitingForInput,
			[Token(Token = "0x4001CBC")]
			RecordingInput,
			[Token(Token = "0x4001CBD")]
			ProcessingStraightEdge
		}

		[Token(Token = "0x2000452")]
		private struct StoredBrushInfo
		{
			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BrushDescriptor brush;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float size01;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Color color;
		}

		[Serializable]
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A1C", Offset = "0xB29A1C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__144_0;

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x10EA5F8", Offset = "0x10EA5F8", VA = "0x10EA5F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x10EA600", Offset = "0x10EA600", VA = "0x10EA600")]
			internal void <.ctor>b__144_0()
			{
			}
		}

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PointerManager m_Instance;

		[Token(Token = "0x4001C7E")]
		private const float STRAIGHTEDGE_PRESSURE = 1f;

		[Token(Token = "0x4001C7F")]
		private const int STRAIGHTEDGE_DRAWIN_FRAMES = 16;

		[Token(Token = "0x4001C80")]
		private const int DEBUG_MULTIPLE_NUM_POINTERS = 3;

		[Token(Token = "0x4001C81")]
		private const string PLAYER_PREFS_POINTER_ANGLE_OLD = "Pointer_Angle";

		[Token(Token = "0x4001C82")]
		private const string PLAYER_PREFS_POINTER_ANGLE = "Pointer_Angle2";

		[Token(Token = "0x4001C83")]
		public const string PLAYER_PREFS_STRAIGHT_EDGE_RULER = "StraightEdgeRuler";

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_MaxPointers;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_MainPointerPrefab;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_AuxPointerPrefab;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_DefaultPointerAngle;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_DebugViewControlPoints;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StraightEdgeGuideScript m_StraightEdgeGuide;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BrushDescriptor m_StraightEdgeProxyBrush;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_SymmetryWidget;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_SymmetryDebugMultipleOffset;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_SymmetryPointerStencilBoost;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_GestureMinCircleSize;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_GestureBeginDist;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_GestureCloseLoopDist;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_GestureStepDist;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_GestureMaxAngle;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_NumActivePointers;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_PointersRenderingRequested;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_PointersRenderingActive;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool m_PointersHideOnControllerLoss;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_FreePaintPointerAngle;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LineCreationState m_CurrentLineCreationState;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_LineEnabled;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_EatLineEnabledInputFrames;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerData[] m_Pointers;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_InPlaybackMode;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PointerData m_MainPointerData;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private StoredBrushInfo? m_StoredBrushInfo;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_StraightEdgeEnabled;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_StraightEdgeProxyActive;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CircleGesture m_StraightEdgeGesture;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<ControlPoint> m_StraightEdgeControlPoints_CS;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int m_StraightEdgeControlPointIndex;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private SymmetryMode m_CurrentSymmetryMode;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SymmetryWidget m_SymmetryWidgetScript;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_UseSymmetryWidget;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_SketchSurfaceLineDepthVarianceBase;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_SketchSurfaceLineDepthVariance;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_SketchSurfaceLineDepthIncrement;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_SketchSurfaceLineDepth;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool m_SketchSurfaceLineWasEnabled;

		[Token(Token = "0x1700042E")]
		public PointerScript MainPointer
		{
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x10264EC", Offset = "0x10264EC", VA = "0x10264EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		public Color PointerColor
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x10299B8", Offset = "0x10299B8", VA = "0x10299B8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x10299E4", Offset = "0x10299E4", VA = "0x10299E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public float PointerPressure
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x1029B24", Offset = "0x1029B24", VA = "0x1029B24")]
			set
			{
			}
		}

		[Token(Token = "0x17000431")]
		public bool IndicateBrushSize
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1029B90", Offset = "0x1029B90", VA = "0x1029B90")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public int NumTransientPointers
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1029C54", Offset = "0x1029C54", VA = "0x1029C54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000433")]
		private int NumUserPointers
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x1029C74", Offset = "0x1029C74", VA = "0x1029C74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000434")]
		public SymmetryMode CurrentSymmetryMode
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x1029EE8", Offset = "0x1029EE8", VA = "0x1029EE8")]
			get
			{
				return default(SymmetryMode);
			}
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x1029C7C", Offset = "0x1029C7C", VA = "0x1029C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public Plane? SymmetryPlane_RS
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x1029EF0", Offset = "0x1029EF0", VA = "0x1029EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		public bool SymmetryModeEnabled
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x1029F88", Offset = "0x1029F88", VA = "0x1029F88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000437")]
		public StraightEdgeGuideScript StraightEdgeGuide
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x1029FD0", Offset = "0x1029FD0", VA = "0x1029FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		public bool StraightEdgeModeEnabled
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1029FD8", Offset = "0x1029FD8", VA = "0x1029FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x1029FE0", Offset = "0x1029FE0", VA = "0x1029FE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public bool StraightEdgeGuideIsLine
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x1029FEC", Offset = "0x1029FEC", VA = "0x1029FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043A")]
		public float FreePaintPointerAngle
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x102A010", Offset = "0x102A010", VA = "0x102A010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1029624", Offset = "0x1029624", VA = "0x1029624")]
			set
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event Action<BrushDescriptor> OnMainPointerBrushChange
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x10296E0", Offset = "0x10296E0", VA = "0x10296E0")]
			add
			{
			}
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x10297A8", Offset = "0x10297A8", VA = "0x10297A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event Action OnPointerColorChange
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x1029870", Offset = "0x1029870", VA = "0x1029870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFD4", Offset = "0xB3DFD4")]
			add
			{
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x1029914", Offset = "0x1029914", VA = "0x1029914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFE4", Offset = "0xB3DFE4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x1029F98", Offset = "0x1029F98", VA = "0x1029F98")]
		public void SymmetryWidgetFromMirror(Mirror data)
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x1029FB4", Offset = "0x1029FB4", VA = "0x1029FB4")]
		public Mirror SymmetryWidgetToMirror()
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x102A018", Offset = "0x102A018", VA = "0x102A018")]
		public static void ClearPlayerPrefs()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x102A080", Offset = "0x102A080", VA = "0x102A080")]
		public PointerScript GetPointer(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x102A0E4", Offset = "0x102A0E4", VA = "0x102A0E4")]
		public PointerScript GetTransientPointer(int i)
		{
			return null;
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x102A12C", Offset = "0x102A12C", VA = "0x102A12C")]
		public PointerScript GetPointer(int i)
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x102A170", Offset = "0x102A170", VA = "0x102A170")]
		public float GetPointerBrushSize01(InputManager.ControllerName controller)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x102A1F8", Offset = "0x102A1F8", VA = "0x102A1F8")]
		public bool IsStraightEdgeProxyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x102A200", Offset = "0x102A200", VA = "0x102A200")]
		public bool IsMainPointerCreatingStroke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x102A290", Offset = "0x102A290", VA = "0x102A290")]
		public bool IsMainPointerProcessingLine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x102A2A0", Offset = "0x102A2A0", VA = "0x102A2A0")]
		public void SetInPlaybackMode(bool bInPlaybackMode)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x102A2AC", Offset = "0x102A2AC", VA = "0x102A2AC")]
		public void EatLineEnabledInput()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x102A2B8", Offset = "0x102A2B8", VA = "0x102A2B8")]
		public void EnableLine(bool bEnable)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x102A2E0", Offset = "0x102A2E0", VA = "0x102A2E0")]
		public bool IsLineEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x102A2E8", Offset = "0x102A2E8", VA = "0x102A2E8")]
		public void UseSymmetryWidget(bool bUse)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x102A2F4", Offset = "0x102A2F4", VA = "0x102A2F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x102A5D4", Offset = "0x102A5D4", VA = "0x102A5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x102A770", Offset = "0x102A770", VA = "0x102A770")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x102AEEC", Offset = "0x102AEEC", VA = "0x102AEEC")]
		public void StoreBrushInfo()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x102AFB4", Offset = "0x102AFB4", VA = "0x102AFB4")]
		public void RestoreBrushInfo()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x102A6F8", Offset = "0x102A6F8", VA = "0x102A6F8")]
		public void RefreshFreePaintPointerAngle()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x102ADBC", Offset = "0x102ADBC", VA = "0x102ADBC")]
		private void SetPointersRenderingEnabled(bool bEnable)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x102B284", Offset = "0x102B284", VA = "0x102B284")]
		public void EnablePointerStrokeGeneration(bool bActivate)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x102B314", Offset = "0x102B314", VA = "0x102B314")]
		public void EnablePointerLights(bool bEnable)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x102B390", Offset = "0x102B390", VA = "0x102B390")]
		public void RequestPointerRendering(bool bEnable)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x102B39C", Offset = "0x102B39C", VA = "0x102B39C")]
		public void SetPointersAudioForPlayback()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x102A0A0", Offset = "0x102A0A0", VA = "0x102A0A0")]
		private PointerData GetPointerData(InputManager.ControllerName name)
		{
			return null;
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x102B544", Offset = "0x102B544", VA = "0x102B544")]
		public void AllowPointerPreviewLine(bool bAllow)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x102AE74", Offset = "0x102AE74", VA = "0x102AE74")]
		public void DisablePointerPreviewLine()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x102B718", Offset = "0x102B718", VA = "0x102B718")]
		public void ResetPointerAudio()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x102B9C0", Offset = "0x102B9C0", VA = "0x102B9C0")]
		public void SetPointerPreviewLineDelayTimer()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x102BA3C", Offset = "0x102BA3C", VA = "0x102BA3C")]
		public void ExplicitlySetAllPointersBrushSize(float fSize)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x102B190", Offset = "0x102B190", VA = "0x102B190")]
		public void MarkAllBrushSizeUsed()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x102B108", Offset = "0x102B108", VA = "0x102B108")]
		public void SetAllPointersBrushSize01(float t)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x102BC20", Offset = "0x102BC20", VA = "0x102BC20")]
		public void AdjustAllPointersBrushSize01(float dt)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x102B080", Offset = "0x102B080", VA = "0x102B080")]
		public void SetBrushForAllPointers(BrushDescriptor desc)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x102BE7C", Offset = "0x102BE7C", VA = "0x102BE7C")]
		public void SetPointerTransform(InputManager.ControllerName name, Vector3 v, Quaternion q)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x102C560", Offset = "0x102C560", VA = "0x102C560")]
		public void SetMainPointerPosition(Vector3 vPos)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x102C5D0", Offset = "0x102C5D0", VA = "0x102C5D0")]
		public void SetMainPointerRotation(Quaternion qRot)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x102C648", Offset = "0x102C648", VA = "0x102C648")]
		public void SetMainPointerForward(Vector3 vForward)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1029C84", Offset = "0x1029C84", VA = "0x1029C84")]
		public void SetSymmetryMode(SymmetryMode mode, bool recordCommand = true)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x102C730", Offset = "0x102C730", VA = "0x102C730")]
		public void ResetSymmetryToHome()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x102C74C", Offset = "0x102C74C", VA = "0x102C74C")]
		public void BringSymmetryToUser()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x102C768", Offset = "0x102C768", VA = "0x102C768")]
		public TrTransform GetSymmetryTransformFor(PointerScript pointer, TrTransform xfMain)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x102BF2C", Offset = "0x102BF2C", VA = "0x102BF2C")]
		private void UpdateSymmetryPointerTransforms()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x102CA3C", Offset = "0x102CA3C", VA = "0x102CA3C")]
		private void OnDrawDisallowed()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x102CAB8", Offset = "0x102CAB8", VA = "0x102CAB8")]
		private int NumFreePlaybackPointers()
		{
			return default(int);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x102CB44", Offset = "0x102CB44", VA = "0x102CB44")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x102CF34", Offset = "0x102CF34", VA = "0x102CF34")]
		private void CheckGestures()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x102CE38", Offset = "0x102CE38", VA = "0x102CE38")]
		private void Transition_WaitingForInput_RecordingInput()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x102D738", Offset = "0x102D738", VA = "0x102D738")]
		private void Transition_RecordingInput_ProcessingStraightEdge(List<ControlPoint> cps)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x102D6BC", Offset = "0x102D6BC", VA = "0x102D6BC")]
		private void Transition_RecordingInput_WaitingForInput()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x102D994", Offset = "0x102D994", VA = "0x102D994")]
		private void State_ProcessingStraightEdge(bool terminate)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x102D284", Offset = "0x102D284", VA = "0x102D284")]
		private void InitiateLine(bool isContinue = false)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x102DE04", Offset = "0x102DE04", VA = "0x102DE04")]
		private void InitiateLineAt(TrTransform mainPointerXf_CS)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x102D144", Offset = "0x102D144", VA = "0x102D144")]
		private void FinalizeLine(bool isContinue = false, bool discard = false, bool fromMultiplayer = false)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x102F370", Offset = "0x102F370", VA = "0x102F370")]
		public PointerManager()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class PointerScript : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		public struct PreviewControlPoint
		{
			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_BirthTime;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TrTransform m_xf_LS;
		}

		[Token(Token = "0x2000456")]
		public enum BrushLerp
		{
			[Token(Token = "0x4001CFC")]
			Default,
			[Token(Token = "0x4001CFD")]
			Radius,
			[Token(Token = "0x4001CFE")]
			Area,
			[Token(Token = "0x4001CFF")]
			ScaleInvariant,
			[Token(Token = "0x4001D00")]
			SqrtRadius
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A2C", Offset = "0xB29A2C")]
		private sealed class <>c__DisplayClass110_0
		{
			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stroke stroke;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<PointerManager.ControlPoint, int, bool> <>9__0;

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x10EA678", Offset = "0x10EA678", VA = "0x10EA678")]
			public <>c__DisplayClass110_0()
			{
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x10EA680", Offset = "0x10EA680", VA = "0x10EA680")]
			internal bool <UpdateLineFromStroke>b__0(PointerManager.ControlPoint x, int i)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A3C", Offset = "0xB29A3C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<BrushDescriptor> <>9__139_0;

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x10EA66C", Offset = "0x10EA66C", VA = "0x10EA66C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x10EA674", Offset = "0x10EA674", VA = "0x10EA674")]
			internal void <.ctor>b__139_0(BrushDescriptor <p0>)
			{
			}
		}

		[Token(Token = "0x4001CC8")]
		private const float m_BasePreviewIntensity = 4f;

		[Token(Token = "0x4001CC9")]
		private const float m_GlowPreviewIntensity = 8f;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Light m_PreviewLight;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_PreviewLightScalar;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer m_Mesh;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer[] m_PrimaryMeshes;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_BrushSizeIndicator;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_PreviewLineEnabled;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_PreviewLineControlPointLife;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_PreviewLineIdealLength;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GvrAudioSource[] m_AudioSources;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector2 m_BrushAudioPitchVelocityRange;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_BrushPlaybackAudioClip;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_AllowPreviewLight;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color m_CurrentColor;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_GlowPreviewEnabled;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_InitialBrushSizeScale;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private BrushDescriptor m_CurrentBrush;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_CurrentBrushSize;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector2 m_BrushSizeRange;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_CurrentPressure;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BaseBrushScript m_CurrentLine;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ParametricStrokeCreator m_CurrentCreator;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_ParametricCreatorBackupStrokeSize;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_AudioVolumeDesired;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_CurrentTotalVolume;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_BrushAudioMaxVolume;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_BrushAudioAdjustSpeedUp;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_BrushAudioAdjustSpeedDown;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_BrushAudioVolumeVelocityRange;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_BrushAudioBasePitch;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_BrushAudioMaxPitchShift;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_AudioPitchDesired;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool m_AllowPreviewLine;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float m_AllowPreviewLineTimer;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private BaseBrushScript m_PreviewLine;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<PreviewControlPoint> m_PreviewControlPoints;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<PointerManager.ControlPoint> m_ControlPoints;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_LastControlPointIsKeeper;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 m_PreviousPosition;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_LineDepth;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float m_LineLength_CS;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_ShowDebugControlPoints;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<Vector3> m_DebugViewControlPoints;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float? m_LastUsedBrushSize_CS;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private CanvasScript m_SubscribedCanvas;

		[NonSerialized]
		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool m_IsNetworkPointer;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33658", Offset = "0xB33658")]
		private int <ChildIndex>k__BackingField;

		[Token(Token = "0x1700043B")]
		public float BrushSize01
		{
			[Token(Token = "0x6001D03")]
			[Address(RVA = "0x102A19C", Offset = "0x102A19C", VA = "0x102A19C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x102BB9C", Offset = "0x102BB9C", VA = "0x102BB9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043C")]
		public BrushDescriptor CurrentBrush
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x102FC84", Offset = "0x102FC84", VA = "0x102FC84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x102FC8C", Offset = "0x102FC8C", VA = "0x102FC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public float BrushSizeAbsolute
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x102FC90", Offset = "0x102FC90", VA = "0x102FC90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x102BADC", Offset = "0x102BADC", VA = "0x102BADC")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public float MonoscopicLineDepth
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x102FD60", Offset = "0x102FD60", VA = "0x102FD60")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public uint TimestampMs
		{
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x102F310", Offset = "0x102F310", VA = "0x102F310")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000440")]
		public int ChildIndex
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x102FD68", Offset = "0x102FD68", VA = "0x102FD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0B4", Offset = "0xB3E0B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x102FD70", Offset = "0x102FD70", VA = "0x102FD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0C4", Offset = "0xB3E0C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public BaseBrushScript CurrentBrushScript
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x102FD78", Offset = "0x102FD78", VA = "0x102FD78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400006E")]
		public event Action<TrTransform, Guid, float, float, Color> OnBeginLine
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x102F498", Offset = "0x102F498", VA = "0x102F498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3DFF4", Offset = "0xB3DFF4")]
			add
			{
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x102F538", Offset = "0x102F538", VA = "0x102F538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E004", Offset = "0xB3E004")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event Action<Stroke> OnFinishedStroke
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x102F5D8", Offset = "0x102F5D8", VA = "0x102F5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E014", Offset = "0xB3E014")]
			add
			{
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x102F678", Offset = "0x102F678", VA = "0x102F678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E024", Offset = "0xB3E024")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event Action<Stroke> OnBeginStrokeFromMemory
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x102F718", Offset = "0x102F718", VA = "0x102F718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E034", Offset = "0xB3E034")]
			add
			{
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x102F7B8", Offset = "0x102F7B8", VA = "0x102F7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E044", Offset = "0xB3E044")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event Action<TrTransform, float> OnAddedPointRaw
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x102F858", Offset = "0x102F858", VA = "0x102F858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E054", Offset = "0xB3E054")]
			add
			{
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x102F8F8", Offset = "0x102F8F8", VA = "0x102F8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E064", Offset = "0xB3E064")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event Action<Stroke> OnFinishedStraightEdgeStroke
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x102F998", Offset = "0x102F998", VA = "0x102F998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E074", Offset = "0xB3E074")]
			add
			{
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x102FA38", Offset = "0x102FA38", VA = "0x102FA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E084", Offset = "0xB3E084")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event Action<BrushDescriptor> OnBrushChange
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x1029704", Offset = "0x1029704", VA = "0x1029704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E094", Offset = "0xB3E094")]
			add
			{
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x10297CC", Offset = "0x10297CC", VA = "0x10297CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0A4", Offset = "0xB3E0A4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x102FAD8", Offset = "0x102FAD8", VA = "0x102FAD8")]
		private float _FromRadius(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x102FBB0", Offset = "0x102FBB0", VA = "0x102FBB0")]
		private float _ToRadius(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x102AB40", Offset = "0x102AB40", VA = "0x102AB40")]
		public float GetMovementDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x102FD80", Offset = "0x102FD80", VA = "0x102FD80")]
		public void AllowPreviewLight(bool bAllow)
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x102FD8C", Offset = "0x102FD8C", VA = "0x102FD8C")]
		public void EnableDebugViewControlPoints(bool bEnable)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x102FD98", Offset = "0x102FD98", VA = "0x102FD98")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1030190", Offset = "0x1030190", VA = "0x1030190")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x102FFBC", Offset = "0x102FFBC", VA = "0x102FFBC")]
		private void OnActiveCanvasChanged(CanvasScript prev, CanvasScript current)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1030278", Offset = "0x1030278", VA = "0x1030278")]
		private void OnActiveCanvasPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x102C6B8", Offset = "0x102C6B8", VA = "0x102C6B8")]
		public void CopyInternals(PointerScript rOther)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x102A224", Offset = "0x102A224", VA = "0x102A224")]
		public bool IsCreatingStroke()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x103031C", Offset = "0x103031C", VA = "0x103031C")]
		public Color GetCurrentColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x1030328", Offset = "0x1030328", VA = "0x1030328")]
		public float GetCurrentLineSpawnInterval(float pressure01)
		{
			return default(float);
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x102BB08", Offset = "0x102BB08", VA = "0x102BB08")]
		public void MarkBrushSizeUsed()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x10303D4", Offset = "0x10303D4", VA = "0x10303D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1030538", Offset = "0x1030538", VA = "0x1030538")]
		private float LayerVolume(int iLayer, float fTotalVolume)
		{
			return default(float);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x102D6EC", Offset = "0x102D6EC", VA = "0x102D6EC")]
		public List<PointerManager.ControlPoint> GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1030598", Offset = "0x1030598", VA = "0x1030598")]
		private TrTransform GetTransformForLine(Transform line)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x1030658", Offset = "0x1030658", VA = "0x1030658")]
		private TrTransform GetTransformForLine(Transform line, TrTransform xf_RS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x103079C", Offset = "0x103079C", VA = "0x103079C")]
		private void RebuildPreviewLine()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x102ABB0", Offset = "0x102ABB0", VA = "0x102ABB0")]
		public void UpdatePointer()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x102E288", Offset = "0x102E288", VA = "0x102E288")]
		public void UpdateLineFromObject(bool fromMultiplayer = false)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x102EAF0", Offset = "0x102EAF0", VA = "0x102EAF0")]
		public void SendRawControlPointMultiplayer(TrTransform trTransform)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x1030DA0", Offset = "0x1030DA0", VA = "0x1030DA0")]
		public void UpdateLineFromControlPoint(PointerManager.ControlPoint cp)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x1030EB0", Offset = "0x1030EB0", VA = "0x1030EB0")]
		public void UpdateLineFromStroke(Stroke stroke)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1030D80", Offset = "0x1030D80", VA = "0x1030D80")]
		public void UpdateLineVisuals()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x102BA30", Offset = "0x102BA30", VA = "0x102BA30")]
		public void SetPreviewLineDelayTimer()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x102B5FC", Offset = "0x102B5FC", VA = "0x102B5FC")]
		public void AllowPreviewLine(bool bAllow)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x1030B8C", Offset = "0x1030B8C", VA = "0x1030B8C")]
		private void CreatePreviewLine()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x102B64C", Offset = "0x102B64C", VA = "0x102B64C")]
		public void DisablePreviewLine()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x10313AC", Offset = "0x10313AC", VA = "0x10313AC")]
		private void ResetPreviewProperties()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x10314B0", Offset = "0x10314B0", VA = "0x10314B0")]
		public void SetPressure(float fPressure)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x1029A98", Offset = "0x1029A98", VA = "0x1029A98")]
		public void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x10314B8", Offset = "0x10314B8", VA = "0x10314B8")]
		private void UpdateTintableRenderers()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x1031670", Offset = "0x1031670", VA = "0x1031670")]
		private void SetTintableIntensity(BrushDescriptor rBrush)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x102BCBC", Offset = "0x102BCBC", VA = "0x102BCBC")]
		public void SetBrush(BrushDescriptor rBrush)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x1029C18", Offset = "0x1029C18", VA = "0x1029C18")]
		public void ShowSizeIndicator(bool show)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x102FC98", Offset = "0x102FC98", VA = "0x102FC98")]
		private void _SetBrushSizeAbsolute(float value)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x102B208", Offset = "0x102B208", VA = "0x102B208")]
		public void EnableRendering(bool bEnable)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x102E08C", Offset = "0x102E08C", VA = "0x102E08C")]
		public void SetControlPoint(TrTransform lastSpawnXf_LS, bool isKeeper)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x102DE98", Offset = "0x102DE98", VA = "0x102DE98")]
		public void CreateNewLine(CanvasScript canvas, TrTransform xf_CS, ParametricStrokeCreator creator, [Optional] BrushDescriptor overrideDesc, bool skipSendingForMultiplayer = false)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x10317B8", Offset = "0x10317B8", VA = "0x10317B8")]
		public void RecreateLineFromMemory(Stroke stroke)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x102EC2C", Offset = "0x102EC2C", VA = "0x102EC2C")]
		public void DetachLine(bool bDiscard, Stroke rMemoryObjectForPlayback, SketchMemoryScript.StrokeFlags strokeFlags = SketchMemoryScript.StrokeFlags.None, bool fromMultiplayer = false, [Optional] string guidFromMultiplayer)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x1031D50", Offset = "0x1031D50", VA = "0x1031D50")]
		public Stroke CreateStroke(BatchSubset subset, Color rColor, Guid brushGuid, float fBrushSize, float brushScale, List<PointerManager.ControlPoint> rControlPoints, SketchMemoryScript.StrokeFlags strokeFlags, StencilWidget stencil, float lineLength, int seed)
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x102D0AC", Offset = "0x102D0AC", VA = "0x102D0AC")]
		public bool ShouldCurrentLineEnd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x102EB70", Offset = "0x102EB70", VA = "0x102EB70")]
		public bool ShouldDiscardCurrentLine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1031A40", Offset = "0x1031A40", VA = "0x1031A40")]
		public GameObject BeginLineFromMemory(Stroke stroke, CanvasScript canvas, bool skipSendingMultiplayer = false)
		{
			return null;
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1031E8C", Offset = "0x1031E8C", VA = "0x1031E8C")]
		public void BeginLineWithBrush(TrTransform trTrans, CanvasScript canvas, BrushDescriptor brush, float brushSize, float pressure, Color brushColor)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x10320EC", Offset = "0x10320EC", VA = "0x10320EC")]
		public void EndLineFromMemory(Stroke stroke, bool discard = false)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x102B790", Offset = "0x102B790", VA = "0x102B790")]
		public void ResetAudio()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1031D24", Offset = "0x1031D24", VA = "0x1031D24")]
		private void SilenceAudio()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x102B40C", Offset = "0x102B40C", VA = "0x102B40C")]
		public void SetAudioClipForPlayback()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x10321E4", Offset = "0x10321E4", VA = "0x10321E4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x10322BC", Offset = "0x10322BC", VA = "0x10322BC")]
		public PointerScript()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class PointingLineScript : MonoBehaviour
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_NumLinePositions;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_LinePositionMidIndex;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer m_LineRenderer;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_PreviousLineLength;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_PrevForward;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_HadFocus;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_BendMovementScalar;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_BendNormal;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_BendVelocity;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_BendValue;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_BendInitialPop;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_BendMaxVelocity;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_BendValueDampen;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_BendValueK;

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x10323DC", Offset = "0x10323DC", VA = "0x10323DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1032498", Offset = "0x1032498", VA = "0x1032498")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1032A34", Offset = "0x1032A34", VA = "0x1032A34")]
		public PointingLineScript()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class PolyAssetCatalog : MonoBehaviour
	{
		[Token(Token = "0x200045B")]
		public enum AssetLoadState
		{
			[Token(Token = "0x4001D26")]
			Unknown,
			[Token(Token = "0x4001D27")]
			NotDownloaded,
			[Token(Token = "0x4001D28")]
			Downloading,
			[Token(Token = "0x4001D29")]
			Downloaded,
			[Token(Token = "0x4001D2A")]
			Loading,
			[Token(Token = "0x4001D2B")]
			LoadFailed,
			[Token(Token = "0x4001D2C")]
			Loaded
		}

		[Token(Token = "0x200045C")]
		public class AssetDetails
		{
			[StructLayout(3)]
			[Token(Token = "0x200045D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A4C", Offset = "0xB29A4C")]
			private struct <DownloadThumbnailAsync>d__23 : IAsyncStateMachine
			{
				[Token(Token = "0x4001D35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001D36")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001D37")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public AssetDetails <>4__this;

				[Token(Token = "0x4001D38")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public string thumbnailUrl;

				[Token(Token = "0x4001D39")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private string <cachePath>5__2;

				[Token(Token = "0x4001D3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private WebRequest <www>5__3;

				[Token(Token = "0x4001D3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x4001D3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private TaskAwaiter<WebRequest.Reply> <>u__2;

				[Token(Token = "0x4001D3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private object <>u__3;

				[Token(Token = "0x4001D3E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				private Future<RawImage>.Awaiter <>u__4;

				[Token(Token = "0x6001D75")]
				[Address(RVA = "0x210D980", Offset = "0x210D980", VA = "0x210D980", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001D76")]
				[Address(RVA = "0x210E124", Offset = "0x210E124", VA = "0x210E124", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001D2D")]
			private const bool kLazyLoadThumbnail = false;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly PolyAssetCatalog m_Owner;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly Texture2D m_Thumbnail;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string m_ThumbnailUrl;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33688", Offset = "0xB33688")]
			private readonly string <AssetId>k__BackingField;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33698", Offset = "0xB33698")]
			private readonly string <HumanName>k__BackingField;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB336A8", Offset = "0xB336A8")]
			private readonly string <AccountName>k__BackingField;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB336B8", Offset = "0xB336B8")]
			private readonly Quaternion? <ModelRotation>k__BackingField;

			[Token(Token = "0x17000442")]
			public string AssetId
			{
				[Token(Token = "0x6001D6B")]
				[Address(RVA = "0x10EC198", Offset = "0x10EC198", VA = "0x10EC198")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E224", Offset = "0xB3E224")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			public string HumanName
			{
				[Token(Token = "0x6001D6C")]
				[Address(RVA = "0x10EC1A0", Offset = "0x10EC1A0", VA = "0x10EC1A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E234", Offset = "0xB3E234")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000444")]
			public string AccountName
			{
				[Token(Token = "0x6001D6D")]
				[Address(RVA = "0x10EC1A8", Offset = "0x10EC1A8", VA = "0x10EC1A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E244", Offset = "0xB3E244")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			public Quaternion? ModelRotation
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0x10EC1B0", Offset = "0x10EC1B0", VA = "0x10EC1B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E254", Offset = "0xB3E254")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000446")]
			public Texture2D Thumbnail
			{
				[Token(Token = "0x6001D6F")]
				[Address(RVA = "0x10EC1C4", Offset = "0x10EC1C4", VA = "0x10EC1C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			public Model Model
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0x10EC2C0", Offset = "0x10EC2C0", VA = "0x10EC2C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0x10EC2F4", Offset = "0x10EC2F4", VA = "0x10EC2F4")]
			public AssetDetails(JToken json, string accountName, string thumbnailSuffix)
			{
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x10EC6F8", Offset = "0x10EC6F8", VA = "0x10EC6F8")]
			private static byte[] SafeReadCache(string path)
			{
				return null;
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x10EC814", Offset = "0x10EC814", VA = "0x10EC814")]
			private static void SafeWriteCache(string path, byte[] contents)
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x10EC1F8", Offset = "0x10EC1F8", VA = "0x10EC1F8")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB3E264", Offset = "0xB3E264")]
			private void DownloadThumbnailAsync(string thumbnailUrl)
			{
			}
		}

		[Token(Token = "0x200045E")]
		private class AssetSet
		{
			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AssetDetails> m_Models;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator<Null> m_FetchMetadataCoroutine;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_RefreshRequested;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float m_CooldownTimer;

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x10ECA48", Offset = "0x10ECA48", VA = "0x10ECA48")]
			public AssetSet()
			{
			}
		}

		[Token(Token = "0x200045F")]
		public class ModelLoadRequest
		{
			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Model Model;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly string Reason;

			[Token(Token = "0x17000448")]
			public string AssetId
			{
				[Token(Token = "0x6001D78")]
				[Address(RVA = "0x10EA77C", Offset = "0x10EA77C", VA = "0x10EA77C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x10ECAC0", Offset = "0x10ECAC0", VA = "0x10ECAC0")]
			public ModelLoadRequest(Model model, string reason)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A5C", Offset = "0xB29A5C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AssetGetter, string> <>9__25_0;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ModelLoadRequest, string> <>9__25_1;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ModelLoadRequest, string> <>9__25_2;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string, DateTime> <>9__27_1;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<TiltModels75, string> <>9__38_0;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<string, bool> <>9__38_1;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<AssetDetails, string> <>9__43_0;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<AssetDetails, string> <>9__43_1;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Model, bool> <>9__51_0;

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x10EA72C", Offset = "0x10EA72C", VA = "0x10EA72C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x10EA734", Offset = "0x10EA734", VA = "0x10EA734")]
			internal string <IsLoading>b__25_0(AssetGetter request)
			{
				return null;
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x10EA758", Offset = "0x10EA758", VA = "0x10EA758")]
			internal string <IsLoading>b__25_1(ModelLoadRequest request)
			{
				return null;
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x10EA798", Offset = "0x10EA798", VA = "0x10EA798")]
			internal string <IsLoading>b__25_2(ModelLoadRequest request)
			{
				return null;
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x10EA7BC", Offset = "0x10EA7BC", VA = "0x10EA7BC")]
			internal DateTime <Init>b__27_1(string d)
			{
				return default(DateTime);
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x10EA7C8", Offset = "0x10EA7C8", VA = "0x10EA7C8")]
			internal string <GetModelIds>b__38_0(TiltModels75 m)
			{
				return null;
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x10EA7E0", Offset = "0x10EA7E0", VA = "0x10EA7E0")]
			internal bool <GetModelIds>b__38_1(string a)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x10EA7EC", Offset = "0x10EA7EC", VA = "0x10EA7EC")]
			internal string <RefreshAssetSet>b__43_0(AssetDetails m)
			{
				return null;
			}

			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x10EA804", Offset = "0x10EA804", VA = "0x10EA804")]
			internal string <RefreshAssetSet>b__43_1(AssetDetails m)
			{
				return null;
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x10EA81C", Offset = "0x10EA81C", VA = "0x10EA81C")]
			internal bool <UnloadUnusedModels>b__51_0(Model x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A6C", Offset = "0xB29A6C")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string assetId;

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x10EA838", Offset = "0x10EA838", VA = "0x10EA838")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x10EA840", Offset = "0x10EA840", VA = "0x10EA840")]
			internal bool <CancelRequestModelLoad>b__0(ModelLoadRequest elt)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x10EA87C", Offset = "0x10EA87C", VA = "0x10EA87C")]
			internal bool <CancelRequestModelLoad>b__1(ModelLoadRequest elt)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A7C", Offset = "0xB29A7C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneFileInfo sceneFileInfo;

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x10EA8B8", Offset = "0x10EA8B8", VA = "0x10EA8B8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x10EA8C0", Offset = "0x10EA8C0", VA = "0x10EA8C0")]
			internal List<string> <PrecacheModelsCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A8C", Offset = "0xB29A8C")]
		private sealed class <PrecacheModelsCoroutine>d__37 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneFileInfo sceneFileInfo;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass37_0 <>8__1;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string reason;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<List<string>> <getIdsFuture>5__2;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<IEnumerator<Null>> <precacheCoroutines>5__3;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<string>.Enumerator <>7__wrap4;

			[Token(Token = "0x17000449")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001D8E")]
				[Address(RVA = "0x10EB634", Offset = "0x10EB634", VA = "0x10EB634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0x10EB67C", Offset = "0x10EB67C", VA = "0x10EB67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x10EAEE8", Offset = "0x10EAEE8", VA = "0x10EAEE8")]
			[DebuggerHidden]
			public <PrecacheModelsCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x10EAF14", Offset = "0x10EAF14", VA = "0x10EAF14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x10EAF84", Offset = "0x10EAF84", VA = "0x10EAF84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x10EAF30", Offset = "0x10EAF30", VA = "0x10EAF30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x10EB63C", Offset = "0x10EB63C", VA = "0x10EB63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29A9C", Offset = "0xB29A9C")]
		private sealed class <PrecacheCoroutine>d__39 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetGetter request;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <assetId>5__2;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x1700044B")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001D94")]
				[Address(RVA = "0x10EAE98", Offset = "0x10EAE98", VA = "0x10EAE98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0x10EAEE0", Offset = "0x10EAEE0", VA = "0x10EAEE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x10EAA64", Offset = "0x10EAA64", VA = "0x10EAA64")]
			[DebuggerHidden]
			public <PrecacheCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x10EAA90", Offset = "0x10EAA90", VA = "0x10EAA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x10EAA94", Offset = "0x10EAA94", VA = "0x10EAA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x10EAEA0", Offset = "0x10EAEA0", VA = "0x10EAEA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29AAC", Offset = "0xB29AAC")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ModelLoadRequest toMove;

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x10EA928", Offset = "0x10EA928", VA = "0x10EA928")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x10EA930", Offset = "0x10EA930", VA = "0x10EA930")]
			internal bool <UpdateCatalog>b__0(ModelLoadRequest elt)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29ABC", Offset = "0xB29ABC")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<string> toRemove;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<string> toAdd;

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x10EA98C", Offset = "0x10EA98C", VA = "0x10EA98C")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x10EA994", Offset = "0x10EA994", VA = "0x10EA994")]
			internal bool <RefreshAssetSet>b__2(AssetDetails m)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x10EA9FC", Offset = "0x10EA9FC", VA = "0x10EA9FC")]
			internal bool <RefreshAssetSet>b__3(AssetDetails m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29ACC", Offset = "0xB29ACC")]
		private sealed class <RefreshAssetSet>d__43 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolyAssetCatalog <>4__this;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PolySetType type;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass43_0 <>8__1;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<AssetDetails> <models>5__2;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AssetLister <lister>5__3;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x1700044D")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001DA0")]
				[Address(RVA = "0x10EC148", Offset = "0x10EC148", VA = "0x10EC148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA2")]
				[Address(RVA = "0x10EC190", Offset = "0x10EC190", VA = "0x10EC190", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x10EB684", Offset = "0x10EB684", VA = "0x10EB684")]
			[DebuggerHidden]
			public <RefreshAssetSet>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x10EB6B0", Offset = "0x10EB6B0", VA = "0x10EB6B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x10EB788", Offset = "0x10EB788", VA = "0x10EB788", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x10EB6CC", Offset = "0x10EB6CC", VA = "0x10EB6CC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x10EC150", Offset = "0x10EC150", VA = "0x10EC150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D13")]
		private const int kAssetDiskCacheSize = 1000;

		[Token(Token = "0x4001D14")]
		private const float kThumbnailFetchRate = 15f;

		[Token(Token = "0x4001D15")]
		private const int kThumbnailFetchMaxCount = 30;

		[Token(Token = "0x4001D16")]
		private const int kThumbnailReadRate = 4;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex sm_AssetIdPattern;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_ThumbnailSuffix;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AssetGetter> m_ActiveRequests;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ModelLoadRequest> m_RequestLoadQueue;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ModelLoadRequest> m_LoadQueue;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<string> m_IsLoadingMemo;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_CacheDir;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_ThumbnailCacheDir;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, Model> m_ModelsByAssetId;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<PolySetType, AssetSet> m_AssetSetByType;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_NotifyListeners;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AwaitableRateLimiter m_thumbnailFetchLimiter;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RateLimiter m_thumbnailReadLimiter;

		[Token(Token = "0x14000074")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x1032BF4", Offset = "0x1032BF4", VA = "0x1032BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0D4", Offset = "0xB3E0D4")]
			add
			{
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x1032C94", Offset = "0x1032C94", VA = "0x1032C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E0E4", Offset = "0xB3E0E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x1032A54", Offset = "0x1032A54", VA = "0x1032A54")]
		private static Vector3? GetCameraForward(JToken cameraParams)
		{
			return null;
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1032D34", Offset = "0x1032D34", VA = "0x1032D34")]
		public bool IsLoading(string assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x10330B0", Offset = "0x10330B0", VA = "0x10330B0")]
		public void RequestRefresh(PolySetType type)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1033144", Offset = "0x1033144", VA = "0x1033144")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1033D44", Offset = "0x1033D44", VA = "0x1033D44")]
		public AssetLoadState GetAssetLoadState(string assetId)
		{
			return default(AssetLoadState);
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x10342A8", Offset = "0x10342A8", VA = "0x10342A8")]
		public string GetCacheDirectoryForAsset(string asset)
		{
			return null;
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1033B10", Offset = "0x1033B10", VA = "0x1033B10")]
		public IEnumerable<string> EnumerateCacheDirectories()
		{
			return null;
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1034438", Offset = "0x1034438", VA = "0x1034438")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1034224", Offset = "0x1034224", VA = "0x1034224")]
		public Model GetModel(string assetId)
		{
			return null;
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1034618", Offset = "0x1034618", VA = "0x1034618")]
		public void RequestModelLoad(Model model, string reason)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x1034730", Offset = "0x1034730", VA = "0x1034730")]
		public void RequestModelLoad(string assetId, string reason)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x10349F8", Offset = "0x10349F8", VA = "0x10349F8")]
		public bool CancelRequestModelLoad(string assetId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1034E70", Offset = "0x1034E70", VA = "0x1034E70")]
		public void PrecacheModels(SceneFileInfo sceneFileInfo, string reason)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1034F20", Offset = "0x1034F20", VA = "0x1034F20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E0F4", Offset = "0xB3E0F4")]
		private IEnumerator<Null> PrecacheModelsCoroutine(SceneFileInfo sceneFileInfo, string reason)
		{
			return null;
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1034FA0", Offset = "0x1034FA0", VA = "0x1034FA0")]
		private static List<string> GetModelIds(SceneFileInfo sceneFileInfo)
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x10356F8", Offset = "0x10356F8", VA = "0x10356F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E154", Offset = "0xB3E154")]
		private IEnumerator<Null> PrecacheCoroutine(AssetGetter request)
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1035770", Offset = "0x1035770", VA = "0x1035770")]
		public void UpdateCatalog()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1035C6C", Offset = "0x1035C6C", VA = "0x1035C6C")]
		private void LoadModelsInQueueAsync()
		{
		}

		[Token(Token = "0x6001D5E")]
		private static HashSet<T> SetMinus<T>(HashSet<T> lhs, HashSet<T> rhs)
		{
			return null;
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x1035DBC", Offset = "0x1035DBC", VA = "0x1035DBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E1B4", Offset = "0xB3E1B4")]
		private IEnumerator<Null> RefreshAssetSet(PolySetType type)
		{
			return null;
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x10344D0", Offset = "0x10344D0", VA = "0x10344D0")]
		private void RefreshFetchCoroutines()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x1035E38", Offset = "0x1035E38", VA = "0x1035E38")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1035E3C", Offset = "0x1035E3C", VA = "0x1035E3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1035ECC", Offset = "0x1035ECC", VA = "0x1035ECC")]
		public int NumCloudModels(PolySetType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1035F54", Offset = "0x1035F54", VA = "0x1035F54")]
		public AssetDetails GetPolyAsset(PolySetType type, int index)
		{
			return null;
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1033C4C", Offset = "0x1033C4C", VA = "0x1033C4C")]
		private static string ValidGltfCache(string dir, string assetId)
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1035FF8", Offset = "0x1035FF8", VA = "0x1035FF8")]
		public void ClearLoadingQueue()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x1036144", Offset = "0x1036144", VA = "0x1036144")]
		public void UnloadUnusedModels()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1036510", Offset = "0x1036510", VA = "0x1036510")]
		public PolyAssetCatalog()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1036654", Offset = "0x1036654", VA = "0x1036654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E214", Offset = "0xB3E214")]
		private void <Init>b__27_0()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class PolyRawAsset
	{
		[Token(Token = "0x2000469")]
		public class ElementInfo
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filePath;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string dataURL;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] assetBytes;

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x10ECDF8", Offset = "0x10ECDF8", VA = "0x10ECDF8")]
			public ElementInfo()
			{
			}
		}

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex kWindowsRootedPath;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_AssetId;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VrAssetFormat m_DesiredAssetType;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ElementInfo m_RootElement;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ElementInfo> m_ResourceElements;

		[Token(Token = "0x1700044F")]
		public string Id
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x11EC790", Offset = "0x11EC790", VA = "0x11EC790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		public VrAssetFormat DesiredType
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x11EC798", Offset = "0x11EC798", VA = "0x11EC798")]
			get
			{
				return default(VrAssetFormat);
			}
		}

		[Token(Token = "0x17000451")]
		public string RootFilePath
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x11EC7A0", Offset = "0x11EC7A0", VA = "0x11EC7A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		public string RootDataURL
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x11EC7BC", Offset = "0x11EC7BC", VA = "0x11EC7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		public List<ElementInfo> ResourceElements
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x11EC7D8", Offset = "0x11EC7D8", VA = "0x11EC7D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		public bool ValidAsset
		{
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x11EC7E0", Offset = "0x11EC7E0", VA = "0x11EC7E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x11EC804", Offset = "0x11EC804", VA = "0x11EC804")]
		public void SetRootElement(string filePath, string dataURL)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x11EC830", Offset = "0x11EC830", VA = "0x11EC830")]
		public void CopyBytesToRootElement(byte[] bytes)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x11EC84C", Offset = "0x11EC84C", VA = "0x11EC84C")]
		public void AddResourceElement(string filePath, string dataURL)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x11EC8E4", Offset = "0x11EC8E4", VA = "0x11EC8E4")]
		public PolyRawAsset(string assetId, VrAssetFormat assetType)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x11EC9A4", Offset = "0x11EC9A4", VA = "0x11EC9A4")]
		private void RemoveFiles(List<string> filesToRemove)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x11ECA38", Offset = "0x11ECA38", VA = "0x11ECA38")]
		public bool WriteToDisk()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x11ECF80", Offset = "0x11ECF80", VA = "0x11ECF80")]
		public static string GetPolySanitizedFilePath(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x200046A")]
	public class PreLoadingScene : MonoBehaviour
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Logo;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_Camera;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x11F12F8", Offset = "0x11F12F8", VA = "0x11F12F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x11F1450", Offset = "0x11F1450", VA = "0x11F1450")]
		public PreLoadingScene()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class PrefabLightmapData : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046C")]
		private struct RendererInfo
		{
			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Renderer renderer;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lightmapIndex;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector4 lightmapOffsetScale;
		}

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RendererInfo[] m_RendererInfo;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D[] m_Lightmaps;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x11F1754", Offset = "0x11F1754", VA = "0x11F1754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x11F1908", Offset = "0x11F1908", VA = "0x11F1908")]
		private static void ApplyRendererInfo(RendererInfo[] infos, int lightmapOffsetIndex)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x11F19C4", Offset = "0x11F19C4", VA = "0x11F19C4")]
		public PrefabLightmapData()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class PreviewCubeScript : UIComponentDescription
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB33708", Offset = "0xB33708")]
		public GameObject m_SampleQuad;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_QuadAnimatingValue;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 m_QuadAnimatingSpeed;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 m_QuadAnimatingAmount;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture m_StandardTexture;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture m_SelectedTexture;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Renderer m_BoundingCube;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x11F19CC", Offset = "0x11F19CC", VA = "0x11F19CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x11F1B00", Offset = "0x11F1B00", VA = "0x11F1B00")]
		public void SetSelected(bool bSelected)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x11F1BBC", Offset = "0x11F1BBC", VA = "0x11F1BBC")]
		public void SetSampleQuadTexture(Texture2D tex)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x11F1C38", Offset = "0x11F1C38", VA = "0x11F1C38")]
		public PreviewCubeScript()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class QualityControls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29ADC", Offset = "0xB29ADC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Camera, bool> <>9__57_0;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Guid, Guid> <>9__64_0;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Guid, int> <>9__64_1;

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x10F05EC", Offset = "0x10F05EC", VA = "0x10F05EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x10F05F4", Offset = "0x10F05F4", VA = "0x10F05F4")]
			internal bool <Init>b__57_0(Camera x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x10F0654", Offset = "0x10F0654", VA = "0x10F0654")]
			internal Guid <AutoAdjustSimplifierLevel>b__64_0(Guid x)
			{
				return default(Guid);
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x10F0660", Offset = "0x10F0660", VA = "0x10F0660")]
			internal int <AutoAdjustSimplifierLevel>b__64_1(Guid x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static QualityControls m_Instance;

		[Token(Token = "0x4001D83")]
		private const string kAutoSimplificationEnabled = "Autosimplification Enabled";

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Camera> m_Cameras;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SENaturalBloomAndDirtyLens> m_Bloom;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FXAA> m_Fxaa;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MobileBloom> m_MobileBloom;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_MobileBloomAmount;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33750", Offset = "0xB33750")]
		private RdpStrokeSimplifier <StrokeSimplifier>k__BackingField;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33760", Offset = "0xB33760")]
		private RdpStrokeSimplifier <UserStrokeSimplifier>k__BackingField;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Camera> m_OptInCamerasForPC;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<Camera> m_OptOutCamerasForPC;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_enableHdr;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_msaaLevel;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AppQualitySettingLevels m_QualityLevels;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB337C0", Offset = "0xB337C0")]
		private AppQualitySettingLevels m_MobileQualityLevels;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AppQualitySettingLevels m_PicoQualityLevels;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GpuTextRender m_DebugText;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_lastQualityLevel;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_targetMaxControlPoints;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_maxLoadingSimplification;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Queue<double> m_FrameTimeStamps;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double m_TimeSinceStart;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_FramesInLastSecond;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_NumFramesFpsTooLow;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_NumFramesFpsHighEnough;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_NumFramesGpuTooHigh;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_NumFramesGpuLowEnough;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_DesiredBloom;

		[Token(Token = "0x17000455")]
		public RdpStrokeSimplifier StrokeSimplifier
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x11FCEA4", Offset = "0x11FCEA4", VA = "0x11FCEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E3E4", Offset = "0xB3E3E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x11FCEAC", Offset = "0x11FCEAC", VA = "0x11FCEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E3F4", Offset = "0xB3E3F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public RdpStrokeSimplifier UserStrokeSimplifier
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x11FCEB4", Offset = "0x11FCEB4", VA = "0x11FCEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E404", Offset = "0xB3E404")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x11FCEBC", Offset = "0x11FCEBC", VA = "0x11FCEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E414", Offset = "0xB3E414")]
			private set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public int QualityLevel
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x11FCEC4", Offset = "0x11FCEC4", VA = "0x11FCEC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x11FCECC", Offset = "0x11FCECC", VA = "0x11FCECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public static bool AutosimplifyEnabled
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x11FD41C", Offset = "0x11FD41C", VA = "0x11FD41C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x11FD474", Offset = "0x11FD474", VA = "0x11FD474")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public float SimplificationLevel
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x11FD4C4", Offset = "0x11FD4C4", VA = "0x11FD4C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x11FD4DC", Offset = "0x11FD4DC", VA = "0x11FD4DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public int MSAALevel
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x11FD6F0", Offset = "0x11FD6F0", VA = "0x11FD6F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700045B")]
		public int FramesInLastSecond
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x11FD6F8", Offset = "0x11FD6F8", VA = "0x11FD6F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700045C")]
		public RenderTextureFormat FramebufferFormat
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x11FD700", Offset = "0x11FD700", VA = "0x11FD700")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x1700045D")]
		public AppQualitySettingLevels AppQualityLevels
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x11FD714", Offset = "0x11FD714", VA = "0x11FD714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		public AppQualitySettingLevels.AppQualitySettings AppQualitySettings
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x11FD71C", Offset = "0x11FD71C", VA = "0x11FD71C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000075")]
		public event Action<int> OnQualityLevelChange
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x11FCD64", Offset = "0x11FCD64", VA = "0x11FCD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E3C4", Offset = "0xB3E3C4")]
			add
			{
			}
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x11FCE04", Offset = "0x11FCE04", VA = "0x11FCE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E3D4", Offset = "0xB3E3D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x11FD754", Offset = "0x11FD754", VA = "0x11FD754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x11FD95C", Offset = "0x11FD95C", VA = "0x11FD95C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x11FE094", Offset = "0x11FE094", VA = "0x11FE094")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x11FCED0", Offset = "0x11FCED0", VA = "0x11FCED0")]
		private void SetQualityLevel(int value)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x11FE7F0", Offset = "0x11FE7F0", VA = "0x11FE7F0")]
		private void SetBloomMode(AppQualitySettingLevels.BloomMode rMode)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x11FEA4C", Offset = "0x11FEA4C", VA = "0x11FEA4C")]
		private void EnableFxaa(bool bEnable)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x11FE8BC", Offset = "0x11FE8BC", VA = "0x11FE8BC")]
		private void EnableHDR(bool bEnable)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x11FEB78", Offset = "0x11FEB78", VA = "0x11FEB78")]
		public void ResetAutoQuality()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x11FEB7C", Offset = "0x11FEB7C", VA = "0x11FEB7C")]
		public void AutoAdjustSimplifierLevel(List<Stroke> strokes, Guid[] brushes)
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x11FF458", Offset = "0x11FF458", VA = "0x11FF458")]
		public QualityControls()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class RdpStrokeSimplifier
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33818", Offset = "0xB33818")]
		private float <Level>k__BackingField;

		[Token(Token = "0x4001DA4")]
		private const float kEpsilon = 1E-05f;

		[Token(Token = "0x1700045F")]
		public float Level
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x11FFF44", Offset = "0x11FFF44", VA = "0x11FFF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E424", Offset = "0xB3E424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x11FFF4C", Offset = "0x11FFF4C", VA = "0x11FFF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E434", Offset = "0xB3E434")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x11FD6BC", Offset = "0x11FD6BC", VA = "0x11FD6BC")]
		public RdpStrokeSimplifier(float level)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x11FFF54", Offset = "0x11FFF54", VA = "0x11FFF54")]
		public void CalculatePointsToDrop(Stroke stroke, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x11FF440", Offset = "0x11FF440", VA = "0x11FF440")]
		public static float CalculateLevelForReduction(float reduction)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1200284", Offset = "0x1200284", VA = "0x1200284")]
		private void FlagPointsToKeep(Stroke stroke, bool[] toDrop, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x120046C", Offset = "0x120046C", VA = "0x120046C")]
		private void SavePointSequence(Stroke stroke, bool[] toDrop, int point, int dir, BaseBrushScript brushScript)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x11FFFFC", Offset = "0x11FFFFC", VA = "0x11FFFFC")]
		private void FlagPointsToDrop(PointerManager.ControlPoint[] points, bool[] toDrop, int first, int last, float sqrMaxError)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class ReferenceImage
	{
		[Token(Token = "0x2000472")]
		private enum ImageState
		{
			[Token(Token = "0x4001DAD")]
			Uninitialized,
			[Token(Token = "0x4001DAE")]
			NotReady,
			[Token(Token = "0x4001DAF")]
			Ready,
			[Token(Token = "0x4001DB0")]
			Error
		}

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29AEC", Offset = "0xB29AEC")]
		private sealed class <LoadImage>d__29 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string path;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__path;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool runForeground;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			public bool <>3__runForeground;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D dest;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D <>3__dest;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private ThreadedImageReader <reader>5__2;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0x10F0B14", Offset = "0x10F0B14", VA = "0x10F0B14", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E00")]
				[Address(RVA = "0x10F0B5C", Offset = "0x10F0B5C", VA = "0x10F0B5C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x10F0668", Offset = "0x10F0668", VA = "0x10F0668")]
			[DebuggerHidden]
			public <LoadImage>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x10F06A0", Offset = "0x10F06A0", VA = "0x10F06A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x10F06A4", Offset = "0x10F06A4", VA = "0x10F06A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x10F0B1C", Offset = "0x10F0B1C", VA = "0x10F0B1C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x10F0B64", Offset = "0x10F0B64", VA = "0x10F0B64", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x10F0C24", Offset = "0x10F0C24", VA = "0x10F0C24", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29AFC", Offset = "0xB29AFC")]
		private sealed class <RequestLoadCoroutineMainThread>d__36 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WWW <loader>5__2;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Texture2D <inTex>5__3;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Timeslice> <>7__wrap3;

			[Token(Token = "0x1700046B")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001E08")]
				[Address(RVA = "0x10F19AC", Offset = "0x10F19AC", VA = "0x10F19AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0x10F19F4", Offset = "0x10F19F4", VA = "0x10F19F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x10F115C", Offset = "0x10F115C", VA = "0x10F115C")]
			[DebuggerHidden]
			public <RequestLoadCoroutineMainThread>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x10F1188", Offset = "0x10F1188", VA = "0x10F1188", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x10F139C", Offset = "0x10F139C", VA = "0x10F139C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x10F1224", Offset = "0x10F1224", VA = "0x10F1224")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x10F12E0", Offset = "0x10F12E0", VA = "0x10F12E0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x10F19B4", Offset = "0x10F19B4", VA = "0x10F19B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B0C", Offset = "0xB29B0C")]
		private sealed class <RequestLoadCoroutine>d__37 : IEnumerable<Timeslice>, IEnumerable, IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReferenceImage <>4__this;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ThreadedImageReader <reader>5__2;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RawImage <result>5__3;

			[Token(Token = "0x1700046D")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6001E0E")]
				[Address(RVA = "0x10F1060", Offset = "0x10F1060", VA = "0x10F1060", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0x10F10A8", Offset = "0x10F10A8", VA = "0x10F10A8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x10F0C28", Offset = "0x10F0C28", VA = "0x10F0C28")]
			[DebuggerHidden]
			public <RequestLoadCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x10F0C60", Offset = "0x10F0C60", VA = "0x10F0C60", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x10F0C64", Offset = "0x10F0C64", VA = "0x10F0C64", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x10F1068", Offset = "0x10F1068", VA = "0x10F1068", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x10F10B0", Offset = "0x10F10B0", VA = "0x10F10B0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Timeslice> System.Collections.Generic.IEnumerable<TiltBrush.Timeslice>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x10F1158", Offset = "0x10F1158", VA = "0x10F1158", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<Timeslice> m_coroutine;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ImageState m_State;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D m_Icon;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D m_FullSize;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_FullSizeReferences;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_ImageAspect;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_Path;

		[Token(Token = "0x17000460")]
		public string FileName
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xFAF364", Offset = "0xFAF364", VA = "0xFAF364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		public string FileFullPath
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xFAF3CC", Offset = "0xFAF3CC", VA = "0xFAF3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		public float ImageAspect
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xFAF3D4", Offset = "0xFAF3D4", VA = "0xFAF3D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000463")]
		public bool NotLoaded
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xFAF3F0", Offset = "0xFAF3F0", VA = "0xFAF3F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000464")]
		public bool Valid
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xFAF400", Offset = "0xFAF400", VA = "0xFAF400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000465")]
		public bool Running
		{
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xFAF410", Offset = "0xFAF410", VA = "0xFAF410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000466")]
		public Texture2D Icon
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xFAF420", Offset = "0xFAF420", VA = "0xFAF420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		public Texture2D FullSize
		{
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xFAF4A4", Offset = "0xFAF4A4", VA = "0xFAF4A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		public string FilePath
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xFAF528", Offset = "0xFAF528", VA = "0xFAF528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xFAF530", Offset = "0xFAF530", VA = "0xFAF530")]
		public ReferenceImage(string path)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xFAF55C", Offset = "0xFAF55C", VA = "0xFAF55C")]
		public void AcquireImageFullsize(bool runForeground = false)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xFAF7C8", Offset = "0xFAF7C8", VA = "0xFAF7C8")]
		public void ReleaseImageFullsize()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xFAF730", Offset = "0xFAF730", VA = "0xFAF730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E444", Offset = "0xB3E444")]
		private IEnumerable LoadImage(string path, Texture2D dest, bool runForeground = false)
		{
			return null;
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xFAF880", Offset = "0xFAF880", VA = "0xFAF880")]
		public void SynchronousLoad()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xFAFBAC", Offset = "0xFAFBAC", VA = "0xFAFBAC")]
		public bool RequestLoadIconCache()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xFAF98C", Offset = "0xFAF98C", VA = "0xFAF98C")]
		public bool RequestLoad(bool allowMainThread = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xFAFDE8", Offset = "0xFAFDE8", VA = "0xFAFDE8")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xFB01B4", Offset = "0xFB01B4", VA = "0xFB01B4")]
		private static void DownsizeTexture(Texture2D inTex, ref Texture2D outTex, int maxHeight)
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xFB03AC", Offset = "0xFB03AC", VA = "0xFB03AC")]
		private static string PathToWwwUrl(string path)
		{
			return null;
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xFAFD10", Offset = "0xFAFD10", VA = "0xFAFD10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E4A4", Offset = "0xB3E4A4")]
		private IEnumerator<Timeslice> RequestLoadCoroutineMainThread()
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xFAFD7C", Offset = "0xFAFD7C", VA = "0xFAFD7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E504", Offset = "0xB3E504")]
		private IEnumerable<Timeslice> RequestLoadCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xFAFC80", Offset = "0xFAFC80", VA = "0xFAFC80")]
		private bool ValidateFileSize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xFB04BC", Offset = "0xFB04BC", VA = "0xFB04BC")]
		public string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xFB0530", Offset = "0xFB0530", VA = "0xFB0530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E564", Offset = "0xB3E564")]
		private bool <Unload>b__33_0(ImageWidget x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000476")]
	public class ReferenceImageCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B1C", Offset = "0xB29B1C")]
		private sealed class <LoadAvailableImageCaches>d__31 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImageCatalog <>4__this;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ReferenceImage>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000473")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001E30")]
				[Address(RVA = "0x10F2334", Offset = "0x10F2334", VA = "0x10F2334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E32")]
				[Address(RVA = "0x10F237C", Offset = "0x10F237C", VA = "0x10F237C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x10F2028", Offset = "0x10F2028", VA = "0x10F2028")]
			[DebuggerHidden]
			public <LoadAvailableImageCaches>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x10F2054", Offset = "0x10F2054", VA = "0x10F2054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x10F2160", Offset = "0x10F2160", VA = "0x10F2160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x10F213C", Offset = "0x10F213C", VA = "0x10F213C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x10F20E8", Offset = "0x10F20E8", VA = "0x10F20E8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x10F233C", Offset = "0x10F233C", VA = "0x10F233C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B2C", Offset = "0xB29B2C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ReferenceImage, bool> <>9__33_0;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ReferenceImage, string> <>9__44_0;

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x10F1A5C", Offset = "0x10F1A5C", VA = "0x10F1A5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x10F1A64", Offset = "0x10F1A64", VA = "0x10F1A64")]
			internal bool <LoadAllImagesCoroutineImpl>b__33_0(ReferenceImage im)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x10F1A94", Offset = "0x10F1A94", VA = "0x10F1A94")]
			internal string <ProcessReferenceDirectory>b__44_0(ReferenceImage image)
			{
				return null;
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B3C", Offset = "0xB29B3C")]
		private sealed class <LoadAllImagesCoroutineImpl>d__33 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceImageCatalog <>4__this;

			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ReferenceImage> <toLoad>5__2;

			[Token(Token = "0x17000475")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0x10F1FD8", Offset = "0x10F1FD8", VA = "0x10F1FD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3D")]
				[Address(RVA = "0x10F2020", Offset = "0x10F2020", VA = "0x10F2020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x10F1B68", Offset = "0x10F1B68", VA = "0x10F1B68")]
			[DebuggerHidden]
			public <LoadAllImagesCoroutineImpl>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x10F1B94", Offset = "0x10F1B94", VA = "0x10F1B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x10F1C00", Offset = "0x10F1C00", VA = "0x10F1C00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x10F1BD4", Offset = "0x10F1BD4", VA = "0x10F1BD4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x10F1FE0", Offset = "0x10F1FE0", VA = "0x10F1FE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B4C", Offset = "0xB29B4C")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReferenceImageCatalog <>4__this;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int iMin;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int iMax;

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x10F1AAC", Offset = "0x10F1AAC", VA = "0x10F1AAC")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x10F1AB4", Offset = "0x10F1AB4", VA = "0x10F1AB4")]
			internal int <RequestLoadImages>b__0(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x10F1B44", Offset = "0x10F1B44", VA = "0x10F1B44")]
			internal int <RequestLoadImages>b__1(int i)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001DC8")]
		private const int IMAGE_LOAD_PER_FRAME = 4;

		[Token(Token = "0x4001DC9")]
		private const int IMAGE_LOAD_PER_FRAME_COMPOSITOR = 8;

		[Token(Token = "0x4001DCA")]
		public const int TEXTURE_CREATIONS_PER_FRAME = 1;

		[Token(Token = "0x4001DCB")]
		public const int MAX_ICON_TEX_DIMENSION = 256;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReferenceImageCatalog m_Instance;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_TexturesCreatedThisFrame;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_ReferenceDirectory;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReferenceImage> m_Images;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stack<int> m_RequestedLoads;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_DirNeedsProcessing;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_ChangedFile;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_InCompositorLoad;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_RunningImageCacheCoroutine;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool m_ResetImageEnumeration;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Texture2D m_ErrorImage;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string[] m_DefaultImages;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<int> Update__temporarystack;

		[Token(Token = "0x1700046F")]
		public bool IsScanning
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xFB0690", Offset = "0xFB0690", VA = "0xFB0690", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000470")]
		public Texture2D ErrorImage
		{
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xFB0698", Offset = "0xFB0698", VA = "0xFB0698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		public int TexturesCreatedThisFrame
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xFB06A0", Offset = "0xFB06A0", VA = "0xFB06A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xFB06A8", Offset = "0xFB06A8", VA = "0xFB06A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public int ItemCount
		{
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xFB1554", Offset = "0xFB1554", VA = "0xFB1554", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000076")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xFB0550", Offset = "0xFB0550", VA = "0xFB0550", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E6A4", Offset = "0xB3E6A4")]
			add
			{
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xFB05F0", Offset = "0xFB05F0", VA = "0xFB05F0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E6B4", Offset = "0xB3E6B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xFB06B0", Offset = "0xFB06B0", VA = "0xFB06B0", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xFB0DD4", Offset = "0xFB0DD4", VA = "0xFB0DD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xFB1014", Offset = "0xFB1014", VA = "0xFB1014")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xFB1174", Offset = "0xFB1174", VA = "0xFB1174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E6C4", Offset = "0xB3E6C4")]
		private IEnumerator<Null> LoadAvailableImageCaches()
		{
			return null;
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xFB11E0", Offset = "0xFB11E0", VA = "0xFB11E0")]
		public IEnumerator<Null> LoadAllImagesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xFB11F0", Offset = "0xFB11F0", VA = "0xFB11F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3E724", Offset = "0xB3E724")]
		private IEnumerator<Null> LoadAllImagesCoroutineImpl()
		{
			return null;
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xFB125C", Offset = "0xFB125C", VA = "0xFB125C")]
		public void UnloadAllImages()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xFB131C", Offset = "0xFB131C", VA = "0xFB131C")]
		public bool AnyImageValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xFB13CC", Offset = "0xFB13CC", VA = "0xFB13CC")]
		private void OnChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xFB141C", Offset = "0xFB141C", VA = "0xFB141C")]
		public ReferenceImage IndexToImage(int index)
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xFB14AC", Offset = "0xFB14AC", VA = "0xFB14AC")]
		public int ImageToIndex(ReferenceImage image)
		{
			return default(int);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xFB15A0", Offset = "0xFB15A0", VA = "0xFB15A0")]
		public void RequestLoadImage(ReferenceImage referenceImage)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xFB15CC", Offset = "0xFB15CC", VA = "0xFB15CC")]
		public void RequestLoadImages(int iMin, int iMax)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xFB182C", Offset = "0xFB182C", VA = "0xFB182C")]
		public Texture2D GetImageIcon(int index, out float aspect)
		{
			return null;
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xFB06B8", Offset = "0xFB06B8", VA = "0xFB06B8")]
		private void ProcessReferenceDirectory(bool userOverlay = true)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xFB1924", Offset = "0xFB1924", VA = "0xFB1924")]
		public ReferenceImage FileNameToImage(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xFB1B30", Offset = "0xFB1B30", VA = "0xFB1B30")]
		public ReferenceImageCatalog()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class ReferencePanelImageTab : ReferencePanelTab
	{
		[Token(Token = "0x200047C")]
		public class ImageIcon : ReferenceIcon
		{
			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33868", Offset = "0xB33868")]
			private ReferencePanel <Parent>k__BackingField;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33878", Offset = "0xB33878")]
			private bool <TextureAssigned>k__BackingField;

			[Token(Token = "0x1700047B")]
			public ReferencePanel Parent
			{
				[Token(Token = "0x6001E4B")]
				[Address(RVA = "0x10F23D0", Offset = "0x10F23D0", VA = "0x10F23D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E824", Offset = "0xB3E824")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0x10F23D8", Offset = "0x10F23D8", VA = "0x10F23D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E834", Offset = "0xB3E834")]
				set
				{
				}
			}

			[Token(Token = "0x1700047C")]
			public bool TextureAssigned
			{
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0x10F23E0", Offset = "0x10F23E0", VA = "0x10F23E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E844", Offset = "0xB3E844")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0x10F23E8", Offset = "0x10F23E8", VA = "0x10F23E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E854", Offset = "0xB3E854")]
				set
				{
				}
			}

			[Token(Token = "0x1700047D")]
			public LoadReferenceImageButton ImageButton
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0x10F23F4", Offset = "0x10F23F4", VA = "0x10F23F4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x10F2474", Offset = "0x10F2474", VA = "0x10F2474", Slot = "4")]
			public override void Refresh(int iCatalog)
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x10F256C", Offset = "0x10F256C", VA = "0x10F256C")]
			public ImageIcon()
			{
			}
		}

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_AutoLoadImages;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool m_tabAccessed;

		[Token(Token = "0x17000477")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xFB2C14", Offset = "0xFB2C14", VA = "0xFB2C14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000478")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xFB2C60", Offset = "0xFB2C60", VA = "0xFB2C60", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x17000479")]
		protected override Type ButtonType
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xFB2C68", Offset = "0xFB2C68", VA = "0xFB2C68", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		protected override Type IconType
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xFB2CE0", Offset = "0xFB2CE0", VA = "0xFB2CE0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xFB2D58", Offset = "0xFB2D58", VA = "0xFB2D58", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xFB2FA0", Offset = "0xFB2FA0", VA = "0xFB2FA0", Slot = "8")]
		public override void InitTab()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xFB3348", Offset = "0xFB3348", VA = "0xFB3348", Slot = "11")]
		public override void UpdateTab()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xFB34E0", Offset = "0xFB34E0", VA = "0xFB34E0", Slot = "12")]
		public override void OnTabEnable()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xFB369C", Offset = "0xFB369C", VA = "0xFB369C", Slot = "14")]
		public override void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xFB37CC", Offset = "0xFB37CC", VA = "0xFB37CC")]
		public ReferencePanelImageTab()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class ReferencePanelModelTab : ReferencePanelTab
	{
		[Token(Token = "0x200047E")]
		public class ModelIcon : ReferenceIcon
		{
			[Token(Token = "0x17000482")]
			public ModelButton ModelButton
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0x10F257C", Offset = "0x10F257C", VA = "0x10F257C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x10F25FC", Offset = "0x10F25FC", VA = "0x10F25FC", Slot = "4")]
			public override void Refresh(int iCatalog)
			{
			}

			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x10F2690", Offset = "0x10F2690", VA = "0x10F2690")]
			public ModelIcon()
			{
			}
		}

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_LastPageIndexForLoad;

		[Token(Token = "0x1700047E")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xFB382C", Offset = "0xFB382C", VA = "0xFB382C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xFB3878", Offset = "0xFB3878", VA = "0xFB3878", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x17000480")]
		protected override Type ButtonType
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xFB3880", Offset = "0xFB3880", VA = "0xFB3880", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		protected override Type IconType
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xFB38F8", Offset = "0xFB38F8", VA = "0xFB38F8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xFB3970", Offset = "0xFB3970", VA = "0xFB3970", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xFB3A94", Offset = "0xFB3A94", VA = "0xFB3A94")]
		public ReferencePanelModelTab()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public abstract class ReferencePanelTab : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		public abstract class ReferenceIcon
		{
			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB338A8", Offset = "0xB338A8")]
			private BaseButton <Button>k__BackingField;

			[Token(Token = "0x1700048C")]
			public BaseButton Button
			{
				[Token(Token = "0x6001E6E")]
				[Address(RVA = "0x10F2718", Offset = "0x10F2718", VA = "0x10F2718")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E884", Offset = "0xB3E884")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0x10F2720", Offset = "0x10F2720", VA = "0x10F2720")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E894", Offset = "0xB3E894")]
				set
				{
				}
			}

			[Token(Token = "0x6001E70")]
			public abstract void Refresh(int catalog);

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x10F2574", Offset = "0x10F2574", VA = "0x10F2574")]
			protected ReferenceIcon()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B5C", Offset = "0xB29B5C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ReferenceIcon, BaseButton> <>9__13_0;

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x10F26F8", Offset = "0x10F26F8", VA = "0x10F26F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x10F2700", Offset = "0x10F2700", VA = "0x10F2700")]
			internal BaseButton <get_Buttons>b__13_0(ReferenceIcon x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_PanelName;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ReferenceIcon[] m_Icons;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int m_IndexOffset;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33898", Offset = "0xB33898")]
		private int <PageIndex>k__BackingField;

		[Token(Token = "0x17000483")]
		public string PanelName
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xFB3AA0", Offset = "0xFB3AA0", VA = "0xFB3AA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		public int PageIndex
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xFB3AA8", Offset = "0xFB3AA8", VA = "0xFB3AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E864", Offset = "0xB3E864")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xFB3AB0", Offset = "0xFB3AB0", VA = "0xFB3AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E874", Offset = "0xB3E874")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public abstract IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x6001E5E")]
			get;
		}

		[Token(Token = "0x17000486")]
		public List<BaseButton> Buttons
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xFB1C00", Offset = "0xFB1C00", VA = "0xFB1C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		public abstract ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x6001E60")]
			get;
		}

		[Token(Token = "0x17000488")]
		protected abstract Type ButtonType
		{
			[Token(Token = "0x6001E61")]
			get;
		}

		[Token(Token = "0x17000489")]
		protected abstract Type IconType
		{
			[Token(Token = "0x6001E62")]
			get;
		}

		[Token(Token = "0x1700048A")]
		public int PageCount
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xFB2708", Offset = "0xFB2708", VA = "0xFB2708")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700048B")]
		public int IconCount
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xFB2814", Offset = "0xFB2814", VA = "0xFB2814")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xFB30C0", Offset = "0xFB30C0", VA = "0xFB30C0", Slot = "8")]
		public virtual void InitTab()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xFB3AB8", Offset = "0xFB3AB8", VA = "0xFB3AB8", Slot = "9")]
		public virtual void UpdateButtonTransitionScale(float scale)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xFB2DF0", Offset = "0xFB2DF0", VA = "0xFB2DF0", Slot = "10")]
		public virtual void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xFB34DC", Offset = "0xFB34DC", VA = "0xFB34DC", Slot = "11")]
		public virtual void UpdateTab()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xFB35BC", Offset = "0xFB35BC", VA = "0xFB35BC", Slot = "12")]
		public virtual void OnTabEnable()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xFB3BA0", Offset = "0xFB3BA0", VA = "0xFB3BA0", Slot = "13")]
		public virtual void OnTabDisable()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xFB37C8", Offset = "0xFB37C8", VA = "0xFB37C8", Slot = "14")]
		public virtual void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xFB3BA4", Offset = "0xFB3BA4", VA = "0xFB3BA4", Slot = "15")]
		public virtual bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xFB37D0", Offset = "0xFB37D0", VA = "0xFB37D0")]
		protected ReferencePanelTab()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class ReferencePanelVideoTab : ReferencePanelTab
	{
		[Token(Token = "0x2000483")]
		public class VideoIcon : ReferenceIcon
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33928", Offset = "0xB33928")]
			private ReferencePanel <Parent>k__BackingField;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33938", Offset = "0xB33938")]
			private bool <TextureAssigned>k__BackingField;

			[Token(Token = "0x17000494")]
			public ReferencePanel Parent
			{
				[Token(Token = "0x6001E8A")]
				[Address(RVA = "0x10F2728", Offset = "0x10F2728", VA = "0x10F2728")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E90C", Offset = "0xB3E90C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0x10F2730", Offset = "0x10F2730", VA = "0x10F2730")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E91C", Offset = "0xB3E91C")]
				set
				{
				}
			}

			[Token(Token = "0x17000495")]
			public bool TextureAssigned
			{
				[Token(Token = "0x6001E8C")]
				[Address(RVA = "0x10F2738", Offset = "0x10F2738", VA = "0x10F2738")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E92C", Offset = "0xB3E92C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0x10F2740", Offset = "0x10F2740", VA = "0x10F2740")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E93C", Offset = "0xB3E93C")]
				set
				{
				}
			}

			[Token(Token = "0x17000496")]
			public VideoButton VideoButton
			{
				[Token(Token = "0x6001E8E")]
				[Address(RVA = "0x10F274C", Offset = "0x10F274C", VA = "0x10F274C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x10F27CC", Offset = "0x10F27CC", VA = "0x10F27CC", Slot = "4")]
			public override void Refresh(int catalogIndex)
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x10F28CC", Offset = "0x10F28CC", VA = "0x10F28CC")]
			public VideoIcon()
			{
			}
		}

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_VideoControls;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxCollider m_VideoControlsCollider;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_Preview;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VideoPositionSlider m_Scrubber;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_VideoSkipTime;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Texture2D m_ErrorTexture;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Texture2D m_LoadingTexture;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_AllIconTexturesAssigned;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VideoWidget m_SelectedVideoWidget;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material m_PreviewMaterial;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_TabActive;

		[Token(Token = "0x1700048D")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB46504", Offset = "0xB46504")]
		public bool SelectedVideoIsPlaying
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0xFB3BBC", Offset = "0xFB3BBC", VA = "0xFB3BBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xFB3C8C", Offset = "0xFB3C8C", VA = "0xFB3C8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB46538", Offset = "0xB46538")]
		public float SelectedVideoVolume
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xFB3CF4", Offset = "0xFB3CF4", VA = "0xFB3CF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xFB3D3C", Offset = "0xFB3D3C", VA = "0xFB3D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public override IReferenceItemCatalog Catalog
		{
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xFB3D94", Offset = "0xFB3D94", VA = "0xFB3D94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public override ReferenceButton.Type ReferenceButtonType
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xFB3DE0", Offset = "0xFB3DE0", VA = "0xFB3DE0", Slot = "5")]
			get
			{
				return default(ReferenceButton.Type);
			}
		}

		[Token(Token = "0x17000491")]
		protected override Type ButtonType
		{
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xFB3DE8", Offset = "0xFB3DE8", VA = "0xFB3DE8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		protected override Type IconType
		{
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xFB3E60", Offset = "0xFB3E60", VA = "0xFB3E60", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		protected ReferenceVideo.Controller SelectedVideo
		{
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xFB3C00", Offset = "0xFB3C00", VA = "0xFB3C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xFB3ED8", Offset = "0xFB3ED8", VA = "0xFB3ED8")]
		private void RefreshVideoControlsVisibility()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xFB4020", Offset = "0xFB4020", VA = "0xFB4020", Slot = "12")]
		public override void OnTabEnable()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xFB402C", Offset = "0xFB402C", VA = "0xFB402C", Slot = "13")]
		public override void OnTabDisable()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xFB4034", Offset = "0xFB4034", VA = "0xFB4034", Slot = "10")]
		public override void RefreshTab(bool selected)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xFB4078", Offset = "0xFB4078", VA = "0xFB4078", Slot = "8")]
		public override void InitTab()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xFB4278", Offset = "0xFB4278", VA = "0xFB4278")]
		public void OnVideoWidgetActivated(VideoWidget widget)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xFB4314", Offset = "0xFB4314", VA = "0xFB4314", Slot = "11")]
		public override void UpdateTab()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xFB4648", Offset = "0xFB4648", VA = "0xFB4648", Slot = "14")]
		public override void OnUpdateGazeBehavior(Color panelColor, bool gazeActive, bool available)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xFB4774", Offset = "0xFB4774", VA = "0xFB4774", Slot = "15")]
		public override bool RaycastAgainstMeshCollider(Ray ray, out RaycastHit hitInfo, float dist)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xFB4868", Offset = "0xFB4868", VA = "0xFB4868")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB3E8A4", Offset = "0xB3E8A4")]
		public void SkipBack()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xFB4904", Offset = "0xFB4904", VA = "0xFB4904")]
		[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB3E8D8", Offset = "0xB3E8D8")]
		public void SkipForward()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xFB49A0", Offset = "0xFB49A0", VA = "0xFB49A0")]
		public ReferencePanelVideoTab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000484")]
	public class ReferenceVideo
	{
		[Token(Token = "0x2000485")]
		public class Controller : IDisposable
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Action m_OnVideoInitialized;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ReferenceVideo m_ReferenceVideo;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_VideoInitialized;

			[Token(Token = "0x170004A2")]
			public bool Initialized
			{
				[Token(Token = "0x6001EAD")]
				[Address(RVA = "0x10F31C4", Offset = "0x10F31C4", VA = "0x10F31C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004A3")]
			private VideoPlayer VideoPlayer
			{
				[Token(Token = "0x6001EB0")]
				[Address(RVA = "0x10F331C", Offset = "0x10F331C", VA = "0x10F331C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			public Texture VideoTexture
			{
				[Token(Token = "0x6001EB1")]
				[Address(RVA = "0x10F3338", Offset = "0x10F3338", VA = "0x10F3338")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			public bool Playing
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0x10F3374", Offset = "0x10F3374", VA = "0x10F3374")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001EB3")]
				[Address(RVA = "0x10F33B0", Offset = "0x10F33B0", VA = "0x10F33B0")]
				set
				{
				}
			}

			[Token(Token = "0x170004A6")]
			public float Volume
			{
				[Token(Token = "0x6001EB4")]
				[Address(RVA = "0x10F3424", Offset = "0x10F3424", VA = "0x10F3424")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EB5")]
				[Address(RVA = "0x10F3494", Offset = "0x10F3494", VA = "0x10F3494")]
				set
				{
				}
			}

			[Token(Token = "0x170004A7")]
			public float Position
			{
				[Token(Token = "0x6001EB6")]
				[Address(RVA = "0x10F3560", Offset = "0x10F3560", VA = "0x10F3560")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x10F35D4", Offset = "0x10F35D4", VA = "0x10F35D4")]
				set
				{
				}
			}

			[Token(Token = "0x170004A8")]
			public float Time
			{
				[Token(Token = "0x6001EB8")]
				[Address(RVA = "0x10F3650", Offset = "0x10F3650", VA = "0x10F3650")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001EB9")]
				[Address(RVA = "0x10F3690", Offset = "0x10F3690", VA = "0x10F3690")]
				set
				{
				}
			}

			[Token(Token = "0x170004A9")]
			public float Length
			{
				[Token(Token = "0x6001EBA")]
				[Address(RVA = "0x10F370C", Offset = "0x10F370C", VA = "0x10F370C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x14000077")]
			public event Action OnVideoInitialized
			{
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0x10F31CC", Offset = "0x10F31CC", VA = "0x10F31CC")]
				add
				{
				}
				[Token(Token = "0x6001EAF")]
				[Address(RVA = "0x10F32A0", Offset = "0x10F32A0", VA = "0x10F32A0")]
				remove
				{
				}
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x10F374C", Offset = "0x10F374C", VA = "0x10F374C")]
			public Controller(ReferenceVideo referenceVideo)
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x10F3804", Offset = "0x10F3804", VA = "0x10F3804")]
			public Controller(Controller other)
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x10F2BE4", Offset = "0x10F2BE4", VA = "0x10F2BE4", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x10F3268", Offset = "0x10F3268", VA = "0x10F3268")]
			public void OnInitialization()
			{
			}
		}

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B6C", Offset = "0xB29B6C")]
		private sealed class <PrepareVideoPlayer>d__47 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceVideo <>4__this;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCompletion;

			[Token(Token = "0x170004AA")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001EC2")]
				[Address(RVA = "0x10F3174", Offset = "0x10F3174", VA = "0x10F3174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC4")]
				[Address(RVA = "0x10F31BC", Offset = "0x10F31BC", VA = "0x10F31BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x10F2C68", Offset = "0x10F2C68", VA = "0x10F2C68")]
			[DebuggerHidden]
			public <PrepareVideoPlayer>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x10F2C94", Offset = "0x10F2C94", VA = "0x10F2C94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x10F2C98", Offset = "0x10F2C98", VA = "0x10F2C98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0x10F317C", Offset = "0x10F317C", VA = "0x10F317C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29B7C", Offset = "0xB29B7C")]
		private sealed class <Initialize>d__49 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReferenceVideo <>4__this;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Controller <thumbnailExtractor>5__2;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <width>5__3;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <height>5__4;

			[Token(Token = "0x170004AC")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6001EC8")]
				[Address(RVA = "0x10F2C18", Offset = "0x10F2C18", VA = "0x10F2C18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ECA")]
				[Address(RVA = "0x10F2C60", Offset = "0x10F2C60", VA = "0x10F2C60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x10F28D4", Offset = "0x10F28D4", VA = "0x10F28D4")]
			[DebuggerHidden]
			public <Initialize>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x10F2900", Offset = "0x10F2900", VA = "0x10F2900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x10F2904", Offset = "0x10F2904", VA = "0x10F2904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x10F2C20", Offset = "0x10F2C20", VA = "0x10F2C20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VideoPlayer m_VideoPlayer;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<Controller> m_Controllers;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33948", Offset = "0xB33948")]
		private readonly string <PersistentPath>k__BackingField;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33958", Offset = "0xB33958")]
		private readonly string <AbsolutePath>k__BackingField;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33968", Offset = "0xB33968")]
		private readonly bool <NetworkVideo>k__BackingField;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33978", Offset = "0xB33978")]
		private readonly string <HumanName>k__BackingField;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33988", Offset = "0xB33988")]
		private Texture2D <Thumbnail>k__BackingField;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33998", Offset = "0xB33998")]
		private uint <Width>k__BackingField;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB339A8", Offset = "0xB339A8")]
		private uint <Height>k__BackingField;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB339B8", Offset = "0xB339B8")]
		private float <Aspect>k__BackingField;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB339C8", Offset = "0xB339C8")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB339D8", Offset = "0xB339D8")]
		private string <Error>k__BackingField;

		[Token(Token = "0x17000497")]
		public string PersistentPath
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xFB4ABC", Offset = "0xFB4ABC", VA = "0xFB4ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E94C", Offset = "0xB3E94C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		public string AbsolutePath
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xFB4AC4", Offset = "0xFB4AC4", VA = "0xFB4AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E95C", Offset = "0xB3E95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000499")]
		public bool NetworkVideo
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xFB4ACC", Offset = "0xFB4ACC", VA = "0xFB4ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E96C", Offset = "0xB3E96C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049A")]
		public string HumanName
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xFB4AD4", Offset = "0xFB4AD4", VA = "0xFB4AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E97C", Offset = "0xB3E97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		public Texture2D Thumbnail
		{
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xFB4ADC", Offset = "0xFB4ADC", VA = "0xFB4ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E98C", Offset = "0xB3E98C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xFB4AE4", Offset = "0xFB4AE4", VA = "0xFB4AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E99C", Offset = "0xB3E99C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public uint Width
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xFB4AEC", Offset = "0xFB4AEC", VA = "0xFB4AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9AC", Offset = "0xB3E9AC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xFB4AF4", Offset = "0xFB4AF4", VA = "0xFB4AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9BC", Offset = "0xB3E9BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049D")]
		public uint Height
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xFB4AFC", Offset = "0xFB4AFC", VA = "0xFB4AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9CC", Offset = "0xB3E9CC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xFB4B04", Offset = "0xFB4B04", VA = "0xFB4B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9DC", Offset = "0xB3E9DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049E")]
		public float Aspect
		{
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xFB4B0C", Offset = "0xFB4B0C", VA = "0xFB4B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9EC", Offset = "0xB3E9EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xFB4B14", Offset = "0xFB4B14", VA = "0xFB4B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3E9FC", Offset = "0xB3E9FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049F")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xFB4B1C", Offset = "0xFB4B1C", VA = "0xFB4B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA0C", Offset = "0xB3EA0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xFB4B24", Offset = "0xFB4B24", VA = "0xFB4B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA1C", Offset = "0xB3EA1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004A0")]
		public bool HasInstances
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xFB4B30", Offset = "0xFB4B30", VA = "0xFB4B30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A1")]
		public string Error
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xFB4B84", Offset = "0xFB4B84", VA = "0xFB4B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA2C", Offset = "0xB3EA2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xFB4B8C", Offset = "0xFB4B8C", VA = "0xFB4B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EA3C", Offset = "0xB3EA3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xFB49AC", Offset = "0xFB49AC", VA = "0xFB49AC")]
		public static ReferenceVideo CreateDummyVideo()
		{
			return null;
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xFB4B94", Offset = "0xFB4B94", VA = "0xFB4B94")]
		public ReferenceVideo(string filePath)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xFB4A00", Offset = "0xFB4A00", VA = "0xFB4A00")]
		private ReferenceVideo()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xFB4CB8", Offset = "0xFB4CB8", VA = "0xFB4CB8")]
		public Controller CreateController()
		{
			return null;
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xFB4E70", Offset = "0xFB4E70", VA = "0xFB4E70")]
		private void InitializeControllers()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xFB4F88", Offset = "0xFB4F88", VA = "0xFB4F88")]
		private void OnControllerDisposed(Controller controller)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xFB4DF8", Offset = "0xFB4DF8", VA = "0xFB4DF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3EA4C", Offset = "0xB3EA4C")]
		private IEnumerator<Null> PrepareVideoPlayer(Action onCompletion)
		{
			return null;
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xFB5090", Offset = "0xFB5090", VA = "0xFB5090")]
		private void OnError(VideoPlayer player, string error)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xFB5098", Offset = "0xFB5098", VA = "0xFB5098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3EAAC", Offset = "0xB3EAAC")]
		public IEnumerator<Null> Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xFB5104", Offset = "0xFB5104", VA = "0xFB5104")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xFB5258", Offset = "0xFB5258", VA = "0xFB5258", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000488")]
	public class RegisterVisualizerObject : MonoBehaviour
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_ShowInReactorModeOnly;

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xFB5410", Offset = "0xFB5410", VA = "0xFB5410")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xFB5480", Offset = "0xFB5480", VA = "0xFB5480")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xFB54F0", Offset = "0xFB54F0", VA = "0xFB54F0")]
		public RegisterVisualizerObject()
		{
		}
	}
	[Token(Token = "0x2000489")]
	internal abstract class Bytable
	{
		[Token(Token = "0x170004AE")]
		public abstract int Length
		{
			[Token(Token = "0x6001ECE")]
			get;
		}

		[Token(Token = "0x6001ECF")]
		public abstract void ToBytes(ref byte[] bytes);

		[Token(Token = "0x6001ED0")]
		public abstract void FromBytes(byte[] buf);

		[Token(Token = "0x6001ED1")]
		public abstract Array GetArray();

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x128341C", Offset = "0x128341C", VA = "0x128341C")]
		protected Bytable()
		{
		}
	}
	[Token(Token = "0x200048A")]
	internal class Color32Bytable : Bytable
	{
		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color32[] m_buffer;

		[Token(Token = "0x170004AF")]
		public override int Length
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x1317328", Offset = "0x1317328", VA = "0x1317328", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x13172FC", Offset = "0x13172FC", VA = "0x13172FC")]
		public Color32Bytable(Color32[] buffer)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1317344", Offset = "0x1317344", VA = "0x1317344", Slot = "7")]
		public override Array GetArray()
		{
			return null;
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x131734C", Offset = "0x131734C", VA = "0x131734C", Slot = "5")]
		public override void ToBytes(ref byte[] buf)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x1317450", Offset = "0x1317450", VA = "0x1317450", Slot = "6")]
		public override void FromBytes(byte[] buf)
		{
		}
	}
	[Token(Token = "0x200048B")]
	internal class FloatBytable : Bytable
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] m_buffer;

		[Token(Token = "0x170004B0")]
		public override int Length
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x101B524", Offset = "0x101B524", VA = "0x101B524", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x101B4F8", Offset = "0x101B4F8", VA = "0x101B4F8")]
		public FloatBytable(float[] buffer)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x101B540", Offset = "0x101B540", VA = "0x101B540", Slot = "7")]
		public override Array GetArray()
		{
			return null;
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x101B548", Offset = "0x101B548", VA = "0x101B548", Slot = "5")]
		public override void ToBytes(ref byte[] buf)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x101B67C", Offset = "0x101B67C", VA = "0x101B67C", Slot = "6")]
		public override void FromBytes(byte[] buf)
		{
		}
	}
	[Token(Token = "0x200048C")]
	internal class FfmpegPipe
	{
		[Token(Token = "0x4001E1F")]
		public const string kFfmpegDir = "Support/ThirdParty/ffmpeg";

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Process m_encoderProc;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Thread m_dataWriterThread;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread m_dataReaderThread;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thread m_logReaderThread;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_shouldExit;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_shouldPause;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StreamReader m_stderr;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BinaryWriter m_dataWriter;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BinaryReader m_dataReader;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_frameCount;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ManualResetEvent m_ready;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ManualResetEvent m_sleeper;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AutoResetEvent m_frameReady;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ManualResetEvent m_frameWritten;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Bytable m_frame;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RingBuffer<Bytable> m_framesOut;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_shouldBlock;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_height;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_width;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string m_outputFile;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB339E8", Offset = "0xB339E8")]
		private Action<Bytable> <ReleaseFrame>k__BackingField;

		[Token(Token = "0x170004B1")]
		private int Height
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x1012060", Offset = "0x1012060", VA = "0x1012060")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B2")]
		private int Width
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x1012068", Offset = "0x1012068", VA = "0x1012068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B3")]
		public int FrameCount
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x1012070", Offset = "0x1012070", VA = "0x1012070")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B4")]
		public string OutputFile
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x1012078", Offset = "0x1012078", VA = "0x1012078")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1012080", Offset = "0x1012080", VA = "0x1012080")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public bool IsReadyForInput
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x1012088", Offset = "0x1012088", VA = "0x1012088")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public bool DidExit
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x10120BC", Offset = "0x10120BC", VA = "0x10120BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B7")]
		public Action<Bytable> ReleaseFrame
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x10120EC", Offset = "0x10120EC", VA = "0x10120EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EBAC", Offset = "0xB3EBAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x10120F4", Offset = "0x10120F4", VA = "0x10120F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EBBC", Offset = "0xB3EBBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x1012008", Offset = "0x1012008", VA = "0x1012008")]
		public static string GetFfmpegExe()
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x10120FC", Offset = "0x10120FC", VA = "0x10120FC")]
		public FfmpegPipe()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x10121D8", Offset = "0x10121D8", VA = "0x10121D8")]
		public bool Start(string source, string outputFile, int width, int height, float sampleRate, bool blocking)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1012CC0", Offset = "0x1012CC0", VA = "0x1012CC0")]
		public static string GetVideoEncoder()
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x101257C", Offset = "0x101257C", VA = "0x101257C")]
		private bool LaunchEncoder(string inputFile, string outputFile, int width, int height, float sampleRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1012D50", Offset = "0x1012D50", VA = "0x1012D50")]
		public static bool Mux(string audioFile, string videoFile, string outputFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x101304C", Offset = "0x101304C", VA = "0x101304C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x10130C8", Offset = "0x10130C8", VA = "0x10130C8")]
		public bool WaitForEncoderExit(int milliseconds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1013134", Offset = "0x1013134", VA = "0x1013134")]
		public Bytable QueueFrame(Bytable buffer)
		{
			return null;
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1013198", Offset = "0x1013198", VA = "0x1013198")]
		public void GetFrame(ref Color32Bytable buffer)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1013280", Offset = "0x1013280", VA = "0x1013280")]
		private void ReadFfmpegOutput()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x10135BC", Offset = "0x10135BC", VA = "0x10135BC")]
		private void WriteFramesToFfmpeg()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1013900", Offset = "0x1013900", VA = "0x1013900")]
		private void ReadFramesFromFfmpeg()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class IconTextureAtlas : MonoBehaviour
	{
		[Token(Token = "0x4001E35")]
		private const int m_AtlasSize = 2048;

		[Token(Token = "0x4001E36")]
		private const int m_TextureSize = 128;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_BaseMaterial;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_ActiveMaterial;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_ActiveMaterialBorderPercent;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_CatalogPath;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_ExperimentalCatalogPath;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IconTextureAtlasCatalog m_Catalog;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_AtlasMaterial_Base;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_AtlasMaterial_Active;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_AtlasMaterial_Base_NoFocus;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_AtlasMaterial_Active_NoFocus;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, Rect> m_TextureDictionary;

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x13CA744", Offset = "0x13CA744", VA = "0x13CA744")]
		public void Init()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x13CAD5C", Offset = "0x13CAD5C", VA = "0x13CAD5C")]
		public Material GetAppropriateMaterial(bool activated, bool focus)
		{
			return null;
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x13CA748", Offset = "0x13CA748", VA = "0x13CA748")]
		private void AtlasIconTextures()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x13CADDC", Offset = "0x13CADDC", VA = "0x13CADDC")]
		public bool GetTextureUVs(Texture2D texture, out Rect uvs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x13CAEF8", Offset = "0x13CAEF8", VA = "0x13CAEF8")]
		public static List<Vector2> ScaleUvsWithAtlasRect(Rect r, List<Vector2> inUvs)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x13CB0C4", Offset = "0x13CB0C4", VA = "0x13CB0C4")]
		public IconTextureAtlas()
		{
		}
	}
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB29B8C", Offset = "0xB29B8C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB29B8C", Offset = "0xB29B8C")]
	public class IconTextureAtlasCatalog : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200048F")]
		public class TextureEntry
		{
			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D m_texture;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rect m_rect;

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xFF7C50", Offset = "0xFF7C50", VA = "0xFF7C50")]
			public TextureEntry()
			{
			}
		}

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TiltBrushManifest[] m_brushManifests;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D m_Atlas;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_AtlasSize;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB33A78", Offset = "0xB33A78")]
		[SerializeField]
		private int m_VerifyTextureSize;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_paths;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextureEntry[] m_entries;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_padding;

		[Token(Token = "0x170004B8")]
		public Texture2D Atlas
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x13CB0D8", Offset = "0x13CB0D8", VA = "0x13CB0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		public int Padding
		{
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0x13CB0E0", Offset = "0x13CB0E0", VA = "0x13CB0E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004BA")]
		public int Length
		{
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x13CADC0", Offset = "0x13CADC0", VA = "0x13CADC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004BB")]
		public TextureEntry Item
		{
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x13CAD84", Offset = "0x13CAD84", VA = "0x13CAD84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x13CB0E8", Offset = "0x13CB0E8", VA = "0x13CB0E8")]
		public IconTextureAtlasCatalog()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class GpuIntersector : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		public delegate bool ResultReader();

		[Token(Token = "0x2000492")]
		public struct BatchResult
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrabWidget widget;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BatchSubset subset;
		}

		[Token(Token = "0x2000493")]
		public struct ModelResult
		{
			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrabWidget widget;
		}

		[Token(Token = "0x2000494")]
		public abstract class FutureResult
		{
			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			protected RenderTexture m_ResultTex;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected int m_ResultCount;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			protected byte m_MaxResults;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected int m_StartFrame;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static int sm_CopyKernel;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static uint[] sm_ReadbackBufferStorage;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static ComputeBuffer sm_ReadbackBuffer;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static ComputeShader sm_ComputeCopyShader;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static HashSet<object> sm_pool;

			[Token(Token = "0x170004BC")]
			public bool IsReady
			{
				[Token(Token = "0x6001F12")]
				[Address(RVA = "0xFF5DB8", Offset = "0xFF5DB8", VA = "0xFF5DB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004BD")]
			public int StartFrame
			{
				[Token(Token = "0x6001F13")]
				[Address(RVA = "0xFF6840", Offset = "0xFF6840", VA = "0xFF6840")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xFF63A4", Offset = "0xFF63A4", VA = "0xFF63A4")]
			protected static HashSet<object> AllocateHashSet()
			{
				return null;
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xFF6498", Offset = "0xFF6498", VA = "0xFF6498")]
			protected static void DeallocateHashSet(HashSet<object> obj)
			{
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xFF5C40", Offset = "0xFF5C40", VA = "0xFF5C40")]
			public FutureResult(RenderTexture texture, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xFF6848", Offset = "0xFF6848", VA = "0xFF6848")]
			public bool HasAnyIntersections()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xFF68B0", Offset = "0xFF68B0", VA = "0xFF68B0")]
			private bool ReadResultsCallback()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xFF62AC", Offset = "0xFF62AC", VA = "0xFF62AC")]
			protected uint[] GetTextureColors()
			{
				return null;
			}

			[Token(Token = "0x6001F17")]
			protected abstract void OnReadResults();
		}

		[Token(Token = "0x2000495")]
		public class FutureBatchResult : FutureResult
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<BatchResult> m_ResultList;

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xFF5BAC", Offset = "0xFF5BAC", VA = "0xFF5BAC")]
			public FutureBatchResult(RenderTexture texture, List<BatchResult> results, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xFF5D28", Offset = "0xFF5D28", VA = "0xFF5D28")]
			public List<BatchResult> GetResults()
			{
				return null;
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xFF5DC8", Offset = "0xFF5DC8", VA = "0xFF5DC8", Slot = "4")]
			protected override void OnReadResults()
			{
			}
		}

		[Token(Token = "0x2000496")]
		public class FutureModelResult : FutureResult
		{
			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ModelResult> m_ResultList;

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xFF6528", Offset = "0xFF6528", VA = "0xFF6528")]
			public FutureModelResult(RenderTexture texture, List<ModelResult> results, byte maxResults, out ResultReader resultReader)
			{
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xFF65BC", Offset = "0xFF65BC", VA = "0xFF65BC")]
			public List<ModelResult> GetResults()
			{
				return null;
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xFF65FC", Offset = "0xFF65FC", VA = "0xFF65FC", Slot = "4")]
			protected override void OnReadResults()
			{
			}
		}

		[Token(Token = "0x4001E4B")]
		private const int kTexSize = 16;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ushort sm_BatchIdCounter;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader m_IntersectionShader;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader m_DownsampleShader;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ComputeShader m_ComputeCopyShader;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_DownsampleMat;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture m_HighResTex;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_IntersectionCamera;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ResultReader> m_activeResults;

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xFA3C90", Offset = "0xFA3C90", VA = "0xFA3C90")]
		public static ushort GetNextBatchId()
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xFA3CFC", Offset = "0xFA3CFC", VA = "0xFA3CFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xFA4024", Offset = "0xFA4024", VA = "0xFA4024")]
		private void OnGuaranteedAppQuit()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xFA4094", Offset = "0xFA4094", VA = "0xFA4094")]
		private void ReadResultsDispatchCallback()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xFA4164", Offset = "0xFA4164", VA = "0xFA4164")]
		public FutureBatchResult RequestBatchIntersection(Vector3 vDetectionCenter_GS, float radius_GS, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xFA44CC", Offset = "0xFA44CC", VA = "0xFA44CC")]
		public FutureBatchResult RequestBatchIntersections(Vector3 vDetectionCenter_GS, float radius_GS, List<BatchResult> resultsOut, byte maxResults, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xFA45DC", Offset = "0xFA45DC", VA = "0xFA45DC")]
		public FutureModelResult RequestModelIntersections(Vector3 vDetectionCenter_GS, float radius_GS, List<ModelResult> resultsOut, byte maxResults, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xFA46EC", Offset = "0xFA46EC", VA = "0xFA46EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xFA47E0", Offset = "0xFA47E0", VA = "0xFA47E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xFA4264", Offset = "0xFA4264", VA = "0xFA4264")]
		private RenderTexture RenderIntersection(Vector3 vDetectionCenter_GS, float radius_GS, int renderCullingMask)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xFA47FC", Offset = "0xFA47FC", VA = "0xFA47FC")]
		public GpuIntersector()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class OculusCameraFade : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29C04", Offset = "0xB29C04")]
		private sealed class <FadeColor>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusCameraFade <>4__this;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeIn;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <finalFadeColor>5__2;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color <initialFadeColor>5__3;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timer>5__4;

			[Token(Token = "0x170004BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F27")]
				[Address(RVA = "0x10E6314", Offset = "0x10E6314", VA = "0x10E6314", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F29")]
				[Address(RVA = "0x10E635C", Offset = "0x10E635C", VA = "0x10E635C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x10E6184", Offset = "0x10E6184", VA = "0x10E6184")]
			[DebuggerHidden]
			public <FadeColor>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x10E61B0", Offset = "0x10E61B0", VA = "0x10E61B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x10E61B4", Offset = "0x10E61B4", VA = "0x10E61B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x10E631C", Offset = "0x10E631C", VA = "0x10E631C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OculusCameraFade m_Instance;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_FadeMaterial;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_IsFading;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xFD05C8", Offset = "0xFD05C8", VA = "0xFD05C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xFD0678", Offset = "0xFD0678", VA = "0xFD0678")]
		public void Fade(bool fadeIn, float fadeTime)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xFD06B4", Offset = "0xFD06B4", VA = "0xFD06B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3EBCC", Offset = "0xB3EBCC")]
		private IEnumerator FadeColor(bool fadeIn, float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xFD0744", Offset = "0xFD0744", VA = "0xFD0744")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xFD0830", Offset = "0xFD0830", VA = "0xFD0830")]
		public OculusCameraFade()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class OdsDriver : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fps;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HybridCamera m_odsCamera;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_framesToCapture;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_turnTableRotation;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_outputFolder;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_outputBasename;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_frameTick;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stopwatch m_frameTimer;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch m_renderTimer;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string m_videoPath;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_imagesPath;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B64", Offset = "0xB33B64")]
		private string <CameraPath>k__BackingField;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33B74", Offset = "0xB33B74")]
		private bool <IsRendering>k__BackingField;

		[Token(Token = "0x170004C0")]
		private bool HaveCameraPath
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xFD5F7C", Offset = "0xFD5F7C", VA = "0xFD5F7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C1")]
		public HybridCamera OdsCamera
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xFD5F84", Offset = "0xFD5F84", VA = "0xFD5F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		public int FramesToCapture
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xFD5F8C", Offset = "0xFD5F8C", VA = "0xFD5F8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xFD5F94", Offset = "0xFD5F94", VA = "0xFD5F94")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public float TurnTableRotation
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xFD6000", Offset = "0xFD6000", VA = "0xFD6000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xFD6008", Offset = "0xFD6008", VA = "0xFD6008")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public string CameraPath
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xFD6010", Offset = "0xFD6010", VA = "0xFD6010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EC7C", Offset = "0xB3EC7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xFD6018", Offset = "0xFD6018", VA = "0xFD6018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EC8C", Offset = "0xB3EC8C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public string OutputFolder
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xFD6020", Offset = "0xFD6020", VA = "0xFD6020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xFD6028", Offset = "0xFD6028", VA = "0xFD6028")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public string OutputBasename
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xFD6030", Offset = "0xFD6030", VA = "0xFD6030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xFD6038", Offset = "0xFD6038", VA = "0xFD6038")]
			set
			{
			}
		}

		[Token(Token = "0x170004C7")]
		public bool IsRendering
		{
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xFD6040", Offset = "0xFD6040", VA = "0xFD6040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EC9C", Offset = "0xB3EC9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xFD6048", Offset = "0xFD6048", VA = "0xFD6048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECAC", Offset = "0xB3ECAC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xFD6054", Offset = "0xFD6054", VA = "0xFD6054")]
		public void BeginRender()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xFD668C", Offset = "0xFD668C", VA = "0xFD668C")]
		public static TrTransform GetScenePose(float progress)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xFD68EC", Offset = "0xFD68EC", VA = "0xFD68EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xFD7144", Offset = "0xFD7144", VA = "0xFD7144")]
		public OdsDriver()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class PostEffectsToggle : MonoBehaviour
	{
		[Token(Token = "0x6001F3C")]
		private void Toggle<T>(bool enabled)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x11F1144", Offset = "0x11F1144", VA = "0x11F1144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x11F11C8", Offset = "0x11F11C8", VA = "0x11F11C8")]
		private void OnPostEffectsChanged()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x11F1298", Offset = "0x11F1298", VA = "0x11F1298")]
		public PostEffectsToggle()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB29C14", Offset = "0xB29C14")]
	public class RenderWrapper : MonoBehaviour
	{
		[Token(Token = "0x200049C")]
		private struct Feature
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour behaviour;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool defaultState;
		}

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material m_StencilToMaskMaterial;

		[NonSerialized]
		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RenderTexture m_MaskTarget;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_readbackTextureFrame;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camCopy;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_cameraCullingMask;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SelectionEffect m_selectionEffect;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture m_hdrTarget;

		[Token(Token = "0x4001E83")]
		public const float SSAA_MIN = 0.125f;

		[Token(Token = "0x4001E84")]
		public const float SSAA_MAX = 4f;

		[Token(Token = "0x4001E85")]
		public const float SSAA_QUANTUM = 8f;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_superSampling;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_configuredFor;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isRecording;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isRecorder;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_blitWithScale;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Feature> m_features;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LightShadows[] m_shadows;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<RenderTextureFormat, RenderTextureFormat> m_GetCreatedFormatMemo;

		[Token(Token = "0x170004C8")]
		public float SuperSampling
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xFB5B44", Offset = "0xFB5B44", VA = "0xFB5B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xFB5B4C", Offset = "0xFB5B4C", VA = "0xFB5B4C")]
			set
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event Action ReadBackTextures
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xFB5A04", Offset = "0xFB5A04", VA = "0xFB5A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECBC", Offset = "0xB3ECBC")]
			add
			{
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xFB5AA4", Offset = "0xFB5AA4", VA = "0xFB5AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECCC", Offset = "0xB3ECCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F44")]
		private void AddFeature<T>()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xFB5C6C", Offset = "0xFB5C6C", VA = "0xFB5C6C")]
		private void ToggleFeatures(bool enable)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xFB5D64", Offset = "0xFB5D64", VA = "0xFB5D64")]
		private RenderTextureFormat GetTargetFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xFB5DD8", Offset = "0xFB5DD8", VA = "0xFB5DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xFB5EBC", Offset = "0xFB5EBC", VA = "0xFB5EBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xFB61A4", Offset = "0xFB61A4", VA = "0xFB61A4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xFB626C", Offset = "0xFB626C", VA = "0xFB626C")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xFB65D0", Offset = "0xFB65D0", VA = "0xFB65D0")]
		private RenderTextureFormat GetCreatedFormat(RenderTextureFormat fmt)
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xFB672C", Offset = "0xFB672C", VA = "0xFB672C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001F4D")]
		private bool ExistsAndIsEnabled<T>() where T : MonoBehaviour
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xFB67F0", Offset = "0xFB67F0", VA = "0xFB67F0")]
		private bool HasHdrDecodePass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xFB683C", Offset = "0xFB683C", VA = "0xFB683C")]
		public RenderWrapper()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class SelectionEffect : MonoBehaviour
	{
		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_GrabHighlightMaskMaterial;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_WidgetSelectionPostEffect;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_StrokeSelectionPostEffect;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_BlurWidth;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB33BD4", Offset = "0xB33BD4")]
		[SerializeField]
		private float m_SelectionSaturation;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SelectionValue;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_SelectionHueSpeed;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_SelectionHueStereoOffset;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB33C50", Offset = "0xB33C50")]
		private float m_NoiseSparkleSpeed;

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xE7129C", Offset = "0xE7129C", VA = "0xE7129C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xE713B4", Offset = "0xE713B4", VA = "0xE713B4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xE713B8", Offset = "0xE713B8", VA = "0xE713B8")]
		private void OnPosesApplied()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xE71618", Offset = "0xE71618", VA = "0xE71618")]
		public void RegisterMesh(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xE7161C", Offset = "0xE7161C", VA = "0xE7161C")]
		public void UnregisterMesh(MeshFilter meshFilter)
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xE71620", Offset = "0xE71620", VA = "0xE71620")]
		public bool RenderHighlight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xE71660", Offset = "0xE71660", VA = "0xE71660")]
		public void HighlightForGrab(bool grabAvailable)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xE71664", Offset = "0xE71664", VA = "0xE71664")]
		public SelectionEffect()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class ShaderWarmup : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		private class MaterialComparer : IEqualityComparer<Material>
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xF1A6DC", Offset = "0xF1A6DC", VA = "0xF1A6DC", Slot = "4")]
			public bool Equals(Material x, Material y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0xF1A808", Offset = "0xF1A808", VA = "0xF1A808", Slot = "5")]
			public int GetHashCode(Material material)
			{
				return default(int);
			}

			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xF1A95C", Offset = "0xF1A95C", VA = "0xF1A95C")]
			public MaterialComparer()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29C74", Offset = "0xB29C74")]
		private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderWarmup <>4__this;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F65")]
				[Address(RVA = "0x10F7380", Offset = "0x10F7380", VA = "0x10F7380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F67")]
				[Address(RVA = "0x10F73C8", Offset = "0x10F73C8", VA = "0x10F73C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x10F71D8", Offset = "0x10F71D8", VA = "0x10F71D8")]
			[DebuggerHidden]
			public <Start>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x10F7204", Offset = "0x10F7204", VA = "0x10F7204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x10F7208", Offset = "0x10F7208", VA = "0x10F7208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x10F7388", Offset = "0x10F7388", VA = "0x10F7388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29C84", Offset = "0xB29C84")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BrushDescriptor, Material> <>9__13_0;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Renderer, IEnumerable<Material>> <>9__13_1;

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x10F719C", Offset = "0x10F719C", VA = "0x10F719C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x10F71A4", Offset = "0x10F71A4", VA = "0x10F71A4")]
			internal Material <WarmupShaders>b__13_0(BrushDescriptor x)
			{
				return null;
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x10F71BC", Offset = "0x10F71BC", VA = "0x10F71BC")]
			internal IEnumerable<Material> <WarmupShaders>b__13_1(Renderer x)
			{
				return null;
			}
		}

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29C94", Offset = "0xB29C94")]
		private sealed class <WarmupShaders>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderWarmup <>4__this;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Material[] <distinctShaders>5__2;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <size>5__3;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <offset>5__4;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <index>5__5;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material[] <>7__wrap5;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <>7__wrap6;

			[Token(Token = "0x170004CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0x10F7B34", Offset = "0x10F7B34", VA = "0x10F7B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0x10F7B7C", Offset = "0x10F7B7C", VA = "0x10F7B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x10F73D0", Offset = "0x10F73D0", VA = "0x10F73D0")]
			[DebuggerHidden]
			public <WarmupShaders>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x10F73FC", Offset = "0x10F73FC", VA = "0x10F73FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x10F7400", Offset = "0x10F7400", VA = "0x10F7400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x10F7B3C", Offset = "0x10F7B3C", VA = "0x10F7B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_FramesBeforeWarmup;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_FramesAfterWarmup;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_ShadersPerFrame;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_RootObject;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CDC", Offset = "0xB33CDC")]
		private static ShaderWarmup <Instance>k__BackingField;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33CEC", Offset = "0xB33CEC")]
		private float <Progress>k__BackingField;

		[Token(Token = "0x170004C9")]
		public static ShaderWarmup Instance
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xE7CBB8", Offset = "0xE7CBB8", VA = "0xE7CBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECDC", Offset = "0xB3ECDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xE7CC04", Offset = "0xE7CC04", VA = "0xE7CC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECEC", Offset = "0xB3ECEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public float Progress
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xE7CC54", Offset = "0xE7CC54", VA = "0xE7CC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ECFC", Offset = "0xB3ECFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xE7CC5C", Offset = "0xE7CC5C", VA = "0xE7CC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3ED0C", Offset = "0xB3ED0C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xE7CC64", Offset = "0xE7CC64", VA = "0xE7CC64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3ED1C", Offset = "0xB3ED1C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xE7CCD0", Offset = "0xE7CCD0", VA = "0xE7CCD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3ED7C", Offset = "0xB3ED7C")]
		private IEnumerator WarmupShaders()
		{
			return null;
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xE7CD3C", Offset = "0xE7CD3C", VA = "0xE7CD3C")]
		public ShaderWarmup()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class UsdPathSerializer : MonoBehaviour
	{
		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x124A27C", Offset = "0x124A27C", VA = "0x124A27C")]
		public UsdPathSerializer()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class VideoRecorder : MonoBehaviour
	{
		[Token(Token = "0x20004A5")]
		private class StereoBuffer
		{
			[Token(Token = "0x4001ED1")]
			private const int kSizeInSeconds = 4;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private decimal m_FPS;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] m_scratch;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float[] m_stereo;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int m_frameSamples;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int m_sampleRate;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RingBuffer<float> m_leftChannel;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private RingBuffer<float> m_rightChannel;

			[Token(Token = "0x6001F98")]
			[Address(RVA = "0xF2ABB0", Offset = "0xF2ABB0", VA = "0xF2ABB0")]
			public StereoBuffer()
			{
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xF2AC10", Offset = "0xF2AC10", VA = "0xF2AC10")]
			public void SetSampleRates(decimal fps, int hz)
			{
			}

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xF2AE08", Offset = "0xF2AE08", VA = "0xF2AE08")]
			public bool IsFrameReady(int frame)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xF2AF38", Offset = "0xF2AF38", VA = "0xF2AF38")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xF2AFA0", Offset = "0xF2AFA0", VA = "0xF2AFA0")]
			public void Add(float left, float right)
			{
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xF2AEB0", Offset = "0xF2AEB0", VA = "0xF2AEB0")]
			private int GetCurFrame()
			{
				return default(int);
			}

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xF2B0A8", Offset = "0xF2B0A8", VA = "0xF2B0A8")]
			public FloatBytable PopFrame(int frame, int realTimeFrame, int videoFrame)
			{
				return null;
			}
		}

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CA4", Offset = "0xB29CA4")]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VideoRecorder <>4__this;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FfmpegPipe videoPipe;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FfmpegPipe audioPipe;

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xF2AAF0", Offset = "0xF2AAF0", VA = "0xF2AAF0")]
			public <>c__DisplayClass67_0()
			{
			}
		}

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CB4", Offset = "0xB29CB4")]
		private sealed class <>c__DisplayClass67_1
		{
			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Queue<Color32[]> buffer;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass67_0 CS$<>8__locals1;

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xF2AAF8", Offset = "0xF2AAF8", VA = "0xF2AAF8")]
			public <>c__DisplayClass67_1()
			{
			}

			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xF2AB00", Offset = "0xF2AB00", VA = "0xF2AB00")]
			internal void <StopCapture>b__0()
			{
			}
		}

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CC4", Offset = "0xB29CC4")]
		private sealed class <>c__DisplayClass67_2
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filePath;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass67_0 CS$<>8__locals2;

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xF2AB38", Offset = "0xF2AB38", VA = "0xF2AB38")]
			public <>c__DisplayClass67_2()
			{
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xF2AB40", Offset = "0xF2AB40", VA = "0xF2AB40")]
			internal void <StopCapture>b__1()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CD4", Offset = "0xB29CD4")]
		private sealed class <>c__DisplayClass67_3
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string filePath;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass67_0 CS$<>8__locals3;

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xF2AB74", Offset = "0xF2AB74", VA = "0xF2AB74")]
			public <>c__DisplayClass67_3()
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xF2AB7C", Offset = "0xF2AB7C", VA = "0xF2AB7C")]
			internal void <StopCapture>b__2()
			{
			}
		}

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_filePath;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_width;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_height;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isPlayingBack;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isCapturing;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_isSaving;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool m_isCapturingAudio;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_frameBuffered;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool m_texBuffered;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool m_isPortrait;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D m_playbackTexture;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ComputeBuffer m_captureBuffer;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color32[] m_currentFrameBuffer;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_blitToCompute;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch m_frameTimer;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FfmpegPipe m_ffmpegVideoReader;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FfmpegPipe m_ffmpegVideo;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FfmpegPipe m_ffmpegAudio;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private decimal m_FPS;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_lastVideoFrame;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_nextAudioFrame;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_playbackFrameCount;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_playbackCurFrame;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_videoFrameCount;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_playbackLoops;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_playbackNumLoops;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_playbackRequested;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StereoBuffer m_audioBuffer;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_audioFramesRequired;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_audioFrameCount;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Queue<Color32[]> m_videoFramePool;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<Color32[]> m_bufferedVideoFrames;

		[Token(Token = "0x4001ECF")]
		private const long kMaxQueueSizeBytes = 8589934592L;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_forcedCaptureFramerate;

		[Token(Token = "0x170004CF")]
		public decimal FPS
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x124C17C", Offset = "0x124C17C", VA = "0x124C17C")]
			get
			{
				return default(decimal);
			}
		}

		[Token(Token = "0x170004D0")]
		public string FilePath
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x124C188", Offset = "0x124C188", VA = "0x124C188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D1")]
		public int PlaybackNumLoops
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x124C190", Offset = "0x124C190", VA = "0x124C190")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x124C198", Offset = "0x124C198", VA = "0x124C198")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public bool IsPlayingBack
		{
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x124C1A0", Offset = "0x124C1A0", VA = "0x124C1A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D3")]
		public bool IsSaving
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x124C1A8", Offset = "0x124C1A8", VA = "0x124C1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D4")]
		public bool IsCapturing
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x124C1C8", Offset = "0x124C1C8", VA = "0x124C1C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D5")]
		public bool IsCapturingAudio
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x124C1D0", Offset = "0x124C1D0", VA = "0x124C1D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D6")]
		public bool IsPortrait
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x124C1D8", Offset = "0x124C1D8", VA = "0x124C1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x124C1E0", Offset = "0x124C1E0", VA = "0x124C1E0")]
			set
			{
			}
		}

		[Token(Token = "0x170004D7")]
		public int FrameCount
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x124C1EC", Offset = "0x124C1EC", VA = "0x124C1EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004D8")]
		public int VideoDelayFrameCount
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x124C1F4", Offset = "0x124C1F4", VA = "0x124C1F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004D9")]
		public int RealTimeFrameCount
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x124C21C", Offset = "0x124C21C", VA = "0x124C21C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004DA")]
		public int PlaybackFrameCount
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x124C314", Offset = "0x124C314", VA = "0x124C314")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004DB")]
		public float PlaybackPercent
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x124C31C", Offset = "0x124C31C", VA = "0x124C31C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x124C340", Offset = "0x124C340", VA = "0x124C340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x124C3E8", Offset = "0x124C3E8", VA = "0x124C3E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x124C534", Offset = "0x124C534", VA = "0x124C534")]
		private void OnGuaranteedAppQuit()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x124CC28", Offset = "0x124CC28", VA = "0x124CC28")]
		public bool StartCapture(string filePath, int audioSampleRate, bool captureAudio, bool blocking, float fps)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x124C574", Offset = "0x124C574", VA = "0x124C574")]
		public void StopCapture(bool save)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x124D298", Offset = "0x124D298", VA = "0x124D298")]
		private void DrainStop(string filePath, Queue<Color32[]> buffer, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x124D7C4", Offset = "0x124D7C4", VA = "0x124D7C4")]
		private void RemoveFile(string filePath, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x124D5F4", Offset = "0x124D5F4", VA = "0x124D5F4")]
		private void JoinFiles(string filePath, FfmpegPipe videoPipe, FfmpegPipe audioPipe)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x124D938", Offset = "0x124D938", VA = "0x124D938")]
		public void StopPlayback()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x124D990", Offset = "0x124D990", VA = "0x124D990")]
		private void StartPlaybackReader()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x124DABC", Offset = "0x124DABC", VA = "0x124DABC")]
		public bool ShouldCapture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x124DAFC", Offset = "0x124DAFC", VA = "0x124DAFC")]
		public void ProcessAudio(float left, float right)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x124DC00", Offset = "0x124DC00", VA = "0x124DC00")]
		private void CaptureAudio()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x124DDC8", Offset = "0x124DDC8", VA = "0x124DDC8")]
		private bool Capture(RenderTexture source, RenderTexture dest)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x124DE9C", Offset = "0x124DE9C", VA = "0x124DE9C")]
		public void RequestPlayback()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x124D280", Offset = "0x124D280", VA = "0x124D280")]
		public void SetCaptureFramerate(int framerate)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x124DEA8", Offset = "0x124DEA8", VA = "0x124DEA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x124DEEC", Offset = "0x124DEEC", VA = "0x124DEEC")]
		private void PostCapture()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x124E1A8", Offset = "0x124E1A8", VA = "0x124E1A8")]
		public void ReadbackCapture()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x124E338", Offset = "0x124E338", VA = "0x124E338")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x124E644", Offset = "0x124E644", VA = "0x124E644")]
		private void ReturnFrameToPool(Bytable array)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x124E7A8", Offset = "0x124E7A8", VA = "0x124E7A8")]
		public VideoRecorder()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public static class VideoRecorderUtils
	{
		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float m_VideoCaptureResolutionScale;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_DebugVideoCaptureQualityLevel;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int m_PreCaptureQualityLevel;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float m_SuperSampling;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float m_PreCaptureSuperSampling;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static VideoRecorder m_ActiveVideoRecording;

		[Token(Token = "0x170004DC")]
		public static VideoRecorder ActiveVideoRecording
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xEF997C", Offset = "0xEF997C", VA = "0xEF997C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DD")]
		public static int NumFramesInUsdSerializer
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xEF99E0", Offset = "0xEF99E0", VA = "0xEF99E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004DE")]
		public static bool UsdPathSerializerIsBlocking
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xEF99E8", Offset = "0xEF99E8", VA = "0xEF99E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DF")]
		public static bool UsdPathIsFinished
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xEF99F0", Offset = "0xEF99F0", VA = "0xEF99F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xEF99F8", Offset = "0xEF99F8", VA = "0xEF99F8")]
		public static Transform AdvanceAndDeserializeUsd()
		{
			return null;
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xEF9A00", Offset = "0xEF9A00", VA = "0xEF9A00")]
		public static void SerializerNewUsdFrame()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xEF9A04", Offset = "0xEF9A04", VA = "0xEF9A04")]
		public static bool StartVideoCapture(string filePath, VideoRecorder recorder, UsdPathSerializer usdPathSerializer, bool offlineRender = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xEF9E40", Offset = "0xEF9E40", VA = "0xEF9E40")]
		public static void StopVideoCapture(bool saveCapture)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xEF9FC0", Offset = "0xEF9FC0", VA = "0xEF9FC0")]
		private static void CreateOfflineRenderBatchFile(string sketchFile, string usdaFile)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class RotationCursorScript : MonoBehaviour
	{
		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_Mesh;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_ToCursorLine;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_CrossSectionLine;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_BaseToCursorScale;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_BaseCrossSectionScale;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_BaseToCursorColor;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_BaseCrossSectionColor;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_BeginFadePercent;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_EndFadePercent;

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xFB755C", Offset = "0xFB755C", VA = "0xFB755C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xFB7670", Offset = "0xFB7670", VA = "0xFB7670")]
		public void PositionCursorLines(Vector3 vSurfaceCenter, Vector3 vSurfaceNormal, float fOffsetAngle, float fSurfaceWidth)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xFB7A08", Offset = "0xFB7A08", VA = "0xFB7A08")]
		public void ClearCursorLines(Vector3 vSurfacePos)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xFB7AD8", Offset = "0xFB7AD8", VA = "0xFB7AD8")]
		public RotationCursorScript()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class RotationIconScript : MonoBehaviour
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture m_Standard;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture m_AngleLocked;

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xFB7AE0", Offset = "0xFB7AE0", VA = "0xFB7AE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xFB7B4C", Offset = "0xFB7B4C", VA = "0xFB7B4C")]
		public void SetLocked(bool bLocked)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xFB7BD4", Offset = "0xFB7BD4", VA = "0xFB7BD4")]
		public RotationIconScript()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public struct DiskSceneFileInfo : SceneFileInfo
	{
		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string kInvalidHumanName;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_fullpath;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_embedded;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_humanName;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_AssetId;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_SourceId;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_readOnly;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime? m_creationTime;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TiltFile m_TiltFile;

		[Token(Token = "0x170004E0")]
		public FileInfoType InfoType
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xEC8738", Offset = "0xEC8738", VA = "0xEC8738", Slot = "4")]
			get
			{
				return default(FileInfoType);
			}
		}

		[Token(Token = "0x170004E1")]
		public string HumanName
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0xEC8740", Offset = "0xEC8740", VA = "0xEC8740", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		public bool HumanNameValid
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xEC8748", Offset = "0xEC8748", VA = "0xEC8748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E3")]
		public bool Valid
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xEC87F8", Offset = "0xEC87F8", VA = "0xEC87F8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E4")]
		public bool Available
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xEC8808", Offset = "0xEC8808", VA = "0xEC8808", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E5")]
		public bool IsPlainFile
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xEC8810", Offset = "0xEC8810", VA = "0xEC8810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E6")]
		public bool ReadOnly
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xEC8834", Offset = "0xEC8834", VA = "0xEC8834", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E7")]
		public string AssetId
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0xEC883C", Offset = "0xEC883C", VA = "0xEC883C", Slot = "11")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0xEC8844", Offset = "0xEC8844", VA = "0xEC8844")]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public string SourceId
		{
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0xEC884C", Offset = "0xEC884C", VA = "0xEC884C", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xEC8854", Offset = "0xEC8854", VA = "0xEC8854")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public string FullPath
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xEC885C", Offset = "0xEC885C", VA = "0xEC885C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		public bool Exists
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0xEC8864", Offset = "0xEC8864", VA = "0xEC8864", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004EB")]
		public DateTime CreationTime
		{
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0xEC8974", Offset = "0xEC8974", VA = "0xEC8974")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170004EC")]
		public bool Embedded
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xEC8B38", Offset = "0xEC8B38", VA = "0xEC8B38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004ED")]
		public int? TriangleCount
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xEC8B40", Offset = "0xEC8B40", VA = "0xEC8B40", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xEC8B48", Offset = "0xEC8B48", VA = "0xEC8B48")]
		public DiskSceneFileInfo(string path, bool embedded = false, bool readOnly = false)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xEC8CB0", Offset = "0xEC8CB0", VA = "0xEC8CB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xEC8D00", Offset = "0xEC8D00", VA = "0xEC8D00")]
		public void UpdateHumanNameFrom(SceneFileInfo sourceSceneFileInfo)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xEC8DBC", Offset = "0xEC8DBC", VA = "0xEC8DBC", Slot = "14")]
		public void Delete()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xEC9374", Offset = "0xEC9374", VA = "0xEC9374", Slot = "16")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xEC9714", Offset = "0xEC9714", VA = "0xEC9714", Slot = "15")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xEC974C", Offset = "0xEC974C", VA = "0xEC974C")]
		public SketchMetadata ReadMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xEC99AC", Offset = "0xEC99AC", VA = "0xEC99AC")]
		public Stream LoadFromStreamingAssets(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AE")]
	public class FileSketchSet : SketchSet
	{
		[Token(Token = "0x20004AF")]
		private class FileSketch : Sketch, IComparable<FileSketch>
		{
			[Token(Token = "0x20004B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CE4", Offset = "0xB29CE4")]
			private sealed class <RequestLoadIconAndMetadataCoroutineThreaded>d__14 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001F0B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001F0C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001F0D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4001F0E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public FileSketch <>4__this;

				[Token(Token = "0x4001F0F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private Future<byte[]> <thumbFuture>5__2;

				[Token(Token = "0x4001F10")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private Future<SketchMetadata> <metadataFuture>5__3;

				[Token(Token = "0x170004F7")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001FFE")]
					[Address(RVA = "0x210CF48", Offset = "0x210CF48", VA = "0x210CF48", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004F8")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002000")]
					[Address(RVA = "0x210CF90", Offset = "0x210CF90", VA = "0x210CF90", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001FFB")]
				[Address(RVA = "0x210CA6C", Offset = "0x210CA6C", VA = "0x210CA6C")]
				[DebuggerHidden]
				public <RequestLoadIconAndMetadataCoroutineThreaded>d__14(int <>1__state)
				{
				}

				[Token(Token = "0x6001FFC")]
				[Address(RVA = "0x210CAA4", Offset = "0x210CAA4", VA = "0x210CAA4", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001FFD")]
				[Address(RVA = "0x210CAA8", Offset = "0x210CAA8", VA = "0x210CAA8", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001FFF")]
				[Address(RVA = "0x210CF50", Offset = "0x210CF50", VA = "0x210CF50", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6002001")]
				[Address(RVA = "0x210CF98", Offset = "0x210CF98", VA = "0x210CF98", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6002002")]
				[Address(RVA = "0x210D040", Offset = "0x210D040", VA = "0x210D040", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private DiskSceneFileInfo m_FileInfo;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Texture2D m_Icon;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private string[] m_Authors;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool m_bMetadataValid;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private IEnumerator m_coroutine;

			[Token(Token = "0x170004F3")]
			public SceneFileInfo SceneFileInfo
			{
				[Token(Token = "0x6001FEF")]
				[Address(RVA = "0x1154BB0", Offset = "0x1154BB0", VA = "0x1154BB0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			public string[] Authors
			{
				[Token(Token = "0x6001FF0")]
				[Address(RVA = "0x1154C18", Offset = "0x1154C18", VA = "0x1154C18", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F5")]
			public Texture2D Icon
			{
				[Token(Token = "0x6001FF1")]
				[Address(RVA = "0x1154C20", Offset = "0x1154C20", VA = "0x1154C20", Slot = "6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F6")]
			public bool IconAndMetadataValid
			{
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0x1154C64", Offset = "0x1154C64", VA = "0x1154C64", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x1154C28", Offset = "0x1154C28", VA = "0x1154C28")]
			public FileSketch(DiskSceneFileInfo info)
			{
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x1154C6C", Offset = "0x1154C6C", VA = "0x1154C6C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3EECC", Offset = "0xB3EECC")]
			private IEnumerable RequestLoadIconAndMetadataCoroutineThreaded()
			{
				return null;
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x1154CD8", Offset = "0x1154CD8", VA = "0x1154CD8")]
			public bool RequestLoadIconAndMetadata()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x1154E48", Offset = "0x1154E48", VA = "0x1154E48")]
			private void AbortPendingRequest()
			{
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x1154F1C", Offset = "0x1154F1C", VA = "0x1154F1C")]
			public void UnloadIcon()
			{
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x1154F98", Offset = "0x1154F98", VA = "0x1154F98", Slot = "8")]
			public int CompareTo(FileSketch rCompareSketch)
			{
				return default(int);
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x1154FEC", Offset = "0x1154FEC", VA = "0x1154FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EF2C", Offset = "0xB3EF2C")]
			private byte[] <RequestLoadIconAndMetadataCoroutineThreaded>b__14_0()
			{
				return null;
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x1155094", Offset = "0x1155094", VA = "0x1155094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EF3C", Offset = "0xB3EF3C")]
			private SketchMetadata <RequestLoadIconAndMetadataCoroutineThreaded>b__14_1()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29CF4", Offset = "0xB29CF4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__20_0;

			[Token(Token = "0x6002004")]
			[Address(RVA = "0x1154AC8", Offset = "0x1154AC8", VA = "0x1154AC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002005")]
			[Address(RVA = "0x1154AD0", Offset = "0x1154AD0", VA = "0x1154AD0")]
			internal void <.ctor>b__20_0()
			{
			}
		}

		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D04", Offset = "0xB29D04")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string path;

			[Token(Token = "0x6002006")]
			[Address(RVA = "0x1154AD4", Offset = "0x1154AD4", VA = "0x1154AD4")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002007")]
			[Address(RVA = "0x1154ADC", Offset = "0x1154ADC", VA = "0x1154ADC")]
			internal bool <RemoveSketchByPath>b__0(FileSketch sketch)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ICON_LOAD_PER_FRAME;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected SketchSetType m_Type;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected bool m_ReadyForAccess;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<FileSketch> m_Sketches;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<int> m_RequestedLoads;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Queue m_ToAdd;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue m_ToDelete;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stack<int> Update__working;

		[Token(Token = "0x170004EE")]
		public SketchSetType Type
		{
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x10143A0", Offset = "0x10143A0", VA = "0x10143A0", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170004EF")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x10143A8", Offset = "0x10143A8", VA = "0x10143A8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F0")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x10143B0", Offset = "0x10143B0", VA = "0x10143B0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F1")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x10143B8", Offset = "0x10143B8", VA = "0x10143B8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F2")]
		public int NumSketches
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x101440C", Offset = "0x101440C", VA = "0x101440C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000079")]
		public event Action OnChanged
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x10161D0", Offset = "0x10161D0", VA = "0x10161D0", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EE7C", Offset = "0xB3EE7C")]
			add
			{
			}
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x1016270", Offset = "0x1016270", VA = "0x1016270", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EE8C", Offset = "0xB3EE8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x1016310", Offset = "0x1016310", VA = "0x1016310", Slot = "23")]
			add
			{
			}
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x1016314", Offset = "0x1016314", VA = "0x1016314", Slot = "24")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x10140E4", Offset = "0x10140E4", VA = "0x10140E4")]
		public static byte[] ReadThumbnail(SceneFileInfo fileinfo)
		{
			return null;
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x1014458", Offset = "0x1014458", VA = "0x1014458")]
		public FileSketchSet()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x1014650", Offset = "0x1014650", VA = "0x1014650", Slot = "10")]
		public bool IsSketchIndexValid(int iIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x10146BC", Offset = "0x10146BC", VA = "0x10146BC", Slot = "12")]
		public bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1014830", Offset = "0x1014830", VA = "0x1014830", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int iSketchIndex)
		{
			return null;
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x101491C", Offset = "0x101491C", VA = "0x101491C", Slot = "14")]
		public string GetSketchName(int iSketchIndex)
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1014A88", Offset = "0x1014A88", VA = "0x1014A88", Slot = "16")]
		public void PrecacheSketchModels(int iSketchIndex)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1014BE4", Offset = "0x1014BE4", VA = "0x1014BE4", Slot = "25")]
		public virtual void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1015014", Offset = "0x1015014", VA = "0x1015014", Slot = "26")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x10158AC", Offset = "0x10158AC", VA = "0x10158AC", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1015A44", Offset = "0x1015A44", VA = "0x1015A44")]
		private void DumpIconTextures()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1015AE8", Offset = "0x1015AE8", VA = "0x1015AE8", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1015BF8", Offset = "0x1015BF8", VA = "0x1015BF8", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1015D08", Offset = "0x1015D08", VA = "0x1015D08", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1015D0C", Offset = "0x1015D0C", VA = "0x1015D0C", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1015260", Offset = "0x1015260", VA = "0x1015260")]
		private void ProcessDirectory(string path)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1016120", Offset = "0x1016120", VA = "0x1016120")]
		protected void AddSketchToSet(DiskSceneFileInfo rInfo)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1015FF0", Offset = "0x1015FF0", VA = "0x1015FF0")]
		private bool RemoveSketchByPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1016368", Offset = "0x1016368", VA = "0x1016368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EE9C", Offset = "0xB3EE9C")]
		private void <Init>b__27_0(object sender, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x10163B0", Offset = "0x10163B0", VA = "0x10163B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EEAC", Offset = "0xB3EEAC")]
		private void <Init>b__27_1(object sender, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x10163F8", Offset = "0x10163F8", VA = "0x10163F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3EEBC", Offset = "0xB3EEBC")]
		private void <Init>b__27_2(object sender, FileSystemEventArgs e)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public static class MetadataUtils
	{
		[Token(Token = "0x20004B4")]
		public struct WidgetMetadata
		{
			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TrTransform xf;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool pinned;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool tinted;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public uint groupId;
		}

		[Serializable]
		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D14", Offset = "0xB29D14")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrTransform, bool> <>9__1_0;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TypedWidgetData<CameraPathWidget>, bool> <>9__5_0;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TypedWidgetData<CameraPathWidget>, CameraPathMetadata> <>9__5_1;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ModelWidget, bool> <>9__6_0;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ModelWidget, Model> <>9__6_1;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<VideoWidget, bool> <>9__7_0;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<StencilWidget, bool> <>9__8_0;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Guides.State, float> <>9__8_2;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Guides, StencilType> <>9__8_1;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ImageWidget, bool> <>9__9_0;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<TiltImages75, string> <>9__9_1;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<string, TiltModels75> <>9__11_0;

			[Token(Token = "0x6002017")]
			[Address(RVA = "0x1000BCC", Offset = "0x1000BCC", VA = "0x1000BCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0x1000BD4", Offset = "0x1000BD4", VA = "0x1000BD4")]
			internal bool <Sanitize>b__1_0(TrTransform xf)
			{
				return default(bool);
			}

			[Token(Token = "0x6002019")]
			[Address(RVA = "0x1000BE0", Offset = "0x1000BE0", VA = "0x1000BE0")]
			internal bool <GetCameraPaths>b__5_0(TypedWidgetData<CameraPathWidget> cpw)
			{
				return default(bool);
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0x1000C30", Offset = "0x1000C30", VA = "0x1000C30")]
			internal CameraPathMetadata <GetCameraPaths>b__5_1(TypedWidgetData<CameraPathWidget> cpw)
			{
				return null;
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0x1000C80", Offset = "0x1000C80", VA = "0x1000C80")]
			internal bool <GetTiltModels>b__6_0(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0x1000CAC", Offset = "0x1000CAC", VA = "0x1000CAC")]
			internal Model <GetTiltModels>b__6_1(ModelWidget w)
			{
				return null;
			}

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x1000CC4", Offset = "0x1000CC4", VA = "0x1000CC4")]
			internal bool <GetTiltVideos>b__7_0(VideoWidget x)
			{
				return default(bool);
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0x1000CF0", Offset = "0x1000CF0", VA = "0x1000CF0")]
			internal bool <GetGuideIndex>b__8_0(StencilWidget s)
			{
				return default(bool);
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x1000D1C", Offset = "0x1000D1C", VA = "0x1000D1C")]
			internal float <GetGuideIndex>b__8_2(Guides.State s)
			{
				return default(float);
			}

			[Token(Token = "0x6002020")]
			[Address(RVA = "0x1000D50", Offset = "0x1000D50", VA = "0x1000D50")]
			internal StencilType <GetGuideIndex>b__8_1(Guides g)
			{
				return default(StencilType);
			}

			[Token(Token = "0x6002021")]
			[Address(RVA = "0x1000D68", Offset = "0x1000D68", VA = "0x1000D68")]
			internal bool <GetTiltImages>b__9_0(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002022")]
			[Address(RVA = "0x1000D94", Offset = "0x1000D94", VA = "0x1000D94")]
			internal string <GetTiltImages>b__9_1(TiltImages75 i)
			{
				return null;
			}

			[Token(Token = "0x6002023")]
			[Address(RVA = "0x1000DAC", Offset = "0x1000DAC", VA = "0x1000DAC")]
			internal TiltModels75 <Upgrade_Set_ModelIndexInSet>b__11_0(string s)
			{
				return null;
			}
		}

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D24", Offset = "0xB29D24")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GroupIdMapping groupIdMapping;

			[Token(Token = "0x6002024")]
			[Address(RVA = "0x1000E1C", Offset = "0x1000E1C", VA = "0x1000E1C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002025")]
			[Address(RVA = "0x1000E24", Offset = "0x1000E24", VA = "0x1000E24")]
			internal TiltVideo <GetTiltVideos>b__1(VideoWidget x)
			{
				return null;
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0x1000E28", Offset = "0x1000E28", VA = "0x1000E28")]
			internal TiltVideo <GetTiltVideos>g__ConvertVideoToTiltVideo|2(VideoWidget widget)
			{
				return null;
			}
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x10E17F8", Offset = "0x10E17F8", VA = "0x10E17F8")]
		public static TrTransform[] Sanitize(TrTransform[] data)
		{
			return null;
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x10E1A7C", Offset = "0x10E1A7C", VA = "0x10E1A7C")]
		private static float ByTranslation(WidgetMetadata meta)
		{
			return default(float);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x10E1AA8", Offset = "0x10E1AA8", VA = "0x10E1AA8")]
		private static float ByTranslation(TrTransform xf)
		{
			return default(float);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x10E1AD4", Offset = "0x10E1AD4", VA = "0x10E1AD4")]
		private static string ByModelLocation(TiltModels75 models)
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x10E1BC0", Offset = "0x10E1BC0", VA = "0x10E1BC0")]
		public static CameraPathMetadata[] GetCameraPaths()
		{
			return null;
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x10E1E20", Offset = "0x10E1E20", VA = "0x10E1E20")]
		public static TiltModels75[] GetTiltModels(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x10E2B38", Offset = "0x10E2B38", VA = "0x10E2B38")]
		public static TiltVideo[] GetTiltVideos(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x10E2D7C", Offset = "0x10E2D7C", VA = "0x10E2D7C")]
		public static Guides[] GetGuideIndex(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x10E35A4", Offset = "0x10E35A4", VA = "0x10E35A4")]
		public static TiltImages75[] GetTiltImages(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x10E3FC4", Offset = "0x10E3FC4", VA = "0x10E3FC4")]
		public static void VerifyMetadataVersion(SketchMetadata data)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x10E401C", Offset = "0x10E401C", VA = "0x10E401C")]
		private static void Upgrade_Set_ModelIndexInSet(SketchMetadata data)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x10E42B0", Offset = "0x10E42B0", VA = "0x10E42B0")]
		private static void UpgradeSchema_0to1(SketchMetadata data)
		{
		}

		[Token(Token = "0x6002014")]
		private static T[] SafeAppend<T>(T[] array, T value)
		{
			return null;
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x10E45C0", Offset = "0x10E45C0", VA = "0x10E45C0")]
		private static void UpgradeSchema_1to2(SketchMetadata data)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class SaveLoadScript : MonoBehaviour
	{
		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D34", Offset = "0xB29D34")]
		private sealed class <IterScenes>d__4 : IEnumerable<DiskSceneFileInfo>, IEnumerable, IEnumerator<DiskSceneFileInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private DiskSceneFileInfo <>2__current;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private DirectoryInfo di;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public DirectoryInfo <>3__di;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private FileInfo[] <>7__wrap1;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <>7__wrap2;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private DirectoryInfo[] <>7__wrap3;

			[Token(Token = "0x17000502")]
			private DiskSceneFileInfo System.Collections.Generic.IEnumerator<TiltBrush.DiskSceneFileInfo>.Current
			{
				[Token(Token = "0x600205F")]
				[Address(RVA = "0x10F47D4", Offset = "0x10F47D4", VA = "0x10F47D4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(DiskSceneFileInfo);
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002061")]
				[Address(RVA = "0x10F4824", Offset = "0x10F4824", VA = "0x10F4824", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x10F458C", Offset = "0x10F458C", VA = "0x10F458C")]
			[DebuggerHidden]
			public <IterScenes>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600205D")]
			[Address(RVA = "0x10F45C4", Offset = "0x10F45C4", VA = "0x10F45C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x10F45C8", Offset = "0x10F45C8", VA = "0x10F45C8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x10F47E4", Offset = "0x10F47E4", VA = "0x10F47E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x10F488C", Offset = "0x10F488C", VA = "0x10F488C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<DiskSceneFileInfo> System.Collections.Generic.IEnumerable<TiltBrush.DiskSceneFileInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002063")]
			[Address(RVA = "0x10F4934", Offset = "0x10F4934", VA = "0x10F4934", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D44", Offset = "0xB29D44")]
		private sealed class <SaveOverwrite>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool tiltasaurusMode;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002067")]
				[Address(RVA = "0x10F4AB4", Offset = "0x10F4AB4", VA = "0x10F4AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002069")]
				[Address(RVA = "0x10F4AFC", Offset = "0x10F4AFC", VA = "0x10F4AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x10F4938", Offset = "0x10F4938", VA = "0x10F4938")]
			[DebuggerHidden]
			public <SaveOverwrite>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x10F4964", Offset = "0x10F4964", VA = "0x10F4964", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x10F4968", Offset = "0x10F4968", VA = "0x10F4968", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x10F4ABC", Offset = "0x10F4ABC", VA = "0x10F4ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D54", Offset = "0xB29D54")]
		private sealed class <>c__DisplayClass81_0
		{
			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneFileInfo fileInfo;

			[Token(Token = "0x600206A")]
			[Address(RVA = "0x10F3BE4", Offset = "0x10F3BE4", VA = "0x10F3BE4")]
			public <>c__DisplayClass81_0()
			{
			}

			[Token(Token = "0x600206B")]
			[Address(RVA = "0x10F3BEC", Offset = "0x10F3BEC", VA = "0x10F3BEC")]
			internal string <ThreadedSave>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D64", Offset = "0xB29D64")]
		private sealed class <ThreadedSave>d__81 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneFileInfo fileInfo;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass81_0 <>8__1;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool bNotify;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Task <cancelTask>5__2;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <newFile>5__3;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Future<string> <writeFuture>5__4;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<Timeslice> <timeslicedConstructor>5__5;

			[Token(Token = "0x17000506")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x600206F")]
				[Address(RVA = "0x10F5378", Offset = "0x10F5378", VA = "0x10F5378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000507")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002071")]
				[Address(RVA = "0x10F53C0", Offset = "0x10F53C0", VA = "0x10F53C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x10F4C30", Offset = "0x10F4C30", VA = "0x10F4C30")]
			[DebuggerHidden]
			public <ThreadedSave>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x10F4C5C", Offset = "0x10F4C5C", VA = "0x10F4C5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x10F4C60", Offset = "0x10F4C60", VA = "0x10F4C60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x10F5380", Offset = "0x10F5380", VA = "0x10F5380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D74", Offset = "0xB29D74")]
		private sealed class <>c__DisplayClass93_0
		{
			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SketchSnapshot snapshot;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x10F3CB4", Offset = "0x10F3CB4", VA = "0x10F3CB4")]
			public <>c__DisplayClass93_0()
			{
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x10F3CBC", Offset = "0x10F3CBC", VA = "0x10F3CBC")]
			internal string <AutosaveCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D84", Offset = "0xB29D84")]
		private sealed class <AutosaveCoroutine>d__93 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass93_0 <>8__1;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Timeslice> <timeslicedConstructor>5__2;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<string> <writeFuture>5__3;

			[Token(Token = "0x17000508")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6002077")]
				[Address(RVA = "0x10F4284", Offset = "0x10F4284", VA = "0x10F4284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000509")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002079")]
				[Address(RVA = "0x10F42CC", Offset = "0x10F42CC", VA = "0x10F42CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0x10F3D34", Offset = "0x10F3D34", VA = "0x10F3D34")]
			[DebuggerHidden]
			public <AutosaveCoroutine>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x10F3D60", Offset = "0x10F3D60", VA = "0x10F3D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x10F3D64", Offset = "0x10F3D64", VA = "0x10F3D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0x10F428C", Offset = "0x10F428C", VA = "0x10F428C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29D94", Offset = "0xB29D94")]
		private sealed class <>c__DisplayClass95_0
		{
			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string autosaveStart;

			[Token(Token = "0x600207A")]
			[Address(RVA = "0x10F3CE8", Offset = "0x10F3CE8", VA = "0x10F3CE8")]
			public <>c__DisplayClass95_0()
			{
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0x10F3CF0", Offset = "0x10F3CF0", VA = "0x10F3CF0")]
			internal bool <NewAutosaveFile>b__0(FileInfo x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29DA4", Offset = "0xB29DA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FileInfo, DateTime> <>9__95_1;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, FileInfo> <>9__96_0;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<FileInfo, DateTime> <>9__96_1;

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x10F3B44", Offset = "0x10F3B44", VA = "0x10F3B44")]
			public <>c()
			{
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0x10F3B4C", Offset = "0x10F3B4C", VA = "0x10F3B4C")]
			internal DateTime <NewAutosaveFile>b__95_1(FileInfo x)
			{
				return default(DateTime);
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x10F3B68", Offset = "0x10F3B68", VA = "0x10F3B68")]
			internal FileInfo <MostRecentAutosaveFile>b__96_0(string x)
			{
				return null;
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0x10F3BC8", Offset = "0x10F3BC8", VA = "0x10F3BC8")]
			internal DateTime <MostRecentAutosaveFile>b__96_1(FileInfo x)
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29DB4", Offset = "0xB29DB4")]
		private sealed class <ShowErrorAfterDelay>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string error;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002084")]
				[Address(RVA = "0x10F4BE0", Offset = "0x10F4BE0", VA = "0x10F4BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002086")]
				[Address(RVA = "0x10F4C28", Offset = "0x10F4C28", VA = "0x10F4C28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x10F4B04", Offset = "0x10F4B04", VA = "0x10F4B04")]
			[DebuggerHidden]
			public <ShowErrorAfterDelay>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6002082")]
			[Address(RVA = "0x10F4B30", Offset = "0x10F4B30", VA = "0x10F4B30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x10F4B34", Offset = "0x10F4B34", VA = "0x10F4B34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x10F4BE8", Offset = "0x10F4BE8", VA = "0x10F4BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29DC4", Offset = "0xB29DC4")]
		private struct <CreateSnapshotWithIconsAsync>d__98 : IAsyncStateMachine
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<SketchSnapshot> <>t__builder;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveLoadScript <>4__this;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchSnapshot <snapshot>5__2;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x10F42D4", Offset = "0x10F42D4", VA = "0x10F42D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x10F4530", Offset = "0x10F4530", VA = "0x10F4530", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001F26")]
		public const string UNTITLED_PREFIX = "Untitled_";

		[Token(Token = "0x4001F27")]
		public const string TILTASAURUS_PREFIX = "Tiltasaurus_";

		[Token(Token = "0x4001F28")]
		public const string TILT_SUFFIX = ".tilt";

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SaveLoadScript m_Instance;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Regex Md5SuffixRegex;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Regex Md5RemoveSuffixRegex;

		[Token(Token = "0x4001F2C")]
		private const int kAsciiCodePage = 20127;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D m_AutosaveThumbnail;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_AutosaveTriggerSeconds;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_AutosaveFilenamePattern;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_AutosaveFileCount;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_SaveDir;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SceneFileInfo m_LastSceneFile;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_LastSceneIsLegacy;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_LastNonexistentFileIndex;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SaveIconCaptureScript m_SaveIconCapture;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator<Timeslice> m_SaveCoroutine;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_CaptureHiResSaveIcon;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool m_CaptureGifSaveIcon;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int m_SaveIconHiResWidth;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int m_SaveIconHiResHeight;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_SaveIconHiResRenderTexture;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int m_SaveGifWidth;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private int m_SaveGifHeight;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture[] m_SaveGifRenderTextures;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int m_SaveGifTextureCount;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private byte[] m_AutosaveThumbnailBytes;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_SecondsUntilNextAutosave;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DiskSceneFileInfo m_AutosaveFileInfo;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_AutosaveFailed;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private string m_AutosaveTargetFilename;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private IEnumerator<Timeslice> m_AutosaveCoroutine;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture m_SaveIconRenderTexture;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private byte[] m_LastThumbnailBytes;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private string m_LastJsonMetadatError;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private string m_LastWriteSnapshotError;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool m_SuppressNotify;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DBC", Offset = "0xB33DBC")]
		private TrTransform? <LastThumbnail_SS>k__BackingField;

		[Token(Token = "0x170004F9")]
		public bool AutosaveEnabled
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0xFBD020", Offset = "0xFBD020", VA = "0xFBD020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FA")]
		public TrTransform? LastThumbnail_SS
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xFBD070", Offset = "0xFBD070", VA = "0xFBD070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F01C", Offset = "0xB3F01C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xFBD090", Offset = "0xFBD090", VA = "0xFBD090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F02C", Offset = "0xB3F02C")]
			set
			{
			}
		}

		[Token(Token = "0x170004FB")]
		public TrTransform ReasonableThumbnail_SS
		{
			[Token(Token = "0x6002030")]
			[Address(RVA = "0xFBD0B0", Offset = "0xFBD0B0", VA = "0xFBD0B0")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x170004FC")]
		public SceneFileInfo SceneFile
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0xFBD1B4", Offset = "0xFBD1B4", VA = "0xFBD1B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FD")]
		public bool SuppressSaveNotifcation
		{
			[Token(Token = "0x6002033")]
			[Address(RVA = "0xFBD1C4", Offset = "0xFBD1C4", VA = "0xFBD1C4")]
			set
			{
			}
		}

		[Token(Token = "0x170004FE")]
		public bool CanOverwriteSource
		{
			[Token(Token = "0x6002034")]
			[Address(RVA = "0xFBD1D0", Offset = "0xFBD1D0", VA = "0xFBD1D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FF")]
		public string LastMetadataError
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0xFBD28C", Offset = "0xFBD28C", VA = "0xFBD28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		public string LastWriteSnapshotError
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0xFBD294", Offset = "0xFBD294", VA = "0xFBD294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000501")]
		public JsonSerializer JsonSerializer
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0xFBD29C", Offset = "0xFBD29C", VA = "0xFBD29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xFBCB74", Offset = "0xFBCB74", VA = "0xFBCB74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3EFBC", Offset = "0xB3EFBC")]
		public static IEnumerable<DiskSceneFileInfo> IterScenes(DirectoryInfo di)
		{
			return null;
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xFBCBE0", Offset = "0xFBCBE0", VA = "0xFBCBE0")]
		public static string Md5Suffix(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xFBCCAC", Offset = "0xFBCCAC", VA = "0xFBCCAC")]
		public static string RemoveMd5Suffix(string fileName)
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xFBCD3C", Offset = "0xFBCD3C", VA = "0xFBCD3C")]
		public static string AddMd5Suffix(string filename, byte[] hash)
		{
			return null;
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xFBCE78", Offset = "0xFBCE78", VA = "0xFBCE78")]
		public static byte[] GetMd5(string path)
		{
			return null;
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xFBCF20", Offset = "0xFBCF20", VA = "0xFBCF20")]
		static SaveLoadScript()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xFBD1BC", Offset = "0xFBD1BC", VA = "0xFBD1BC")]
		public RenderTexture GetSaveIconRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xFBD2A4", Offset = "0xFBD2A4", VA = "0xFBD2A4")]
		public bool IsSavingAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xFBD2B4", Offset = "0xFBD2B4", VA = "0xFBD2B4")]
		public string GetLastFileHumanName()
		{
			return null;
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xFBD404", Offset = "0xFBD404", VA = "0xFBD404")]
		public byte[] GetLastThumbnailBytes()
		{
			return null;
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xFBD40C", Offset = "0xFBD40C", VA = "0xFBD40C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xFBD820", Offset = "0xFBD820", VA = "0xFBD820")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xFBD7A8", Offset = "0xFBD7A8", VA = "0xFBD7A8")]
		public void ResetLastFilename()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xFBD8D0", Offset = "0xFBD8D0", VA = "0xFBD8D0")]
		public string GenerateNewUntitledFilename(string directory, string extension)
		{
			return null;
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xFBD9F8", Offset = "0xFBD9F8", VA = "0xFBD9F8")]
		public string GenerateNewTiltasaurusFilename(string directory, string extension)
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xFBB474", Offset = "0xFBB474", VA = "0xFBB474")]
		public void SaveOverwriteOrNewIfNotAllowed()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xFBDB6C", Offset = "0xFBDB6C", VA = "0xFBDB6C")]
		public IEnumerator<Timeslice> SaveMonoscopic(int slot)
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xFBE350", Offset = "0xFBE350", VA = "0xFBE350")]
		public string TransferredSourceIdFrom(SceneFileInfo info)
		{
			return null;
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xFBE44C", Offset = "0xFBE44C", VA = "0xFBE44C")]
		public DiskSceneFileInfo GetNewNameSceneFileInfo(bool tiltasaurusMode = false)
		{
			return default(DiskSceneFileInfo);
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xFBE5E8", Offset = "0xFBE5E8", VA = "0xFBE5E8")]
		public IEnumerator<Timeslice> SaveSnapshot(SceneFileInfo fileInfo, SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xFBE5F4", Offset = "0xFBE5F4", VA = "0xFBE5F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3F03C", Offset = "0xB3F03C")]
		public IEnumerator<object> SaveOverwrite(bool tiltasaurusMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xFBE674", Offset = "0xFBE674", VA = "0xFBE674")]
		public IEnumerator<Timeslice> SaveNewName(bool tiltasaurusMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xFBDD78", Offset = "0xFBDD78", VA = "0xFBDD78")]
		private IEnumerator<Timeslice> SaveLow(SceneFileInfo info, bool bNotify = true, [Optional] SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xFBE73C", Offset = "0xFBE73C", VA = "0xFBE73C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3F09C", Offset = "0xB3F09C")]
		private IEnumerator<Timeslice> ThreadedSave(SceneFileInfo fileInfo, bool bNotify = true, [Optional] SketchSnapshot snapshot)
		{
			return null;
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xFBE7D0", Offset = "0xFBE7D0", VA = "0xFBE7D0")]
		private void NotifySaveFinished(SceneFileInfo info, string error, bool newFile)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xFBEA28", Offset = "0xFBEA28", VA = "0xFBEA28")]
		public static Stream GetMetadataReadStream(SceneFileInfo fileInfo)
		{
			return null;
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xFBEB8C", Offset = "0xFBEB8C", VA = "0xFBEB8C")]
		public bool LoadTransformsForOds(SceneFileInfo fileInfo, ref TrTransform head, ref TrTransform scene)
		{
			return default(bool);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xFBF404", Offset = "0xFBF404", VA = "0xFBF404")]
		private static Guid GetForceSupersededBy(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xFBF524", Offset = "0xFBF524", VA = "0xFBF524")]
		public bool Load(SceneFileInfo fileInfo, bool bAdditive = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xFBF388", Offset = "0xFBF388", VA = "0xFBF388")]
		public SketchMetadata DeserializeMetadata(JsonTextReader jsonReader)
		{
			return null;
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xFC18C8", Offset = "0xFC18C8", VA = "0xFC18C8")]
		private void HandleDeserializationError(object sender, Newtonsoft.Json.Serialization.ErrorEventArgs errorArgs)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xFC197C", Offset = "0xFC197C", VA = "0xFC197C")]
		public void SignalPlaybackCompletion()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xFBD814", Offset = "0xFBD814", VA = "0xFBD814")]
		public void MarkAsAutosaveDone()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xFC1B64", Offset = "0xFC1B64", VA = "0xFC1B64")]
		public void SketchChanged()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xFC1BB0", Offset = "0xFC1BB0", VA = "0xFC1BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xFC1C90", Offset = "0xFC1C90", VA = "0xFC1C90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3F0FC", Offset = "0xB3F0FC")]
		private IEnumerator<Timeslice> AutosaveCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xFBE70C", Offset = "0xFBE70C", VA = "0xFBE70C")]
		private void AbortAutosave()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xFC1CFC", Offset = "0xFC1CFC", VA = "0xFC1CFC")]
		public void NewAutosaveFile()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xFC2474", Offset = "0xFC2474", VA = "0xFC2474")]
		public string MostRecentAutosaveFile()
		{
			return null;
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xFC23F8", Offset = "0xFC23F8", VA = "0xFC23F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3F15C", Offset = "0xB3F15C")]
		private IEnumerator ShowErrorAfterDelay(string error, float delay)
		{
			return null;
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xFC26F0", Offset = "0xFC26F0", VA = "0xFC26F0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB3F1BC", Offset = "0xB3F1BC")]
		public Task<SketchSnapshot> CreateSnapshotWithIconsAsync()
		{
			return null;
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xFC2830", Offset = "0xFC2830", VA = "0xFC2830")]
		public SketchSnapshot CreateSnapshotWithIcons(out IEnumerator<Timeslice> coroutine)
		{
			return null;
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xFC2920", Offset = "0xFC2920", VA = "0xFC2920")]
		public SaveLoadScript()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public enum FileInfoType
	{
		[Token(Token = "0x4001F7D")]
		Disk,
		[Token(Token = "0x4001F7E")]
		Cloud,
		[Token(Token = "0x4001F7F")]
		None
	}
	[Token(Token = "0x20004C3")]
	public interface SceneFileInfo
	{
		[Token(Token = "0x1700050C")]
		FileInfoType InfoType
		{
			[Token(Token = "0x6002089")]
			get;
		}

		[Token(Token = "0x1700050D")]
		string HumanName
		{
			[Token(Token = "0x600208A")]
			get;
		}

		[Token(Token = "0x1700050E")]
		bool Valid
		{
			[Token(Token = "0x600208B")]
			get;
		}

		[Token(Token = "0x1700050F")]
		bool Available
		{
			[Token(Token = "0x600208C")]
			get;
		}

		[Token(Token = "0x17000510")]
		string FullPath
		{
			[Token(Token = "0x600208D")]
			get;
		}

		[Token(Token = "0x17000511")]
		bool Exists
		{
			[Token(Token = "0x600208E")]
			get;
		}

		[Token(Token = "0x17000512")]
		bool ReadOnly
		{
			[Token(Token = "0x600208F")]
			get;
		}

		[Token(Token = "0x17000513")]
		string AssetId
		{
			[Token(Token = "0x6002090")]
			get;
		}

		[Token(Token = "0x17000514")]
		string SourceId
		{
			[Token(Token = "0x6002091")]
			get;
		}

		[Token(Token = "0x17000515")]
		int? TriangleCount
		{
			[Token(Token = "0x6002092")]
			get;
		}

		[Token(Token = "0x6002093")]
		void Delete();

		[Token(Token = "0x6002094")]
		bool IsHeaderValid();

		[Token(Token = "0x6002095")]
		Stream GetReadStream(string subfileName);
	}
	[Token(Token = "0x20004C4")]
	public enum SketchSetType
	{
		[Token(Token = "0x4001F81")]
		User,
		[Token(Token = "0x4001F82")]
		Curated,
		[Token(Token = "0x4001F83")]
		Liked,
		[Token(Token = "0x4001F84")]
		Drive
	}
	[Token(Token = "0x20004C5")]
	public class SketchCatalog : MonoBehaviour
	{
		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchCatalog m_Instance;

		[Token(Token = "0x4001F86")]
		public const string kDefaultShowcaseSketchesFolder = "DefaultShowcaseSketches";

		[Token(Token = "0x4001F87")]
		public const string kCachedShowcaseSketchesFolder = "CachedShowcaseFromPoly";

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SketchSet[] m_Sets;

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xE7ED48", Offset = "0xE7ED48", VA = "0xE7ED48")]
		public SketchSet GetSet(SketchSetType eType)
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xE7ED84", Offset = "0xE7ED84", VA = "0xE7ED84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xE7EFFC", Offset = "0xE7EFFC", VA = "0xE7EFFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xE7F0F8", Offset = "0xE7F0F8", VA = "0xE7F0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xE7F1F4", Offset = "0xE7F1F4", VA = "0xE7F1F4")]
		public void NotifyUserFileCreated(string fullpath)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xE7F2D0", Offset = "0xE7F2D0", VA = "0xE7F2D0")]
		public void NotifyUserFileChanged(string fullpath)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xE7F3AC", Offset = "0xE7F3AC", VA = "0xE7F3AC")]
		public SketchCatalog()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C6")]
	public class TiltModels70
	{
		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DCC", Offset = "0xB33DCC")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DDC", Offset = "0xB33DDC")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DEC", Offset = "0xB33DEC")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33DFC", Offset = "0xB33DFC")]
		private Vector3 <Scale>k__BackingField;

		[Token(Token = "0x17000516")]
		public string FilePath
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x1172664", Offset = "0x1172664", VA = "0x1172664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F3DC", Offset = "0xB3F3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x117266C", Offset = "0x117266C", VA = "0x117266C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F3EC", Offset = "0xB3F3EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public Vector3 Position
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x1172674", Offset = "0x1172674", VA = "0x1172674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F3FC", Offset = "0xB3F3FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x1172680", Offset = "0x1172680", VA = "0x1172680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F40C", Offset = "0xB3F40C")]
			set
			{
			}
		}

		[Token(Token = "0x17000518")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x117268C", Offset = "0x117268C", VA = "0x117268C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F41C", Offset = "0xB3F41C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x1172698", Offset = "0x1172698", VA = "0x1172698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F42C", Offset = "0xB3F42C")]
			set
			{
			}
		}

		[Token(Token = "0x17000519")]
		public Vector3 Scale
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x11726A4", Offset = "0x11726A4", VA = "0x11726A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F43C", Offset = "0xB3F43C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x11726B0", Offset = "0x11726B0", VA = "0x11726B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F44C", Offset = "0xB3F44C")]
			set
			{
			}
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x11726BC", Offset = "0x11726BC", VA = "0x11726BC")]
		public TiltModels75 Upgrade()
		{
			return null;
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x11728C8", Offset = "0x11728C8", VA = "0x11728C8")]
		public TiltModels70()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C7")]
	public class TiltModels75
	{
		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E0C", Offset = "0xB33E0C")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E1C", Offset = "0xB33E1C")]
		private string <AssetId>k__BackingField;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E2C", Offset = "0xB33E2C")]
		private bool <InSet_deprecated>k__BackingField;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E3C", Offset = "0xB33E3C")]
		private bool[] <PinStates>k__BackingField;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E4C", Offset = "0xB33E4C")]
		private TrTransform[] <Transforms>k__BackingField;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[JsonIgnore]
		public TrTransform[] m_rawTransforms;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E6C", Offset = "0xB33E6C")]
		private uint[] <GroupIds>k__BackingField;

		[Token(Token = "0x1700051A")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB4656C", Offset = "0xB4656C")]
		public string FilePath
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x11728D0", Offset = "0x11728D0", VA = "0x11728D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F45C", Offset = "0xB3F45C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x11728D8", Offset = "0x11728D8", VA = "0x11728D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F46C", Offset = "0xB3F46C")]
			set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB465A4", Offset = "0xB465A4")]
		public string AssetId
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x11728E0", Offset = "0x11728E0", VA = "0x11728E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F47C", Offset = "0xB3F47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x11728E8", Offset = "0x11728E8", VA = "0x11728E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F48C", Offset = "0xB3F48C")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB465DC", Offset = "0xB465DC")]
		[AttributeAttribute(Name = "DefaultValueAttribute", RVA = "0xB465DC", Offset = "0xB465DC")]
		public bool InSet_deprecated
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x11728F0", Offset = "0x11728F0", VA = "0x11728F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F49C", Offset = "0xB3F49C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x11728F8", Offset = "0x11728F8", VA = "0x11728F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4AC", Offset = "0xB3F4AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700051D")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB4663C", Offset = "0xB4663C")]
		public bool[] PinStates
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x1172904", Offset = "0x1172904", VA = "0x1172904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4BC", Offset = "0xB3F4BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x117290C", Offset = "0x117290C", VA = "0x117290C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4CC", Offset = "0xB3F4CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700051E")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46674", Offset = "0xB46674")]
		public TrTransform[] Transforms
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x1172914", Offset = "0x1172914", VA = "0x1172914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4DC", Offset = "0xB3F4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x117291C", Offset = "0x117291C", VA = "0x117291C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4EC", Offset = "0xB3F4EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700051F")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB466AC", Offset = "0xB466AC")]
		public TrTransform[] RawTransforms
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x1172924", Offset = "0x1172924", VA = "0x1172924")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x117292C", Offset = "0x117292C", VA = "0x117292C")]
			set
			{
			}
		}

		[Token(Token = "0x17000520")]
		[JsonIgnore]
		public Model.Location Location
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x1172958", Offset = "0x1172958", VA = "0x1172958")]
			get
			{
				return default(Model.Location);
			}
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x11729CC", Offset = "0x11729CC", VA = "0x11729CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB466F4", Offset = "0xB466F4")]
		public uint[] GroupIds
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x1172A2C", Offset = "0x1172A2C", VA = "0x1172A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F4FC", Offset = "0xB3F4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x1172A34", Offset = "0x1172A34", VA = "0x1172A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F50C", Offset = "0xB3F50C")]
			set
			{
			}
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x11728AC", Offset = "0x11728AC", VA = "0x11728AC")]
		public TiltModels75()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C8")]
	public class Guides
	{
		[Serializable]
		[Token(Token = "0x20004C9")]
		public class State
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E9C", Offset = "0xB33E9C")]
			private TrTransform <Transform>k__BackingField;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EAC", Offset = "0xB33EAC")]
			private Vector3 <Extents>k__BackingField;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EBC", Offset = "0xB33EBC")]
			private bool <Pinned>k__BackingField;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33ECC", Offset = "0xB33ECC")]
			private uint <GroupId>k__BackingField;

			[Token(Token = "0x17000524")]
			public TrTransform Transform
			{
				[Token(Token = "0x60020BD")]
				[Address(RVA = "0xFF6E10", Offset = "0xFF6E10", VA = "0xFF6E10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F53C", Offset = "0xB3F53C")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x60020BE")]
				[Address(RVA = "0xFF6E1C", Offset = "0xFF6E1C", VA = "0xFF6E1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F54C", Offset = "0xB3F54C")]
				set
				{
				}
			}

			[Token(Token = "0x17000525")]
			public Vector3 Extents
			{
				[Token(Token = "0x60020BF")]
				[Address(RVA = "0xFF6E28", Offset = "0xFF6E28", VA = "0xFF6E28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F55C", Offset = "0xB3F55C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60020C0")]
				[Address(RVA = "0xFF6E34", Offset = "0xFF6E34", VA = "0xFF6E34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F56C", Offset = "0xB3F56C")]
				set
				{
				}
			}

			[Token(Token = "0x17000526")]
			public bool Pinned
			{
				[Token(Token = "0x60020C1")]
				[Address(RVA = "0xFF6E40", Offset = "0xFF6E40", VA = "0xFF6E40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F57C", Offset = "0xB3F57C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60020C2")]
				[Address(RVA = "0xFF6E48", Offset = "0xFF6E48", VA = "0xFF6E48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F58C", Offset = "0xB3F58C")]
				set
				{
				}
			}

			[Token(Token = "0x17000527")]
			public uint GroupId
			{
				[Token(Token = "0x60020C3")]
				[Address(RVA = "0xFF6E54", Offset = "0xFF6E54", VA = "0xFF6E54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F59C", Offset = "0xB3F59C")]
				get
				{
					return default(uint);
				}
				[Token(Token = "0x60020C4")]
				[Address(RVA = "0xFF6E5C", Offset = "0xFF6E5C", VA = "0xFF6E5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5AC", Offset = "0xB3F5AC")]
				set
				{
				}
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xFF6E64", Offset = "0xFF6E64", VA = "0xFF6E64")]
			public State()
			{
			}
		}

		[Token(Token = "0x4001F94")]
		private const string kHashedCube = "ldeocipaedc";

		[Token(Token = "0x4001F95")]
		private const string kHashedSphere = "jminadgooco";

		[Token(Token = "0x4001F96")]
		private const string kHashedCapsule = "pmhghhkcdmp";

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[JsonIgnore]
		public StencilType Type;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33E8C", Offset = "0xB33E8C")]
		private State[] <States>k__BackingField;

		[Token(Token = "0x17000522")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB4672C", Offset = "0xB4672C")]
		private string SerializedType
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xFADDC4", Offset = "0xFADDC4", VA = "0xFADDC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0xFADF70", Offset = "0xFADF70", VA = "0xFADF70")]
			set
			{
			}
		}

		[Token(Token = "0x17000523")]
		public State[] States
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0xFAE1C0", Offset = "0xFAE1C0", VA = "0xFAE1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F51C", Offset = "0xB3F51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xFAE1C8", Offset = "0xFAE1C8", VA = "0xFAE1C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F52C", Offset = "0xB3F52C")]
			set
			{
			}
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xFAE1D0", Offset = "0xFAE1D0", VA = "0xFAE1D0")]
		public Guides()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CA")]
	public class Palette
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EDC", Offset = "0xB33EDC")]
		private Color32[] <Colors>k__BackingField;

		[Token(Token = "0x17000528")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46768", Offset = "0xB46768")]
		private Color32[] Entries
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x1134CA4", Offset = "0x1134CA4", VA = "0x1134CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x1134CAC", Offset = "0x1134CAC", VA = "0x1134CAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		[JsonIgnore]
		public Color32[] Colors
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x1134D04", Offset = "0x1134D04", VA = "0x1134D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5BC", Offset = "0xB3F5BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x1134D0C", Offset = "0x1134D0C", VA = "0x1134D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5CC", Offset = "0xB3F5CC")]
			set
			{
			}
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1134D14", Offset = "0x1134D14", VA = "0x1134D14")]
		public Palette()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CB")]
	public class CustomLights
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		public class DirectionalLight
		{
			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F1C", Offset = "0xB33F1C")]
			private Quaternion <Orientation>k__BackingField;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F2C", Offset = "0xB33F2C")]
			private Color <Color>k__BackingField;

			[Token(Token = "0x1700052D")]
			public Quaternion Orientation
			{
				[Token(Token = "0x60020D2")]
				[Address(RVA = "0x1126484", Offset = "0x1126484", VA = "0x1126484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F63C", Offset = "0xB3F63C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60020D3")]
				[Address(RVA = "0x1126490", Offset = "0x1126490", VA = "0x1126490")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F64C", Offset = "0xB3F64C")]
				set
				{
				}
			}

			[Token(Token = "0x1700052E")]
			public Color Color
			{
				[Token(Token = "0x60020D4")]
				[Address(RVA = "0x112649C", Offset = "0x112649C", VA = "0x112649C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F65C", Offset = "0xB3F65C")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x60020D5")]
				[Address(RVA = "0x11264A8", Offset = "0x11264A8", VA = "0x11264A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F66C", Offset = "0xB3F66C")]
				set
				{
				}
			}

			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x11264B4", Offset = "0x11264B4", VA = "0x11264B4")]
			public DirectionalLight()
			{
			}
		}

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EEC", Offset = "0xB33EEC")]
		private Color32 <Ambient>k__BackingField;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33EFC", Offset = "0xB33EFC")]
		private DirectionalLight <Shadow>k__BackingField;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F0C", Offset = "0xB33F0C")]
		private DirectionalLight <NoShadow>k__BackingField;

		[Token(Token = "0x1700052A")]
		public Color32 Ambient
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0xEC4B64", Offset = "0xEC4B64", VA = "0xEC4B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5DC", Offset = "0xB3F5DC")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xEC4B6C", Offset = "0xEC4B6C", VA = "0xEC4B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5EC", Offset = "0xB3F5EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700052B")]
		public DirectionalLight Shadow
		{
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0xEC4B74", Offset = "0xEC4B74", VA = "0xEC4B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F5FC", Offset = "0xB3F5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xEC4B7C", Offset = "0xEC4B7C", VA = "0xEC4B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F60C", Offset = "0xB3F60C")]
			set
			{
			}
		}

		[Token(Token = "0x1700052C")]
		public DirectionalLight NoShadow
		{
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0xEC4B84", Offset = "0xEC4B84", VA = "0xEC4B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F61C", Offset = "0xB3F61C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xEC4B8C", Offset = "0xEC4B8C", VA = "0xEC4B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F62C", Offset = "0xB3F62C")]
			set
			{
			}
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xEC4B94", Offset = "0xEC4B94", VA = "0xEC4B94")]
		public CustomLights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CD")]
	public class CustomEnvironment
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F3C", Offset = "0xB33F3C")]
		private Color32[] <GradientColors>k__BackingField;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F4C", Offset = "0xB33F4C")]
		private Quaternion <GradientSkew>k__BackingField;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F5C", Offset = "0xB33F5C")]
		private Color32 <FogColor>k__BackingField;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F6C", Offset = "0xB33F6C")]
		private float <FogDensity>k__BackingField;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F7C", Offset = "0xB33F7C")]
		private float <ReflectionIntensity>k__BackingField;

		[Token(Token = "0x1700052F")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB467B0", Offset = "0xB467B0")]
		public Color32[] GradientColors
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xEC4458", Offset = "0xEC4458", VA = "0xEC4458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F67C", Offset = "0xB3F67C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xEC4460", Offset = "0xEC4460", VA = "0xEC4460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F68C", Offset = "0xB3F68C")]
			set
			{
			}
		}

		[Token(Token = "0x17000530")]
		public Quaternion GradientSkew
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0xEC4468", Offset = "0xEC4468", VA = "0xEC4468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F69C", Offset = "0xB3F69C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xEC4474", Offset = "0xEC4474", VA = "0xEC4474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6AC", Offset = "0xB3F6AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public Color32 FogColor
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xEC4480", Offset = "0xEC4480", VA = "0xEC4480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6BC", Offset = "0xB3F6BC")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xEC4488", Offset = "0xEC4488", VA = "0xEC4488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6CC", Offset = "0xB3F6CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000532")]
		public float FogDensity
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xEC4490", Offset = "0xEC4490", VA = "0xEC4490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6DC", Offset = "0xB3F6DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0xEC4498", Offset = "0xEC4498", VA = "0xEC4498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6EC", Offset = "0xB3F6EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public float ReflectionIntensity
		{
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0xEC44A0", Offset = "0xEC44A0", VA = "0xEC44A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F6FC", Offset = "0xB3F6FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xEC44A8", Offset = "0xEC44A8", VA = "0xEC44A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F70C", Offset = "0xB3F70C")]
			set
			{
			}
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xEC44B0", Offset = "0xEC44B0", VA = "0xEC44B0")]
		public CustomEnvironment()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CE")]
	public class CameraPathPositionKnotMetadata
	{
		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TangentMagnitude;

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x15ABF10", Offset = "0x15ABF10", VA = "0x15ABF10")]
		public CameraPathPositionKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CF")]
	public class CameraPathRotationKnotMetadata
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x15AD77C", Offset = "0x15AD77C", VA = "0x15AD77C")]
		public CameraPathRotationKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D0")]
	public class CameraPathSpeedKnotMetadata
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Speed;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x15AE130", Offset = "0x15AE130", VA = "0x15AE130")]
		public CameraPathSpeedKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D1")]
	public class CameraPathFovKnotMetadata
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TrTransform Xf;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PathTValue;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Fov;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x15AB0F0", Offset = "0x15AB0F0", VA = "0x15AB0F0")]
		public CameraPathFovKnotMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D2")]
	public class CameraPathMetadata
	{
		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F8C", Offset = "0xB33F8C")]
		private CameraPathPositionKnotMetadata[] <PathKnots>k__BackingField;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33F9C", Offset = "0xB33F9C")]
		private CameraPathRotationKnotMetadata[] <RotationKnots>k__BackingField;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FAC", Offset = "0xB33FAC")]
		private CameraPathSpeedKnotMetadata[] <SpeedKnots>k__BackingField;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FBC", Offset = "0xB33FBC")]
		private CameraPathFovKnotMetadata[] <FovKnots>k__BackingField;

		[Token(Token = "0x17000534")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB467E8", Offset = "0xB467E8")]
		public CameraPathPositionKnotMetadata[] PathKnots
		{
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x15AB3E0", Offset = "0x15AB3E0", VA = "0x15AB3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F71C", Offset = "0xB3F71C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x15AB3E8", Offset = "0x15AB3E8", VA = "0x15AB3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F72C", Offset = "0xB3F72C")]
			set
			{
			}
		}

		[Token(Token = "0x17000535")]
		public CameraPathRotationKnotMetadata[] RotationKnots
		{
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x15AB3F0", Offset = "0x15AB3F0", VA = "0x15AB3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F73C", Offset = "0xB3F73C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x15AB3F8", Offset = "0x15AB3F8", VA = "0x15AB3F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F74C", Offset = "0xB3F74C")]
			set
			{
			}
		}

		[Token(Token = "0x17000536")]
		public CameraPathSpeedKnotMetadata[] SpeedKnots
		{
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x15AB400", Offset = "0x15AB400", VA = "0x15AB400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F75C", Offset = "0xB3F75C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x15AB408", Offset = "0x15AB408", VA = "0x15AB408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F76C", Offset = "0xB3F76C")]
			set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public CameraPathFovKnotMetadata[] FovKnots
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0x15AB410", Offset = "0x15AB410", VA = "0x15AB410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F77C", Offset = "0xB3F77C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x15AB418", Offset = "0x15AB418", VA = "0x15AB418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F78C", Offset = "0xB3F78C")]
			set
			{
			}
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x15A7DDC", Offset = "0x15A7DDC", VA = "0x15A7DDC")]
		public CameraPathMetadata()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D3")]
	public class TiltImages75b
	{
		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FCC", Offset = "0xB33FCC")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FDC", Offset = "0xB33FDC")]
		private TrTransform <Transform>k__BackingField;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FEC", Offset = "0xB33FEC")]
		private float <AspectRatio>k__BackingField;

		[Token(Token = "0x17000538")]
		public string FilePath
		{
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x11719A8", Offset = "0x11719A8", VA = "0x11719A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F79C", Offset = "0xB3F79C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x11719B0", Offset = "0x11719B0", VA = "0x11719B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7AC", Offset = "0xB3F7AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000539")]
		public TrTransform Transform
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x11719B8", Offset = "0x11719B8", VA = "0x11719B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7BC", Offset = "0xB3F7BC")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x11719C8", Offset = "0x11719C8", VA = "0x11719C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7CC", Offset = "0xB3F7CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700053A")]
		public float AspectRatio
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x11719D8", Offset = "0x11719D8", VA = "0x11719D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7DC", Offset = "0xB3F7DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x11719E0", Offset = "0x11719E0", VA = "0x11719E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7EC", Offset = "0xB3F7EC")]
			set
			{
			}
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x11719E8", Offset = "0x11719E8", VA = "0x11719E8")]
		public TiltImages75 Upgrade()
		{
			return null;
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1171B7C", Offset = "0x1171B7C", VA = "0x1171B7C")]
		public TiltImages75b()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	public class TiltImages75
	{
		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB33FFC", Offset = "0xB33FFC")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3400C", Offset = "0xB3400C")]
		private float <AspectRatio>k__BackingField;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3401C", Offset = "0xB3401C")]
		private bool[] <PinStates>k__BackingField;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3402C", Offset = "0xB3402C")]
		private bool[] <TintStates>k__BackingField;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3403C", Offset = "0xB3403C")]
		private TrTransform[] <Transforms>k__BackingField;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3404C", Offset = "0xB3404C")]
		private uint[] <GroupIds>k__BackingField;

		[Token(Token = "0x1700053B")]
		public string FileName
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x1171940", Offset = "0x1171940", VA = "0x1171940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F7FC", Offset = "0xB3F7FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x1171948", Offset = "0x1171948", VA = "0x1171948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F80C", Offset = "0xB3F80C")]
			set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public float AspectRatio
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x1171950", Offset = "0x1171950", VA = "0x1171950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F81C", Offset = "0xB3F81C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x1171958", Offset = "0x1171958", VA = "0x1171958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F82C", Offset = "0xB3F82C")]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public bool[] PinStates
		{
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x1171960", Offset = "0x1171960", VA = "0x1171960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F83C", Offset = "0xB3F83C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x1171968", Offset = "0x1171968", VA = "0x1171968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F84C", Offset = "0xB3F84C")]
			set
			{
			}
		}

		[Token(Token = "0x1700053E")]
		public bool[] TintStates
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x1171970", Offset = "0x1171970", VA = "0x1171970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F85C", Offset = "0xB3F85C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x1171978", Offset = "0x1171978", VA = "0x1171978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F86C", Offset = "0xB3F86C")]
			set
			{
			}
		}

		[Token(Token = "0x1700053F")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46820", Offset = "0xB46820")]
		public TrTransform[] Transforms
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x1171980", Offset = "0x1171980", VA = "0x1171980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F87C", Offset = "0xB3F87C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x1171988", Offset = "0x1171988", VA = "0x1171988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F88C", Offset = "0xB3F88C")]
			set
			{
			}
		}

		[Token(Token = "0x17000540")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46858", Offset = "0xB46858")]
		public uint[] GroupIds
		{
			[Token(Token = "0x6002101")]
			[Address(RVA = "0x1171990", Offset = "0x1171990", VA = "0x1171990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F89C", Offset = "0xB3F89C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x1171998", Offset = "0x1171998", VA = "0x1171998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8AC", Offset = "0xB3F8AC")]
			set
			{
			}
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x11719A0", Offset = "0x11719A0", VA = "0x11719A0")]
		public TiltImages75()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D5")]
	public class Mirror
	{
		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3405C", Offset = "0xB3405C")]
		private TrTransform <Transform>k__BackingField;

		[Token(Token = "0x17000541")]
		public TrTransform Transform
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0xF325F0", Offset = "0xF325F0", VA = "0xF325F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8BC", Offset = "0xB3F8BC")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002105")]
			[Address(RVA = "0xF325FC", Offset = "0xF325FC", VA = "0xF325FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8CC", Offset = "0xB3F8CC")]
			set
			{
			}
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xF32608", Offset = "0xF32608", VA = "0xF32608")]
		public Mirror()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D6")]
	public class TiltVideo
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3406C", Offset = "0xB3406C")]
		private string <FilePath>k__BackingField;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3407C", Offset = "0xB3407C")]
		private float <AspectRatio>k__BackingField;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Pinned;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrTransform Transform;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3408C", Offset = "0xB3408C")]
		private bool <Paused>k__BackingField;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3409C", Offset = "0xB3409C")]
		private float <Time>k__BackingField;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340AC", Offset = "0xB340AC")]
		private float <Volume>k__BackingField;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340BC", Offset = "0xB340BC")]
		private uint <GroupId>k__BackingField;

		[Token(Token = "0x17000542")]
		public string FilePath
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x1172B6C", Offset = "0x1172B6C", VA = "0x1172B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8DC", Offset = "0xB3F8DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x1172B74", Offset = "0x1172B74", VA = "0x1172B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8EC", Offset = "0xB3F8EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000543")]
		public float AspectRatio
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x1172B7C", Offset = "0x1172B7C", VA = "0x1172B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F8FC", Offset = "0xB3F8FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x1172B84", Offset = "0x1172B84", VA = "0x1172B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F90C", Offset = "0xB3F90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000544")]
		public bool Paused
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x1172B8C", Offset = "0x1172B8C", VA = "0x1172B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F91C", Offset = "0xB3F91C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x1172B94", Offset = "0x1172B94", VA = "0x1172B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F92C", Offset = "0xB3F92C")]
			set
			{
			}
		}

		[Token(Token = "0x17000545")]
		public float Time
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x1172BA0", Offset = "0x1172BA0", VA = "0x1172BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F93C", Offset = "0xB3F93C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x1172BA8", Offset = "0x1172BA8", VA = "0x1172BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F94C", Offset = "0xB3F94C")]
			set
			{
			}
		}

		[Token(Token = "0x17000546")]
		public float Volume
		{
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x1172BB0", Offset = "0x1172BB0", VA = "0x1172BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F95C", Offset = "0xB3F95C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x1172BB8", Offset = "0x1172BB8", VA = "0x1172BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F96C", Offset = "0xB3F96C")]
			set
			{
			}
		}

		[Token(Token = "0x17000547")]
		public uint GroupId
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0x1172BC0", Offset = "0x1172BC0", VA = "0x1172BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F97C", Offset = "0xB3F97C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002112")]
			[Address(RVA = "0x1172BC8", Offset = "0x1172BC8", VA = "0x1172BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F98C", Offset = "0xB3F98C")]
			set
			{
			}
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1172BD0", Offset = "0x1172BD0", VA = "0x1172BD0")]
		public TiltVideo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "ObfuscationAttribute", RVA = "0xB29DD4", Offset = "0xB29DD4")]
	public class SketchMetadata
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		public struct UnusedSketchTransform
		{
			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion orientation;
		}

		[Serializable]
		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E08", Offset = "0xB29E08")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TiltModels70, TiltModels75> <>9__31_0;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TiltImages75b, TiltImages75> <>9__37_0;

			[Token(Token = "0x6002142")]
			[Address(RVA = "0xF1E644", Offset = "0xF1E644", VA = "0xF1E644")]
			public <>c()
			{
			}

			[Token(Token = "0x6002143")]
			[Address(RVA = "0xF1E64C", Offset = "0xF1E64C", VA = "0xF1E64C")]
			internal TiltModels75 <set_Models>b__31_0(TiltModels70 m70)
			{
				return null;
			}

			[Token(Token = "0x6002144")]
			[Address(RVA = "0xF1E668", Offset = "0xF1E668", VA = "0xF1E668")]
			internal TiltImages75 <set_Images>b__37_0(TiltImages75b i75b)
			{
				return null;
			}
		}

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int kSchemaVersion;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EnvironmentPreset;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340CC", Offset = "0xB340CC")]
		private string <AudioPreset>k__BackingField;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340DC", Offset = "0xB340DC")]
		private string[] <Authors>k__BackingField;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340EC", Offset = "0xB340EC")]
		private Guid[] <BrushIndex>k__BackingField;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB340FC", Offset = "0xB340FC")]
		private string[] <RequiredCapabilities>k__BackingField;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrTransform ThumbnailCameraTransformInRoomSpace;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TrTransform SceneTransformInRoomSpace;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TrTransform CanvasTransformInSceneSpace;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3410C", Offset = "0xB3410C")]
		private int <SchemaVersion>k__BackingField;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3411C", Offset = "0xB3411C")]
		private TiltModels75[] <ModelIndex>k__BackingField;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3412C", Offset = "0xB3412C")]
		private TiltImages75[] <ImageIndex>k__BackingField;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3413C", Offset = "0xB3413C")]
		private Mirror <Mirror>k__BackingField;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3414C", Offset = "0xB3414C")]
		private Guides[] <GuideIndex>k__BackingField;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3415C", Offset = "0xB3415C")]
		private Palette <Palette>k__BackingField;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3416C", Offset = "0xB3416C")]
		private CustomLights <Lights>k__BackingField;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3417C", Offset = "0xB3417C")]
		private CustomEnvironment <Environment>k__BackingField;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3418C", Offset = "0xB3418C")]
		private string <SourceId>k__BackingField;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3419C", Offset = "0xB3419C")]
		private string[] <Set_deprecated>k__BackingField;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341AC", Offset = "0xB341AC")]
		private string <AssetId>k__BackingField;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341BC", Offset = "0xB341BC")]
		private TiltVideo[] <Videos>k__BackingField;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341CC", Offset = "0xB341CC")]
		private CameraPathMetadata[] <CameraPaths>k__BackingField;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341DC", Offset = "0xB341DC")]
		private string <ApplicationName>k__BackingField;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB341EC", Offset = "0xB341EC")]
		private string <ApplicationVersion>k__BackingField;

		[Token(Token = "0x17000548")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46890", Offset = "0xB46890")]
		public string AudioPreset
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x1069128", Offset = "0x1069128", VA = "0x1069128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F99C", Offset = "0xB3F99C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x1069130", Offset = "0x1069130", VA = "0x1069130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9AC", Offset = "0xB3F9AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000549")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB468C8", Offset = "0xB468C8")]
		public string[] Authors
		{
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x1069138", Offset = "0x1069138", VA = "0x1069138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9BC", Offset = "0xB3F9BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1069140", Offset = "0x1069140", VA = "0x1069140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9CC", Offset = "0xB3F9CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700054A")]
		public Guid[] BrushIndex
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x1069148", Offset = "0x1069148", VA = "0x1069148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9DC", Offset = "0xB3F9DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x1069150", Offset = "0x1069150", VA = "0x1069150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9EC", Offset = "0xB3F9EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46900", Offset = "0xB46900")]
		public string[] RequiredCapabilities
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x1069158", Offset = "0x1069158", VA = "0x1069158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3F9FC", Offset = "0xB3F9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x1069160", Offset = "0x1069160", VA = "0x1069160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA0C", Offset = "0xB3FA0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700054C")]
		public UnusedSketchTransform ThumbnailCameraTransform
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x10692B0", Offset = "0x10692B0", VA = "0x10692B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700054D")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46938", Offset = "0xB46938")]
		public int SchemaVersion
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1069394", Offset = "0x1069394", VA = "0x1069394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA1C", Offset = "0xB3FA1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x106939C", Offset = "0x106939C", VA = "0x106939C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA2C", Offset = "0xB3FA2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700054E")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46970", Offset = "0xB46970")]
		public TiltModels70[] Models
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x10693A4", Offset = "0x10693A4", VA = "0x10693A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB469A8", Offset = "0xB469A8")]
		public TiltModels75[] ModelIndex
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x10694F4", Offset = "0x10694F4", VA = "0x10694F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA3C", Offset = "0xB3FA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x10694FC", Offset = "0x10694FC", VA = "0x10694FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA4C", Offset = "0xB3FA4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000550")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB469E0", Offset = "0xB469E0")]
		public TiltImages75b[] Images
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x1069504", Offset = "0x1069504", VA = "0x1069504")]
			set
			{
			}
		}

		[Token(Token = "0x17000551")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46A18", Offset = "0xB46A18")]
		public TiltImages75[] ImageIndex
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1069654", Offset = "0x1069654", VA = "0x1069654")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA5C", Offset = "0xB3FA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x106965C", Offset = "0x106965C", VA = "0x106965C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA6C", Offset = "0xB3FA6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000552")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46A50", Offset = "0xB46A50")]
		public Mirror Mirror
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x1069664", Offset = "0x1069664", VA = "0x1069664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA7C", Offset = "0xB3FA7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x106966C", Offset = "0x106966C", VA = "0x106966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA8C", Offset = "0xB3FA8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000553")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46A88", Offset = "0xB46A88")]
		public Guides[] GuideIndex
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x1069674", Offset = "0x1069674", VA = "0x1069674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FA9C", Offset = "0xB3FA9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x106967C", Offset = "0x106967C", VA = "0x106967C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FAAC", Offset = "0xB3FAAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000554")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46AC0", Offset = "0xB46AC0")]
		public Palette Palette
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x1069684", Offset = "0x1069684", VA = "0x1069684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FABC", Offset = "0xB3FABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x106968C", Offset = "0x106968C", VA = "0x106968C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FACC", Offset = "0xB3FACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000555")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46AF8", Offset = "0xB46AF8")]
		public CustomLights Lights
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x1069694", Offset = "0x1069694", VA = "0x1069694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FADC", Offset = "0xB3FADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x106969C", Offset = "0x106969C", VA = "0x106969C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FAEC", Offset = "0xB3FAEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000556")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46B30", Offset = "0xB46B30")]
		public CustomEnvironment Environment
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x10696A4", Offset = "0x10696A4", VA = "0x10696A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FAFC", Offset = "0xB3FAFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x10696AC", Offset = "0x10696AC", VA = "0x10696AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB0C", Offset = "0xB3FB0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000557")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46B68", Offset = "0xB46B68")]
		public string SourceId
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x10696B4", Offset = "0x10696B4", VA = "0x10696B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB1C", Offset = "0xB3FB1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x10696BC", Offset = "0x10696BC", VA = "0x10696BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB2C", Offset = "0xB3FB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000558")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46BA0", Offset = "0xB46BA0")]
		public string[] Set_deprecated
		{
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x10696C4", Offset = "0x10696C4", VA = "0x10696C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB3C", Offset = "0xB3FB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x10696CC", Offset = "0x10696CC", VA = "0x10696CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB4C", Offset = "0xB3FB4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000559")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46BEC", Offset = "0xB46BEC")]
		public string AssetId
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x10696D4", Offset = "0x10696D4", VA = "0x10696D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB5C", Offset = "0xB3FB5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x10696DC", Offset = "0x10696DC", VA = "0x10696DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB6C", Offset = "0xB3FB6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700055A")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46C24", Offset = "0xB46C24")]
		public TiltVideo[] Videos
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0x10696E4", Offset = "0x10696E4", VA = "0x10696E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB7C", Offset = "0xB3FB7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002138")]
			[Address(RVA = "0x10696EC", Offset = "0x10696EC", VA = "0x10696EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB8C", Offset = "0xB3FB8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700055B")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46C5C", Offset = "0xB46C5C")]
		public CameraPathMetadata[] CameraPaths
		{
			[Token(Token = "0x6002139")]
			[Address(RVA = "0x10696F4", Offset = "0x10696F4", VA = "0x10696F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FB9C", Offset = "0xB3FB9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600213A")]
			[Address(RVA = "0x10696FC", Offset = "0x10696FC", VA = "0x10696FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBAC", Offset = "0xB3FBAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700055C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46C94", Offset = "0xB46C94")]
		public string ApplicationName
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x1069704", Offset = "0x1069704", VA = "0x1069704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBBC", Offset = "0xB3FBBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600213C")]
			[Address(RVA = "0x106970C", Offset = "0x106970C", VA = "0x106970C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBCC", Offset = "0xB3FBCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700055D")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB46CCC", Offset = "0xB46CCC")]
		public string ApplicationVersion
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x1069714", Offset = "0x1069714", VA = "0x1069714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBDC", Offset = "0xB3FBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x106971C", Offset = "0x106971C", VA = "0x106971C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FBEC", Offset = "0xB3FBEC")]
			set
			{
			}
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1069168", Offset = "0x1069168", VA = "0x1069168")]
		public bool ShouldSerializeSceneTransformInRoomSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x106920C", Offset = "0x106920C", VA = "0x106920C")]
		public bool ShouldSerializeCanvasTransformInSceneSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1069724", Offset = "0x1069724", VA = "0x1069724")]
		public SketchMetadata()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public interface Sketch
	{
		[Token(Token = "0x1700055E")]
		SceneFileInfo SceneFileInfo
		{
			[Token(Token = "0x6002145")]
			get;
		}

		[Token(Token = "0x1700055F")]
		string[] Authors
		{
			[Token(Token = "0x6002146")]
			get;
		}

		[Token(Token = "0x17000560")]
		Texture2D Icon
		{
			[Token(Token = "0x6002147")]
			get;
		}

		[Token(Token = "0x17000561")]
		bool IconAndMetadataValid
		{
			[Token(Token = "0x6002148")]
			get;
		}
	}
	[Token(Token = "0x20004DB")]
	public interface SketchSet
	{
		[Token(Token = "0x17000562")]
		SketchSetType Type
		{
			[Token(Token = "0x6002149")]
			get;
		}

		[Token(Token = "0x17000563")]
		bool IsReadyForAccess
		{
			[Token(Token = "0x600214A")]
			get;
		}

		[Token(Token = "0x17000564")]
		bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x600214B")]
			get;
		}

		[Token(Token = "0x17000565")]
		bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x600214C")]
			get;
		}

		[Token(Token = "0x17000566")]
		int NumSketches
		{
			[Token(Token = "0x600214D")]
			get;
		}

		[Token(Token = "0x1400007B")]
		event Action OnChanged;

		[Token(Token = "0x1400007C")]
		event Action OnSketchRefreshingChanged;

		[Token(Token = "0x600214E")]
		void Init();

		[Token(Token = "0x600214F")]
		bool IsSketchIndexValid(int iIndex);

		[Token(Token = "0x6002150")]
		void RequestOnlyLoadedMetadata(List<int> requests);

		[Token(Token = "0x6002151")]
		bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description);

		[Token(Token = "0x6002152")]
		SceneFileInfo GetSketchSceneFileInfo(int iSketchIndex);

		[Token(Token = "0x6002153")]
		string GetSketchName(int iSketchIndex);

		[Token(Token = "0x6002154")]
		void DeleteSketch(int toDelete);

		[Token(Token = "0x6002155")]
		void PrecacheSketchModels(int iSketchIndex);

		[Token(Token = "0x6002156")]
		void NotifySketchCreated(string fullpath);

		[Token(Token = "0x6002157")]
		void NotifySketchChanged(string fullpath);

		[Token(Token = "0x6002158")]
		void RequestRefresh();

		[Token(Token = "0x6002159")]
		void Update();
	}
	[Token(Token = "0x20004DC")]
	public class SketchSnapshot
	{
		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E18", Offset = "0xB29E18")]
		private sealed class <TimeslicedConstructor>d__20 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot <>4__this;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Stopwatch <stopwatch>5__2;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <maxTicks>5__3;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<SketchWriter.AdjustedMemoryBrushStroke> <>7__wrap3;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SketchWriter.AdjustedMemoryBrushStroke <strokeSnapshot>5__5;

			[Token(Token = "0x1700056B")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x600216D")]
				[Address(RVA = "0xF1F98C", Offset = "0xF1F98C", VA = "0xF1F98C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216F")]
				[Address(RVA = "0xF1F9D4", Offset = "0xF1F9D4", VA = "0xF1F9D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002169")]
			[Address(RVA = "0xF1EB40", Offset = "0xF1EB40", VA = "0xF1EB40")]
			[DebuggerHidden]
			public <TimeslicedConstructor>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600216A")]
			[Address(RVA = "0xF1EB6C", Offset = "0xF1EB6C", VA = "0xF1EB6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0xF1EC44", Offset = "0xF1EC44", VA = "0xF1EC44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600216C")]
			[Address(RVA = "0xF1EB88", Offset = "0xF1EB88", VA = "0xF1EB88")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0xF1F994", Offset = "0xF1F994", VA = "0xF1F994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E28", Offset = "0xB29E28")]
		private sealed class <CreateSnapshotIcons>d__21 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchSnapshot <>4__this;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RenderTexture hiResTexture;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RenderTexture[] gifTextures;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RenderTexture saveIconTexture;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SaveIconTool <tool>5__2;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SaveIconTool.CameraRigState <iconXform>5__3;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private SaveIconTool.CameraRigState <prevXform>5__4;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private ScreenshotManager <saveIconScreenshotManager>5__5;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Vector3 <basePos>5__6;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private Quaternion <baseRot>5__7;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int <i>5__8;

			[Token(Token = "0x1700056D")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x6002173")]
				[Address(RVA = "0xF1EAF0", Offset = "0xF1EAF0", VA = "0xF1EAF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002175")]
				[Address(RVA = "0xF1EB38", Offset = "0xF1EB38", VA = "0xF1EB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0xF1E684", Offset = "0xF1E684", VA = "0xF1E684")]
			[DebuggerHidden]
			public <CreateSnapshotIcons>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0xF1E6B0", Offset = "0xF1E6B0", VA = "0xF1E6B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002172")]
			[Address(RVA = "0xF1E6B4", Offset = "0xF1E6B4", VA = "0xF1E6B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002174")]
			[Address(RVA = "0xF1EAF8", Offset = "0xF1EAF8", VA = "0xF1EAF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FE5")]
		private const int kNanoSecondsPerSnapshotSlice = 250;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] m_ThumbnailBytes;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_HiResBytes;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrTransform m_LastThumbnail_SS;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SketchWriter.AdjustedMemoryBrushStroke> m_Strokes;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SketchMetadata m_Metadata;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SaveIconCaptureScript m_SaveIconCapture;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GroupIdMapping m_GroupIdMapping;

		[Token(Token = "0x17000567")]
		public byte[] Thumbnail
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x1069A24", Offset = "0x1069A24", VA = "0x1069A24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x1069A2C", Offset = "0x1069A2C", VA = "0x1069A2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000568")]
		public TrTransform LastThumbnail_SS
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x1069A34", Offset = "0x1069A34", VA = "0x1069A34")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000569")]
		public string SourceId
		{
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x1069A40", Offset = "0x1069A40", VA = "0x1069A40")]
			set
			{
			}
		}

		[Token(Token = "0x1700056A")]
		public string AssetId
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0x1069A5C", Offset = "0x1069A5C", VA = "0x1069A5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002163")]
			[Address(RVA = "0x1069A78", Offset = "0x1069A78", VA = "0x1069A78")]
			set
			{
			}
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x1069A94", Offset = "0x1069A94", VA = "0x1069A94")]
		public SketchSnapshot(JsonSerializer jsonSerializer, SaveIconCaptureScript saveIconCapture, out IEnumerator<Timeslice> timeslicedConstructor)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1069B28", Offset = "0x1069B28", VA = "0x1069B28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3FC3C", Offset = "0xB3FC3C")]
		private IEnumerator<Timeslice> TimeslicedConstructor()
		{
			return null;
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1069B94", Offset = "0x1069B94", VA = "0x1069B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3FC9C", Offset = "0xB3FC9C")]
		public IEnumerator<Timeslice> CreateSnapshotIcons(RenderTexture saveIconTexture, RenderTexture hiResTexture, RenderTexture[] gifTextures)
		{
			return null;
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x1069C20", Offset = "0x1069C20", VA = "0x1069C20")]
		private static Guid GetForcePrecededBy(Guid original)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x1069E24", Offset = "0x1069E24", VA = "0x1069E24")]
		public string WriteSnapshotToFile(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DF")]
	public static class SketchWriter
	{
		[Token(Token = "0x20004E0")]
		[Flags]
		public enum StrokeExtension : uint
		{
			[Token(Token = "0x4002007")]
			MaskSingleWord = 0xFFFFu,
			[Token(Token = "0x4002008")]
			None = 0u,
			[Token(Token = "0x4002009")]
			Flags = 1u,
			[Token(Token = "0x400200A")]
			Scale = 2u,
			[Token(Token = "0x400200B")]
			Group = 4u,
			[Token(Token = "0x400200C")]
			Seed = 8u
		}

		[Token(Token = "0x20004E1")]
		[Flags]
		public enum ControlPointExtension : uint
		{
			[Token(Token = "0x400200E")]
			None = 0u,
			[Token(Token = "0x400200F")]
			Pressure = 1u,
			[Token(Token = "0x4002010")]
			Timestamp = 2u
		}

		[Token(Token = "0x20004E2")]
		public struct AdjustedMemoryBrushStroke
		{
			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StrokeData strokeData;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SketchMemoryScript.StrokeFlags adjustedStrokeFlags;
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E58", Offset = "0xB29E58")]
		private sealed class <EnumerateAdjustedSnapshots>d__9 : IEnumerable<AdjustedMemoryBrushStroke>, IEnumerable, IEnumerator<AdjustedMemoryBrushStroke>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AdjustedMemoryBrushStroke <>2__current;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerable<Stroke> strokes;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IEnumerable<Stroke> <>3__strokes;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <resetGroupContinue>5__2;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Stroke> <>7__wrap2;

			[Token(Token = "0x1700056F")]
			private AdjustedMemoryBrushStroke System.Collections.Generic.IEnumerator<TiltBrush.SketchWriter.AdjustedMemoryBrushStroke>.Current
			{
				[Token(Token = "0x6002181")]
				[Address(RVA = "0xF1FF7C", Offset = "0xF1FF7C", VA = "0xF1FF7C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(AdjustedMemoryBrushStroke);
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002183")]
				[Address(RVA = "0xF1FFC8", Offset = "0xF1FFC8", VA = "0xF1FFC8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600217D")]
			[Address(RVA = "0xF1FB0C", Offset = "0xF1FB0C", VA = "0xF1FB0C")]
			[DebuggerHidden]
			public <EnumerateAdjustedSnapshots>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xF1FB44", Offset = "0xF1FB44", VA = "0xF1FB44", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600217F")]
			[Address(RVA = "0xF1FC1C", Offset = "0xF1FC1C", VA = "0xF1FC1C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002180")]
			[Address(RVA = "0xF1FB60", Offset = "0xF1FB60", VA = "0xF1FB60")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0xF1FF88", Offset = "0xF1FF88", VA = "0xF1FF88", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0xF20028", Offset = "0xF20028", VA = "0xF20028", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<AdjustedMemoryBrushStroke> System.Collections.Generic.IEnumerable<TiltBrush.SketchWriter.AdjustedMemoryBrushStroke>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0xF200D0", Offset = "0xF200D0", VA = "0xF200D0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E68", Offset = "0xB29E68")]
		private sealed class <>c
		{
			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Guid, Guid> <>9__11_0;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Stroke> <>9__11_1;

			[Token(Token = "0x6002187")]
			[Address(RVA = "0xF1FA3C", Offset = "0xF1FA3C", VA = "0xF1FA3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0xF1FA44", Offset = "0xF1FA44", VA = "0xF1FA44")]
			internal Guid <ReadMemory>b__11_0(Guid guid)
			{
				return default(Guid);
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0xF1FAB4", Offset = "0xF1FAB4", VA = "0xF1FAB4")]
			internal int <ReadMemory>b__11_1(Stroke a, Stroke b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002002")]
		private const int REQUIRED_SKETCH_VERSION_MIN = 5;

		[Token(Token = "0x4002003")]
		private const int REQUIRED_SKETCH_VERSION_MAX = 6;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint SKETCH_SENTINEL;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SKETCH_VERSION;

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x106CB88", Offset = "0x106CB88", VA = "0x106CB88")]
		public static void RuntimeSelfCheck()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x106CBE8", Offset = "0x106CBE8", VA = "0x106CBE8")]
		private static uint CountOnes(uint val)
		{
			return default(uint);
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x106CC00", Offset = "0x106CC00", VA = "0x106CC00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3FD9C", Offset = "0xB3FD9C")]
		public static IEnumerable<AdjustedMemoryBrushStroke> EnumerateAdjustedSnapshots(IEnumerable<Stroke> strokes)
		{
			return null;
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x106A6D4", Offset = "0x106A6D4", VA = "0x106A6D4")]
		public static void WriteMemory(Stream stream, IList<AdjustedMemoryBrushStroke> strokeCopies, GroupIdMapping groupIdMapping, out List<Guid> brushList)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x106CC6C", Offset = "0x106CC6C", VA = "0x106CC6C")]
		public static bool ReadMemory(Stream stream, Guid[] brushList, bool bAdditive, out bool isLegacy)
		{
			return default(bool);
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x106D278", Offset = "0x106D278", VA = "0x106D278")]
		public static List<Stroke> GetStrokes(Stream stream, Guid[] brushList, bool allowFastPath)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E5")]
	public class TiltFile
	{
		[Token(Token = "0x20004E6")]
		private struct TiltZipHeader
		{
			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint sentinel;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public ushort headerSize;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public ushort headerVersion;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint unused1;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public uint unused2;
		}

		[Token(Token = "0x20004E7")]
		public sealed class AtomicWriter : IDisposable
		{
			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_destination;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_temporaryPath;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_finished;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ICSharpCode.SharpZipLibUnityPort.Zip.ZipOutputStream m_zipstream;

			[Token(Token = "0x6002190")]
			[Address(RVA = "0xF25D80", Offset = "0xF25D80", VA = "0xF25D80")]
			public AtomicWriter(string path)
			{
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0xF26020", Offset = "0xF26020", VA = "0xF26020")]
			private static void WriteTiltZipHeader(Stream s, TiltZipHeader header)
			{
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0xF26168", Offset = "0xF26168", VA = "0xF26168")]
			public Stream GetWriteStream(string subfileName)
			{
				return null;
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0xF26310", Offset = "0xF26310", VA = "0xF26310")]
			public void Commit()
			{
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0xF2645C", Offset = "0xF2645C", VA = "0xF2645C")]
			public void Rollback()
			{
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0xF264A4", Offset = "0xF264A4", VA = "0xF264A4", Slot = "1")]
			~AtomicWriter()
			{
			}

			[Token(Token = "0x6002196")]
			[Address(RVA = "0xF2650C", Offset = "0xF2650C", VA = "0xF2650C", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0xF26454", Offset = "0xF26454", VA = "0xF26454")]
			private static void Rename(string oldpath, string newpath)
			{
			}

			[Token(Token = "0x6002198")]
			[Address(RVA = "0xF25FA4", Offset = "0xF25FA4", VA = "0xF25FA4")]
			private static void Destroy(string path)
			{
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0xF26580", Offset = "0xF26580", VA = "0xF26580")]
			private static void RecursiveUnsetReadOnly(string directory)
			{
			}
		}

		[Token(Token = "0x400201D")]
		private const uint TILT_SENTINEL = 1416391028u;

		[Token(Token = "0x400201E")]
		private const uint PKZIP_SENTINEL = 67324752u;

		[Token(Token = "0x400201F")]
		public const string FN_METADATA = "metadata.json";

		[Token(Token = "0x4002020")]
		public const string FN_METADATA_LEGACY = "main.json";

		[Token(Token = "0x4002021")]
		public const string FN_SKETCH = "data.sketch";

		[Token(Token = "0x4002022")]
		public const string FN_THUMBNAIL = "thumbnail.png";

		[Token(Token = "0x4002023")]
		public const string FN_HI_RES = "hires.png";

		[Token(Token = "0x4002024")]
		public const string THUMBNAIL_MIME_TYPE = "image/png";

		[Token(Token = "0x4002025")]
		public const string TILT_MIME_TYPE = "application/vnd.google-tiltbrush.tilt";

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ushort HEADER_SIZE;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static ushort HEADER_VERSION;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Fullpath;

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1170A80", Offset = "0x1170A80", VA = "0x1170A80")]
		public TiltFile(string fullpath)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1170AAC", Offset = "0x1170AAC", VA = "0x1170AAC")]
		private static TiltZipHeader ReadTiltZipHeader(Stream s)
		{
			return default(TiltZipHeader);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1170B78", Offset = "0x1170B78", VA = "0x1170B78")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x11715C8", Offset = "0x11715C8", VA = "0x11715C8")]
		public Stream GetReadStreamFromStreamingAssets(string subfileName)
		{
			return null;
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1170E34", Offset = "0x1170E34", VA = "0x1170E34")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004E8")]
	public class SaveIconCaptureScript : MonoBehaviour
	{
		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_GifCaptureOffset;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_GifTotalAngle;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_GifAngles;

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xFBB6E4", Offset = "0xFBB6E4", VA = "0xFBB6E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xFBB7F8", Offset = "0xFBB7F8", VA = "0xFBB7F8")]
		public void SetSaveIconTransformForGifFrame(Vector3 basePos, Quaternion baseRot, int iFrame)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xFBB9DC", Offset = "0xFBB9DC", VA = "0xFBB9DC")]
		public SaveIconCaptureScript()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class SceneScript : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public delegate void PoseChangedEventHandler(TrTransform prev, TrTransform current);

		[Token(Token = "0x20004EB")]
		public delegate void ActiveCanvasChangedEventHandler(CanvasScript prev, CanvasScript current);

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E78", Offset = "0xB29E78")]
		private sealed class <get_AllCanvases>d__26 : IEnumerable<CanvasScript>, IEnumerable, IEnumerator<CanvasScript>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CanvasScript <>2__current;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneScript <>4__this;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000576")]
			private CanvasScript System.Collections.Generic.IEnumerator<TiltBrush.CanvasScript>.Current
			{
				[Token(Token = "0x60021BB")]
				[Address(RVA = "0x10F5B48", Offset = "0x10F5B48", VA = "0x10F5B48", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000577")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021BD")]
				[Address(RVA = "0x10F5B90", Offset = "0x10F5B90", VA = "0x10F5B90", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x10F5994", Offset = "0x10F5994", VA = "0x10F5994")]
			[DebuggerHidden]
			public <get_AllCanvases>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x10F59CC", Offset = "0x10F59CC", VA = "0x10F59CC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x10F59D0", Offset = "0x10F59D0", VA = "0x10F59D0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x10F5B50", Offset = "0x10F5B50", VA = "0x10F5B50", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x10F5B98", Offset = "0x10F5B98", VA = "0x10F5B98", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<CanvasScript> System.Collections.Generic.IEnumerable<TiltBrush.CanvasScript>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x10F5C40", Offset = "0x10F5C40", VA = "0x10F5C40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasScript m_MainCanvas;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasScript m_SelectionCanvas;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_bInitialized;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light[] m_Lights;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasScript m_ActiveCanvas;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<CanvasScript> m_LayerCanvases;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TransformExtensions.RelativeAccessor AsScene;

		[Token(Token = "0x17000571")]
		public TrTransform Pose
		{
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xFC1828", Offset = "0xFC1828", VA = "0xFC1828")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xFC129C", Offset = "0xFC129C", VA = "0xFC129C")]
			set
			{
			}
		}

		[Token(Token = "0x17000572")]
		public CanvasScript ActiveCanvas
		{
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xFC399C", Offset = "0xFC399C", VA = "0xFC399C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0xFC39A4", Offset = "0xFC39A4", VA = "0xFC39A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000573")]
		public CanvasScript MainCanvas
		{
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0xFC3B2C", Offset = "0xFC3B2C", VA = "0xFC3B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		public CanvasScript SelectionCanvas
		{
			[Token(Token = "0x60021A6")]
			[Address(RVA = "0xFC3B34", Offset = "0xFC3B34", VA = "0xFC3B34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000575")]
		public IEnumerable<CanvasScript> AllCanvases
		{
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0xFC3930", Offset = "0xFC3930", VA = "0xFC3930")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB3FEAC", Offset = "0xB3FEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400007D")]
		public event PoseChangedEventHandler PoseChanged
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xFC366C", Offset = "0xFC366C", VA = "0xFC366C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE6C", Offset = "0xB3FE6C")]
			add
			{
			}
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xFC370C", Offset = "0xFC370C", VA = "0xFC370C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE7C", Offset = "0xB3FE7C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event ActiveCanvasChangedEventHandler ActiveCanvasChanged
		{
			[Token(Token = "0x600219F")]
			[Address(RVA = "0xFC37AC", Offset = "0xFC37AC", VA = "0xFC37AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE8C", Offset = "0xB3FE8C")]
			add
			{
			}
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0xFC384C", Offset = "0xFC384C", VA = "0xFC384C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FE9C", Offset = "0xB3FE9C")]
			remove
			{
			}
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xFC3B3C", Offset = "0xFC3B3C", VA = "0xFC3B3C")]
		public void Init()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xFC3E80", Offset = "0xFC3E80", VA = "0xFC3E80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xFC413C", Offset = "0xFC413C", VA = "0xFC413C")]
		public CanvasScript Test_AddLayer()
		{
			return null;
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xFC4388", Offset = "0xFC4388", VA = "0xFC4388")]
		public void Test_SquashCurrentLayer()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xFC47F0", Offset = "0xFC47F0", VA = "0xFC47F0")]
		public void Test_CycleCanvas()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xFB614C", Offset = "0xFB614C", VA = "0xFB614C")]
		public int GetNumLights()
		{
			return default(int);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xFB6168", Offset = "0xFB6168", VA = "0xFB6168")]
		public Light GetLight(int index)
		{
			return null;
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xFC4958", Offset = "0xFC4958", VA = "0xFC4958")]
		public SceneScript()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class SceneSettings : MonoBehaviour
	{
		[Token(Token = "0x20004EE")]
		public class RequestInstantSceneSwitch : IDisposable
		{
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x10F6644", Offset = "0x10F6644", VA = "0x10F6644")]
			public RequestInstantSceneSwitch()
			{
			}

			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x10F66B4", Offset = "0x10F66B4", VA = "0x10F66B4", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		private enum TransitionState
		{
			[Token(Token = "0x4002070")]
			FadingToBlack,
			[Token(Token = "0x4002071")]
			FadingToScene,
			[Token(Token = "0x4002072")]
			Scene
		}

		[Token(Token = "0x20004F0")]
		private class LightTransition
		{
			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Environment.Light m_CurrentValues;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Environment.Light m_InterimValues;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Environment.Light m_DesiredValues;

			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x10F6490", Offset = "0x10F6490", VA = "0x10F6490")]
			public void LerpCurrentToOff(float fValue)
			{
			}

			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x10F6564", Offset = "0x10F6564", VA = "0x10F6564")]
			public void LerpCurrentToDesired(float fValue)
			{
			}

			[Token(Token = "0x6002200")]
			[Address(RVA = "0x10F663C", Offset = "0x10F663C", VA = "0x10F663C")]
			public LightTransition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E88", Offset = "0xB29E88")]
		private sealed class <>c
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<LightsPanel> <>9__103_0;

			[Token(Token = "0x6002202")]
			[Address(RVA = "0x10F646C", Offset = "0x10F646C", VA = "0x10F646C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002203")]
			[Address(RVA = "0x10F6474", Offset = "0x10F6474", VA = "0x10F6474")]
			internal void <Update>b__103_0(LightsPanel x)
			{
			}
		}

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneSettings m_Instance;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_TransitionSpeed;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float m_HardBoundsRadiusMeters_SS;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_ReflectionIntensityFallOff;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material m_SkyboxMaterial;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action FadingToDesiredEnvironment;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_RoomGeometryName;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject m_RoomGeometry;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject m_RoomReverbZone;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Camera> m_Cameras;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_TeleportBoundsHalfWidth;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_ControllerXRayHeight;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TransitionState m_CurrentState;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Environment m_DesiredEnvironment;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Environment m_CurrentEnvironment;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_SkipFade;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_TransitionValue;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Environment.RenderSettingsLite m_CurrentValues;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Environment.RenderSettingsLite m_InterimValues;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private List<GameObject> m_EnvironmentObjectsLowLOD;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private List<GameObject> m_EnvironmentObjectsHighLOD;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool m_InhibitSceneReset;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		private bool m_HasCustomLights;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
		private bool m_RoomCreated;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C3")]
		private bool m_LoadingCustomEnvironment;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Color m_CustomFogColor;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float m_CustomFogDensity;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float m_CustomReflectionIntensity;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Color m_SkyColorA;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Color m_SkyColorB;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Quaternion m_GradientSkew;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private bool m_FadingOutGradient;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Color m_FadingSkyColorA;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Color m_FadingSkyColorB;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool m_InGradient;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private List<LightTransition> m_TransitionLights;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_RequestInstantSceneSwitch;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float m_LastFogDensity;

		[Token(Token = "0x17000578")]
		public bool RoomCreated
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0xFC50E0", Offset = "0xFC50E0", VA = "0xFC50E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000579")]
		public float HardBoundsRadiusMeters_SS
		{
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0xFC38EC", Offset = "0xFC38EC", VA = "0xFC38EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057A")]
		public float TeleportBoundsHalfWidth
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0xFC50E8", Offset = "0xFC50E8", VA = "0xFC50E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057B")]
		public float ControllerXRayHeight
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0xFC50F8", Offset = "0xFC50F8", VA = "0xFC50F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057C")]
		public bool IsTransitioning
		{
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0xFC5108", Offset = "0xFC5108", VA = "0xFC5108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700057D")]
		public Color SkyColorA
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0xFC5118", Offset = "0xFC5118", VA = "0xFC5118")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0xFC512C", Offset = "0xFC512C", VA = "0xFC512C")]
			set
			{
			}
		}

		[Token(Token = "0x1700057E")]
		public Color SkyColorB
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0xFC5200", Offset = "0xFC5200", VA = "0xFC5200")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xFC5214", Offset = "0xFC5214", VA = "0xFC5214")]
			set
			{
			}
		}

		[Token(Token = "0x1700057F")]
		public Color FogColor
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xFC52D4", Offset = "0xFC52D4", VA = "0xFC52D4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xFC52E8", Offset = "0xFC52E8", VA = "0xFC52E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000580")]
		public float FogDensity
		{
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xFC5348", Offset = "0xFC5348", VA = "0xFC5348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xFC5350", Offset = "0xFC5350", VA = "0xFC5350")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public bool InGradient
		{
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0xFC53E0", Offset = "0xFC53E0", VA = "0xFC53E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xFC5474", Offset = "0xFC5474", VA = "0xFC5474")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public Quaternion GradientOrientation
		{
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xFC5664", Offset = "0xFC5664", VA = "0xFC5664")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0xFC5678", Offset = "0xFC5678", VA = "0xFC5678")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public float DefaultReflectionIntensity
		{
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xFC57C0", Offset = "0xFC57C0", VA = "0xFC57C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000584")]
		public Environment CurrentEnvironment
		{
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xFC57DC", Offset = "0xFC57DC", VA = "0xFC57DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000585")]
		public bool EnvironmentChanged
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xFC57E4", Offset = "0xFC57E4", VA = "0xFC57E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000586")]
		public CustomEnvironment CustomEnvironment
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xFC8268", Offset = "0xFC8268", VA = "0xFC8268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400007F")]
		public event Action FogDensityChanged
		{
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xFC4960", Offset = "0xFC4960", VA = "0xFC4960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FF7C", Offset = "0xB3FF7C")]
			add
			{
			}
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xFC4A00", Offset = "0xFC4A00", VA = "0xFC4A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FF8C", Offset = "0xB3FF8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event Action FogColorChanged
		{
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xFC4AA0", Offset = "0xFC4AA0", VA = "0xFC4AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FF9C", Offset = "0xB3FF9C")]
			add
			{
			}
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0xFC4B40", Offset = "0xFC4B40", VA = "0xFC4B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFAC", Offset = "0xB3FFAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event Action GradientActiveChanged
		{
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0xFC4BE0", Offset = "0xFC4BE0", VA = "0xFC4BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFBC", Offset = "0xB3FFBC")]
			add
			{
			}
			[Token(Token = "0x60021C5")]
			[Address(RVA = "0xFC4C80", Offset = "0xFC4C80", VA = "0xFC4C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFCC", Offset = "0xB3FFCC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event Action SkyboxChanged
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0xFC4D20", Offset = "0xFC4D20", VA = "0xFC4D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFDC", Offset = "0xB3FFDC")]
			add
			{
			}
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0xFC4DC0", Offset = "0xFC4DC0", VA = "0xFC4DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFEC", Offset = "0xB3FFEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event Action EnvironmentLoaded
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xFC4E60", Offset = "0xFC4E60", VA = "0xFC4E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3FFFC", Offset = "0xB3FFFC")]
			add
			{
			}
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0xFC4F00", Offset = "0xFC4F00", VA = "0xFC4F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4000C", Offset = "0xB4000C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event Action<Guid, bool> OnEnvironmentChanged
		{
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0xFC4FA0", Offset = "0xFC4FA0", VA = "0xFC4FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4001C", Offset = "0xB4001C")]
			add
			{
			}
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0xFC5040", Offset = "0xFC5040", VA = "0xFC5040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4002C", Offset = "0xB4002C")]
			remove
			{
			}
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xFC59D0", Offset = "0xFC59D0", VA = "0xFC59D0")]
		public static bool IsLowLod(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xFC5A84", Offset = "0xFC5A84", VA = "0xFC5A84")]
		public static bool IsHighLod(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xFC5B38", Offset = "0xFC5B38", VA = "0xFC5B38")]
		public static bool ExcludeFromPolyExport(Transform xf)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xFC5BF0", Offset = "0xFC5BF0", VA = "0xFC5BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xFC5CA8", Offset = "0xFC5CA8", VA = "0xFC5CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xFC0E34", Offset = "0xFC0E34", VA = "0xFC0E34")]
		public void SetCustomEnvironment(CustomEnvironment custom, Environment env)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xFC5E24", Offset = "0xFC5E24", VA = "0xFC5E24")]
		public void UpdateReflectionIntensity()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xFC5F70", Offset = "0xFC5F70", VA = "0xFC5F70")]
		private void Update_FadingToBlack()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xFC639C", Offset = "0xFC639C", VA = "0xFC639C")]
		private void Transition_FadingBlackToFadingScene()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xFC70EC", Offset = "0xFC70EC", VA = "0xFC70EC")]
		private void Update_FadingToScene()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xFC779C", Offset = "0xFC779C", VA = "0xFC779C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xFC7E0C", Offset = "0xFC7E0C", VA = "0xFC7E0C")]
		private void UpdateEnvironment()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xFC7F64", Offset = "0xFC7F64", VA = "0xFC7F64")]
		private void SetActiveList(List<GameObject> list, bool bActive)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xFC6A3C", Offset = "0xFC6A3C", VA = "0xFC6A3C")]
		private void CreateEnvironment(Environment.RenderSettingsLite env)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xFC0E10", Offset = "0xFC0E10", VA = "0xFC0E10")]
		public void RecordSkyColorsForFading()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xFC0F58", Offset = "0xFC0F58", VA = "0xFC0F58")]
		public void SetDesiredPreset(Environment env, bool forceTransition = false, bool keepSceneTransform = false, bool hasCustomLights = false, bool skipFade = false, bool fromMultiplayer = false)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xFC8130", Offset = "0xFC8130", VA = "0xFC8130")]
		public Environment GetDesiredPreset()
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xFC8138", Offset = "0xFC8138", VA = "0xFC8138")]
		public void RegisterCamera(Camera rCamera)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xFC808C", Offset = "0xFC808C", VA = "0xFC808C")]
		public void ToggleGeometry(bool geometryEnabled)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xFC8210", Offset = "0xFC8210", VA = "0xFC8210")]
		public Color GetContrastColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xFC5500", Offset = "0xFC5500", VA = "0xFC5500")]
		public void TransitionToGradient()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xFC83D8", Offset = "0xFC83D8", VA = "0xFC83D8")]
		public Color GetColor(BackdropButton.ColorMode mode)
		{
			return default(Color);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xFC53CC", Offset = "0xFC53CC", VA = "0xFC53CC")]
		private void TriggerFogDensityChanged()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xFC5334", Offset = "0xFC5334", VA = "0xFC5334")]
		private void TriggerFogColorChanged()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xFC51EC", Offset = "0xFC51EC", VA = "0xFC51EC")]
		private void TriggerSkyboxChanged()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xFC848C", Offset = "0xFC848C", VA = "0xFC848C")]
		public void SetDesiredLightSettings(LightSettings[] lightSettingsMap)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xFC856C", Offset = "0xFC856C", VA = "0xFC856C")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x20004F2")]
	public class ScreenshotManager : MonoBehaviour
	{
		[Token(Token = "0x20004F3")]
		private class CameraInfo
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRenderer renderer;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Camera camera;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderTexture renderTexture;

			[Token(Token = "0x600221C")]
			[Address(RVA = "0x10F6714", Offset = "0x10F6714", VA = "0x10F6714")]
			public CameraInfo()
			{
			}
		}

		[Token(Token = "0x4002078")]
		private const float MM_TO_UNITS = 0.010000001f;

		[Token(Token = "0x4002079")]
		private const float HYSTERESIS_DEGREES = 10f;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraInfo m_LeftInfo;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraInfo m_RightInfo;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] m_RendererUVs;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_LandscapeFov;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_PortraitFov;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_bIsPortraitMode;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_bIsPortraitModeLocked;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshRenderer m_Display;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_UseDisplayWidthFromConfigFile;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_DisplayWidth;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_DisplayHeight;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool m_AutoAlignRig;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool m_UseStereoRig;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_InterAxialOffset;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_ConvergenceFactor;

		[Token(Token = "0x17000587")]
		public bool IsPortrait
		{
			[Token(Token = "0x6002204")]
			[Address(RVA = "0xE6C6B8", Offset = "0xE6C6B8", VA = "0xE6C6B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002205")]
			[Address(RVA = "0xE6C6C0", Offset = "0xE6C6C0", VA = "0xE6C6C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public bool IsPortraitModeLocked
		{
			[Token(Token = "0x6002206")]
			[Address(RVA = "0xE6C814", Offset = "0xE6C814", VA = "0xE6C814")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002207")]
			[Address(RVA = "0xE6C81C", Offset = "0xE6C81C", VA = "0xE6C81C")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public Camera LeftEye
		{
			[Token(Token = "0x6002208")]
			[Address(RVA = "0xE6C828", Offset = "0xE6C828", VA = "0xE6C828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058A")]
		public Material LeftEyeMaterial
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0xE6C8EC", Offset = "0xE6C8EC", VA = "0xE6C8EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058B")]
		public bool LeftEyeMaterialRenderTextureExists
		{
			[Token(Token = "0x600220A")]
			[Address(RVA = "0xE6C914", Offset = "0xE6C914", VA = "0xE6C914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058C")]
		private CameraInfo LeftInfo
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0xE6C848", Offset = "0xE6C848", VA = "0xE6C848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xE6C994", Offset = "0xE6C994", VA = "0xE6C994")]
		private void Start()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xE6D200", Offset = "0xE6D200", VA = "0xE6D200")]
		private void RefreshFovs()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xE6D0B0", Offset = "0xE6D0B0", VA = "0xE6D0B0")]
		public void SetScreenshotResolution(int width)
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xE6D2A0", Offset = "0xE6D2A0", VA = "0xE6D2A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xE6D5FC", Offset = "0xE6D5FC", VA = "0xE6D5FC")]
		private void SetRigRotation(float degrees)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xE6D820", Offset = "0xE6D820", VA = "0xE6D820")]
		private float GetRigRotation()
		{
			return default(float);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xE6D428", Offset = "0xE6D428", VA = "0xE6D428")]
		private void AlignRigTo(Vector3 desiredUp)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xE6D888", Offset = "0xE6D888", VA = "0xE6D888")]
		private RenderTextureFormat CameraFormat()
		{
			return default(RenderTextureFormat);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xE6C790", Offset = "0xE6C790", VA = "0xE6C790")]
		private void UpdateCameraAspect()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xE6C6F8", Offset = "0xE6C6F8", VA = "0xE6C6F8")]
		private void CreateDisplayRenderTextures()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xE6D8F4", Offset = "0xE6D8F4", VA = "0xE6D8F4")]
		private void CreateDisplayRenderTexture(CameraInfo info, RenderTextureFormat format, string tag)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xE6DB78", Offset = "0xE6DB78", VA = "0xE6DB78")]
		public RenderTexture CreateTemporaryTargetForSave(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xE6DB9C", Offset = "0xE6DB9C", VA = "0xE6DB9C")]
		public void RenderToTexture(RenderTexture rTexture)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xE6DD10", Offset = "0xE6DD10", VA = "0xE6DD10")]
		public static void Save(Stream outf, RenderTexture rTextureToSave, bool bSaveAsPng)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xE6DD64", Offset = "0xE6DD64", VA = "0xE6DD64")]
		public static byte[] SaveToMemory(RenderTexture rTextureToSave, bool bSaveAsPng)
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xE6DEFC", Offset = "0xE6DEFC", VA = "0xE6DEFC")]
		public ScreenshotManager()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class SelectionManager : MonoBehaviour
	{
		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29E98", Offset = "0xB29E98")]
		private sealed class <StrokesInGroup>d__58 : IEnumerable<Stroke>, IEnumerable, IEnumerator<Stroke>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Stroke <>2__current;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectionManager <>4__this;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SketchGroupTag group;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public SketchGroupTag <>3__group;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HashSet<Stroke>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000599")]
			private Stroke System.Collections.Generic.IEnumerator<TiltBrush.Stroke>.Current
			{
				[Token(Token = "0x6002266")]
				[Address(RVA = "0x10F69F8", Offset = "0x10F69F8", VA = "0x10F69F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002268")]
				[Address(RVA = "0x10F6A40", Offset = "0x10F6A40", VA = "0x10F6A40", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002262")]
			[Address(RVA = "0x10F6750", Offset = "0x10F6750", VA = "0x10F6750")]
			[DebuggerHidden]
			public <StrokesInGroup>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6002263")]
			[Address(RVA = "0x10F6788", Offset = "0x10F6788", VA = "0x10F6788", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002264")]
			[Address(RVA = "0x10F67F8", Offset = "0x10F67F8", VA = "0x10F67F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x10F67A4", Offset = "0x10F67A4", VA = "0x10F67A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x10F6A00", Offset = "0x10F6A00", VA = "0x10F6A00", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x10F6A48", Offset = "0x10F6A48", VA = "0x10F6A48", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Stroke> System.Collections.Generic.IEnumerable<TiltBrush.Stroke>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x10F6AF8", Offset = "0x10F6AF8", VA = "0x10F6AF8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29EA8", Offset = "0xB29EA8")]
		private sealed class <WidgetsInGroup>d__59 : IEnumerable<GrabWidget>, IEnumerable, IEnumerator<GrabWidget>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GrabWidget <>2__current;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SelectionManager <>4__this;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SketchGroupTag group;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public SketchGroupTag <>3__group;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HashSet<GrabWidget>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700059B")]
			private GrabWidget System.Collections.Generic.IEnumerator<TiltBrush.GrabWidget>.Current
			{
				[Token(Token = "0x600226F")]
				[Address(RVA = "0x10F6DA4", Offset = "0x10F6DA4", VA = "0x10F6DA4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002271")]
				[Address(RVA = "0x10F6DEC", Offset = "0x10F6DEC", VA = "0x10F6DEC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x10F6AFC", Offset = "0x10F6AFC", VA = "0x10F6AFC")]
			[DebuggerHidden]
			public <WidgetsInGroup>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x10F6B34", Offset = "0x10F6B34", VA = "0x10F6B34", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x10F6BA4", Offset = "0x10F6BA4", VA = "0x10F6BA4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x10F6B50", Offset = "0x10F6B50", VA = "0x10F6B50")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0x10F6DAC", Offset = "0x10F6DAC", VA = "0x10F6DAC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0x10F6DF4", Offset = "0x10F6DF4", VA = "0x10F6DF4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GrabWidget> System.Collections.Generic.IEnumerable<TiltBrush.GrabWidget>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0x10F6EA4", Offset = "0x10F6EA4", VA = "0x10F6EA4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SelectionManager m_Instance;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectionWidget m_SelectionWidget;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<SketchGroupTag, HashSet<Stroke>> m_GroupToStrokes;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SketchGroupTag, HashSet<GrabWidget>> m_GroupToWidgets;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<SketchGroupTag, HashSet<Stroke>> m_GroupToSelectedStrokes;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<SketchGroupTag, HashSet<GrabWidget>> m_GroupToSelectedWidgets;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SelectionTool m_SelectionTool;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<Stroke> m_SelectedStrokes;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<Stroke> m_SelectedStrokesCopyWhileGrabbingGroup;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<GrabWidget> m_SelectedWidgets;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<GrabWidget> m_SelectedWidgetsCopyWhileGrabbingGroup;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_IsAnimatingTossFromGrabbingGroup;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_IsGrabbingGroup;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private BaseTool.ToolType m_ToolTypeBeforeGrabbingGroup;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_RemoveFromSelection;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_bSelectionWidgetNeedsUpdate;

		[Token(Token = "0x1700058D")]
		public bool HasSelection
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xE70CF8", Offset = "0xE70CF8", VA = "0xE70CF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058E")]
		public bool SelectionToolIsHot
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0xE71CC8", Offset = "0xE71CC8", VA = "0xE71CC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058F")]
		public bool SelectionCanBeGrouped
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0xE71D64", Offset = "0xE71D64", VA = "0xE71D64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000590")]
		public bool SelectionIsInOneGroup
		{
			[Token(Token = "0x600222A")]
			[Address(RVA = "0xE71D68", Offset = "0xE71D68", VA = "0xE71D68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000591")]
		public int SelectedStrokeCount
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0xE72070", Offset = "0xE72070", VA = "0xE72070")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000592")]
		public int NumVertsInSelection
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0xE720BC", Offset = "0xE720BC", VA = "0xE720BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000593")]
		public IEnumerable<Stroke> SelectedStrokes
		{
			[Token(Token = "0x600222D")]
			[Address(RVA = "0xE723C4", Offset = "0xE723C4", VA = "0xE723C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		public IEnumerable<GrabWidget> SelectedWidgets
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0xE723CC", Offset = "0xE723CC", VA = "0xE723CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000595")]
		public bool SelectionWasTransformed
		{
			[Token(Token = "0x600222F")]
			[Address(RVA = "0xE723D4", Offset = "0xE723D4", VA = "0xE723D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000596")]
		private bool ShouldShowSelectedStrokes
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xE724B0", Offset = "0xE724B0", VA = "0xE724B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000597")]
		public TrTransform SelectionTransform
		{
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xE72500", Offset = "0xE72500", VA = "0xE72500")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xE70F6C", Offset = "0xE70F6C", VA = "0xE70F6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000598")]
		public bool IsAnimatingTossFromGrabbingGroup
		{
			[Token(Token = "0x6002235")]
			[Address(RVA = "0xE725FC", Offset = "0xE725FC", VA = "0xE725FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000085")]
		public event Action<Stroke> OnStrokeAddedToSelection
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xE71688", Offset = "0xE71688", VA = "0xE71688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4003C", Offset = "0xB4003C")]
			add
			{
			}
			[Token(Token = "0x600221E")]
			[Address(RVA = "0xE71728", Offset = "0xE71728", VA = "0xE71728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4004C", Offset = "0xB4004C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event Action<Stroke> OnStrokeRemovedFromSelection
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xE717C8", Offset = "0xE717C8", VA = "0xE717C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4005C", Offset = "0xB4005C")]
			add
			{
			}
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xE71868", Offset = "0xE71868", VA = "0xE71868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4006C", Offset = "0xB4006C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event Action<Plane> OnFlipSelection
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0xE71908", Offset = "0xE71908", VA = "0xE71908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4007C", Offset = "0xB4007C")]
			add
			{
			}
			[Token(Token = "0x6002222")]
			[Address(RVA = "0xE719A8", Offset = "0xE719A8", VA = "0xE719A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4008C", Offset = "0xB4008C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event Action OnResetTransformInstant
		{
			[Token(Token = "0x6002223")]
			[Address(RVA = "0xE71A48", Offset = "0xE71A48", VA = "0xE71A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4009C", Offset = "0xB4009C")]
			add
			{
			}
			[Token(Token = "0x6002224")]
			[Address(RVA = "0xE71AE8", Offset = "0xE71AE8", VA = "0xE71AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB400AC", Offset = "0xB400AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event Action<Stroke> OnDeleteSelectedStroke
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xE71B88", Offset = "0xE71B88", VA = "0xE71B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB400BC", Offset = "0xB400BC")]
			add
			{
			}
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xE71C28", Offset = "0xE71C28", VA = "0xE71C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB400CC", Offset = "0xB400CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xE70D74", Offset = "0xE70D74", VA = "0xE70D74")]
		public void RemoveFromSelection(bool remove)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xE724A8", Offset = "0xE724A8", VA = "0xE724A8")]
		public bool ShouldRemoveFromSelection()
		{
			return default(bool);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xE6F518", Offset = "0xE6F518", VA = "0xE6F518")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB400DC", Offset = "0xB400DC")]
		public IEnumerable<Stroke> StrokesInGroup(SketchGroupTag group)
		{
			return null;
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xE6F594", Offset = "0xE6F594", VA = "0xE6F594")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4013C", Offset = "0xB4013C")]
		public IEnumerable<GrabWidget> WidgetsInGroup(SketchGroupTag group)
		{
			return null;
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xE72604", Offset = "0xE72604", VA = "0xE72604")]
		public void OnStrokeRemovedFromGroup(Stroke stroke, SketchGroupTag oldGroup)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xE7280C", Offset = "0xE7280C", VA = "0xE7280C")]
		public void OnWidgetRemovedFromGroup(GrabWidget widget, SketchGroupTag oldGroup)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xE72A14", Offset = "0xE72A14", VA = "0xE72A14")]
		public void OnStrokeAddedToGroup(Stroke stroke)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xE72CFC", Offset = "0xE72CFC", VA = "0xE72CFC")]
		public void OnWidgetAddedToGroup(GrabWidget widget)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xE72FE4", Offset = "0xE72FE4", VA = "0xE72FE4")]
		public void OnFinishReset()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xE7306C", Offset = "0xE7306C", VA = "0xE7306C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xE7313C", Offset = "0xE7313C", VA = "0xE7313C")]
		public void CacheSelectionTool(SelectionTool tool)
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xE73144", Offset = "0xE73144", VA = "0xE73144")]
		private void Start()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xE7328C", Offset = "0xE7328C", VA = "0xE7328C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xE732C8", Offset = "0xE732C8", VA = "0xE732C8")]
		private void UpdateSelectionVisibility()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xE735E0", Offset = "0xE735E0", VA = "0xE735E0")]
		private void RegisterHighlights()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xE73A24", Offset = "0xE73A24", VA = "0xE73A24")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xE73DC0", Offset = "0xE73DC0", VA = "0xE73DC0")]
		public SelectionWidget StartGrabbingGroupWithWidget(GrabWidget grabWidget)
		{
			return null;
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xE740C0", Offset = "0xE740C0", VA = "0xE740C0")]
		public void EndGrabbingGroupWithWidget()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xE73A28", Offset = "0xE73A28", VA = "0xE73A28")]
		public void ResolveChanges()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xE7400C", Offset = "0xE7400C", VA = "0xE7400C")]
		public void ClearActiveSelection()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xE746F8", Offset = "0xE746F8", VA = "0xE746F8")]
		public BaseCommand CreateEndSelectionCommand()
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xE74798", Offset = "0xE74798", VA = "0xE74798")]
		public void DeleteSelection()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xE74DC0", Offset = "0xE74DC0", VA = "0xE74DC0")]
		public DeleteSelectionCommand CurrentDeleteSelectionCommand()
		{
			return null;
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xE74E38", Offset = "0xE74E38", VA = "0xE74E38")]
		public void ForgetStrokesInSelectionCanvas()
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xE7018C", Offset = "0xE7018C", VA = "0xE7018C")]
		public void SelectStrokes(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xE6F74C", Offset = "0xE6F74C", VA = "0xE6F74C")]
		public void DeselectStrokes(IEnumerable<Stroke> strokes)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xE7078C", Offset = "0xE7078C", VA = "0xE7078C")]
		public void SelectWidgets(IEnumerable<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xE6FC8C", Offset = "0xE6FC8C", VA = "0xE6FC8C")]
		public void DeselectWidgets(IEnumerable<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xE74FE0", Offset = "0xE74FE0", VA = "0xE74FE0")]
		public void RegisterStrokesInSelectionCanvas(ICollection<Stroke> strokes)
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xE74A64", Offset = "0xE74A64", VA = "0xE74A64")]
		public void DeregisterStrokesInSelectionCanvas(ICollection<Stroke> strokes)
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xE7533C", Offset = "0xE7533C", VA = "0xE7533C")]
		public void RegisterWidgetsInSelectionCanvas(ICollection<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xE75648", Offset = "0xE75648", VA = "0xE75648")]
		public void DeregisterWidgetsInSelectionCanvas(ICollection<GrabWidget> widgets)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xE75954", Offset = "0xE75954", VA = "0xE75954")]
		public void InvertSelection()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xE75A7C", Offset = "0xE75A7C", VA = "0xE75A7C")]
		public void FlipSelection()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xE75D30", Offset = "0xE75D30", VA = "0xE75D30")]
		public void SelectAll()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xE75E80", Offset = "0xE75E80", VA = "0xE75E80")]
		public void ToggleGroupSelectedStrokesAndWidgets()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xE70CEC", Offset = "0xE70CEC", VA = "0xE70CEC")]
		public void UpdateSelectionWidget()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xE74F18", Offset = "0xE74F18", VA = "0xE74F18")]
		public bool IsStrokeSelected(Stroke stroke)
		{
			return default(bool);
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xE74F7C", Offset = "0xE74F7C", VA = "0xE74F7C")]
		public bool IsWidgetSelected(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xE72728", Offset = "0xE72728", VA = "0xE72728")]
		private void RemoveFromGroupToSelectedStrokes(SketchGroupTag group, Stroke stroke)
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xE72930", Offset = "0xE72930", VA = "0xE72930")]
		private void RemoveFromGroupToSelectedWidgets(SketchGroupTag group, GrabWidget widget)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xE72BC0", Offset = "0xE72BC0", VA = "0xE72BC0")]
		private void AddToGroupToSelectedStrokes(SketchGroupTag group, Stroke stroke)
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xE72EA8", Offset = "0xE72EA8", VA = "0xE72EA8")]
		private void AddToGroupToSelectedWidgets(SketchGroupTag group, GrabWidget widget)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xE760FC", Offset = "0xE760FC", VA = "0xE760FC")]
		private void OnSelectionTransformed(TrTransform xf_SS)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xE74318", Offset = "0xE74318", VA = "0xE74318")]
		private Bounds GetBoundsOfSelectedWidgets_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xE76124", Offset = "0xE76124", VA = "0xE76124")]
		public SelectionManager()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class AssetGetter
	{
		[Token(Token = "0x20004F8")]
		public class SnakeToCamelPropertyNameContractResolver : DefaultContractResolver
		{
			[Token(Token = "0x600227B")]
			[Address(RVA = "0x1121ED4", Offset = "0x1121ED4", VA = "0x1121ED4", Slot = "22")]
			protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
			{
				return null;
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0x1121F1C", Offset = "0x1121F1C", VA = "0x1121F1C")]
			private string SnakeToCamelCase(string s)
			{
				return null;
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0x1122020", Offset = "0x1122020", VA = "0x1122020")]
			public SnakeToCamelPropertyNameContractResolver()
			{
			}
		}

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29EB8", Offset = "0xB29EB8")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x600227E")]
			[Address(RVA = "0x111FF68", Offset = "0x111FF68", VA = "0x111FF68")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x111FF70", Offset = "0x111FF70", VA = "0x111FF70")]
			internal JObject <GetAssetCoroutine>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29EC8", Offset = "0xB29EC8")]
		private sealed class <>c__DisplayClass17_1
		{
			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VrAssetFormat requestedType;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<JToken, bool> <>9__1;

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x111FF98", Offset = "0x111FF98", VA = "0x111FF98")]
			public <>c__DisplayClass17_1()
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x111FFA0", Offset = "0x111FFA0", VA = "0x111FFA0")]
			internal bool <GetAssetCoroutine>b__1(JToken x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29ED8", Offset = "0xB29ED8")]
		private sealed class <GetAssetCoroutine>d__17 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetGetter <>4__this;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass17_1 <>8__2;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <cr>5__2;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private JsonTextReader <jsonReader>5__3;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Future<JObject> <f>5__4;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<PolyRawAsset.ElementInfo>.Enumerator <>7__wrap4;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private PolyRawAsset.ElementInfo <e>5__6;

			[Token(Token = "0x170005A1")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x600228A")]
				[Address(RVA = "0x1121E84", Offset = "0x1121E84", VA = "0x1121E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0x1121ECC", Offset = "0x1121ECC", VA = "0x1121ECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x1120084", Offset = "0x1120084", VA = "0x1120084")]
			[DebuggerHidden]
			public <GetAssetCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x11200B0", Offset = "0x11200B0", VA = "0x11200B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x112056C", Offset = "0x112056C", VA = "0x112056C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x1120228", Offset = "0x1120228", VA = "0x1120228")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x11202E4", Offset = "0x11202E4", VA = "0x11202E4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0x11203A0", Offset = "0x11203A0", VA = "0x11203A0")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6002288")]
			[Address(RVA = "0x1120518", Offset = "0x1120518", VA = "0x1120518")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0x112045C", Offset = "0x112045C", VA = "0x112045C")]
			private void <>m__Finally5()
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0x1121E8C", Offset = "0x1121E8C", VA = "0x1121E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Ready;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_URI;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PolyRawAsset m_Asset;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JsonSerializer m_JsonSerializer;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3435C", Offset = "0xB3435C")]
		private bool <IsCanceled>k__BackingField;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3436C", Offset = "0xB3436C")]
		private readonly string <Reason>k__BackingField;

		[Token(Token = "0x1700059D")]
		public bool IsCanceled
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xFEF9D4", Offset = "0xFEF9D4", VA = "0xFEF9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4027C", Offset = "0xB4027C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xFEF9DC", Offset = "0xFEF9DC", VA = "0xFEF9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4028C", Offset = "0xB4028C")]
			set
			{
			}
		}

		[Token(Token = "0x1700059E")]
		public bool IsReady
		{
			[Token(Token = "0x6002276")]
			[Address(RVA = "0xFEF9E8", Offset = "0xFEF9E8", VA = "0xFEF9E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059F")]
		public PolyRawAsset Asset
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xFEF9F0", Offset = "0xFEF9F0", VA = "0xFEF9F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		public string Reason
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xFEF9F8", Offset = "0xFEF9F8", VA = "0xFEF9F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4029C", Offset = "0xB4029C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xFEFA00", Offset = "0xFEFA00", VA = "0xFEFA00")]
		public AssetGetter(string uri, string assetId, VrAssetFormat assetType, string reason)
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xFEFB0C", Offset = "0xFEFB0C", VA = "0xFEFB0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB402AC", Offset = "0xB402AC")]
		public IEnumerator<Null> GetAssetCoroutine()
		{
			return null;
		}
	}
	[Token(Token = "0x20004FC")]
	public class AssetLister
	{
		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29EE8", Offset = "0xB29EE8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x1122084", Offset = "0x1122084", VA = "0x1122084")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x112208C", Offset = "0x112208C", VA = "0x112208C")]
			internal JObject <NextPage>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29EF8", Offset = "0xB29EF8")]
		private sealed class <NextPage>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetLister <>4__this;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolySceneFileInfo> files;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x170005A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002297")]
				[Address(RVA = "0x1122AE0", Offset = "0x1122AE0", VA = "0x1122AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002299")]
				[Address(RVA = "0x1122B28", Offset = "0x1122B28", VA = "0x1122B28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0x11220E4", Offset = "0x11220E4", VA = "0x11220E4")]
			[DebuggerHidden]
			public <NextPage>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0x1122110", Offset = "0x1122110", VA = "0x1122110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x11221E8", Offset = "0x11221E8", VA = "0x11221E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0x112212C", Offset = "0x112212C", VA = "0x112212C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1122AE8", Offset = "0x1122AE8", VA = "0x1122AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F08", Offset = "0xB29F08")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x11220B4", Offset = "0x11220B4", VA = "0x11220B4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0x11220BC", Offset = "0x11220BC", VA = "0x11220BC")]
			internal JObject <NextPage>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F18", Offset = "0xB29F18")]
		private sealed class <NextPage>d__7 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetLister <>4__this;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolyAssetCatalog.AssetDetails> files;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string thumbnailSuffix;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private JObject <json>5__3;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private JToken <lastAsset>5__4;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<Null> <cr>5__5;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private IEnumerator<JToken> <>7__wrap5;

			[Token(Token = "0x170005A6")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60022A1")]
				[Address(RVA = "0x1123C0C", Offset = "0x1123C0C", VA = "0x1123C0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A3")]
				[Address(RVA = "0x1123C54", Offset = "0x1123C54", VA = "0x1123C54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x1122B30", Offset = "0x1122B30", VA = "0x1122B30")]
			[DebuggerHidden]
			public <NextPage>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0x1122B5C", Offset = "0x1122B5C", VA = "0x1122B5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x1122D70", Offset = "0x1122D70", VA = "0x1122D70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0x1122BF8", Offset = "0x1122BF8", VA = "0x1122BF8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x1122CB4", Offset = "0x1122CB4", VA = "0x1122CB4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x1123C14", Offset = "0x1123C14", VA = "0x1123C14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Uri;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_ErrorMessage;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_PageToken;

		[Token(Token = "0x170005A3")]
		public bool HasMore
		{
			[Token(Token = "0x600228D")]
			[Address(RVA = "0xFEFB78", Offset = "0xFEFB78", VA = "0xFEFB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xFEFB88", Offset = "0xFEFB88", VA = "0xFEFB88")]
		public AssetLister(string uri, string errorMessage)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xFEFBC0", Offset = "0xFEFBC0", VA = "0xFEFBC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4035C", Offset = "0xB4035C")]
		public IEnumerator<object> NextPage(List<PolySceneFileInfo> files)
		{
			return null;
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xFEFC3C", Offset = "0xFEFC3C", VA = "0xFEFC3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB403BC", Offset = "0xB403BC")]
		public IEnumerator<Null> NextPage(List<PolyAssetCatalog.AssetDetails> files, string thumbnailSuffix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000501")]
	public class DriveAccess
	{
		[Token(Token = "0x2000502")]
		private class ParentNotFound : Exception
		{
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x112845C", Offset = "0x112845C", VA = "0x112845C")]
			public ParentNotFound(Exception inner)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F28", Offset = "0xB29F28")]
		private struct <InitializeDriveLinkAsync>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x112C160", Offset = "0x112C160", VA = "0x112C160", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x112C794", Offset = "0x112C794", VA = "0x112C794", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F38", Offset = "0xB29F38")]
		private struct <UninitializeAsync>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x112D84C", Offset = "0x112D84C", VA = "0x112D84C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x112DC14", Offset = "0x112DC14", VA = "0x112DC14", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F48", Offset = "0xB29F48")]
		private struct <GetFilesInFolderAsync>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x112ACE8", Offset = "0x112ACE8", VA = "0x112ACE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x112AEDC", Offset = "0x112AEDC", VA = "0x112AEDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F58", Offset = "0xB29F58")]
		private struct <GetFoldersInFolderAsync>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x112BF10", Offset = "0x112BF10", VA = "0x112BF10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x112C104", Offset = "0x112C104", VA = "0x112C104", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F68", Offset = "0xB29F68")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task<FileList>> <>9__0;

			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x1126AFC", Offset = "0x1126AFC", VA = "0x1126AFC")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x1126B04", Offset = "0x1126B04", VA = "0x1126B04")]
			internal Task<FileList> <GetFolderContentsAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F78", Offset = "0xB29F78")]
		private struct <GetFolderContentsAsync>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<Google.Apis.Drive.v3.Data.File>> <>t__builder;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool getFiles;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool getFolders;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string folderId;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass37_0 <>8__1;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Google.Apis.Drive.v3.Data.File> <items>5__2;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x112B5E4", Offset = "0x112B5E4", VA = "0x112B5E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x112BEB4", Offset = "0x112BEB4", VA = "0x112BEB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F88", Offset = "0xB29F88")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x1126B5C", Offset = "0x1126B5C", VA = "0x1126B5C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x1126B64", Offset = "0x1126B64", VA = "0x1126B64")]
			internal Task<FileList> <GetFolderAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29F98", Offset = "0xB29F98")]
		private struct <GetFolderAsync>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parentId;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string name;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x112AF38", Offset = "0x112AF38", VA = "0x112AF38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x112B588", Offset = "0x112B588", VA = "0x112B588", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FA8", Offset = "0xB29FA8")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x1126BBC", Offset = "0x1126BBC", VA = "0x1126BBC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x1126BC4", Offset = "0x1126BC4", VA = "0x1126BC4")]
			internal Task<FileList> <GetFileAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FB8", Offset = "0xB29FB8")]
		private struct <GetFileAsync>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parentId;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string name;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x112A63C", Offset = "0x112A63C", VA = "0x112A63C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x112AC8C", Offset = "0x112AC8C", VA = "0x112AC8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FC8", Offset = "0xB29FC8")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.GetRequest downloadRequest;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream destStream;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x1126C1C", Offset = "0x1126C1C", VA = "0x1126C1C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x1126C24", Offset = "0x1126C24", VA = "0x1126C24")]
			internal Task<IDownloadProgress> <DownloadFileAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FD8", Offset = "0xB29FD8")]
		private struct <DownloadFileAsync>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Stream destStream;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Google.Apis.Drive.v3.Data.File src;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IDownloadProgress> <>u__1;

			[Token(Token = "0x60022DF")]
			[Address(RVA = "0x1129794", Offset = "0x1129794", VA = "0x1129794", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x1129A84", Offset = "0x1129A84", VA = "0x1129A84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FE8", Offset = "0xB29FE8")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.CreateRequest createRequest;

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x1126C50", Offset = "0x1126C50", VA = "0x1126C50")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x1126C58", Offset = "0x1126C58", VA = "0x1126C58")]
			internal Task<Google.Apis.Drive.v3.Data.File> <CreateRootFolderAsync>b__5()
			{
				return null;
			}
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB29FF8", Offset = "0xB29FF8")]
		private sealed class <>c__DisplayClass41_1
		{
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.GetRequest rootRequest;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass41_0 CS$<>8__locals1;

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x1126CB0", Offset = "0x1126CB0", VA = "0x1126CB0")]
			public <>c__DisplayClass41_1()
			{
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x1126CB8", Offset = "0x1126CB8", VA = "0x1126CB8")]
			internal Task<Google.Apis.Drive.v3.Data.File> <CreateRootFolderAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A008", Offset = "0xB2A008")]
		private sealed class <>c__DisplayClass41_2
		{
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass41_0 CS$<>8__locals2;

			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x1126D18", Offset = "0x1126D18", VA = "0x1126D18")]
			public <>c__DisplayClass41_2()
			{
			}

			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x1126D20", Offset = "0x1126D20", VA = "0x1126D20")]
			internal Task<FileList> <CreateRootFolderAsync>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A018", Offset = "0xB2A018")]
		private sealed class <>c__DisplayClass41_3
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest request;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass41_0 CS$<>8__locals3;

			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x1126D80", Offset = "0x1126D80", VA = "0x1126D80")]
			public <>c__DisplayClass41_3()
			{
			}

			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x1126D88", Offset = "0x1126D88", VA = "0x1126D88")]
			internal Task<FileList> <CreateRootFolderAsync>b__3()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A028", Offset = "0xB2A028")]
		private sealed class <>c
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Google.Apis.Drive.v3.Data.File, DateTime?> <>9__41_2;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Google.Apis.Drive.v3.Data.File, DateTime?> <>9__41_4;

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x1126AAC", Offset = "0x1126AAC", VA = "0x1126AAC")]
			public <>c()
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x1126AB4", Offset = "0x1126AB4", VA = "0x1126AB4")]
			internal DateTime? <CreateRootFolderAsync>b__41_2(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}

			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x1126AD8", Offset = "0x1126AD8", VA = "0x1126AD8")]
			internal DateTime? <CreateRootFolderAsync>b__41_4(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A038", Offset = "0xB2A038")]
		private struct <CreateRootFolderAsync>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass41_0 <>8__1;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass41_2 <>8__2;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass41_3 <>8__3;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<FileList> <>u__2;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x1128544", Offset = "0x1128544", VA = "0x1128544", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x1129788", Offset = "0x1129788", VA = "0x1129788", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A048", Offset = "0xB2A048")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CancellationToken token;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.GetRequest request;

			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x1126DE8", Offset = "0x1126DE8", VA = "0x1126DE8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x1126DF0", Offset = "0x1126DF0", VA = "0x1126DF0")]
			internal Task<Google.Apis.Drive.v3.Data.File> <GetDeviceFolderAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A058", Offset = "0xB2A058")]
		private struct <GetDeviceFolderAsync>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass42_0 <>8__1;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <folderId>5__2;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x1129E90", Offset = "0x1129E90", VA = "0x1129E90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x112A5E0", Offset = "0x112A5E0", VA = "0x112A5E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A068", Offset = "0xB2A068")]
		private struct <CreateDeviceFolderAsync>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x11274BC", Offset = "0x11274BC", VA = "0x11274BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x11276EC", Offset = "0x11276EC", VA = "0x11276EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A078", Offset = "0xB2A078")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest folderRequest;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x1126E48", Offset = "0x1126E48", VA = "0x1126E48")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x1126E50", Offset = "0x1126E50", VA = "0x1126E50")]
			internal Task<FileList> <CreateFolderAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A088", Offset = "0xB2A088")]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.CreateRequest createRequest;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass44_0 CS$<>8__locals1;

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x1126EA8", Offset = "0x1126EA8", VA = "0x1126EA8")]
			public <>c__DisplayClass44_1()
			{
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0x1126EB0", Offset = "0x1126EB0", VA = "0x1126EB0")]
			internal Task<Google.Apis.Drive.v3.Data.File> <CreateFolderAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A098", Offset = "0xB2A098")]
		private struct <CreateFolderAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File> <>t__builder;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string parentId;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass44_0 <>8__1;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string[] <parts>5__2;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<FileList> <>u__2;

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x11276F8", Offset = "0x11276F8", VA = "0x11276F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x11284E8", Offset = "0x11284E8", VA = "0x11284E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0A8", Offset = "0xB2A0A8")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AboutResource.GetRequest request;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken? token;

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x1126F10", Offset = "0x1126F10", VA = "0x1126F10")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x1126F18", Offset = "0x1126F18", VA = "0x1126F18")]
			internal Task<About> <RefreshFreeSpaceAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0B8", Offset = "0xB2A0B8")]
		private struct <RefreshFreeSpaceAsync>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken? token;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveAccess <>4__this;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<About> <>u__1;

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x112C7A0", Offset = "0x112C7A0", VA = "0x112C7A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x112CD38", Offset = "0x112CD38", VA = "0x112CD38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0C8", Offset = "0xB2A0C8")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.UpdateRequest trashRequest;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x1126F94", Offset = "0x1126F94", VA = "0x1126F94")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002300")]
			[Address(RVA = "0x1126F9C", Offset = "0x1126F9C", VA = "0x1126F9C")]
			internal Task<Google.Apis.Drive.v3.Data.File> <TrashSketch>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0D8", Offset = "0xB2A0D8")]
		private struct <TrashSketch>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileName;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass46_0 <>8__1;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x6002301")]
			[Address(RVA = "0x112D2B0", Offset = "0x112D2B0", VA = "0x112D2B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x112D840", Offset = "0x112D840", VA = "0x112D840", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0E8", Offset = "0xB2A0E8")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<long> progress;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream dataStream;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long position;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FilesResource.CreateMediaUpload uploader;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x1126FF4", Offset = "0x1126FF4", VA = "0x1126FF4")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6002304")]
			[Address(RVA = "0x1126FFC", Offset = "0x1126FFC", VA = "0x1126FFC")]
			internal void <UploadFileAsync>b__0(IUploadProgress p)
			{
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x1127138", Offset = "0x1127138", VA = "0x1127138")]
			internal Task<IUploadProgress> <UploadFileAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A0F8", Offset = "0xB2A0F8")]
		private struct <UploadFileAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Google.Apis.Drive.v3.Data.File file;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass47_0 <>8__1;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IUploadProgress> <>u__1;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002306")]
			[Address(RVA = "0x112E3C0", Offset = "0x112E3C0", VA = "0x112E3C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0x112EA80", Offset = "0x112EA80", VA = "0x112EA80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A108", Offset = "0xB2A108")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<long> progress;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream dataStream;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long position;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FilesResource.UpdateMediaUpload uploader;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x6002308")]
			[Address(RVA = "0x1127188", Offset = "0x1127188", VA = "0x1127188")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x1127190", Offset = "0x1127190", VA = "0x1127190")]
			internal void <UpdateFileAsync>b__0(IUploadProgress p)
			{
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x11272CC", Offset = "0x11272CC", VA = "0x11272CC")]
			internal Task<IUploadProgress> <UpdateFileAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A118", Offset = "0xB2A118")]
		private struct <UpdateFileAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Google.Apis.Drive.v3.Data.File file;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass48_0 <>8__1;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IUploadProgress> <>u__1;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x112DC70", Offset = "0x112DC70", VA = "0x112DC70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600230C")]
			[Address(RVA = "0x112E3B4", Offset = "0x112E3B4", VA = "0x112E3B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A128", Offset = "0xB2A128")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IProgress<long> progress;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stream dataStream;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long position;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FilesResource.GetRequest downloadRequest;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x600230D")]
			[Address(RVA = "0x112731C", Offset = "0x112731C", VA = "0x112731C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x600230E")]
			[Address(RVA = "0x1127324", Offset = "0x1127324", VA = "0x1127324")]
			internal void <DownloadFileAsync>b__0(IDownloadProgress p)
			{
			}

			[Token(Token = "0x600230F")]
			[Address(RVA = "0x1127460", Offset = "0x1127460", VA = "0x1127460")]
			internal Task<IDownloadProgress> <DownloadFileAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A138", Offset = "0xB2A138")]
		private struct <DownloadFileAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IProgress<long> progress;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Stream dataStream;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DriveAccess <>4__this;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fileId;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<IDownloadProgress> <>u__1;

			[Token(Token = "0x6002310")]
			[Address(RVA = "0x1129A90", Offset = "0x1129A90", VA = "0x1129A90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002311")]
			[Address(RVA = "0x1129E84", Offset = "0x1129E84", VA = "0x1129E84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A148", Offset = "0xB2A148")]
		private struct <Retry>d__53<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Task<T>> taskSource;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002312")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002313")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A158", Offset = "0xB2A158")]
		private struct <Retry>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task> taskSource;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002314")]
			[Address(RVA = "0x112CD44", Offset = "0x112CD44", VA = "0x112CD44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002315")]
			[Address(RVA = "0x112D2A4", Offset = "0x112D2A4", VA = "0x112D2A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A168", Offset = "0xB2A168")]
		private struct <<InitializeDriveLinkAsync>g__InitializeAsync|33_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveAccess <>4__this;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6002316")]
			[Address(RVA = "0x1126618", Offset = "0x1126618", VA = "0x1126618", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0x1126A40", Offset = "0x1126A40", VA = "0x1126A40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40020D9")]
		private const double kTimeEpsilon = 2.5;

		[Token(Token = "0x40020DA")]
		private const int kRetryAttempts = 3;

		[Token(Token = "0x40020DB")]
		private const int kRetryInitialWaitMs = 500;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_DeviceFolderId;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_DeviceId;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DriveService m_DriveService;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAndCts m_InitTask;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_Uninitializing;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_Initialized;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GoogleUserSettings m_GoogleUserSettings;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_HasSpaceQuota;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long m_DriveFreeSpace;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnReadyChanged;

		[Token(Token = "0x170005A8")]
		public bool Ready
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xECB058", Offset = "0xECB058", VA = "0xECB058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A9")]
		public bool Initializing
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xECB0A0", Offset = "0xECB0A0", VA = "0xECB0A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AA")]
		public string DeviceFolder
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xECB0E8", Offset = "0xECB0E8", VA = "0xECB0E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AB")]
		public bool HasSpaceQuota
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xECB0F0", Offset = "0xECB0F0", VA = "0xECB0F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AC")]
		public long DriveFreeSpace
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xECB0F8", Offset = "0xECB0F8", VA = "0xECB0F8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xECB110", Offset = "0xECB110", VA = "0xECB110")]
		public DriveAccess(OAuth2Identity googleIdentity, GoogleUserSettings googleUserSettings)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xECB2CC", Offset = "0xECB2CC", VA = "0xECB2CC")]
		private void OnGoogleLogin()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xECB390", Offset = "0xECB390", VA = "0xECB390")]
		private void OnGoogleLogout()
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xECB500", Offset = "0xECB500", VA = "0xECB500", Slot = "1")]
		~DriveAccess()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xECB20C", Offset = "0xECB20C", VA = "0xECB20C")]
		private static string GetDeviceId()
		{
			return null;
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xECB9D8", Offset = "0xECB9D8", VA = "0xECB9D8")]
		private static string GetPCSerialNumber(string target)
		{
			return null;
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xECB938", Offset = "0xECB938", VA = "0xECB938")]
		private static string GetPcId()
		{
			return null;
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xECB648", Offset = "0xECB648", VA = "0xECB648")]
		private static string GetAndroidId()
		{
			return null;
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xECB2D0", Offset = "0xECB2D0", VA = "0xECB2D0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB404BC", Offset = "0xB404BC")]
		public void InitializeDriveLinkAsync()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xECB3D4", Offset = "0xECB3D4", VA = "0xECB3D4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4051C", Offset = "0xB4051C")]
		public Task<bool> UninitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xECBCE8", Offset = "0xECBCE8", VA = "0xECBCE8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4057C", Offset = "0xB4057C")]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFilesInFolderAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xECBE1C", Offset = "0xECBE1C", VA = "0xECBE1C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB405DC", Offset = "0xB405DC")]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFoldersInFolderAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xECBF50", Offset = "0xECBF50", VA = "0xECBF50")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4063C", Offset = "0xB4063C")]
		public Task<List<Google.Apis.Drive.v3.Data.File>> GetFolderContentsAsync(string folderId, bool getFiles, bool getFolders, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xECC0B4", Offset = "0xECC0B4", VA = "0xECC0B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4069C", Offset = "0xB4069C")]
		public Task<Google.Apis.Drive.v3.Data.File> GetFolderAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xECC1FC", Offset = "0xECC1FC", VA = "0xECC1FC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB406FC", Offset = "0xB406FC")]
		public Task<Google.Apis.Drive.v3.Data.File> GetFileAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xECC344", Offset = "0xECC344", VA = "0xECC344")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4075C", Offset = "0xB4075C")]
		public Task DownloadFileAsync(Google.Apis.Drive.v3.Data.File src, Stream destStream, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xECC470", Offset = "0xECC470", VA = "0xECC470")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB407BC", Offset = "0xB407BC")]
		public Task CreateRootFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xECC584", Offset = "0xECC584", VA = "0xECC584")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4081C", Offset = "0xB4081C")]
		public Task<string> GetDeviceFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xECC6B4", Offset = "0xECC6B4", VA = "0xECC6B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4087C", Offset = "0xB4087C")]
		public Task CreateDeviceFolderAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xECC7D4", Offset = "0xECC7D4", VA = "0xECC7D4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB408DC", Offset = "0xB408DC")]
		public Task<Google.Apis.Drive.v3.Data.File> CreateFolderAsync(string name, string parentId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xECC91C", Offset = "0xECC91C", VA = "0xECC91C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4093C", Offset = "0xB4093C")]
		public Task RefreshFreeSpaceAsync([Optional] CancellationToken? token)
		{
			return null;
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xECCA34", Offset = "0xECCA34", VA = "0xECCA34")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4099C", Offset = "0xB4099C")]
		public Task TrashSketch(string fileName, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xECCB58", Offset = "0xECCB58", VA = "0xECCB58")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB409FC", Offset = "0xB409FC")]
		public Task UploadFileAsync(Google.Apis.Drive.v3.Data.File file, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xECCC90", Offset = "0xECCC90", VA = "0xECCC90")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40A5C", Offset = "0xB40A5C")]
		public Task UpdateFileAsync(Google.Apis.Drive.v3.Data.File file, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xECCDC8", Offset = "0xECCDC8", VA = "0xECCDC8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40ABC", Offset = "0xB40ABC")]
		public Task DownloadFileAsync(string fileId, Stream dataStream, CancellationToken token, [Optional] IProgress<long> progress)
		{
			return null;
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xECCF00", Offset = "0xECCF00", VA = "0xECCF00")]
		public static bool IsNewer(Google.Apis.Drive.v3.Data.File driveFile, FileInfo localFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xECD004", Offset = "0xECD004", VA = "0xECD004")]
		public static bool IsNewer(FileInfo localFile, Google.Apis.Drive.v3.Data.File driveFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xECD108", Offset = "0xECD108", VA = "0xECD108")]
		public static bool IsNewer(FileInfo first, FileInfo second)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C5")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40B1C", Offset = "0xB40B1C")]
		public static Task<T> Retry<T>(Func<Task<T>> taskSource)
		{
			return null;
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xECD1C8", Offset = "0xECD1C8", VA = "0xECD1C8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40B7C", Offset = "0xB40B7C")]
		public static Task Retry(Func<Task> taskSource)
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xECD2E4", Offset = "0xECD2E4", VA = "0xECD2E4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40BDC", Offset = "0xB40BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40BDC", Offset = "0xB40BDC")]
		private Task <InitializeDriveLinkAsync>g__InitializeAsync|33_0(CancellationToken token)
		{
			return null;
		}
	}
	[Token(Token = "0x2000528")]
	public class DriveSync
	{
		[Token(Token = "0x2000529")]
		public class DataTransferError : Exception
		{
			[Token(Token = "0x6002336")]
			[Address(RVA = "0x115083C", Offset = "0x115083C", VA = "0x115083C")]
			public DataTransferError(string message, Exception inner)
			{
			}
		}

		[Token(Token = "0x200052A")]
		[Flags]
		private enum SyncType : short
		{
			[Token(Token = "0x40021B7")]
			Download = 1,
			[Token(Token = "0x40021B8")]
			Upload = 2,
			[Token(Token = "0x40021B9")]
			UploadAndDownload = 3
		}

		[Serializable]
		[Token(Token = "0x200052B")]
		public enum SyncedFolderType
		{
			[Token(Token = "0x40021BB")]
			Sketches,
			[Token(Token = "0x40021BC")]
			Snapshots,
			[Token(Token = "0x40021BD")]
			Videos,
			[Token(Token = "0x40021BE")]
			MediaLibrary,
			[Token(Token = "0x40021BF")]
			Exports,
			[Token(Token = "0x40021C0")]
			Num
		}

		[Token(Token = "0x200052C")]
		private class SyncedFolder
		{
			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string AbsoluteLocalPath;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Name;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ParentDriveId;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Google.Apis.Drive.v3.Data.File Drive;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DirectoryInfo Local;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SyncType SyncType;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool Recursive;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string[] ExcludeExtensions;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SyncedFolderType FolderType;

			[Token(Token = "0x170005B3")]
			public bool Upload
			{
				[Token(Token = "0x6002337")]
				[Address(RVA = "0x1150B18", Offset = "0x1150B18", VA = "0x1150B18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005B4")]
			public bool Download
			{
				[Token(Token = "0x6002338")]
				[Address(RVA = "0x1150B24", Offset = "0x1150B24", VA = "0x1150B24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002339")]
			[Address(RVA = "0x1150B30", Offset = "0x1150B30", VA = "0x1150B30")]
			public SyncedFolder()
			{
			}
		}

		[Token(Token = "0x200052D")]
		public class SyncItem
		{
			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string AbsoluteLocalPath;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ParentId;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string FileId;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool Overwrite;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DateTime LastModified;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool Upload;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public long Size;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public SyncedFolderType FolderType;

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x11508B8", Offset = "0x11508B8", VA = "0x11508B8")]
			public SyncItem()
			{
			}
		}

		[Token(Token = "0x200052E")]
		private class SyncItemQueue
		{
			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private SortedDictionary<DateTime, Queue<SyncItem>> m_Queue;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_Count;

			[Token(Token = "0x170005B5")]
			public int Count
			{
				[Token(Token = "0x600233B")]
				[Address(RVA = "0x11508C0", Offset = "0x11508C0", VA = "0x11508C0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x11508C8", Offset = "0x11508C8", VA = "0x11508C8")]
			public SyncItemQueue()
			{
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x1150944", Offset = "0x1150944", VA = "0x1150944")]
			public void Insert(SyncItem item)
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x114CFF4", Offset = "0x114CFF4", VA = "0x114CFF4")]
			public SyncItem Dequeue()
			{
				return null;
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0x114DC78", Offset = "0x114DC78", VA = "0x114DC78")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200052F")]
		private class UserSyncFlag
		{
			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_PreferenceName;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_Value;

			[Token(Token = "0x170005B6")]
			public bool Value
			{
				[Token(Token = "0x6002341")]
				[Address(RVA = "0x1150C00", Offset = "0x1150C00", VA = "0x1150C00")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002342")]
				[Address(RVA = "0x1150C08", Offset = "0x1150C08", VA = "0x1150C08")]
				set
				{
				}
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x1150B70", Offset = "0x1150B70", VA = "0x1150B70")]
			public UserSyncFlag(string user, string preference)
			{
			}
		}

		[Token(Token = "0x2000530")]
		private class Transfer : IProgress<long>
		{
			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3438C", Offset = "0xB3438C")]
			private SyncItem <Item>k__BackingField;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3439C", Offset = "0xB3439C")]
			private TaskAndCts <TaskAndCts>k__BackingField;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB343AC", Offset = "0xB343AC")]
			private long <BytesTransferred>k__BackingField;

			[Token(Token = "0x170005B7")]
			public SyncItem Item
			{
				[Token(Token = "0x6002343")]
				[Address(RVA = "0x1150B38", Offset = "0x1150B38", VA = "0x1150B38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4136C", Offset = "0xB4136C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002344")]
				[Address(RVA = "0x1150B40", Offset = "0x1150B40", VA = "0x1150B40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4137C", Offset = "0xB4137C")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B8")]
			public TaskAndCts TaskAndCts
			{
				[Token(Token = "0x6002345")]
				[Address(RVA = "0x1150B48", Offset = "0x1150B48", VA = "0x1150B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4138C", Offset = "0xB4138C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002346")]
				[Address(RVA = "0x1150B50", Offset = "0x1150B50", VA = "0x1150B50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4139C", Offset = "0xB4139C")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B9")]
			public long BytesTransferred
			{
				[Token(Token = "0x6002347")]
				[Address(RVA = "0x1150B58", Offset = "0x1150B58", VA = "0x1150B58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB413AC", Offset = "0xB413AC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002348")]
				[Address(RVA = "0x1150B60", Offset = "0x1150B60", VA = "0x1150B60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB413BC", Offset = "0xB413BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170005BA")]
			public Task Task
			{
				[Token(Token = "0x6002349")]
				[Address(RVA = "0x114CFD8", Offset = "0x114CFD8", VA = "0x114CFD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234A")]
			[Address(RVA = "0x114D1B4", Offset = "0x114D1B4", VA = "0x114D1B4")]
			public Transfer(DriveSync ds, SyncItem item)
			{
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x1150B68", Offset = "0x1150B68", VA = "0x1150B68", Slot = "4")]
			public void Report(long value)
			{
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0x114DD78", Offset = "0x114DD78", VA = "0x114DD78")]
			public void Cancel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A188", Offset = "0xB2A188")]
		private sealed class <>c
		{
			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transfer, long> <>9__33_0;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transfer, TaskAndCts> <>9__49_1;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transfer, Task> <>9__50_0;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<Transfer, object>, Transfer> <>9__53_1;

			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Transfer, long> <>9__53_2;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Google.Apis.Drive.v3.Data.File, bool> <>9__54_8;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<FileInfo, string> <>9__54_0;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<FileInfo, string> <>9__54_2;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Google.Apis.Drive.v3.Data.File, string> <>9__54_4;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<KeyValuePair<string, Google.Apis.Drive.v3.Data.File>, Google.Apis.Drive.v3.Data.File> <>9__54_10;

			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<KeyValuePair<string, FileInfo>, FileInfo> <>9__54_13;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<Google.Apis.Drive.v3.Data.File, bool> <>9__54_5;

			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<Google.Apis.Drive.v3.Data.File, string> <>9__54_6;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<DirectoryInfo, string> <>9__54_7;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<Transfer, bool> <>9__55_1;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<Transfer, bool> <>9__55_0;

			[Token(Token = "0x600234E")]
			[Address(RVA = "0x112F188", Offset = "0x112F188", VA = "0x112F188")]
			public <>c()
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x112F190", Offset = "0x112F190", VA = "0x112F190")]
			internal long <get_Progress>b__33_0(Transfer x)
			{
				return default(long);
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0x112F1A8", Offset = "0x112F1A8", VA = "0x112F1A8")]
			internal TaskAndCts <UninitializeAsync>b__49_1(Transfer x)
			{
				return null;
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x112F1C0", Offset = "0x112F1C0", VA = "0x112F1C0")]
			internal Task <ClearAllTransfers>b__50_0(Transfer x)
			{
				return null;
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x112F1DC", Offset = "0x112F1DC", VA = "0x112F1DC")]
			internal Transfer <PrepareAllFolderTransfersAsync>b__53_1(KeyValuePair<Transfer, object> x)
			{
				return null;
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x112F21C", Offset = "0x112F21C", VA = "0x112F21C")]
			internal long <PrepareAllFolderTransfersAsync>b__53_2(Transfer x)
			{
				return default(long);
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x112F240", Offset = "0x112F240", VA = "0x112F240")]
			internal bool <EnumerateFolderTransfersAsync>b__54_8(Google.Apis.Drive.v3.Data.File x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x112F2A8", Offset = "0x112F2A8", VA = "0x112F2A8")]
			internal string <EnumerateFolderTransfersAsync>b__54_0(FileInfo x)
			{
				return null;
			}

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x112F2C8", Offset = "0x112F2C8", VA = "0x112F2C8")]
			internal string <EnumerateFolderTransfersAsync>b__54_2(FileInfo x)
			{
				return null;
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x112F2E8", Offset = "0x112F2E8", VA = "0x112F2E8")]
			internal string <EnumerateFolderTransfersAsync>b__54_4(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x112F30C", Offset = "0x112F30C", VA = "0x112F30C")]
			internal Google.Apis.Drive.v3.Data.File <EnumerateFolderTransfersAsync>b__54_10(KeyValuePair<string, Google.Apis.Drive.v3.Data.File> x)
			{
				return null;
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x112F34C", Offset = "0x112F34C", VA = "0x112F34C")]
			internal FileInfo <EnumerateFolderTransfersAsync>b__54_13(KeyValuePair<string, FileInfo> x)
			{
				return null;
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x112F38C", Offset = "0x112F38C", VA = "0x112F38C")]
			internal bool <EnumerateFolderTransfersAsync>b__54_5(Google.Apis.Drive.v3.Data.File x)
			{
				return default(bool);
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x112F3F4", Offset = "0x112F3F4", VA = "0x112F3F4")]
			internal string <EnumerateFolderTransfersAsync>b__54_6(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0x112F418", Offset = "0x112F418", VA = "0x112F418")]
			internal string <EnumerateFolderTransfersAsync>b__54_7(DirectoryInfo x)
			{
				return null;
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x112F438", Offset = "0x112F438", VA = "0x112F438")]
			internal bool <ManageTransfersAsync>b__55_1(Transfer x)
			{
				return default(bool);
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x112F4A0", Offset = "0x112F4A0", VA = "0x112F4A0")]
			internal bool <ManageTransfersAsync>b__55_0(Transfer x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A198", Offset = "0xB2A198")]
		private struct <InitializeDriveSyncAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x114BF48", Offset = "0x114BF48", VA = "0x114BF48", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x114C5D8", Offset = "0x114C5D8", VA = "0x114C5D8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1A8", Offset = "0xB2A1A8")]
		private struct <SetupSyncFoldersAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <deviceRootId>5__2;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Task> <folderSyncs>5__3;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x114DDA0", Offset = "0x114DDA0", VA = "0x114DDA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x114E7D0", Offset = "0x114E7D0", VA = "0x114E7D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1B8", Offset = "0xB2A1B8")]
		private struct <UninitializeAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x6002363")]
			[Address(RVA = "0x114EE74", Offset = "0x114EE74", VA = "0x114EE74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0x114F5D8", Offset = "0x114F5D8", VA = "0x114F5D8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1C8", Offset = "0xB2A1C8")]
		private struct <ClearAllTransfers>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002365")]
			[Address(RVA = "0x11301E4", Offset = "0x11301E4", VA = "0x11301E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002366")]
			[Address(RVA = "0x11307DC", Offset = "0x11307DC", VA = "0x11307DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1D8", Offset = "0xB2A1D8")]
		private struct <SyncLocalFilesAsync>d__51 : IAsyncStateMachine
		{
			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x114E7DC", Offset = "0x114E7DC", VA = "0x114E7DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002368")]
			[Address(RVA = "0x114EE68", Offset = "0x114EE68", VA = "0x114EE68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1E8", Offset = "0xB2A1E8")]
		private struct <AddSyncedFolderAsync>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string localPath;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string parentId;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CancellationToken token;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SyncType syncType;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
			public bool recursive;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string[] excludeExtensions;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public SyncedFolderType folderType;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SyncedFolder <>7__wrap1;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x112FA9C", Offset = "0x112FA9C", VA = "0x112FA9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x112FE10", Offset = "0x112FE10", VA = "0x112FE10", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A1F8", Offset = "0xB2A1F8")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x112F4CC", Offset = "0x112F4CC", VA = "0x112F4CC")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x112F4D4", Offset = "0x112F4D4", VA = "0x112F4D4")]
			internal bool <PrepareAllFolderTransfersAsync>b__0(KeyValuePair<Transfer, object> x)
			{
				return default(bool);
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x112F548", Offset = "0x112F548", VA = "0x112F548")]
			internal Task <PrepareAllFolderTransfersAsync>b__3(SyncedFolder x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A208", Offset = "0xB2A208")]
		private struct <PrepareAllFolderTransfersAsync>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass53_0 <>8__1;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transfer[] <>7__wrap1;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap2;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600236E")]
			[Address(RVA = "0x114D280", Offset = "0x114D280", VA = "0x114D280", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600236F")]
			[Address(RVA = "0x114DD94", Offset = "0x114DD94", VA = "0x114DD94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A218", Offset = "0xB2A218")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SyncedFolder folder;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HashSet<string> localSet;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, FileInfo> localFiles;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HashSet<string> driveSet;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<string, Google.Apis.Drive.v3.Data.File> driveFiles;

			[Token(Token = "0x6002370")]
			[Address(RVA = "0x112F56C", Offset = "0x112F56C", VA = "0x112F56C")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0x112F574", Offset = "0x112F574", VA = "0x112F574")]
			internal bool <EnumerateFolderTransfersAsync>b__1(FileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002372")]
			[Address(RVA = "0x112F640", Offset = "0x112F640", VA = "0x112F640")]
			internal bool <EnumerateFolderTransfersAsync>b__3(Google.Apis.Drive.v3.Data.File x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0x112F710", Offset = "0x112F710", VA = "0x112F710")]
			internal bool <EnumerateFolderTransfersAsync>b__9(KeyValuePair<string, Google.Apis.Drive.v3.Data.File> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002374")]
			[Address(RVA = "0x112F7E0", Offset = "0x112F7E0", VA = "0x112F7E0")]
			internal bool <EnumerateFolderTransfersAsync>b__12(KeyValuePair<string, FileInfo> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A228", Offset = "0xB2A228")]
		private sealed class <>c__DisplayClass54_1
		{
			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Google.Apis.Drive.v3.Data.File file;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass54_0 CS$<>8__locals1;

			[Token(Token = "0x6002375")]
			[Address(RVA = "0x112F8B0", Offset = "0x112F8B0", VA = "0x112F8B0")]
			public <>c__DisplayClass54_1()
			{
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0x112F8B8", Offset = "0x112F8B8", VA = "0x112F8B8")]
			internal bool <EnumerateFolderTransfersAsync>b__11(Transfer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A238", Offset = "0xB2A238")]
		private sealed class <>c__DisplayClass54_2
		{
			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FileInfo file;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass54_0 CS$<>8__locals2;

			[Token(Token = "0x6002377")]
			[Address(RVA = "0x112F970", Offset = "0x112F970", VA = "0x112F970")]
			public <>c__DisplayClass54_2()
			{
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0x112F978", Offset = "0x112F978", VA = "0x112F978")]
			internal bool <EnumerateFolderTransfersAsync>b__14(Transfer x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A248", Offset = "0xB2A248")]
		private struct <EnumerateFolderTransfersAsync>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SyncedFolder folder;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass54_0 <>8__1;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<string, Google.Apis.Drive.v3.Data.File> <driveFolders>5__2;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Dictionary<string, DirectoryInfo> <localFolders>5__3;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__2;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private HashSet<string>.Enumerator <>7__wrap3;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6002379")]
			[Address(RVA = "0x1131474", Offset = "0x1131474", VA = "0x1131474", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0x1133C98", Offset = "0x1133C98", VA = "0x1133C98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A258", Offset = "0xB2A258")]
		private struct <ManageTransfersAsync>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForUpdate <updateWait>5__2;

			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x600237B")]
			[Address(RVA = "0x114C5E4", Offset = "0x114C5E4", VA = "0x114C5E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x114D274", Offset = "0x114D274", VA = "0x114D274", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A268", Offset = "0xB2A268")]
		private struct <UploadItemAsync>d__56 : IAsyncStateMachine
		{
			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transfer transfer;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SyncItem <item>5__2;

			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <path>5__3;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Google.Apis.Drive.v3.Data.File <metadata>5__4;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Google.Apis.Drive.v3.Data.File <>7__wrap4;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File.ContentHintsData> <>u__1;

			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private FileStream <stream>5__6;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600237D")]
			[Address(RVA = "0x114F5E4", Offset = "0x114F5E4", VA = "0x114F5E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0x1150830", Offset = "0x1150830", VA = "0x1150830", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A278", Offset = "0xB2A278")]
		private struct <CreateTiltFileContentHintsAsync>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Google.Apis.Drive.v3.Data.File.ContentHintsData> <>t__builder;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string path;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Google.Apis.Drive.v3.Data.File.ContentHintsData <hints>5__2;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stream <thumbStream>5__3;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] <thumbBytes>5__4;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<int> <>u__1;

			[Token(Token = "0x600237F")]
			[Address(RVA = "0x11307E8", Offset = "0x11307E8", VA = "0x11307E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x1130DE4", Offset = "0x1130DE4", VA = "0x1130DE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A288", Offset = "0xB2A288")]
		private struct <DownloadItemAsync>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transfer transfer;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveSync <>4__this;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SyncItem <item>5__2;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <path>5__3;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <tempPath>5__4;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FileStream <stream>5__5;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002381")]
			[Address(RVA = "0x1130E40", Offset = "0x1130E40", VA = "0x1130E40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0x1131468", Offset = "0x1131468", VA = "0x1131468", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A298", Offset = "0xB2A298")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x6002383")]
			[Address(RVA = "0x112FA2C", Offset = "0x112FA2C", VA = "0x112FA2C")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0x112FA34", Offset = "0x112FA34", VA = "0x112FA34")]
			internal bool <CancelTransferAsync>b__0(Transfer x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2A8", Offset = "0xB2A2A8")]
		private struct <CancelTransferAsync>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002385")]
			[Address(RVA = "0x112FE1C", Offset = "0x112FE1C", VA = "0x112FE1C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x11301D8", Offset = "0x11301D8", VA = "0x11301D8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2B8", Offset = "0xB2A2B8")]
		private struct <<InitializeDriveSyncAsync>g__InitializeAsync|47_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DriveSync <>4__this;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x112EA8C", Offset = "0x112EA8C", VA = "0x112EA8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x112EE90", Offset = "0x112EE90", VA = "0x112EE90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2C8", Offset = "0xB2A2C8")]
		private struct <<UninitializeAsync>g__CancelTaskCts|49_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskAndCts taskAndCts;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x112EE9C", Offset = "0x112EE9C", VA = "0x112EE9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x112F11C", Offset = "0x112F11C", VA = "0x112F11C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40021A4")]
		public const long kMinimumFreeSpace = 536870912L;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SyncedFolder> m_Folders;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SyncItemQueue m_ToTransfer;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConcurrentDictionary<Transfer, object> m_Transfers;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAndCts m_InitTask;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAndCts m_SyncTask;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAndCts m_UpdateTask;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Uninitializing;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_Initialized;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UserSyncFlag m_SyncEnabled;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UserSyncFlag[] m_SyncedFolderFlags;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DriveAccess m_DriveAccess;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private long m_TotalBytesToTransfer;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long m_PreviousTotalBytesToTransfer;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private long m_BytesTransferred;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_IsCancelling;

		[Token(Token = "0x170005AD")]
		public bool Initializing
		{
			[Token(Token = "0x600231A")]
			[Address(RVA = "0xECDBD4", Offset = "0xECDBD4", VA = "0xECDBD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AE")]
		public bool Initialized
		{
			[Token(Token = "0x600231B")]
			[Address(RVA = "0xECDC1C", Offset = "0xECDC1C", VA = "0xECDC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005AF")]
		public float Progress
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0xECD9E8", Offset = "0xECD9E8", VA = "0xECD9E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B0")]
		public bool SyncEnabled
		{
			[Token(Token = "0x600231D")]
			[Address(RVA = "0xECD9C8", Offset = "0xECD9C8", VA = "0xECD9C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600231E")]
			[Address(RVA = "0xECDC24", Offset = "0xECDC24", VA = "0xECDC24")]
			set
			{
			}
		}

		[Token(Token = "0x170005B1")]
		public bool Syncing
		{
			[Token(Token = "0x600231F")]
			[Address(RVA = "0xECD824", Offset = "0xECD824", VA = "0xECD824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B2")]
		public bool DriveIsLowOnSpace
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0xECD990", Offset = "0xECD990", VA = "0xECD990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400008A")]
		public event Action SyncEnabledChanged
		{
			[Token(Token = "0x6002318")]
			[Address(RVA = "0xECD490", Offset = "0xECD490", VA = "0xECD490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40D8C", Offset = "0xB40D8C")]
			add
			{
			}
			[Token(Token = "0x6002319")]
			[Address(RVA = "0xECD5CC", Offset = "0xECD5CC", VA = "0xECD5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB40D9C", Offset = "0xB40D9C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xECDEE8", Offset = "0xECDEE8", VA = "0xECDEE8")]
		public void InitUserSyncOptions()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xECE0A8", Offset = "0xECE0A8", VA = "0xECE0A8")]
		public void UninitUserSyncOptions()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xECE0B0", Offset = "0xECE0B0", VA = "0xECE0B0")]
		public void ToggleSyncOnFolderOfType(SyncedFolderType type)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xECE114", Offset = "0xECE114", VA = "0xECE114")]
		public bool IsFolderOfTypeSynced(SyncedFolderType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xECE174", Offset = "0xECE174", VA = "0xECE174")]
		public DriveSync(DriveAccess driveAccess, OAuth2Identity googleIdentity)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xECE2F4", Offset = "0xECE2F4", VA = "0xECE2F4")]
		private void OnDriveAccessReady()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xECDD20", Offset = "0xECDD20", VA = "0xECDD20")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40DAC", Offset = "0xB40DAC")]
		public void InitializeDriveSyncAsync()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xECE360", Offset = "0xECE360", VA = "0xECE360")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40E0C", Offset = "0xB40E0C")]
		private Task SetupSyncFoldersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xECDDE4", Offset = "0xECDDE4", VA = "0xECDDE4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40E6C", Offset = "0xB40E6C")]
		public Task UninitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xECE474", Offset = "0xECE474", VA = "0xECE474")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40ECC", Offset = "0xB40ECC")]
		private Task ClearAllTransfers()
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xECE578", Offset = "0xECE578", VA = "0xECE578")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40F2C", Offset = "0xB40F2C")]
		public Task SyncLocalFilesAsync()
		{
			return null;
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xECE67C", Offset = "0xECE67C", VA = "0xECE67C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40F8C", Offset = "0xB40F8C")]
		private Task AddSyncedFolderAsync(string name, string localPath, string parentId, SyncType syncType, SyncedFolderType folderType, CancellationToken token, bool recursive = false, [Optional] string[] excludeExtensions)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xECE7E0", Offset = "0xECE7E0", VA = "0xECE7E0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB40FEC", Offset = "0xB40FEC")]
		private Task PrepareAllFolderTransfersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xECE8F4", Offset = "0xECE8F4", VA = "0xECE8F4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4104C", Offset = "0xB4104C")]
		private Task EnumerateFolderTransfersAsync(SyncedFolder folder, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xECEA18", Offset = "0xECEA18", VA = "0xECEA18")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB410AC", Offset = "0xB410AC")]
		private Task ManageTransfersAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xECEB28", Offset = "0xECEB28", VA = "0xECEB28")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4110C", Offset = "0xB4110C")]
		private Task UploadItemAsync(Transfer transfer, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xECEC4C", Offset = "0xECEC4C", VA = "0xECEC4C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4116C", Offset = "0xB4116C")]
		private Task<Google.Apis.Drive.v3.Data.File.ContentHintsData> CreateTiltFileContentHintsAsync(string path)
		{
			return null;
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xECED70", Offset = "0xECED70", VA = "0xECED70")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB411CC", Offset = "0xB411CC")]
		private Task DownloadItemAsync(Transfer transfer, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xECEE94", Offset = "0xECEE94", VA = "0xECEE94")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4122C", Offset = "0xB4122C")]
		public Task CancelTransferAsync(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xECEFB4", Offset = "0xECEFB4", VA = "0xECEFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4128C", Offset = "0xB4128C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4128C", Offset = "0xB4128C")]
		private Task <InitializeDriveSyncAsync>g__InitializeAsync|47_0(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xECF0D4", Offset = "0xECF0D4", VA = "0xECF0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB412FC", Offset = "0xB412FC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB412FC", Offset = "0xB412FC")]
		internal static Task <UninitializeAsync>g__CancelTaskCts|49_0(TaskAndCts taskAndCts)
		{
			return null;
		}
	}
	[Token(Token = "0x2000546")]
	public class DriveSyncFlagsWatcher : MonoBehaviour
	{
		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] m_Flags;

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xECF1D8", Offset = "0xECF1D8", VA = "0xECF1D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xECF22C", Offset = "0xECF22C", VA = "0xECF22C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xECF2A4", Offset = "0xECF2A4", VA = "0xECF2A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xECF34C", Offset = "0xECF34C", VA = "0xECF34C")]
		public DriveSyncFlagsWatcher()
		{
		}
	}
	[Token(Token = "0x2000547")]
	public class GoogleDriveSketchSet : SketchSet
	{
		[Token(Token = "0x2000548")]
		public class GoogleDriveFileInfo : SceneFileInfo
		{
			[Token(Token = "0x2000549")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2D8", Offset = "0xB2A2D8")]
			private sealed class <LoadThumbnail>d__46 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002273")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002274")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002275")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GoogleDriveFileInfo <>4__this;

				[Token(Token = "0x4002276")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private UnityWebRequest <request>5__2;

				[Token(Token = "0x4002277")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private UnityWebRequestAsyncOperation <operation>5__3;

				[Token(Token = "0x170005D0")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60023C7")]
					[Address(RVA = "0x210D804", Offset = "0x210D804", VA = "0x210D804", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005D1")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60023C9")]
					[Address(RVA = "0x210D84C", Offset = "0x210D84C", VA = "0x210D84C", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60023C4")]
				[Address(RVA = "0x210D6D0", Offset = "0x210D6D0", VA = "0x210D6D0")]
				[DebuggerHidden]
				public <LoadThumbnail>d__46(int <>1__state)
				{
				}

				[Token(Token = "0x60023C5")]
				[Address(RVA = "0x210D6FC", Offset = "0x210D6FC", VA = "0x210D6FC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60023C6")]
				[Address(RVA = "0x210D700", Offset = "0x210D700", VA = "0x210D700", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60023C8")]
				[Address(RVA = "0x210D80C", Offset = "0x210D80C", VA = "0x210D80C", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x200054A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2E8", Offset = "0xB2A2E8")]
			private sealed class <>c__DisplayClass48_0
			{
				[Token(Token = "0x4002278")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GoogleDriveFileInfo <>4__this;

				[Token(Token = "0x4002279")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public CancellationToken token;

				[Token(Token = "0x60023CA")]
				[Address(RVA = "0x210D044", Offset = "0x210D044", VA = "0x210D044")]
				public <>c__DisplayClass48_0()
				{
				}

				[Token(Token = "0x60023CB")]
				[Address(RVA = "0x210D04C", Offset = "0x210D04C", VA = "0x210D04C")]
				internal Task <DownloadAsync>b__0()
				{
					return null;
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x200054B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A2F8", Offset = "0xB2A2F8")]
			private struct <DownloadAsync>d__48 : IAsyncStateMachine
			{
				[Token(Token = "0x400227A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400227B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x400227C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GoogleDriveFileInfo <>4__this;

				[Token(Token = "0x400227D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public CancellationToken token;

				[Token(Token = "0x400227E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private FileStream <>7__wrap1;

				[Token(Token = "0x400227F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x60023CC")]
				[Address(RVA = "0x210D090", Offset = "0x210D090", VA = "0x210D090", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x60023CD")]
				[Address(RVA = "0x210D6C4", Offset = "0x210D6C4", VA = "0x210D6C4", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400226A")]
			private const string kCachePath = "DriveCache";

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Google.Apis.Drive.v3.Data.File m_File;

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Texture2D m_Thumbnail;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_AbortLoad;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string m_FileName;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TiltFile m_TiltFile;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FileStream m_DownloadStream;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string m_SourceId;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string m_Source;

			[Token(Token = "0x170005C0")]
			public Texture2D Thumbnail
			{
				[Token(Token = "0x60023AC")]
				[Address(RVA = "0x115F574", Offset = "0x115F574", VA = "0x115F574")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C1")]
			public FileInfoType InfoType
			{
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0x115F57C", Offset = "0x115F57C", VA = "0x115F57C", Slot = "4")]
				get
				{
					return default(FileInfoType);
				}
			}

			[Token(Token = "0x170005C2")]
			public string HumanName
			{
				[Token(Token = "0x60023AE")]
				[Address(RVA = "0x115F584", Offset = "0x115F584", VA = "0x115F584", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C3")]
			public bool Valid
			{
				[Token(Token = "0x60023AF")]
				[Address(RVA = "0x115F5EC", Offset = "0x115F5EC", VA = "0x115F5EC", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005C4")]
			public bool Available
			{
				[Token(Token = "0x60023B0")]
				[Address(RVA = "0x115F5F4", Offset = "0x115F5F4", VA = "0x115F5F4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005C5")]
			public string FullPath
			{
				[Token(Token = "0x60023B1")]
				[Address(RVA = "0x115DACC", Offset = "0x115DACC", VA = "0x115DACC", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C6")]
			public bool Exists
			{
				[Token(Token = "0x60023B2")]
				[Address(RVA = "0x115F604", Offset = "0x115F604", VA = "0x115F604", Slot = "9")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005C7")]
			public bool ReadOnly
			{
				[Token(Token = "0x60023B3")]
				[Address(RVA = "0x115F60C", Offset = "0x115F60C", VA = "0x115F60C", Slot = "10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005C8")]
			public string AssetId
			{
				[Token(Token = "0x60023B4")]
				[Address(RVA = "0x115F614", Offset = "0x115F614", VA = "0x115F614", Slot = "11")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005C9")]
			public string SourceId
			{
				[Token(Token = "0x60023B5")]
				[Address(RVA = "0x115F61C", Offset = "0x115F61C", VA = "0x115F61C", Slot = "12")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023B6")]
				[Address(RVA = "0x115F624", Offset = "0x115F624", VA = "0x115F624")]
				set
				{
				}
			}

			[Token(Token = "0x170005CA")]
			public int? TriangleCount
			{
				[Token(Token = "0x60023B7")]
				[Address(RVA = "0x115F62C", Offset = "0x115F62C", VA = "0x115F62C", Slot = "13")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CB")]
			public float Progress
			{
				[Token(Token = "0x60023B8")]
				[Address(RVA = "0x115F634", Offset = "0x115F634", VA = "0x115F634")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170005CC")]
			public DateTime LastModifiedTime
			{
				[Token(Token = "0x60023B9")]
				[Address(RVA = "0x115DB68", Offset = "0x115DB68", VA = "0x115DB68")]
				get
				{
					return default(DateTime);
				}
			}

			[Token(Token = "0x170005CD")]
			public string Source
			{
				[Token(Token = "0x60023BA")]
				[Address(RVA = "0x115F6E4", Offset = "0x115F6E4", VA = "0x115F6E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CE")]
			public string Description
			{
				[Token(Token = "0x60023BB")]
				[Address(RVA = "0x115F6EC", Offset = "0x115F6EC", VA = "0x115F6EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CF")]
			private string CachePath
			{
				[Token(Token = "0x60023BC")]
				[Address(RVA = "0x115F710", Offset = "0x115F710", VA = "0x115F710")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x115DE0C", Offset = "0x115DE0C", VA = "0x115DE0C")]
			public GoogleDriveFileInfo(Google.Apis.Drive.v3.Data.File file, string source)
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x115F798", Offset = "0x115F798", VA = "0x115F798", Slot = "14")]
			public void Delete()
			{
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x115F7D8", Offset = "0x115F7D8", VA = "0x115F7D8", Slot = "15")]
			public bool IsHeaderValid()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x115F7E0", Offset = "0x115F7E0", VA = "0x115F7E0", Slot = "16")]
			public Stream GetReadStream(string subfileName)
			{
				return null;
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x115F7FC", Offset = "0x115F7FC", VA = "0x115F7FC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4163C", Offset = "0xB4163C")]
			public IEnumerator LoadThumbnail()
			{
				return null;
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x115F868", Offset = "0x115F868", VA = "0x115F868")]
			public void UnloadThumbnail()
			{
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x115F8E0", Offset = "0x115F8E0", VA = "0x115F8E0")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4169C", Offset = "0xB4169C")]
			public Task DownloadAsync(CancellationToken token)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A308", Offset = "0xB2A308")]
		private sealed class <>c
		{
			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Task<List<Google.Apis.Drive.v3.Data.File>>> <>9__35_2;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GoogleDriveFileInfo, bool> <>9__35_3;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GoogleDriveFileInfo, DateTime> <>9__35_1;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Google.Apis.Drive.v3.Data.File, bool> <>9__36_0;

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x115D9F4", Offset = "0x115D9F4", VA = "0x115D9F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x115D9FC", Offset = "0x115D9FC", VA = "0x115D9FC")]
			internal Task<List<Google.Apis.Drive.v3.Data.File>> <EnumerateTiltFilesAsync>b__35_2()
			{
				return null;
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x115DA9C", Offset = "0x115DA9C", VA = "0x115DA9C")]
			internal bool <EnumerateTiltFilesAsync>b__35_3(GoogleDriveFileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x115DB50", Offset = "0x115DB50", VA = "0x115DB50")]
			internal DateTime <EnumerateTiltFilesAsync>b__35_1(GoogleDriveFileInfo x)
			{
				return default(DateTime);
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x115DBE8", Offset = "0x115DBE8", VA = "0x115DBE8")]
			internal bool <EnumerateTiltFilesForDevice>b__36_0(Google.Apis.Drive.v3.Data.File x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A318", Offset = "0xB2A318")]
		private struct <EnumerateTiltFilesAsync>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleDriveSketchSet <>4__this;

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private object <>7__wrap1;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<Google.Apis.Drive.v3.Data.File> <deviceFolders>5__4;

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Task<IEnumerable<GoogleDriveFileInfo>>[] <sketchTasks>5__5;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__1;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IEnumerable<GoogleDriveFileInfo>[]> <>u__2;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private object <>u__3;

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x115DF84", Offset = "0x115DF84", VA = "0x115DF84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x115EB0C", Offset = "0x115EB0C", VA = "0x115EB0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A328", Offset = "0xB2A328")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Google.Apis.Drive.v3.Data.File folder;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Google.Apis.Drive.v3.Data.File sketchFolder;

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x115DC90", Offset = "0x115DC90", VA = "0x115DC90")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x115DC98", Offset = "0x115DC98", VA = "0x115DC98")]
			internal Task<Google.Apis.Drive.v3.Data.File> <EnumerateTiltFilesForDevice>b__2()
			{
				return null;
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x115DD20", Offset = "0x115DD20", VA = "0x115DD20")]
			internal Task<List<Google.Apis.Drive.v3.Data.File>> <EnumerateTiltFilesForDevice>b__3()
			{
				return null;
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x115DD7C", Offset = "0x115DD7C", VA = "0x115DD7C")]
			internal GoogleDriveFileInfo <EnumerateTiltFilesForDevice>b__1(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A338", Offset = "0xB2A338")]
		private struct <EnumerateTiltFilesForDevice>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IEnumerable<GoogleDriveFileInfo>> <>t__builder;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Google.Apis.Drive.v3.Data.File folder;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass36_0 <>8__1;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Google.Apis.Drive.v3.Data.File> <>u__1;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<List<Google.Apis.Drive.v3.Data.File>> <>u__2;

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x115EB18", Offset = "0x115EB18", VA = "0x115EB18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x115F188", Offset = "0x115F188", VA = "0x115F188", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A348", Offset = "0xB2A348")]
		private sealed class <LoadThumbnailsCoroutine>d__37 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> requests;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleDriveSketchSet <>4__this;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator[] <loadingCoroutines>5__2;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <stillLoading>5__3;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator[] <>7__wrap3;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap4;

			[Token(Token = "0x170005D2")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60023DF")]
				[Address(RVA = "0x115F524", Offset = "0x115F524", VA = "0x115F524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E1")]
				[Address(RVA = "0x115F56C", Offset = "0x115F56C", VA = "0x115F56C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x115F1E4", Offset = "0x115F1E4", VA = "0x115F1E4")]
			[DebuggerHidden]
			public <LoadThumbnailsCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x115F210", Offset = "0x115F210", VA = "0x115F210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x115F214", Offset = "0x115F214", VA = "0x115F214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x115F52C", Offset = "0x115F52C", VA = "0x115F52C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Refreshing;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoogleDriveFileInfo[] m_Sketches;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_ThumbnailLoadingCoroutine;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_Changed;

		[Token(Token = "0x170005BB")]
		public SketchSetType Type
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xFA2490", Offset = "0xFA2490", VA = "0xFA2490", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170005BC")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0xFA2498", Offset = "0xFA2498", VA = "0xFA2498", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BD")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xFA24A8", Offset = "0xFA24A8", VA = "0xFA24A8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BE")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xFA24E0", Offset = "0xFA24E0", VA = "0xFA24E0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BF")]
		public int NumSketches
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xFA24F0", Offset = "0xFA24F0", VA = "0xFA24F0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400008B")]
		public event Action OnChanged
		{
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xFA2EC8", Offset = "0xFA2EC8", VA = "0xFA2EC8", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB414BC", Offset = "0xB414BC")]
			add
			{
			}
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xFA2F68", Offset = "0xFA2F68", VA = "0xFA2F68", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB414CC", Offset = "0xB414CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xFA3008", Offset = "0xFA3008", VA = "0xFA3008", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB414DC", Offset = "0xB414DC")]
			add
			{
			}
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xFA30A8", Offset = "0xFA30A8", VA = "0xFA30A8", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB414EC", Offset = "0xB414EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xFA2508", Offset = "0xFA2508", VA = "0xFA2508", Slot = "9")]
		public void Init()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xFA2724", Offset = "0xFA2724", VA = "0xFA2724", Slot = "10")]
		public bool IsSketchIndexValid(int iIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xFA2748", Offset = "0xFA2748", VA = "0xFA2748", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xFA28F4", Offset = "0xFA28F4", VA = "0xFA28F4", Slot = "12")]
		public bool GetSketchIcon(int i, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xFA2AB0", Offset = "0xFA2AB0", VA = "0xFA2AB0", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int i)
		{
			return null;
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xFA2B10", Offset = "0xFA2B10", VA = "0xFA2B10", Slot = "14")]
		public string GetSketchName(int i)
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xFA2BE4", Offset = "0xFA2BE4", VA = "0xFA2BE4", Slot = "15")]
		public void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xFA2C24", Offset = "0xFA2C24", VA = "0xFA2C24", Slot = "16")]
		public void PrecacheSketchModels(int i)
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xFA2D14", Offset = "0xFA2D14", VA = "0xFA2D14", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0xFA2D20", Offset = "0xFA2D20", VA = "0xFA2D20", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xFA2D2C", Offset = "0xFA2D2C", VA = "0xFA2D2C", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xFA2D30", Offset = "0xFA2D30", VA = "0xFA2D30", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xFA3148", Offset = "0xFA3148", VA = "0xFA3148")]
		private void OnDriveEnabledChanged()
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xFA25D4", Offset = "0xFA25D4", VA = "0xFA25D4")]
		private void EnumerateTiltFilesWhenReady()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xFA2DB8", Offset = "0xFA2DB8", VA = "0xFA2DB8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB414FC", Offset = "0xB414FC")]
		private Task EnumerateTiltFilesAsync()
		{
			return null;
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xFA3210", Offset = "0xFA3210", VA = "0xFA3210")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4155C", Offset = "0xB4155C")]
		private Task<IEnumerable<GoogleDriveFileInfo>> EnumerateTiltFilesForDevice(Google.Apis.Drive.v3.Data.File folder, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xFA287C", Offset = "0xFA287C", VA = "0xFA287C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB415BC", Offset = "0xB415BC")]
		private IEnumerator<Null> LoadThumbnailsCoroutine(List<int> requests)
		{
			return null;
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xFA3340", Offset = "0xFA3340", VA = "0xFA3340")]
		public GoogleDriveSketchSet()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xFA3348", Offset = "0xFA3348", VA = "0xFA3348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4161C", Offset = "0xB4161C")]
		private Task<IEnumerable<GoogleDriveFileInfo>> <EnumerateTiltFilesAsync>b__35_0(Google.Apis.Drive.v3.Data.File x)
		{
			return null;
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xFA33B4", Offset = "0xFA33B4", VA = "0xFA33B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4162C", Offset = "0xB4162C")]
		private IEnumerator <LoadThumbnailsCoroutine>b__37_0(int x)
		{
			return null;
		}
	}
	[Token(Token = "0x2000551")]
	public class GoogleUserSettings
	{
		[Token(Token = "0x2000552")]
		public class LoadSettingsFailed : Exception
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xFF5A44", Offset = "0xFF5A44", VA = "0xFF5A44")]
			public LoadSettingsFailed(string message)
			{
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xFF5AB8", Offset = "0xFF5AB8", VA = "0xFF5AB8")]
			public LoadSettingsFailed(string message, Exception inner)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000553")]
		private class UserData
		{
			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string DriveSyncFolderId;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, string> DeviceDriveFolderIds;

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xFF5B34", Offset = "0xFF5B34", VA = "0xFF5B34")]
			public UserData()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A358", Offset = "0xB2A358")]
		private struct <SetDeviceFolderIdAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string folderId;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string deviceName;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x116154C", Offset = "0x116154C", VA = "0x116154C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x11617B4", Offset = "0x11617B4", VA = "0x11617B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A368", Offset = "0xB2A368")]
		private struct <InitializeAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken cToken;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserData> <>u__1;

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x11608E0", Offset = "0x11608E0", VA = "0x11608E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023F3")]
			[Address(RVA = "0x1160BAC", Offset = "0x1160BAC", VA = "0x1160BAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A378", Offset = "0xB2A378")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemoryStream jsonStream;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x115FA7C", Offset = "0x115FA7C", VA = "0x115FA7C")]
			public <>c__DisplayClass15_0()
			{
			}
		}

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A388", Offset = "0xB2A388")]
		private sealed class <>c__DisplayClass15_1
		{
			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.CreateMediaUpload request;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass15_0 CS$<>8__locals1;

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x115FA84", Offset = "0x115FA84", VA = "0x115FA84")]
			public <>c__DisplayClass15_1()
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x115FA8C", Offset = "0x115FA8C", VA = "0x115FA8C")]
			internal Task<IUploadProgress> <SerializeToDriveAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A398", Offset = "0xB2A398")]
		private sealed class <>c__DisplayClass15_2
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.UpdateMediaUpload request;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass15_0 CS$<>8__locals2;

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x115FAEC", Offset = "0x115FAEC", VA = "0x115FAEC")]
			public <>c__DisplayClass15_2()
			{
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x115FAF4", Offset = "0x115FAF4", VA = "0x115FAF4")]
			internal Task<IUploadProgress> <SerializeToDriveAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3A8", Offset = "0xB2A3A8")]
		private struct <SerializeToDriveAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IUploadProgress> <>u__2;

			[Token(Token = "0x60023F9")]
			[Address(RVA = "0x1160BB8", Offset = "0x1160BB8", VA = "0x1160BB8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x11614F0", Offset = "0x11614F0", VA = "0x11614F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3B8", Offset = "0xB2A3B8")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FilesResource.ListRequest findRequest;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken token;

			[Token(Token = "0x60023FB")]
			[Address(RVA = "0x115FB54", Offset = "0x115FB54", VA = "0x115FB54")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x115FB5C", Offset = "0x115FB5C", VA = "0x115FB5C")]
			internal Task<FileList> <GetSettingsFileIdAsync>b__1()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3C8", Offset = "0xB2A3C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Google.Apis.Drive.v3.Data.File, DateTime?> <>9__16_0;

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x115FA50", Offset = "0x115FA50", VA = "0x115FA50")]
			public <>c()
			{
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x115FA58", Offset = "0x115FA58", VA = "0x115FA58")]
			internal DateTime? <GetSettingsFileIdAsync>b__16_0(Google.Apis.Drive.v3.Data.File x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3D8", Offset = "0xB2A3D8")]
		private struct <GetSettingsFileIdAsync>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<FileList> <>u__1;

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x11603B0", Offset = "0x11603B0", VA = "0x11603B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002401")]
			[Address(RVA = "0x1160884", Offset = "0x1160884", VA = "0x1160884", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3E8", Offset = "0xB2A3E8")]
		private struct <SetDriveSyncFolderIdAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string folderId;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002402")]
			[Address(RVA = "0xFF5858", Offset = "0xFF5858", VA = "0xFF5858", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002403")]
			[Address(RVA = "0xFF5A38", Offset = "0xFF5A38", VA = "0xFF5A38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A3F8", Offset = "0xB2A3F8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MemoryStream jsonStream;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilesResource.GetRequest downloadRequest;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x115FBB4", Offset = "0x115FBB4", VA = "0x115FBB4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0x115FBBC", Offset = "0x115FBBC", VA = "0x115FBBC")]
			internal Task<IDownloadProgress> <DeserializeFromDriveAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A408", Offset = "0xB2A408")]
		private struct <DeserializeFromDriveAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserData> <>t__builder;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken token;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GoogleUserSettings <>4__this;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IDownloadProgress> <>u__2;

			[Token(Token = "0x6002406")]
			[Address(RVA = "0x115FC18", Offset = "0x115FC18", VA = "0x115FC18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x1160354", Offset = "0x1160354", VA = "0x1160354", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40022A1")]
		private const string sm_SettingsFileName = "Settings.json";

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UserData m_UserData;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DriveService m_DriveService;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OAuth2Identity m_GoogleIdentity;

		[Token(Token = "0x170005D4")]
		public string DriveSyncFolderId
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xFA33F8", Offset = "0xFA33F8", VA = "0xFA33F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D5")]
		public bool Initialized
		{
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xFA2DA8", Offset = "0xFA2DA8", VA = "0xFA2DA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xFA3414", Offset = "0xFA3414", VA = "0xFA3414")]
		public GoogleUserSettings(OAuth2Identity googleIdentity)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xFA34B8", Offset = "0xFA34B8", VA = "0xFA34B8")]
		private void GoogleLoggedOut()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xFA34F8", Offset = "0xFA34F8", VA = "0xFA34F8")]
		public string GetDeviceFolderId(string deviceName)
		{
			return null;
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xFA357C", Offset = "0xFA357C", VA = "0xFA357C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB417CC", Offset = "0xB417CC")]
		public Task SetDeviceFolderIdAsync(string deviceName, string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xFA36A8", Offset = "0xFA36A8", VA = "0xFA36A8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4182C", Offset = "0xB4182C")]
		public Task InitializeAsync(CancellationToken cToken)
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xFA37C8", Offset = "0xFA37C8", VA = "0xFA37C8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4188C", Offset = "0xB4188C")]
		private Task<bool> SerializeToDriveAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xFA3904", Offset = "0xFA3904", VA = "0xFA3904")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB418EC", Offset = "0xB418EC")]
		private Task<string> GetSettingsFileIdAsync(CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xFA3A48", Offset = "0xFA3A48", VA = "0xFA3A48")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4194C", Offset = "0xB4194C")]
		public Task SetDriveSyncFolderIdAsync(string folderId, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xFA3B60", Offset = "0xFA3B60", VA = "0xFA3B60")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB419AC", Offset = "0xB419AC")]
		private Task<UserData> DeserializeFromDriveAsync(CancellationToken token)
		{
			return null;
		}
	}
	[Token(Token = "0x2000560")]
	public class HttpFileServer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000561")]
		public class HttpFileEntry
		{
			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextAsset Asset;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Path;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool Binary;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string ContentType;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] m_Bytes;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string m_Text;

			[Token(Token = "0x170005D6")]
			public byte[] Bytes
			{
				[Token(Token = "0x600240E")]
				[Address(RVA = "0xFF6EF8", Offset = "0xFF6EF8", VA = "0xFF6EF8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D7")]
			public string Text
			{
				[Token(Token = "0x600240F")]
				[Address(RVA = "0xFF6F00", Offset = "0xFF6F00", VA = "0xFF6F00")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0xFF6F08", Offset = "0xFF6F08", VA = "0xFF6F08")]
			public void Initialize()
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0xFF6F54", Offset = "0xFF6F54", VA = "0xFF6F54")]
			public HttpFileEntry()
			{
			}
		}

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A418", Offset = "0xB2A418")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string subPath;

			[Token(Token = "0x6002412")]
			[Address(RVA = "0xFF6ECC", Offset = "0xFF6ECC", VA = "0xFF6ECC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0xFF6ED4", Offset = "0xFF6ED4", VA = "0xFF6ED4")]
			internal bool <ReturnFile>b__0(HttpFileEntry x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB343DC", Offset = "0xB343DC")]
		[SerializeField]
		private string m_PathPrefix;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34428", Offset = "0xB34428")]
		private string m_SourceFilesPath;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34474", Offset = "0xB34474")]
		[SerializeField]
		private string m_DestinationAssetPath;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB344C0", Offset = "0xB344C0")]
		private HttpFileEntry[] m_Entries;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, string> m_Substitutions;

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x13C5834", Offset = "0x13C5834", VA = "0x13C5834")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x13C59F0", Offset = "0x13C59F0", VA = "0x13C59F0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x13C5A84", Offset = "0x13C5A84", VA = "0x13C5A84")]
		public void AddSubstitution(string from, string to)
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x13C5AF0", Offset = "0x13C5AF0", VA = "0x13C5AF0")]
		public void RemoveSubstitution(string from)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x13C5B54", Offset = "0x13C5B54", VA = "0x13C5B54")]
		private void ReturnFile(HttpListenerContext context)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x13C5E90", Offset = "0x13C5E90", VA = "0x13C5E90")]
		public HttpFileServer()
		{
		}
	}
	[Token(Token = "0x2000563")]
	public class HttpServer : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A428", Offset = "0xB2A428")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HttpListenerContext ctx;

			[Token(Token = "0x600241C")]
			[Address(RVA = "0xFF6F5C", Offset = "0xFF6F5C", VA = "0xFF6F5C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0xFF6F64", Offset = "0xFF6F64", VA = "0xFF6F64")]
			internal bool <Awake>b__1(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A438", Offset = "0xB2A438")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<HttpListenerRequest, string> handler;

			[Token(Token = "0x600241E")]
			[Address(RVA = "0xFF6FB0", Offset = "0xFF6FB0", VA = "0xFF6FB0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0xFF6FB8", Offset = "0xFF6FB8", VA = "0xFF6FB8")]
			internal void <AddHttpHandler>b__0(HttpListenerContext context)
			{
			}
		}

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_httpListenerPort;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListener m_HttpListener;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, Action<HttpListenerContext>> m_HttpRequestHandlers;

		[Token(Token = "0x170005D8")]
		public int HttpPort
		{
			[Token(Token = "0x6002414")]
			[Address(RVA = "0x13C5E98", Offset = "0x13C5E98", VA = "0x13C5E98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x13C5EA0", Offset = "0x13C5EA0", VA = "0x13C5EA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x13C6124", Offset = "0x13C6124", VA = "0x13C6124")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x13C5984", Offset = "0x13C5984", VA = "0x13C5984")]
		public void AddHttpHandler(string path, Action<HttpListenerContext> handler)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x13C6154", Offset = "0x13C6154", VA = "0x13C6154")]
		public void AddHttpHandler(string path, Func<HttpListenerRequest, string> handler)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x13C5A20", Offset = "0x13C5A20", VA = "0x13C5A20")]
		public void RemoveHttpHandler(string path)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x13C6248", Offset = "0x13C6248", VA = "0x13C6248")]
		public HttpServer()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x13C62C8", Offset = "0x13C62C8", VA = "0x13C62C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41A6C", Offset = "0xB41A6C")]
		private void <Awake>b__5_0(object o)
		{
		}
	}
	[Token(Token = "0x2000566")]
	public class LocalHttpCodeReceiver : ICodeReceiver
	{
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A448", Offset = "0xB2A448")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NameValueCollection result;

			[Token(Token = "0x6002425")]
			[Address(RVA = "0x1000008", Offset = "0x1000008", VA = "0x1000008")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x1000010", Offset = "0x1000010", VA = "0x1000010")]
			internal string <ReceiveCodeAsync>b__2(string k)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A458", Offset = "0xB2A458")]
		private sealed class <>c
		{
			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string> <>9__7_1;

			[Token(Token = "0x6002428")]
			[Address(RVA = "0xFFFFF8", Offset = "0xFFFFF8", VA = "0xFFFFF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x1000000", Offset = "0x1000000", VA = "0x1000000")]
			internal string <ReceiveCodeAsync>b__7_1(string k)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A468", Offset = "0xB2A468")]
		private struct <ReceiveCodeAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<AuthorizationCodeResponseUrl> <>t__builder;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalHttpCodeReceiver <>4__this;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken taskCancellationToken;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AuthorizationCodeRequestUrl url;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<NameValueCollection> <>u__1;

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x100002C", Offset = "0x100002C", VA = "0x100002C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0x100068C", Offset = "0x100068C", VA = "0x100068C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_LocalPath;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskCompletionSource<NameValueCollection> m_QueryString;

		[Token(Token = "0x170005D9")]
		public string RedirectUri
		{
			[Token(Token = "0x6002420")]
			[Address(RVA = "0x10D7E18", Offset = "0x10D7E18", VA = "0x10D7E18", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DA")]
		private string FinalRedirectPage
		{
			[Token(Token = "0x6002421")]
			[Address(RVA = "0x10D7EB4", Offset = "0x10D7EB4", VA = "0x10D7EB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x10D7F1C", Offset = "0x10D7F1C", VA = "0x10D7F1C")]
		public LocalHttpCodeReceiver(string localPath)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x10D7F48", Offset = "0x10D7F48", VA = "0x10D7F48", Slot = "5")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41A7C", Offset = "0xB41A7C")]
		public Task<AuthorizationCodeResponseUrl> ReceiveCodeAsync(AuthorizationCodeRequestUrl url, CancellationToken taskCancellationToken)
		{
			return null;
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x10D8080", Offset = "0x10D8080", VA = "0x10D8080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41ADC", Offset = "0xB41ADC")]
		private void <ReceiveCodeAsync>b__7_0(HttpListenerContext context)
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class OAuth2CredentialRequest
	{
		[StructLayout(3)]
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A478", Offset = "0xB2A478")]
		private struct <AuthorizeAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserCredential> <>u__2;

			[Token(Token = "0x6002435")]
			[Address(RVA = "0x100885C", Offset = "0x100885C", VA = "0x100885C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x1008DC4", Offset = "0x1008DC4", VA = "0x1008DC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A488", Offset = "0xB2A488")]
		private struct <CancelAuthorizationAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<UserCredential> <>u__1;

			[Token(Token = "0x6002437")]
			[Address(RVA = "0x1008F64", Offset = "0x1008F64", VA = "0x1008F64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0x1009310", Offset = "0x1009310", VA = "0x1009310", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A498", Offset = "0xB2A498")]
		private struct <Cancel>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002439")]
			[Address(RVA = "0x1008DD0", Offset = "0x1008DD0", VA = "0x1008DD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0x1008F58", Offset = "0x1008F58", VA = "0x1008F58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4A8", Offset = "0xB2A4A8")]
		private struct <RevokeCredential>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OAuth2CredentialRequest <>4__this;

			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600243B")]
			[Address(RVA = "0x100931C", Offset = "0x100931C", VA = "0x100931C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x1009660", Offset = "0x1009660", VA = "0x1009660", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UserCredential m_UserCredential;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskAndCts<UserCredential> m_Authorization;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Task m_Revocation;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly AuthorizationCodeInstalledApp m_AppFlow;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3451C", Offset = "0xB3451C")]
		private readonly bool <IsGoogle>k__BackingField;

		[Token(Token = "0x170005DB")]
		public UserCredential UserCredential
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xFCD3D8", Offset = "0xFCD3D8", VA = "0xFCD3D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DC")]
		public bool IsAuthorizing
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0xFCD3E0", Offset = "0xFCD3E0", VA = "0xFCD3E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005DD")]
		public bool IsGoogle
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0xFCD3F0", Offset = "0xFCD3F0", VA = "0xFCD3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41AFC", Offset = "0xB41AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xFCD3F8", Offset = "0xFCD3F8", VA = "0xFCD3F8")]
		public OAuth2CredentialRequest(ClientSecrets secrets, IEnumerable<string> scopes, string callbackPath, IDataStore dataStore)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xFCD520", Offset = "0xFCD520", VA = "0xFCD520")]
		public OAuth2CredentialRequest(ClientSecrets secrets, IEnumerable<string> scopes, string callbackPath, IDataStore dataStore, string authorizationServerUrl, string tokenServerUrl)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xFCD65C", Offset = "0xFCD65C", VA = "0xFCD65C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41B0C", Offset = "0xB41B0C")]
		public Task AuthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xFCD778", Offset = "0xFCD778", VA = "0xFCD778")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41B6C", Offset = "0xB41B6C")]
		private Task CancelAuthorizationAsync()
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xFCD87C", Offset = "0xFCD87C", VA = "0xFCD87C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41BCC", Offset = "0xB41BCC")]
		public Task Cancel()
		{
			return null;
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xFCD980", Offset = "0xFCD980", VA = "0xFCD980")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41C2C", Offset = "0xB41C2C")]
		public void RevokeCredential()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class OAuth2Identity : MonoBehaviour
	{
		[Token(Token = "0x2000570")]
		public class UserInfo
		{
			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string email;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D icon;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isGoogle;

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x10E4FFC", Offset = "0x10E4FFC", VA = "0x10E4FFC")]
			public UserInfo()
			{
			}
		}

		[Token(Token = "0x2000571")]
		public class UserInfoError : Exception
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x10E5004", Offset = "0x10E5004", VA = "0x10E5004")]
			public UserInfoError(string message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4B8", Offset = "0xB2A4B8")]
		private struct <GetAccessToken>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x600245B")]
			[Address(RVA = "0x1009C24", Offset = "0x1009C24", VA = "0x1009C24", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x1009E54", Offset = "0x1009E54", VA = "0x1009E54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4C8", Offset = "0xB2A4C8")]
		private struct <InitializeAsync>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <forTesting>5__2;

			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600245D")]
			[Address(RVA = "0x10E5660", Offset = "0x10E5660", VA = "0x10E5660", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0x10E5C48", Offset = "0x10E5C48", VA = "0x10E5C48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4D8", Offset = "0xB2A4D8")]
		private struct <AuthorizeAsync>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x10099AC", Offset = "0x10099AC", VA = "0x10099AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002460")]
			[Address(RVA = "0x1009C18", Offset = "0x1009C18", VA = "0x1009C18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4E8", Offset = "0xB2A4E8")]
		private struct <ReauthorizeAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002461")]
			[Address(RVA = "0x10E5FA0", Offset = "0x10E5FA0", VA = "0x10E5FA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002462")]
			[Address(RVA = "0x10E6178", Offset = "0x10E6178", VA = "0x10E6178", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A4F8", Offset = "0xB2A4F8")]
		private struct <LoginAsync>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002463")]
			[Address(RVA = "0x10E5C54", Offset = "0x10E5C54", VA = "0x10E5C54", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0x10E5F94", Offset = "0x10E5F94", VA = "0x10E5F94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A508", Offset = "0xB2A508")]
		private struct <Authenticate>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest www;

			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6002465")]
			[Address(RVA = "0x1009758", Offset = "0x1009758", VA = "0x1009758", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002466")]
			[Address(RVA = "0x10099A0", Offset = "0x10099A0", VA = "0x10099A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A518", Offset = "0xB2A518")]
		private struct <GetUserInfoAsync>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forTesting;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UserInfo> <>u__1;

			[Token(Token = "0x6002467")]
			[Address(RVA = "0x1009EB0", Offset = "0x1009EB0", VA = "0x1009EB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0x100A1DC", Offset = "0x100A1DC", VA = "0x100A1DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A528", Offset = "0xB2A528")]
		private sealed class <>c
		{
			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SketchfabService.AvatarRelated.inline_model, int> <>9__49_0;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<EmailAddress, bool> <>9__50_0;

			[Token(Token = "0x600246A")]
			[Address(RVA = "0x10096CC", Offset = "0x10096CC", VA = "0x10096CC")]
			public <>c()
			{
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x10096D4", Offset = "0x10096D4", VA = "0x10096D4")]
			internal int <GetUserInfoSketchfabAsync>b__49_0(SketchfabService.AvatarRelated.inline_model tup)
			{
				return default(int);
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0x10096EC", Offset = "0x10096EC", VA = "0x10096EC")]
			internal bool <GetUserInfoGoogleAsync>b__50_0(EmailAddress x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A538", Offset = "0xB2A538")]
		private struct <GetUserInfoSketchfabAsync>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserInfo> <>t__builder;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchfabService.MeDetail <ret>5__2;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<SketchfabService.MeDetail> <>u__1;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UserInfo <>7__wrap2;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Texture2D> <>u__2;

			[Token(Token = "0x600246D")]
			[Address(RVA = "0x10E50D4", Offset = "0x10E50D4", VA = "0x10E50D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x10E5604", Offset = "0x10E5604", VA = "0x10E5604", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A548", Offset = "0xB2A548")]
		private struct <GetUserInfoGoogleAsync>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserInfo> <>t__builder;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OAuth2Identity <>4__this;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool forTesting;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UserInfo <user>5__2;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Person> <>u__1;

			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<Texture2D> <>u__2;

			[Token(Token = "0x600246F")]
			[Address(RVA = "0x10E476C", Offset = "0x10E476C", VA = "0x10E476C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0x10E5078", Offset = "0x10E5078", VA = "0x10E5078", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SecretsConfig.Service m_Service;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_OAuthScopes;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] m_AdditionalDesktopOAuthScopes;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_CallbackPath;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D m_LoggedInTexture;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_TokenStorePrefix;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB345BC", Offset = "0xB345BC")]
		[SerializeField]
		private string m_AuthorizationServerUrl;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_TokenServerUrl;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UserInfo m_User;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerPrefsDataStore m_TokenDataStore;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OAuth2CredentialRequest m_CredentialRequest;

		[Token(Token = "0x170005DE")]
		public bool IsGoogle
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0xFCDEF0", Offset = "0xFCDEF0", VA = "0xFCDEF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005DF")]
		public UserCredential UserCredential
		{
			[Token(Token = "0x6002445")]
			[Address(RVA = "0xFCDF00", Offset = "0xFCDF00", VA = "0xFCDF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E0")]
		private SecretsConfig.ServiceAuthData ServiceAuthData
		{
			[Token(Token = "0x6002446")]
			[Address(RVA = "0xFCDF18", Offset = "0xFCDF18", VA = "0xFCDF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E1")]
		public string ClientId
		{
			[Token(Token = "0x6002447")]
			[Address(RVA = "0xFCDF80", Offset = "0xFCDF80", VA = "0xFCDF80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E2")]
		private string ClientSecret
		{
			[Token(Token = "0x6002448")]
			[Address(RVA = "0xFCDF9C", Offset = "0xFCDF9C", VA = "0xFCDF9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E3")]
		public UserInfo Profile
		{
			[Token(Token = "0x6002449")]
			[Address(RVA = "0xFCDFB8", Offset = "0xFCDFB8", VA = "0xFCDFB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244A")]
			[Address(RVA = "0xFCDFC0", Offset = "0xFCDFC0", VA = "0xFCDFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170005E4")]
		public bool LoggedIn
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xFCE050", Offset = "0xFCE050", VA = "0xFCE050")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E5")]
		public bool HasAccessToken
		{
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xFCE0A4", Offset = "0xFCE0A4", VA = "0xFCE0A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400008D")]
		public static event Action<OAuth2Identity> ProfileUpdated
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0xFCDA44", Offset = "0xFCDA44", VA = "0xFCDA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41CCC", Offset = "0xB41CCC")]
			add
			{
			}
			[Token(Token = "0x600243E")]
			[Address(RVA = "0xFCDB00", Offset = "0xFCDB00", VA = "0xFCDB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41CDC", Offset = "0xB41CDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public event Action OnSuccessfulAuthorization
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0xFCDBBC", Offset = "0xFCDBBC", VA = "0xFCDBBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41CEC", Offset = "0xB41CEC")]
			add
			{
			}
			[Token(Token = "0x6002440")]
			[Address(RVA = "0xFCDC5C", Offset = "0xFCDC5C", VA = "0xFCDC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41CFC", Offset = "0xB41CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event Action OnLogout
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0xFCDCFC", Offset = "0xFCDCFC", VA = "0xFCDCFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41D0C", Offset = "0xB41D0C")]
			add
			{
			}
			[Token(Token = "0x6002442")]
			[Address(RVA = "0xFCDD9C", Offset = "0xFCDD9C", VA = "0xFCDD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB41D1C", Offset = "0xB41D1C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xFCDE3C", Offset = "0xFCDE3C", VA = "0xFCDE3C")]
		public static string SetImageUrlOptions(string originalUrl)
		{
			return null;
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xFCE0E4", Offset = "0xFCE0E4", VA = "0xFCE0E4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41D2C", Offset = "0xB41D2C")]
		public Task<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xFCE204", Offset = "0xFCE204", VA = "0xFCE204")]
		private void Awake()
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xFCE21C", Offset = "0xFCE21C", VA = "0xFCE21C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41D8C", Offset = "0xB41D8C")]
		public Task InitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xFCE338", Offset = "0xFCE338", VA = "0xFCE338")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41DEC", Offset = "0xB41DEC")]
		public Task AuthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xFCE43C", Offset = "0xFCE43C", VA = "0xFCE43C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41E4C", Offset = "0xB41E4C")]
		public Task ReauthorizeAsync()
		{
			return null;
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xFCE540", Offset = "0xFCE540", VA = "0xFCE540")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41EAC", Offset = "0xB41EAC")]
		public void LoginAsync()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xFCE604", Offset = "0xFCE604", VA = "0xFCE604")]
		public void Logout()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xFCE724", Offset = "0xFCE724", VA = "0xFCE724")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41F0C", Offset = "0xB41F0C")]
		public Task Authenticate(UnityWebRequest www)
		{
			return null;
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xFCE844", Offset = "0xFCE844", VA = "0xFCE844")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41F6C", Offset = "0xB41F6C")]
		private Task GetUserInfoAsync(bool onStartup = false, bool forTesting = false)
		{
			return null;
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xFCE96C", Offset = "0xFCE96C", VA = "0xFCE96C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB41FCC", Offset = "0xB41FCC")]
		private Task<UserInfo> GetUserInfoSketchfabAsync(bool forTesting)
		{
			return null;
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xFCEA90", Offset = "0xFCEA90", VA = "0xFCEA90")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4302C", Offset = "0xB4302C")]
		private Task<UserInfo> GetUserInfoGoogleAsync(bool forTesting)
		{
			return null;
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xFCEBC8", Offset = "0xFCEBC8", VA = "0xFCEBC8")]
		public OAuth2Identity()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class PlayerPrefsDataStore : IDataStore
	{
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A558", Offset = "0xB2A558")]
		private sealed class <>c__DisplayClass5_0<T>
		{
			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string serialized;

			[Token(Token = "0x600247A")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600247B")]
			internal void <StoreAsync>b__0()
			{
			}
		}

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A568", Offset = "0xB2A568")]
		private sealed class <>c__DisplayClass6_0<T>
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key;

			[Token(Token = "0x600247C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600247D")]
			internal void <DeleteAsync>b__0()
			{
			}

			[Token(Token = "0x600247E")]
			internal void <DeleteAsync>b__1()
			{
			}
		}

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A578", Offset = "0xB2A578")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] keys;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x10EA1C0", Offset = "0x10EA1C0", VA = "0x10EA1C0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x10EA1C8", Offset = "0x10EA1C8", VA = "0x10EA1C8")]
			internal void <ClearAsync>b__0()
			{
			}
		}

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A588", Offset = "0xB2A588")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] keys;

			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x6002481")]
			[Address(RVA = "0x10EA0D8", Offset = "0x10EA0D8", VA = "0x10EA0D8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002482")]
			[Address(RVA = "0x10EA0E0", Offset = "0x10EA0E0", VA = "0x10EA0E0")]
			internal void <DeferAction>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A598", Offset = "0xB2A598")]
		private struct <DeferAction>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerPrefsDataStore <>4__this;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6002483")]
			[Address(RVA = "0x10EA250", Offset = "0x10EA250", VA = "0x10EA250", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0x10EA58C", Offset = "0x10EA58C", VA = "0x10EA58C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Prefix;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, string> m_Data;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConcurrentQueue<Action> m_UpdateActions;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_KeysKey;

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1028F18", Offset = "0x1028F18", VA = "0x1028F18")]
		public PlayerPrefsDataStore(string prefix)
		{
		}

		[Token(Token = "0x6002472")]
		public Task StoreAsync<T>(string key, T value)
		{
			return null;
		}

		[Token(Token = "0x6002473")]
		public Task DeleteAsync<T>(string key)
		{
			return null;
		}

		[Token(Token = "0x6002474")]
		public Task<T> GetAsync<T>(string key)
		{
			return null;
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x10291E0", Offset = "0x10291E0", VA = "0x10291E0", Slot = "7")]
		public Task ClearAsync()
		{
			return null;
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x10293FC", Offset = "0x10293FC", VA = "0x10293FC")]
		public TokenResponse UserTokens()
		{
			return null;
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x1029180", Offset = "0x1029180", VA = "0x1029180")]
		private string CreateKeyName(string key)
		{
			return null;
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1029334", Offset = "0x1029334", VA = "0x1029334")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4311C", Offset = "0xB4311C")]
		private void DeferAction(Action action)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1029484", Offset = "0x1029484", VA = "0x1029484")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000582")]
	public class PolySketchSet : SketchSet
	{
		[Token(Token = "0x2000583")]
		private class PolySketch : Sketch
		{
			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_DownloadIndex;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PolySceneFileInfo m_FileInfo;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Texture2D m_Icon;

			[Token(Token = "0x170005EC")]
			public SceneFileInfo SceneFileInfo
			{
				[Token(Token = "0x60024AD")]
				[Address(RVA = "0x10EFBA0", Offset = "0x10EFBA0", VA = "0x10EFBA0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005ED")]
			public string[] Authors
			{
				[Token(Token = "0x60024AE")]
				[Address(RVA = "0x10EFBA8", Offset = "0x10EFBA8", VA = "0x10EFBA8", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EE")]
			public string Title
			{
				[Token(Token = "0x60024AF")]
				[Address(RVA = "0x10EFC70", Offset = "0x10EFC70", VA = "0x10EFC70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EF")]
			public Texture2D Icon
			{
				[Token(Token = "0x60024B0")]
				[Address(RVA = "0x10EFC8C", Offset = "0x10EFC8C", VA = "0x10EFC8C", Slot = "6")]
				get
				{
					return null;
				}
				[Token(Token = "0x60024B1")]
				[Address(RVA = "0x10EFC94", Offset = "0x10EFC94", VA = "0x10EFC94")]
				set
				{
				}
			}

			[Token(Token = "0x170005F0")]
			public bool IconAndMetadataValid
			{
				[Token(Token = "0x60024B2")]
				[Address(RVA = "0x10EFC9C", Offset = "0x10EFC9C", VA = "0x10EFC9C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005F1")]
			public PolySceneFileInfo PolySceneFileInfo
			{
				[Token(Token = "0x60024B5")]
				[Address(RVA = "0x10EFD78", Offset = "0x10EFD78", VA = "0x10EFD78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x10EF3DC", Offset = "0x10EF3DC", VA = "0x10EF3DC")]
			public PolySketch(PolySceneFileInfo info)
			{
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x10EFD08", Offset = "0x10EFD08", VA = "0x10EFD08")]
			public void UnloadIcon()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5A8", Offset = "0xB2A5A8")]
		private sealed class <>c
		{
			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__25_0;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__25_1;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<PolySketch> <>9__57_0;

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x10ECFE8", Offset = "0x10ECFE8", VA = "0x10ECFE8")]
			public <>c()
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x10ECFF0", Offset = "0x10ECFF0", VA = "0x10ECFF0")]
			internal void <.ctor>b__25_0()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x10ECFF4", Offset = "0x10ECFF4", VA = "0x10ECFF4")]
			internal void <.ctor>b__25_1()
			{
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x10ECFF8", Offset = "0x10ECFF8", VA = "0x10ECFF8")]
			internal bool <RemoveFailedDownloads>b__57_0(PolySketch x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5B8", Offset = "0xB2A5B8")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<PolySketch> sketches;

			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, PolySketch> assetIds;

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x10ED04C", Offset = "0x10ED04C", VA = "0x10ED04C")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x10ED054", Offset = "0x10ED054", VA = "0x10ED054")]
			internal bool <LoadPolyAssetsFromResources>b__0(PolySceneFileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x10ED084", Offset = "0x10ED084", VA = "0x10ED084")]
			internal void <LoadPolyAssetsFromResources>b__1()
			{
			}
		}

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5C8", Offset = "0xB2A5C8")]
		private sealed class <PeriodicRefreshCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x170005F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C1")]
				[Address(RVA = "0x10EE280", Offset = "0x10EE280", VA = "0x10EE280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C3")]
				[Address(RVA = "0x10EE2C8", Offset = "0x10EE2C8", VA = "0x10EE2C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x10EE108", Offset = "0x10EE108", VA = "0x10EE108")]
			[DebuggerHidden]
			public <PeriodicRefreshCoroutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x10EE134", Offset = "0x10EE134", VA = "0x10EE134", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x10EE138", Offset = "0x10EE138", VA = "0x10EE138", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x10EE288", Offset = "0x10EE288", VA = "0x10EE288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5D8", Offset = "0xB2A5D8")]
		private sealed class <Refresh>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x170005F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C7")]
				[Address(RVA = "0x10EF748", Offset = "0x10EF748", VA = "0x10EF748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C9")]
				[Address(RVA = "0x10EF790", Offset = "0x10EF790", VA = "0x10EF790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x10EF458", Offset = "0x10EF458", VA = "0x10EF458")]
			[DebuggerHidden]
			public <Refresh>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x10EF484", Offset = "0x10EF484", VA = "0x10EF484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x10EF488", Offset = "0x10EF488", VA = "0x10EF488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x10EF750", Offset = "0x10EF750", VA = "0x10EF750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5E8", Offset = "0xB2A5E8")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x4002389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, PolySketch> assetIds;

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x10ED18C", Offset = "0x10ED18C", VA = "0x10ED18C")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x10ED194", Offset = "0x10ED194", VA = "0x10ED194")]
			internal bool <PopulateSketchesCoroutine>b__0(PolySceneFileInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x10ED1C4", Offset = "0x10ED1C4", VA = "0x10ED1C4")]
			internal bool <PopulateSketchesCoroutine>b__1(PolySketch s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A5F8", Offset = "0xB2A5F8")]
		private sealed class <PopulateSketchesCoroutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass56_0 <>8__1;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<PolySketch> <sketches>5__2;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <fromEmpty>5__3;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <loadSketchCount>5__4;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AssetLister <lister>5__5;

			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<PolySceneFileInfo> <infos>5__6;

			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <changed>5__7;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <pagesFetched>5__8;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<object> <cr>5__9;

			[Token(Token = "0x170005F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024D1")]
				[Address(RVA = "0x10EF408", Offset = "0x10EF408", VA = "0x10EF408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D3")]
				[Address(RVA = "0x10EF450", Offset = "0x10EF450", VA = "0x10EF450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x10EE2D0", Offset = "0x10EE2D0", VA = "0x10EE2D0")]
			[DebuggerHidden]
			public <PopulateSketchesCoroutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x10EE2FC", Offset = "0x10EE2FC", VA = "0x10EE2FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x10EE3D4", Offset = "0x10EE3D4", VA = "0x10EE3D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x10EE318", Offset = "0x10EE318", VA = "0x10EE318")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x10EF410", Offset = "0x10EF410", VA = "0x10EF410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A608", Offset = "0xB2A608")]
		private struct <>c__DisplayClass58_0
		{
			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool notifyOnError;
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A618", Offset = "0xB2A618")]
		private sealed class <DownloadFilesCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<PolySketch> sketches;

			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass58_0 <>8__1;

			[Token(Token = "0x400239B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x400239C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte[] <downloadBuffer>5__2;

			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<PolySketch>.Enumerator <>7__wrap2;

			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private PolySceneFileInfo <sceneFileInfo>5__4;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UnityWebRequest <www>5__5;

			[Token(Token = "0x170005F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024DB")]
				[Address(RVA = "0x10EE0B8", Offset = "0x10EE0B8", VA = "0x10EE0B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024DD")]
				[Address(RVA = "0x10EE100", Offset = "0x10EE100", VA = "0x10EE100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x10ED438", Offset = "0x10ED438", VA = "0x10ED438")]
			[DebuggerHidden]
			public <DownloadFilesCoroutine>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x10ED464", Offset = "0x10ED464", VA = "0x10ED464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x10ED7C0", Offset = "0x10ED7C0", VA = "0x10ED7C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x10ED65C", Offset = "0x10ED65C", VA = "0x10ED65C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x10ED5A0", Offset = "0x10ED5A0", VA = "0x10ED5A0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x10ED76C", Offset = "0x10ED76C", VA = "0x10ED76C")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x10ED6B0", Offset = "0x10ED6B0", VA = "0x10ED6B0")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x10EE0C0", Offset = "0x10EE0C0", VA = "0x10EE0C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A628", Offset = "0xB2A628")]
		private sealed class <DeleteOldSketchesCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Future<bool> <task>5__2;

			[Token(Token = "0x170005FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E1")]
				[Address(RVA = "0x10ED3E8", Offset = "0x10ED3E8", VA = "0x10ED3E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E3")]
				[Address(RVA = "0x10ED430", Offset = "0x10ED430", VA = "0x10ED430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x10ED240", Offset = "0x10ED240", VA = "0x10ED240")]
			[DebuggerHidden]
			public <DeleteOldSketchesCoroutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x10ED26C", Offset = "0x10ED26C", VA = "0x10ED26C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x10ED270", Offset = "0x10ED270", VA = "0x10ED270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x10ED3F0", Offset = "0x10ED3F0", VA = "0x10ED3F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A638", Offset = "0xB2A638")]
		private sealed class <TextureLoaderCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolySketchSet <>4__this;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<int>.Enumerator <>7__wrap1;

			[Token(Token = "0x170005FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0x10EFB50", Offset = "0x10EFB50", VA = "0x10EFB50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0x10EFB98", Offset = "0x10EFB98", VA = "0x10EFB98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x10EF798", Offset = "0x10EF798", VA = "0x10EF798")]
			[DebuggerHidden]
			public <TextureLoaderCoroutine>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x10EF7C4", Offset = "0x10EF7C4", VA = "0x10EF7C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x10EF834", Offset = "0x10EF834", VA = "0x10EF834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x10EF7E0", Offset = "0x10EF7E0", VA = "0x10EF7E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x10EFB58", Offset = "0x10EFB58", VA = "0x10EFB58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002362")]
		private const int kDownloadBufferSize = 1048576;

		[Token(Token = "0x4002363")]
		private const string kIntroSketchAssetId = "agqmaia62KE";

		[Token(Token = "0x4002364")]
		private const int kIntroSketchIndex = 1;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<PolySketch> m_Sketches;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, PolySketch> m_AssetIds;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_TotalCount;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VrAssetService m_AssetService;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour m_Parent;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Ready;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_RefreshRequested;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_NeedsLogin;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private bool m_LoggedIn;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_ActivelyRefreshingSketches;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_MaximumSceneTriangles;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private SketchSetType m_Type;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_CacheDir;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_RefreshCoroutine;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_CooldownTimer;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<int> m_RequestedIcons;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_TextureLoaderCoroutine;

		[Token(Token = "0x170005E6")]
		public SketchSetType Type
		{
			[Token(Token = "0x6002485")]
			[Address(RVA = "0x11ED9C4", Offset = "0x11ED9C4", VA = "0x11ED9C4", Slot = "4")]
			get
			{
				return default(SketchSetType);
			}
		}

		[Token(Token = "0x170005E7")]
		public VrAssetService VrAssetService
		{
			[Token(Token = "0x6002486")]
			[Address(RVA = "0x11ED9CC", Offset = "0x11ED9CC", VA = "0x11ED9CC")]
			set
			{
			}
		}

		[Token(Token = "0x170005E8")]
		public bool IsReadyForAccess
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0x11EDCD8", Offset = "0x11EDCD8", VA = "0x11EDCD8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E9")]
		public bool IsActivelyRefreshingSketches
		{
			[Token(Token = "0x600248A")]
			[Address(RVA = "0x11EDCE0", Offset = "0x11EDCE0", VA = "0x11EDCE0", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600248B")]
			[Address(RVA = "0x11EDCE8", Offset = "0x11EDCE8", VA = "0x11EDCE8")]
			private set
			{
			}
		}

		[Token(Token = "0x170005EA")]
		public bool RequestedIconsAreLoaded
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0x11EDD10", Offset = "0x11EDD10", VA = "0x11EDD10", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005EB")]
		public int NumSketches
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0x11EDD18", Offset = "0x11EDD18", VA = "0x11EDD18", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000090")]
		public event Action OnChanged
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x11EF2A0", Offset = "0x11EF2A0", VA = "0x11EF2A0", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4318C", Offset = "0xB4318C")]
			add
			{
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x11EF340", Offset = "0x11EF340", VA = "0x11EF340", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4319C", Offset = "0xB4319C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event Action OnSketchRefreshingChanged
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x11EF3E0", Offset = "0x11EF3E0", VA = "0x11EF3E0", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB431AC", Offset = "0xB431AC")]
			add
			{
			}
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x11EF480", Offset = "0x11EF480", VA = "0x11EF480", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB431BC", Offset = "0xB431BC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x11ED9D4", Offset = "0x11ED9D4", VA = "0x11ED9D4")]
		public PolySketchSet(MonoBehaviour parent, SketchSetType type, int maxSceneTriangles, bool needsLogin = false)
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x11EDC48", Offset = "0x11EDC48", VA = "0x11EDC48", Slot = "9")]
		public void Init()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x11EDD20", Offset = "0x11EDD20", VA = "0x11EDD20", Slot = "17")]
		public void NotifySketchCreated(string fullpath)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x11EDD24", Offset = "0x11EDD24", VA = "0x11EDD24", Slot = "18")]
		public void NotifySketchChanged(string fullpath)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x11EDD28", Offset = "0x11EDD28", VA = "0x11EDD28", Slot = "19")]
		public void RequestRefresh()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x11EDD34", Offset = "0x11EDD34", VA = "0x11EDD34")]
		public void LoadPolyAssetsFromResources()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x11EEA44", Offset = "0x11EEA44", VA = "0x11EEA44", Slot = "10")]
		public bool IsSketchIndexValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x11EEA60", Offset = "0x11EEA60", VA = "0x11EEA60", Slot = "11")]
		public void RequestOnlyLoadedMetadata(List<int> requests)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x11EEC7C", Offset = "0x11EEC7C", VA = "0x11EEC7C", Slot = "12")]
		public bool GetSketchIcon(int iSketchIndex, out Texture2D icon, out string[] authors, out string description)
		{
			return default(bool);
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x11EED8C", Offset = "0x11EED8C", VA = "0x11EED8C", Slot = "13")]
		public SceneFileInfo GetSketchSceneFileInfo(int i)
		{
			return null;
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x11EEE20", Offset = "0x11EEE20", VA = "0x11EEE20", Slot = "14")]
		public string GetSketchName(int i)
		{
			return null;
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x11EEF38", Offset = "0x11EEF38", VA = "0x11EEF38", Slot = "16")]
		public void PrecacheSketchModels(int i)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x11EF044", Offset = "0x11EF044", VA = "0x11EF044", Slot = "15")]
		public void DeleteSketch(int toDelete)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x11EF084", Offset = "0x11EF084", VA = "0x11EF084", Slot = "20")]
		public void Update()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x11EF234", Offset = "0x11EF234", VA = "0x11EF234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB431CC", Offset = "0xB431CC")]
		private IEnumerator PeriodicRefreshCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x11EF520", Offset = "0x11EF520", VA = "0x11EF520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4322C", Offset = "0xB4322C")]
		private IEnumerator Refresh()
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x11EF58C", Offset = "0x11EF58C", VA = "0x11EF58C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4328C", Offset = "0xB4328C")]
		private IEnumerator PopulateSketchesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x11EF5F8", Offset = "0x11EF5F8", VA = "0x11EF5F8")]
		private void RemoveFailedDownloads(List<PolySketch> sketches)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x11EE9C8", Offset = "0x11EE9C8", VA = "0x11EE9C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB432EC", Offset = "0xB432EC")]
		private IEnumerator DownloadFilesCoroutine(List<PolySketch> sketches, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x11EF718", Offset = "0x11EF718", VA = "0x11EF718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4334C", Offset = "0xB4334C")]
		private IEnumerator DeleteOldSketchesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x11EEC10", Offset = "0x11EEC10", VA = "0x11EEC10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB433AC", Offset = "0xB433AC")]
		private IEnumerator TextureLoaderCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x11EE8A4", Offset = "0x11EE8A4", VA = "0x11EE8A4")]
		private static string CacheDir(SketchSetType type)
		{
			return null;
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x11EF784", Offset = "0x11EF784", VA = "0x11EF784")]
		private static int CompareSketchesByTriangleCountAndDownloadIndex(PolySketch a, PolySketch b)
		{
			return default(int);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x11EF7EC", Offset = "0x11EF7EC", VA = "0x11EF7EC")]
		private static int CloudSketchComplexityBucket(PolySketch s)
		{
			return default(int);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x11EF828", Offset = "0x11EF828", VA = "0x11EF828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4340C", Offset = "0xB4340C")]
		internal static void <DownloadFilesCoroutine>g__NotifyCreateError|58_0(PolySceneFileInfo sceneFileInfo, string type, Exception ex, ref <>c__DisplayClass58_0 P_3)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x11EFA7C", Offset = "0x11EFA7C", VA = "0x11EFA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4341C", Offset = "0xB4341C")]
		internal static void <DownloadFilesCoroutine>g__NotifyWriteError|58_1(PolySceneFileInfo sceneFileInfo, string type, UnityWebRequest www, ref <>c__DisplayClass58_0 P_3)
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x11EFDCC", Offset = "0x11EFDCC", VA = "0x11EFDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4342C", Offset = "0xB4342C")]
		private bool <DeleteOldSketchesCoroutine>b__59_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x11F0148", Offset = "0x11F0148", VA = "0x11F0148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4343C", Offset = "0xB4343C")]
		private bool <DeleteOldSketchesCoroutine>b__59_1(FileInfo f)
		{
			return default(bool);
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x11F0210", Offset = "0x11F0210", VA = "0x11F0210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4344C", Offset = "0xB4344C")]
		private bool <TextureLoaderCoroutine>b__60_0(int i)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200058E")]
	public class PolySceneFileInfo : SceneFileInfo
	{
		[Serializable]
		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A648", Offset = "0xB2A648")]
		private sealed class <>c
		{
			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JToken, bool> <>9__10_0;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<JToken, bool> <>9__10_1;

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x10ECE60", Offset = "0x10ECE60", VA = "0x10ECE60")]
			public <>c()
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x10ECE68", Offset = "0x10ECE68", VA = "0x10ECE68")]
			internal bool <.ctor>b__10_0(JToken x)
			{
				return default(bool);
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x10ECEF8", Offset = "0x10ECEF8", VA = "0x10ECEF8")]
			internal bool <.ctor>b__10_1(JToken x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_AssetId;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_HumanName;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_License;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_localTiltFile;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_localIcon;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_TiltFileUrl;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_IconUrl;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_GltfTriangleCount;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TiltFile m_DownloadedFile;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_IconDownloaded;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34638", Offset = "0xB34638")]
		private string <Author>k__BackingField;

		[Token(Token = "0x170005FE")]
		public FileInfoType InfoType
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x11ED650", Offset = "0x11ED650", VA = "0x11ED650", Slot = "4")]
			get
			{
				return default(FileInfoType);
			}
		}

		[Token(Token = "0x170005FF")]
		public string HumanName
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x11ED658", Offset = "0x11ED658", VA = "0x11ED658", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000600")]
		public string Author
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x11ED660", Offset = "0x11ED660", VA = "0x11ED660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4363C", Offset = "0xB4363C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x11ED668", Offset = "0x11ED668", VA = "0x11ED668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4364C", Offset = "0xB4364C")]
			set
			{
			}
		}

		[Token(Token = "0x17000601")]
		public bool Valid
		{
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x11ED670", Offset = "0x11ED670", VA = "0x11ED670", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000602")]
		public bool Available
		{
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x11ED678", Offset = "0x11ED678", VA = "0x11ED678", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000603")]
		public string FullPath
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x11ED688", Offset = "0x11ED688", VA = "0x11ED688", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000604")]
		public bool Exists
		{
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x11ED690", Offset = "0x11ED690", VA = "0x11ED690", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000605")]
		public bool ReadOnly
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x11ED698", Offset = "0x11ED698", VA = "0x11ED698", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000606")]
		public string SourceId
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x11ED6A0", Offset = "0x11ED6A0", VA = "0x11ED6A0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000607")]
		public string AssetId
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x11ED6F0", Offset = "0x11ED6F0", VA = "0x11ED6F0", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000608")]
		public string TiltFileUrl
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x11ED6F8", Offset = "0x11ED6F8", VA = "0x11ED6F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000609")]
		public string IconUrl
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x11ED700", Offset = "0x11ED700", VA = "0x11ED700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060A")]
		public string License
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x11ED708", Offset = "0x11ED708", VA = "0x11ED708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060B")]
		public string TiltPath
		{
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x11ED710", Offset = "0x11ED710", VA = "0x11ED710")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x11ED718", Offset = "0x11ED718", VA = "0x11ED718")]
			set
			{
			}
		}

		[Token(Token = "0x1700060C")]
		public string IconPath
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x11ED720", Offset = "0x11ED720", VA = "0x11ED720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002500")]
			[Address(RVA = "0x11ED728", Offset = "0x11ED728", VA = "0x11ED728")]
			set
			{
			}
		}

		[Token(Token = "0x1700060D")]
		public bool IconDownloaded
		{
			[Token(Token = "0x6002501")]
			[Address(RVA = "0x11ED730", Offset = "0x11ED730", VA = "0x11ED730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002502")]
			[Address(RVA = "0x11ED738", Offset = "0x11ED738", VA = "0x11ED738")]
			set
			{
			}
		}

		[Token(Token = "0x1700060E")]
		public bool TiltDownloaded
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0x11ED744", Offset = "0x11ED744", VA = "0x11ED744")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002504")]
			[Address(RVA = "0x11ED754", Offset = "0x11ED754", VA = "0x11ED754")]
			set
			{
			}
		}

		[Token(Token = "0x1700060F")]
		public int? TriangleCount
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0x11ED7D0", Offset = "0x11ED7D0", VA = "0x11ED7D0", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		public int GltfTriangleCount
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0x11ED8FC", Offset = "0x11ED8FC", VA = "0x11ED8FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x11ED104", Offset = "0x11ED104", VA = "0x11ED104")]
		public PolySceneFileInfo(JToken json)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x11ED5E4", Offset = "0x11ED5E4", VA = "0x11ED5E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x11ED6A8", Offset = "0x11ED6A8", VA = "0x11ED6A8", Slot = "14")]
		public void Delete()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x11ED6E8", Offset = "0x11ED6E8", VA = "0x11ED6E8", Slot = "15")]
		public bool IsHeaderValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x11ED834", Offset = "0x11ED834", VA = "0x11ED834", Slot = "16")]
		public Stream GetReadStream(string subfileName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000590")]
	internal class ProfileButton : OptionButton
	{
		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Texture2D m_AnonymousTexture;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private string m_LoggedInText;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private string m_LogInText;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private OAuth2Identity m_Identity;

		[Token(Token = "0x40023BA")]
		private const string kIconSizeSuffix = "?sz=128";

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x11F2E34", Offset = "0x11F2E34", VA = "0x11F2E34", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x11F3058", Offset = "0x11F3058", VA = "0x11F3058", Slot = "9")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x11F3138", Offset = "0x11F3138", VA = "0x11F3138", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x11F2EE4", Offset = "0x11F2EE4", VA = "0x11F2EE4")]
		private void RefreshButtons()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x11F31D4", Offset = "0x11F31D4", VA = "0x11F31D4")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x11F31D8", Offset = "0x11F31D8", VA = "0x11F31D8", Slot = "39")]
		public override void UpdateButtonState(bool bActivateInputValid)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x11F32D8", Offset = "0x11F32D8", VA = "0x11F32D8", Slot = "27")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x11F33C0", Offset = "0x11F33C0", VA = "0x11F33C0")]
		public ProfileButton()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class ReplaceTiltBrushAppName : MonoBehaviour
	{
		[Token(Token = "0x6002514")]
		[Address(RVA = "0xFB74B0", Offset = "0xFB74B0", VA = "0xFB74B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xFB7554", Offset = "0xFB7554", VA = "0xFB7554")]
		public ReplaceTiltBrushAppName()
		{
		}
	}
	[Token(Token = "0x2000592")]
	internal class SketchfabService
	{
		[Token(Token = "0x2000593")]
		public interface Paginated
		{
			[Token(Token = "0x17000611")]
			string NextUri
			{
				[Token(Token = "0x600251D")]
				get;
			}

			[Token(Token = "0x17000612")]
			string PreviousUri
			{
				[Token(Token = "0x600251E")]
				get;
			}
		}

		[Serializable]
		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A658", Offset = "0xB2A658")]
		public class AvatarRelated
		{
			[Serializable]
			[Token(Token = "0x2000595")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A668", Offset = "0xB2A668")]
			public class inline_model
			{
				[Token(Token = "0x40023C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x40023C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int width;

				[Token(Token = "0x40023C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int height;

				[Token(Token = "0x40023C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int size;

				[Token(Token = "0x6002520")]
				[Address(RVA = "0x210E130", Offset = "0x210E130", VA = "0x210E130")]
				public inline_model()
				{
				}
			}

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model[] images;

			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uri;

			[Token(Token = "0x600251F")]
			[Address(RVA = "0xF212D4", Offset = "0xF212D4", VA = "0xF212D4")]
			public AvatarRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A678", Offset = "0xB2A678")]
		public class TagRelated
		{
			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string slug;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string uri;

			[Token(Token = "0x6002521")]
			[Address(RVA = "0xF21424", Offset = "0xF21424", VA = "0xF21424")]
			public TagRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A688", Offset = "0xB2A688")]
		public class ThumbnailsRelated
		{
			[Serializable]
			[Token(Token = "0x2000598")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A698", Offset = "0xB2A698")]
			public class inline_model_2
			{
				[Token(Token = "0x40023C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x40023C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int width;

				[Token(Token = "0x40023C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int size;

				[Token(Token = "0x40023CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string uid;

				[Token(Token = "0x40023CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int height;

				[Token(Token = "0x6002523")]
				[Address(RVA = "0x210E150", Offset = "0x210E150", VA = "0x210E150")]
				public inline_model_2()
				{
				}
			}

			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model_2[] images;

			[Token(Token = "0x6002522")]
			[Address(RVA = "0xF2142C", Offset = "0xF2142C", VA = "0xF2142C")]
			public ThumbnailsRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6A8", Offset = "0xB2A6A8")]
		public class UserRelated
		{
			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string username;

			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string profileUrl;

			[Token(Token = "0x40023CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string account;

			[Token(Token = "0x40023CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string displayName;

			[Token(Token = "0x40023D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string uid;

			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AvatarRelated[] avatars;

			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string uri;

			[Token(Token = "0x6002524")]
			[Address(RVA = "0xF21434", Offset = "0xF21434", VA = "0xF21434")]
			public UserRelated()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6B8", Offset = "0xB2A6B8")]
		public class Options
		{
			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, string> background;

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xF2130C", Offset = "0xF2130C", VA = "0xF2130C")]
			public void SetBackgroundColor(Color color)
			{
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0xF2141C", Offset = "0xF2141C", VA = "0xF2141C")]
			public Options()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6C8", Offset = "0xB2A6C8")]
		public class MeDetail
		{
			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string uid;

			[Token(Token = "0x40023D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string modelsUrl;

			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int modelCount;

			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string email;

			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string website;

			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string account;

			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string displayName;

			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string profileUrl;

			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string uri;

			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string username;

			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public AvatarRelated avatar;

			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool isLimited;

			[Token(Token = "0x6002527")]
			[Address(RVA = "0xF212DC", Offset = "0xF212DC", VA = "0xF212DC")]
			public MeDetail()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6D8", Offset = "0xB2A6D8")]
		public class ModelDetail
		{
			[Serializable]
			[Token(Token = "0x200059D")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6E8", Offset = "0xB2A6E8")]
			public class File
			{
				[Token(Token = "0x40023F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int wireframeSize;

				[Token(Token = "0x40023F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int flag;

				[Token(Token = "0x40023F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string version;

				[Token(Token = "0x40023F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int modelSize;

				[Token(Token = "0x40023F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public string uri;

				[Token(Token = "0x40023F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public int osgjsSize;

				[Token(Token = "0x40023F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public JObject metadata;

				[Token(Token = "0x6002529")]
				[Address(RVA = "0x210E138", Offset = "0x210E138", VA = "0x210E138")]
				public File()
				{
				}
			}

			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JObject status;

			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public File[] files;

			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TagRelated[] tags;

			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string viewerUrl;

			[Token(Token = "0x40023E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string publishedAt;

			[Token(Token = "0x40023E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int likeCount;

			[Token(Token = "0x40023E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int commentCount;

			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int vertexCount;

			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UserRelated user;

			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isDownloadable;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string description;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string name;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public JObject license;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string editorUrl;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string uri;

			[Token(Token = "0x40023F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public int faceCount;

			[Token(Token = "0x40023F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public ThumbnailsRelated thumbnails;

			[Token(Token = "0x40023F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public JObject options;

			[Token(Token = "0x6002528")]
			[Address(RVA = "0xF212E4", Offset = "0xF212E4", VA = "0xF212E4")]
			public ModelDetail()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A6F8", Offset = "0xB2A6F8")]
		public class ModelDownload
		{
			[Serializable]
			[Token(Token = "0x200059F")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A708", Offset = "0xB2A708")]
			public class inline_model_1
			{
				[Token(Token = "0x40023FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string url;

				[Token(Token = "0x40023FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int expires;

				[Token(Token = "0x600252B")]
				[Address(RVA = "0x210E140", Offset = "0x210E140", VA = "0x210E140")]
				public inline_model_1()
				{
				}
			}

			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public inline_model_1 gltf;

			[Token(Token = "0x600252A")]
			[Address(RVA = "0xF212EC", Offset = "0xF212EC", VA = "0xF212EC")]
			public ModelDownload()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A718", Offset = "0xB2A718")]
		public class ModelLikesResponse : Paginated
		{
			[Serializable]
			[Token(Token = "0x20005A1")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A728", Offset = "0xB2A728")]
			public class ModelLikesList
			{
				[Token(Token = "0x4002400")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string uid;

				[Token(Token = "0x4002401")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string viewerUrl;

				[Token(Token = "0x4002402")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public bool isProtected;

				[Token(Token = "0x4002403")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int vertexCount;

				[Token(Token = "0x4002404")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public UserRelated user;

				[Token(Token = "0x4002405")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public bool isDownloadable;

				[Token(Token = "0x4002406")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public string description;

				[Token(Token = "0x4002407")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public string name;

				[Token(Token = "0x4002408")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public string uri;

				[Token(Token = "0x4002409")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				public int faceCount;

				[Token(Token = "0x400240A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				public ThumbnailsRelated thumbnails;

				[Token(Token = "0x600252F")]
				[Address(RVA = "0x210E148", Offset = "0x210E148", VA = "0x210E148")]
				public ModelLikesList()
				{
				}
			}

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string previous;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string next;

			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ModelLikesList[] results;

			[Token(Token = "0x17000613")]
			private string TiltBrush.SketchfabService.Paginated.NextUri
			{
				[Token(Token = "0x600252C")]
				[Address(RVA = "0xF212F4", Offset = "0xF212F4", VA = "0xF212F4", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000614")]
			private string TiltBrush.SketchfabService.Paginated.PreviousUri
			{
				[Token(Token = "0x600252D")]
				[Address(RVA = "0xF212FC", Offset = "0xF212FC", VA = "0xF212FC", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600252E")]
			[Address(RVA = "0xF21304", Offset = "0xF21304", VA = "0xF21304")]
			public ModelLikesResponse()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xB2A738", Offset = "0xB2A738")]
		public struct CreateResponse
		{
			[Token(Token = "0x400240B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string uid;

			[Token(Token = "0x400240C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string uri;
		}

		[Serializable]
		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A748", Offset = "0xB2A748")]
		private sealed class <>c__10<T> where T : Paginated
		{
			[Token(Token = "0x400240D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Task<WebRequest.Reply>, T> <>9__10_0;

			[Token(Token = "0x6002531")]
			public <>c__10()
			{
			}

			[Token(Token = "0x6002532")]
			internal T <GetNextPageAsync>b__10_0(Task<WebRequest.Reply> antecedent)
			{
				return (T)null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A758", Offset = "0xB2A758")]
		private struct <GetUserInfo>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<MeDetail> <>t__builder;

			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002533")]
			[Address(RVA = "0xF20FE8", Offset = "0xF20FE8", VA = "0xF20FE8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002534")]
			[Address(RVA = "0xF21278", Offset = "0xF21278", VA = "0xF21278", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A768", Offset = "0xB2A768")]
		private struct <GetModelDetail>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4002413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ModelDetail> <>t__builder;

			[Token(Token = "0x4002415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002535")]
			[Address(RVA = "0xF209D8", Offset = "0xF209D8", VA = "0xF209D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002536")]
			[Address(RVA = "0xF20C78", Offset = "0xF20C78", VA = "0xF20C78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A778", Offset = "0xB2A778")]
		private struct <GetModelDownload>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ModelDownload> <>t__builder;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uid;

			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchfabService <>4__this;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002537")]
			[Address(RVA = "0xF20CD4", Offset = "0xF20CD4", VA = "0xF20CD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002538")]
			[Address(RVA = "0xF20F8C", Offset = "0xF20F8C", VA = "0xF20F8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A788", Offset = "0xB2A788")]
		private sealed class <>c
		{
			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Task<WebRequest.Reply>, ModelLikesResponse> <>9__17_0;

			[Token(Token = "0x600253A")]
			[Address(RVA = "0xF20258", Offset = "0xF20258", VA = "0xF20258")]
			public <>c()
			{
			}

			[Token(Token = "0x600253B")]
			[Address(RVA = "0xF20260", Offset = "0xF20260", VA = "0xF20260")]
			internal ModelLikesResponse <GetMeLikes>b__17_0(Task<WebRequest.Reply> antecedent)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A798", Offset = "0xB2A798")]
		private struct <CreateModel>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<CreateResponse> <>t__builder;

			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchfabService <>4__this;

			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Options options;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IProgress<double> progress;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string zipPath;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public CancellationToken token;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string temporaryDirectory;

			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x600253C")]
			[Address(RVA = "0xF202E8", Offset = "0xF202E8", VA = "0xF202E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0xF2097C", Offset = "0xF2097C", VA = "0xF2097C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40023BB")]
		public const string kModelLandingPage = "https://sketchfab.com/3d-models/";

		[Token(Token = "0x40023BC")]
		private const string kApiHost = "https://api.sketchfab.com";

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly OAuth2Identity m_identity;

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x1072CE4", Offset = "0x1072CE4", VA = "0x1072CE4")]
		public SketchfabService(OAuth2Identity identity)
		{
		}

		[Token(Token = "0x6002517")]
		public Task<T> GetNextPageAsync<T>(Task<T> task) where T : Paginated
		{
			return null;
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1072D10", Offset = "0x1072D10", VA = "0x1072D10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4365C", Offset = "0xB4365C")]
		public Task<MeDetail> GetUserInfo()
		{
			return null;
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1072E30", Offset = "0x1072E30", VA = "0x1072E30")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB436BC", Offset = "0xB436BC")]
		public Task<ModelDetail> GetModelDetail(string uid)
		{
			return null;
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1072F74", Offset = "0x1072F74", VA = "0x1072F74")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4371C", Offset = "0xB4371C")]
		public Task<ModelDownload> GetModelDownload(string uid)
		{
			return null;
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x10730B8", Offset = "0x10730B8", VA = "0x10730B8")]
		public Task<ModelLikesResponse> GetMeLikes()
		{
			return null;
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x1073258", Offset = "0x1073258", VA = "0x1073258")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4377C", Offset = "0xB4377C")]
		public Task<CreateResponse> CreateModel(string name, string zipPath, IProgress<double> progress, CancellationToken token, [Optional] Options options, [Optional] string temporaryDirectory)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A9")]
	internal class UploadPopUpWindow : OptionsPopUpWindow
	{
		[Token(Token = "0x20005AA")]
		private enum DisplayMode
		{
			[Token(Token = "0x4002443")]
			Blank,
			[Token(Token = "0x4002444")]
			Loggedout,
			[Token(Token = "0x4002445")]
			Confirming,
			[Token(Token = "0x4002446")]
			Uploading,
			[Token(Token = "0x4002447")]
			UploadComplete,
			[Token(Token = "0x4002448")]
			UploadFailed,
			[Token(Token = "0x4002449")]
			UploadingDenied,
			[Token(Token = "0x400244A")]
			Waiting,
			[Token(Token = "0x400244B")]
			EmbeddedMediaWarningPoly,
			[Token(Token = "0x400244C")]
			EmbeddedMediaWarningSketchfab,
			[Token(Token = "0x400244D")]
			NothingToUploadWarning,
			[Token(Token = "0x400244E")]
			ConnectionError,
			[Token(Token = "0x400244F")]
			OutOfDate
		}

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Renderer m_Progress;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_LoginOnDesktopObjects;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_ConfirmObjects;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_PolyLoggedInObjects;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_PolyLoggedOutObjects;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject m_SketchfabLoggedInObjects;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject m_SketchfabLoggedOutObjects;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private TextMeshPro m_PolyUserName;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TextMeshPro m_SketchfabUserName;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Renderer m_GooglePhoto;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Renderer m_SketchfabPhoto;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject m_UploadObjects;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private GameObject m_UploadCompleteObjects;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private GameObject m_UploadFailedObjects;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private TextMeshPro m_UploadFailedMessage;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private GameObject m_UploadingDeniedObjects;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private GameObject m_WaitObjects;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private GameObject m_EmbeddedMediaWarningPoly;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GameObject m_EmbeddedMediaWarningSketchfab;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private GameObject m_NothingToUploadWarning;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_ConnectionErrorObjects;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private GameObject m_OutOfDateObjects;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private GameObject m_CloseButton;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private VrAssetService m_AssetService;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Cloud m_LoggingInType;

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x12493D8", Offset = "0x12493D8", VA = "0x12493D8", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x1249808", Offset = "0x1249808", VA = "0x1249808")]
		private void SetMode(DisplayMode displayMode)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x1249610", Offset = "0x1249610", VA = "0x1249610")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x1249A74", Offset = "0x1249A74", VA = "0x1249A74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x1249B88", Offset = "0x1249B88", VA = "0x1249B88", Slot = "5")]
		public override void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x1249B8C", Offset = "0x1249B8C", VA = "0x1249B8C", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x124996C", Offset = "0x124996C", VA = "0x124996C")]
		private (TextMeshPro, GameObject, GameObject, Renderer) GetUiFor(Cloud cloud)
		{
			return default((TextMeshPro, GameObject, GameObject, Renderer));
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x1249734", Offset = "0x1249734", VA = "0x1249734")]
		private void RefreshUploadButton(Cloud backend)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x1249DB4", Offset = "0x1249DB4", VA = "0x1249DB4")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x1249DBC", Offset = "0x1249DBC", VA = "0x1249DBC")]
		private void OnClose()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x1249DD8", Offset = "0x1249DD8", VA = "0x1249DD8")]
		private void OnOperationStackChanged()
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x1249F2C", Offset = "0x1249F2C", VA = "0x1249F2C")]
		public void UserPressedLoginButton(int param)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x1249F58", Offset = "0x1249F58", VA = "0x1249F58")]
		public void UserPressedUploadButton(Cloud cloud, Action onSafeToUpload)
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x124A070", Offset = "0x124A070", VA = "0x124A070")]
		public UploadPopUpWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AB")]
	public enum Cloud
	{
		[Token(Token = "0x4002451")]
		None,
		[Token(Token = "0x4002452")]
		Poly,
		[Token(Token = "0x4002453")]
		Sketchfab
	}
	[Serializable]
	[Token(Token = "0x20005AC")]
	public enum VrAssetFormat
	{
		[Token(Token = "0x4002455")]
		Unknown,
		[Token(Token = "0x4002456")]
		TILT,
		[Token(Token = "0x4002457")]
		GLTF,
		[Token(Token = "0x4002458")]
		GLTF2
	}
	[Token(Token = "0x20005AD")]
	public class VrAssetService : MonoBehaviour
	{
		[Token(Token = "0x20005AE")]
		private enum UploadStep
		{
			[Token(Token = "0x4002471")]
			CreateGltf,
			[Token(Token = "0x4002472")]
			CreateTilt,
			[Token(Token = "0x4002473")]
			ZipElements,
			[Token(Token = "0x4002474")]
			UploadElements,
			[Token(Token = "0x4002475")]
			UpdateAssetData,
			[Token(Token = "0x4002476")]
			Done
		}

		[Token(Token = "0x20005AF")]
		private class StreamWithReadProgress : WrappedStream
		{
			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3488C", Offset = "0xB3488C")]
			private int <TotalRead>k__BackingField;

			[Token(Token = "0x17000620")]
			public int TotalRead
			{
				[Token(Token = "0x600256C")]
				[Address(RVA = "0x210293C", Offset = "0x210293C", VA = "0x210293C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43B2C", Offset = "0xB43B2C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600256D")]
				[Address(RVA = "0x2102944", Offset = "0x2102944", VA = "0x2102944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43B3C", Offset = "0xB43B3C")]
				private set
				{
				}
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0x210294C", Offset = "0x210294C", VA = "0x210294C")]
			public StreamWithReadProgress(string filename)
			{
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0x2102990", Offset = "0x2102990", VA = "0x2102990", Slot = "31")]
			public override int Read(byte[] buffer, int offset, int count)
			{
				return default(int);
			}

			[Token(Token = "0x6002570")]
			[Address(RVA = "0x21029C0", Offset = "0x21029C0", VA = "0x21029C0", Slot = "32")]
			public override int ReadByte()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005B0")]
		private class UploadInfo : IProgress<double>
		{
			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly FileInfo m_sourceFile;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly byte[] m_sourceData;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly string m_remoteName;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly long m_length;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string m_elementId;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public double m_uploadPercent;

			[Token(Token = "0x6002571")]
			[Address(RVA = "0x2102B70", Offset = "0x2102B70", VA = "0x2102B70")]
			public UploadInfo(string sourceFile, string remoteName)
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0x2102C08", Offset = "0x2102C08", VA = "0x2102C08")]
			public UploadInfo(byte[] data, string remoteName)
			{
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x2102C50", Offset = "0x2102C50", VA = "0x2102C50")]
			public void SetUploaded(string elementId)
			{
			}

			[Token(Token = "0x6002574")]
			[Address(RVA = "0x2102C58", Offset = "0x2102C58", VA = "0x2102C58")]
			public Stream OpenStream()
			{
				return null;
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x2102CDC", Offset = "0x2102CDC", VA = "0x2102CDC", Slot = "4")]
			private void System.IProgress<System.Double>.Report(double value)
			{
			}
		}

		[Token(Token = "0x20005B1")]
		private class TemporaryUploadDirectory : IDisposable
		{
			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB3489C", Offset = "0xB3489C")]
			private readonly string <Value>k__BackingField;

			[Token(Token = "0x17000621")]
			public string Value
			{
				[Token(Token = "0x6002576")]
				[Address(RVA = "0x21029F0", Offset = "0x21029F0", VA = "0x21029F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43B4C", Offset = "0xB43B4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0x21029F8", Offset = "0x21029F8", VA = "0x21029F8")]
			public TemporaryUploadDirectory()
			{
			}

			[Token(Token = "0x6002578")]
			[Address(RVA = "0x2102B2C", Offset = "0x2102B2C", VA = "0x2102B2C", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		private enum PolyStatus
		{
			[Token(Token = "0x4002480")]
			Ok,
			[Token(Token = "0x4002481")]
			Disabled,
			[Token(Token = "0x4002482")]
			NoConnection
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7A8", Offset = "0xB2A7A8")]
		private struct <IsMutableAssetIdAsync>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetId;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FileInfoType type;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string userId;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string apiHost;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x6002579")]
			[Address(RVA = "0xF2D7EC", Offset = "0xF2D7EC", VA = "0xF2D7EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600257A")]
			[Address(RVA = "0xF2DE20", Offset = "0xF2DE20", VA = "0xF2DE20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7B8", Offset = "0xB2A7B8")]
		private struct <UploadCurrentSketchAsync>d__56 : IAsyncStateMachine
		{
			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isDemoUpload;

			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VrAssetService <>4__this;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Task> <>u__1;

			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TemporaryUploadDirectory <tempUploadDir>5__2;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB348AC", Offset = "0xB348AC")]
			private TaskAwaiter<(string, long)> <>u__2;

			[Token(Token = "0x600257B")]
			[Address(RVA = "0xF2E810", Offset = "0xF2E810", VA = "0xF2E810", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600257C")]
			[Address(RVA = "0xF2F6A8", Offset = "0xF2F6A8", VA = "0xF2F6A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7C8", Offset = "0xB2A7C8")]
		private struct <GetPolyStatus>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<PolyStatus> <>t__builder;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter<WebRequest.Reply> <>u__1;

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xF2C8DC", Offset = "0xF2C8DC", VA = "0xF2C8DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600257E")]
			[Address(RVA = "0xF2CEF0", Offset = "0xF2CEF0", VA = "0xF2CEF0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7D8", Offset = "0xB2A7D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<long, string, long> <>9__61_0;

			[Token(Token = "0x6002580")]
			[Address(RVA = "0xF2B4E0", Offset = "0xF2B4E0", VA = "0xF2B4E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002581")]
			[Address(RVA = "0xF2B4E8", Offset = "0xF2B4E8", VA = "0xF2B4E8")]
			internal long <CreateZipFileAsync>b__61_0(long acc, string elt)
			{
				return default(long);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7E8", Offset = "0xB2A7E8")]
		private struct <CreateZipFileAsync>d__61 : IAsyncStateMachine
		{
			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] paths;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string zipName;

			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string rootDir;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CancellationToken token;

			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VrAssetService <>4__this;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long <totalLength>5__2;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private long <read>5__3;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private FileStream <zip>5__4;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ZipArchive <archive>5__5;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private string[] <>7__wrap5;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <>7__wrap6;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Stream <writer>5__8;

			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private StreamWithReadProgress <reader>5__9;

			[Token(Token = "0x40024A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Task <task>5__10;

			[Token(Token = "0x40024A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private long <prev>5__11;

			[Token(Token = "0x40024A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private object <>u__1;

			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002582")]
			[Address(RVA = "0xF2BDD0", Offset = "0xF2BDD0", VA = "0xF2BDD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0xF2C8D0", Offset = "0xF2C8D0", VA = "0xF2C8D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A7F8", Offset = "0xB2A7F8")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string gltfFile;

			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VrAssetService <>4__this;

			[Token(Token = "0x6002584")]
			[Address(RVA = "0xF2B568", Offset = "0xF2B568", VA = "0xF2B568")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6002585")]
			[Address(RVA = "0xF2B570", Offset = "0xF2B570", VA = "0xF2B570")]
			internal ExportGlTF.ExportResults <UploadCurrentSketchSketchfabAsync>b__1()
			{
				return default(ExportGlTF.ExportResults);
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0xF2B664", Offset = "0xF2B664", VA = "0xF2B664")]
			internal void <UploadCurrentSketchSketchfabAsync>b__0(double d)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A808", Offset = "0xB2A808")]
		private struct <UploadCurrentSketchSketchfabAsync>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(string, long)> <>t__builder;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrAssetService <>4__this;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string tempUploadDir;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass62_0 <>8__1;

			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DiskSceneFileInfo <fileInfo>5__2;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private ExportGlTF.ExportResults <exportResults>5__3;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private SketchfabService.Options <options>5__4;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private string <zipName>5__5;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private long <uploadLength>5__6;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TaskAwaiter<ExportGlTF.ExportResults> <>u__1;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TaskAwaiter<byte[]> <>u__2;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private TaskAwaiter<SketchfabService.CreateResponse> <>u__4;

			[Token(Token = "0x6002587")]
			[Address(RVA = "0xF2F6B4", Offset = "0xF2F6B4", VA = "0xF2F6B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0xF30114", Offset = "0xF30114", VA = "0xF30114", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A818", Offset = "0xB2A818")]
		private struct <CreateTiltForUploadAsync>d__63 : IAsyncStateMachine
		{
			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<byte[]> <>t__builder;

			[Token(Token = "0x40024BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VrAssetService <>4__this;

			[Token(Token = "0x40024BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DiskSceneFileInfo fileInfo;

			[Token(Token = "0x40024BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<SketchSnapshot> <>u__1;

			[Token(Token = "0x40024BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private object <>u__2;

			[Token(Token = "0x6002589")]
			[Address(RVA = "0xF2B6B4", Offset = "0xF2B6B4", VA = "0xF2B6B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0xF2BD74", Offset = "0xF2BD74", VA = "0xF2BD74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A828", Offset = "0xB2A828")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x40024C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebRequest request;

			[Token(Token = "0x600258B")]
			[Address(RVA = "0xF2B684", Offset = "0xF2B684", VA = "0xF2B684")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0xF2B68C", Offset = "0xF2B68C", VA = "0xF2B68C")]
			internal JObject <InsertSketchInfo>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A838", Offset = "0xB2A838")]
		private sealed class <InsertSketchInfo>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetId;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass66_0 <>8__1;

			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<PolySceneFileInfo> infos;

			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int index;

			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Future<JObject> <f>5__2;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <cr>5__3;

			[Token(Token = "0x17000622")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002591")]
				[Address(RVA = "0xF2D79C", Offset = "0xF2D79C", VA = "0xF2D79C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000623")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002593")]
				[Address(RVA = "0xF2D7E4", Offset = "0xF2D7E4", VA = "0xF2D7E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0xF2CF4C", Offset = "0xF2CF4C", VA = "0xF2CF4C")]
			[DebuggerHidden]
			public <InsertSketchInfo>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xF2CF78", Offset = "0xF2CF78", VA = "0xF2CF78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xF2D050", Offset = "0xF2D050", VA = "0xF2D050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0xF2CF94", Offset = "0xF2CF94", VA = "0xF2CF94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002592")]
			[Address(RVA = "0xF2D7A4", Offset = "0xF2D7A4", VA = "0xF2D7A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A848", Offset = "0xB2A848")]
		private sealed class <LoadTiltFile>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string id;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <path>5__2;

			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WebRequest <request>5__3;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <cr>5__4;

			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__5;

			[Token(Token = "0x17000624")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002599")]
				[Address(RVA = "0xF2E7C0", Offset = "0xF2E7C0", VA = "0xF2E7C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000625")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259B")]
				[Address(RVA = "0xF2E808", Offset = "0xF2E808", VA = "0xF2E808", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xF2DE7C", Offset = "0xF2DE7C", VA = "0xF2DE7C")]
			[DebuggerHidden]
			public <LoadTiltFile>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0xF2DEA8", Offset = "0xF2DEA8", VA = "0xF2DEA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0xF2E0BC", Offset = "0xF2E0BC", VA = "0xF2E0BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0xF2DF44", Offset = "0xF2DF44", VA = "0xF2DF44")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0xF2E000", Offset = "0xF2E000", VA = "0xF2E000")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xF2E7C8", Offset = "0xF2E7C8", VA = "0xF2E7C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002459")]
		private const string kGltfName = "sketch.gltf";

		[Token(Token = "0x400245A")]
		public const string kApiHost = "https://poly.googleapis.com";

		[Token(Token = "0x400245B")]
		private const string kAssetLandingPage = "https://vr.google.com/sketches/uploads/publish/";

		[Token(Token = "0x400245C")]
		private const string kListAssetsUri = "/v1/assets";

		[Token(Token = "0x400245D")]
		private const string kUserAssetsUri = "/v1/users/me/assets";

		[Token(Token = "0x400245E")]
		private const string kUserLikesUri = "/v1/users/me/likedassets";

		[Token(Token = "0x400245F")]
		private const string kGetVersionUri = "/$discovery/rest?version=v1";

		[Token(Token = "0x4002460")]
		public const string kCreativeCommonsLicense = "CREATIVE_COMMONS_BY";

		[Token(Token = "0x4002461")]
		private const string kPolyApiVersion = "v1";

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TrTransform kPolyFromUnity;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<string, string> kGltfMimetypes;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double[] kProgressSteps;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static VrAssetService m_Instance;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_AssetsPerPage;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float m_SketchbookRefreshInterval;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_UploadProgress;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_LastUploadFailed;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_LastUploadErrorMessage;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_LastUploadErrorDetails;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_UserCanceledLastUpload;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_LastUploadCompleteUrl;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB34808", Offset = "0xB34808")]
		private TaskAndCts<(string, long)> m_UploadTask;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string m_PolyAccountId;

		[Token(Token = "0x17000615")]
		public static string kPolyApiKey
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xEFE324", Offset = "0xEFE324", VA = "0xEFE324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000616")]
		private static string ApiHost
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xEFE388", Offset = "0xEFE388", VA = "0xEFE388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000617")]
		public bool Available
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xEFE8DC", Offset = "0xEFE8DC", VA = "0xEFE8DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000618")]
		public bool NoConnection
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xEFE8E4", Offset = "0xEFE8E4", VA = "0xEFE8E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000619")]
		public float UploadProgress
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xEFE8EC", Offset = "0xEFE8EC", VA = "0xEFE8EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700061A")]
		public bool LastUploadFailed
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0xEFE8F4", Offset = "0xEFE8F4", VA = "0xEFE8F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061B")]
		public string LastUploadErrorMessage
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xEFE8FC", Offset = "0xEFE8FC", VA = "0xEFE8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061C")]
		public string LastUploadErrorDetails
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xEFE904", Offset = "0xEFE904", VA = "0xEFE904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061D")]
		public bool UserCanceledLastUpload
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xEFE90C", Offset = "0xEFE90C", VA = "0xEFE90C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061E")]
		public string LastUploadCompleteUrl
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xEFE914", Offset = "0xEFE914", VA = "0xEFE914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061F")]
		private string AssetLandingPage
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0xEFE91C", Offset = "0xEFE91C", VA = "0xEFE91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xEFE3F8", Offset = "0xEFE3F8", VA = "0xEFE3F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4381C", Offset = "0xB4381C")]
		public static Task<bool> IsMutableAssetIdAsync(FileInfoType type, string assetId, string userId, string apiHost)
		{
			return null;
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xEFE54C", Offset = "0xEFE54C", VA = "0xEFE54C")]
		static VrAssetService()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xEFE988", Offset = "0xEFE988", VA = "0xEFE988")]
		private void SetUploadProgress(UploadStep step, double pct)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xEFEA94", Offset = "0xEFEA94", VA = "0xEFEA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xEFEAFC", Offset = "0xEFEAFC", VA = "0xEFEAFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xEFEC88", Offset = "0xEFEC88", VA = "0xEFEC88")]
		public void ConsumeUploadResults()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xEFECA0", Offset = "0xEFECA0", VA = "0xEFECA0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4387C", Offset = "0xB4387C")]
		public Task UploadCurrentSketchAsync(Cloud backend, bool isDemoUpload)
		{
			return null;
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xEFEDBC", Offset = "0xEFEDBC", VA = "0xEFEDBC")]
		public void CancelUpload()
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xEFEE18", Offset = "0xEFEE18", VA = "0xEFEE18")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB438DC", Offset = "0xB438DC")]
		private static Task<PolyStatus> GetPolyStatus()
		{
			return null;
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xEFEF38", Offset = "0xEFEF38", VA = "0xEFEF38")]
		private DiskSceneFileInfo GetWritableFile()
		{
			return default(DiskSceneFileInfo);
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xEFF0DC", Offset = "0xEFF0DC", VA = "0xEFF0DC")]
		public static string GetRelativePath(string fromDir, string toFile)
		{
			return null;
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xEFF238", Offset = "0xEFF238", VA = "0xEFF238")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4393C", Offset = "0xB4393C")]
		private Task CreateZipFileAsync(string zipName, string rootDir, string[] paths, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xEFF37C", Offset = "0xEFF37C", VA = "0xEFF37C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB4399C", Offset = "0xB4399C")]
		private Task<(string, long)> UploadCurrentSketchSketchfabAsync(CancellationToken token, string tempUploadDir, bool _)
		{
			return null;
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xEFF4C0", Offset = "0xEFF4C0", VA = "0xEFF4C0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB439FC", Offset = "0xB439FC")]
		private Task<byte[]> CreateTiltForUploadAsync(DiskSceneFileInfo fileInfo)
		{
			return null;
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xEFF60C", Offset = "0xEFF60C", VA = "0xEFF60C")]
		public AssetGetter GetAsset(string assetId, VrAssetFormat type, string reason)
		{
			return null;
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xEFF7F4", Offset = "0xEFF7F4", VA = "0xEFF7F4")]
		public AssetLister ListAssets(SketchSetType type)
		{
			return null;
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xEFFA1C", Offset = "0xEFFA1C", VA = "0xEFFA1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43A5C", Offset = "0xB43A5C")]
		public IEnumerator<object> InsertSketchInfo(string assetId, int index, List<PolySceneFileInfo> infos)
		{
			return null;
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xEFFAA0", Offset = "0xEFFAA0", VA = "0xEFFAA0")]
		public AssetLister ListAssets(PolySetType type)
		{
			return null;
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xEFFD00", Offset = "0xEFFD00", VA = "0xEFFD00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43ABC", Offset = "0xB43ABC")]
		public IEnumerator LoadTiltFile(string id)
		{
			return null;
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xEFFD6C", Offset = "0xEFFD6C", VA = "0xEFFD6C")]
		public VrAssetService()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xEFFD74", Offset = "0xEFFD74", VA = "0xEFFD74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43B1C", Offset = "0xB43B1C")]
		private void <UploadCurrentSketchAsync>g__ReportFailure|56_0(string userFriendly, string fullMessage)
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class VrAssetServiceException : Exception
	{
		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34930", Offset = "0xB34930")]
		private string <UserFriendly>k__BackingField;

		[Token(Token = "0x17000626")]
		public string UserFriendly
		{
			[Token(Token = "0x600259C")]
			[Address(RVA = "0xEFFE94", Offset = "0xEFFE94", VA = "0xEFFE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43C5C", Offset = "0xB43C5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600259D")]
			[Address(RVA = "0xEFFE9C", Offset = "0xEFFE9C", VA = "0xEFFE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43C6C", Offset = "0xB43C6C")]
			set
			{
			}
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xEFFEA4", Offset = "0xEFFEA4", VA = "0xEFFEA4")]
		public VrAssetServiceException(string userFriendly, [Optional] Exception inner)
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xEFFF28", Offset = "0xEFFF28", VA = "0xEFFF28")]
		public VrAssetServiceException(string userFriendly, string details, [Optional] Exception inner)
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class WebRequest
	{
		[Token(Token = "0x20005C0")]
		public struct Reply
		{
			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private byte[] bytes;

			[Token(Token = "0x1700062D")]
			public byte[] Raw
			{
				[Token(Token = "0x60025BD")]
				[Address(RVA = "0x210656C", Offset = "0x210656C", VA = "0x210656C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062E")]
			public string Text
			{
				[Token(Token = "0x60025BE")]
				[Address(RVA = "0x2106574", Offset = "0x2106574", VA = "0x2106574")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062F")]
			public JObject JObject
			{
				[Token(Token = "0x60025BF")]
				[Address(RVA = "0x21065C8", Offset = "0x21065C8", VA = "0x21065C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x21065F0", Offset = "0x21065F0", VA = "0x21065F0")]
			public Reply(byte[] bytes)
			{
			}

			[Token(Token = "0x60025C1")]
			public T Deserialize<T>()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A858", Offset = "0xB2A858")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string temporaryFileName;

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x2102F78", Offset = "0x2102F78", VA = "0x2102F78")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x2102F80", Offset = "0x2102F80", VA = "0x2102F80")]
			internal byte[] <SendNamedDataAsync>b__2()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A868", Offset = "0xB2A868")]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string wrapperType;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass44_0 CS$<>8__locals1;

			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x2102F8C", Offset = "0x2102F8C", VA = "0x2102F8C")]
			public <>c__DisplayClass44_1()
			{
			}

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x2102F94", Offset = "0x2102F94", VA = "0x2102F94")]
			internal UploadHandler <SendNamedDataAsync>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A878", Offset = "0xB2A878")]
		private sealed class <>c__DisplayClass44_2
		{
			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] fileContents;

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x2103020", Offset = "0x2103020", VA = "0x2103020")]
			public <>c__DisplayClass44_2()
			{
			}

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x2103028", Offset = "0x2103028", VA = "0x2103028")]
			internal UploadHandler <SendNamedDataAsync>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A888", Offset = "0xB2A888")]
		private struct <SendNamedDataAsync>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Reply> <>t__builder;

			[Token(Token = "0x40024E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebRequest <>4__this;

			[Token(Token = "0x40024EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string destFilename;

			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string parameterName;

			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string contentType;

			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB34950", Offset = "0xB34950")]
			public IEnumerable<(string, string)> moreParams;

			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string temporaryDirectory;

			[Token(Token = "0x40024EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Stream srcData;

			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private <>c__DisplayClass44_1 <>8__1;

			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private <>c__DisplayClass44_2 <>8__2;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public CancellationToken? token;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private <>c__DisplayClass44_0 <>8__3;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private byte[] <suffix>5__2;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <debugId>5__3;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Stream <outputStream>5__4;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private long <srcLength>5__5;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Task <task>5__6;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private object <>u__1;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private TaskAwaiter<byte[]> <>u__2;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TaskAwaiter<Reply> <>u__3;

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x21056A8", Offset = "0x21056A8", VA = "0x21056A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x2106510", Offset = "0x2106510", VA = "0x2106510", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A898", Offset = "0xB2A898")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] uncompressedData;

			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string contentType;

			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x210308C", Offset = "0x210308C", VA = "0x210308C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x2103094", Offset = "0x2103094", VA = "0x2103094")]
			internal UploadHandler <SendAsync>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8A8", Offset = "0xB2A8A8")]
		private struct <SendAsync>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Reply> <>t__builder;

			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int? debugId;

			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken? token;

			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WebRequest <>4__this;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Func<UploadHandler> payloadCreator;

			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string contentType;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool isCompressed;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <debugId_>5__2;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CancellationToken <realToken>5__3;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <retries>5__4;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <retryIndex>5__5;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UnityWebRequest <www>5__6;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UploadHandler <payload>5__7;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UnityWebRequestAsyncOperation <sendTask>5__8;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private object <>u__2;

			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x2103118", Offset = "0x2103118", VA = "0x2103118", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x210564C", Offset = "0x210564C", VA = "0x210564C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8B8", Offset = "0xB2A8B8")]
		private struct <<SendAsync>g__DelayedDispose|47_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IDisposable id;

			[Token(Token = "0x4002512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x2102CE4", Offset = "0x2102CE4", VA = "0x2102CE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x2102F6C", Offset = "0x2102F6C", VA = "0x2102F6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool kEnableHttpCompression;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] kInterestingRequestHeaders;

		[Token(Token = "0x40024D3")]
		private const int kNumRetries = 3;

		[Token(Token = "0x40024D4")]
		private const int kDebugRequestLogLength = 2000;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int sm_DebugRequestNextId;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Encoding sm_StrictAscii;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Uri;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Method;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OAuth2Identity m_Identity;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] m_Result;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_UploadedBytes;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float? m_PreUploadProgress;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Progress;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Done;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_Compressed;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_UploadDescription;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34940", Offset = "0xB34940")]
		private IProgress<double> <ProgressObject>k__BackingField;

		[Token(Token = "0x17000627")]
		public bool Done
		{
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xF04DB4", Offset = "0xF04DB4", VA = "0xF04DB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000628")]
		public string Result
		{
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xF04DBC", Offset = "0xF04DBC", VA = "0xF04DBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000629")]
		public byte[] ResultBytes
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xF04E10", Offset = "0xF04E10", VA = "0xF04E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062A")]
		public int UploadedBytes
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xF04E18", Offset = "0xF04E18", VA = "0xF04E18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700062B")]
		public float Progress
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xF04E20", Offset = "0xF04E20", VA = "0xF04E20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062C")]
		public IProgress<double> ProgressObject
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xF04EAC", Offset = "0xF04EAC", VA = "0xF04EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43C7C", Offset = "0xB43C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xF04EB4", Offset = "0xF04EB4", VA = "0xF04EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43C8C", Offset = "0xB43C8C")]
			set
			{
			}
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xF04100", Offset = "0xF04100", VA = "0xF04100")]
		private static string RequestDebugGetLogFile(int id, string description, string ext, int retryIndex = 0)
		{
			return null;
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xF044B0", Offset = "0xF044B0", VA = "0xF044B0")]
		private static int RequestDebugGetNewId()
		{
			return default(int);
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xF0453C", Offset = "0xF0453C", VA = "0xF0453C")]
		private static void RequestDebugLogFile(int id, string description, string sourceFile)
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xF046A8", Offset = "0xF046A8", VA = "0xF046A8")]
		private static void RequestDebugLogText(int id, string description, string text, int retryIndex = 0)
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xF04820", Offset = "0xF04820", VA = "0xF04820")]
		private static void RequestDebugLogBytes(int id, string description, byte[] bytes, int retryIndex = 0)
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xF04994", Offset = "0xF04994", VA = "0xF04994")]
		private static bool IsTransientServerError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xF049A4", Offset = "0xF049A4", VA = "0xF049A4")]
		private static bool IsAuthError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xF049B0", Offset = "0xF049B0", VA = "0xF049B0")]
		private static bool IsSuccess(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xF049C0", Offset = "0xF049C0", VA = "0xF049C0")]
		private static bool IsForbiddenError(long httpStatus)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xF049CC", Offset = "0xF049CC", VA = "0xF049CC")]
		private static Stream OpenFileForWrite(string filename, bool compress)
		{
			return null;
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xF04A5C", Offset = "0xF04A5C", VA = "0xF04A5C")]
		public static string RedactUriForError(string uriString)
		{
			return null;
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xF04BE0", Offset = "0xF04BE0", VA = "0xF04BE0")]
		public static Task<Reply> GetAsync(string uri)
		{
			return null;
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xF04C94", Offset = "0xF04C94", VA = "0xF04C94")]
		public WebRequest(string uri, OAuth2Identity identity, string method = "GET", bool compress = false)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xF04EBC", Offset = "0xF04EBC", VA = "0xF04EBC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB43C9C", Offset = "0xB43C9C")]
		public Task<Reply> SendNamedDataAsync(string parameterName, Stream srcData, string destFilename, string contentType, [CanBeNull][AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB45FD4", Offset = "0xB45FD4")] IEnumerable<(string, string)> moreParams, CancellationToken? token, [Optional] string temporaryDirectory)
		{
			return null;
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xF04D98", Offset = "0xF04D98", VA = "0xF04D98")]
		public Task<Reply> SendAsync()
		{
			return null;
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xF051C0", Offset = "0xF051C0", VA = "0xF051C0")]
		public Task<Reply> SendAsync(byte[] uncompressedData, string contentType)
		{
			return null;
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xF05044", Offset = "0xF05044", VA = "0xF05044")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB43CFC", Offset = "0xB43CFC")]
		public Task<Reply> SendAsync(Func<UploadHandler> payloadCreator, string contentType, bool isCompressed, [Optional] CancellationToken? token, [Optional] int? debugId)
		{
			return null;
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xF05384", Offset = "0xF05384", VA = "0xF05384")]
		private static string GetResponseHeadersAsString(UnityWebRequest www)
		{
			return null;
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xF05538", Offset = "0xF05538", VA = "0xF05538")]
		private static float BackoffSeconds(int retries)
		{
			return default(float);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0xF05548", Offset = "0xF05548", VA = "0xF05548")]
		private static (byte[], byte[], string) SerializeMultipartForm(string parameterName, string destFilename, string contentType, [CanBeNull][AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB46068", Offset = "0xB46068")] IEnumerable<(string, string)> moreParams)
		{
			return default((byte[], byte[], string));
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0xF06348", Offset = "0xF06348", VA = "0xF06348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB43D5C", Offset = "0xB43D5C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB43D5C", Offset = "0xB43D5C")]
		internal static void <SendAsync>g__DelayedDispose|47_0(IDisposable id)
		{
		}
	}
	[Token(Token = "0x20005C8")]
	internal class YouTube : MonoBehaviour
	{
		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8C8", Offset = "0xB2A8C8")]
		private sealed class <ShareVideo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTube <>4__this;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <filesize>5__2;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x17000632")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025DC")]
				[Address(RVA = "0x210A2A8", Offset = "0x210A2A8", VA = "0x210A2A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000633")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025DE")]
				[Address(RVA = "0x210A2F0", Offset = "0x210A2F0", VA = "0x210A2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x21097A8", Offset = "0x21097A8", VA = "0x21097A8")]
			[DebuggerHidden]
			public <ShareVideo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x21097D4", Offset = "0x21097D4", VA = "0x21097D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x21099E8", Offset = "0x21099E8", VA = "0x21099E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x2109870", Offset = "0x2109870", VA = "0x2109870")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x210992C", Offset = "0x210992C", VA = "0x210992C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x210A2B0", Offset = "0x210A2B0", VA = "0x210A2B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_UploadUri;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_ChannelListUri;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_UserInfoUri;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_RevokeUri;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_UploadedMessage;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_AuthorizeMessage;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_DefaultTitle;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_DefaultDescription;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static YouTube m_Instance;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_UploadsInProgress;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FileStream m_UploadStream;

		[Token(Token = "0x17000630")]
		public bool AuthNeeded
		{
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x111ED1C", Offset = "0x111ED1C", VA = "0x111ED1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000631")]
		public bool InProgress
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x111ED4C", Offset = "0x111ED4C", VA = "0x111ED4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x111ED5C", Offset = "0x111ED5C", VA = "0x111ED5C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x111EDAC", Offset = "0x111EDAC", VA = "0x111EDAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x111EDE4", Offset = "0x111EDE4", VA = "0x111EDE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43DFC", Offset = "0xB43DFC")]
		public IEnumerator ShareVideo(string filename)
		{
			return null;
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x111EE5C", Offset = "0x111EE5C", VA = "0x111EE5C")]
		private UnityWebRequest InitResumableUpload(string filename, long size)
		{
			return null;
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x111F0F8", Offset = "0x111F0F8", VA = "0x111F0F8")]
		public YouTube()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class GroupManager
	{
		[Token(Token = "0x4002524")]
		public const uint kIdSketchGroupTagNone = 0u;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint m_nextUnusedCookie;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<uint, SketchGroupTag> m_idToGroup;

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xFAC9EC", Offset = "0xFAC9EC", VA = "0xFAC9EC")]
		public GroupManager()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xFACA8C", Offset = "0xFACA8C", VA = "0xFACA8C")]
		public SketchGroupTag NewUnusedGroup()
		{
			return default(SketchGroupTag);
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xFACAA0", Offset = "0xFACAA0", VA = "0xFACAA0")]
		public SketchGroupTag GetGroupFromId(uint id)
		{
			return default(SketchGroupTag);
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xFACA14", Offset = "0xFACA14", VA = "0xFACA14")]
		public void ResetGroups()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public struct SketchGroupTag : IEquatable<SketchGroupTag>
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchGroupTag None;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly uint cookie;

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x1063D2C", Offset = "0x1063D2C", VA = "0x1063D2C")]
		public SketchGroupTag(uint cookie)
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1063D34", Offset = "0x1063D34", VA = "0x1063D34", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x1063DB8", Offset = "0x1063DB8", VA = "0x1063DB8", Slot = "4")]
		public bool Equals(SketchGroupTag tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x1063DC8", Offset = "0x1063DC8", VA = "0x1063DC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x1063DD0", Offset = "0x1063DD0", VA = "0x1063DD0")]
		public static bool operator ==(SketchGroupTag lhs, SketchGroupTag rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1063DDC", Offset = "0x1063DDC", VA = "0x1063DDC")]
		public static bool operator !=(SketchGroupTag lhs, SketchGroupTag rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1063DE8", Offset = "0x1063DE8", VA = "0x1063DE8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB43EAC", Offset = "0xB43EAC")]
		public static bool operator ==(SketchGroupTag lhs, string rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1063E28", Offset = "0x1063E28", VA = "0x1063E28")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB43EBC", Offset = "0xB43EBC")]
		public static bool operator !=(SketchGroupTag lhs, string rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005CC")]
	public class GroupIdMapping
	{
		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<SketchGroupTag, uint> m_GroupToConsecutiveIdMapping;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_NextId;

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0xFAC868", Offset = "0xFAC868", VA = "0xFAC868")]
		public uint GetId(SketchGroupTag group)
		{
			return default(uint);
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0xFAC96C", Offset = "0xFAC96C", VA = "0xFAC96C")]
		public GroupIdMapping()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class SketchBinaryReader : IDisposable
	{
		[Token(Token = "0x400252B")]
		private const long kGibibyte = 1073741824L;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream m_stream;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_buf16;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] m_bufBig;

		[Token(Token = "0x17000634")]
		public Stream BaseStream
		{
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xE7D97C", Offset = "0xE7D97C", VA = "0xE7D97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xE7D984", Offset = "0xE7D984", VA = "0xE7D984")]
			set
			{
			}
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xE7D98C", Offset = "0xE7D98C", VA = "0xE7D98C")]
		public SketchBinaryReader(Stream stream)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xE7D9FC", Offset = "0xE7D9FC", VA = "0xE7D9FC", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xE7DA04", Offset = "0xE7DA04", VA = "0xE7DA04")]
		public uint UInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xE7DA98", Offset = "0xE7DA98", VA = "0xE7DA98")]
		public float Float()
		{
			return default(float);
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xE7DB30", Offset = "0xE7DB30", VA = "0xE7DB30")]
		public int Int32()
		{
			return default(int);
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xE7DB34", Offset = "0xE7DB34", VA = "0xE7DB34")]
		public Vector3 Vec3()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xE7DB80", Offset = "0xE7DB80", VA = "0xE7DB80")]
		public Color Color()
		{
			return default(Color);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xE7DC04", Offset = "0xE7DC04", VA = "0xE7DC04")]
		public Quaternion Quaternion()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0xE7DC88", Offset = "0xE7DC88", VA = "0xE7DC88")]
		private void LazyCreateBigBuffer()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xE7DCE4", Offset = "0xE7DCE4", VA = "0xE7DCE4")]
		public bool ReadInto(IntPtr dest, long length)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0xE7DE18", Offset = "0xE7DE18", VA = "0xE7DE18")]
		public bool Skip(uint length)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0xE7DEC8", Offset = "0xE7DEC8", VA = "0xE7DEC8")]
		private static bool SlowSkip(Stream stream, byte[] buffer, uint length)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0xE7DF4C", Offset = "0xE7DF4C", VA = "0xE7DF4C")]
		public bool ReadIntoExact(List<Vector2> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0xE7E160", Offset = "0xE7E160", VA = "0xE7E160")]
		public bool ReadIntoExact(List<Vector3> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0xE7E378", Offset = "0xE7E378", VA = "0xE7E378")]
		public bool ReadIntoExact(List<Vector4> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xE7E58C", Offset = "0xE7E58C", VA = "0xE7E58C")]
		public bool ReadIntoExact(List<Color32> lst, int expectedCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0xE7E7A0", Offset = "0xE7E7A0", VA = "0xE7E7A0")]
		public bool ReadIntoExact(List<int> lst, int expectedCount)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005CE")]
	public class SketchBinaryWriter : IDisposable
	{
		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stream m_stream;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] m_buf16;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] m_bufBig;

		[Token(Token = "0x17000635")]
		public Stream BaseStream
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xE7E9B4", Offset = "0xE7E9B4", VA = "0xE7E9B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xE7E9BC", Offset = "0xE7E9BC", VA = "0xE7E9BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xE7E9C4", Offset = "0xE7E9C4", VA = "0xE7E9C4")]
		public SketchBinaryWriter(Stream stream)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xE7EA34", Offset = "0xE7EA34", VA = "0xE7EA34", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xE7EA3C", Offset = "0xE7EA3C", VA = "0xE7EA3C")]
		public void Color(Color color)
		{
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xE7EAA4", Offset = "0xE7EAA4", VA = "0xE7EAA4")]
		public void Vec3(Vector3 v)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xE7EAEC", Offset = "0xE7EAEC", VA = "0xE7EAEC")]
		public void Quaternion(Quaternion v)
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xE7EB4C", Offset = "0xE7EB4C", VA = "0xE7EB4C")]
		public void Int32(int x)
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xE7EB50", Offset = "0xE7EB50", VA = "0xE7EB50")]
		public void UInt32(uint x)
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xE7EA9C", Offset = "0xE7EA9C", VA = "0xE7EA9C")]
		public void Float(float x)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xE7EBFC", Offset = "0xE7EBFC", VA = "0xE7EBFC")]
		public void Write(IntPtr src, long length)
		{
		}

		[Token(Token = "0x600260C")]
		public long WriteRaw<T>(List<T> lst) where T : struct
		{
			return default(long);
		}

		[Token(Token = "0x600260D")]
		public long WriteRaw<T>(T[] array, int count) where T : struct
		{
			return default(long);
		}

		[Token(Token = "0x600260E")]
		public void WriteLengthPrefixed<T>(List<T> lst) where T : struct
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class SketchControlsScript : MonoBehaviour
	{
		[Token(Token = "0x20005D0")]
		public enum GlobalCommands
		{
			[Token(Token = "0x40025C6")]
			Null,
			[Token(Token = "0x40025C7")]
			Save,
			[Token(Token = "0x40025C8")]
			SaveNew,
			[Token(Token = "0x40025C9")]
			Load,
			[Token(Token = "0x40025CA")]
			NewSketch,
			[Token(Token = "0x40025CB")]
			StraightEdge,
			[Token(Token = "0x40025CC")]
			AutoOrient,
			[Token(Token = "0x40025CD")]
			Undo,
			[Token(Token = "0x40025CE")]
			Redo,
			[Token(Token = "0x40025CF")]
			Tiltasaurus,
			[Token(Token = "0x40025D0")]
			LightingHdr,
			[Token(Token = "0x40025D1")]
			AudioVisualization,
			[Token(Token = "0x40025D2")]
			ResetAllPanels,
			[Token(Token = "0x40025D3")]
			SketchOrigin,
			[Token(Token = "0x40025D4")]
			SymmetryPlane,
			[Token(Token = "0x40025D5")]
			SymmetryFour,
			[Token(Token = "0x40025D6")]
			ViewOnly,
			[Token(Token = "0x40025D7")]
			SaveGallery,
			[Token(Token = "0x40025D8")]
			LightingLdr,
			[Token(Token = "0x40025D9")]
			ShowSketchFolder,
			[Token(Token = "0x40025DA")]
			About,
			[Token(Token = "0x40025DB")]
			LoadNamedFile,
			[Token(Token = "0x40025DC")]
			DropCam,
			[Token(Token = "0x40025DD")]
			CuratedGallery,
			[Token(Token = "0x40025DE")]
			Unused_UploadToCloud,
			[Token(Token = "0x40025DF")]
			AnalyticsEnabled_Deprecated,
			[Token(Token = "0x40025E0")]
			Credits,
			[Token(Token = "0x40025E1")]
			LogOutOfGenericCloud,
			[Token(Token = "0x40025E2")]
			DraftingVisibility,
			[Token(Token = "0x40025E3")]
			DeleteSketch,
			[Token(Token = "0x40025E4")]
			ShowWindowGUI,
			[Token(Token = "0x40025E5")]
			MorePanels,
			[Token(Token = "0x40025E6")]
			Cameras,
			[Token(Token = "0x40025E7")]
			FAQ,
			[Token(Token = "0x40025E8")]
			ExportRaw,
			[Token(Token = "0x40025E9")]
			IRC,
			[Token(Token = "0x40025EA")]
			YouTubeChat,
			[Token(Token = "0x40025EB")]
			CameraOptions,
			[Token(Token = "0x40025EC")]
			StencilsDisabled,
			[Token(Token = "0x40025ED")]
			AdvancedTools,
			[Token(Token = "0x40025EE")]
			FloatingPanelsMode,
			[Token(Token = "0x40025EF")]
			StraightEdgeMeterDisplay,
			[Token(Token = "0x40025F0")]
			Sketchbook,
			[Token(Token = "0x40025F1")]
			ExportAll,
			[Token(Token = "0x40025F2")]
			Lights,
			[Token(Token = "0x40025F3")]
			SaveAndUpload,
			[Token(Token = "0x40025F4")]
			StraightEdgeShape,
			[Token(Token = "0x40025F5")]
			SaveOptions,
			[Token(Token = "0x40025F6")]
			SketchbookMenu,
			[Token(Token = "0x40025F7")]
			Disco,
			[Token(Token = "0x40025F8")]
			ViewOnlineGallery,
			[Token(Token = "0x40025F9")]
			CancelUpload,
			[Token(Token = "0x40025FA")]
			AdvancedPanelsToggle,
			[Token(Token = "0x40025FB")]
			Music,
			[Token(Token = "0x40025FC")]
			Duplicate,
			[Token(Token = "0x40025FD")]
			ToggleGroupStrokesAndWidgets,
			[Token(Token = "0x40025FE")]
			SaveModel,
			[Token(Token = "0x40025FF")]
			ViewPolyPage,
			[Token(Token = "0x4002600")]
			ViewPolyGallery,
			[Token(Token = "0x4002601")]
			ExportListed,
			[Token(Token = "0x4002602")]
			RenderCameraPath,
			[Token(Token = "0x4002603")]
			ToggleProfiling,
			[Token(Token = "0x4002604")]
			DoAutoProfile,
			[Token(Token = "0x4002605")]
			DoAutoProfileAndQuit,
			[Token(Token = "0x4002606")]
			ToggleSettings,
			[Token(Token = "0x4002607")]
			SummonMirror,
			[Token(Token = "0x4002608")]
			InvertSelection,
			[Token(Token = "0x4002609")]
			SelectAll,
			[Token(Token = "0x400260A")]
			FlipSelection,
			[Token(Token = "0x400260B")]
			ToggleBrushLab,
			[Token(Token = "0x400260C")]
			ReleaseNotes,
			[Token(Token = "0x400260D")]
			ToggleCameraPostEffects,
			[Token(Token = "0x400260E")]
			ToggleWatermark,
			[Token(Token = "0x400260F")]
			AccountInfo,
			[Token(Token = "0x4002610")]
			LoadConfirmUnsaved,
			[Token(Token = "0x4002611")]
			LoadConfirmComplex,
			[Token(Token = "0x4002612")]
			MemoryWarning,
			[Token(Token = "0x4002613")]
			MemoryExceeded,
			[Token(Token = "0x4002614")]
			ViewLastUpload,
			[Token(Token = "0x4002615")]
			LoadConfirmComplexHigh,
			[Token(Token = "0x4002616")]
			ShowTos,
			[Token(Token = "0x4002617")]
			ShowPrivacy,
			[Token(Token = "0x4002618")]
			ShowQuestSideLoading,
			[Token(Token = "0x4002619")]
			AshleysSketch,
			[Token(Token = "0x400261A")]
			UnloadReferenceImageCatalog,
			[Token(Token = "0x400261B")]
			SaveOnLocalChanges,
			[Token(Token = "0x400261C")]
			ToggleCameraPathVisuals,
			[Token(Token = "0x400261D")]
			ToggleCameraPathPreview,
			[Token(Token = "0x400261E")]
			DeleteCameraPath,
			[Token(Token = "0x400261F")]
			RecordCameraPath,
			[Token(Token = "0x4002620")]
			SelectCameraPath,
			[Token(Token = "0x4002621")]
			ToggleAutosimplification,
			[Token(Token = "0x4002622")]
			ShowGoogleDrive,
			[Token(Token = "0x4002623")]
			GoogleDriveSync_Folder,
			[Token(Token = "0x4002624")]
			GoogleDriveSync,
			[Token(Token = "0x4002625")]
			LoginToGenericCloud,
			[Token(Token = "0x4002626")]
			UploadToGenericCloud,
			[Token(Token = "0x4002627")]
			LoadWaitOnDownload,
			[Token(Token = "0x4002628")]
			SignOutConfirm,
			[Token(Token = "0x4002629")]
			ReadOnlyNotice,
			[Token(Token = "0x400262A")]
			ToggleMultiplayer,
			[Token(Token = "0x400262B")]
			RoomCreationPanel,
			[Token(Token = "0x400262C")]
			KeyboardPanel,
			[Token(Token = "0x400262D")]
			CameraFiltersPanel,
			[Token(Token = "0x400262E")]
			KeyboardPanelPico,
			[Token(Token = "0x400262F")]
			AvatarOptionsPanel,
			[Token(Token = "0x4002630")]
			InvitePanel,
			[Token(Token = "0x4002631")]
			MemoryManagementStrategyPanel,
			[Token(Token = "0x4002632")]
			TogglePassthroughPanel,
			[Token(Token = "0x4002633")]
			TogglePassthrough,
			[Token(Token = "0x4002634")]
			TogglePassthroughEdgeDetection,
			[Token(Token = "0x4002635")]
			MemoryStepBack
		}

		[Token(Token = "0x20005D1")]
		public enum ControlsType
		{
			[Token(Token = "0x4002637")]
			KeyboardMouse,
			[Token(Token = "0x4002638")]
			SixDofControllers,
			[Token(Token = "0x4002639")]
			ViewingOnly
		}

		[Token(Token = "0x20005D2")]
		public enum DraftingVisibilityOption
		{
			[Token(Token = "0x400263B")]
			Visible,
			[Token(Token = "0x400263C")]
			Transparent,
			[Token(Token = "0x400263D")]
			Hidden
		}

		[Token(Token = "0x20005D3")]
		public enum InputState
		{
			[Token(Token = "0x400263F")]
			Standard,
			[Token(Token = "0x4002640")]
			Pan,
			[Token(Token = "0x4002641")]
			Rotation,
			[Token(Token = "0x4002642")]
			HeadLock,
			[Token(Token = "0x4002643")]
			ControllerLock,
			[Token(Token = "0x4002644")]
			PushPull,
			[Token(Token = "0x4002645")]
			BrushSize,
			[Token(Token = "0x4002646")]
			Save,
			[Token(Token = "0x4002647")]
			Load,
			[Token(Token = "0x4002648")]
			Num
		}

		[Token(Token = "0x20005D4")]
		public enum LoadSpeed
		{
			[Token(Token = "0x400264A")]
			Normal = -1,
			[Token(Token = "0x400264B")]
			Quick = 1
		}

		[Token(Token = "0x20005D5")]
		private class GazeResult
		{
			[Token(Token = "0x400264C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_HitWithGaze;

			[Token(Token = "0x400264D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_HitWithController;

			[Token(Token = "0x400264E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool m_WithinView;

			[Token(Token = "0x400264F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_ControllerDistance;

			[Token(Token = "0x4002650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 m_GazePosition;

			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 m_ControllerPosition;

			[Token(Token = "0x4002652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InputManager.ControllerName m_ControllerName;

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xF1D840", Offset = "0xF1D840", VA = "0xF1D840")]
			public GazeResult()
			{
			}
		}

		[Token(Token = "0x20005D6")]
		private class GrabWidgetControllerInfo
		{
			[Token(Token = "0x4002653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputManager.ControllerName m_Name;

			[Token(Token = "0x4002654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TrTransform m_BaseControllerXf;

			[Token(Token = "0x4002655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public TrTransform m_BaseWidgetXf_LS;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xF1DA54", Offset = "0xF1DA54", VA = "0xF1DA54")]
			public GrabWidgetControllerInfo()
			{
			}
		}

		[Token(Token = "0x20005D7")]
		private struct GrabWidgetHoldPoint
		{
			[Token(Token = "0x4002656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputManager.ControllerName m_Name;

			[Token(Token = "0x4002657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_BirthTime;

			[Token(Token = "0x4002658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 m_Pos;

			[Token(Token = "0x4002659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Quaternion m_Rot;
		}

		[Token(Token = "0x20005D8")]
		private class InputStateConfig
		{
			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_AllowDrawing;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_AllowMovement;

			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool m_ShowGizmo;

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xF1DA5C", Offset = "0xF1DA5C", VA = "0xF1DA5C")]
			public InputStateConfig()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		private enum FadeState
		{
			[Token(Token = "0x400265E")]
			None,
			[Token(Token = "0x400265F")]
			FadeOn,
			[Token(Token = "0x4002660")]
			FadeOff
		}

		[Token(Token = "0x20005DA")]
		private enum GrabWidgetState
		{
			[Token(Token = "0x4002662")]
			None,
			[Token(Token = "0x4002663")]
			OneHand,
			[Token(Token = "0x4002664")]
			TwoHands
		}

		[Token(Token = "0x20005DB")]
		private enum GrabWorldState
		{
			[Token(Token = "0x4002666")]
			Normal,
			[Token(Token = "0x4002667")]
			ResettingTransform,
			[Token(Token = "0x4002668")]
			ResetDone
		}

		[Token(Token = "0x20005DC")]
		private enum WorldTransformResetState
		{
			[Token(Token = "0x400266A")]
			Default,
			[Token(Token = "0x400266B")]
			Requested,
			[Token(Token = "0x400266C")]
			FadingToBlack,
			[Token(Token = "0x400266D")]
			FadingToScene
		}

		[Token(Token = "0x20005DD")]
		private enum RotationType
		{
			[Token(Token = "0x400266F")]
			All,
			[Token(Token = "0x4002670")]
			RollOnly
		}

		[Token(Token = "0x20005DE")]
		private enum GrabIntersectionState
		{
			[Token(Token = "0x4002672")]
			RequestIntersections,
			[Token(Token = "0x4002673")]
			ReadBrush,
			[Token(Token = "0x4002674")]
			ReadWand
		}

		[Token(Token = "0x20005DF")]
		private struct GrabState
		{
			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputManager.ControllerName name;

			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TrTransform grabTransform;

			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool grabbingWorld;

			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool grabbingGroup;

			[Token(Token = "0x4002679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool startedGrabInsideWidget;

			[Token(Token = "0x400267A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool eatInput;

			[Token(Token = "0x400267B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GrabWidget lastWidgetIntersect;

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xF1D848", Offset = "0xF1D848", VA = "0xF1D848")]
			public void SetHadBestGrabAndTriggerHaptics(GrabWidgetData data)
			{
			}

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xF1DA4C", Offset = "0xF1DA4C", VA = "0xF1DA4C")]
			public void ClearInsideWidget()
			{
			}
		}

		[Token(Token = "0x20005E0")]
		private struct GpuIntersectionResult
		{
			[Token(Token = "0x400267C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GpuIntersector.FutureModelResult result;

			[Token(Token = "0x400267D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<GpuIntersector.ModelResult> resultList;
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8D8", Offset = "0xB2A8D8")]
		private sealed class <DelayedHidePanels>d__242 : IEnumerator<Timeslice>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400267E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400267F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Timeslice <>2__current;

			[Token(Token = "0x4002680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frames;

			[Token(Token = "0x4002681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <stall>5__2;

			[Token(Token = "0x17000644")]
			private Timeslice System.Collections.Generic.IEnumerator<TiltBrush.Timeslice>.Current
			{
				[Token(Token = "0x60026B3")]
				[Address(RVA = "0xF1AD7C", Offset = "0xF1AD7C", VA = "0xF1AD7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000645")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B5")]
				[Address(RVA = "0xF1ADC4", Offset = "0xF1ADC4", VA = "0xF1ADC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xF1ACAC", Offset = "0xF1ACAC", VA = "0xF1ACAC")]
			[DebuggerHidden]
			public <DelayedHidePanels>d__242(int <>1__state)
			{
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xF1ACD8", Offset = "0xF1ACD8", VA = "0xF1ACD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xF1ACDC", Offset = "0xF1ACDC", VA = "0xF1ACDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xF1AD84", Offset = "0xF1AD84", VA = "0xF1AD84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8E8", Offset = "0xB2A8E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<LightsPanel> <>9__275_0;

			[Token(Token = "0x4002685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, bool> <>9__305_0;

			[Token(Token = "0x4002686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__311_0;

			[Token(Token = "0x4002687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<CanvasScript, Bounds> <>9__316_0;

			[Token(Token = "0x4002688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Bounds, Bounds, Bounds> <>9__316_1;

			[Token(Token = "0x4002689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ModelWidget, bool> <>9__322_0;

			[Token(Token = "0x400268A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ImageWidget, bool> <>9__322_1;

			[Token(Token = "0x400268B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ModelWidget, bool> <>9__322_2;

			[Token(Token = "0x400268C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<ImageWidget, bool> <>9__322_3;

			[Token(Token = "0x400268D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ModelWidget, bool> <>9__323_0;

			[Token(Token = "0x400268E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<StencilWidget, bool> <>9__323_1;

			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<ImageWidget, bool> <>9__323_2;

			[Token(Token = "0x4002690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<VideoWidget, bool> <>9__323_3;

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xF1A9C4", Offset = "0xF1A9C4", VA = "0xF1A9C4")]
			public <>c()
			{
			}

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xF1A9CC", Offset = "0xF1A9CC", VA = "0xF1A9CC")]
			internal void <UpdateGrab_World>b__275_0(LightsPanel x)
			{
			}

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xF1A9EC", Offset = "0xF1A9EC", VA = "0xF1A9EC")]
			internal bool <ExportListAndQuit>b__305_0(string n)
			{
				return default(bool);
			}

			[Token(Token = "0x60026BA")]
			[Address(RVA = "0xF1AA44", Offset = "0xF1AA44", VA = "0xF1AA44")]
			internal void <ExportCoroutine>b__311_0()
			{
			}

			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xF1AAA4", Offset = "0xF1AAA4", VA = "0xF1AAA4")]
			internal Bounds <GenerateBoundingBoxSaveIcon>b__316_0(CanvasScript canvas)
			{
				return default(Bounds);
			}

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xF1AAF4", Offset = "0xF1AAF4", VA = "0xF1AAF4")]
			internal Bounds <GenerateBoundingBoxSaveIcon>b__316_1(Bounds b1, Bounds b2)
			{
				return default(Bounds);
			}

			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xF1AB4C", Offset = "0xF1AB4C", VA = "0xF1AB4C")]
			internal bool <IsCommandAvailable>b__322_0(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xF1AB78", Offset = "0xF1AB78", VA = "0xF1AB78")]
			internal bool <IsCommandAvailable>b__322_1(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xF1ABA4", Offset = "0xF1ABA4", VA = "0xF1ABA4")]
			internal bool <IsCommandAvailable>b__322_2(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xF1ABD0", Offset = "0xF1ABD0", VA = "0xF1ABD0")]
			internal bool <IsCommandAvailable>b__322_3(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xF1ABFC", Offset = "0xF1ABFC", VA = "0xF1ABFC")]
			internal bool <SketchHasChanges>b__323_0(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xF1AC28", Offset = "0xF1AC28", VA = "0xF1AC28")]
			internal bool <SketchHasChanges>b__323_1(StencilWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xF1AC54", Offset = "0xF1AC54", VA = "0xF1AC54")]
			internal bool <SketchHasChanges>b__323_2(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xF1AC80", Offset = "0xF1AC80", VA = "0xF1AC80")]
			internal bool <SketchHasChanges>b__323_3(VideoWidget w)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A8F8", Offset = "0xB2A8F8")]
		private sealed class <RenderPathAndQuit>d__304 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x17000646")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C8")]
				[Address(RVA = "0xF1D7F0", Offset = "0xF1D7F0", VA = "0xF1D7F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000647")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026CA")]
				[Address(RVA = "0xF1D838", Offset = "0xF1D838", VA = "0xF1D838", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xF1D6FC", Offset = "0xF1D6FC", VA = "0xF1D6FC")]
			[DebuggerHidden]
			public <RenderPathAndQuit>d__304(int <>1__state)
			{
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xF1D728", Offset = "0xF1D728", VA = "0xF1D728", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xF1D72C", Offset = "0xF1D72C", VA = "0xF1D72C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xF1D7F8", Offset = "0xF1D7F8", VA = "0xF1D7F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A908", Offset = "0xB2A908")]
		private sealed class <ExportListAndQuit>d__305 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x4002697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IEnumerator<Null> <coroutine>5__2;

			[Token(Token = "0x17000648")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0xF1C168", Offset = "0xF1C168", VA = "0xF1C168", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000649")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D1")]
				[Address(RVA = "0xF1C1B0", Offset = "0xF1C1B0", VA = "0xF1C1B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xF1BA20", Offset = "0xF1BA20", VA = "0xF1BA20")]
			[DebuggerHidden]
			public <ExportListAndQuit>d__305(int <>1__state)
			{
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xF1BA4C", Offset = "0xF1BA4C", VA = "0xF1BA4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xF1BB24", Offset = "0xF1BB24", VA = "0xF1BB24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xF1BA68", Offset = "0xF1BA68", VA = "0xF1BA68")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xF1C170", Offset = "0xF1C170", VA = "0xF1C170", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A918", Offset = "0xB2A918")]
		private sealed class <LoadAndExportList>d__307 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x400269A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> filenames;

			[Token(Token = "0x400269B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string>.Enumerator <>7__wrap1;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IEnumerator<Null> <coroutine>5__3;

			[Token(Token = "0x1700064A")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60026D7")]
				[Address(RVA = "0xF1D218", Offset = "0xF1D218", VA = "0xF1D218", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D9")]
				[Address(RVA = "0xF1D260", Offset = "0xF1D260", VA = "0xF1D260", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xF1CD9C", Offset = "0xF1CD9C", VA = "0xF1CD9C")]
			[DebuggerHidden]
			public <LoadAndExportList>d__307(int <>1__state)
			{
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xF1CDC8", Offset = "0xF1CDC8", VA = "0xF1CDC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xF1CF68", Offset = "0xF1CF68", VA = "0xF1CF68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xF1CF14", Offset = "0xF1CF14", VA = "0xF1CF14")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xF1CE58", Offset = "0xF1CE58", VA = "0xF1CE58")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xF1D220", Offset = "0xF1D220", VA = "0xF1D220", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A928", Offset = "0xB2A928")]
		private sealed class <LoadAndExportAll>d__308 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400269E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400269F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40026A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x40026A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SketchSet <sketchSet>5__2;

			[Token(Token = "0x40026A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x40026A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<Null> <coroutine>5__4;

			[Token(Token = "0x1700064C")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60026DE")]
				[Address(RVA = "0xF1CD4C", Offset = "0xF1CD4C", VA = "0xF1CD4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E0")]
				[Address(RVA = "0xF1CD94", Offset = "0xF1CD94", VA = "0xF1CD94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xF1C814", Offset = "0xF1C814", VA = "0xF1C814")]
			[DebuggerHidden]
			public <LoadAndExportAll>d__308(int <>1__state)
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xF1C840", Offset = "0xF1C840", VA = "0xF1C840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xF1C918", Offset = "0xF1C918", VA = "0xF1C918", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xF1C85C", Offset = "0xF1C85C", VA = "0xF1C85C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xF1CD54", Offset = "0xF1CD54", VA = "0xF1CD54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A938", Offset = "0xB2A938")]
		private sealed class <LoadTiltFile>d__309 : IEnumerable<Null>, IEnumerable, IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x40026A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string filename;

			[Token(Token = "0x40026A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__filename;

			[Token(Token = "0x40026AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SceneSettings.RequestInstantSceneSwitch <unused>5__2;

			[Token(Token = "0x40026AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__3;

			[Token(Token = "0x1700064E")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60026E5")]
				[Address(RVA = "0xF1D5F8", Offset = "0xF1D5F8", VA = "0xF1D5F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E7")]
				[Address(RVA = "0xF1D640", Offset = "0xF1D640", VA = "0xF1D640", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xF1D268", Offset = "0xF1D268", VA = "0xF1D268")]
			[DebuggerHidden]
			public <LoadTiltFile>d__309(int <>1__state)
			{
			}

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xF1D2A0", Offset = "0xF1D2A0", VA = "0xF1D2A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xF1D37C", Offset = "0xF1D37C", VA = "0xF1D37C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xF1D2C0", Offset = "0xF1D2C0", VA = "0xF1D2C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xF1D600", Offset = "0xF1D600", VA = "0xF1D600", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xF1D648", Offset = "0xF1D648", VA = "0xF1D648", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Null> System.Collections.Generic.IEnumerable<TiltBrush.Null>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xF1D6F8", Offset = "0xF1D6F8", VA = "0xF1D6F8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A948", Offset = "0xB2A948")]
		private sealed class <LoadAndExport>d__310 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<Null> <>7__wrap1;

			[Token(Token = "0x17000650")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0xF1C7C4", Offset = "0xF1C7C4", VA = "0xF1C7C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000651")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F1")]
				[Address(RVA = "0xF1C80C", Offset = "0xF1C80C", VA = "0xF1C80C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xF1C1B8", Offset = "0xF1C1B8", VA = "0xF1C1B8")]
			[DebuggerHidden]
			public <LoadAndExport>d__310(int <>1__state)
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xF1C1E4", Offset = "0xF1C1E4", VA = "0xF1C1E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xF1C3EC", Offset = "0xF1C3EC", VA = "0xF1C3EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xF1C274", Offset = "0xF1C274", VA = "0xF1C274")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xF1C330", Offset = "0xF1C330", VA = "0xF1C330")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xF1C7CC", Offset = "0xF1C7CC", VA = "0xF1C7CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A958", Offset = "0xB2A958")]
		private sealed class <DoProfiling>d__330 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SketchControlsScript <>4__this;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool andQuit;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private TrTransform <oldWandPose>5__2;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private TrTransform <oldBrushPose>5__3;

			[Token(Token = "0x40026B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private App.AppState <oldState>5__4;

			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TrTransform <camPose>5__5;

			[Token(Token = "0x17000652")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0xF1B9D0", Offset = "0xF1B9D0", VA = "0xF1B9D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000653")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0xF1BA18", Offset = "0xF1BA18", VA = "0xF1BA18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xF1ADCC", Offset = "0xF1ADCC", VA = "0xF1ADCC")]
			[DebuggerHidden]
			public <DoProfiling>d__330(int <>1__state)
			{
			}

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xF1ADF8", Offset = "0xF1ADF8", VA = "0xF1ADF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xF1ADFC", Offset = "0xF1ADFC", VA = "0xF1ADFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xF1B9D8", Offset = "0xF1B9D8", VA = "0xF1B9D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002532")]
		public const string kRemoveHeadsetFyi = "Remove headset to view.";

		[Token(Token = "0x4002533")]
		private const string kTiltBrushGalleryUrl = "https://poly.google.com/tiltbrush";

		[Token(Token = "0x4002534")]
		private const string kBlocksGalleryUrl = "https://poly.google.com/blocks";

		[Token(Token = "0x4002535")]
		private const string kPolyMainPageUri = "https://poly.google.com";

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchControlsScript m_Instance;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool sm_enableGrabHaptics;

		[Token(Token = "0x4002538")]
		private const float kControlPointHistoryMaxTime = 0.1f;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_SketchSurface;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SketchMemoryScript.PlaybackMode m_DefaultSketchPlaybackMode;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_GazeMaxAngleFromPointing;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_GazeMaxAngleFacingToForward;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_AtlasIconTextures;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveIconTool m_SaveIconTool;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_CreditsSketchFilename;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_AshleysSketchFilename;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DefaultSketchLoadSpeed;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_TransformGizmoPrefab;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_RotationIconPrefab;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_GazeMaxAngleFromFacing;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_GazeMaxDistance;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_GazeControllerPointingDistance;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_GazePanelDectivationDelay;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_UIReticle;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_UIReticleMobile;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_UIReticleSixDofController;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_DoubleTapWindow;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_PushPullScale;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RotationCursorScript m_RotationCursor;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_RotationMaxAngle;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_RotationScalar;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_RotationRollScalar;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float m_PanScalar;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_AdjustToolSizeScalar;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject m_IRCChatPrefab;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject m_YouTubeChatPrefab;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject m_Decor;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BaseTool.ToolType m_InitialTool;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_ReleaseNotesURL;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_HelpCenterURL;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string m_ThirdPartyNoticesURL;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string m_TosURL;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string m_PrivacyURL;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private string m_QuestSideLoadingHowToURL;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float m_WorldTransformMinScale;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float m_WorldTransformMaxScale;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34C84", Offset = "0xB34C84")]
		private float m_UndoRedoHold_DurationBeforeStart;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private float m_UndoRedoHold_RepeatInterval;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34CE0", Offset = "0xB34CE0")]
		private GameObject m_PinCushionPrefab;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34D2C", Offset = "0xB34D2C")]
		private float m_GrabWorldFadeSpeed;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private Color m_GrabWorldGridColor;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private ControllerGrabVisuals m_ControllerGrabVisuals;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float m_WidgetGpuIntersectionRadius;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34DA8", Offset = "0xB34DA8")]
		private int m_NumStrokesForSaveIcon;

		[NonSerialized]
		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Color m_GrabHighlightActiveColor;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float m_TossThresholdMeters;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float m_TossMaxPivotDistMeters;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private SketchSurfacePanel m_SketchSurfacePanel;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private SketchMemoryScript.PlaybackMode m_SketchPlaybackMode;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject m_TransformGizmo;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private TransformGizmoScript m_TransformGizmoScript;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject m_RotationIcon;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float m_MouseDeltaX;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float m_MouseDeltaY;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float m_MouseDeltaXScaled;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float m_MouseDeltaYScaled;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float m_PositionOffsetResetTapTime;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool m_EatToolScaleInput;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
		private bool m_KeyboardHoveredLastFrame;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private PanelManager m_PanelManager;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private WidgetManager m_WidgetManager;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private PinCushion m_PinCushion;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool m_EatPinCushionInput;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Ray m_CurrentGazeRay;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Quaternion m_CurrentHeadOrientation;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private GazeResult[] m_GazeResults;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int m_CurrentGazeObject;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private bool m_EatInputGazeObject;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 m_CurrentGazeHitPoint;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Ray m_GazeControllerRay;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Ray m_GazeControllerRayActivePanel;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private bool m_ForcePanelActivation;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float m_GazePanelDectivationCountdown;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private bool m_PanelsVisibilityRequested;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
		private bool m_HeadOffset;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float m_UndoHold_Timer;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float m_RedoHold_Timer;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private GrabState m_GrabBrush;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private GrabState m_GrabWand;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private WorldTransformResetState m_WorldTransformResetState;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private TrTransform m_WorldTransformResetXf;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private GrabWorldState m_GrabWorldState;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private float m_WorldTransformFadeAmount;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private bool m_AllowWorldTransformLastFrame;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D5")]
		private bool m_WorldBeingGrabbed;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private TrTransform m_xfDropCamReset_RS;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Queue<GpuIntersectionResult> m_BrushResults;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Queue<GpuIntersectionResult> m_WandResults;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private int m_WidgetGpuIntersectionLayer;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private GrabWidget m_CurrentGrabWidget;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private GrabWidget m_MaybeDriftingGrabWidget;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private GrabWidget m_PotentialGrabWidgetBrush;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private GrabWidget m_PotentialGrabWidgetWand;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private bool m_PotentialGrabWidgetBrushValid;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x331")]
		private bool m_PotentialGrabWidgetWandValid;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private GrabWidgetData m_BackupBrushGrabData;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private GrabWidgetData m_BackupWandGrabData;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private GrabWidgetState m_GrabWidgetState;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private GrabWidgetControllerInfo m_GrabWidgetOneHandInfo;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private TrTransform m_GrabWidgetTwoHandBrushPrev;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private TrTransform m_GrabWidgetTwoHandWandPrev;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Queue<GrabWidgetHoldPoint> m_GrabWidgetHoldHistory;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private Quaternion m_RotationOrigin;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Vector2 m_RotationCursorOffset;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private bool m_RotationRollActive;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float m_RotationResetTapTime;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private RotationType m_CurrentRotationType;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private bool m_AutoOrientAfterRotation;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private Vector3 m_SurfaceForward;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private Vector3 m_SurfaceRight;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Vector3 m_SurfaceUp;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		private Vector3 m_SurfaceLockOffset;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private Vector3 m_SurfaceLockBaseSurfacePosition;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private Vector3 m_SurfaceLockBaseControllerPosition;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private Quaternion m_SurfaceLockBaseHeadRotation;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private Quaternion m_SurfaceLockBaseControllerRotation;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Quaternion m_SurfaceLockBaseSurfaceRotation;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private InputManager.ControllerName m_SurfaceLockActingController;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		private float m_SurfaceLockControllerBaseScalar;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private float m_SurfaceLockControllerScalar;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		private bool m_PositioningPanelWithHead;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private Quaternion m_PositioningPanelBaseHeadRotation;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private Vector3 m_PositioningPanelOffset;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		private float m_PositioningTimer;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private float m_PositioningSpeed;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private DraftingVisibilityOption m_DraftingVisibility;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private Vector3 m_SketchOrigin;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private ControlsType m_ControlsType;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private GrabWidget m_IRCChatWidget;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private GrabWidget m_YouTubeChatWidget;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private MultiCamCaptureRig m_MultiCamCaptureRig;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private CameraPathCaptureRig m_CameraPathCaptureRig;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private bool m_ViewOnly;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		private InputState m_CurrentInputState;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		private InputStateConfig[] m_InputStateConfigs;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		private GrabIntersectionState m_CurrentGrabIntersectionState;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private float m_WorldTransformSpeedSmoothed;

		[Token(Token = "0x17000636")]
		public MultiCamCaptureRig MultiCamCaptureRig
		{
			[Token(Token = "0x600260F")]
			[Address(RVA = "0xE7F3B4", Offset = "0xE7F3B4", VA = "0xE7F3B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000637")]
		public CameraPathCaptureRig CameraPathCaptureRig
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0xE7F3BC", Offset = "0xE7F3BC", VA = "0xE7F3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000638")]
		public ControllerGrabVisuals ControllerGrabVisuals
		{
			[Token(Token = "0x6002611")]
			[Address(RVA = "0xE7F3C4", Offset = "0xE7F3C4", VA = "0xE7F3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000639")]
		public SketchMemoryScript.PlaybackMode SketchPlaybackMode
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0xE7F3CC", Offset = "0xE7F3CC", VA = "0xE7F3CC")]
			get
			{
				return default(SketchMemoryScript.PlaybackMode);
			}
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xE7F3D4", Offset = "0xE7F3D4", VA = "0xE7F3D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700063A")]
		public Transform m_Canvas
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xE7F3DC", Offset = "0xE7F3DC", VA = "0xE7F3DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063B")]
		public ControlsType ActiveControlsType
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xE7F434", Offset = "0xE7F434", VA = "0xE7F434")]
			get
			{
				return default(ControlsType);
			}
			[Token(Token = "0x6002616")]
			[Address(RVA = "0xE7F43C", Offset = "0xE7F43C", VA = "0xE7F43C")]
			set
			{
			}
		}

		[Token(Token = "0x1700063C")]
		public float WorldTransformMinScale
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0xE7F444", Offset = "0xE7F444", VA = "0xE7F444")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063D")]
		public float WorldTransformMaxScale
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0xE7F48C", Offset = "0xE7F48C", VA = "0xE7F48C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063E")]
		public float GazeMaxDistance
		{
			[Token(Token = "0x600261B")]
			[Address(RVA = "0xE7F4F8", Offset = "0xE7F4F8", VA = "0xE7F4F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063F")]
		public InputManager.ControllerName OneHandGrabController
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0xE7B4D0", Offset = "0xE7B4D0", VA = "0xE7B4D0")]
			get
			{
				return default(InputManager.ControllerName);
			}
		}

		[Token(Token = "0x17000640")]
		public bool InGrabCanvasMode
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xE7FC08", Offset = "0xE7FC08", VA = "0xE7FC08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000641")]
		private TrTransform GrabbedPose
		{
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xE7FCB4", Offset = "0xE7FCB4", VA = "0xE7FCB4")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xE7FD20", Offset = "0xE7FD20", VA = "0xE7FD20")]
			set
			{
			}
		}

		[Token(Token = "0x17000642")]
		public bool AtlasIconTextures
		{
			[Token(Token = "0x6002648")]
			[Address(RVA = "0xE7FF9C", Offset = "0xE7FF9C", VA = "0xE7FF9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000643")]
		public IconTextureAtlas IconTextureAtlas
		{
			[Token(Token = "0x6002649")]
			[Address(RVA = "0xE7FFA4", Offset = "0xE7FFA4", VA = "0xE7FFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xE7F4D0", Offset = "0xE7F4D0", VA = "0xE7F4D0")]
		public void SetInitialTool(BaseTool.ToolType rType)
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xE7F4D8", Offset = "0xE7F4D8", VA = "0xE7F4D8")]
		public void SetInFreePaintMode(bool bFreePaint)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xE7F500", Offset = "0xE7F500", VA = "0xE7F500")]
		public InputManager.ControllerName PotentialOneHandGrabController(GrabWidget widget)
		{
			return default(InputManager.ControllerName);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xE7F5D0", Offset = "0xE7F5D0", VA = "0xE7F5D0")]
		public Vector3 GetSurfaceForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xE7F5E0", Offset = "0xE7F5E0", VA = "0xE7F5E0")]
		public Vector3 GetSurfaceUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xE7F5F0", Offset = "0xE7F5F0", VA = "0xE7F5F0")]
		public Vector3 GetSurfaceRight()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xE7F600", Offset = "0xE7F600", VA = "0xE7F600")]
		public Vector3 GetSketchOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xE7F610", Offset = "0xE7F610", VA = "0xE7F610")]
		public float GetDefaultSketchLoadSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xE7F618", Offset = "0xE7F618", VA = "0xE7F618")]
		public Quaternion GetCurrentHeadOrientation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xE7F62C", Offset = "0xE7F62C", VA = "0xE7F62C")]
		public Vector3 GetUIReticlePos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xE7F658", Offset = "0xE7F658", VA = "0xE7F658")]
		public Vector3 GetSweetSpotPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xE7F68C", Offset = "0xE7F68C", VA = "0xE7F68C")]
		public void SetSketchOrigin(Vector3 vOrigin)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xE6E710", Offset = "0xE6E710", VA = "0xE6E710")]
		public void EatGazeObjectInput()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xE79BF8", Offset = "0xE79BF8", VA = "0xE79BF8")]
		public void EatToolScaleInput()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xE7F69C", Offset = "0xE7F69C", VA = "0xE7F69C")]
		public void EatGrabInput()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xE7F6AC", Offset = "0xE7F6AC", VA = "0xE7F6AC")]
		public bool ShouldRespondToPadInput(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xE7F76C", Offset = "0xE7F76C", VA = "0xE7F76C")]
		public void ForcePanelActivation(bool bForce)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xE7D688", Offset = "0xE7D688", VA = "0xE7D688")]
		public bool IsUserInteractingWithUI()
		{
			return default(bool);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0xE7F808", Offset = "0xE7F808", VA = "0xE7F808")]
		public bool IsUIBlockingUndoRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xE737A4", Offset = "0xE737A4", VA = "0xE737A4")]
		public bool IsUserAbleToInteractWithAnyWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xE7F84C", Offset = "0xE7F84C", VA = "0xE7F84C")]
		public bool IsUserInteractingWithAnyWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0xE7F8B8", Offset = "0xE7F8B8", VA = "0xE7F8B8")]
		public bool IsUserGrabbingAnyPanel()
		{
			return default(bool);
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0xE76F60", Offset = "0xE76F60", VA = "0xE76F60")]
		public bool IsUsersBrushIntersectingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0xE73880", Offset = "0xE73880", VA = "0xE73880")]
		public bool IsUserIntersectingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0xE73960", Offset = "0xE73960", VA = "0xE73960")]
		public bool IsUserInteractingWithSelectionWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xE7F97C", Offset = "0xE7F97C", VA = "0xE7F97C")]
		public bool IsUserGrabbingWorld()
		{
			return default(bool);
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0xE7F99C", Offset = "0xE7F99C", VA = "0xE7F99C")]
		public bool IsUserGrabbingWorldWithBrushHand()
		{
			return default(bool);
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0xE7F9A4", Offset = "0xE7F9A4", VA = "0xE7F9A4")]
		public bool IsUserTransformingWorld()
		{
			return default(bool);
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0xE7F9C4", Offset = "0xE7F9C4", VA = "0xE7F9C4")]
		public float GetGazePanelActivationRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0xE7F9D4", Offset = "0xE7F9D4", VA = "0xE7F9D4")]
		public bool IsCurrentGrabWidgetPinned()
		{
			return default(bool);
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0xE7FA18", Offset = "0xE7FA18", VA = "0xE7FA18")]
		public bool CanCurrentGrabWidgetBePinned()
		{
			return default(bool);
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0xE7FA5C", Offset = "0xE7FA5C", VA = "0xE7FA5C")]
		public bool DidUserGrabWithBothInside()
		{
			return default(bool);
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0xE7FA7C", Offset = "0xE7FA7C", VA = "0xE7FA7C")]
		public bool IsUserGrabbingWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0xE7B4C0", Offset = "0xE7B4C0", VA = "0xE7B4C0")]
		public bool IsUserTwoHandGrabbingWidget()
		{
			return default(bool);
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0xE7FAF4", Offset = "0xE7FAF4", VA = "0xE7FAF4")]
		public bool IsPinCushionShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0xE7FB10", Offset = "0xE7FB10", VA = "0xE7FB10")]
		public bool IsUserLookingAtPanel(BasePanel panel)
		{
			return default(bool);
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0xE7FBE8", Offset = "0xE7FBE8", VA = "0xE7FBE8")]
		public SaveIconTool GetSaveIconTool()
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0xE7FBF0", Offset = "0xE7FBF0", VA = "0xE7FBF0")]
		public DropCamWidget GetDropCampWidget()
		{
			return null;
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xE7FBF8", Offset = "0xE7FBF8", VA = "0xE7FBF8")]
		public bool IsGrabWorldStateStable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0xE7FDA8", Offset = "0xE7FDA8", VA = "0xE7FDA8")]
		public Transform GazeObjectTransform()
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0xE7FEE0", Offset = "0xE7FEE0", VA = "0xE7FEE0")]
		public void ForceShowUIReticle(bool bVisible)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0xE7FF00", Offset = "0xE7FF00", VA = "0xE7FF00")]
		public void SetUIReticleTransform(Vector3 vPos, Vector3 vForward)
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0xE7FFF0", Offset = "0xE7FFF0", VA = "0xE7FFF0")]
		private void DismissPopupOnCurrentGazeObject(bool force)
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0xE80048", Offset = "0xE80048", VA = "0xE80048")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0xE807BC", Offset = "0xE807BC", VA = "0xE807BC")]
		public void InitGazePanels()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0xE80984", Offset = "0xE80984", VA = "0xE80984")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0xE809D8", Offset = "0xE809D8", VA = "0xE809D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0xE80F64", Offset = "0xE80F64", VA = "0xE80F64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43ECC", Offset = "0xB43ECC")]
		private IEnumerator<Timeslice> DelayedHidePanels(int frames)
		{
			return null;
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0xE8104C", Offset = "0xE8104C", VA = "0xE8104C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0xE81150", Offset = "0xE81150", VA = "0xE81150")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0xE811AC", Offset = "0xE811AC", VA = "0xE811AC")]
		public void UpdateControls()
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0xE86344", Offset = "0xE86344", VA = "0xE86344")]
		public void UpdateControlsPostIntro()
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0xE8656C", Offset = "0xE8656C", VA = "0xE8656C")]
		public void UpdateControlsForLoading()
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0xE86614", Offset = "0xE86614", VA = "0xE86614")]
		public void UpdateControlsForReset()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0xE866A0", Offset = "0xE866A0", VA = "0xE866A0")]
		public void UpdateControlsForUploading()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0xE866E0", Offset = "0xE866E0", VA = "0xE866E0")]
		public void UpdateControlsForMemoryExceeded()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0xE81F24", Offset = "0xE81F24", VA = "0xE81F24")]
		private void UpdatePinCushionVisibility()
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0xE867E0", Offset = "0xE867E0", VA = "0xE867E0")]
		private bool CanUsePinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0xE81950", Offset = "0xE81950", VA = "0xE81950")]
		private void UpdateCurrentGazeRay()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0xE817C0", Offset = "0xE817C0", VA = "0xE817C0")]
		public void UpdateGazeObjectsAnimationState()
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0xE81D60", Offset = "0xE81D60", VA = "0xE81D60")]
		private void UpdateBaseInput()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0xE863AC", Offset = "0xE863AC", VA = "0xE863AC")]
		private void UpdateSwapControllers()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0xE83C2C", Offset = "0xE83C2C", VA = "0xE83C2C")]
		private void UpdateStandardInput()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0xE86FA4", Offset = "0xE86FA4", VA = "0xE86FA4")]
		private bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0xE870FC", Offset = "0xE870FC", VA = "0xE870FC")]
		private bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0xE870BC", Offset = "0xE870BC", VA = "0xE870BC")]
		private bool ShouldRepeatUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0xE87214", Offset = "0xE87214", VA = "0xE87214")]
		private bool ShouldRepeatRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0xE820FC", Offset = "0xE820FC", VA = "0xE820FC")]
		private void UpdateGrab()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0xE87254", Offset = "0xE87254", VA = "0xE87254")]
		private void UpdateGrab_WasNone(GrabWidget rPrevPotentialBrush, GrabWidget rPrevPotentialWand)
		{
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0xE87790", Offset = "0xE87790", VA = "0xE87790")]
		private void UpdateGrab_WasOneHand(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0xE8802C", Offset = "0xE8802C", VA = "0xE8802C")]
		private void UpdateGrab_WasTwoHands(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0xE8A78C", Offset = "0xE8A78C", VA = "0xE8A78C")]
		private void UpdateGrab_ContinuesTwoHands()
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0xE89904", Offset = "0xE89904", VA = "0xE89904")]
		private void UpdateGrab_NoneToOne(InputManager.ControllerName controllerName)
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0xE8A1F4", Offset = "0xE8A1F4", VA = "0xE8A1F4")]
		private void UpdateGrab_ToNone(GrabWidget rPrevGrabWidget)
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0xE89264", Offset = "0xE89264", VA = "0xE89264")]
		private void RequestWidgetIntersection(List<GrabWidgetData> candidates, InputManager.ControllerName controllerName)
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0xE895A4", Offset = "0xE895A4", VA = "0xE895A4")]
		private GrabWidgetData GetBestWidget(List<GrabWidgetData> candidates, Queue<GpuIntersectionResult> resultQueue)
		{
			return null;
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xE8A5AC", Offset = "0xE8A5AC", VA = "0xE8A5AC")]
		private void InitializeGrabWidgetControllerInfo(GrabWidgetControllerInfo info)
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xE8B000", Offset = "0xE8B000", VA = "0xE8B000")]
		private TrTransform GetWorkingTransform(GrabWidget w)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xE8B10C", Offset = "0xE8B10C", VA = "0xE8B10C")]
		public void RequestWorldTransformReset(bool toSavedXf = false)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xE860B0", Offset = "0xE860B0", VA = "0xE860B0")]
		private void UpdateWorldTransformReset()
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xE8843C", Offset = "0xE8843C", VA = "0xE8843C")]
		private void UpdateGrab_World()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xE8B344", Offset = "0xE8B344", VA = "0xE8B344")]
		private static Vector3 GetOverlap_Antisphere_Sphere(Vector3 lhsCenter, float lhsRadius, Vector3 rhsCenter, float rhsRadius)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xE8B3D8", Offset = "0xE8B3D8", VA = "0xE8B3D8")]
		public static bool IsValidScenePose(TrTransform xf, float radialBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xE8B61C", Offset = "0xE8B61C", VA = "0xE8B61C")]
		public static TrTransform MakeValidSceneMove(TrTransform scene0, TrTransform scene1, float radialBounds)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xE8B4C0", Offset = "0xE8B4C0", VA = "0xE8B4C0")]
		public static TrTransform MakeValidScenePose(TrTransform scenePose, float radialBounds)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xE8AFAC", Offset = "0xE8AFAC", VA = "0xE8AFAC")]
		private void ClearGrabWidgetHoldHistory()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xE8A34C", Offset = "0xE8A34C", VA = "0xE8A34C")]
		private void UpdateGrabWidgetHoldHistory(InputManager.ControllerName name)
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xE89C28", Offset = "0xE89C28", VA = "0xE89C28")]
		private bool GetGrabWidgetHoldHistory(out Vector3 vLinearVelocity, out Vector3 vAngularVelocity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xE8A500", Offset = "0xE8A500", VA = "0xE8A500")]
		private bool IsControllerNearWidget(InputManager.ControllerName name, GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xE82400", Offset = "0xE82400", VA = "0xE82400")]
		private void RefreshCurrentGazeObject()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xE8366C", Offset = "0xE8366C", VA = "0xE8366C")]
		private void UpdateActiveGazeObject()
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xE8B08C", Offset = "0xE8B08C", VA = "0xE8B08C")]
		public void ResetActivePanel()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xE84EA0", Offset = "0xE84EA0", VA = "0xE84EA0")]
		private void UpdatePanInput()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xE8508C", Offset = "0xE8508C", VA = "0xE8508C")]
		private void UpdateRotationInput()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xE858E8", Offset = "0xE858E8", VA = "0xE858E8")]
		private void UpdateHeadLockInput()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xE85B44", Offset = "0xE85B44", VA = "0xE85B44")]
		private void UpdateControllerLock()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xE85DD4", Offset = "0xE85DD4", VA = "0xE85DD4")]
		private void UpdatePushPullInput()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xE85F88", Offset = "0xE85F88", VA = "0xE85F88")]
		private void UpdateSaveInput()
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xE8601C", Offset = "0xE8601C", VA = "0xE8601C")]
		private void UpdateLoadInput()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xE8BC30", Offset = "0xE8BC30", VA = "0xE8BC30")]
		private void OnBrushSetToDefault()
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xE8BCE4", Offset = "0xE8BCE4", VA = "0xE8BCE4")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xE8C20C", Offset = "0xE8C20C", VA = "0xE8C20C")]
		public float GetControllerPadShaderRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xE86A8C", Offset = "0xE86A8C", VA = "0xE86A8C")]
		private void SwitchState(InputState rDesiredState)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xE8C2C0", Offset = "0xE8C2C0", VA = "0xE8C2C0")]
		public void RequestPanelsVisibility(bool bVisible)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xE8B928", Offset = "0xE8B928", VA = "0xE8B928")]
		private Quaternion OrientSketchSurfaceToUp()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xE8BAAC", Offset = "0xE8BAAC", VA = "0xE8BAAC")]
		private Quaternion OrientSketchSurfaceToForward()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xE80D00", Offset = "0xE80D00", VA = "0xE80D00")]
		private void ResetGrabbedPose(bool everything = false)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xE8C2CC", Offset = "0xE8C2CC", VA = "0xE8C2CC")]
		public void ResetSketchSurfaceOrientation()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xE81D20", Offset = "0xE81D20", VA = "0xE81D20")]
		private float GetAppropriateMovementScalar()
		{
			return default(float);
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xE8C390", Offset = "0xE8C390", VA = "0xE8C390")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43F2C", Offset = "0xB43F2C")]
		private IEnumerator RenderPathAndQuit()
		{
			return null;
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xE8C3FC", Offset = "0xE8C3FC", VA = "0xE8C3FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43F8C", Offset = "0xB43F8C")]
		private IEnumerator<Null> ExportListAndQuit()
		{
			return null;
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xE8C468", Offset = "0xE8C468", VA = "0xE8C468")]
		private void QuitApp()
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xE8C470", Offset = "0xE8C470", VA = "0xE8C470")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB43FEC", Offset = "0xB43FEC")]
		private IEnumerator<Null> LoadAndExportList(List<string> filenames)
		{
			return null;
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xE8C4E8", Offset = "0xE8C4E8", VA = "0xE8C4E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4404C", Offset = "0xB4404C")]
		private IEnumerator<Null> LoadAndExportAll()
		{
			return null;
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xE8C554", Offset = "0xE8C554", VA = "0xE8C554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB440AC", Offset = "0xB440AC")]
		public IEnumerable<Null> LoadTiltFile(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xE8C5D0", Offset = "0xE8C5D0", VA = "0xE8C5D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4410C", Offset = "0xB4410C")]
		private IEnumerator<Null> LoadAndExport(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xE86968", Offset = "0xE86968", VA = "0xE86968")]
		private IEnumerator<Null> ExportCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xE8C648", Offset = "0xE8C648", VA = "0xE8C648")]
		private void SaveModel()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xE8C64C", Offset = "0xE8C64C", VA = "0xE8C64C")]
		public void GenerateReplacementSaveIcon()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xE8C80C", Offset = "0xE8C80C", VA = "0xE8C80C")]
		public void GenerateBestGuessSaveIcon()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xE8C85C", Offset = "0xE8C85C", VA = "0xE8C85C")]
		public TrTransform GenerateBestGuessSaveIconTransform(int itemsToEnumerate = 0)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xE8CECC", Offset = "0xE8CECC", VA = "0xE8CECC")]
		public void GenerateBoundingBoxSaveIcon()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xE8D240", Offset = "0xE8D240", VA = "0xE8D240")]
		private void LoadSketch(SceneFileInfo fileInfo, bool quickload = false)
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xE7702C", Offset = "0xE7702C", VA = "0xE7702C")]
		public void IssueGlobalCommand(GlobalCommands rEnum, int iParam1 = -1, int iParam2 = -1, [Optional] string sParam)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xE8DA38", Offset = "0xE8DA38", VA = "0xE8DA38")]
		public bool IsCommandActive(GlobalCommands rEnum, int iParam = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xE8D490", Offset = "0xE8D490", VA = "0xE8D490")]
		public void NewSketch(bool fade, bool skipSceneChanges = false, bool repositionAtOrigin = true)
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xE8B1F4", Offset = "0xE8B1F4", VA = "0xE8B1F4")]
		private bool WorldIsReset(bool toSavedXf)
		{
			return default(bool);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xE8E054", Offset = "0xE8E054", VA = "0xE8E054")]
		public bool IsCommandAvailable(GlobalCommands rEnum, int iParam = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xE8ECA0", Offset = "0xE8ECA0", VA = "0xE8ECA0")]
		public bool SketchHasChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xE8F18C", Offset = "0xE8F18C", VA = "0xE8F18C")]
		public void OpenPanelOfType(BasePanel.PanelType type, TrTransform trSpawnXf)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xE8F1E0", Offset = "0xE8F1E0", VA = "0xE8F1E0")]
		public void RestoreFloatingPanels()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xE80FE0", Offset = "0xE80FE0", VA = "0xE80FE0")]
		public void UpdateDraftingVisibility()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xE8D84C", Offset = "0xE8D84C", VA = "0xE8D84C")]
		private void ToggleProfiling()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0xE8D9D8", Offset = "0xE8D9D8", VA = "0xE8D9D8")]
		private void DoAutoProfile()
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xE8DA08", Offset = "0xE8DA08", VA = "0xE8DA08")]
		private void DoAutoProfileAndQuit()
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xE8F240", Offset = "0xE8F240", VA = "0xE8F240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4416C", Offset = "0xB4416C")]
		private IEnumerator DoProfiling(bool andQuit = false)
		{
			return null;
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xE7F784", Offset = "0xE7F784", VA = "0xE7F784")]
		public bool IsLookingAtObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xE8F2C0", Offset = "0xE8F2C0", VA = "0xE8F2C0")]
		public SketchControlsScript()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public static class EnumExtensions
	{
		[Token(Token = "0x60026F8")]
		public static bool HasFlag<T>(this T flags, T flag) where T : struct, IConvertible
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005EB")]
	public class SketchMemoryScript : MonoBehaviour
	{
		[Token(Token = "0x20005EC")]
		[Flags]
		public enum StrokeFlags
		{
			[Token(Token = "0x40026D8")]
			None = 0,
			[Token(Token = "0x40026D9")]
			Deprecated1 = 1,
			[Token(Token = "0x40026DA")]
			IsGroupContinue = 2
		}

		[Token(Token = "0x20005ED")]
		public enum PlaybackMode
		{
			[Token(Token = "0x40026DC")]
			Distance,
			[Token(Token = "0x40026DD")]
			Timestamps
		}

		[Serializable]
		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A988", Offset = "0xB2A988")]
		private sealed class <>c
		{
			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BaseCommand, bool> <>9__68_0;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Stroke, bool> <>9__72_0;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Stroke, bool> <>9__90_0;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Stroke, uint> <>9__107_0;

			[Token(Token = "0x6002746")]
			[Address(RVA = "0xF1DAC4", Offset = "0xF1DAC4", VA = "0xF1DAC4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0xF1DACC", Offset = "0xF1DACC", VA = "0xF1DACC")]
			internal bool <IsMemoryDirty>b__68_0(BaseCommand e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002748")]
			[Address(RVA = "0xF1DAEC", Offset = "0xF1DAEC", VA = "0xF1DAEC")]
			internal bool <Update>b__72_0(Stroke obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0xF1DB08", Offset = "0xF1DB08", VA = "0xF1DB08")]
			internal bool <GetAllUnselectedActiveStrokes>b__90_0(Stroke s)
			{
				return default(bool);
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0xF1DBEC", Offset = "0xF1DBEC", VA = "0xF1DBEC")]
			internal uint <SortMemoryList>b__107_0(Stroke obj)
			{
				return default(uint);
			}
		}

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A998", Offset = "0xB2A998")]
		private sealed class <RepaintCoroutine>d__93 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40026E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SketchMemoryScript <>4__this;

			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <numStrokes>5__2;

			[Token(Token = "0x40026E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <strokesRepainted>5__3;

			[Token(Token = "0x40026E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalPrevVerts>5__4;

			[Token(Token = "0x40026E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVerts>5__5;

			[Token(Token = "0x40026EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool[] <batchEnabled>5__6;

			[Token(Token = "0x40026EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <batchEnabledIndex>5__7;

			[Token(Token = "0x40026EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private LinkedListNode<Stroke> <node>5__8;

			[Token(Token = "0x1700065B")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600274E")]
				[Address(RVA = "0xF1E53C", Offset = "0xF1E53C", VA = "0xF1E53C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700065C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002750")]
				[Address(RVA = "0xF1E584", Offset = "0xF1E584", VA = "0xF1E584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xF1DC08", Offset = "0xF1DC08", VA = "0xF1DC08")]
			[DebuggerHidden]
			public <RepaintCoroutine>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xF1DC34", Offset = "0xF1DC34", VA = "0xF1DC34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0xF1DC38", Offset = "0xF1DC38", VA = "0xF1DC38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0xF1E544", Offset = "0xF1E544", VA = "0xF1E544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SketchMemoryScript m_Instance;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_UndoBatchMeshPrefab;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_UndoBatchMesh;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_SanityCheckStrokes;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int m_LastCheckedVertCount;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_MemoryWarningVertCount;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Stack<BaseCommand> m_OperationStack;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Stack<BaseCommand> m_RedoStack;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LinkedList<Stroke> m_MemoryList;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LinkedListNode<Stroke> m_CurrentNodeByTime;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IScenePlayback m_ScenePlayback;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_IsInitialPlay;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private PlaybackMode m_PlaybackMode;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_DistancePerSecond;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_LastOperationStackCount;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_HasVisibleObjects;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_MemoryExceeded;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool m_MemoryWarningAccepted;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HashSet<Stroke> m_DeleteStrokes;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private BaseCommand m_RepaintStrokeParent;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TrTransform m_xfSketchInitial_RS;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine m_RepaintCoroutine;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_RepaintProgress;

		[Token(Token = "0x17000654")]
		public float RepaintProgress
		{
			[Token(Token = "0x6002708")]
			[Address(RVA = "0x1064790", Offset = "0x1064790", VA = "0x1064790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000655")]
		public TrTransform InitialSketchTransform
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0x10647A8", Offset = "0x10647A8", VA = "0x10647A8")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x600270A")]
			[Address(RVA = "0x10647B4", Offset = "0x10647B4", VA = "0x10647B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000656")]
		public bool IsPlayingBack
		{
			[Token(Token = "0x600270B")]
			[Address(RVA = "0x10647C0", Offset = "0x10647C0", VA = "0x10647C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000657")]
		public float PlaybackMetersPerSecond
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0x10647D0", Offset = "0x10647D0", VA = "0x10647D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000658")]
		public bool MemoryExceeded
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x10648C8", Offset = "0x10648C8", VA = "0x10648C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000659")]
		public bool MemoryWarningAccepted
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x10648D0", Offset = "0x10648D0", VA = "0x10648D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x10648D8", Offset = "0x10648D8", VA = "0x10648D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		public float MemoryExceededRatio
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x1064904", Offset = "0x1064904", VA = "0x1064904")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000092")]
		public event Action OperationStackChanged
		{
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1063EB4", Offset = "0x1063EB4", VA = "0x1063EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4447C", Offset = "0xB4447C")]
			add
			{
			}
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1063F54", Offset = "0x1063F54", VA = "0x1063F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4448C", Offset = "0xB4448C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event Action<Stroke> OnStrokeMemorized
		{
			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x1063FF4", Offset = "0x1063FF4", VA = "0x1063FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4449C", Offset = "0xB4449C")]
			add
			{
			}
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1064094", Offset = "0x1064094", VA = "0x1064094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444AC", Offset = "0xB444AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event Action<Stroke> OnStrokeDestroyed
		{
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x1064134", Offset = "0x1064134", VA = "0x1064134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444BC", Offset = "0xB444BC")]
			add
			{
			}
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x10641D4", Offset = "0x10641D4", VA = "0x10641D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444CC", Offset = "0xB444CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event Action<Stroke> OnDeleteStroke
		{
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1064274", Offset = "0x1064274", VA = "0x1064274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444DC", Offset = "0xB444DC")]
			add
			{
			}
			[Token(Token = "0x6002700")]
			[Address(RVA = "0x1064314", Offset = "0x1064314", VA = "0x1064314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444EC", Offset = "0xB444EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event Action<string, string> OnDuplicateStroke
		{
			[Token(Token = "0x6002701")]
			[Address(RVA = "0x10643B4", Offset = "0x10643B4", VA = "0x10643B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB444FC", Offset = "0xB444FC")]
			add
			{
			}
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1064454", Offset = "0x1064454", VA = "0x1064454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4450C", Offset = "0xB4450C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event Action<Stroke, Color, Guid> OnRepaintStroke
		{
			[Token(Token = "0x6002703")]
			[Address(RVA = "0x10644F4", Offset = "0x10644F4", VA = "0x10644F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4451C", Offset = "0xB4451C")]
			add
			{
			}
			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1064594", Offset = "0x1064594", VA = "0x1064594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4452C", Offset = "0xB4452C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event Action OnMemoryCleared
		{
			[Token(Token = "0x6002705")]
			[Address(RVA = "0x1064634", Offset = "0x1064634", VA = "0x1064634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4453C", Offset = "0xB4453C")]
			add
			{
			}
			[Token(Token = "0x6002706")]
			[Address(RVA = "0x10646D4", Offset = "0x10646D4", VA = "0x10646D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4454C", Offset = "0xB4454C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1064774", Offset = "0x1064774", VA = "0x1064774")]
		public static void SetFlag(ref StrokeFlags flags, StrokeFlags flag, bool flagValue)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x10647E4", Offset = "0x10647E4", VA = "0x10647E4")]
		public float GetDrawnPercent()
		{
			return default(float);
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x10648C0", Offset = "0x10648C0", VA = "0x10648C0")]
		public bool HasVisibleObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1064918", Offset = "0x1064918", VA = "0x1064918")]
		public void SetLastOperationStackCount()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1064968", Offset = "0x1064968", VA = "0x1064968")]
		public bool WillVertCountPutUsOverTheMemoryLimit(int numVerts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1064A78", Offset = "0x1064A78", VA = "0x1064A78")]
		public void CheckSketchForOverMemoryLimit()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1064CC8", Offset = "0x1064CC8", VA = "0x1064CC8")]
		public bool IsMemoryDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1064E58", Offset = "0x1064E58", VA = "0x1064E58")]
		public bool CanUndo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1064EF0", Offset = "0x1064EF0", VA = "0x1064EF0")]
		public bool CanRedo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x1064F88", Offset = "0x1064F88", VA = "0x1064F88")]
		private void Awake()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x10650F0", Offset = "0x10650F0", VA = "0x10650F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x106581C", Offset = "0x106581C", VA = "0x106581C")]
		public Stroke DuplicateStroke(Stroke srcStroke, CanvasScript canvas, TrTransform? transform, bool fromMultiplayer = false)
		{
			return null;
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x10656C4", Offset = "0x10656C4", VA = "0x10656C4")]
		public void PerformAndRecordCommand(BaseCommand command, bool discardIfNotMerged = false)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1065D78", Offset = "0x1065D78", VA = "0x1065D78")]
		public void RecordCommand(BaseCommand command)
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1065E80", Offset = "0x1065E80", VA = "0x1065E80")]
		public double GetApproximateLatestTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1065F5C", Offset = "0x1065F5C", VA = "0x1065F5C")]
		public double GetEarliestTimestamp()
		{
			return default(double);
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x106602C", Offset = "0x106602C", VA = "0x106602C")]
		private static bool StrokeTimeLT(Stroke a, Stroke b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1066074", Offset = "0x1066074", VA = "0x1066074")]
		private static bool StrokeTimeLTE(Stroke a, Stroke b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x1065AD4", Offset = "0x1065AD4", VA = "0x1065AD4")]
		public void MemoryListAdd(Stroke stroke)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x106609C", Offset = "0x106609C", VA = "0x106609C")]
		public void MemorizeBatchedBrushStroke(BatchSubset subset, Color rColor, Guid brushGuid, float fBrushSize, float brushScale, List<PointerManager.ControlPoint> rControlPoints, StrokeFlags strokeFlags, StencilWidget stencil, float lineLength, int seed)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x10666E8", Offset = "0x10666E8", VA = "0x10666E8")]
		public void MemorizeBrushStroke(BaseBrushScript brushScript, Color rColor, Guid brushGuid, float fBrushSize, float brushScale, List<PointerManager.ControlPoint> rControlPoints, StrokeFlags strokeFlags, StencilWidget stencil, float lineLength)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x10668E8", Offset = "0x10668E8", VA = "0x10668E8")]
		public void MemorizeDeleteSelection(Stroke strokeObj, bool fromMultiplayer = false)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x1066ACC", Offset = "0x1066ACC", VA = "0x1066ACC")]
		public void MemorizeDeleteSelection(GameObject rObject)
		{
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x1066B94", Offset = "0x1066B94", VA = "0x1066B94")]
		public bool MemorizeStrokeRepaint(Stroke stroke, bool recolor, bool rebrush)
		{
			return default(bool);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1066E10", Offset = "0x1066E10", VA = "0x1066E10")]
		public bool MemorizeStrokeRepaintFromMultiplayer(Stroke stroke, Color newColorFromNetwork, Guid newBrushFromNetwork)
		{
			return default(bool);
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x1066F7C", Offset = "0x1066F7C", VA = "0x1066F7C")]
		public bool MemorizeStrokeRepaint(GameObject rObject, bool recolor, bool rebrush)
		{
			return default(bool);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1067058", Offset = "0x1067058", VA = "0x1067058")]
		public void RemoveMemoryObject(Stroke stroke)
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x10671A0", Offset = "0x10671A0", VA = "0x10671A0")]
		public void SanitizeMemoryList()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x1067288", Offset = "0x1067288", VA = "0x1067288")]
		public List<Stroke> GetAllUnselectedActiveStrokes()
		{
			return null;
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x10654D8", Offset = "0x10654D8", VA = "0x10654D8")]
		public void ClearRedo()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x10673C0", Offset = "0x10673C0", VA = "0x10673C0")]
		public void ClearMemory()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1067AC8", Offset = "0x1067AC8", VA = "0x1067AC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4455C", Offset = "0xB4455C")]
		public IEnumerator<float> RepaintCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1067B34", Offset = "0x1067B34", VA = "0x1067B34")]
		public void StepBack()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1067BD0", Offset = "0x1067BD0", VA = "0x1067BD0")]
		public void StepForward()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1067C6C", Offset = "0x1067C6C", VA = "0x1067C6C")]
		public static IEnumerable<Stroke> AllStrokes()
		{
			return null;
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1067CC4", Offset = "0x1067CC4", VA = "0x1067CC4")]
		public static int AllStrokesCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1067D34", Offset = "0x1067D34", VA = "0x1067D34")]
		public static Stroke FindStrokeByGuid(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x106562C", Offset = "0x106562C", VA = "0x106562C")]
		public static void InitUndoObject(BaseBrushScript rBrushScript)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1065644", Offset = "0x1065644", VA = "0x1065644")]
		public static void InitUndoObject(BatchSubset subset)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1067F00", Offset = "0x1067F00", VA = "0x1067F00")]
		public void UnrenderStrokeMemoryObject(Stroke stroke)
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1067F74", Offset = "0x1067F74", VA = "0x1067F74")]
		public void SetPlaybackMode(PlaybackMode mode, float distancePerSecond)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1067F80", Offset = "0x1067F80", VA = "0x1067F80")]
		public void SpeedUpMemoryDrawingSpeed()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x1067F94", Offset = "0x1067F94", VA = "0x1067F94")]
		public void QuickLoadDrawingMemory()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x106804C", Offset = "0x106804C", VA = "0x106804C")]
		public void BeginDrawingFromMemory(bool bDrawFromStart, bool forEdit = false)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x10681C0", Offset = "0x10681C0", VA = "0x10681C0")]
		public bool ContinueDrawingFromMemory()
		{
			return default(bool);
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x10684A4", Offset = "0x10684A4", VA = "0x10684A4")]
		private void SortMemoryList()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1068684", Offset = "0x1068684", VA = "0x1068684")]
		public void Redraw(bool doSort)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x1068AF4", Offset = "0x1068AF4", VA = "0x1068AF4")]
		private static string Compare(Vector3[] oldVerts, int iOldVert0, int iOldVert1, int[] oldTris, int iOldTri0, int iOldTri1, Vector2[] oldUv0s, BaseBrushScript newBrush)
		{
			return null;
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x1068DA8", Offset = "0x1068DA8", VA = "0x1068DA8")]
		private static void SanityCheckVersusReplacementBrush(Stroke oldStroke)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x1068FB0", Offset = "0x1068FB0", VA = "0x1068FB0")]
		private static string Compare(Mesh oldMesh, BaseBrushScript newBrush)
		{
			return null;
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x10662A4", Offset = "0x10662A4", VA = "0x10662A4")]
		private static void SanityCheckGeometryGeneration(Stroke oldStroke)
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x10659FC", Offset = "0x10659FC", VA = "0x10659FC")]
		private static void UpdateTimestampsToCurrentSketchTime(Stroke stroke)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1069028", Offset = "0x1069028", VA = "0x1069028")]
		public SketchMemoryScript()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class StraightEdgeGuideScript : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		public enum Shape
		{
			[Token(Token = "0x40026FA")]
			None = -1,
			[Token(Token = "0x40026FB")]
			Line,
			[Token(Token = "0x40026FC")]
			Circle,
			[Token(Token = "0x40026FD")]
			Sphere
		}

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MinDisplayLength;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_SnapDisabledDelay;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D[] m_ShapeTextures;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_MeterYOffset;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_MeterDisplay;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_ShowMeter;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_vOrigin_CS;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_TargetPos_CS;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_SnapEnabledTimeStamp;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_SnapActive;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Shape m_CurrentShape;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Shape m_TempShape;

		[Token(Token = "0x1700065D")]
		public Shape CurrentShape
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0x11B39A4", Offset = "0x11B39A4", VA = "0x11B39A4")]
			get
			{
				return default(Shape);
			}
		}

		[Token(Token = "0x1700065E")]
		public Shape TempShape
		{
			[Token(Token = "0x6002752")]
			[Address(RVA = "0x11B39AC", Offset = "0x11B39AC", VA = "0x11B39AC")]
			get
			{
				return default(Shape);
			}
		}

		[Token(Token = "0x1700065F")]
		public bool SnapEnabled
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0x11B3A34", Offset = "0x11B3A34", VA = "0x11B3A34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002759")]
			[Address(RVA = "0x11B3A6C", Offset = "0x11B3A6C", VA = "0x11B3A6C")]
			set
			{
			}
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x11B39B4", Offset = "0x11B39B4", VA = "0x11B39B4")]
		public Vector3 GetTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x11B39C0", Offset = "0x11B39C0", VA = "0x11B39C0")]
		public bool IsShowingMeter()
		{
			return default(bool);
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x11B39C8", Offset = "0x11B39C8", VA = "0x11B39C8")]
		public void FlipMeter()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x11B3A20", Offset = "0x11B3A20", VA = "0x11B3A20")]
		public void SetShowMeter(bool show)
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x11B3A2C", Offset = "0x11B3A2C", VA = "0x11B3A2C")]
		public void ForceSnapDisabled()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x11B3A98", Offset = "0x11B3A98", VA = "0x11B3A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x11B3B70", Offset = "0x11B3B70", VA = "0x11B3B70")]
		public void ShowGuide(Vector3 vOrigin)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x11B3AF0", Offset = "0x11B3AF0", VA = "0x11B3AF0")]
		public void HideGuide()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x11B3C7C", Offset = "0x11B3C7C", VA = "0x11B3C7C")]
		public void SetTempShape(Shape s)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x11B3C90", Offset = "0x11B3C90", VA = "0x11B3C90")]
		public void ResolveTempShape()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x11B3D08", Offset = "0x11B3D08", VA = "0x11B3D08")]
		public Texture2D GetCurrentButtonTexture()
		{
			return null;
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x11B3D48", Offset = "0x11B3D48", VA = "0x11B3D48")]
		public static Vector3 ApplySnap(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x11B3E9C", Offset = "0x11B3E9C", VA = "0x11B3E9C")]
		private void UpdateMeter(Vector3 vOrigin, Vector3 vTarget)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x11B42F0", Offset = "0x11B42F0", VA = "0x11B42F0")]
		public void UpdateTarget(Vector3 vPointer)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x11B44C4", Offset = "0x11B44C4", VA = "0x11B44C4")]
		public StraightEdgeGuideScript()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class Stroke : StrokeData
	{
		[Token(Token = "0x20005F3")]
		public enum Type
		{
			[Token(Token = "0x400270B")]
			NotCreated,
			[Token(Token = "0x400270C")]
			BrushStroke,
			[Token(Token = "0x400270D")]
			BatchedBrushStroke
		}

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Type m_Type;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasScript m_IntendedCanvas;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_Object;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BatchSubset m_BatchSubset;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LinkedListNode<Stroke> m_NodeByTime;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LinkedListNode<Stroke> m_PlaybackNode;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Guid m_StrokeGuid;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Guid m_CanvasGuid;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_StrokeCreatorGuid;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private StrokeData m_CopyForSaveThread;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool[] m_ControlPointsToDrop;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB34EA4", Offset = "0xB34EA4")]
		private readonly bool <IsVisibleForPlayback>k__BackingField;

		[Token(Token = "0x17000660")]
		public SketchGroupTag Group
		{
			[Token(Token = "0x6002764")]
			[Address(RVA = "0x11B44E0", Offset = "0x11B44E0", VA = "0x11B44E0")]
			get
			{
				return default(SketchGroupTag);
			}
			[Token(Token = "0x6002765")]
			[Address(RVA = "0x11B44E8", Offset = "0x11B44E8", VA = "0x11B44E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000661")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6002766")]
			[Address(RVA = "0x11B4578", Offset = "0x11B4578", VA = "0x11B4578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000662")]
		public bool IsGeometryEnabled
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0x11B464C", Offset = "0x11B464C", VA = "0x11B464C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000663")]
		public bool IsVisibleForPlayback
		{
			[Token(Token = "0x6002768")]
			[Address(RVA = "0x11B4708", Offset = "0x11B4708", VA = "0x11B4708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4460C", Offset = "0xB4460C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000664")]
		public uint HeadTimestampMs
		{
			[Token(Token = "0x6002769")]
			[Address(RVA = "0x11B4710", Offset = "0x11B4710", VA = "0x11B4710")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000665")]
		public uint TailTimestampMs
		{
			[Token(Token = "0x600276A")]
			[Address(RVA = "0x11B4744", Offset = "0x11B4744", VA = "0x11B4744")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000666")]
		public float SizeInLocalSpace
		{
			[Token(Token = "0x600276B")]
			[Address(RVA = "0x11B47A4", Offset = "0x11B47A4", VA = "0x11B47A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000667")]
		public float SizeInRoomSpace
		{
			[Token(Token = "0x600276C")]
			[Address(RVA = "0x11B47B0", Offset = "0x11B47B0", VA = "0x11B47B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000668")]
		public Transform StrokeTransform
		{
			[Token(Token = "0x600276D")]
			[Address(RVA = "0x11B4848", Offset = "0x11B4848", VA = "0x11B4848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x11B48EC", Offset = "0x11B48EC", VA = "0x11B48EC")]
		public Stroke()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x11B4AE4", Offset = "0x11B4AE4", VA = "0x11B4AE4")]
		public Stroke(Stroke existing)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x11B4C18", Offset = "0x11B4C18", VA = "0x11B4C18")]
		public StrokeData GetCopyForSaveThread()
		{
			return null;
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x11B4C80", Offset = "0x11B4C80", VA = "0x11B4C80")]
		public void InvalidateCopy()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x11B4C88", Offset = "0x11B4C88", VA = "0x11B4C88")]
		public void DestroyStroke()
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x11B4C8C", Offset = "0x11B4C8C", VA = "0x11B4C8C")]
		public void Uncreate()
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x11B4D70", Offset = "0x11B4D70", VA = "0x11B4D70")]
		public void Recreate([Optional] TrTransform? leftTransform, [Optional] CanvasScript canvas)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x11B524C", Offset = "0x11B524C", VA = "0x11B524C")]
		public void CopyGeometry(CanvasScript targetCanvas, Stroke baseStroke)
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x11B50B4", Offset = "0x11B50B4", VA = "0x11B50B4")]
		private void LeftTransformControlPoints(TrTransform leftTransform)
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x11B4F44", Offset = "0x11B4F44", VA = "0x11B4F44")]
		public void SetParent(CanvasScript canvas)
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x11B534C", Offset = "0x11B534C", VA = "0x11B534C")]
		public void SetParentKeepWorldPosition(CanvasScript canvas, [Optional] TrTransform? leftTransform)
		{
		}
	}
	[Token(Token = "0x20005F4")]
	public class StrokeData
	{
		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color m_Color;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Guid m_BrushGuid;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BrushSize;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BrushScale;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointerManager.ControlPoint[] m_ControlPoints;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SketchMemoryScript.StrokeFlags m_Flags;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_Seed;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SketchGroupTag m_Group;

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x11B49D0", Offset = "0x11B49D0", VA = "0x11B49D0")]
		public StrokeData([Optional] StrokeData existing)
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class SwitchAppName : MonoBehaviour
	{
		[Token(Token = "0x600277A")]
		[Address(RVA = "0x11B80C0", Offset = "0x11B80C0", VA = "0x11B80C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x11B8224", Offset = "0x11B8224", VA = "0x11B8224")]
		private string Switch(string target)
		{
			return null;
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x11B8294", Offset = "0x11B8294", VA = "0x11B8294")]
		public SwitchAppName()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public class Switchboard
	{
		[Token(Token = "0x14000099")]
		public event Action ToolChanged
		{
			[Token(Token = "0x600277D")]
			[Address(RVA = "0x11B8708", Offset = "0x11B8708", VA = "0x11B8708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4461C", Offset = "0xB4461C")]
			add
			{
			}
			[Token(Token = "0x600277E")]
			[Address(RVA = "0x11B87A8", Offset = "0x11B87A8", VA = "0x11B87A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4462C", Offset = "0xB4462C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public event Action MirrorVisibilityChanged
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x11B8848", Offset = "0x11B8848", VA = "0x11B8848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4463C", Offset = "0xB4463C")]
			add
			{
			}
			[Token(Token = "0x6002780")]
			[Address(RVA = "0x11B88E8", Offset = "0x11B88E8", VA = "0x11B88E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4464C", Offset = "0xB4464C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event Action PanelDismissed
		{
			[Token(Token = "0x6002781")]
			[Address(RVA = "0x11B8988", Offset = "0x11B8988", VA = "0x11B8988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4465C", Offset = "0xB4465C")]
			add
			{
			}
			[Token(Token = "0x6002782")]
			[Address(RVA = "0x11B8A28", Offset = "0x11B8A28", VA = "0x11B8A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4466C", Offset = "0xB4466C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public event Action StencilModeChanged
		{
			[Token(Token = "0x6002783")]
			[Address(RVA = "0x11B3634", Offset = "0x11B3634", VA = "0x11B3634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4467C", Offset = "0xB4467C")]
			add
			{
			}
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x11B3770", Offset = "0x11B3770", VA = "0x11B3770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4468C", Offset = "0xB4468C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event Action AudioReactiveStateChanged
		{
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x11B8AC8", Offset = "0x11B8AC8", VA = "0x11B8AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4469C", Offset = "0xB4469C")]
			add
			{
			}
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x11B8B68", Offset = "0x11B8B68", VA = "0x11B8B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446AC", Offset = "0xB446AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public event Action MemoryExceededChanged
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x11B8C08", Offset = "0x11B8C08", VA = "0x11B8C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446BC", Offset = "0xB446BC")]
			add
			{
			}
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x11B8CA8", Offset = "0x11B8CA8", VA = "0x11B8CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446CC", Offset = "0xB446CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public event Action MemoryWarningAcceptedChanged
		{
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x11B8D48", Offset = "0x11B8D48", VA = "0x11B8D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446DC", Offset = "0xB446DC")]
			add
			{
			}
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x11B8DE8", Offset = "0x11B8DE8", VA = "0x11B8DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446EC", Offset = "0xB446EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public event Action CameraPathVisibilityChanged
		{
			[Token(Token = "0x600278B")]
			[Address(RVA = "0x11B8E88", Offset = "0x11B8E88", VA = "0x11B8E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB446FC", Offset = "0xB446FC")]
			add
			{
			}
			[Token(Token = "0x600278C")]
			[Address(RVA = "0x11B8F28", Offset = "0x11B8F28", VA = "0x11B8F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4470C", Offset = "0xB4470C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event Action CameraPathKnotChanged
		{
			[Token(Token = "0x600278D")]
			[Address(RVA = "0x11B8FC8", Offset = "0x11B8FC8", VA = "0x11B8FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4471C", Offset = "0xB4471C")]
			add
			{
			}
			[Token(Token = "0x600278E")]
			[Address(RVA = "0x11B9068", Offset = "0x11B9068", VA = "0x11B9068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4472C", Offset = "0xB4472C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event Action CameraPathDeleted
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0x11B9108", Offset = "0x11B9108", VA = "0x11B9108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4473C", Offset = "0xB4473C")]
			add
			{
			}
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x11B91A8", Offset = "0x11B91A8", VA = "0x11B91A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4474C", Offset = "0xB4474C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event Action<CameraPathTool.Mode> CameraPathModeChanged
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0x11B9248", Offset = "0x11B9248", VA = "0x11B9248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4475C", Offset = "0xB4475C")]
			add
			{
			}
			[Token(Token = "0x6002792")]
			[Address(RVA = "0x11B92E8", Offset = "0x11B92E8", VA = "0x11B92E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4476C", Offset = "0xB4476C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event Action CameraPathCreated
		{
			[Token(Token = "0x6002793")]
			[Address(RVA = "0x11B9388", Offset = "0x11B9388", VA = "0x11B9388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4477C", Offset = "0xB4477C")]
			add
			{
			}
			[Token(Token = "0x6002794")]
			[Address(RVA = "0x11B9428", Offset = "0x11B9428", VA = "0x11B9428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4478C", Offset = "0xB4478C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public event Action CurrentCameraPathChanged
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0x11B94C8", Offset = "0x11B94C8", VA = "0x11B94C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4479C", Offset = "0xB4479C")]
			add
			{
			}
			[Token(Token = "0x6002796")]
			[Address(RVA = "0x11B9568", Offset = "0x11B9568", VA = "0x11B9568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447AC", Offset = "0xB447AC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event Action AllWidgetsDestroyed
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x11B9608", Offset = "0x11B9608", VA = "0x11B9608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447BC", Offset = "0xB447BC")]
			add
			{
			}
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x11B96A8", Offset = "0x11B96A8", VA = "0x11B96A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447CC", Offset = "0xB447CC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event Action SelectionChanged
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x11B9748", Offset = "0x11B9748", VA = "0x11B9748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447DC", Offset = "0xB447DC")]
			add
			{
			}
			[Token(Token = "0x600279A")]
			[Address(RVA = "0x11B97E8", Offset = "0x11B97E8", VA = "0x11B97E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447EC", Offset = "0xB447EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public event Action<VideoWidget> VideoWidgetActivated
		{
			[Token(Token = "0x600279B")]
			[Address(RVA = "0x11B9888", Offset = "0x11B9888", VA = "0x11B9888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB447FC", Offset = "0xB447FC")]
			add
			{
			}
			[Token(Token = "0x600279C")]
			[Address(RVA = "0x11B9928", Offset = "0x11B9928", VA = "0x11B9928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4480C", Offset = "0xB4480C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public event Action VideoRecordingStopped
		{
			[Token(Token = "0x600279D")]
			[Address(RVA = "0x11B99C8", Offset = "0x11B99C8", VA = "0x11B99C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4481C", Offset = "0xB4481C")]
			add
			{
			}
			[Token(Token = "0x600279E")]
			[Address(RVA = "0x11B9A68", Offset = "0x11B9A68", VA = "0x11B9A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4482C", Offset = "0xB4482C")]
			remove
			{
			}
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x11B9B08", Offset = "0x11B9B08", VA = "0x11B9B08")]
		public void TriggerAdvancedPanelsChanged()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x11B9B58", Offset = "0x11B9B58", VA = "0x11B9B58")]
		public void TriggerToolChanged()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x11B9B6C", Offset = "0x11B9B6C", VA = "0x11B9B6C")]
		public void TriggerMirrorVisibilityChanged()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x11B9B80", Offset = "0x11B9B80", VA = "0x11B9B80")]
		public void TriggerPanelDismissed()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x11B9B94", Offset = "0x11B9B94", VA = "0x11B9B94")]
		public void TriggerStencilModeChanged()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x11B9BA8", Offset = "0x11B9BA8", VA = "0x11B9BA8")]
		public void TriggerAudioReactiveStateChanged()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x11B9BBC", Offset = "0x11B9BBC", VA = "0x11B9BBC")]
		public void TriggerMemoryExceededChanged()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x11B9BD0", Offset = "0x11B9BD0", VA = "0x11B9BD0")]
		public void TriggerMemoryWarningAcceptedChanged()
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x11B9BE4", Offset = "0x11B9BE4", VA = "0x11B9BE4")]
		public void TriggerCameraPathVisibilityChanged()
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x11B9BF8", Offset = "0x11B9BF8", VA = "0x11B9BF8")]
		public void TriggerCameraPathKnotChanged()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x11B9C0C", Offset = "0x11B9C0C", VA = "0x11B9C0C")]
		public void TriggerCameraPathDeleted()
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x11B9C20", Offset = "0x11B9C20", VA = "0x11B9C20")]
		public void TriggerCameraPathModeChanged(CameraPathTool.Mode mode)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x11B9C90", Offset = "0x11B9C90", VA = "0x11B9C90")]
		public void TriggerCameraPathCreated()
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x11B9CA4", Offset = "0x11B9CA4", VA = "0x11B9CA4")]
		public void TriggerCurrentCameraPathChanged()
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x11B9CB8", Offset = "0x11B9CB8", VA = "0x11B9CB8")]
		public void TriggerAllWidgetsDestroyed()
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x11B9CCC", Offset = "0x11B9CCC", VA = "0x11B9CCC")]
		public void TriggerSelectionChanged()
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x11B9CE0", Offset = "0x11B9CE0", VA = "0x11B9CE0")]
		public void TriggerVideoWidgetActivated(VideoWidget widget)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x11B9D50", Offset = "0x11B9D50", VA = "0x11B9D50")]
		public void TriggerVideoRecordingStopped()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x11B9D64", Offset = "0x11B9D64", VA = "0x11B9D64")]
		public Switchboard()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class SystemAudioMonitor : MonoBehaviour
	{
		[Token(Token = "0x20005F8")]
		public enum State
		{
			[Token(Token = "0x400273B")]
			Disabled,
			[Token(Token = "0x400273C")]
			Looking,
			[Token(Token = "0x400273D")]
			Capturing
		}

		[Token(Token = "0x20005F9")]
		public class StereoBuffer
		{
			[Token(Token = "0x400273E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float[] m_LChannelValues;

			[Token(Token = "0x400273F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float[] m_RChannelValues;

			[Token(Token = "0x4002740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_iOldestValue;

			[Token(Token = "0x17000669")]
			public int Capacity
			{
				[Token(Token = "0x60027BB")]
				[Address(RVA = "0xF22784", Offset = "0xF22784", VA = "0xF22784")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700066A")]
			public int OldestIndex
			{
				[Token(Token = "0x60027BC")]
				[Address(RVA = "0xF227A0", Offset = "0xF227A0", VA = "0xF227A0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700066B")]
			public float[] LChannel
			{
				[Token(Token = "0x60027BD")]
				[Address(RVA = "0xF227A8", Offset = "0xF227A8", VA = "0xF227A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700066C")]
			public float[] RChannel
			{
				[Token(Token = "0x60027BE")]
				[Address(RVA = "0xF227B0", Offset = "0xF227B0", VA = "0xF227B0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xF227B8", Offset = "0xF227B8", VA = "0xF227B8")]
			public StereoBuffer(int iBufferSize)
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xF22838", Offset = "0xF22838", VA = "0xF22838")]
			public void Add(float left, float right)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xF228B8", Offset = "0xF228B8", VA = "0xF228B8")]
			public void CopyFrom(StereoBuffer source)
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xF22918", Offset = "0xF22918", VA = "0xF22918")]
			public float GetValuesSum()
			{
				return default(float);
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xF229AC", Offset = "0xF229AC", VA = "0xF229AC")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB34FC4", Offset = "0xB34FC4")]
		[SerializeField]
		private float m_AttachToDeviceDataThreshold;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_DetachFromDeviceDataThreshold;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectDeviceTimeoutDuration;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_AbandonDeviceTimeoutDuration;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_NormalizationDecayWindowSecs;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_NormalizationMaxMultiplier;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State m_State;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_SourcePeak;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_LChannelTempBuffer;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_RChannelTempBuffer;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_nCapturesFound;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_SelectNextCaptureTimer;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_SearchFoundNoAudio;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_AbandondDeviceTimeoutTimer;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private StereoBuffer m_HotValues;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StereoBuffer m_OperateValues;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_SampleRate;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_FriendlyName;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_FoundDevice;

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x11BBA5C", Offset = "0x11BBA5C", VA = "0x11BBA5C")]
		public static bool FoundDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x11BBAC0", Offset = "0x11BBAC0", VA = "0x11BBAC0")]
		public bool AudioDeviceSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x11BBAD0", Offset = "0x11BBAD0", VA = "0x11BBAD0")]
		public int GetAudioDeviceSampleRate()
		{
			return default(int);
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x11BBAD8", Offset = "0x11BBAD8", VA = "0x11BBAD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x11BBAE0", Offset = "0x11BBAE0", VA = "0x11BBAE0")]
		public string GetCaptureStatusMessage()
		{
			return null;
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x11BBB78", Offset = "0x11BBB78", VA = "0x11BBB78")]
		public void Activate(float unused)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x11BBB7C", Offset = "0x11BBB7C", VA = "0x11BBB7C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x11BBB80", Offset = "0x11BBB80", VA = "0x11BBB80")]
		public SystemAudioMonitor()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class FutureFailed : Exception
	{
		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x101E2E4", Offset = "0x101E2E4", VA = "0x101E2E4")]
		public FutureFailed(string message)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x101E358", Offset = "0x101E358", VA = "0x101E358")]
		public FutureFailed(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x101E3E8", Offset = "0x101E3E8", VA = "0x101E3E8")]
		public FutureFailed(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class Future<T>
	{
		[Token(Token = "0x20005FC")]
		public enum State
		{
			[Token(Token = "0x400274A")]
			Start,
			[Token(Token = "0x400274B")]
			Running,
			[Token(Token = "0x400274C")]
			Done,
			[Token(Token = "0x400274D")]
			Error
		}

		[Token(Token = "0x20005FD")]
		public struct Awaiter : INotifyCompletion
		{
			[Token(Token = "0x20005FE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A9A8", Offset = "0xB2A9A8")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x400274F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Action continuation;

				[Token(Token = "0x60027D0")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x60027D1")]
				internal void <System.Runtime.CompilerServices.INotifyCompletion.OnCompleted>b__0(object _)
				{
				}
			}

			[Token(Token = "0x400274E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Future<T> m_future;

			[Token(Token = "0x1700066D")]
			public bool IsCompleted
			{
				[Token(Token = "0x60027CD")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60027CC")]
			public Awaiter(Future<T> future)
			{
			}

			[Token(Token = "0x60027CE")]
			public T GetResult()
			{
				return (T)null;
			}

			[Token(Token = "0x60027CF")]
			private void System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(Action continuation)
			{
			}
		}

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A9B8", Offset = "0xB2A9B8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Future<T> <>4__this;

			[Token(Token = "0x4002751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T> computation;

			[Token(Token = "0x60027D2")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60027D3")]
			internal void <.ctor>g__ThreadFunction|0()
			{
			}

			[Token(Token = "0x60027D4")]
			internal void <.ctor>b__1(object _)
			{
			}
		}

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2A9C8", Offset = "0xB2A9C8")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4002752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action continuation;

			[Token(Token = "0x60027D5")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x60027D6")]
			internal void <.ctor>b__2(object _)
			{
			}
		}

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected State m_state;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object m_lock;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception m_error;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_closed;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action<T> m_cleanupFunction;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_result;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Thread m_thread;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<(Action, SynchronizationContext)> m_continuations;

		[Token(Token = "0x60027C7")]
		public Future(Func<T> computation, [Optional] Action<T> cleanupFunction, bool longRunning = false)
		{
		}

		[Token(Token = "0x60027C8")]
		public void Close(bool interrupt = false)
		{
		}

		[Token(Token = "0x60027C9")]
		public bool TryGetResult(out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x60027CA")]
		public Awaiter GetAwaiter()
		{
			return default(Awaiter);
		}

		[Token(Token = "0x60027CB")]
		private T GetResultForAwaiter()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000601")]
	internal class RateLimiter
	{
		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_lastFrame;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint m_eventCount;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB35060", Offset = "0xB35060")]
		private uint <MaxEventsPerFrame>k__BackingField;

		[Token(Token = "0x1700066E")]
		public uint MaxEventsPerFrame
		{
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x11FFE6C", Offset = "0x11FFE6C", VA = "0x11FFE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4483C", Offset = "0xB4483C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x11FFE74", Offset = "0x11FFE74", VA = "0x11FFE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB4484C", Offset = "0xB4484C")]
			set
			{
			}
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x11FFE7C", Offset = "0x11FFE7C", VA = "0x11FFE7C")]
		public RateLimiter()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x11FFEA8", Offset = "0x11FFEA8", VA = "0x11FFEA8")]
		public RateLimiter(uint maxEventsPerFrame)
		{
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x11FFED4", Offset = "0x11FFED4", VA = "0x11FFED4")]
		public bool IsBlocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000602")]
	internal class AwaitableRateLimiter
	{
		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly float m_rate;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int m_maxCount;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SemaphoreSlim m_semaphore;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_partialItems;

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xFF2FD4", Offset = "0xFF2FD4", VA = "0xFF2FD4")]
		public AwaitableRateLimiter(float rate, int maxCount)
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xFF30D8", Offset = "0xFF30D8", VA = "0xFF30D8")]
		public Task WaitAsync()
		{
			return null;
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xFF30F4", Offset = "0xFF30F4", VA = "0xFF30F4")]
		public void Tick(float dt)
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class TaskAndCts
	{
		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task Task;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CancellationTokenSource Cts;

		[Token(Token = "0x1700066F")]
		public CancellationToken Token
		{
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x11BBEF8", Offset = "0x11BBEF8", VA = "0x11BBEF8")]
			get
			{
				return default(CancellationToken);
			}
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x11BBF14", Offset = "0x11BBF14", VA = "0x11BBF14")]
		public TaskAndCts()
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x11BBF7C", Offset = "0x11BBF7C", VA = "0x11BBF7C")]
		public void Cancel()
		{
		}
	}
	[Token(Token = "0x2000604")]
	public class TaskAndCts<T>
	{
		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Task<T> Task;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CancellationTokenSource Cts;

		[Token(Token = "0x17000670")]
		public CancellationToken Token
		{
			[Token(Token = "0x60027E2")]
			get
			{
				return default(CancellationToken);
			}
		}

		[Token(Token = "0x60027E3")]
		public TaskAndCts()
		{
		}

		[Token(Token = "0x60027E4")]
		public void Cancel()
		{
		}
	}
	[Token(Token = "0x2000605")]
	public class TextMeasureScript : MonoBehaviour
	{
		[Token(Token = "0x2000606")]
		private struct TextParams : IEquatable<TextParams>
		{
			[Token(Token = "0x4002762")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_CharSize;

			[Token(Token = "0x4002763")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_FontSize;

			[Token(Token = "0x4002764")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Font m_Font;

			[Token(Token = "0x4002765")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_Text;

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0xF2352C", Offset = "0xF2352C", VA = "0xF2352C", Slot = "4")]
			public bool Equals(TextParams other)
			{
				return default(bool);
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0xF235D0", Offset = "0xF235D0", VA = "0xF235D0", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xF2366C", Offset = "0xF2366C", VA = "0xF2366C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xF236C8", Offset = "0xF236C8", VA = "0xF236C8")]
			public static bool operator ==(TextParams a, TextParams b)
			{
				return default(bool);
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xF2376C", Offset = "0xF2376C", VA = "0xF2376C")]
			public static bool operator !=(TextParams a, TextParams b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TextMeasureScript m_Instance;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMesh m_TextMesh;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_TextRenderer;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<TextParams, Vector2> m_StringSizeMap;

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x11665EC", Offset = "0x11665EC", VA = "0x11665EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x11666C4", Offset = "0x11666C4", VA = "0x11666C4")]
		public static float GetTextWidth(TextMesh text)
		{
			return default(float);
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x116687C", Offset = "0x116687C", VA = "0x116687C")]
		public static float GetTextHeight(TextMesh text)
		{
			return default(float);
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x1166780", Offset = "0x1166780", VA = "0x1166780")]
		public float GetTextWidth(float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(float);
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1166938", Offset = "0x1166938", VA = "0x1166938")]
		public float GetTextHeight(float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(float);
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1166A38", Offset = "0x1166A38", VA = "0x1166A38")]
		private Vector2 AddNewString(TextParams rParams, float fCharSize, int iFontSize, Font rFont, string sText)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1166BB4", Offset = "0x1166BB4", VA = "0x1166BB4")]
		public TextMeasureScript()
		{
		}
	}
	[Token(Token = "0x2000607")]
	public class TextMeshProTint : MonoBehaviour
	{
		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Color;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_SiblingText;

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x1166E20", Offset = "0x1166E20", VA = "0x1166E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x1166E90", Offset = "0x1166E90", VA = "0x1166E90")]
		public TextMeshProTint()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class TextureScale
	{
		[Token(Token = "0x2000609")]
		public class SharedData
		{
			[Token(Token = "0x4002768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int finishCount;

			[Token(Token = "0x4002769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mutex mutex;

			[Token(Token = "0x400276A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color32[] newColors;

			[Token(Token = "0x400276B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] texColors;

			[Token(Token = "0x400276C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int texWidth;

			[Token(Token = "0x400276D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int newWidth;

			[Token(Token = "0x400276E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ratioX;

			[Token(Token = "0x400276F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float ratioY;

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0xF239B0", Offset = "0xF239B0", VA = "0xF239B0")]
			public SharedData()
			{
			}
		}

		[Token(Token = "0x200060A")]
		public class ThreadData
		{
			[Token(Token = "0x4002770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharedData shared;

			[Token(Token = "0x4002771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int start;

			[Token(Token = "0x4002772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int end;

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xF239B8", Offset = "0xF239B8", VA = "0xF239B8")]
			public ThreadData()
			{
			}
		}

		[Token(Token = "0x200060B")]
		private struct ColorBuffer
		{
			[Token(Token = "0x4002773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IntPtr dealloc;

			[Token(Token = "0x4002774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public unsafe Color32* array;

			[Token(Token = "0x4002775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int length;

			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int width;

			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int height;

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xF23810", Offset = "0xF23810", VA = "0xF23810")]
			public unsafe ColorBuffer(Color32[] c, Color32* pc, int width_, int height_)
			{
			}

			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xF23884", Offset = "0xF23884", VA = "0xF23884")]
			public ColorBuffer(int width_, int height_)
			{
			}

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xF23918", Offset = "0xF23918", VA = "0xF23918")]
			public void Deallocate()
			{
			}
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x11670E0", Offset = "0x11670E0", VA = "0x11670E0")]
		public static Color32[] BlockingBilinear(Color32[] texColors, int texWidth, int texHeight, Color32[] newColors, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x11672D4", Offset = "0x11672D4", VA = "0x11672D4")]
		private static int moveTowardsLog(int start, int desired)
		{
			return default(int);
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x1167198", Offset = "0x1167198", VA = "0x1167198")]
		private static void Bilinear(Color32[] texColors, int texWidth, int texHeight, Color32[] newColors, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x116735C", Offset = "0x116735C", VA = "0x116735C")]
		private unsafe static void SinglePassBilinear(Color32* texColors, int texLen, int texWidth, int texHeight, Color32* newColors, int newLen, int newWidth, int newHeight)
		{
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x11675CC", Offset = "0x11675CC", VA = "0x11675CC")]
		public static bool SafeCompress(Texture2D tex, bool highQuality = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x11674F8", Offset = "0x11674F8", VA = "0x11674F8")]
		private static Color32 ColorLerpUnclamped(Color32 c1, Color32 c2, float value)
		{
			return default(Color32);
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x1167644", Offset = "0x1167644", VA = "0x1167644")]
		public TextureScale()
		{
		}
	}
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB2A9D8", Offset = "0xB2A9D8")]
	public class TiltBrushManifest : ScriptableObject
	{
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA24", Offset = "0xB2AA24")]
		private sealed class <AllBrushesAndAncestors>d__5 : IEnumerable<BrushDescriptor>, IEnumerable, IEnumerator<BrushDescriptor>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400277B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400277C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private BrushDescriptor <>2__current;

			[Token(Token = "0x400277D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400277E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TiltBrushManifest <>4__this;

			[Token(Token = "0x400277F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<BrushDescriptor> <>7__wrap1;

			[Token(Token = "0x4002780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private BrushDescriptor <current>5__3;

			[Token(Token = "0x17000671")]
			private BrushDescriptor System.Collections.Generic.IEnumerator<TiltBrush.BrushDescriptor>.Current
			{
				[Token(Token = "0x6002809")]
				[Address(RVA = "0xF23E80", Offset = "0xF23E80", VA = "0xF23E80", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000672")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280B")]
				[Address(RVA = "0xF23EC8", Offset = "0xF23EC8", VA = "0xF23EC8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002805")]
			[Address(RVA = "0xF23A40", Offset = "0xF23A40", VA = "0xF23A40")]
			[DebuggerHidden]
			public <AllBrushesAndAncestors>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002806")]
			[Address(RVA = "0xF23A78", Offset = "0xF23A78", VA = "0xF23A78", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002807")]
			[Address(RVA = "0xF23B50", Offset = "0xF23B50", VA = "0xF23B50", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002808")]
			[Address(RVA = "0xF23A94", Offset = "0xF23A94", VA = "0xF23A94")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600280A")]
			[Address(RVA = "0xF23E88", Offset = "0xF23E88", VA = "0xF23E88", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600280C")]
			[Address(RVA = "0xF23ED0", Offset = "0xF23ED0", VA = "0xF23ED0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<BrushDescriptor> System.Collections.Generic.IEnumerable<TiltBrush.BrushDescriptor>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0xF23F78", Offset = "0xF23F78", VA = "0xF23F78", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrushDescriptor[] Brushes;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Environment[] Environments;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BrushDescriptor[] CompatibilityBrushes;

		[Token(Token = "0x60027FF")]
		private void AppendUnique<T>(ref T[] lhs, T[] rhs) where T : class
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x1169758", Offset = "0x1169758", VA = "0x1169758")]
		public void AppendFrom(TiltBrushManifest rhs)
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x11697FC", Offset = "0x11697FC", VA = "0x11697FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB4485C", Offset = "0xB4485C")]
		private IEnumerable<BrushDescriptor> AllBrushesAndAncestors()
		{
			return null;
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x1169868", Offset = "0x1169868", VA = "0x1169868")]
		public List<BrushDescriptor> UniqueBrushes()
		{
			return null;
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x11698D4", Offset = "0x11698D4", VA = "0x11698D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB448BC", Offset = "0xB448BC")]
		public void ExportBrushGuids()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x11698D8", Offset = "0x11698D8", VA = "0x11698D8")]
		public TiltBrushManifest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200060E")]
	public struct TiltMeterState
	{
		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WordIDs m_Description;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color m_Color;
	}
	[Token(Token = "0x200060F")]
	public class TiltMeterScript : MonoBehaviour
	{
		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TiltMeterScript m_Instance;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TiltMeterState[] m_MeterStates;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WordIDs m_MaxMeterWordID;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_BrushSizeAffectsCost;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_WidgetCostScalar;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_MeterIndex;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_MeterAmount;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_MeterAmountFull;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_MaxMeterDescription;

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1171B84", Offset = "0x1171B84", VA = "0x1171B84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1171BF8", Offset = "0x1171BF8", VA = "0x1171BF8")]
		public float GetUnifiedValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1171C10", Offset = "0x1171C10", VA = "0x1171C10")]
		public float GetMeterFullRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1171C4C", Offset = "0x1171C4C", VA = "0x1171C4C")]
		public Color GetMeterBGColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x1171CD0", Offset = "0x1171CD0", VA = "0x1171CD0")]
		public Color GetMeterColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x1171D3C", Offset = "0x1171D3C", VA = "0x1171D3C")]
		public Color GetMeterColorAbsolute(float value)
		{
			return default(Color);
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1171E08", Offset = "0x1171E08", VA = "0x1171E08")]
		public string GetMeterText()
		{
			return null;
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x1171F14", Offset = "0x1171F14", VA = "0x1171F14")]
		public void ResetMeter()
		{
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x1171F1C", Offset = "0x1171F1C", VA = "0x1171F1C")]
		public void AdjustMeter(Stroke stroke, bool up)
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x11721A8", Offset = "0x11721A8", VA = "0x11721A8")]
		public void AdjustMeterWithWidget(int iWidgetCost, bool up)
		{
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x11720E4", Offset = "0x11720E4", VA = "0x11720E4")]
		private void AdjustMeter(BatchSubset subset, float fBrushSize, bool bAddToMeter)
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x1171FC0", Offset = "0x1171FC0", VA = "0x1171FC0")]
		private void AdjustMeter(GameObject rBrushStroke, float fBrushSize, bool bAddToMeter)
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x11721DC", Offset = "0x11721DC", VA = "0x11721DC")]
		private void AdjustMeter(float fAmount)
		{
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x1172290", Offset = "0x1172290", VA = "0x1172290")]
		public TiltMeterScript()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class TiltMeterVisualsScript : MonoBehaviour
	{
		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_MeterBarTransform;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_MeterBGRenderer;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMesh m_CurrentPerformanceLevel;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_UpdateInterval;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_UpdateTimer;

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x11722B0", Offset = "0x11722B0", VA = "0x11722B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x1172654", Offset = "0x1172654", VA = "0x1172654")]
		public TiltMeterVisualsScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	public class TiltasaurusContent
	{
		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TiltasaurusCategory> Categories;

		[NonSerialized]
		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TiltasaurusCategory> UsedCategories;

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x117303C", Offset = "0x117303C", VA = "0x117303C")]
		public void Init()
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x1173338", Offset = "0x1173338", VA = "0x1173338")]
		public TiltasaurusContent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000612")]
	public class TiltasaurusCategory
	{
		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Words;

		[NonSerialized]
		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> UsedWords;

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x117326C", Offset = "0x117326C", VA = "0x117326C")]
		public void Init()
		{
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x1173330", Offset = "0x1173330", VA = "0x1173330")]
		public TiltasaurusCategory()
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class Tiltasaurus : MonoBehaviour
	{
		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Tiltasaurus m_Instance;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_Filename;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TiltasaurusContent m_Content;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TiltasaurusCategory m_ActiveCategory;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_ActivePrompt;

		[Token(Token = "0x17000673")]
		public string Prompt
		{
			[Token(Token = "0x6002822")]
			[Address(RVA = "0x1172BD8", Offset = "0x1172BD8", VA = "0x1172BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000674")]
		public string Category
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0x1172BE0", Offset = "0x1172BE0", VA = "0x1172BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x1172BF8", Offset = "0x1172BF8", VA = "0x1172BF8")]
		public bool TiltasaurusAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002825")]
		private static int RandomIndex<T>(List<T> list)
		{
			return default(int);
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x1172C08", Offset = "0x1172C08", VA = "0x1172C08")]
		private TiltasaurusCategory ChooseNonEmptyCategory()
		{
			return null;
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x1172D48", Offset = "0x1172D48", VA = "0x1172D48")]
		public void ChooseNewPrompt()
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x1172E70", Offset = "0x1172E70", VA = "0x1172E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x1172EC0", Offset = "0x1172EC0", VA = "0x1172EC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x11731C0", Offset = "0x11731C0", VA = "0x11731C0")]
		public Tiltasaurus()
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class BaseSelectionTool : BaseTool
	{
		[Token(Token = "0x2000615")]
		public class SelectionObject
		{
			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_Object;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool m_ComplexObject;

			[Token(Token = "0x600283A")]
			[Address(RVA = "0x1124524", Offset = "0x1124524", VA = "0x1124524")]
			public SelectionObject()
			{
			}
		}

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer m_Border;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_SelectionRing;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 m_SelectionRange;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_SelectionProgressBar;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer m_SelectionProgressBarRenderer;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_SelectionProgressBarBaseScale;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_SelectionProgressBarBasePosition;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMesh m_SelectionText;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_DescriptionText;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Renderer m_ConfirmationTextRenderer;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color m_ConfirmationTextColor;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_SelectionCurrentSize;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_SelectionObjectIndex;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_SelectionObjectChildIndex;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_SelectionVertIndex;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Stopwatch m_SelectionStopwatch;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected List<SelectionObject> m_CurrentSelection;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_SelectionPositionPrev;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_SelectionRadiusPrev;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool m_SelectionInfoQueryComplete;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		protected bool m_SelectionInfoQueryWasComplete;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		protected bool m_SelectionInfoValid;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Color m_SelectionColor;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x1443DCC", Offset = "0x1443DCC", VA = "0x1443DCC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x144406C", Offset = "0x144406C", VA = "0x144406C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x1444268", Offset = "0x1444268", VA = "0x1444268", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x14450D4", Offset = "0x14450D4", VA = "0x14450D4", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x1445160", Offset = "0x1445160", VA = "0x1445160", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x1445184", Offset = "0x1445184", VA = "0x1445184", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x1445194", Offset = "0x1445194", VA = "0x1445194", Slot = "22")]
		public override void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x14452C0", Offset = "0x14452C0", VA = "0x14452C0", Slot = "24")]
		public override void SetToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x14441EC", Offset = "0x14441EC", VA = "0x14441EC")]
		private void ResetSelection()
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x14443F0", Offset = "0x14443F0", VA = "0x14443F0")]
		private void UpdateSelection()
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x1444B84", Offset = "0x1444B84", VA = "0x1444B84")]
		private void GetInfoFromSelection()
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x144536C", Offset = "0x144536C", VA = "0x144536C")]
		private float SignedDistancePlanePoint(ref Vector3 rPlaneNormal, ref Vector3 rPlanePoint, ref Vector3 rPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x1445418", Offset = "0x1445418", VA = "0x1445418")]
		private void DebugDrawBounds()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x14455DC", Offset = "0x14455DC", VA = "0x14455DC")]
		private void DebugDrawBox(Bounds rBounds, Vector3 vPos)
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x1445A4C", Offset = "0x1445A4C", VA = "0x1445A4C")]
		public BaseSelectionTool()
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class BaseStrokeIntersectionTool : BaseTool
	{
		[Serializable]
		[Token(Token = "0x2000617")]
		protected enum IntersectionResetBehavior
		{
			[Token(Token = "0x40027CA")]
			None,
			[Token(Token = "0x40027CB")]
			ResetPosition,
			[Token(Token = "0x40027CC")]
			ResetDetection
		}

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private IntersectionResetBehavior m_IntersectionResetBehavior;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_TimeSliceInMS;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		protected float m_PointerForwardOffset;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GpuIntersector.FutureBatchResult m_GpuFutureResult;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GpuIntersector.BatchResult> m_GpuFutureResultList;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GpuIntersector.BatchResult> m_GpuOldResultList;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_GpuConsumedResults;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasScript m_CurrentCanvas;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected CanvasScript m_PreviousCanvas;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Stopwatch m_DetectionStopwatch;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int m_DetectionObjectIndex;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected int m_DetectionVertIndex;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected int m_BatchPoolIndex;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected int m_BatchObjectIndex;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int m_BatchVertGroupIndex;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int m_BatchTriIndexIndex;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float m_TimeSlice;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int m_TimeSliceInTicks;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool m_TimesUp;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool m_ResetDetection;

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x1446074", Offset = "0x1446074", VA = "0x1446074", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x1446148", Offset = "0x1446148", VA = "0x1446148")]
		protected void ResetDetection()
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x14461C0", Offset = "0x14461C0", VA = "0x14461C0", Slot = "36")]
		protected virtual void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x14461C4", Offset = "0x14461C4", VA = "0x14461C4", Slot = "37")]
		protected virtual void HandleIntersection(Stroke stroke)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x14461C8", Offset = "0x14461C8", VA = "0x14461C8", Slot = "38")]
		protected virtual bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x14461F8", Offset = "0x14461F8", VA = "0x14461F8", Slot = "39")]
		protected virtual bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x1446200", Offset = "0x1446200", VA = "0x1446200", Slot = "40")]
		protected virtual bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x14462D4", Offset = "0x14462D4", VA = "0x14462D4", Slot = "41")]
		public virtual void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x14462D8", Offset = "0x14462D8", VA = "0x14462D8", Slot = "42")]
		protected virtual int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x14462E0", Offset = "0x14462E0", VA = "0x14462E0")]
		private void DoIntersectionResets()
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x1446154", Offset = "0x1446154", VA = "0x1446154")]
		protected void ClearGpuFutureLists()
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x1446308", Offset = "0x1446308", VA = "0x1446308")]
		private bool UpdateGpuIntersection(Vector3 vDetectionCenter_GS, float size_GS)
		{
			return default(bool);
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x14465F0", Offset = "0x14465F0", VA = "0x14465F0")]
		protected void UpdateBatchedBrushDetection(Vector3 vDetectionCenter_GS)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x144750C", Offset = "0x144750C", VA = "0x144750C")]
		protected void UpdateSolitaryBrushDetection(Vector3 vDetectionCenter_GS)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x1447B84", Offset = "0x1447B84", VA = "0x1447B84")]
		protected void DebugDrawBounds()
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x1448024", Offset = "0x1448024", VA = "0x1448024")]
		protected void DebugDrawBox(Bounds rBounds, Vector3 vPos, Color rColor)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x14484D0", Offset = "0x14484D0", VA = "0x14484D0")]
		public BaseStrokeIntersectionTool()
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class BaseTool : MonoBehaviour
	{
		[Token(Token = "0x2000619")]
		public enum ToolType
		{
			[Token(Token = "0x40027DA")]
			SketchSurface,
			[Token(Token = "0x40027DB")]
			Selection,
			[Token(Token = "0x40027DC")]
			ColorPicker,
			[Token(Token = "0x40027DD")]
			BrushPicker,
			[Token(Token = "0x40027DE")]
			BrushAndColorPicker,
			[Token(Token = "0x40027DF")]
			SketchOrigin,
			[Token(Token = "0x40027E0")]
			AutoGif,
			[Token(Token = "0x40027E1")]
			CanvasTool,
			[Token(Token = "0x40027E2")]
			TransformTool,
			[Token(Token = "0x40027E3")]
			StampTool,
			[Token(Token = "0x40027E4")]
			FreePaintTool,
			[Token(Token = "0x40027E5")]
			EraserTool,
			[Token(Token = "0x40027E6")]
			ScreenshotTool,
			[Token(Token = "0x40027E7")]
			DropperTool,
			[Token(Token = "0x40027E8")]
			SaveIconTool,
			[Token(Token = "0x40027E9")]
			ThreeDofViewingTool,
			[Token(Token = "0x40027EA")]
			MultiCamTool,
			[Token(Token = "0x40027EB")]
			TeleportTool,
			[Token(Token = "0x40027EC")]
			RepaintTool,
			[Token(Token = "0x40027ED")]
			RecolorTool,
			[Token(Token = "0x40027EE")]
			RebrushTool,
			[Token(Token = "0x40027EF")]
			SelectionTool,
			[Token(Token = "0x40027F0")]
			PinTool,
			[Token(Token = "0x40027F1")]
			EmptyTool,
			[Token(Token = "0x40027F2")]
			CameraPathTool
		}

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ToolType m_Type;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_ShowTransformGizmo;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		protected bool m_ExitOnAbortCommand;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		protected bool m_ScalingSupported;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform m_Parent;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected SketchSurfacePanel m_SketchSurface;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 m_ParentBaseScale;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_ParentScale;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_RequestExit;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool m_EatInput;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		protected bool m_AllowDrawing;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		protected bool m_ToolHidden;

		[Token(Token = "0x17000675")]
		public virtual float ButtonHoldDuration
		{
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x144857C", Offset = "0x144857C", VA = "0x144857C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000676")]
		public bool IsEatingInput
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x1448584", Offset = "0x1448584", VA = "0x1448584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x144858C", Offset = "0x144858C", VA = "0x144858C")]
		public bool ExitRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x1448594", Offset = "0x1448594", VA = "0x1448594")]
		public bool ToolHidden()
		{
			return default(bool);
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x144859C", Offset = "0x144859C", VA = "0x144859C")]
		public void EatInput()
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x14485A8", Offset = "0x14485A8", VA = "0x14485A8")]
		public void AllowDrawing(bool bAllow)
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x14485B4", Offset = "0x14485B4", VA = "0x14485B4", Slot = "5")]
		public virtual bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x1443F98", Offset = "0x1443F98", VA = "0x1443F98", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x14485BC", Offset = "0x14485BC", VA = "0x14485BC", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x144865C", Offset = "0x144865C", VA = "0x144865C", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x14486FC", Offset = "0x14486FC", VA = "0x14486FC", Slot = "9")]
		protected virtual void OnSwap()
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x1448700", Offset = "0x1448700", VA = "0x1448700", Slot = "10")]
		public virtual void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x144870C", Offset = "0x144870C", VA = "0x144870C", Slot = "11")]
		public virtual bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x1448714", Offset = "0x1448714", VA = "0x1448714", Slot = "12")]
		public virtual bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x1444094", Offset = "0x1444094", VA = "0x1444094", Slot = "13")]
		public virtual void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x144871C", Offset = "0x144871C", VA = "0x144871C", Slot = "14")]
		public virtual void LateUpdateTool()
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x1444314", Offset = "0x1444314", VA = "0x1444314", Slot = "15")]
		public virtual void UpdateTool()
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x1448720", Offset = "0x1448720", VA = "0x1448720", Slot = "16")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x1448724", Offset = "0x1448724", VA = "0x1448724")]
		public bool ScalingSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x144872C", Offset = "0x144872C", VA = "0x144872C", Slot = "17")]
		public virtual void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x1448730", Offset = "0x1448730", VA = "0x1448730", Slot = "18")]
		public virtual void Monitor()
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x1448734", Offset = "0x1448734", VA = "0x1448734", Slot = "19")]
		public virtual float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x1448754", Offset = "0x1448754", VA = "0x1448754", Slot = "20")]
		public virtual float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x144875C", Offset = "0x144875C", VA = "0x144875C", Slot = "21")]
		public virtual float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x1448764", Offset = "0x1448764", VA = "0x1448764", Slot = "22")]
		public virtual void SetColor(Color rColor)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x1448768", Offset = "0x1448768", VA = "0x1448768", Slot = "23")]
		public virtual void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x144876C", Offset = "0x144876C", VA = "0x144876C", Slot = "24")]
		public virtual void SetToolProgress(float fProgress)
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x1448770", Offset = "0x1448770", VA = "0x1448770", Slot = "25")]
		public virtual void BacksideActive(bool bActive)
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x1448774", Offset = "0x1448774", VA = "0x1448774", Slot = "26")]
		public virtual bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x144877C", Offset = "0x144877C", VA = "0x144877C", Slot = "27")]
		public virtual bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x1448784", Offset = "0x1448784", VA = "0x1448784", Slot = "28")]
		public virtual bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x144878C", Offset = "0x144878C", VA = "0x144878C", Slot = "29")]
		public virtual bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x1448794", Offset = "0x1448794", VA = "0x1448794", Slot = "30")]
		public virtual bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x144879C", Offset = "0x144879C", VA = "0x144879C", Slot = "31")]
		public virtual bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x14487A4", Offset = "0x14487A4", VA = "0x14487A4", Slot = "32")]
		public virtual bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x14487AC", Offset = "0x14487AC", VA = "0x14487AC", Slot = "33")]
		public virtual bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x14487B4", Offset = "0x14487B4", VA = "0x14487B4", Slot = "34")]
		public virtual bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x1448818", Offset = "0x1448818", VA = "0x1448818", Slot = "35")]
		public virtual void EnableRenderer(bool enable)
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x14453A4", Offset = "0x14453A4", VA = "0x14453A4")]
		protected bool PointInTriangle(ref Vector3 rPoint, ref Vector3 rA, ref Vector3 rB, ref Vector3 rC)
		{
			return default(bool);
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x144884C", Offset = "0x144884C", VA = "0x144884C")]
		protected bool SameSide(ref Vector3 rPoint1, ref Vector3 rPoint2, ref Vector3 rA, ref Vector3 rB)
		{
			return default(bool);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x1447398", Offset = "0x1447398", VA = "0x1447398")]
		protected bool SegmentSphereIntersection(Vector3 vSegA, Vector3 vSegB, Vector3 vSphereCenter, float fSphereRadSq)
		{
			return default(bool);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x1445A5C", Offset = "0x1445A5C", VA = "0x1445A5C")]
		public BaseTool()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class BrushNColorTool : BaseSelectionTool
	{
		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMesh m_SelectionTextExtra;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_SelectionTextExtraColor;

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x127F688", Offset = "0x127F688", VA = "0x127F688", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x127F710", Offset = "0x127F710", VA = "0x127F710", Slot = "23")]
		public override void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x127F71C", Offset = "0x127F71C", VA = "0x127F71C", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x127F8C8", Offset = "0x127F8C8", VA = "0x127F8C8")]
		public BrushNColorTool()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class BrushSelectionTool : BaseSelectionTool
	{
		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMesh m_SelectionTextExtra;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color m_SelectionTextExtraColor;

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x127F9DC", Offset = "0x127F9DC", VA = "0x127F9DC", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x127FA64", Offset = "0x127FA64", VA = "0x127FA64", Slot = "23")]
		public override void SetExtraText(string sExtra)
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x127FA70", Offset = "0x127FA70", VA = "0x127FA70", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x127FBCC", Offset = "0x127FBCC", VA = "0x127FBCC")]
		public BrushSelectionTool()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class CameraPathTool : BaseTool
	{
		[Token(Token = "0x200061D")]
		public enum Mode
		{
			[Token(Token = "0x4002807")]
			AddPositionKnot,
			[Token(Token = "0x4002808")]
			AddRotationKnot,
			[Token(Token = "0x4002809")]
			AddSpeedKnot,
			[Token(Token = "0x400280A")]
			AddFovKnot,
			[Token(Token = "0x400280B")]
			RemoveKnot,
			[Token(Token = "0x400280C")]
			Recording
		}

		[Token(Token = "0x200061E")]
		public enum ExtendPathType
		{
			[Token(Token = "0x400280E")]
			None,
			[Token(Token = "0x400280F")]
			ExtendAtHead,
			[Token(Token = "0x4002810")]
			ExtendAtTail,
			[Token(Token = "0x4002811")]
			Loop
		}

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_PositionKnot;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_RotationKnot;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_SpeedKnot;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_FovKnot;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_RemoveKnot;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Mode m_Mode;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CameraPathWidget m_PrevLastValidPath;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CameraPathWidget m_LastValidPath;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_LastValidPosition;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private CameraPathWidget m_ExtendPath;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ExtendPathType m_ExtendPathType;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private KnotDescriptor m_LastPlacedKnot;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CameraPathWidget m_LastPlacedKnotPath;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TrTransform m_LastPlacedKnotXf_LS;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private KnotSegment m_PreviewSegment;

		[Token(Token = "0x17000677")]
		public Mode CurrentMode
		{
			[Token(Token = "0x600287E")]
			[Address(RVA = "0x15AE57C", Offset = "0x15AE57C", VA = "0x15AE57C")]
			get
			{
				return default(Mode);
			}
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x15AE584", Offset = "0x15AE584", VA = "0x15AE584", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x15AE720", Offset = "0x15AE720", VA = "0x15AE720", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x15AE7E0", Offset = "0x15AE7E0", VA = "0x15AE7E0", Slot = "10")]
		public override void HideTool(bool hide)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x15AE830", Offset = "0x15AE830", VA = "0x15AE830", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x15AE880", Offset = "0x15AE880", VA = "0x15AE880", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x15AE984", Offset = "0x15AE984", VA = "0x15AE984", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x15AF9C4", Offset = "0x15AF9C4", VA = "0x15AF9C4", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x15AF82C", Offset = "0x15AF82C", VA = "0x15AF82C")]
		private void CheckToRemoveKnot(Vector3 pos)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x15B0210", Offset = "0x15B0210", VA = "0x15B0210")]
		private void OnCameraPathModeChanged(Mode newMode)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x15AF944", Offset = "0x15AF944", VA = "0x15AF944")]
		private void HideAllMeshes()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x15AE68C", Offset = "0x15AE68C", VA = "0x15AE68C")]
		private void RefreshMeshVisibility()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x15B0218", Offset = "0x15B0218", VA = "0x15B0218", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x15B0228", Offset = "0x15B0228", VA = "0x15B0228", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x15B0238", Offset = "0x15B0238", VA = "0x15B0238", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x15B0248", Offset = "0x15B0248", VA = "0x15B0248", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x15B0258", Offset = "0x15B0258", VA = "0x15B0258", Slot = "32")]
		public override bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x15B0268", Offset = "0x15B0268", VA = "0x15B0268", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x15B0278", Offset = "0x15B0278", VA = "0x15B0278", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x15B0288", Offset = "0x15B0288", VA = "0x15B0288")]
		public CameraPathTool()
		{
		}
	}
	[Token(Token = "0x200061F")]
	public class ColorSelectionTool : BaseSelectionTool
	{
		[Token(Token = "0x6002892")]
		[Address(RVA = "0x131B244", Offset = "0x131B244", VA = "0x131B244", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x131B340", Offset = "0x131B340", VA = "0x131B340")]
		public ColorSelectionTool()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class DropperTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x2000621")]
		private enum State
		{
			[Token(Token = "0x4002829")]
			Enter,
			[Token(Token = "0x400282A")]
			Standard,
			[Token(Token = "0x400282B")]
			Exit,
			[Token(Token = "0x400282C")]
			Off
		}

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform m_DropperTransform;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Renderer m_DropperConeRenderer;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer m_DropperRenderer;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform m_DropperDescription;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform m_DropperBrushDescription;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TextMesh m_DropperBrushDescriptionText;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Transform m_DropperColorDescription;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Transform m_DropperColorDescriptionSwatch;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float m_DropperBrushSelectRadius;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Renderer m_DropperColorDescriptionSwatchRenderer;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Renderer[] m_DescriptionRenderers;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_ValidBrushFoundThisFrame;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_SelectionValid;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Color m_SelectionColor;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private BrushDescriptor m_SelectionBrush;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Stroke m_SelectionStroke;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private State m_CurrentState;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float m_EnterAmount;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float m_ReferenceImageCollisionDepth;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Transform m_OffsetTransform;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 m_OffsetTransformBaseScale;

		[Token(Token = "0x6002894")]
		[Address(RVA = "0xED0854", Offset = "0xED0854", VA = "0xED0854")]
		public void DisableRequestExit_HackForSceneSurgeon()
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xED085C", Offset = "0xED085C", VA = "0xED085C", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0xED09D4", Offset = "0xED09D4", VA = "0xED09D4", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0xED0A44", Offset = "0xED0A44", VA = "0xED0A44", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0xED0AB4", Offset = "0xED0AB4", VA = "0xED0AB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0xED091C", Offset = "0xED091C", VA = "0xED091C")]
		private void SetState(State rDesiredState)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0xED0BB8", Offset = "0xED0BB8", VA = "0xED0BB8", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0xED1384", Offset = "0xED1384", VA = "0xED1384", Slot = "36")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0xED14B4", Offset = "0xED14B4", VA = "0xED14B4", Slot = "37")]
		protected override void HandleIntersection(Stroke stroke)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0xED09A0", Offset = "0xED09A0", VA = "0xED09A0")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0xED1548", Offset = "0xED1548", VA = "0xED1548", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xED11C4", Offset = "0xED11C4", VA = "0xED11C4")]
		private void SetDescriptionInfo(Color rColor, float fSize, BrushDescriptor rBrush, [Optional] Stroke stroke)
		{
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0xED1550", Offset = "0xED1550", VA = "0xED1550")]
		public DropperTool()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class EraserTool : StrokeModificationTool
	{
		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_MaxSpinSpeed;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_SpinSpeedAcceleration;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_SpinSpeedDecay;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_SpinSpeed;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_SpinAmount;

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0xED5C7C", Offset = "0xED5C7C", VA = "0xED5C7C", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0xED5D20", Offset = "0xED5D20", VA = "0xED5D20", Slot = "44")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0xED5E78", Offset = "0xED5E78", VA = "0xED5E78", Slot = "36")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0xED60C8", Offset = "0xED60C8", VA = "0xED60C8", Slot = "41")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0xED6144", Offset = "0xED6144", VA = "0xED6144", Slot = "39")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0xED614C", Offset = "0xED614C", VA = "0xED614C", Slot = "38")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0xED6310", Offset = "0xED6310", VA = "0xED6310", Slot = "40")]
		protected override bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0xED6390", Offset = "0xED6390", VA = "0xED6390", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0xED6420", Offset = "0xED6420", VA = "0xED6420")]
		public EraserTool()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class FreePaintTool : BaseTool
	{
		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_AdjustSizeScalar;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_HapticInterval;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_HapticSizeUp;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_HapticSizeDown;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_PaintingActive;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Quaternion sm_OrientationAdjust;

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x101D944", Offset = "0x101D944", VA = "0x101D944", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x101D96C", Offset = "0x101D96C", VA = "0x101D96C", Slot = "5")]
		public override bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x101D9CC", Offset = "0x101D9CC", VA = "0x101D9CC", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x101DA98", Offset = "0x101DA98", VA = "0x101DA98", Slot = "11")]
		public override bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x101DAA0", Offset = "0x101DAA0", VA = "0x101DAA0", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x101DDE4", Offset = "0x101DDE4", VA = "0x101DDE4", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x101DE50", Offset = "0x101DE50", VA = "0x101DE50", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x101DC2C", Offset = "0x101DC2C", VA = "0x101DC2C")]
		private void PositionPointer()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x101DFF0", Offset = "0x101DFF0", VA = "0x101DFF0", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x101E1AC", Offset = "0x101E1AC", VA = "0x101E1AC", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x101E208", Offset = "0x101E208", VA = "0x101E208", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x101E260", Offset = "0x101E260", VA = "0x101E260")]
		public FreePaintTool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000624")]
	public class MultiCamAttach
	{
		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_JointTransform;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_OffsetTransform;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_AttachPoint;

		[NonSerialized]
		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_OffsetBaseScale;

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x1098C10", Offset = "0x1098C10", VA = "0x1098C10")]
		public MultiCamAttach()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class MultiCamTool : BaseTool
	{
		[Token(Token = "0x2000626")]
		public enum GifMovementStyle
		{
			[Token(Token = "0x40028A3")]
			HorizontalArc,
			[Token(Token = "0x40028A4")]
			HorizontalLine,
			[Token(Token = "0x40028A5")]
			VerticalCircle
		}

		[Token(Token = "0x2000627")]
		public enum State
		{
			[Token(Token = "0x40028A7")]
			Enter,
			[Token(Token = "0x40028A8")]
			Standard,
			[Token(Token = "0x40028A9")]
			Exit,
			[Token(Token = "0x40028AA")]
			Off
		}

		[Token(Token = "0x2000628")]
		private enum GifCreationState
		{
			[Token(Token = "0x40028AC")]
			Ready,
			[Token(Token = "0x40028AD")]
			Capturing,
			[Token(Token = "0x40028AE")]
			Building
		}

		[Token(Token = "0x2000629")]
		private enum VideoState
		{
			[Token(Token = "0x40028B0")]
			Ready,
			[Token(Token = "0x40028B1")]
			Capturing,
			[Token(Token = "0x40028B2")]
			Processing,
			[Token(Token = "0x40028B3")]
			ReadyToShare,
			[Token(Token = "0x40028B4")]
			Previewing
		}

		[Serializable]
		[Token(Token = "0x200062A")]
		public class GifPreset
		{
			[Token(Token = "0x40028B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40028B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GifMovementStyle style;

			[Token(Token = "0x40028B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB358C4", Offset = "0xB358C4")]
			public float focalPoint;

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB358DC", Offset = "0xB358DC")]
			public float movementRadius;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int frames;

			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float frameDelay;

			[Token(Token = "0x40028BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool advancesTime;

			[Token(Token = "0x6002905")]
			[Address(RVA = "0x10080C4", Offset = "0x10080C4", VA = "0x10080C4")]
			public GifPreset()
			{
			}
		}

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA34", Offset = "0xB2AA34")]
		private sealed class <TakeScreenshotAsync>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamTool <>4__this;

			[Token(Token = "0x40028BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveName;

			[Token(Token = "0x40028C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RenderTexture <tmp>5__2;

			[Token(Token = "0x17000683")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600290A")]
				[Address(RVA = "0x1008074", Offset = "0x1008074", VA = "0x1008074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000684")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600290C")]
				[Address(RVA = "0x10080BC", Offset = "0x10080BC", VA = "0x10080BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002906")]
			[Address(RVA = "0x10077CC", Offset = "0x10077CC", VA = "0x10077CC")]
			[DebuggerHidden]
			public <TakeScreenshotAsync>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6002907")]
			[Address(RVA = "0x10077F8", Offset = "0x10077F8", VA = "0x10077F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002908")]
			[Address(RVA = "0x1007850", Offset = "0x1007850", VA = "0x1007850", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002909")]
			[Address(RVA = "0x1007824", Offset = "0x1007824", VA = "0x1007824")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0x100807C", Offset = "0x100807C", VA = "0x100807C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA44", Offset = "0xB2AA44")]
		private sealed class <AutoGifStateCapturing>d__181 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCamTool <>4__this;

			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Texture2D <tempTex>5__2;

			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScreenshotManager <rMgr>5__3;

			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <camera>5__4;

			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TrTransform <baseXf>5__5;

			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <nCapture>5__6;

			[Token(Token = "0x17000685")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002910")]
				[Address(RVA = "0x10075F4", Offset = "0x10075F4", VA = "0x10075F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000686")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002912")]
				[Address(RVA = "0x100763C", Offset = "0x100763C", VA = "0x100763C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600290D")]
			[Address(RVA = "0x1007068", Offset = "0x1007068", VA = "0x1007068")]
			[DebuggerHidden]
			public <AutoGifStateCapturing>d__181(int <>1__state)
			{
			}

			[Token(Token = "0x600290E")]
			[Address(RVA = "0x1007094", Offset = "0x1007094", VA = "0x1007094", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0x1007098", Offset = "0x1007098", VA = "0x1007098", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0x10075FC", Offset = "0x10075FC", VA = "0x10075FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA54", Offset = "0xB2AA54")]
		private sealed class <Blink>d__189 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40028CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x17000687")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002916")]
				[Address(RVA = "0x100777C", Offset = "0x100777C", VA = "0x100777C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000688")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002918")]
				[Address(RVA = "0x10077C4", Offset = "0x10077C4", VA = "0x10077C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0x1007644", Offset = "0x1007644", VA = "0x1007644")]
			[DebuggerHidden]
			public <Blink>d__189(int <>1__state)
			{
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0x1007670", Offset = "0x1007670", VA = "0x1007670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002915")]
			[Address(RVA = "0x1007674", Offset = "0x1007674", VA = "0x1007674", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0x1007784", Offset = "0x1007784", VA = "0x1007784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400283D")]
		private const float kProgressRingGrowRate = 8f;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 kProgressRingBaseScale;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB352B0", Offset = "0xB352B0")]
		private MultiCamAttach[] m_Cameras;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HintObjectScript m_SwipeHintObject;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer[] m_GifProgressRings;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_SwipeHintDelay;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_FrameGapChangeSpeed;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3533C", Offset = "0xB3533C")]
		private float m_MinTimeBetweenShots;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private int m_ScreenshotWidth;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int m_ScreenshotHeight;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB353A8", Offset = "0xB353A8")]
		private int m_AutoGifWidth;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int m_AutoGifHeight;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GifPreset[] m_AutoGifPresets;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35414", Offset = "0xB35414")]
		[SerializeField]
		private Transform m_TimeGifTimeBar;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshPro m_TimeGifTimeText;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Renderer m_TimeGifMesh;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private int m_TimeGifWidth;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int m_TimeGifHeight;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_TimeGifDuration;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private int m_TimeGifFPS;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB354C0", Offset = "0xB354C0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB354C0", Offset = "0xB354C0")]
		private float m_superSampling;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35524", Offset = "0xB35524")]
		private TextMeshPro m_VideoRecordTimer;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject m_VideoSavingRoot;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_VideoSavingText;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_VideoPlaybackText;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string m_VideoPreviewToolText;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string m_VideoReadyToolText;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private int m_VideoPlaybackNumLoops;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject m_VideoPlaybackRoot;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject m_VideoPlaybackProgressLeftAlign;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject m_VideoPlaybackProgressMesh;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject m_VideoRecordIcon;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject m_UploadingIcon;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private TextMeshPro m_UploadingHeader;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Texture m_UploadIconTexture;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Texture m_ProfileIconTexture;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Renderer m_VideoRecordingIndicator;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Color m_VideoRecordingIndicatorColor1;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Color m_VideoRecordingIndicatorColor2;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color m_VideoPreviewingIndicatorColor1;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Color m_VideoPreviewingIndicatorColor2;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private float m_VideoCaptureMinDuration;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private TextMeshPro m_VideoRecordAudioHeader;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private TextMeshPro m_VideoRecordAudioDesc;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private GameObject m_VideoRecorderAudioSearchVisuals;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Renderer m_VideoRecorderAudioSearchIcon;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Texture2D m_VideoRecorderAudioSearchIconGood;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Texture2D m_VideoRecorderAudioSearchIconBad;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Color m_VideoRecordAudioDescColor;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private string m_AudioLookingText;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private string m_AudioFoundText;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private string m_AudioNoneText;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private float m_AudioFoundShowDuration;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private TextMeshPro m_VideoToolText;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private string m_UploadingText;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private string m_AuthNeededText;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35790", Offset = "0xB35790")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float m_CameraChangeTriggerT;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float m_CameraChangeSpeed;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float m_CameraChangeJoystickTDelay;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3580C", Offset = "0xB3580C")]
		[SerializeField]
		private Vector3 m_SketchSurfaceAdditionalRotation;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35858", Offset = "0xB35858")]
		private BaseButton m_YouTubeIcon;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private TextMeshPro m_YouTubeName;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private TextMeshPro m_YouTubeEmail;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private bool m_LockToController;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float m_ShotTimer;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool m_EatPadInput;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private State m_CurrentState;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float m_EnterAmount;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string m_SnapshotDirectory;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string m_VideoDirectory;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private int m_CurrentCameraIndex;

		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int m_DesiredCameraIndex;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private bool m_CameraChangePositive;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float m_CameraChangeT;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float m_CameraChangeJoystickTimer;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int m_iGifPreset;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float m_TimeGifCaptureTimer;

		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float m_TimeGifCaptureInterval;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float m_TimeGifCaptureIntervalTimer;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float m_TimedGifTimeBarBaseScaleY;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private string m_TimedGifSaveName;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private GifCreationState m_AutoGifCreationState;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private GifCreationState m_TimeGifCreationState;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private VideoState m_CurrentVideoState;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool m_LookingForAudio;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x295")]
		private bool m_AudioHasBeenRequested;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float m_AudioFoundCountdown;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private List<Color32[]> m_Captures;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private float m_ProgressRingSize;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private GifEncodeTask m_Task;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private bool m_SwipeBlinkRequested;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
		private bool m_SwipeBlinkShowing;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float m_SwipeHintCountdown;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private string m_VideoCaptureFile;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private IEnumerator m_UploadIconBlinker;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool m_WaitingForAuth;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private List<int> m_ActiveCameras;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private bool m_OauthMonitored;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int m_RenderGap;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private float m_CurrentGap;

		[Token(Token = "0x17000678")]
		private GifPreset CurrentPreset
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x1099B68", Offset = "0x1099B68", VA = "0x1099B68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000679")]
		private GifMovementStyle m_GifStyle
		{
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x1099BA8", Offset = "0x1099BA8", VA = "0x1099BA8")]
			get
			{
				return default(GifMovementStyle);
			}
		}

		[Token(Token = "0x1700067A")]
		private float m_GifFocalPointMeters
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x1099BC8", Offset = "0x1099BC8", VA = "0x1099BC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700067B")]
		private float m_GifMovementRadiusMeters
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x1099BE8", Offset = "0x1099BE8", VA = "0x1099BE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700067C")]
		private int m_GifFrames
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x1099C08", Offset = "0x1099C08", VA = "0x1099C08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700067D")]
		private float m_FrameDelay
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x1099C28", Offset = "0x1099C28", VA = "0x1099C28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700067E")]
		private bool m_GifAdvancesTime
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x1099C48", Offset = "0x1099C48", VA = "0x1099C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067F")]
		private MultiCamStyle CurrentCameraStyle
		{
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0x1099C68", Offset = "0x1099C68", VA = "0x1099C68")]
			get
			{
				return default(MultiCamStyle);
			}
		}

		[Token(Token = "0x17000680")]
		private float GifProgressRingsSize
		{
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x1099C70", Offset = "0x1099C70", VA = "0x1099C70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x1099C78", Offset = "0x1099C78", VA = "0x1099C78")]
			set
			{
			}
		}

		[Token(Token = "0x17000681")]
		private bool GifProgressRingsEnabled
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x1099D0C", Offset = "0x1099D0C", VA = "0x1099D0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x1099D48", Offset = "0x1099D48", VA = "0x1099D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000682")]
		private float GifProgressRingsProgress
		{
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x1099DC4", Offset = "0x1099DC4", VA = "0x1099DC4")]
			set
			{
			}
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x1099E80", Offset = "0x1099E80", VA = "0x1099E80")]
		private void SetCameraActive(int cameraIndex, bool active)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x1099F5C", Offset = "0x1099F5C", VA = "0x1099F5C")]
		private VideoRecorder GetVideoRecorder(int cameraIndex)
		{
			return null;
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x109A00C", Offset = "0x109A00C", VA = "0x109A00C", Slot = "12")]
		public override bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x109A014", Offset = "0x109A014", VA = "0x109A014", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x109A860", Offset = "0x109A860", VA = "0x109A860", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x109A5F0", Offset = "0x109A5F0", VA = "0x109A5F0")]
		private void InitSavePaths()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x109A910", Offset = "0x109A910", VA = "0x109A910", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x109B2CC", Offset = "0x109B2CC", VA = "0x109B2CC", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x109B820", Offset = "0x109B820", VA = "0x109B820", Slot = "18")]
		public override void Monitor()
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x109B99C", Offset = "0x109B99C", VA = "0x109B99C")]
		private bool CanCapture()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0x109B9E4", Offset = "0x109B9E4", VA = "0x109B9E4")]
		public void ExternalObjectNextCameraStyle()
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x109BC30", Offset = "0x109BC30", VA = "0x109BC30")]
		public void ExternalObjectForceCameraStyle(MultiCamStyle style)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x109BA70", Offset = "0x109BA70", VA = "0x109BA70")]
		private bool CanSwitchCameras()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x109BC5C", Offset = "0x109BC5C", VA = "0x109BC5C")]
		private bool PadSelectionAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x109BB70", Offset = "0x109BB70", VA = "0x109BB70")]
		private void SetDesiredCameraIndex(int i)
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x109A3D0", Offset = "0x109A3D0", VA = "0x109A3D0")]
		private void SetCurrentCameraToDesired()
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x109BD40", Offset = "0x109BD40", VA = "0x109BD40")]
		private void ClearTimeGifCapture()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x109B8A8", Offset = "0x109B8A8", VA = "0x109B8A8")]
		private void ReportGifTaskDone()
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x109BEB0", Offset = "0x109BEB0", VA = "0x109BEB0")]
		private void UpdateMultiCamTransform()
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x109C1F4", Offset = "0x109C1F4", VA = "0x109C1F4")]
		private void UpdateCameraVisualTransforms()
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x109C52C", Offset = "0x109C52C", VA = "0x109C52C")]
		private void UpdateCameraManagerTransforms()
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x109C754", Offset = "0x109C754", VA = "0x109C754", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x109E138", Offset = "0x109E138", VA = "0x109E138")]
		private void Update()
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x109F9BC", Offset = "0x109F9BC", VA = "0x109F9BC", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x109D76C", Offset = "0x109D76C", VA = "0x109D76C")]
		public static string GetSaveName(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x109F9E4", Offset = "0x109F9E4", VA = "0x109F9E4")]
		private ScreenshotManager GetScreenshotManager(MultiCamStyle style)
		{
			return null;
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x109A4AC", Offset = "0x109A4AC", VA = "0x109A4AC")]
		private void UpdateScale()
		{
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x109B728", Offset = "0x109B728", VA = "0x109B728")]
		private void TurnOff()
		{
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x109B0A8", Offset = "0x109B0A8", VA = "0x109B0A8")]
		private void TurnOn()
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x109FA60", Offset = "0x109FA60", VA = "0x109FA60", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x109FC68", Offset = "0x109FC68", VA = "0x109FC68", Slot = "19")]
		public override float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x109FE10", Offset = "0x109FE10", VA = "0x109FE10", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x109FE20", Offset = "0x109FE20", VA = "0x109FE20", Slot = "31")]
		public override bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x109FE28", Offset = "0x109FE28", VA = "0x109FE28", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x109FF34", Offset = "0x109FF34", VA = "0x109FF34", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x10A0040", Offset = "0x10A0040", VA = "0x10A0040", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x10A00A0", Offset = "0x10A00A0", VA = "0x10A00A0", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x10A00C4", Offset = "0x10A00C4", VA = "0x10A00C4", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x109DEE8", Offset = "0x109DEE8", VA = "0x109DEE8")]
		private void InitAudioSearch()
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x109F7D0", Offset = "0x109F7D0", VA = "0x109F7D0")]
		private void UpdateAudioSearch()
		{
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x109AAB8", Offset = "0x109AAB8", VA = "0x109AAB8")]
		private void StopAudioSearch()
		{
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x10A0120", Offset = "0x10A0120", VA = "0x10A0120")]
		private void RefreshAudioDescText(bool bCapturing)
		{
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x109DCC0", Offset = "0x109DCC0", VA = "0x109DCC0")]
		public void StartVideoCapture(string filePath, bool offlineRender = false)
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x109ABC4", Offset = "0x109ABC4", VA = "0x109ABC4")]
		private void StopVideoCapture(bool showInfoCard)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x109D21C", Offset = "0x109D21C", VA = "0x109D21C")]
		private void UpdateVideoCaptureState()
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x109DAE0", Offset = "0x109DAE0", VA = "0x109DAE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44964", Offset = "0xB44964")]
		private IEnumerator TakeScreenshotAsync(string saveName)
		{
			return null;
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x109B4BC", Offset = "0x109B4BC", VA = "0x109B4BC")]
		private void SetTimeBar(float fTime)
		{
		}

		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x109DC04", Offset = "0x109DC04", VA = "0x109DC04")]
		private void TimeGifTransitionReadyToCapturing(string saveName)
		{
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x109F3F8", Offset = "0x109F3F8", VA = "0x109F3F8")]
		private void TimeGifCapture()
		{
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x109F5DC", Offset = "0x109F5DC", VA = "0x109F5DC")]
		private void TimeGifTransitionCapturingToBuilding()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x109DB58", Offset = "0x109DB58", VA = "0x109DB58")]
		private void AutoGifTransitionReadyToCapturing()
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x10A0204", Offset = "0x10A0204", VA = "0x10A0204")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB449C4", Offset = "0xB449C4")]
		private IEnumerator AutoGifStateCapturing()
		{
			return null;
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x109F144", Offset = "0x109F144", VA = "0x109F144")]
		private void AutoGifTransitionCapturingToBuilding(string saveName)
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x10A0270", Offset = "0x10A0270", VA = "0x10A0270")]
		private bool GifMovementIsSymmetric()
		{
			return default(bool);
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x109F304", Offset = "0x109F304", VA = "0x109F304")]
		private TrTransform GetGifTransform(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x109A6B0", Offset = "0x109A6B0", VA = "0x109A6B0")]
		private void AdjustGifPreset(int i)
		{
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x10A02C0", Offset = "0x10A02C0", VA = "0x10A02C0")]
		private TrTransform GetGifTransform_HorizontalArc(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x10A04F0", Offset = "0x10A04F0", VA = "0x10A04F0")]
		private TrTransform GetGifTransform_HorizontalLine(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x10A06B4", Offset = "0x10A06B4", VA = "0x10A06B4")]
		private TrTransform GetGifTransform_VerticalCircle(float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x109DE6C", Offset = "0x109DE6C", VA = "0x109DE6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44A24", Offset = "0xB44A24")]
		private IEnumerator Blink(GameObject obj, float seconds = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x109B618", Offset = "0x109B618", VA = "0x109B618")]
		private void RefreshYouTubeIcon()
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x10A08B8", Offset = "0x10A08B8", VA = "0x10A08B8")]
		private void OnProfileUpdated(OAuth2Identity _)
		{
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x10A08BC", Offset = "0x10A08BC", VA = "0x10A08BC")]
		public MultiCamTool()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x10A098C", Offset = "0x10A098C", VA = "0x10A098C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44A84", Offset = "0xB44A84")]
		private bool <Update>b__152_0(int x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200062E")]
	public class PinTool : ToggleStrokeModificationTool
	{
		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool m_InPinningMode;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool m_IntersectionThisFrame;

		[Token(Token = "0x17000689")]
		public bool InPinMode
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x1026510", Offset = "0x1026510", VA = "0x1026510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x1026518", Offset = "0x1026518", VA = "0x1026518")]
		public bool CanToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x10265F8", Offset = "0x10265F8", VA = "0x10265F8", Slot = "46")]
		protected override bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x1026600", Offset = "0x1026600", VA = "0x1026600", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x1026634", Offset = "0x1026634", VA = "0x1026634", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x102696C", Offset = "0x102696C", VA = "0x102696C")]
		public void PinToolCallback()
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x1026820", Offset = "0x1026820", VA = "0x1026820")]
		public void RefreshPinState()
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1026970", Offset = "0x1026970", VA = "0x1026970", Slot = "47")]
		protected override void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x1026A50", Offset = "0x1026A50", VA = "0x1026A50", Slot = "48")]
		public override void OnUpdateDetection()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1026C08", Offset = "0x1026C08", VA = "0x1026C08", Slot = "42")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0x1026CD4", Offset = "0x1026CD4", VA = "0x1026CD4", Slot = "39")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x1026E54", Offset = "0x1026E54", VA = "0x1026E54", Slot = "41")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0x1026E84", Offset = "0x1026E84", VA = "0x1026E84", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x1026F28", Offset = "0x1026F28", VA = "0x1026F28")]
		public PinTool()
		{
		}
	}
	[Token(Token = "0x200062F")]
	public class RepaintTool : StrokeModificationTool
	{
		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private bool m_Recolor;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[SerializeField]
		private bool m_Rebrush;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_SpinSpeedAcceleration;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_MaxSpinSpeed;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_SpinSpeedDecay;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float m_SpinSpeed;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_SpinAmount;

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xFB6B10", Offset = "0xFB6B10", VA = "0xFB6B10", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xFB6C70", Offset = "0xFB6C70", VA = "0xFB6C70")]
		private void UpdateMaterialColors()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xFB6D70", Offset = "0xFB6D70", VA = "0xFB6D70", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xFB6E14", Offset = "0xFB6E14", VA = "0xFB6E14", Slot = "41")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xFB6E90", Offset = "0xFB6E90", VA = "0xFB6E90", Slot = "39")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xFB6E98", Offset = "0xFB6E98", VA = "0xFB6E98", Slot = "45")]
		protected override void UpdateDetection()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xFB6EE8", Offset = "0xFB6EE8", VA = "0xFB6EE8", Slot = "44")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xFB7090", Offset = "0xFB7090", VA = "0xFB7090", Slot = "36")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xFB72DC", Offset = "0xFB72DC", VA = "0xFB72DC", Slot = "38")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0xFB7374", Offset = "0xFB7374", VA = "0xFB7374", Slot = "40")]
		protected override bool HandleIntersectionWithSolitaryObject(GameObject rGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xFB7418", Offset = "0xFB7418", VA = "0xFB7418", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xFB74A8", Offset = "0xFB74A8", VA = "0xFB74A8")]
		public RepaintTool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000630")]
	public struct AdHocRigidAttachment
	{
		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform parent;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform child;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 localPosition;

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xFDF16C", Offset = "0xFDF16C", VA = "0xFDF16C")]
		public void Apply()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class SaveIconTool : BaseTool
	{
		[Token(Token = "0x2000632")]
		public struct CameraRigState
		{
			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 vRigPosition;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion qRigRotation;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion qAutoOrientJointLocalRotation;

			[Token(Token = "0x600294C")]
			[Address(RVA = "0x10F3974", Offset = "0x10F3974", VA = "0x10F3974")]
			public void SetLossyTransform(Vector3 pos, Quaternion rot)
			{
			}

			[Token(Token = "0x600294D")]
			[Address(RVA = "0x10F39B0", Offset = "0x10F39B0", VA = "0x10F39B0")]
			public void SetLossyTransform(TrTransform transform)
			{
			}

			[Token(Token = "0x600294E")]
			[Address(RVA = "0x10F39F4", Offset = "0x10F39F4", VA = "0x10F39F4")]
			public void GetLossyTransform(out Vector3 pos, out Quaternion rot)
			{
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0x10F3A40", Offset = "0x10F3A40", VA = "0x10F3A40")]
			public TrTransform GetLossyTrTransform()
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x2000633")]
		public enum State
		{
			[Token(Token = "0x40028F2")]
			Enter,
			[Token(Token = "0x40028F3")]
			WaitingForPicture,
			[Token(Token = "0x40028F4")]
			Off
		}

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_CameraScreen;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Camera m_TabletCamera;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AdHocRigidAttachment m_CameraRigAttachment;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ScreenshotManager m_SaveIconScreenshotManager;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_LockToController;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_CameraController;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB35954", Offset = "0xB35954")]
		private float m_superSampling;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private State m_CurrentState;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_EnterAmount;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int m_HapticCountTotal;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_HapticInterval;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_HapticCounterWand;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_HapticTimerWand;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_HapticCounterBrush;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_HapticTimerBrush;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_HapticBuzzLength;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform m_CameraRigAutoOrientJoint;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CameraRigState m_LastSaveCameraRigState;

		[Token(Token = "0x1700068A")]
		public ScreenshotManager ScreenshotManager
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0xFBBCD4", Offset = "0xFBBCD4", VA = "0xFBBCD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068B")]
		public Transform CameraRig
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0xFBBCDC", Offset = "0xFBBCDC", VA = "0xFBBCDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700068C")]
		public CameraRigState LastSaveCameraRigState
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0xFBBCE4", Offset = "0xFBBCE4", VA = "0xFBBCE4")]
			get
			{
				return default(CameraRigState);
			}
		}

		[Token(Token = "0x1700068D")]
		public CameraRigState CurrentCameraRigState
		{
			[Token(Token = "0x6002937")]
			[Address(RVA = "0xFBBCFC", Offset = "0xFBBCFC", VA = "0xFBBCFC")]
			get
			{
				return default(CameraRigState);
			}
			[Token(Token = "0x6002938")]
			[Address(RVA = "0xFBBDA4", Offset = "0xFBBDA4", VA = "0xFBBDA4")]
			set
			{
			}
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xFBBE0C", Offset = "0xFBBE0C", VA = "0xFBBE0C", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xFBBEF8", Offset = "0xFBBEF8", VA = "0xFBBEF8", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xFBBF28", Offset = "0xFBBF28", VA = "0xFBBF28", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xFBC0E4", Offset = "0xFBC0E4", VA = "0xFBC0E4", Slot = "9")]
		protected override void OnSwap()
		{
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xFBC16C", Offset = "0xFBC16C", VA = "0xFBC16C", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xFBC1EC", Offset = "0xFBC1EC", VA = "0xFBC1EC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xFBC650", Offset = "0xFBC650", VA = "0xFBC650", Slot = "26")]
		public override bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xFBC658", Offset = "0xFBC658", VA = "0xFBC658")]
		private void Update()
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xFBC80C", Offset = "0xFBC80C", VA = "0xFBC80C", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xFBC834", Offset = "0xFBC834", VA = "0xFBC834")]
		public void ProgrammaticCaptureSaveIcon(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xFBC6E0", Offset = "0xFBC6E0", VA = "0xFBC6E0")]
		private void UpdateTransformsFromControllers()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xFBCAA4", Offset = "0xFBCAA4", VA = "0xFBCAA4")]
		private Vector3 TransformOffset(Transform rBase, Vector3 vOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0xFBC09C", Offset = "0xFBC09C", VA = "0xFBC09C")]
		private void UpdateToolScale()
		{
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xFBCB28", Offset = "0xFBCB28", VA = "0xFBCB28", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xFBCB30", Offset = "0xFBCB30", VA = "0xFBCB30", Slot = "32")]
		public override bool HidePanels()
		{
			return default(bool);
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xFBCB38", Offset = "0xFBCB38", VA = "0xFBCB38", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xFBCB40", Offset = "0xFBCB40", VA = "0xFBCB40", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xFBCB48", Offset = "0xFBCB48", VA = "0xFBCB48", Slot = "34")]
		public override bool AllowDefaultToolToggle()
		{
			return default(bool);
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xFBCB50", Offset = "0xFBCB50", VA = "0xFBCB50")]
		public SaveIconTool()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class SelectionTool : ToggleStrokeModificationTool
	{
		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private float m_DuplicateHoldDuration;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool m_ActiveSelectionHasAtLeastOneObject;

		[Token(Token = "0x1700068E")]
		public override float ButtonHoldDuration
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0xE765F8", Offset = "0xE765F8", VA = "0xE765F8", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xE76600", Offset = "0xE76600", VA = "0xE76600", Slot = "46")]
		protected override bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xE76660", Offset = "0xE76660", VA = "0xE76660", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xE766F4", Offset = "0xE766F4", VA = "0xE766F4", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xE76884", Offset = "0xE76884", VA = "0xE76884", Slot = "19")]
		public override float GetSizeRatio(InputManager.ControllerName controller, VrInput input)
		{
			return default(float);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0xE76A44", Offset = "0xE76A44", VA = "0xE76A44", Slot = "47")]
		protected override void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xE76B4C", Offset = "0xE76B4C", VA = "0xE76B4C", Slot = "49")]
		public override void OnDoubleTap()
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xE76BC0", Offset = "0xE76BC0", VA = "0xE76BC0", Slot = "48")]
		public override void OnUpdateDetection()
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xE79CD4", Offset = "0xE79CD4", VA = "0xE79CD4", Slot = "42")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xE79D50", Offset = "0xE79D50", VA = "0xE79D50", Slot = "39")]
		protected override bool HandleIntersectionWithWidget(GrabWidget widget)
		{
			return default(bool);
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xE7A160", Offset = "0xE7A160", VA = "0xE7A160", Slot = "38")]
		protected override bool HandleIntersectionWithBatchedStroke(BatchSubset rGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xE76808", Offset = "0xE76808", VA = "0xE76808")]
		private void EndSelection()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xE79C04", Offset = "0xE79C04", VA = "0xE79C04")]
		private void FinalizeSelectionBatch()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0xE7A560", Offset = "0xE7A560", VA = "0xE7A560", Slot = "16")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xE7A66C", Offset = "0xE7A66C", VA = "0xE7A66C")]
		public SelectionTool()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class SketchOriginTool : BaseTool
	{
		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_ParentPosition;

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x106980C", Offset = "0x106980C", VA = "0x106980C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1069988", Offset = "0x1069988", VA = "0x1069988", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x1069A1C", Offset = "0x1069A1C", VA = "0x1069A1C")]
		public SketchOriginTool()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class SketchSurfaceTool : BaseTool
	{
		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_FrontSide;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_BackSide;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color m_FrontSideColor;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color m_BackSideColor;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_AdjustBrushSizeScalar;

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x106C864", Offset = "0x106C864", VA = "0x106C864", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x106C914", Offset = "0x106C914", VA = "0x106C914", Slot = "5")]
		public override bool ShouldShowPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x106C91C", Offset = "0x106C91C", VA = "0x106C91C", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x106C9AC", Offset = "0x106C9AC", VA = "0x106C9AC", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x106CAAC", Offset = "0x106CAAC", VA = "0x106CAAC", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x106CB34", Offset = "0x106CB34", VA = "0x106CB34", Slot = "25")]
		public override void BacksideActive(bool bActive)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x106CB80", Offset = "0x106CB80", VA = "0x106CB80")]
		public SketchSurfaceTool()
		{
		}
	}
	[Token(Token = "0x2000637")]
	public class StrokeModificationTool : BaseStrokeIntersectionTool
	{
		[Token(Token = "0x2000638")]
		private enum AudioState
		{
			[Token(Token = "0x4002911")]
			Off,
			[Token(Token = "0x4002912")]
			FadingIn,
			[Token(Token = "0x4002913")]
			On,
			[Token(Token = "0x4002914")]
			FadingOut
		}

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform m_ToolTransform;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Renderer m_ToolDescriptionText;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector2 m_SizeRange;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected float m_CurrentSize;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected bool m_LockToController;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material m_ToolColdMaterial;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material m_ToolHotMaterial;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool m_ToolWasHot;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float m_HapticInterval;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_HapticSizeUp;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float m_HapticSizeDown;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GvrAudioSource m_ToolAudio;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AudioState m_CurrentAudioState;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float m_AudioFadeRatio;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_AudioVolumeMax;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float m_AudioAttackSpeed;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private AudioClip[] m_ModifyStrokeSounds;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float m_ModifyStrokeMinTriggerTime;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_ModifyStrokeTimestamp;

		[Token(Token = "0x1700068F")]
		public virtual bool IsHot
		{
			[Token(Token = "0x6002969")]
			[Address(RVA = "0x11B56D8", Offset = "0x11B56D8", VA = "0x11B56D8", Slot = "43")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x11B5770", Offset = "0x11B5770", VA = "0x11B5770", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x11B5830", Offset = "0x11B5830", VA = "0x11B5830", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x11B5910", Offset = "0x11B5910", VA = "0x11B5910", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x11B5848", Offset = "0x11B5848", VA = "0x11B5848")]
		protected void RequestPlayAudio(bool bPlay)
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x11B5994", Offset = "0x11B5994", VA = "0x11B5994")]
		protected void HardStopAudio()
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x11B59D8", Offset = "0x11B59D8", VA = "0x11B59D8", Slot = "11")]
		public override bool ShouldShowTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x11B59E0", Offset = "0x11B59E0", VA = "0x11B59E0", Slot = "42")]
		protected override int AdditionalGpuIntersectionLayerMasks()
		{
			return default(int);
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x11B5A28", Offset = "0x11B5A28", VA = "0x11B5A28")]
		private void Update()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x11B5B98", Offset = "0x11B5B98", VA = "0x11B5B98", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x11B5BF4", Offset = "0x11B5BF4", VA = "0x11B5BF4", Slot = "44")]
		protected virtual void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x11B5BF8", Offset = "0x11B5BF8", VA = "0x11B5BF8", Slot = "36")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x11B5DC8", Offset = "0x11B5DC8", VA = "0x11B5DC8", Slot = "45")]
		protected virtual void UpdateDetection()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x11B5EC8", Offset = "0x11B5EC8", VA = "0x11B5EC8", Slot = "17")]
		public override void UpdateSize(float fAdjustAmount)
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x11B6060", Offset = "0x11B6060", VA = "0x11B6060", Slot = "20")]
		public override float GetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x11B6068", Offset = "0x11B6068", VA = "0x11B6068", Slot = "21")]
		public override float GetSize01()
		{
			return default(float);
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x11B609C", Offset = "0x11B609C", VA = "0x11B609C")]
		protected void PlayModifyStrokeSound()
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x11B6194", Offset = "0x11B6194", VA = "0x11B6194", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x11B61BC", Offset = "0x11B61BC", VA = "0x11B61BC")]
		public StrokeModificationTool()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public class TeleportTool : BaseTool
	{
		[Token(Token = "0x200063A")]
		public enum BoundsState
		{
			[Token(Token = "0x4002939")]
			FadingInDelay,
			[Token(Token = "0x400293A")]
			FadingIn,
			[Token(Token = "0x400293B")]
			Showing,
			[Token(Token = "0x400293C")]
			FadingOut,
			[Token(Token = "0x400293D")]
			Off
		}

		[Token(Token = "0x200063B")]
		public enum TeleportFadeState
		{
			[Token(Token = "0x400293F")]
			FadeToScene,
			[Token(Token = "0x4002940")]
			FadingToBlack,
			[Token(Token = "0x4002941")]
			Default
		}

		[Token(Token = "0x200063C")]
		public enum ToolState
		{
			[Token(Token = "0x4002943")]
			Enter,
			[Token(Token = "0x4002944")]
			Active,
			[Token(Token = "0x4002945")]
			Off
		}

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_TeleportBounds;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DynamicBounds m_TeleportBoundsCurrent;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private DynamicBounds m_TeleportBoundsDesired;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_TeleportParabolaPoints;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_TeleportParabolaSpeed;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_TeleportParabolaGravity;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_TeleportParabolaMaxY;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB35A54", Offset = "0xB35A54")]
		private float m_TeleportParabolaDampen;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_BadTeleportIcon;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform m_TeleportPlaceIcon;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector2 m_TeleportPlaceIconShrinkRange;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_BoundsEnterDelay;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_BoundsEnterSpeed;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_TeleportFadeSpeed;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_EnterSpeed;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_LockToController;

		[Token(Token = "0x4002925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform m_BrushController;

		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_TeleportPlaceIconBaseScale;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_HideValidTeleportParabola;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_TeleportParabolaFadeAmount;

		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_BoundsEnterDelayCountdown;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_BoundsShowAmount;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private BoundsState m_BoundsState;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TeleportFadeState m_TeleportFadeState;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_TeleportFadeAmount;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_TeleportForceBoundsPosition;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_BadTeleportIconEnterAmount;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LineRenderer m_TeleportParabola;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Ray m_LastParabolaRay;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_LastParabolaTime;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 m_LastParabolaVelocity;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ToolState m_CurrentState;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float m_EnterAmount;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector3 m_TeleportTargetVector;

		[Token(Token = "0x17000690")]
		private float BoundsRadius
		{
			[Token(Token = "0x600297C")]
			[Address(RVA = "0x11BC9EC", Offset = "0x11BC9EC", VA = "0x11BC9EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x11BCA44", Offset = "0x11BCA44", VA = "0x11BCA44")]
		private bool CanTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x11BCC00", Offset = "0x11BCC00", VA = "0x11BCC00", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x11BCDD8", Offset = "0x11BCDD8", VA = "0x11BCDD8", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x11BCE90", Offset = "0x11BCE90", VA = "0x11BCE90", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x11BD210", Offset = "0x11BD210", VA = "0x11BD210")]
		private bool UpdateTool_PlaceParabola()
		{
			return default(bool);
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x11BD820", Offset = "0x11BD820", VA = "0x11BD820", Slot = "15")]
		public override void UpdateTool()
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x11BDE44", Offset = "0x11BDE44", VA = "0x11BDE44")]
		private void Update()
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x11BE128", Offset = "0x11BE128", VA = "0x11BE128", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x11BE008", Offset = "0x11BE008", VA = "0x11BE008")]
		private void UpdateTransformsFromControllers()
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x11BE150", Offset = "0x11BE150", VA = "0x11BE150")]
		private Vector3 TransformOffset(Transform rBase, Vector3 vOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x11BD06C", Offset = "0x11BD06C", VA = "0x11BD06C")]
		private void UpdateToolScale()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x11BD0BC", Offset = "0x11BD0BC", VA = "0x11BD0BC")]
		private void UpdateBoundsScale(float fScale)
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x11BD134", Offset = "0x11BD134", VA = "0x11BD134")]
		private void UpdateIconScale()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x11BCE34", Offset = "0x11BCE34", VA = "0x11BCE34")]
		private void SetBoundsVisibility(bool bShow)
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x11BD6FC", Offset = "0x11BD6FC", VA = "0x11BD6FC")]
		private void SetTeleportParabola()
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x11BE1D4", Offset = "0x11BE1D4", VA = "0x11BE1D4")]
		private Vector3 GetPositionOnParabola(Vector3 vInitialPos, Vector3 vVel, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x11BE264", Offset = "0x11BE264", VA = "0x11BE264", Slot = "26")]
		public override bool LockPointerToSketchSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x11BE26C", Offset = "0x11BE26C", VA = "0x11BE26C", Slot = "29")]
		public override bool InputBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x11BE27C", Offset = "0x11BE27C", VA = "0x11BE27C", Slot = "27")]
		public override bool AllowsWidgetManipulation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x11BE28C", Offset = "0x11BE28C", VA = "0x11BE28C", Slot = "31")]
		public override bool AvailableDuringLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x11BE294", Offset = "0x11BE294", VA = "0x11BE294", Slot = "30")]
		public override bool AllowWorldTransformation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x11BE2A4", Offset = "0x11BE2A4", VA = "0x11BE2A4", Slot = "35")]
		public override void EnableRenderer(bool enable)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x11BE2F0", Offset = "0x11BE2F0", VA = "0x11BE2F0", Slot = "33")]
		public override bool BlockPinCushion()
		{
			return default(bool);
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x11BE300", Offset = "0x11BE300", VA = "0x11BE300", Slot = "12")]
		public override bool CanShowPromosWhileInUse()
		{
			return default(bool);
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x11BE308", Offset = "0x11BE308", VA = "0x11BE308")]
		public TeleportTool()
		{
		}
	}
	[Token(Token = "0x200063D")]
	public class ToggleStrokeModificationTool : StrokeModificationTool
	{
		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		protected Material m_ToolHotOffMaterial;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Renderer m_OnMesh;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		protected Renderer m_OffMesh;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		protected Renderer m_HighlightMesh;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		protected Renderer m_OnRotationMesh;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected Renderer m_OffRotationMesh;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float m_ToggleAnimationDuration;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		protected float m_HapticsToggleOn;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		protected float m_HapticsToggleOff;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private float m_HapticsIntersection;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private bool m_AllowDoubleTap;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float m_DoubleTapDuration;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private float m_MaxSpinSpeed;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private float m_SpinSpeedAcceleration;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private float m_SpinSpeedDecay;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float m_SpinSpeed;

		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float m_SpinSpeedVel;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_SpinAmount;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected bool m_CurrentlyHot;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_ToggleAnimationSwitched;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float m_ToggleAnimationRemaining;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Queue<float> m_DoubleTapTimes;

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool m_EatDoubleTapInput;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		protected float m_LastIntersectionTime;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector3 m_OnRotationMeshBaseLocalPosition;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 m_OffRotationMeshBaseLocalPosition;

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1173778", Offset = "0x1173778", VA = "0x1173778")]
		private void ClearDoubleTapTimes()
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x1173808", Offset = "0x1173808", VA = "0x1173808", Slot = "46")]
		protected virtual bool IsOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x1173810", Offset = "0x1173810", VA = "0x1173810", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x11738E8", Offset = "0x11738E8", VA = "0x11738E8", Slot = "13")]
		public override void EnableTool(bool bEnable)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x1173A0C", Offset = "0x1173A0C", VA = "0x1173A0C", Slot = "10")]
		public override void HideTool(bool bHide)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x1173B10", Offset = "0x1173B10", VA = "0x1173B10", Slot = "14")]
		public override void LateUpdateTool()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1173B20", Offset = "0x1173B20", VA = "0x1173B20")]
		public void StartToggleAnimation()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x11739C0", Offset = "0x11739C0", VA = "0x11739C0")]
		protected void ResetToggleAnimation()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1173B30", Offset = "0x1173B30", VA = "0x1173B30")]
		private void UpdateToggleAnimation()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1173C1C", Offset = "0x1173C1C", VA = "0x1173C1C", Slot = "47")]
		protected virtual void OnAnimationSwitch()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1173928", Offset = "0x1173928", VA = "0x1173928")]
		protected void UpdateMesh()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1173C20", Offset = "0x1173C20", VA = "0x1173C20")]
		protected void ResetToolRotation()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1173F18", Offset = "0x1173F18", VA = "0x1173F18", Slot = "44")]
		protected override void UpdateAudioVisuals()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1174218", Offset = "0x1174218", VA = "0x1174218", Slot = "36")]
		protected override void SnapIntersectionObjectToController()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x11744F8", Offset = "0x11744F8", VA = "0x11744F8", Slot = "45")]
		protected override void UpdateDetection()
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x11747E4", Offset = "0x11747E4", VA = "0x11747E4", Slot = "48")]
		public virtual void OnUpdateDetection()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x11747E8", Offset = "0x11747E8", VA = "0x11747E8", Slot = "49")]
		public virtual void OnDoubleTap()
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0x11747EC", Offset = "0x11747EC", VA = "0x11747EC", Slot = "41")]
		public override void IntersectionHappenedThisFrame()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x11747F0", Offset = "0x11747F0", VA = "0x11747F0")]
		protected void HapticFeedback()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0x117486C", Offset = "0x117486C", VA = "0x117486C", Slot = "28")]
		public override bool CanAdjustSize()
		{
			return default(bool);
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x117487C", Offset = "0x117487C", VA = "0x117487C")]
		public ToggleStrokeModificationTool()
		{
		}
	}
	[Token(Token = "0x200063E")]
	public class TransformGizmoScript : MonoBehaviour
	{
		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] m_AxesColors;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] m_Axes;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_ActiveAxisColor;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_InactiveAxisColor;

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x1176724", Offset = "0x1176724", VA = "0x1176724")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x1176848", Offset = "0x1176848", VA = "0x1176848")]
		public void SetTransformForPushPull()
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x1176988", Offset = "0x1176988", VA = "0x1176988")]
		public void SetTransformForPan()
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x1176728", Offset = "0x1176728", VA = "0x1176728")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x1176AC8", Offset = "0x1176AC8", VA = "0x1176AC8")]
		public TransformGizmoScript()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class AdvancedPanelsPromo : BasePromo
	{
		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_TimeBeforeDisplay;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_TimeBeforeReadDismiss;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_ReadDismissTimer;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HintObjectScript m_CustomHintObject;

		[Token(Token = "0x17000691")]
		public override string PrefsKey
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xFE0ED0", Offset = "0xFE0ED0", VA = "0xFE0ED0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0xFE0EB8", Offset = "0xFE0EB8", VA = "0xFE0EB8")]
		public AdvancedPanelsPromo()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0xFE0F14", Offset = "0xFE0F14", VA = "0xFE0F14", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0xFE10CC", Offset = "0xFE10CC", VA = "0xFE10CC", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0xFE1168", Offset = "0xFE1168", VA = "0xFE1168", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0xFE128C", Offset = "0xFE128C", VA = "0xFE128C", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x2000640")]
	public enum PromoType
	{
		[Token(Token = "0x4002969")]
		BrushSize,
		[Token(Token = "0x400296A")]
		TriggerToPin,
		[Token(Token = "0x400296B")]
		FloatingPanel,
		[Token(Token = "0x400296C")]
		ShareSketch,
		[Token(Token = "0x400296D")]
		Selection,
		[Token(Token = "0x400296E")]
		Duplicate,
		[Token(Token = "0x400296F")]
		InteractIntroPanel,
		[Token(Token = "0x4002970")]
		TriggerToUnpin,
		[Token(Token = "0x4002971")]
		SaveIcon,
		[Token(Token = "0x4002972")]
		Deselection,
		[Token(Token = "0x4002973")]
		AdvancedPanels,
		[Token(Token = "0x4002974")]
		SwapControllers
	}
	[Token(Token = "0x2000641")]
	public abstract class BasePromo
	{
		[Token(Token = "0x2000642")]
		protected enum RequestingState
		{
			[Token(Token = "0x4002979")]
			None,
			[Token(Token = "0x400297A")]
			ToDisplay,
			[Token(Token = "0x400297B")]
			ToHide
		}

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PromoType m_PromoType;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HintObjectScript m_HintObject;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected RequestingState m_Request;

		[Token(Token = "0x17000692")]
		public PromoType PromoType
		{
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x1443C34", Offset = "0x1443C34", VA = "0x1443C34")]
			get
			{
				return default(PromoType);
			}
		}

		[Token(Token = "0x17000693")]
		public abstract string PrefsKey
		{
			[Token(Token = "0x60029B7")]
			get;
		}

		[Token(Token = "0x17000694")]
		public bool ReadyToDisplay
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x1443C3C", Offset = "0x1443C3C", VA = "0x1443C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000695")]
		public bool ShouldBeHidden
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x1443C4C", Offset = "0x1443C4C", VA = "0x1443C4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x1443C5C", Offset = "0x1443C5C", VA = "0x1443C5C")]
		public BasePromo(PromoType type)
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x1443C88", Offset = "0x1443C88", VA = "0x1443C88")]
		public void Display()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x1443D20", Offset = "0x1443D20", VA = "0x1443D20", Slot = "5")]
		protected virtual void OnDisplay()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x1443D24", Offset = "0x1443D24", VA = "0x1443D24")]
		public void Hide()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x1443DBC", Offset = "0x1443DBC", VA = "0x1443DBC", Slot = "6")]
		protected virtual void OnHide()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x1443DC0", Offset = "0x1443DC0", VA = "0x1443DC0", Slot = "7")]
		public virtual void OnIdle()
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x1443DC4", Offset = "0x1443DC4", VA = "0x1443DC4", Slot = "8")]
		public virtual void OnActive()
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x1443DC8", Offset = "0x1443DC8", VA = "0x1443DC8", Slot = "9")]
		public virtual void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class BrushSizePromo : BasePromo
	{
		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_BrushSizeHintLastPos;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_BrushSizeHintLastPosSet;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_BrushSizeHintMovementAmount;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_BrushSizeHintSwipeTotal;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_PreventHint;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_PlayedAudioCue;

		[Token(Token = "0x17000696")]
		public override string PrefsKey
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x127FC68", Offset = "0x127FC68", VA = "0x127FC68", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x127FBD4", Offset = "0x127FBD4", VA = "0x127FBD4")]
		public BrushSizePromo()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x127FCAC", Offset = "0x127FCAC", VA = "0x127FCAC", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x127FD84", Offset = "0x127FD84", VA = "0x127FD84", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x1280024", Offset = "0x1280024", VA = "0x1280024", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public class ControllerConsoleMessage : MonoBehaviour
	{
		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_Message;

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x15908A8", Offset = "0x15908A8", VA = "0x15908A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x1590AC4", Offset = "0x1590AC4", VA = "0x1590AC4")]
		public ControllerConsoleMessage()
		{
		}
	}
	[Token(Token = "0x2000645")]
	public class ControllerTutorialScript : MonoBehaviour
	{
		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_HapticBuzzLength;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_HapticPulses;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_MeshMaterialInactive;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material m_TriggerMaterialInactive;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_OriginalMeshMaterial;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_OriginalTriggerMaterial;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BaseControllerBehavior m_BaseBehavior;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer m_Mesh;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer m_Trigger;

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x1597F5C", Offset = "0x1597F5C", VA = "0x1597F5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x159801C", Offset = "0x159801C", VA = "0x159801C")]
		private void Start()
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x1597F60", Offset = "0x1597F60", VA = "0x1597F60")]
		private void InitCachedComponents()
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x1598068", Offset = "0x1598068", VA = "0x1598068")]
		public void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x159816C", Offset = "0x159816C", VA = "0x159816C")]
		public void Activate(bool bActivate)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x1598314", Offset = "0x1598314", VA = "0x1598314")]
		public void DisableTutorialObject()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x1598338", Offset = "0x1598338", VA = "0x1598338")]
		public ControllerTutorialScript()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class DeselectionPromo : BasePromo
	{
		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x17000697")]
		public override string PrefsKey
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0xEC6FE8", Offset = "0xEC6FE8", VA = "0xEC6FE8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xEC702C", Offset = "0xEC702C", VA = "0xEC702C")]
		public DeselectionPromo()
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xEC705C", Offset = "0xEC705C", VA = "0xEC705C", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xEC7188", Offset = "0xEC7188", VA = "0xEC7188", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xEC7220", Offset = "0xEC7220", VA = "0xEC7220", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0xEC7238", Offset = "0xEC7238", VA = "0xEC7238", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public class DuplicatePromo : BasePromo
	{
		[Token(Token = "0x17000698")]
		public override string PrefsKey
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xED1AC8", Offset = "0xED1AC8", VA = "0xED1AC8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xED1B0C", Offset = "0xED1B0C", VA = "0xED1B0C")]
		public DuplicatePromo()
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xED1B18", Offset = "0xED1B18", VA = "0xED1B18", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xED1C70", Offset = "0xED1C70", VA = "0xED1C70", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xED1C98", Offset = "0xED1C98", VA = "0xED1C98", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xED1DD4", Offset = "0xED1DD4", VA = "0xED1DD4", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class FloatingPanelPromo : BasePromo
	{
		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BasePanel m_Panel;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BasePanel m_InitialPanel;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_TossState;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_RequireNewPanelToDisplay;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_NumPanelsGrabbed;

		[Token(Token = "0x17000699")]
		public override string PrefsKey
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x101BA64", Offset = "0x101BA64", VA = "0x101BA64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069A")]
		private bool TossState
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x101BAA8", Offset = "0x101BAA8", VA = "0x101BAA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x101BAB0", Offset = "0x101BAB0", VA = "0x101BAB0")]
			set
			{
			}
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x101B95C", Offset = "0x101B95C", VA = "0x101B95C")]
		private bool ShouldShowTossVisuals()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x101BCB4", Offset = "0x101BCB4", VA = "0x101BCB4")]
		public FloatingPanelPromo()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x101BE88", Offset = "0x101BE88", VA = "0x101BE88", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x101BF88", Offset = "0x101BF88", VA = "0x101BF88", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x101C034", Offset = "0x101C034", VA = "0x101C034", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x101C860", Offset = "0x101C860", VA = "0x101C860", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x101BD5C", Offset = "0x101BD5C", VA = "0x101BD5C")]
		private void RequestDisplayForGrabState()
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x101C674", Offset = "0x101C674", VA = "0x101C674")]
		private void RequestDisplayForTossState()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x101C490", Offset = "0x101C490", VA = "0x101C490")]
		private void AlignHintLine()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public class GripHintScript : MonoBehaviour
	{
		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_ArrowTransform;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_ArrowBasePosition;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_ArrowBobSpeed;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_ArrowBobScalar;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_ArrowBobValue;

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0xFAC7C0", Offset = "0xFAC7C0", VA = "0xFAC7C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xFAC7F8", Offset = "0xFAC7F8", VA = "0xFAC7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0xFAC860", Offset = "0xFAC860", VA = "0xFAC860")]
		public GripHintScript()
		{
		}
	}
	[Token(Token = "0x200064A")]
	public class HintArrowLineScript : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		private class Arrow
		{
			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_DistanceToTarget;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_Arrow;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 m_BaseScale;

			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xFF6E6C", Offset = "0xFF6E6C", VA = "0xFF6E6C")]
			public void SetScale(float scale)
			{
			}

			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xFF6EC4", Offset = "0xFF6EC4", VA = "0xFF6EC4")]
			public Arrow()
			{
			}
		}

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ArrowPrefab;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_ArrowSpacing;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_MovementSpeed;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_ScaleDistance;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DisappearDistance;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_GlobalModeScaleDistance;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GlobalModeDisappearDistance;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_AutoUpdate;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_AutoPositionOffset;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_AutoRotationOrigin;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 m_AutoRotationTarget;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_GlobalMode;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Arrow> m_Arrows;

		[Token(Token = "0x1700069B")]
		public bool GlobalMode
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x13C3A04", Offset = "0x13C3A04", VA = "0x13C3A04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x13C3A0C", Offset = "0x13C3A0C", VA = "0x13C3A0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700069C")]
		private float DisappearDistance
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x13C3A18", Offset = "0x13C3A18", VA = "0x13C3A18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069D")]
		private float ScaleDistance
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x13C3A34", Offset = "0x13C3A34", VA = "0x13C3A34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x13C3A50", Offset = "0x13C3A50", VA = "0x13C3A50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x13C3AC0", Offset = "0x13C3AC0", VA = "0x13C3AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x13C3CE4", Offset = "0x13C3CE4", VA = "0x13C3CE4")]
		public void UpdateLine(TrTransform origin, TrTransform target)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x13C4234", Offset = "0x13C4234", VA = "0x13C4234")]
		public void Reset()
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x13C432C", Offset = "0x13C432C", VA = "0x13C432C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x13C4610", Offset = "0x13C4610", VA = "0x13C4610")]
		public HintArrowLineScript()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class HintObjectScript : MonoBehaviour
	{
		[Token(Token = "0x200064D")]
		public enum State
		{
			[Token(Token = "0x40029B6")]
			Deactivated,
			[Token(Token = "0x40029B7")]
			Activating,
			[Token(Token = "0x40029B8")]
			Active,
			[Token(Token = "0x40029B9")]
			Deactivating
		}

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_HintObject;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_HintObjectParent;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_HintObjectScale;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_ActiveMinShowAngle;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_ScaleXOnly;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMesh m_HintText;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ActivateSpeed;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_ActivateTimer;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3? m_OriginalHintObjectPosition;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion? m_OriginalHintObjectRotation;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_UnparentOnEnable;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_CurrentState;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_ActiveStatePrevTimer;

		[Token(Token = "0x1700069E")]
		private bool HintObjectReparented
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x13C4B50", Offset = "0x13C4B50", VA = "0x13C4B50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x13C4638", Offset = "0x13C4638", VA = "0x13C4638")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x13C4648", Offset = "0x13C4648", VA = "0x13C4648")]
		public void SetHintText(string text)
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x13C46E0", Offset = "0x13C46E0", VA = "0x13C46E0")]
		public string GetHintText()
		{
			return null;
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x13C4788", Offset = "0x13C4788", VA = "0x13C4788")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x13C4860", Offset = "0x13C4860", VA = "0x13C4860")]
		public void Activate(bool bActivate)
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x13C4A94", Offset = "0x13C4A94", VA = "0x13C4A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x13C4C24", Offset = "0x13C4C24", VA = "0x13C4C24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x13C5010", Offset = "0x13C5010", VA = "0x13C5010")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x13C50BC", Offset = "0x13C50BC", VA = "0x13C50BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x13C4CB4", Offset = "0x13C4CB4", VA = "0x13C4CB4")]
		private void ParentHintObject()
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x13C48E8", Offset = "0x13C48E8", VA = "0x13C48E8")]
		private void UnparentHintObject()
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x13C47D4", Offset = "0x13C47D4", VA = "0x13C47D4")]
		private void UpdateScale(float fScale)
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x13C524C", Offset = "0x13C524C", VA = "0x13C524C")]
		private void UpdateActive()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x13C533C", Offset = "0x13C533C", VA = "0x13C533C")]
		public HintObjectScript()
		{
		}
	}
	[Token(Token = "0x200064E")]
	public class InteractIntroPanelPromo : BasePromo
	{
		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_SwappingControls;

		[Token(Token = "0x1700069F")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x12DB278", Offset = "0x12DB278", VA = "0x12DB278", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x12DB2BC", Offset = "0x12DB2BC", VA = "0x12DB2BC")]
		public InteractIntroPanelPromo()
		{
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x12DB350", Offset = "0x12DB350", VA = "0x12DB350", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x12DB3E4", Offset = "0x12DB3E4", VA = "0x12DB3E4", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x12DB5A8", Offset = "0x12DB5A8", VA = "0x12DB5A8")]
		private void AlignHintLine()
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x12DB81C", Offset = "0x12DB81C", VA = "0x12DB81C", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x12DB910", Offset = "0x12DB910", VA = "0x12DB910", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x200064F")]
	public interface IPromoFactory
	{
		[Token(Token = "0x170006A0")]
		PromoType InstanceType
		{
			[Token(Token = "0x6002A0E")]
			get;
		}

		[Token(Token = "0x170006A1")]
		string PrefsKey
		{
			[Token(Token = "0x6002A0F")]
			get;
		}

		[Token(Token = "0x6002A0D")]
		BasePromo CreateInstance();
	}
	[Token(Token = "0x2000650")]
	public class PromoFactory<T> : IPromoFactory where T : BasePromo, new()
	{
		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PromoType m_Type;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string m_KeySuffix;

		[Token(Token = "0x170006A2")]
		public PromoType InstanceType
		{
			[Token(Token = "0x6002A12")]
			get
			{
				return default(PromoType);
			}
		}

		[Token(Token = "0x170006A3")]
		public string PrefsKey
		{
			[Token(Token = "0x6002A13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A10")]
		public PromoFactory(PromoType type, string keySuffix)
		{
		}

		[Token(Token = "0x6002A11")]
		public BasePromo CreateInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000651")]
	public class PromoManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA64", Offset = "0xB2AA64")]
		private sealed class <>c
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPromoFactory, PromoType> <>9__41_0;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<BasePromo, bool> <>9__42_0;

			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x10F0358", Offset = "0x10F0358", VA = "0x10F0358")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x10F0360", Offset = "0x10F0360", VA = "0x10F0360")]
			internal PromoType <Awake>b__41_0(IPromoFactory f)
			{
				return default(PromoType);
			}

			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x10F040C", Offset = "0x10F040C", VA = "0x10F040C")]
			internal bool <Update>b__42_0(BasePromo p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA74", Offset = "0xB2AA74")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PromoManager <>4__this;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PromoType promo;

			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x10F0428", Offset = "0x10F0428", VA = "0x10F0428")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x10F0430", Offset = "0x10F0430", VA = "0x10F0430")]
			internal bool <RecordCompletion>b__0(BasePromo p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PromoManager m_Instance;

		[Token(Token = "0x40029BE")]
		public const string kPromoPrefix = "Promo_";

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35D54", Offset = "0xB35D54")]
		[SerializeField]
		private GameObject m_ButtonHighlightPrefab;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35DA0", Offset = "0xB35DA0")]
		[SerializeField]
		private Material m_BorderMaterial;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_HintLinePrefab;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35DFC", Offset = "0xB35DFC")]
		[SerializeField]
		private float m_BrushSizeHintShowDistance;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_BrushSizeHintPreventSwipeAmount;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_BrushSizeHintCancelSwipeAmount;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB35E68", Offset = "0xB35E68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35E68", Offset = "0xB35E68")]
		private string m_GrabPanelHintText;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB35EC4", Offset = "0xB35EC4")]
		private string m_TossPanelHintText;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<PromoType, IPromoFactory> m_Factories;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<BasePromo> m_RequestedPromos;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BasePromo m_DisplayedPromo;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HintArrowLineScript m_HintLine;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject m_ButtonHighlightMesh;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_ButtonHighlightMeshBasePos;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_ButtonHighlightMeshBaseScale;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_RequestedAdvancedPanelsThisSession;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_RequestedFloatingPanelsThisSession;

		[Token(Token = "0x170006A4")]
		public Material SharePromoMaterial
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x11F6A40", Offset = "0x11F6A40", VA = "0x11F6A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A5")]
		public HintArrowLineScript HintLine
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x11F6A48", Offset = "0x11F6A48", VA = "0x11F6A48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A6")]
		public GameObject ButtonHighlight
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x11F6A50", Offset = "0x11F6A50", VA = "0x11F6A50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A7")]
		public float BrushSizeHintShowDistance
		{
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x11F6A58", Offset = "0x11F6A58", VA = "0x11F6A58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A8")]
		public float BrushSizeHintPreventSwipeAmount
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x11F6A60", Offset = "0x11F6A60", VA = "0x11F6A60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A9")]
		public float BrushSizeHintCancelSwipeAmount
		{
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0x11F6A68", Offset = "0x11F6A68", VA = "0x11F6A68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AA")]
		public string GrabPanelHintText
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x11F6A70", Offset = "0x11F6A70", VA = "0x11F6A70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AB")]
		public string TossPanelHintText
		{
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0x11F6A78", Offset = "0x11F6A78", VA = "0x11F6A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AC")]
		public IEnumerable<BasePromo> RequestedPromos
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x11F6A80", Offset = "0x11F6A80", VA = "0x11F6A80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AD")]
		public bool ShouldPausePromos
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x11F6B18", Offset = "0x11F6B18", VA = "0x11F6B18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x11F6A88", Offset = "0x11F6A88", VA = "0x11F6A88")]
		public void ResetButtonHighlightXf()
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x11F6CB8", Offset = "0x11F6CB8", VA = "0x11F6CB8")]
		private string ListRequests()
		{
			return null;
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x11F7060", Offset = "0x11F7060", VA = "0x11F7060")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x11F7930", Offset = "0x11F7930", VA = "0x11F7930")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x11F7BA8", Offset = "0x11F7BA8", VA = "0x11F7BA8")]
		public void RequestPromo(PromoType promo)
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x11F7D78", Offset = "0x11F7D78", VA = "0x11F7D78")]
		public void RecordCompletion(PromoType promo)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x11F7FE8", Offset = "0x11F7FE8", VA = "0x11F7FE8")]
		public bool HasPromoBeenCompleted(PromoType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x11F80D4", Offset = "0x11F80D4", VA = "0x11F80D4")]
		public void RequestAdvancedPanelsPromo()
		{
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0x11F8190", Offset = "0x11F8190", VA = "0x11F8190")]
		public void RequestFloatingPanelsPromo()
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x11F81C8", Offset = "0x11F81C8", VA = "0x11F81C8")]
		public void ResetAllKeys()
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0x11F8380", Offset = "0x11F8380", VA = "0x11F8380")]
		public PromoManager()
		{
		}
	}
	[Token(Token = "0x2000654")]
	public class SaveIconPromo : BasePromo
	{
		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_SwappingControls;

		[Token(Token = "0x170006AE")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xFBB9E4", Offset = "0xFBB9E4", VA = "0xFBB9E4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xFBBA28", Offset = "0xFBBA28", VA = "0xFBBA28")]
		public SaveIconPromo()
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xFBBAB8", Offset = "0xFBBAB8", VA = "0xFBBAB8", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xFBBB28", Offset = "0xFBBB28", VA = "0xFBBB28", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xFBBC40", Offset = "0xFBBC40", VA = "0xFBBC40", Slot = "6")]
		protected override void OnHide()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public class SelectionPromo : BasePromo
	{
		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x170006AF")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xE7621C", Offset = "0xE7621C", VA = "0xE7621C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xE76260", Offset = "0xE76260", VA = "0xE76260")]
		public SelectionPromo()
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xE76290", Offset = "0xE76290", VA = "0xE76290", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xE763BC", Offset = "0xE763BC", VA = "0xE763BC", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0xE76454", Offset = "0xE76454", VA = "0xE76454", Slot = "7")]
		public override void OnIdle()
		{
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xE7646C", Offset = "0xE7646C", VA = "0xE7646C", Slot = "8")]
		public override void OnActive()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class ShareSketchPromo : BasePromo
	{
		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_LastSaveFileHumanName;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_TimeBeforeDisplay;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_ControllerSwapped;

		[Token(Token = "0x170006B0")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0xE7CE70", Offset = "0xE7CE70", VA = "0xE7CE70", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3A")]
		[Address(RVA = "0xE7CD4C", Offset = "0xE7CD4C", VA = "0xE7CD4C")]
		public ShareSketchPromo()
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xE7CEB4", Offset = "0xE7CEB4", VA = "0xE7CEB4", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xE7D1A0", Offset = "0xE7D1A0", VA = "0xE7D1A0", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0xE7D2A0", Offset = "0xE7D2A0", VA = "0xE7D2A0", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xE7D708", Offset = "0xE7D708", VA = "0xE7D708", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class TriggerToPinPromo : BasePromo
	{
		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private InputManager.ControllerName m_Controller;

		[Token(Token = "0x170006B1")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x11770B4", Offset = "0x11770B4", VA = "0x11770B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x11770F8", Offset = "0x11770F8", VA = "0x11770F8")]
		public TriggerToPinPromo()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x1177104", Offset = "0x1177104", VA = "0x1177104", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x11771F8", Offset = "0x11771F8", VA = "0x11771F8", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0x11772C8", Offset = "0x11772C8", VA = "0x11772C8", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x11772D0", Offset = "0x11772D0", VA = "0x11772D0", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x2000658")]
	public class TriggerToUnpinPromo : BasePromo
	{
		[Token(Token = "0x170006B2")]
		public override string PrefsKey
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x123C888", Offset = "0x123C888", VA = "0x123C888", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x123C8CC", Offset = "0x123C8CC", VA = "0x123C8CC")]
		public TriggerToUnpinPromo()
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x123C8D8", Offset = "0x123C8D8", VA = "0x123C8D8", Slot = "5")]
		protected override void OnDisplay()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x123C9C0", Offset = "0x123C9C0", VA = "0x123C9C0", Slot = "6")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x123C9C8", Offset = "0x123C9C8", VA = "0x123C9C8", Slot = "8")]
		public override void OnActive()
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x123CA4C", Offset = "0x123CA4C", VA = "0x123CA4C", Slot = "7")]
		public override void OnIdle()
		{
		}
	}
	[Token(Token = "0x2000659")]
	public class TutorialControllerSwitcherScript : MonoBehaviour
	{
		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_ViveControllers;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_RiftControllers;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_WmrControllers;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] m_QuestControllers;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_KnucklesControllers;

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x1240334", Offset = "0x1240334", VA = "0x1240334")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x1240494", Offset = "0x1240494", VA = "0x1240494")]
		private void ActivateControllers(GameObject[] gameObjects, bool isActive)
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x1240510", Offset = "0x1240510", VA = "0x1240510")]
		public TutorialControllerSwitcherScript()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public class TutorialDuplicateScript : MonoBehaviour
	{
		[Token(Token = "0x200065B")]
		private enum AnimationState
		{
			[Token(Token = "0x40029E7")]
			Selected,
			[Token(Token = "0x40029E8")]
			Duplicated
		}

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter m_Stroke;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter m_StrokeDuplicate;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_SelectDuration;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_DuplicateDuration;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationState m_AnimState;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_Timer;

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x1240518", Offset = "0x1240518", VA = "0x1240518")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x1240684", Offset = "0x1240684", VA = "0x1240684")]
		public TutorialDuplicateScript()
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class TutorialHighlightScript : MonoBehaviour
	{
		[Token(Token = "0x200065D")]
		private enum HighlightState
		{
			[Token(Token = "0x40029F1")]
			NoGrab,
			[Token(Token = "0x40029F2")]
			MoveIn,
			[Token(Token = "0x40029F3")]
			Activate,
			[Token(Token = "0x40029F4")]
			MoveOut
		}

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_StateDuration;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Highlight;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Controller;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_StartPos;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_EndPos;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HighlightState m_State;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Timer;

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x124068C", Offset = "0x124068C", VA = "0x124068C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x1240808", Offset = "0x1240808", VA = "0x1240808")]
		public TutorialHighlightScript()
		{
		}
	}
	[Token(Token = "0x200065E")]
	public enum TutorialType
	{
		[Token(Token = "0x40029F6")]
		NextTip,
		[Token(Token = "0x40029F7")]
		UndoRedo,
		[Token(Token = "0x40029F8")]
		WorldTransform,
		[Token(Token = "0x40029F9")]
		WorldTransformReset,
		[Token(Token = "0x40029FA")]
		Grip,
		[Token(Token = "0x40029FB")]
		ScaleModel,
		[Token(Token = "0x40029FC")]
		PinModel,
		[Token(Token = "0x40029FD")]
		SnapModel,
		[Token(Token = "0x40029FE")]
		SnapLine,
		[Token(Token = "0x40029FF")]
		DrawOnGuides,
		[Token(Token = "0x4002A00")]
		ColorPalette,
		[Token(Token = "0x4002A01")]
		SwapControllers,
		[Token(Token = "0x4002A02")]
		Duplicate,
		[Token(Token = "0x4002A03")]
		PinCushion,
		[Token(Token = "0x4002A04")]
		ControllerConsole,
		[Token(Token = "0x4002A05")]
		TossToDismiss,
		[Token(Token = "0x4002A06")]
		Num
	}
	[Token(Token = "0x200065F")]
	public enum IntroTutorialState
	{
		[Token(Token = "0x4002A08")]
		ActivateBrush,
		[Token(Token = "0x4002A09")]
		WaitForBrushStrokeStart,
		[Token(Token = "0x4002A0A")]
		WaitForBrushStrokeEnd,
		[Token(Token = "0x4002A0B")]
		SwipeToUnlockPanels,
		[Token(Token = "0x4002A0C")]
		WaitForSwipe,
		[Token(Token = "0x4002A0D")]
		ActivatePanels,
		[Token(Token = "0x4002A0E")]
		DelayForPointToPanelHint,
		[Token(Token = "0x4002A0F")]
		WaitForPanelInteract,
		[Token(Token = "0x4002A10")]
		WaitForEndOfPanelInteract,
		[Token(Token = "0x4002A11")]
		ActivateSwapControllersHint,
		[Token(Token = "0x4002A12")]
		WaitForSwapControllers,
		[Token(Token = "0x4002A13")]
		InitializeForNoCreation,
		[Token(Token = "0x4002A14")]
		Done
	}
	[Serializable]
	[Token(Token = "0x2000660")]
	public struct TutorialPrefabMap
	{
		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject m_TutorialPrefab;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TutorialType m_Type;
	}
	[Token(Token = "0x2000661")]
	public class TutorialManager : MonoBehaviour
	{
		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TutorialManager m_Instance;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB35FDC", Offset = "0xB35FDC")]
		[SerializeField]
		private AudioClip m_IntroBeginSound;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_IntroPaintRegisterDistance;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_IntroPointHintDelay;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_IntroSwipeAdvanceAmount;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_PointHintPrefab;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36068", Offset = "0xB36068")]
		[SerializeField]
		private TutorialPrefabMap[] m_PrefabMap;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB360B4", Offset = "0xB360B4")]
		[SerializeField]
		private GameObject m_LightGizmoHintPrefab;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_LightGizmoHoverTimeBeforeHint;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private IntroTutorialState m_IntroState;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_IntroSwipeTotal;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_IntroStateCountdown;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HintArrowLineScript m_IntroPointHintArrowLine;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_IntroPaintLastPos;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_IntroPaintMovementAmount;

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IntroPaintWasPainting;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HintObjectScript m_LightGizmoHint;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_LightGizmoHoverTimer;

		[Token(Token = "0x170006B3")]
		public IntroTutorialState IntroState
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x1240820", Offset = "0x1240820", VA = "0x1240820")]
			get
			{
				return default(IntroTutorialState);
			}
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x1240818", Offset = "0x1240818", VA = "0x1240818")]
			set
			{
			}
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x1240828", Offset = "0x1240828", VA = "0x1240828")]
		public bool TutorialActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1240838", Offset = "0x1240838", VA = "0x1240838")]
		public bool TutorialPanelsHaveSpawned()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x1240848", Offset = "0x1240848", VA = "0x1240848")]
		public bool TutorialAllowsSwapControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x1240864", Offset = "0x1240864", VA = "0x1240864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x12408B4", Offset = "0x12408B4", VA = "0x12408B4")]
		public GameObject GetTutorialPrefab(TutorialType type)
		{
			return null;
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x1240924", Offset = "0x1240924", VA = "0x1240924")]
		public void UpdateIntroTutorial()
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x1241348", Offset = "0x1241348", VA = "0x1241348")]
		private void AlignPointLineToPanels()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0x1241734", Offset = "0x1241734", VA = "0x1241734")]
		public void EnableQuickLoadTutorial(bool bEnable)
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x1241228", Offset = "0x1241228", VA = "0x1241228")]
		public void EnablePointAtPanelHint(bool bEnable)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x124151C", Offset = "0x124151C", VA = "0x124151C")]
		private void EnableSwapControllersHint(bool bEnable)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x1241018", Offset = "0x1241018", VA = "0x1241018")]
		public void ActivateControllerTutorial(InputManager.ControllerName eName, bool bActivate)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x1241854", Offset = "0x1241854", VA = "0x1241854")]
		public void UpdateLightGizmoHint()
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x1241B38", Offset = "0x1241B38", VA = "0x1241B38")]
		public void ClearLightGizmoHint()
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x1241150", Offset = "0x1241150", VA = "0x1241150")]
		public void DisableControllerTutorial(InputManager.ControllerName eName)
		{
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x1241BE0", Offset = "0x1241BE0", VA = "0x1241BE0")]
		public TutorialManager()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class TutorialPointScript : MonoBehaviour
	{
		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_BrushControllerAnchor;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_WandControllerAnchor;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_WandPanel;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_PointingLine;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RotationScalar;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_TranslateScalar;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_AnimationSpeed;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_PanelScaleAmount;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector2 m_PanelActivationRange;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_PointingLineEmissionAmount;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_AnimationValue;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_TranslateBase;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_RotationBase;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_PanelScaleBase;

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x1242170", Offset = "0x1242170", VA = "0x1242170")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x1242260", Offset = "0x1242260", VA = "0x1242260")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x1242378", Offset = "0x1242378", VA = "0x1242378")]
		public TutorialPointScript()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class TutorialQuickToolScript : MonoBehaviour
	{
		[Token(Token = "0x2000664")]
		private enum AnimationState
		{
			[Token(Token = "0x4002A45")]
			ShowQuickTool,
			[Token(Token = "0x4002A46")]
			PauseOnPaint,
			[Token(Token = "0x4002A47")]
			SwitchTool,
			[Token(Token = "0x4002A48")]
			PauseOnOther,
			[Token(Token = "0x4002A49")]
			SwitchBack,
			[Token(Token = "0x4002A4A")]
			PauseBeforeClose,
			[Token(Token = "0x4002A4B")]
			HideQuickTool,
			[Token(Token = "0x4002A4C")]
			ResetPause
		}

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_QuickTool;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Controller;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_PaintCircle;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_OtherCircle;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_ShowHideSpeed;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_MoveSpeed;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_ToolPauseDuration;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_ResetPauseDuration;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_DefaultRotation;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private AnimationState m_AnimState;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_Timer;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_SwitchPosition;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion m_SwitchRotation;

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1242394", Offset = "0x1242394", VA = "0x1242394")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x124246C", Offset = "0x124246C", VA = "0x124246C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x1242890", Offset = "0x1242890", VA = "0x1242890")]
		public TutorialQuickToolScript()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class TutorialScaleScript : MonoBehaviour
	{
		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_LeftController;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_RightController;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Mesh;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_StateDuration;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_AnimatingIn;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Timer;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_StartSize;

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x1242898", Offset = "0x1242898", VA = "0x1242898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x12428FC", Offset = "0x12428FC", VA = "0x12428FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x1242A9C", Offset = "0x1242A9C", VA = "0x1242A9C")]
		public TutorialScaleScript()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class TutorialSnapScript : MonoBehaviour
	{
		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_Unsnapped;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_Snapped;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_SwapTime;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_Time;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_ShowingSnapped;

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x1242AA4", Offset = "0x1242AA4", VA = "0x1242AA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x1242B44", Offset = "0x1242B44", VA = "0x1242B44")]
		public TutorialSnapScript()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public class TutorialTapScript : MonoBehaviour
	{
		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB362B0", Offset = "0xB362B0")]
		[SerializeField]
		private Transform m_GeometryWandPanel;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB362FC", Offset = "0xB362FC")]
		[SerializeField]
		private Transform m_GeometryBrushStroke;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_GeometryViveLeft;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_GeometryViveRight;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB36368", Offset = "0xB36368")]
		[SerializeField]
		private Transform m_GeometryRiftLeft;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB363B4", Offset = "0xB363B4")]
		[SerializeField]
		private Transform m_GeometryRiftRight;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_GeometryWmrLeft;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_GeometryWmrRight;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_GeometryQuestLeft;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_GeometryQuestRight;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_GeometryKnucklesLeft;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_GeometryKnucklesRight;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_AnimationSpeedClick;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_AnimationSpeedRepel;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_ClickTime;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_MovementScale;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_ControllerGeometryLeft;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_ControllerGeometryRight;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_AnimationValue;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_ControllerBasePosA;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_ControllerBasePosB;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_Flipped;

		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_RepelTime;

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x1242B4C", Offset = "0x1242B4C", VA = "0x1242B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x1242D00", Offset = "0x1242D00", VA = "0x1242D00")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x1242EE4", Offset = "0x1242EE4", VA = "0x1242EE4")]
		public TutorialTapScript()
		{
		}
	}
	[Token(Token = "0x2000668")]
	public class TutorialTossScript : MonoBehaviour
	{
		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_ControllerAnchor;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_GripGlowAnchor;

		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Panel;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_RotationScalars;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_TranslateScalars;

		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_AnimationSpeed;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_AnimationLength;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_TranslatePoint;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_ScalePoint;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_ScaleEnd;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_AnimationValue;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_RotationBase;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_TranslateBase;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_PanelScaleBase;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_GripGlowScaleBase;

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x1242EF8", Offset = "0x1242EF8", VA = "0x1242EF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x1242F9C", Offset = "0x1242F9C", VA = "0x1242F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x1243120", Offset = "0x1243120", VA = "0x1243120")]
		public TutorialTossScript()
		{
		}
	}
	[Token(Token = "0x2000669")]
	public class TwitchChat : BaseChatScript
	{
		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x124313C", Offset = "0x124313C", VA = "0x124313C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x12431D4", Offset = "0x12431D4", VA = "0x12431D4")]
		public TwitchChat()
		{
		}
	}
	[Token(Token = "0x200066A")]
	public class UndoBaseAnimScript : MonoBehaviour
	{
		[Token(Token = "0x200066B")]
		protected enum HideState
		{
			[Token(Token = "0x4002A86")]
			Hiding,
			[Token(Token = "0x4002A87")]
			Hidden
		}

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected HideState m_CurrentHideState;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected float m_HiddenAmount;

		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_HideSpeed;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_DestroyOnHide;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		protected bool m_TargetMainPointer;

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x1245F04", Offset = "0x1245F04", VA = "0x1245F04")]
		protected void OnAwake()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x1245F34", Offset = "0x1245F34", VA = "0x1245F34")]
		protected void InitForHiding()
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1245F78", Offset = "0x1245F78", VA = "0x1245F78")]
		private void Update()
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x1246080", Offset = "0x1246080", VA = "0x1246080", Slot = "4")]
		protected virtual void AnimateHiding()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1246084", Offset = "0x1246084", VA = "0x1246084")]
		protected Vector3 GetAnimationTarget_CS()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x1246150", Offset = "0x1246150", VA = "0x1246150")]
		public UndoBaseAnimScript()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class UndoMeshAnimScript : UndoBaseAnimScript
	{
		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_vOriginalPos_CS;

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1246168", Offset = "0x1246168", VA = "0x1246168")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x124616C", Offset = "0x124616C", VA = "0x124616C")]
		public void Init()
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x1246210", Offset = "0x1246210", VA = "0x1246210", Slot = "4")]
		protected override void AnimateHiding()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x1246350", Offset = "0x1246350", VA = "0x1246350")]
		public UndoMeshAnimScript()
		{
		}
	}
	[Token(Token = "0x200066D")]
	public class UndoParticleAnimScript : UndoBaseAnimScript
	{
		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_ParticleCount;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.Particle[] m_Particles;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem.Particle[] m_WorkingParticles;

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x1246368", Offset = "0x1246368", VA = "0x1246368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x124636C", Offset = "0x124636C", VA = "0x124636C")]
		public void Init(ParticleSystem.Particle[] aParticles, int iParticleCount)
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x1246434", Offset = "0x1246434", VA = "0x1246434", Slot = "4")]
		protected override void AnimateHiding()
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x12465C8", Offset = "0x12465C8", VA = "0x12465C8")]
		public UndoParticleAnimScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200066E")]
	public class UserConfig
	{
		[Serializable]
		[Token(Token = "0x200066F")]
		public struct YouTubeConfig
		{
			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ChannelID;
		}

		[Serializable]
		[Token(Token = "0x2000670")]
		public struct FlagsConfig
		{
			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool DisableAudio;

			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool DisableAutosave;

			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool DisablePoly;

			[Token(Token = "0x4002A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool UnlockScale;

			[Token(Token = "0x4002A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool GuideToggleVisiblityOnly;

			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool HighResolutionSnapshots;

			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool ShowDroppedFrames;

			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			private bool? m_ShowDangerousBrushes;

			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			private bool? m_PostEffectsOnCapture;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			private bool? m_ShowWatermark;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			private bool? m_ShowHeadset;

			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			private bool? m_ShowControllers;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int? m_SnapshotHeight;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int? m_SnapshotWidth;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float? m_Fov;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool? m_PolyModelPreload;

			[Token(Token = "0x170006B4")]
			public bool ShowDangerousBrushes
			{
				[Token(Token = "0x6002A86")]
				[Address(RVA = "0xF274FC", Offset = "0xF274FC", VA = "0xF274FC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A87")]
				[Address(RVA = "0xF2755C", Offset = "0xF2755C", VA = "0xF2755C")]
				set
				{
				}
			}

			[Token(Token = "0x170006B5")]
			public bool PostEffectsOnCaptureValid
			{
				[Token(Token = "0x6002A88")]
				[Address(RVA = "0xF275C8", Offset = "0xF275C8", VA = "0xF275C8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006B6")]
			public bool PostEffectsOnCapture
			{
				[Token(Token = "0x6002A89")]
				[Address(RVA = "0xF27608", Offset = "0xF27608", VA = "0xF27608")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A8A")]
				[Address(RVA = "0xF27668", Offset = "0xF27668", VA = "0xF27668")]
				set
				{
				}
			}

			[Token(Token = "0x170006B7")]
			public bool ShowWatermarkValid
			{
				[Token(Token = "0x6002A8B")]
				[Address(RVA = "0xF276D4", Offset = "0xF276D4", VA = "0xF276D4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006B8")]
			public bool ShowWatermark
			{
				[Token(Token = "0x6002A8C")]
				[Address(RVA = "0xF27714", Offset = "0xF27714", VA = "0xF27714")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A8D")]
				[Address(RVA = "0xF27774", Offset = "0xF27774", VA = "0xF27774")]
				set
				{
				}
			}

			[Token(Token = "0x170006B9")]
			public bool ShowHeadset
			{
				[Token(Token = "0x6002A8E")]
				[Address(RVA = "0xF277E0", Offset = "0xF277E0", VA = "0xF277E0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A8F")]
				[Address(RVA = "0xF27840", Offset = "0xF27840", VA = "0xF27840")]
				set
				{
				}
			}

			[Token(Token = "0x170006BA")]
			public bool ShowControllers
			{
				[Token(Token = "0x6002A90")]
				[Address(RVA = "0xF278AC", Offset = "0xF278AC", VA = "0xF278AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A91")]
				[Address(RVA = "0xF2790C", Offset = "0xF2790C", VA = "0xF2790C")]
				set
				{
				}
			}

			[Token(Token = "0x170006BB")]
			public int SnapshotHeight
			{
				[Token(Token = "0x6002A92")]
				[Address(RVA = "0xF27978", Offset = "0xF27978", VA = "0xF27978")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002A93")]
				[Address(RVA = "0xF279CC", Offset = "0xF279CC", VA = "0xF279CC")]
				set
				{
				}
			}

			[Token(Token = "0x170006BC")]
			public int SnapshotWidth
			{
				[Token(Token = "0x6002A94")]
				[Address(RVA = "0xF27B18", Offset = "0xF27B18", VA = "0xF27B18")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002A95")]
				[Address(RVA = "0xF27B6C", Offset = "0xF27B6C", VA = "0xF27B6C")]
				set
				{
				}
			}

			[Token(Token = "0x170006BD")]
			public bool FovValid
			{
				[Token(Token = "0x6002A96")]
				[Address(RVA = "0xF27CB8", Offset = "0xF27CB8", VA = "0xF27CB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006BE")]
			public float Fov
			{
				[Token(Token = "0x6002A97")]
				[Address(RVA = "0xF27CF8", Offset = "0xF27CF8", VA = "0xF27CF8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002A98")]
				[Address(RVA = "0xF27D58", Offset = "0xF27D58", VA = "0xF27D58")]
				set
				{
				}
			}

			[Token(Token = "0x170006BF")]
			public bool PolyModelPreloadValid
			{
				[Token(Token = "0x6002A99")]
				[Address(RVA = "0xF27EFC", Offset = "0xF27EFC", VA = "0xF27EFC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006C0")]
			public bool PolyModelPreload
			{
				[Token(Token = "0x6002A9A")]
				[Address(RVA = "0xF27F3C", Offset = "0xF27F3C", VA = "0xF27F3C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A9B")]
				[Address(RVA = "0xF27FAC", Offset = "0xF27FAC", VA = "0xF27FAC")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000671")]
		public struct DemoConfig
		{
			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Enabled;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint? Duration;

			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool PublishAutomatically;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string m_PublishTitle;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_PublishDescription;

			[Token(Token = "0x170006C1")]
			public string PublishTitle
			{
				[Token(Token = "0x6002A9C")]
				[Address(RVA = "0xF27250", Offset = "0xF27250", VA = "0xF27250")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A9D")]
				[Address(RVA = "0xF272A4", Offset = "0xF272A4", VA = "0xF272A4")]
				set
				{
				}
			}

			[Token(Token = "0x170006C2")]
			public string PublishDescription
			{
				[Token(Token = "0x6002A9E")]
				[Address(RVA = "0xF272AC", Offset = "0xF272AC", VA = "0xF272AC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002A9F")]
				[Address(RVA = "0xF27300", Offset = "0xF27300", VA = "0xF27300")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000672")]
		public struct ExportConfig
		{
			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool? m_ExportBinaryFbx;

			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string m_ExportFbxVersion;

			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool? m_ExportStrokeTimestamp;

			[Token(Token = "0x170006C3")]
			public bool ExportBinaryFbx
			{
				[Token(Token = "0x6002AA0")]
				[Address(RVA = "0xF27308", Offset = "0xF27308", VA = "0xF27308")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AA1")]
				[Address(RVA = "0xF27368", Offset = "0xF27368", VA = "0xF27368")]
				set
				{
				}
			}

			[Token(Token = "0x170006C4")]
			public string ExportFbxVersion
			{
				[Token(Token = "0x6002AA2")]
				[Address(RVA = "0xF273D4", Offset = "0xF273D4", VA = "0xF273D4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AA3")]
				[Address(RVA = "0xF27428", Offset = "0xF27428", VA = "0xF27428")]
				set
				{
				}
			}

			[Token(Token = "0x170006C5")]
			public bool ExportStrokeTimestamp
			{
				[Token(Token = "0x6002AA4")]
				[Address(RVA = "0xF27430", Offset = "0xF27430", VA = "0xF27430")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AA5")]
				[Address(RVA = "0xF27490", Offset = "0xF27490", VA = "0xF27490")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000673")]
		public struct SharingConfig
		{
			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB36540", Offset = "0xB36540")]
			public string VrAssetServiceHostOverride;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB36578", Offset = "0xB36578")]
			public string VrAssetServiceUrlOverride;
		}

		[Serializable]
		[Token(Token = "0x2000674")]
		public struct IdentityConfig
		{
			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Author;
		}

		[Serializable]
		[Token(Token = "0x2000675")]
		public struct VideoConfig
		{
			[Token(Token = "0x4002AB2")]
			private const float kDefaultFps = 30f;

			[Token(Token = "0x4002AB3")]
			private const float kDefaultOfflineFps = 60f;

			[Token(Token = "0x4002AB4")]
			private const float kMinFps = 1f;

			[Token(Token = "0x4002AB5")]
			private const float kMaxFps = 60f;

			[Token(Token = "0x4002AB6")]
			private const float kMaxOfflineFps = 1000f;

			[Token(Token = "0x4002AB7")]
			private const int kDefaultRes = 1280;

			[Token(Token = "0x4002AB8")]
			private const int kDefaultOfflineRes = 1920;

			[Token(Token = "0x4002AB9")]
			private const int kMinRes = 640;

			[Token(Token = "0x4002ABA")]
			private const int kMaxRes = 2560;

			[Token(Token = "0x4002ABB")]
			private const int kMaxOfflineRes = 8000;

			[Token(Token = "0x4002ABC")]
			private const string kDefaultContainer = "mp4";

			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly List<string> kSupportedContainers;

			[Token(Token = "0x4002ABE")]
			private const string kDefaultVideoEncoder = "h.264";

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly List<string> kSupportedVideoEncoders;

			[Token(Token = "0x4002AC0")]
			private const float kDefaultSmoothing = 0.98f;

			[Token(Token = "0x4002AC1")]
			private const float kDefaultOdsPoleCollapsing = 1f;

			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float? m_FPS;

			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private float? m_OfflineFps;

			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float? m_Fov;

			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int? m_Resolution;

			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int? m_OfflineResolution;

			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool? m_SaveCameraPath;

			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string m_VideoEncoder;

			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string m_ContainerType;

			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float? m_CameraSmoothing;

			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float? m_OdsPoleCollapsing;

			[Token(Token = "0x170006C6")]
			public float FPS
			{
				[Token(Token = "0x6002AA6")]
				[Address(RVA = "0xF288D8", Offset = "0xF288D8", VA = "0xF288D8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AA7")]
				[Address(RVA = "0xF28934", Offset = "0xF28934", VA = "0xF28934")]
				set
				{
				}
			}

			[Token(Token = "0x170006C7")]
			public float OfflineFPS
			{
				[Token(Token = "0x6002AA8")]
				[Address(RVA = "0xF28B08", Offset = "0xF28B08", VA = "0xF28B08")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AA9")]
				[Address(RVA = "0xF28B68", Offset = "0xF28B68", VA = "0xF28B68")]
				set
				{
				}
			}

			[Token(Token = "0x170006C8")]
			public bool FovValid
			{
				[Token(Token = "0x6002AAA")]
				[Address(RVA = "0xF28D18", Offset = "0xF28D18", VA = "0xF28D18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006C9")]
			public float Fov
			{
				[Token(Token = "0x6002AAB")]
				[Address(RVA = "0xF28D58", Offset = "0xF28D58", VA = "0xF28D58")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AAC")]
				[Address(RVA = "0xF28DB8", Offset = "0xF28DB8", VA = "0xF28DB8")]
				set
				{
				}
			}

			[Token(Token = "0x170006CA")]
			public int Resolution
			{
				[Token(Token = "0x6002AAD")]
				[Address(RVA = "0xF28F5C", Offset = "0xF28F5C", VA = "0xF28F5C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AAE")]
				[Address(RVA = "0xF28FB4", Offset = "0xF28FB4", VA = "0xF28FB4")]
				set
				{
				}
			}

			[Token(Token = "0x170006CB")]
			public int OfflineResolution
			{
				[Token(Token = "0x6002AAF")]
				[Address(RVA = "0xF29154", Offset = "0xF29154", VA = "0xF29154")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AB0")]
				[Address(RVA = "0xF291AC", Offset = "0xF291AC", VA = "0xF291AC")]
				set
				{
				}
			}

			[Token(Token = "0x170006CC")]
			public bool SaveCameraPath
			{
				[Token(Token = "0x6002AB1")]
				[Address(RVA = "0xF2934C", Offset = "0xF2934C", VA = "0xF2934C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AB2")]
				[Address(RVA = "0xF293AC", Offset = "0xF293AC", VA = "0xF293AC")]
				set
				{
				}
			}

			[Token(Token = "0x170006CD")]
			public string Encoder
			{
				[Token(Token = "0x6002AB3")]
				[Address(RVA = "0xF29418", Offset = "0xF29418", VA = "0xF29418")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AB4")]
				[Address(RVA = "0xF2946C", Offset = "0xF2946C", VA = "0xF2946C")]
				set
				{
				}
			}

			[Token(Token = "0x170006CE")]
			public string ContainerType
			{
				[Token(Token = "0x6002AB5")]
				[Address(RVA = "0xF29638", Offset = "0xF29638", VA = "0xF29638")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AB6")]
				[Address(RVA = "0xF2968C", Offset = "0xF2968C", VA = "0xF2968C")]
				set
				{
				}
			}

			[Token(Token = "0x170006CF")]
			public bool CameraSmoothingValid
			{
				[Token(Token = "0x6002AB7")]
				[Address(RVA = "0xF29858", Offset = "0xF29858", VA = "0xF29858")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006D0")]
			public float CameraSmoothing
			{
				[Token(Token = "0x6002AB8")]
				[Address(RVA = "0xF29898", Offset = "0xF29898", VA = "0xF29898")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AB9")]
				[Address(RVA = "0xF298F8", Offset = "0xF298F8", VA = "0xF298F8")]
				set
				{
				}
			}

			[Token(Token = "0x170006D1")]
			public float OdsPoleCollapsing
			{
				[Token(Token = "0x6002ABA")]
				[Address(RVA = "0xF29A50", Offset = "0xF29A50", VA = "0xF29A50")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002ABB")]
				[Address(RVA = "0xF29AAC", Offset = "0xF29AAC", VA = "0xF29AAC")]
				set
				{
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000676")]
		public struct TestingConfig
		{
			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Enabled;

			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string InputFile;

			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string OutputFile;

			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool ResetPromos;

			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool FirstRun;

			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string BrushReplacements;

			[Token(Token = "0x170006D2")]
			public Dictionary<Guid, Guid> BrushReplacementMap
			{
				[Token(Token = "0x6002ABD")]
				[Address(RVA = "0xF285C0", Offset = "0xF285C0", VA = "0xF285C0")]
				get
				{
					return null;
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000677")]
		public struct ProfilingConfig
		{
			[Token(Token = "0x4002AD2")]
			public const int kDefaultScreenshotResolution = 1000;

			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB365B0", Offset = "0xB365B0")]
			private string[] <ProfilingFunctions>k__BackingField;

			[Token(Token = "0x4002AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB365C0", Offset = "0xB365C0")]
			private ProfilingManager.Mode <ProflingMode>k__BackingField;

			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ProfileName;

			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string ProfileFilename;

			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string SketchToLoad;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool AutoProfile;

			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool ShowControllers;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float? m_Duration;

			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool Csv;

			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int? m_QualityLevel;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB365D0", Offset = "0xB365D0")]
			private float <ViewportScaling>k__BackingField;

			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB365E0", Offset = "0xB365E0")]
			private float <EyeTextureScaling>k__BackingField;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB365F0", Offset = "0xB365F0")]
			private int <GlobalMaximumLOD>k__BackingField;

			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36600", Offset = "0xB36600")]
			private int <MsaaLevel>k__BackingField;

			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36610", Offset = "0xB36610")]
			private bool <TakeScreenshot>k__BackingField;

			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int? m_screenshotResolution;

			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36620", Offset = "0xB36620")]
			private bool <PerfgateOutput>k__BackingField;

			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float? m_StrokeSimplification;

			[Token(Token = "0x170006D3")]
			public string[] ProfilingFunctions
			{
				[Token(Token = "0x6002ABE")]
				[Address(RVA = "0xF28018", Offset = "0xF28018", VA = "0xF28018")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44B84", Offset = "0xB44B84")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6002ABF")]
				[Address(RVA = "0xF28020", Offset = "0xF28020", VA = "0xF28020")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BBC", Offset = "0xB44BBC")]
				private set
				{
				}
			}

			[Token(Token = "0x170006D4")]
			public ProfilingManager.Mode ProflingMode
			{
				[Token(Token = "0x6002AC0")]
				[Address(RVA = "0xF28028", Offset = "0xF28028", VA = "0xF28028")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44BCC", Offset = "0xB44BCC")]
				readonly get
				{
					return default(ProfilingManager.Mode);
				}
				[Token(Token = "0x6002AC1")]
				[Address(RVA = "0xF28030", Offset = "0xF28030", VA = "0xF28030")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C04", Offset = "0xB44C04")]
				private set
				{
				}
			}

			[Token(Token = "0x170006D5")]
			public string Mode
			{
				[Token(Token = "0x6002AC2")]
				[Address(RVA = "0xF28038", Offset = "0xF28038", VA = "0xF28038")]
				set
				{
				}
			}

			[Token(Token = "0x170006D6")]
			public string Functions
			{
				[Token(Token = "0x6002AC3")]
				[Address(RVA = "0xF281F0", Offset = "0xF281F0", VA = "0xF281F0")]
				set
				{
				}
			}

			[Token(Token = "0x170006D7")]
			public float Duration
			{
				[Token(Token = "0x6002AC4")]
				[Address(RVA = "0xF1B8F0", Offset = "0xF1B8F0", VA = "0xF1B8F0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AC5")]
				[Address(RVA = "0xF28288", Offset = "0xF28288", VA = "0xF28288")]
				set
				{
				}
			}

			[Token(Token = "0x170006D8")]
			public int QualityLevel
			{
				[Token(Token = "0x6002AC6")]
				[Address(RVA = "0xF282F4", Offset = "0xF282F4", VA = "0xF282F4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AC7")]
				[Address(RVA = "0xF28364", Offset = "0xF28364", VA = "0xF28364")]
				set
				{
				}
			}

			[Token(Token = "0x170006D9")]
			public float ViewportScaling
			{
				[Token(Token = "0x6002AC8")]
				[Address(RVA = "0xF283D0", Offset = "0xF283D0", VA = "0xF283D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C14", Offset = "0xB44C14")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6002AC9")]
				[Address(RVA = "0xF283D8", Offset = "0xF283D8", VA = "0xF283D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C4C", Offset = "0xB44C4C")]
				set
				{
				}
			}

			[Token(Token = "0x170006DA")]
			public float EyeTextureScaling
			{
				[Token(Token = "0x6002ACA")]
				[Address(RVA = "0xF283E0", Offset = "0xF283E0", VA = "0xF283E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C5C", Offset = "0xB44C5C")]
				readonly get
				{
					return default(float);
				}
				[Token(Token = "0x6002ACB")]
				[Address(RVA = "0xF283E8", Offset = "0xF283E8", VA = "0xF283E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44C94", Offset = "0xB44C94")]
				set
				{
				}
			}

			[Token(Token = "0x170006DB")]
			public int GlobalMaximumLOD
			{
				[Token(Token = "0x6002ACC")]
				[Address(RVA = "0xF283F0", Offset = "0xF283F0", VA = "0xF283F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44CA4", Offset = "0xB44CA4")]
				readonly get
				{
					return default(int);
				}
				[Token(Token = "0x6002ACD")]
				[Address(RVA = "0xF283F8", Offset = "0xF283F8", VA = "0xF283F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44CDC", Offset = "0xB44CDC")]
				set
				{
				}
			}

			[Token(Token = "0x170006DC")]
			public int MsaaLevel
			{
				[Token(Token = "0x6002ACE")]
				[Address(RVA = "0xF28400", Offset = "0xF28400", VA = "0xF28400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44CEC", Offset = "0xB44CEC")]
				readonly get
				{
					return default(int);
				}
				[Token(Token = "0x6002ACF")]
				[Address(RVA = "0xF28408", Offset = "0xF28408", VA = "0xF28408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D24", Offset = "0xB44D24")]
				set
				{
				}
			}

			[Token(Token = "0x170006DD")]
			public bool TakeScreenshot
			{
				[Token(Token = "0x6002AD0")]
				[Address(RVA = "0xF28410", Offset = "0xF28410", VA = "0xF28410")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D34", Offset = "0xB44D34")]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AD1")]
				[Address(RVA = "0xF28418", Offset = "0xF28418", VA = "0xF28418")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D6C", Offset = "0xB44D6C")]
				set
				{
				}
			}

			[Token(Token = "0x170006DE")]
			public int ScreenshotResolution
			{
				[Token(Token = "0x6002AD2")]
				[Address(RVA = "0xF1B960", Offset = "0xF1B960", VA = "0xF1B960")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AD3")]
				[Address(RVA = "0xF28424", Offset = "0xF28424", VA = "0xF28424")]
				set
				{
				}
			}

			[Token(Token = "0x170006DF")]
			public bool PerfgateOutput
			{
				[Token(Token = "0x6002AD4")]
				[Address(RVA = "0xF28490", Offset = "0xF28490", VA = "0xF28490")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44D7C", Offset = "0xB44D7C")]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AD5")]
				[Address(RVA = "0xF28498", Offset = "0xF28498", VA = "0xF28498")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB44DB4", Offset = "0xB44DB4")]
				set
				{
				}
			}

			[Token(Token = "0x170006E0")]
			public float StrokeSimplification
			{
				[Token(Token = "0x6002AD6")]
				[Address(RVA = "0xF284A4", Offset = "0xF284A4", VA = "0xF284A4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002AD7")]
				[Address(RVA = "0xF28514", Offset = "0xF28514", VA = "0xF28514")]
				set
				{
				}
			}

			[Token(Token = "0x170006E1")]
			public bool HasStrokeSimplification
			{
				[Token(Token = "0x6002AD8")]
				[Address(RVA = "0xF28580", Offset = "0xF28580", VA = "0xF28580")]
				get
				{
					return default(bool);
				}
			}
		}

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public YouTubeConfig YouTube;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlagsConfig Flags;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DemoConfig Demo;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExportConfig Export;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SharingConfig Sharing;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IdentityConfig User;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VideoConfig Video;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TestingConfig Testing;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ProfilingConfig Profiling;

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x124A2F8", Offset = "0x124A2F8", VA = "0x124A2F8")]
		public UserConfig()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class UserHeadScript : MonoBehaviour
	{
		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_HeadMesh;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DropCamWidget m_DropCam;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_MultiCam;

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x124A300", Offset = "0x124A300", VA = "0x124A300")]
		private void Update()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x124A364", Offset = "0x124A364", VA = "0x124A364")]
		public UserHeadScript()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public struct AxisConvention
	{
		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly AxisConvention kUnity;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly AxisConvention kFbxAccordingToUnity;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly AxisConvention kGltfAccordingToPoly;

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly AxisConvention kUsd;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly AxisConvention kStl;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public static readonly AxisConvention kVrml;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static readonly AxisConvention kGltf2;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public static readonly AxisConvention kUnreal;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 right;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 up;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 forward;

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xFF31B8", Offset = "0xFF31B8", VA = "0xFF31B8")]
		public static Matrix4x4 GetFromUnity(AxisConvention dst)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xFF32CC", Offset = "0xFF32CC", VA = "0xFF32CC")]
		public static Matrix4x4 GetToUnity(AxisConvention src)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xFF33A4", Offset = "0xFF33A4", VA = "0xFF33A4")]
		public static Matrix4x4 GetToDstFromSrc(AxisConvention dst, AxisConvention src)
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x200067A")]
	internal class BackgroundCollector
	{
		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AutoResetEvent m_sleeper;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Thread m_thread;

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x1438144", Offset = "0x1438144", VA = "0x1438144")]
		public void Start()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x14382A4", Offset = "0x14382A4", VA = "0x14382A4")]
		public void Collect()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x1438340", Offset = "0x1438340", VA = "0x1438340")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1438370", Offset = "0x1438370", VA = "0x1438370")]
		private void Run()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x143858C", Offset = "0x143858C", VA = "0x143858C")]
		public BackgroundCollector()
		{
		}
	}
	[Token(Token = "0x200067B")]
	public enum ColorPickerMode
	{
		[Token(Token = "0x4002AF6")]
		HS_L_Polar,
		[Token(Token = "0x4002AF7")]
		SV_H_Rect,
		[Token(Token = "0x4002AF8")]
		SL_H_Triangle,
		[Token(Token = "0x4002AF9")]
		HL_S_Polar,
		[Token(Token = "0x4002AFA")]
		HS_LogV_Polar,
		[Token(Token = "0x4002AFB")]
		NUM_MODES
	}
	[Serializable]
	[Token(Token = "0x200067C")]
	public class ColorPickerInfo
	{
		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Shader shader;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture icon;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool cylindrical;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool experimental;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool hdr;

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x1319D00", Offset = "0x1319D00", VA = "0x1319D00")]
		public ColorPickerInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200067D")]
	public struct ModeAndPickerInfo
	{
		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ColorPickerMode mode;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ColorPickerInfo info;
	}
	[Token(Token = "0x200067E")]
	public static class ColorPickerUtils
	{
		[Token(Token = "0x4002B03")]
		private const float SQRT3 = 1.7320508f;

		[Token(Token = "0x4002B04")]
		private const float kLogVMin = -3f;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float sm_LogVMax;

		[Token(Token = "0x4002B06")]
		private const float kMainLightMax = 8f;

		[Token(Token = "0x4002B07")]
		private const float kSecondaryLightMax = 1f;

		[Token(Token = "0x170006E2")]
		private static ModeAndPickerInfo[] ModeToPickerInfo
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x131A5A4", Offset = "0x131A5A4", VA = "0x131A5A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E3")]
		public static ColorPickerMode HdrMode
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x131A5FC", Offset = "0x131A5FC", VA = "0x131A5FC")]
			get
			{
				return default(ColorPickerMode);
			}
		}

		[Token(Token = "0x170006E4")]
		private static float MinHDRValue
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x131A728", Offset = "0x131A728", VA = "0x131A728")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x1317770", Offset = "0x1317770", VA = "0x1317770")]
		public static ColorPickerMode GetActiveMode(bool hdr)
		{
			return default(ColorPickerMode);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x131A604", Offset = "0x131A604", VA = "0x131A604")]
		public static int NumModes(bool hdr)
		{
			return default(int);
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x1319BD4", Offset = "0x1319BD4", VA = "0x1319BD4")]
		public static ColorPickerInfo GetInfoForMode(ColorPickerMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x131A730", Offset = "0x131A730", VA = "0x131A730")]
		private static float GetHdrCurveConstant(float logMin, float height)
		{
			return default(float);
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x131A744", Offset = "0x131A744", VA = "0x131A744")]
		public static void SetLogVRangeForMode(LightMode mode)
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x13177D8", Offset = "0x13177D8", VA = "0x13177D8")]
		public static Vector3 ColorToRawValue(ColorPickerMode mode, Color rgb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x131920C", Offset = "0x131920C", VA = "0x131920C")]
		public static bool RawValueToColor(ColorPickerMode mode, Vector3 raw, out Color color)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x131AA58", Offset = "0x131AA58", VA = "0x131AA58")]
		private static bool RawValueToHSV(ColorPickerMode mode, Vector3 raw, out float hue01, out float saturation, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x131A810", Offset = "0x131A810", VA = "0x131A810")]
		private static bool RawValueToHSLColor(ColorPickerMode mode, Vector3 raw, out HSLColor color)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1319184", Offset = "0x1319184", VA = "0x1319184")]
		public static float ApplySliderConstraint(ColorPickerMode mode, float value_z, float luminanceMin, float saturationMax)
		{
			return default(float);
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x13193A8", Offset = "0x13193A8", VA = "0x13193A8")]
		public static Vector3 ApplyPlanarConstraint(Vector3 value, ColorPickerMode mode, float luminanceMin, float saturationMax)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x131AB90", Offset = "0x131AB90", VA = "0x131AB90")]
		public static bool ModeIsValid(ColorPickerMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x131ABE4", Offset = "0x131ABE4", VA = "0x131ABE4")]
		public static void GoToNextMode(bool forward = true)
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x131ACD0", Offset = "0x131ACD0", VA = "0x131ACD0")]
		public static Color ClampColorIntensityToLdr(Color lightColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x131AD34", Offset = "0x131AD34", VA = "0x131AD34")]
		private static void MakeHueRamp(int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x131AE4C", Offset = "0x131AE4C", VA = "0x131AE4C")]
		private static void MakeLightnessRamp(HSLColor hsl, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x131AF44", Offset = "0x131AF44", VA = "0x131AF44")]
		private static void MakeSaturationRamp(HSLColor hsl, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x131B040", Offset = "0x131B040", VA = "0x131B040")]
		private static void MakeLogValueRamp(float hue01, float saturation, int width, int height, Color[] buf)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x131A440", Offset = "0x131A440", VA = "0x131A440")]
		public static void MakeRamp(ColorPickerMode mode, int width, int height, Color[] buf, [Optional] Vector3? raw)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x131B1A0", Offset = "0x131B1A0", VA = "0x131B1A0")]
		public static Color ClampLuminance(Color color, float minLuminance)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200067F")]
	public class ColorTable : MonoBehaviour
	{
		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_SecretDistance;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Color32, string> m_Colors;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Color32, string> m_SecretColors;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ColorTable m_Instance;

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x131B830", Offset = "0x131B830", VA = "0x131B830")]
		private float ColorDistance(Color32 colorA, Color32 colorB)
		{
			return default(float);
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x131B8D4", Offset = "0x131B8D4", VA = "0x131B8D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x131B924", Offset = "0x131B924", VA = "0x131B924")]
		public string NearestColorTo(Color color)
		{
			return null;
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x131BCC4", Offset = "0x131BCC4", VA = "0x131BCC4")]
		public ColorTable()
		{
		}
	}
	[Token(Token = "0x2000680")]
	public static class ComponentwiseVectors
	{
		[Token(Token = "0x2000681")]
		public struct vec3
		{
			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double x;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double y;

			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double z;

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x112587C", Offset = "0x112587C", VA = "0x112587C")]
			public static explicit operator Vector3(vec3 v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x112588C", Offset = "0x112588C", VA = "0x112588C")]
			public static vec3 operator *(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x11258A8", Offset = "0x11258A8", VA = "0x11258A8")]
			public static vec3 operator *(vec3 a, double s)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x11258B8", Offset = "0x11258B8", VA = "0x11258B8")]
			public static vec3 operator /(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x11258C8", Offset = "0x11258C8", VA = "0x11258C8")]
			public static vec3 operator +(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x11258D8", Offset = "0x11258D8", VA = "0x11258D8")]
			public static vec3 operator -(vec3 a, vec3 b)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x11258E8", Offset = "0x11258E8", VA = "0x11258E8")]
			public static vec3 abs(vec3 a)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x1125968", Offset = "0x1125968", VA = "0x1125968")]
			public static double sum(vec3 a)
			{
				return default(double);
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x1125974", Offset = "0x1125974", VA = "0x1125974")]
			public static double dot(vec3 a, vec3 b)
			{
				return default(double);
			}

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x112598C", Offset = "0x112598C", VA = "0x112598C")]
			public static vec3 normalized(vec3 a)
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x1125A38", Offset = "0x1125A38", VA = "0x1125A38")]
			public static double dist2(vec3 a, vec3 b)
			{
				return default(double);
			}

			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x112589C", Offset = "0x112589C", VA = "0x112589C")]
			public vec3(double x, double y, double z)
			{
			}

			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x1125A5C", Offset = "0x1125A5C", VA = "0x1125A5C")]
			public vec3(Vector3 v)
			{
			}

			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x1125A74", Offset = "0x1125A74", VA = "0x1125A74")]
			public vec3 sign()
			{
				return default(vec3);
			}

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x1125B14", Offset = "0x1125B14", VA = "0x1125B14")]
			public double mag2()
			{
				return default(double);
			}
		}
	}
	[Token(Token = "0x2000682")]
	public static class CoroutineUtil
	{
		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA84", Offset = "0xB2AA84")]
		private sealed class <CompleteAllCoroutines>d__0 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IReadOnlyList<IEnumerator> coroutines;

			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <numCoroutines>5__2;

			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<Stack<IEnumerator>> <coroutineStacks>5__3;

			[Token(Token = "0x170006E5")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6002B14")]
				[Address(RVA = "0x1126378", Offset = "0x1126378", VA = "0x1126378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B16")]
				[Address(RVA = "0x11263C0", Offset = "0x11263C0", VA = "0x11263C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x1125E94", Offset = "0x1125E94", VA = "0x1125E94")]
			[DebuggerHidden]
			public <CompleteAllCoroutines>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x1125EC0", Offset = "0x1125EC0", VA = "0x1125EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x1125EC4", Offset = "0x1125EC4", VA = "0x1125EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x1126380", Offset = "0x1126380", VA = "0x1126380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AA94", Offset = "0xB2AA94")]
		private sealed class <Sequence>d__1<T> : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator<T> a;

			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerator<T> b;

			[Token(Token = "0x170006E7")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6002B1A")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170006E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B17")]
			[DebuggerHidden]
			public <Sequence>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002B18")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B19")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x1598590", Offset = "0x1598590", VA = "0x1598590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44DC4", Offset = "0xB44DC4")]
		public static IEnumerator<Null> CompleteAllCoroutines(IReadOnlyList<IEnumerator> coroutines)
		{
			return null;
		}

		[Token(Token = "0x6002B10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB44E24", Offset = "0xB44E24")]
		public static IEnumerator<T> Sequence<T>(IEnumerator<T> a, IEnumerator<T> b)
		{
			return null;
		}
	}
	[Token(Token = "0x2000685")]
	public class Null
	{
		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0xFCD3D0", Offset = "0xFCD3D0", VA = "0xFCD3D0")]
		protected Null()
		{
		}
	}
	[Token(Token = "0x2000686")]
	public class Timeslice : Null
	{
		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x1173770", Offset = "0x1173770", VA = "0x1173770")]
		protected Timeslice()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class DebugVisualization : MonoBehaviour
	{
		[Token(Token = "0x2000688")]
		public enum VisType
		{
			[Token(Token = "0x4002B21")]
			Position,
			[Token(Token = "0x4002B22")]
			Direction,
			[Token(Token = "0x4002B23")]
			Plane,
			[Token(Token = "0x4002B24")]
			Text
		}

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugVisualization m_Instance;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_PositionPrefab;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_DirectionPrefab;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_PlanePrefab;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_TextPrefab;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<VisType, Stack<GameObject>> m_VisObjects;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<VisType, Stack<GameObject>> m_UnusedVisObjects;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_Reset;

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xEC4B9C", Offset = "0xEC4B9C", VA = "0xEC4B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xEC5034", Offset = "0xEC5034", VA = "0xEC5034")]
		private void ResetObjects()
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xEC5258", Offset = "0xEC5258", VA = "0xEC5258")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0xEC528C", Offset = "0xEC528C", VA = "0xEC528C")]
		private GameObject CreateObject(VisType type, Transform parent, Vector3 pos, Quaternion rot, Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xEC556C", Offset = "0xEC556C", VA = "0xEC556C")]
		public static void ShowPosition(Vector3 position, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xEC564C", Offset = "0xEC564C", VA = "0xEC564C")]
		public static void ShowDirection(Vector3 direction, Vector3 startPosition, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xEC5768", Offset = "0xEC5768", VA = "0xEC5768")]
		public static void ShowPlane(Plane plane, Vector3 closePoint, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xEC58AC", Offset = "0xEC58AC", VA = "0xEC58AC")]
		public static void ShowText(string text, Vector3 position, Quaternion rotation, Vector3 scale, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xEC59D8", Offset = "0xEC59D8", VA = "0xEC59D8")]
		public DebugVisualization()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class DisabledPropertyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002B28")]
		[Address(RVA = "0xEC8730", Offset = "0xEC8730", VA = "0xEC8730")]
		public DisabledPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x200068A")]
	public class DownloadHandlerFastFile : DownloadHandlerScript
	{
		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FileStream m_File;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_Filename;

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0xECA9DC", Offset = "0xECA9DC", VA = "0xECA9DC")]
		public DownloadHandlerFastFile(string filename, byte[] buffer)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0xECAA1C", Offset = "0xECAA1C", VA = "0xECAA1C", Slot = "10")]
		protected override void CompleteContent()
		{
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0xECAA38", Offset = "0xECAA38", VA = "0xECAA38", Slot = "7")]
		protected override bool ReceiveData(byte[] data, int dataLength)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200068B")]
	public static class EnumerableExtensions
	{
		[Serializable]
		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AAB4", Offset = "0xB2AAB4")]
		private sealed class <>c__0<T>
		{
			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__0<T> <>9;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB366B0", Offset = "0xB366B0")]
			public static Func<T, int, (T, int)> <>9__0_0;

			[Token(Token = "0x6002B30")]
			public <>c__0()
			{
			}

			[Token(Token = "0x6002B31")]
			internal (T, int) <WithIndex>b__0_0(T item, int index)
			{
				return default((T, int));
			}
		}

		[Token(Token = "0x6002B2C")]
		public static IEnumerable<(T, int)> WithIndex<T>(this IEnumerable<T> this_)
		{
			return null;
		}

		[Token(Token = "0x6002B2D")]
		public static (List<T>, List<T>) Partition<T>(this IEnumerable<T> this_, Func<T, bool> predicate)
		{
			return default((List<T>, List<T>));
		}

		[Token(Token = "0x6002B2E")]
		public static int IndexOf<T>(this IEnumerable<T> this_, T item) where T : IComparable
		{
			return default(int);
		}
	}
	[Token(Token = "0x200068D")]
	public static class FileUtils
	{
		[StructLayout(0, CharSet = CharSet.Auto)]
		[Token(Token = "0x200068E")]
		private struct ShellFileOpStruct
		{
			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr WindowHandle;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int FunctionCode;

			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string From;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string To;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Flags;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool Aborted;

			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IntPtr NameMappings;

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string ProgressBarTitle;
		}

		[Serializable]
		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AAC4", Offset = "0xB2AAC4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<byte, char> <>9__14_0;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<char, bool> <>9__14_1;

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x1155100", Offset = "0x1155100", VA = "0x1155100")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x1155108", Offset = "0x1155108", VA = "0x1155108")]
			internal char <SanitizeFilename>b__14_0(byte x)
			{
				return default(char);
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x1155198", Offset = "0x1155198", VA = "0x1155198")]
			internal bool <SanitizeFilename>b__14_1(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002B29")]
		public const ulong MIN_DISK_SPACE_MB = 500uL;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char[] m_SanitizeMap;

		[Token(Token = "0x170006E9")]
		private static char[] SanitizeMap
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x101728C", Offset = "0x101728C", VA = "0x101728C")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x101647C", Offset = "0x101647C", VA = "0x101647C")]
		private static extern bool GetDiskFreeSpaceEx(string lpDirectoryName, out ulong lpFreeBytesAvailable, out ulong lpTotalNumberOfBytes, out ulong lpTotalNumberOfFreeBytes);

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x101653C", Offset = "0x101653C", VA = "0x101653C")]
		public static string GenerateNonexistentFilename(string directory, string basename, string extension)
		{
			return null;
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x10166CC", Offset = "0x10166CC", VA = "0x10166CC")]
		public static bool CheckDiskSpaceWithError(string path, [Optional] string error)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x1016BA8", Offset = "0x1016BA8", VA = "0x1016BA8")]
		public static bool InitializeDirectoryWithUserError(string directoryName, [Optional] string failureMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x1016CE4", Offset = "0x1016CE4", VA = "0x1016CE4")]
		public static bool InitializeDirectory(string directoryName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x1016DB0", Offset = "0x1016DB0", VA = "0x1016DB0")]
		public static bool WriteBytesIgnoreExceptions(byte[] data, string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x1016F88", Offset = "0x1016F88", VA = "0x1016F88")]
		public static void WriteTextureFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x101709C", Offset = "0x101709C", VA = "0x101709C")]
		public static void WriteTextFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x1017194", Offset = "0x1017194", VA = "0x1017194")]
		public static void WriteBytesFromResources(string sourcePath, string targetPath)
		{
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x10167C8", Offset = "0x10167C8", VA = "0x10167C8")]
		public static bool HasFreeSpace(string filePath, ulong spaceRequiredMb = 500uL)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x1017518", Offset = "0x1017518", VA = "0x1017518")]
		public static string SanitizeFilename(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x100A558", Offset = "0x100A558", VA = "0x100A558")]
		public static string SanitizeFilenameAndPreserveUniqueness(string filename)
		{
			return null;
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x10177B0", Offset = "0x10177B0", VA = "0x10177B0")]
		public static string GetHash(string text)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x1017A44", Offset = "0x1017A44", VA = "0x1017A44")]
		private static extern int SHFileOperation(ref ShellFileOpStruct operation);

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x1017B28", Offset = "0x1017B28", VA = "0x1017B28")]
		public static bool DeleteWithRecycleBin(string path, bool forceDelete = false)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000690")]
	public static class GuidUtils
	{
		[Serializable]
		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AAD4", Offset = "0xB2AAD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<byte, string> <>9__9_0;

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xFF6DB4", Offset = "0xFF6DB4", VA = "0xFF6DB4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0xFF6DBC", Offset = "0xFF6DBC", VA = "0xFF6DBC")]
			internal string <SerializeToUnity>b__9_0(byte b)
			{
				return null;
			}
		}

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid kNamespaceDns;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Guid kNamespaceUrl;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Guid kNamespaceOid;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Guid kNamespaceX500;

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xFAD5F8", Offset = "0xFAD5F8", VA = "0xFAD5F8")]
		private static Guid MakeNamespaceGuid(Guid ns, string name, int version)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xFAD804", Offset = "0xFAD804", VA = "0xFAD804")]
		public static void ByteswapGuid(byte[] guid)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xFAD898", Offset = "0xFAD898", VA = "0xFAD898")]
		public static Guid Uuid3(Guid namespace_, string name)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xFAD914", Offset = "0xFAD914", VA = "0xFAD914")]
		public static Guid Uuid5(Guid namespace_, string name)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xFAD990", Offset = "0xFAD990", VA = "0xFAD990")]
		public static Guid DeserializeFromUnity(string txt)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xFADAC0", Offset = "0xFADAC0", VA = "0xFADAC0")]
		public static string SerializeToUnity(Guid guid)
		{
			return null;
		}
	}
	[Token(Token = "0x2000692")]
	public static class HierarchyUtils
	{
		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x13C3520", Offset = "0x13C3520", VA = "0x13C3520")]
		public static void RecursivelySetLayer(Transform obj, int layer)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x13C3608", Offset = "0x13C3608", VA = "0x13C3608")]
		public static void RecursivelyDisableShadows(Transform obj)
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x13C3738", Offset = "0x13C3738", VA = "0x13C3738")]
		public static void RecursivelySetMaterial(Transform obj, Material mat)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x13C3868", Offset = "0x13C3868", VA = "0x13C3868")]
		public static void RecursivelySetMaterialBatchID(Transform obj, float batchId)
		{
		}
	}
	[Token(Token = "0x2000693")]
	public class ImageLoadError : Exception
	{
		[Token(Token = "0x6002B55")]
		[Address(RVA = "0x13CD108", Offset = "0x13CD108", VA = "0x13CD108")]
		public ImageLoadError(string message)
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x13CD17C", Offset = "0x13CD17C", VA = "0x13CD17C")]
		public ImageLoadError(string fmt, params object[] args)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x13CD20C", Offset = "0x13CD20C", VA = "0x13CD20C")]
		public ImageLoadError(Exception inner, string fmt, params object[] args)
		{
		}
	}
	[Token(Token = "0x2000694")]
	public static class ImageUtils
	{
		[StructLayout(3)]
		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AAE4", Offset = "0xB2AAE4")]
		private struct <DownloadTextureAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Texture2D> <>t__builder;

			[Token(Token = "0x4002B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uri;

			[Token(Token = "0x4002B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4002B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4002B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Future<RawImage>.Awaiter <>u__2;

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xFF7C58", Offset = "0xFF7C58", VA = "0xFF7C58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xFF8AB4", Offset = "0xFF8AB4", VA = "0xFF8AB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002B3C")]
		private const byte kJpegMarkerSOF0 = 192;

		[Token(Token = "0x4002B3D")]
		private const byte kJpegMarkerSOF2 = 194;

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x13CD2AC", Offset = "0x13CD2AC", VA = "0x13CD2AC")]
		public static RawImage FromImageData(byte[] data, string filename, int abortDimension = -1)
		{
			return null;
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x13CD354", Offset = "0x13CD354", VA = "0x13CD354")]
		public static void ValidateDimensions(byte[] data, int maxDimension)
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x13CD644", Offset = "0x13CD644", VA = "0x13CD644")]
		public static bool IsJpeg(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0x13CDE34", Offset = "0x13CDE34", VA = "0x13CDE34")]
		public static bool GetJpegWidthAndHeight(Stream stream, out int width, out int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x13CD690", Offset = "0x13CD690", VA = "0x13CD690")]
		public static RawImage FromJpeg(byte[] jpegData, string filename)
		{
			return null;
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x13CDCB8", Offset = "0x13CDCB8", VA = "0x13CDCB8")]
		public static bool IsPng(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x13CE038", Offset = "0x13CE038", VA = "0x13CE038")]
		public static void GetPngWidthAndHeight(Stream stream, out int width, out int height)
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x13CDD40", Offset = "0x13CDD40", VA = "0x13CDD40")]
		public static RawImage FromPng(byte[] pngData, string filename)
		{
			return null;
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x13CE1B0", Offset = "0x13CE1B0", VA = "0x13CE1B0")]
		private static RawImage _FromPng(byte[] pngData, string filename)
		{
			return null;
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x13CECC8", Offset = "0x13CECC8", VA = "0x13CECC8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB44F54", Offset = "0xB44F54")]
		public static Task<Texture2D> DownloadTextureAsync(string uri)
		{
			return null;
		}
	}
	[Token(Token = "0x2000696")]
	public struct ConvertHelper<TFrom, TTo> where TFrom : class where TTo : class
	{
		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long before;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TFrom input;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TTo output;

		[Token(Token = "0x6002B64")]
		public static TTo Convert(TFrom thing)
		{
			return null;
		}
	}
	[Token(Token = "0x2000697")]
	public static class ListExtensions
	{
		[Token(Token = "0x2000698")]
		private class FieldLookup
		{
			[Token(Token = "0x4002B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string sm_name;

			[Token(Token = "0x4002B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<Type, FieldInfo> sm_cache;

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xFFFA9C", Offset = "0xFFFA9C", VA = "0xFFFA9C")]
			public FieldLookup(string name)
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xFFFB28", Offset = "0xFFFB28", VA = "0xFFFB28")]
			public FieldInfo Get(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x2000699")]
		public class PublicList<T>
		{
			[Token(Token = "0x4002B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] _items;

			[Token(Token = "0x4002B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _size;

			[Token(Token = "0x170006EA")]
			public T[] BackingArray
			{
				[Token(Token = "0x6002B6D")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002B6E")]
				set
				{
				}
			}

			[Token(Token = "0x170006EB")]
			public int Capacity
			{
				[Token(Token = "0x6002B6F")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170006EC")]
			public int Count
			{
				[Token(Token = "0x6002B70")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002B71")]
				set
				{
				}
			}

			[Token(Token = "0x6002B72")]
			public PublicList()
			{
			}
		}

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FieldLookup sm_items;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FieldLookup sm_size;

		[Token(Token = "0x6002B65")]
		public static T[] GetBackingArray<T>(this List<T> list)
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		public static void SetBackingArray<T>(this List<T> list, T[] value)
		{
		}

		[Token(Token = "0x6002B67")]
		public static void SetCount<T>(this List<T> list, int newCount)
		{
		}

		[Token(Token = "0x6002B68")]
		public static void AddRange<T>(this List<T> list, List<T> source, int start, int length)
		{
		}

		[Token(Token = "0x6002B69")]
		public static void AddRange<T>(this List<T> list, T[] source, int start, int length)
		{
		}
	}
	[Token(Token = "0x200069A")]
	public static class MathEllipsoidPld
	{
		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x10DD054", Offset = "0x10DD054", VA = "0x10DD054")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc, Vector3 point, int maxIters = 10, float distanceThreshold = 5E-05f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x10DD2B0", Offset = "0x10DD2B0", VA = "0x10DD2B0")]
		private static Vector3 CSquare(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x10DD46C", Offset = "0x10DD46C", VA = "0x10DD46C")]
		private static Vector3 CCube(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x10DD2A0", Offset = "0x10DD2A0", VA = "0x10DD2A0")]
		private static Vector3 CMul(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x10DD290", Offset = "0x10DD290", VA = "0x10DD290")]
		private static Vector3 CDiv(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x10DD488", Offset = "0x10DD488", VA = "0x10DD488")]
		private static float ScalarSum(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x10DD24C", Offset = "0x10DD24C", VA = "0x10DD24C")]
		private static bool IsFullyInside(Vector3 abc, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x10DD3F4", Offset = "0x10DD3F4", VA = "0x10DD3F4")]
		private static Vector3 ClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x10DD2C0", Offset = "0x10DD2C0", VA = "0x10DD2C0")]
		private static float RadiusSqOfClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(float);
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x10DD358", Offset = "0x10DD358", VA = "0x10DD358")]
		private static float ddkRadiusSqOfClosestPointEllipsoid(Vector3 abc2, Vector3 point, float k)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200069B")]
	public static class MathUtils
	{
		[Token(Token = "0x200069C")]
		public static class TiltBrushCpp
		{
		}

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AB04", Offset = "0xB2AB04")]
		private sealed class <LinearResampleCurve>d__25 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] samples;

			[Token(Token = "0x4002B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] <>3__samples;

			[Token(Token = "0x4002B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int newSamples;

			[Token(Token = "0x4002B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__newSamples;

			[Token(Token = "0x4002B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private double <oldFromNew>5__2;

			[Token(Token = "0x4002B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <idxNew>5__3;

			[Token(Token = "0x170006ED")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002B99")]
				[Address(RVA = "0x1000A10", Offset = "0x1000A10", VA = "0x1000A10", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9B")]
				[Address(RVA = "0x1000A58", Offset = "0x1000A58", VA = "0x1000A58", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x10007E8", Offset = "0x10007E8", VA = "0x10007E8")]
			[DebuggerHidden]
			public <LinearResampleCurve>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x1000820", Offset = "0x1000820", VA = "0x1000820", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B98")]
			[Address(RVA = "0x1000824", Offset = "0x1000824", VA = "0x1000824", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x1000A18", Offset = "0x1000A18", VA = "0x1000A18", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x1000AB8", Offset = "0x1000AB8", VA = "0x1000AB8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x1000B68", Offset = "0x1000B68", VA = "0x1000B68", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x10DD494", Offset = "0x10DD494", VA = "0x10DD494")]
		public static float PeriodicDifference(float lhs, float rhs, float period)
		{
			return default(float);
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x10DD4DC", Offset = "0x10DD4DC", VA = "0x10DD4DC")]
		public static void DecomposeMatrix4x4(Matrix4x4 m, out Vector3 translation, out Quaternion rotation, out float uniformScale)
		{
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x10DD6F8", Offset = "0x10DD6F8", VA = "0x10DD6F8")]
		public static float GetAngleBetween(Vector3 v1, Vector3 v2, Vector3 nAxis, out float stability)
		{
			return default(float);
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x10DD848", Offset = "0x10DD848", VA = "0x10DD848")]
		public static Quaternion ConstrainRotationDelta(Quaternion q0, Quaternion q1, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x10DD99C", Offset = "0x10DD99C", VA = "0x10DD99C")]
		public static Vector3 ProjectPosOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x10DD9E0", Offset = "0x10DD9E0", VA = "0x10DD9E0")]
		public static TrTransform TwoPointObjectTransformation(TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, float deltaScaleMin = -1f, float deltaScaleMax = -1f, [Optional] Vector3 rotationAxisConstraint, bool bUseLeftAsPivot = false)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x10DDE20", Offset = "0x10DDE20", VA = "0x10DDE20")]
		public static TrTransform TwoPointObjectTransformationNoScale(TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, float constraintPositionT)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x10DE0BC", Offset = "0x10DE0BC", VA = "0x10DE0BC")]
		private static Vector3 ScalePosition(Vector3 position, float amount, Vector3 scaleCenter, Vector3 axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x10DE124", Offset = "0x10DE124", VA = "0x10DE124")]
		public static TrTransform TwoPointObjectTransformationNonUniformScale(Vector3 vScaleAxis0, TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, out float deltaScale, float finalScaleMin = -1f, float deltaScaleMin = -1f, float deltaScaleMax = -1f)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x10DE438", Offset = "0x10DE438", VA = "0x10DE438")]
		public static TrTransform TwoPointObjectTransformationAxisResize(Vector3 vScaleAxis0, float sizeAlongAxis, TrTransform gripL0, TrTransform gripR0, TrTransform gripL1, TrTransform gripR1, TrTransform obj0, out float deltaScale, float deltaScaleMin = 0f, float deltaScaleMax = float.PositiveInfinity)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x10DE81C", Offset = "0x10DE81C", VA = "0x10DE81C")]
		public static Matrix4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float dist, float near, float far)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x10DEA30", Offset = "0x10DEA30", VA = "0x10DEA30")]
		public static bool SolveQuadratic(float a, float b, float c, out float r0, out float r1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x10DEAFC", Offset = "0x10DEAFC", VA = "0x10DEAFC")]
		public static bool RaySphereIntersection(Vector3 rayOrigin, Vector3 rayDirection, Vector3 sphereCenter, float sphereRadius, out float t0, out float t1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x10DEB64", Offset = "0x10DEB64", VA = "0x10DEB64")]
		public static void TransformVector3AsPoint(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x10DEC04", Offset = "0x10DEC04", VA = "0x10DEC04")]
		public static void TransformVector3AsVector(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x10DECA4", Offset = "0x10DECA4", VA = "0x10DECA4")]
		public static void TransformVector3AsZDistance(float scale, int iVert, int iVertEnd, Vector3[] v3)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x10DED08", Offset = "0x10DED08", VA = "0x10DED08")]
		public static void TransformVector4AsPoint(Matrix4x4 mat, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x10DEDCC", Offset = "0x10DEDCC", VA = "0x10DEDCC")]
		public static void TransformVector4AsVector(Matrix4x4 mat, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x10DEE90", Offset = "0x10DEE90", VA = "0x10DEE90")]
		public static void TransformVector4AsZDistance(float scale, int iVert, int iVertEnd, Vector4[] v4)
		{
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x10DEF3C", Offset = "0x10DEF3C", VA = "0x10DEF3C")]
		public static void GetBoundsFor(Matrix4x4 mat, int iVert, int iVertEnd, Vector3[] v3, out Vector3 center, out Vector3 size)
		{
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x10DF164", Offset = "0x10DF164", VA = "0x10DF164")]
		public static float MengerCurvature(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x10DF28C", Offset = "0x10DF28C", VA = "0x10DF28C")]
		public static Quaternion ComputeMinimalRotationFrame(Vector3 tangent, Quaternion? previousFrame, Quaternion bootstrapOrientation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x10DF47C", Offset = "0x10DF47C", VA = "0x10DF47C")]
		public static int RandomInt()
		{
			return default(int);
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x10DF4BC", Offset = "0x10DF4BC", VA = "0x10DF4BC")]
		public static int Min(long a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x10DF538", Offset = "0x10DF538", VA = "0x10DF538")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45014", Offset = "0xB45014")]
		public static IEnumerable<float> LinearResampleCurve(float[] samples, int newSamples)
		{
			return null;
		}
	}
	[Token(Token = "0x200069E")]
	public static class PlaneExtensions
	{
		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TrTransform kReflectX;

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x1027CD4", Offset = "0x1027CD4", VA = "0x1027CD4")]
		public static Vector3 ReflectPoint(this Plane plane, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x1027D54", Offset = "0x1027D54", VA = "0x1027D54")]
		public static Vector3 ReflectVector(this Plane plane, Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x1027DD8", Offset = "0x1027DD8", VA = "0x1027DD8")]
		public static TrTransform ReflectPoseKeepHandedness(this Plane plane, TrTransform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x1027F1C", Offset = "0x1027F1C", VA = "0x1027F1C")]
		public static TrTransform ToTrTransform(this Plane plane)
		{
			return default(TrTransform);
		}
	}
	[Token(Token = "0x200069F")]
	public interface IPoolable
	{
		[Token(Token = "0x6002BA3")]
		void OnPoolPut();

		[Token(Token = "0x6002BA4")]
		void OnPoolGet();
	}
	[Token(Token = "0x20006A0")]
	public class Pool<T> where T : class, IPoolable, new()
	{
		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<T> m_free;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_maxFree;

		[Token(Token = "0x6002BA5")]
		public Pool(int maxFree = -1)
		{
		}

		[Token(Token = "0x6002BA6")]
		public T Get()
		{
			return null;
		}

		[Token(Token = "0x6002BA7")]
		public void PutAndClear(ref T instance)
		{
		}

		[Token(Token = "0x6002BA8")]
		public void Put(T instance)
		{
		}
	}
	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB2AB24", Offset = "0xB2AB24")]
	public class PowerRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float max;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float power;

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x11F12A0", Offset = "0x11F12A0", VA = "0x11F12A0")]
		public PowerRangeAttribute(float min = 0.001f, float max = 1000f, float power = 2f)
		{
		}
	}
	[Token(Token = "0x20006A2")]
	public static class QuaternionExtensions
	{
		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x11FF968", Offset = "0x11FF968", VA = "0x11FF968")]
		public static Quaternion AngleAxisRad(float angle, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x11FF984", Offset = "0x11FF984", VA = "0x11FF984")]
		public static void ToAngleAxisRad(this Quaternion q, out float angle, out Vector3 axis)
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x11FF9B4", Offset = "0x11FF9B4", VA = "0x11FF9B4")]
		public static Quaternion Log(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x11FFB78", Offset = "0x11FFB78", VA = "0x11FFB78")]
		public static Quaternion Exp(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x11FFC80", Offset = "0x11FFC80", VA = "0x11FFC80")]
		public static Quaternion Negated(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x11FFCC0", Offset = "0x11FFCC0", VA = "0x11FFCC0")]
		public static Vector3 Im(this Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x11FFCC4", Offset = "0x11FFCC4", VA = "0x11FFCC4")]
		public static float Re(this Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x11FFCCC", Offset = "0x11FFCCC", VA = "0x11FFCCC")]
		public static bool IsInitialized(this Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x11FFCFC", Offset = "0x11FFCFC", VA = "0x11FFCFC")]
		public static Quaternion normalized(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x11FFD54", Offset = "0x11FFD54", VA = "0x11FFD54")]
		public static float magnitude(this Quaternion q)
		{
			return default(float);
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x11FFD88", Offset = "0x11FFD88", VA = "0x11FFD88")]
		public static Quaternion TrueInverse(this Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x11FFE0C", Offset = "0x11FFE0C", VA = "0x11FFE0C")]
		public static bool TrueEquals(this Quaternion q, Quaternion rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x11FFE3C", Offset = "0x11FFE3C", VA = "0x11FFE3C")]
		public static bool TrueNotEquals(this Quaternion q, Quaternion rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006A3")]
	public class ReferenceComparer<T> : IEqualityComparer<T> where T : class
	{
		[Token(Token = "0x6002BB7")]
		public bool Equals(T x, T y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB8")]
		public int GetHashCode(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002BB9")]
		public ReferenceComparer()
		{
		}
	}
	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AB48", Offset = "0xB2AB48")]
	public class RingBuffer<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x20006A5")]
		private class Enumerator : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private RingBuffer<T> m_owner;

			[Token(Token = "0x4002B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_index;

			[Token(Token = "0x4002B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_start;

			[Token(Token = "0x4002B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_end;

			[Token(Token = "0x170006F5")]
			public int Length
			{
				[Token(Token = "0x6002BD4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170006F6")]
			public T Current
			{
				[Token(Token = "0x6002BD5")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170006F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD1")]
			private Enumerator()
			{
			}

			[Token(Token = "0x6002BD2")]
			public Enumerator(RingBuffer<T> owner)
			{
			}

			[Token(Token = "0x6002BD3")]
			public Enumerator(RingBuffer<T> owner, int start, int length)
			{
			}

			[Token(Token = "0x6002BD7")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002BD9")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] m_buffer;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_head;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_next;

		[Token(Token = "0x170006EF")]
		public bool IsEmpty
		{
			[Token(Token = "0x6002BBB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006F0")]
		public bool IsFull
		{
			[Token(Token = "0x6002BBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006F1")]
		public int Capacity
		{
			[Token(Token = "0x6002BBD")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006F2")]
		public int Count
		{
			[Token(Token = "0x6002BBE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006F3")]
		private int CapacityInternal
		{
			[Token(Token = "0x6002BBF")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006F4")]
		public T Item
		{
			[Token(Token = "0x6002BC7")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BC8")]
			set
			{
			}
		}

		[Token(Token = "0x6002BBA")]
		public RingBuffer(int capacity)
		{
		}

		[Token(Token = "0x6002BC0")]
		public bool Enqueue(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC1")]
		public bool Enqueue(T item, bool overwriteIfFull)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC2")]
		public void Dequeue(int n)
		{
		}

		[Token(Token = "0x6002BC3")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6002BC4")]
		public int Dequeue(ref T[] rangeOut)
		{
			return default(int);
		}

		[Token(Token = "0x6002BC5")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002BC6")]
		public void CopyFrom(RingBuffer<T> src)
		{
		}

		[Token(Token = "0x6002BC9")]
		public void GetRange(ref T[] ret)
		{
		}

		[Token(Token = "0x6002BCA")]
		public void GetRange(ref T[] ret, int ringIndex, int count)
		{
		}

		[Token(Token = "0x6002BCB")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002BCC")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002BCD")]
		public IEnumerator<T> GetEnumerator(int start, int length)
		{
			return null;
		}

		[Token(Token = "0x6002BCE")]
		private int ComputeCheckedIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002BCF")]
		private int ComputeIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002BD0")]
		private int ComputeLength(int startIndex, int endIndex)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20006A6")]
	public struct SerializableGuid : IFormattable
	{
		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_storage;

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xE7C5C8", Offset = "0xE7C5C8", VA = "0xE7C5C8")]
		public static implicit operator SerializableGuid(Guid rhs)
		{
			return default(SerializableGuid);
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xE7C624", Offset = "0xE7C624", VA = "0xE7C624")]
		public static implicit operator Guid(SerializableGuid rhs)
		{
			return default(Guid);
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xE7C768", Offset = "0xE7C768", VA = "0xE7C768", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xE7C7D4", Offset = "0xE7C7D4", VA = "0xE7C7D4", Slot = "4")]
		public string ToString(string format, [Optional] IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20006A7")]
	public class SerializedPropertyReferenceBool : SerializedPropertyReference<bool>
	{
		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xE7C814", Offset = "0xE7C814", VA = "0xE7C814")]
		public SerializedPropertyReferenceBool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A8")]
	public class SerializedPropertyReferenceInt : SerializedPropertyReference<int>
	{
		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xE7C8AC", Offset = "0xE7C8AC", VA = "0xE7C8AC")]
		public SerializedPropertyReferenceInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A9")]
	public class SerializedPropertyReferenceFloat : SerializedPropertyReference<float>
	{
		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xE7C860", Offset = "0xE7C860", VA = "0xE7C860")]
		public SerializedPropertyReferenceFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AA")]
	public class SerializedPropertyReferenceString : SerializedPropertyReference<string>
	{
		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xE7C8F8", Offset = "0xE7C8F8", VA = "0xE7C8F8")]
		public SerializedPropertyReferenceString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AB")]
	public class SerializedPropertyReference<T> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UnityEngine.Object m_Target;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_PropertyName;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PropertyInfo m_Property;

		[Token(Token = "0x170006F8")]
		public bool HasValue
		{
			[Token(Token = "0x6002BE2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006F9")]
		public T Value
		{
			[Token(Token = "0x6002BE3")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6002BE4")]
			set
			{
			}
		}

		[Token(Token = "0x6002BE5")]
		private void Resolve()
		{
		}

		[Token(Token = "0x6002BE6")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002BE7")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002BE8")]
		public SerializedPropertyReference()
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public class SortedLinkedList<T>
	{
		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> m_list;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<T, T, bool> m_lessThan;

		[Token(Token = "0x170006FA")]
		public int Count
		{
			[Token(Token = "0x6002BEA")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006FB")]
		public LinkedListNode<T> First
		{
			[Token(Token = "0x6002BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE9")]
		public SortedLinkedList(Func<T, T, bool> lessThan, IEnumerable<T> orderedInitialValues)
		{
		}

		[Token(Token = "0x6002BEB")]
		public LinkedList<T>.Enumerator GetEnumerator()
		{
			return default(LinkedList<T>.Enumerator);
		}

		[Token(Token = "0x6002BED")]
		public LinkedListNode<T> PopFirst()
		{
			return null;
		}

		[Token(Token = "0x6002BEE")]
		public void Insert(LinkedListNode<T> newNode)
		{
		}
	}
	[Token(Token = "0x20006AD")]
	public struct StatelessRng
	{
		[Token(Token = "0x4002B69")]
		private const float kTwoToNegative24 = 5.9604645E-08f;

		[Token(Token = "0x4002B6A")]
		private const float kTwoToNegative32 = 2.3283064E-10f;

		[Token(Token = "0x4002B6B")]
		public const float kLargestFloatLessThanOne = (float)Math.PI * 113f / 355f;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int m_seed;

		[Token(Token = "0x170006FC")]
		public int Seed
		{
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0x11B10EC", Offset = "0x11B10EC", VA = "0x11B10EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x11B1098", Offset = "0x11B1098", VA = "0x11B1098")]
		public static void BeginSaltReuseCheck()
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x11B109C", Offset = "0x11B109C", VA = "0x11B109C")]
		public static void EndSaltReuseCheck()
		{
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x11B10A0", Offset = "0x11B10A0", VA = "0x11B10A0")]
		private static uint lowbias32(uint x)
		{
			return default(uint);
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x11B10C8", Offset = "0x11B10C8", VA = "0x11B10C8")]
		public static float UInt32ToFloat01(uint a)
		{
			return default(float);
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x11B10F4", Offset = "0x11B10F4", VA = "0x11B10F4")]
		public StatelessRng(int seed)
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x11B10FC", Offset = "0x11B10FC", VA = "0x11B10FC")]
		public float In01(int salt)
		{
			return default(float);
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0x11ADB14", Offset = "0x11ADB14", VA = "0x11ADB14")]
		public float InRange(int salt, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x11ADC30", Offset = "0x11ADC30", VA = "0x11ADC30")]
		public int InIntRange(int salt, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x11B114C", Offset = "0x11B114C", VA = "0x11B114C")]
		public Vector2 OnUnitCircle(int salt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x11B11E4", Offset = "0x11B11E4", VA = "0x11B11E4")]
		public Vector2 InUnitCircle(int salt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x11B1288", Offset = "0x11B1288", VA = "0x11B1288")]
		public Vector3 OnUnitSphere(int salt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0x11ADB8C", Offset = "0x11ADB8C", VA = "0x11ADB8C")]
		public Vector3 InUnitSphere(int salt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0x11B13B4", Offset = "0x11B13B4", VA = "0x11B13B4")]
		public Quaternion Rotation(int salt)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20006AE")]
	public static class TbTaskExtensions
	{
		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AB90", Offset = "0xB2AB90")]
		private sealed class <AsIeNull>d__0 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task task;

			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken? optToken;

			[Token(Token = "0x170006FD")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6002C0B")]
				[Address(RVA = "0xF232A0", Offset = "0xF232A0", VA = "0xF232A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0D")]
				[Address(RVA = "0xF232E8", Offset = "0xF232E8", VA = "0xF232E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xF22EC0", Offset = "0xF22EC0", VA = "0xF22EC0")]
			[DebuggerHidden]
			public <AsIeNull>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xF22EEC", Offset = "0xF22EEC", VA = "0xF22EEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xF2304C", Offset = "0xF2304C", VA = "0xF2304C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xF22F08", Offset = "0xF22F08", VA = "0xF22F08")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xF232A8", Offset = "0xF232A8", VA = "0xF232A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABA0", Offset = "0xB2ABA0")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xF22A04", Offset = "0xF22A04", VA = "0xF22A04")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xF22A0C", Offset = "0xF22A0C", VA = "0xF22A0C")]
			internal void <RunOnUnityScheduler>b__0(object _)
			{
			}
		}

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABB0", Offset = "0xB2ABB0")]
		private sealed class <>c__DisplayClass2_0<T>
		{
			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x6002C10")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002C11")]
			internal void <RunOnUnityScheduler>b__0(object obj)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABC0", Offset = "0xB2ABC0")]
		private struct <AsAsyncVoid>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task task;

			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xF22AFC", Offset = "0xF22AFC", VA = "0xF22AFC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xF22C70", Offset = "0xF22C70", VA = "0xF22C70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABD0", Offset = "0xB2ABD0")]
		private struct <AsAsyncVoid>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task task;

			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action failure;

			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action success;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xF22C7C", Offset = "0xF22C7C", VA = "0xF22C7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xF22EB4", Offset = "0xF22EB4", VA = "0xF22EB4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABE0", Offset = "0xB2ABE0")]
		private struct <AsAsyncVoid>d__7<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<T> task;

			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action failure;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> success;

			[Token(Token = "0x4002B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x6002C16")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C17")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ABF0", Offset = "0xB2ABF0")]
		private sealed class <CompleteAfterIsDone>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DownloadHandler dh;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter awaiter;

			[Token(Token = "0x170006FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C1B")]
				[Address(RVA = "0xF23390", Offset = "0xF23390", VA = "0xF23390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000700")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1D")]
				[Address(RVA = "0xF233D8", Offset = "0xF233D8", VA = "0xF233D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xF232F0", Offset = "0xF232F0", VA = "0xF232F0")]
			[DebuggerHidden]
			public <CompleteAfterIsDone>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xF2331C", Offset = "0xF2331C", VA = "0xF2331C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xF23320", Offset = "0xF23320", VA = "0xF23320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xF23398", Offset = "0xF23398", VA = "0xF23398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AC00", Offset = "0xB2AC00")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter awaiter;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DownloadHandler dh;

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xF22A28", Offset = "0xF22A28", VA = "0xF22A28")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xF22A30", Offset = "0xF22A30", VA = "0xF22A30")]
			internal void <GetAwaiter>b__0()
			{
			}
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x11BBF98", Offset = "0x11BBF98", VA = "0x11BBF98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB451E4", Offset = "0xB451E4")]
		public static IEnumerator<Null> AsIeNull(this Task task, [Optional] CancellationToken? optToken)
		{
			return null;
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0x11BC018", Offset = "0x11BC018", VA = "0x11BC018")]
		private static void RunOnUnityScheduler([CanBeNull] Action action)
		{
		}

		[Token(Token = "0x6002BFF")]
		private static void RunOnUnityScheduler<T>([CanBeNull] Action<T> action, T state)
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x11BC158", Offset = "0x11BC158", VA = "0x11BC158")]
		private static CancellationTokenSource UglyGetCancellationTokenSource(this CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0x11BC274", Offset = "0x11BC274", VA = "0x11BC274")]
		private static CancellationToken UglyGetCancellationToken(this Task task)
		{
			return default(CancellationToken);
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0x11BC2DC", Offset = "0x11BC2DC", VA = "0x11BC2DC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB45274", Offset = "0xB45274")]
		public static void AsAsyncVoid(this Task task)
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x11BC3A0", Offset = "0x11BC3A0", VA = "0x11BC3A0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB452E4", Offset = "0xB452E4")]
		public static void AsAsyncVoid(this Task task, [CanBeNull] Action success, [CanBeNull] Action failure)
		{
		}

		[Token(Token = "0x6002C04")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB45354", Offset = "0xB45354")]
		public static void AsAsyncVoid<T>(this Task<T> task, [CanBeNull] Action<T> success, [CanBeNull] Action failure)
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0x11BC474", Offset = "0x11BC474", VA = "0x11BC474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB453C4", Offset = "0xB453C4")]
		private static IEnumerator CompleteAfterIsDone(IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter awaiter, DownloadHandler dh)
		{
			return null;
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x11BC4EC", Offset = "0x11BC4EC", VA = "0x11BC4EC")]
		public static IEnumeratorAwaitExtensions.SimpleCoroutineAwaiter GetAwaiter(this DownloadHandler dh)
		{
			return null;
		}
	}
	[Token(Token = "0x20006B7")]
	internal static class TextUtils
	{
		[Token(Token = "0x6002C20")]
		[Address(RVA = "0x1166E98", Offset = "0x1166E98", VA = "0x1166E98")]
		private static bool IsRfc5987AttrChar(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x1166F00", Offset = "0x1166F00", VA = "0x1166F00")]
		public static string Rfc5987Encode(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20006B8")]
	public class RawImage
	{
		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32[] ColorData;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ColorWidth;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ColorHeight;

		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ColorAspect;

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x11FFF34", Offset = "0x11FFF34", VA = "0x11FFF34")]
		public RawImage()
		{
		}
	}
	[Token(Token = "0x20006B9")]
	internal class ThreadedImageReader : Future<RawImage>
	{
		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AC10", Offset = "0xB2AC10")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string file;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int maxDimension;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int abortDimension;

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xF239C0", Offset = "0xF239C0", VA = "0xF239C0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xF239C8", Offset = "0xF239C8", VA = "0xF239C8")]
			internal RawImage <.ctor>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AC20", Offset = "0xB2AC20")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] rawData;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string identifier;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxDimension;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int abortDimension;

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xF239DC", Offset = "0xF239DC", VA = "0xF239DC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xF239E4", Offset = "0xF239E4", VA = "0xF239E4")]
			internal RawImage <.ctor>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x17000701")]
		public bool Finished
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x1169118", Offset = "0x1169118", VA = "0x1169118")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000702")]
		public RawImage Result
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x116912C", Offset = "0x116912C", VA = "0x116912C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0x11691DC", Offset = "0x11691DC", VA = "0x11691DC")]
		public ThreadedImageReader(string file, int maxDimension = -1, int abortDimension = -1)
		{
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0x11692E0", Offset = "0x11692E0", VA = "0x11692E0")]
		public ThreadedImageReader(byte[] rawData, string identifier = "", int maxDimension = -1, int abortDimension = -1)
		{
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x11693E8", Offset = "0x11693E8", VA = "0x11693E8")]
		private static RawImage ThreadProc(string filename, int maxDimension = -1, int abortDimension = -1)
		{
			return null;
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x1169580", Offset = "0x1169580", VA = "0x1169580")]
		private static RawImage ThreadProc(byte[] rawData, string identifier, int maxDimension = -1, int abortDimension = -1)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xB2AC30", Offset = "0xB2AC30")]
	public struct TrTransform
	{
		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 translation;

		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TrTransform identity;

		[Token(Token = "0x17000703")]
		public TrTransform inverse
		{
			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x1175720", Offset = "0x1175720", VA = "0x1175720")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000704")]
		public Vector3 forward
		{
			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x117580C", Offset = "0x117580C", VA = "0x117580C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000705")]
		public Vector3 up
		{
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x117585C", Offset = "0x117585C", VA = "0x117585C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000706")]
		public Vector3 right
		{
			[Token(Token = "0x6002C41")]
			[Address(RVA = "0x11758AC", Offset = "0x11758AC", VA = "0x11758AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x1174B94", Offset = "0x1174B94", VA = "0x1174B94")]
		public static TrTransform T(Vector3 t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0x1174BEC", Offset = "0x1174BEC", VA = "0x1174BEC")]
		public static TrTransform R(Quaternion r)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x1174C48", Offset = "0x1174C48", VA = "0x1174C48")]
		public static TrTransform R(float angle, Vector3 axis)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x1174CAC", Offset = "0x1174CAC", VA = "0x1174CAC")]
		public static TrTransform S(float s)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x1174D08", Offset = "0x1174D08", VA = "0x1174D08")]
		public static TrTransform TR(Vector3 t, Quaternion r)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x11728B4", Offset = "0x11728B4", VA = "0x11728B4")]
		public static TrTransform TRS(Vector3 t, Quaternion r, float scale)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x1174D24", Offset = "0x1174D24", VA = "0x1174D24")]
		public static TrTransform FromMatrix4x4(Matrix4x4 m)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x1174D84", Offset = "0x1174D84", VA = "0x1174D84")]
		public static TrTransform FromTransform(Transform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x1174F24", Offset = "0x1174F24", VA = "0x1174F24")]
		public static TrTransform FromLocalTransform(Transform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x1175008", Offset = "0x1175008", VA = "0x1175008")]
		public static TrTransform InvMul(TrTransform a, TrTransform b)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x117515C", Offset = "0x117515C", VA = "0x117515C")]
		public static TrTransform Lerp(TrTransform a, TrTransform b, float t)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0x117529C", Offset = "0x117529C", VA = "0x117529C")]
		public static Vector3 operator *(TrTransform a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x11752FC", Offset = "0x11752FC", VA = "0x11752FC")]
		public static TrTransform operator *(TrTransform a, TrTransform b)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0x1175414", Offset = "0x1175414", VA = "0x1175414")]
		public static Plane operator *(TrTransform xf, Plane plane)
		{
			return default(Plane);
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x11754EC", Offset = "0x11754EC", VA = "0x11754EC")]
		public static bool operator !=(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0x1175614", Offset = "0x1175614", VA = "0x1175614")]
		public static bool operator ==(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x11756AC", Offset = "0x11756AC", VA = "0x11756AC")]
		public static bool Approximately(TrTransform lhs, TrTransform rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x11758FC", Offset = "0x11758FC", VA = "0x11758FC")]
		public bool IsFinite()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x1175A24", Offset = "0x1175A24", VA = "0x1175A24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x1175CDC", Offset = "0x1175CDC", VA = "0x1175CDC", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x1175E1C", Offset = "0x1175E1C", VA = "0x1175E1C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x1175E70", Offset = "0x1175E70", VA = "0x1175E70")]
		public Matrix4x4 ToMatrix4x4()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x1175EC8", Offset = "0x1175EC8", VA = "0x1175EC8")]
		public void ToTransform(Transform xf)
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x1175FD8", Offset = "0x1175FD8", VA = "0x1175FD8")]
		public void ToLocalTransform(Transform xf)
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x11752A0", Offset = "0x11752A0", VA = "0x11752A0")]
		[Pure]
		public Vector3 MultiplyPoint(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x117603C", Offset = "0x117603C", VA = "0x117603C")]
		[Pure]
		public Vector3 MultiplyVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x1176068", Offset = "0x1176068", VA = "0x1176068")]
		[Pure]
		public Vector3 MultiplyBivector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x1176098", Offset = "0x1176098", VA = "0x1176098")]
		[Pure]
		public Vector3 MultiplyNormal(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x11760BC", Offset = "0x11760BC", VA = "0x11760BC")]
		public TrTransform TransformBy(TrTransform rhs)
		{
			return default(TrTransform);
		}
	}
	[Token(Token = "0x20006BD")]
	public static class TransformExtensions
	{
		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2ACA0", Offset = "0xB2ACA0")]
		public struct LocalAccessor
		{
			[Token(Token = "0x17000707")]
			public TrTransform Item
			{
				[Token(Token = "0x6002C51")]
				[Address(RVA = "0xF26974", Offset = "0xF26974", VA = "0xF26974")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x6002C52")]
				[Address(RVA = "0xF269FC", Offset = "0xF269FC", VA = "0xF269FC")]
				set
				{
				}
			}
		}

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2ACD8", Offset = "0xB2ACD8")]
		public struct GlobalAccessor
		{
			[Token(Token = "0x17000708")]
			public TrTransform Item
			{
				[Token(Token = "0x6002C53")]
				[Address(RVA = "0xF1F6CC", Offset = "0xF1F6CC", VA = "0xF1F6CC")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x6002C54")]
				[Address(RVA = "0xF26968", Offset = "0xF26968", VA = "0xF26968")]
				set
				{
				}
			}
		}

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AD10", Offset = "0xB2AD10")]
		public struct RelativeAccessor
		{
			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Transform m_parent;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private GlobalAccessor AsGlobal;

			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			private LocalAccessor AsLocal;

			[Token(Token = "0x17000709")]
			public TrTransform Item
			{
				[Token(Token = "0x6002C56")]
				[Address(RVA = "0xF1F754", Offset = "0xF1F754", VA = "0xF1F754")]
				get
				{
					return default(TrTransform);
				}
				[Token(Token = "0x6002C57")]
				[Address(RVA = "0xF26A14", Offset = "0xF26A14", VA = "0xF26A14")]
				set
				{
				}
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xF26A08", Offset = "0xF26A08", VA = "0xF26A08")]
			public RelativeAccessor(Transform parent)
			{
			}
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x1174E64", Offset = "0x1174E64", VA = "0x1174E64")]
		public static float GetUniformScale(this Transform xf)
		{
			return default(float);
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x1175F20", Offset = "0x1175F20", VA = "0x1175F20")]
		public static void SetUniformScale(this Transform xf, float scale)
		{
		}
	}
	[Token(Token = "0x20006C1")]
	public static class TsvIo
	{
		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x123CAD0", Offset = "0x123CAD0", VA = "0x123CAD0")]
		public static string[,] TsvToTable(string input)
		{
			return null;
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x123CD10", Offset = "0x123CD10", VA = "0x123CD10")]
		public static void WriteResults(string output, string[,] data)
		{
		}
	}
	[Token(Token = "0x20006C2")]
	public class Vec2AsRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36764", Offset = "0xB36764")]
		private bool <Slider>k__BackingField;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36774", Offset = "0xB36774")]
		private bool <HideMax>k__BackingField;

		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36784", Offset = "0xB36784")]
		private float <LowerBound>k__BackingField;

		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36794", Offset = "0xB36794")]
		private float <UpperBound>k__BackingField;

		[Token(Token = "0x1700070A")]
		public bool Slider
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0x124AC18", Offset = "0x124AC18", VA = "0x124AC18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45564", Offset = "0xB45564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x124AC20", Offset = "0x124AC20", VA = "0x124AC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45574", Offset = "0xB45574")]
			set
			{
			}
		}

		[Token(Token = "0x1700070B")]
		public bool HideMax
		{
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x124AC2C", Offset = "0x124AC2C", VA = "0x124AC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45584", Offset = "0xB45584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x124AC34", Offset = "0x124AC34", VA = "0x124AC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45594", Offset = "0xB45594")]
			set
			{
			}
		}

		[Token(Token = "0x1700070C")]
		public float LowerBound
		{
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x124AC40", Offset = "0x124AC40", VA = "0x124AC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB455A4", Offset = "0xB455A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x124AC48", Offset = "0x124AC48", VA = "0x124AC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB455B4", Offset = "0xB455B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700070D")]
		public float UpperBound
		{
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0x124AC50", Offset = "0x124AC50", VA = "0x124AC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB455C4", Offset = "0xB455C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C61")]
			[Address(RVA = "0x124AC58", Offset = "0x124AC58", VA = "0x124AC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB455D4", Offset = "0xB455D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x124AC60", Offset = "0x124AC60", VA = "0x124AC60")]
		public Vec2AsRangeAttribute()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x124AC98", Offset = "0x124AC98", VA = "0x124AC98")]
		public static Vector2 Rotate(this Vector2 v, float radians)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20006C4")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x124ACF0", Offset = "0x124ACF0", VA = "0x124ACF0")]
		public static float Min(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x124AD28", Offset = "0x124AD28", VA = "0x124AD28")]
		public static float Max(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x124AD60", Offset = "0x124AD60", VA = "0x124AD60")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20006C5")]
	public class VRFlareData
	{
		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Flare;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_DepthFactor;

		[Token(Token = "0x4002BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_CrossFactor;

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x124A5CC", Offset = "0x124A5CC", VA = "0x124A5CC")]
		public VRFlareData()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	public class VRFlare : MonoBehaviour
	{
		[Token(Token = "0x4002BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRFlareData[] m_Flares;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_CameraTransform;

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x124A36C", Offset = "0x124A36C", VA = "0x124A36C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x124A3AC", Offset = "0x124A3AC", VA = "0x124A3AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0x124A5C4", Offset = "0x124A5C4", VA = "0x124A5C4")]
		public VRFlare()
		{
		}
	}
	[Token(Token = "0x20006C7")]
	public class VideoButton : BaseButton
	{
		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ReferenceVideo m_Video;

		[Token(Token = "0x1700070E")]
		public ReferenceVideo Video
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x124B478", Offset = "0x124B478", VA = "0x124B478")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x124B480", Offset = "0x124B480", VA = "0x124B480")]
			set
			{
			}
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x124B114", Offset = "0x124B114", VA = "0x124B114", Slot = "40")]
		protected override void OnButtonPressed()
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0x124B3A4", Offset = "0x124B3A4", VA = "0x124B3A4")]
		public void RefreshDescription()
		{
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x124B4A4", Offset = "0x124B4A4", VA = "0x124B4A4")]
		public VideoButton()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class VideoCatalog : MonoBehaviour, IReferenceItemCatalog
	{
		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AD68", Offset = "0xB2AD68")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VideoCatalog <>4__this;

			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] toDelete;

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xF2A018", Offset = "0xF2A018", VA = "0xF2A018")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xF2A020", Offset = "0xF2A020", VA = "0xF2A020")]
			internal bool <ScanReferenceDirectory>b__1(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xF2A0C4", Offset = "0xF2A0C4", VA = "0xF2A0C4")]
			internal bool <ScanReferenceDirectory>b__2(ReferenceVideo x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AD78", Offset = "0xB2AD78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ReferenceVideo, string> <>9__26_0;

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xF29FF8", Offset = "0xF29FF8", VA = "0xF29FF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xF2A000", Offset = "0xF2A000", VA = "0xF2A000")]
			internal string <ScanReferenceDirectory>b__26_0(ReferenceVideo x)
			{
				return null;
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AD88", Offset = "0xB2AD88")]
		private sealed class <ScanReferenceDirectory>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoCatalog <>4__this;

			[Token(Token = "0x4002BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TimeSpan <interval>5__2;

			[Token(Token = "0x4002BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private DateTime <nextRefresh>5__3;

			[Token(Token = "0x4002BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<ReferenceVideo>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000712")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C8B")]
				[Address(RVA = "0xF2AAA0", Offset = "0xF2AAA0", VA = "0xF2AAA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000713")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C8D")]
				[Address(RVA = "0xF2AAE8", Offset = "0xF2AAE8", VA = "0xF2AAE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xF2A154", Offset = "0xF2A154", VA = "0xF2A154")]
			[DebuggerHidden]
			public <ScanReferenceDirectory>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002C88")]
			[Address(RVA = "0xF2A180", Offset = "0xF2A180", VA = "0xF2A180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xF2A1F0", Offset = "0xF2A1F0", VA = "0xF2A1F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xF2A19C", Offset = "0xF2A19C", VA = "0xF2A19C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xF2AAA8", Offset = "0xF2AAA8", VA = "0xF2AAA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AD98", Offset = "0xB2AD98")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string path;

			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0xF2A128", Offset = "0xF2A128", VA = "0xF2A128")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xF2A130", Offset = "0xF2A130", VA = "0xF2A130")]
			internal bool <GetVideoByPersistentPath>b__0(ReferenceVideo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB367B4", Offset = "0xB367B4")]
		private static VideoCatalog <Instance>k__BackingField;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_DefaultVideos;

		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_DebugOutput;

		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] m_supportedVideoExtensions;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FileWatcher m_FileWatcher;

		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ReferenceVideo> m_Videos;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_ScanningDirectory;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_DirectoryScanRequired;

		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<string> m_ChangedFiles;

		[Token(Token = "0x1700070F")]
		public static VideoCatalog Instance
		{
			[Token(Token = "0x6002C70")]
			[Address(RVA = "0x124B4AC", Offset = "0x124B4AC", VA = "0x124B4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45624", Offset = "0xB45624")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C71")]
			[Address(RVA = "0x124B4F8", Offset = "0x124B4F8", VA = "0x124B4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45634", Offset = "0xB45634")]
			private set
			{
			}
		}

		[Token(Token = "0x17000710")]
		public bool IsScanning
		{
			[Token(Token = "0x6002C72")]
			[Address(RVA = "0x124B548", Offset = "0x124B548", VA = "0x124B548", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000711")]
		public int ItemCount
		{
			[Token(Token = "0x6002C77")]
			[Address(RVA = "0x124B990", Offset = "0x124B990", VA = "0x124B990", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x140000AA")]
		public event Action CatalogChanged
		{
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x124B850", Offset = "0x124B850", VA = "0x124B850", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45644", Offset = "0xB45644")]
			add
			{
			}
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x124B8F0", Offset = "0x124B8F0", VA = "0x124B8F0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45654", Offset = "0xB45654")]
			remove
			{
			}
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x124B550", Offset = "0x124B550", VA = "0x124B550")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x124B5A4", Offset = "0x124B5A4", VA = "0x124B5A4")]
		private void Init()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x124B9DC", Offset = "0x124B9DC", VA = "0x124B9DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x124BB08", Offset = "0x124BB08", VA = "0x124BB08")]
		public ReferenceVideo GetVideoAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x124BC38", Offset = "0x124BC38", VA = "0x124BC38")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x124BC48", Offset = "0x124BC48", VA = "0x124BC48", Slot = "8")]
		public void ForceCatalogScan()
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x124BC84", Offset = "0x124BC84", VA = "0x124BC84")]
		private void OnDirectoryChanged(object source, FileSystemEventArgs e)
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x124B7E4", Offset = "0x124B7E4", VA = "0x124B7E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45664", Offset = "0xB45664")]
		private IEnumerator<object> ScanReferenceDirectory()
		{
			return null;
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x124BDBC", Offset = "0x124BDBC", VA = "0x124BDBC")]
		public ReferenceVideo GetVideoByPersistentPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x124BEA8", Offset = "0x124BEA8", VA = "0x124BEA8")]
		public void DebugListVideos()
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x124BFEC", Offset = "0x124BFEC", VA = "0x124BFEC")]
		public VideoCatalog()
		{
		}
	}
	[Token(Token = "0x20006CD")]
	public class ViewpointScript : MonoBehaviour
	{
		[Token(Token = "0x20006CE")]
		private enum FullScreenFadeState
		{
			[Token(Token = "0x4002BCB")]
			Default,
			[Token(Token = "0x4002BCC")]
			FadingToColor,
			[Token(Token = "0x4002BCD")]
			FadingToScene
		}

		[Token(Token = "0x20006CF")]
		private enum GroundPlaneFadeState
		{
			[Token(Token = "0x4002BCF")]
			Default,
			[Token(Token = "0x4002BD0")]
			FadingIn,
			[Token(Token = "0x4002BD1")]
			FadingOut
		}

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ViewpointScript m_Instance;

		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_UserHeadMesh;

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_DropCamHeadMesh;

		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_FullScreenOverlay;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_GroundPlaneOverlay;

		[Token(Token = "0x4002BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_ExceptionOverlay;

		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_MirrorModeEnabled;

		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private FullScreenFadeState m_FullScreenFadeState;

		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_FullScreenFadeAmount;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_FullScreenTargetColor;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_FullScreenFadeSpeed;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_FullScreenFadeEatFrame;

		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GroundPlaneFadeState m_GroundPlaneFadeState;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_GroundPlaneFadeAmount;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Color m_GroundPlaneTargetColor;

		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_GroundPlaneFadeSpeed;

		[Token(Token = "0x17000714")]
		public static Transform Head
		{
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xEFB0B8", Offset = "0xEFB0B8", VA = "0xEFB0B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000715")]
		public static Ray Gaze
		{
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xEFB138", Offset = "0xEFB138", VA = "0xEFB138")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x17000716")]
		public bool AllowsFading
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xEFB1BC", Offset = "0xEFB1BC", VA = "0xEFB1BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0xEFB1CC", Offset = "0xEFB1CC", VA = "0xEFB1CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0xEFB284", Offset = "0xEFB284", VA = "0xEFB284")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0xEFB3BC", Offset = "0xEFB3BC", VA = "0xEFB3BC")]
		public void Init()
		{
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0xEFB220", Offset = "0xEFB220", VA = "0xEFB220")]
		public void SetOverlayToBlack()
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0xEFB62C", Offset = "0xEFB62C", VA = "0xEFB62C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0xEFB10C", Offset = "0xEFB10C", VA = "0xEFB10C")]
		private Transform GetHeadTransform()
		{
			return null;
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xEFB600", Offset = "0xEFB600", VA = "0xEFB600")]
		private Transform GetEyeTransform()
		{
			return null;
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xEFB890", Offset = "0xEFB890", VA = "0xEFB890")]
		public void ToggleScreenMirroring()
		{
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xEFB970", Offset = "0xEFB970", VA = "0xEFB970")]
		public void FadeToColor(Color overlayColor, float speed)
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0xEFB988", Offset = "0xEFB988", VA = "0xEFB988")]
		public void FadeToScene(float speed)
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xEFB9AC", Offset = "0xEFB9AC", VA = "0xEFB9AC")]
		public void FadeGroundPlaneIn(Color groundPlaneColor, float speed)
		{
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xEFB9C4", Offset = "0xEFB9C4", VA = "0xEFB9C4")]
		public void FadeGroundPlaneOut(float speed)
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xEFB9D4", Offset = "0xEFB9D4", VA = "0xEFB9D4")]
		public void SetHeadMeshVisible(bool bShow)
		{
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xEFBA10", Offset = "0xEFBA10", VA = "0xEFBA10")]
		public ViewpointScript()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	public class VisualizerCSCoreFft : VisualizerManager.Fft
	{
		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private FftProvider m_Fft;

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xEFBB7C", Offset = "0xEFBB7C", VA = "0xEFBB7C")]
		public VisualizerCSCoreFft(int channels, int fftSize)
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xEFBBFC", Offset = "0xEFBBFC", VA = "0xEFBBFC", Slot = "4")]
		public override void Add(float[] samples, int count)
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xEFBC1C", Offset = "0xEFBC1C", VA = "0xEFBC1C", Slot = "5")]
		public override void GetFftData(float[] resultBuffer)
		{
		}
	}
	[Token(Token = "0x20006D1")]
	public class VisualizerCSCoreFilter : VisualizerManager.Filter
	{
		[Token(Token = "0x20006D2")]
		public enum FilterType
		{
			[Token(Token = "0x4002BD6")]
			Low,
			[Token(Token = "0x4002BD7")]
			High
		}

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BiQuad m_Filter;

		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double m_Frequency;

		[Token(Token = "0x17000717")]
		public override double Frequency
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0xEFBD20", Offset = "0xEFBD20", VA = "0xEFBD20", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xEFBD28", Offset = "0xEFBD28", VA = "0xEFBD28", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xEFBC3C", Offset = "0xEFBC3C", VA = "0xEFBC3C")]
		public VisualizerCSCoreFilter(FilterType type, int sampleRate, double frequency)
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xEFBD04", Offset = "0xEFBD04", VA = "0xEFBD04", Slot = "4")]
		public override void Process(float[] samples)
		{
		}
	}
	[Token(Token = "0x20006D3")]
	public class VisualizerManager : MonoBehaviour
	{
		[Token(Token = "0x20006D4")]
		public class Fft
		{
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xF2B454", Offset = "0xF2B454", VA = "0xF2B454", Slot = "4")]
			public virtual void Add(float[] samples, int count)
			{
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xF2B458", Offset = "0xF2B458", VA = "0xF2B458", Slot = "5")]
			public virtual void GetFftData(float[] resultBuffer)
			{
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xF2B45C", Offset = "0xF2B45C", VA = "0xF2B45C")]
			public Fft()
			{
			}
		}

		[Token(Token = "0x20006D5")]
		public class Filter
		{
			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB36A04", Offset = "0xB36A04")]
			private double <Frequency>k__BackingField;

			[Token(Token = "0x17000721")]
			public virtual double Frequency
			{
				[Token(Token = "0x6002CC2")]
				[Address(RVA = "0xF2B468", Offset = "0xF2B468", VA = "0xF2B468", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45714", Offset = "0xB45714")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002CC3")]
				[Address(RVA = "0xF2B470", Offset = "0xF2B470", VA = "0xF2B470", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45724", Offset = "0xB45724")]
				set
				{
				}
			}

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xF2B464", Offset = "0xF2B464", VA = "0xF2B464", Slot = "4")]
			public virtual void Process(float[] samples)
			{
			}

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xF2B478", Offset = "0xF2B478", VA = "0xF2B478")]
			public Filter()
			{
			}
		}

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VisualizerManager m_Instance;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36844", Offset = "0xB36844")]
		[SerializeField]
		private float m_BandPeakDecay;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_NormalizedBandPeakLerp;

		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB368A0", Offset = "0xB368A0")]
		private float m_FFTPeakDecay;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_FFTScale;

		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FFTPowerScale;

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_FFTPower;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB3691C", Offset = "0xB3691C")]
		[SerializeField]
		private float m_WeirdWaveformLerp;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private double m_HighPassFreq;

		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private double m_LowPassFreq;

		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36988", Offset = "0xB36988")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjector;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorAlt;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorLowPass;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SystemAudioInjector m_SystemAudioInjectorHighPass;

		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_FFTSize;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleRate;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] m_Bands;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_Bandwidth;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] m_BandLevels;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] m_BandPeakLevels;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] m_BandNormalizedLevels;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Texture2D m_WaveFormTexture;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color[] m_WaveFormRow;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Texture2D m_FFTTexture;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_FFTTextureSize;

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color[] m_FFTRow;

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector4 m_BandPeakLevelsOutput;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector4 m_BeatOutput;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector4 m_BeatOutputAccum;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector4 m_AudioVolume;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Fft m_FFT;

		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Filter m_LowPassFilter;

		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Filter m_HighPassFilter;

		[Token(Token = "0x4002BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float[] m_AudioSamples;

		[Token(Token = "0x4002BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float[] m_LChannelWeird;

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float[] m_LChannelHighPass;

		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float[] m_LChannelLowPass;

		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float[] m_FFTResult;

		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float[] m_PeakFFTResult;

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Reaktor m_Reaktor;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Reaktor m_ReaktorAlt;

		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Reaktor m_ReaktorLowPass;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Reaktor m_ReaktorHighPass;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<GameObject> m_VisualizerObjects;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int m_VisualsRequestCount;

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool m_VisualsActive;

		[Token(Token = "0x17000718")]
		public int FFTSize
		{
			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0xEFBD4C", Offset = "0xEFBD4C", VA = "0xEFBD4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000719")]
		public Texture2D WaveformTexture
		{
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xEFBD54", Offset = "0xEFBD54", VA = "0xEFBD54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700071A")]
		public Texture2D FFTTexture
		{
			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0xEFBD5C", Offset = "0xEFBD5C", VA = "0xEFBD5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700071B")]
		public Vector4 BandPeakLevelsOutput
		{
			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0xEFBD64", Offset = "0xEFBD64", VA = "0xEFBD64")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700071C")]
		public Vector4 BeatOutput
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0xEFBD70", Offset = "0xEFBD70", VA = "0xEFBD70")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700071D")]
		public Vector4 BeatOutputAccum
		{
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xEFBD7C", Offset = "0xEFBD7C", VA = "0xEFBD7C")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700071E")]
		public Vector4 AudioVolume
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xEFBD88", Offset = "0xEFBD88", VA = "0xEFBD88")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700071F")]
		public bool VisualsRequested
		{
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xEFBD94", Offset = "0xEFBD94", VA = "0xEFBD94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000720")]
		public bool AreVisualsActive
		{
			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xEFBDA4", Offset = "0xEFBDA4", VA = "0xEFBDA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0xEFBDAC", Offset = "0xEFBDAC", VA = "0xEFBDAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0xEFC118", Offset = "0xEFC118", VA = "0xEFC118")]
		public void RegisterVisualizerObject(GameObject rObject)
		{
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0xEFC224", Offset = "0xEFC224", VA = "0xEFC224")]
		public void UnregisterVisualizerObject(GameObject rObject)
		{
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0xEFC340", Offset = "0xEFC340", VA = "0xEFC340")]
		public void SetVisualizerObjectActive(bool bActivate)
		{
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xEFC568", Offset = "0xEFC568", VA = "0xEFC568")]
		private void InitializeAllReaktorComponents()
		{
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xEFC9EC", Offset = "0xEFC9EC", VA = "0xEFC9EC")]
		public void EnableVisuals(bool bEnable)
		{
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xEFCB64", Offset = "0xEFCB64", VA = "0xEFCB64")]
		public void AudioCaptureStatusChange(bool bCapturing)
		{
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xEFCA90", Offset = "0xEFCA90", VA = "0xEFCA90")]
		private void ActivateVisuals(bool bEnable)
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xEFCB7C", Offset = "0xEFCB7C", VA = "0xEFCB7C")]
		public void SetSampleRate(int sampleRate)
		{
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0xEFCC00", Offset = "0xEFCC00", VA = "0xEFCC00")]
		public void ProcessAudio(float[] AudioData, int SampleRate)
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xEFD76C", Offset = "0xEFD76C", VA = "0xEFD76C")]
		private int FrequencyToSpectrumIndex(float f)
		{
			return default(int);
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0xEFD56C", Offset = "0xEFD56C", VA = "0xEFD56C")]
		private void ConvertRawSpectrumToBandLevels()
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xEFD7D0", Offset = "0xEFD7D0", VA = "0xEFD7D0")]
		public VisualizerManager()
		{
		}
	}
	[Token(Token = "0x20006D6")]
	public class VisualizerScript : MonoBehaviour
	{
		[Token(Token = "0x20006D7")]
		private enum LoadMusicState
		{
			[Token(Token = "0x4002C1E")]
			Playing,
			[Token(Token = "0x4002C1F")]
			WaitingForWWW,
			[Token(Token = "0x4002C20")]
			WaitingForAudio,
			[Token(Token = "0x4002C21")]
			WaitingForStart,
			[Token(Token = "0x4002C22")]
			MicMode
		}

		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Active;

		[Token(Token = "0x4002C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LoadMusicState m_CurrentLoadMusicState;

		[Token(Token = "0x4002C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_LoadMusicIndex;

		[Token(Token = "0x4002C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW m_LoadMusicWWW;

		[Token(Token = "0x4002C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_SmoothLerp;

		[Token(Token = "0x4002C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_CaptureSize;

		[Token(Token = "0x4002C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] m_WaveFormFloats;

		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] m_WaveFormFloatsSmooth;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] m_SpectrumFloats;

		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] m_SpectrumFloatsTempArray;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] m_SpectrumFloatsAccumulated;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture2D m_WaveFormTexture;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_WaveFormTextureWidth;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_WaveFormTextureHeight;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color[] m_WaveFormRow;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int m_MicResetDuration;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_MicResetCountdown;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_SpectrumAccumulatedFactor;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioMixerGroup m_MasterAudioMixerGroup;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioMixerGroup m_MutedAudioMixerGroup;

		[NonSerialized]
		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Reaktor m_Reaktor;

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xEFD89C", Offset = "0xEFD89C", VA = "0xEFD89C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xEFD8F0", Offset = "0xEFD8F0", VA = "0xEFD8F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xEFDACC", Offset = "0xEFDACC", VA = "0xEFDACC")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xEFDA64", Offset = "0xEFDA64", VA = "0xEFDA64")]
		public void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xEFDCB0", Offset = "0xEFDCB0", VA = "0xEFDCB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0xEFDCAC", Offset = "0xEFDCAC", VA = "0xEFDCAC")]
		private void EnableMic(bool bEnable)
		{
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xEFE0D4", Offset = "0xEFE0D4", VA = "0xEFE0D4")]
		private void UpdateShaders()
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xEFDAD4", Offset = "0xEFDAD4", VA = "0xEFDAD4")]
		private void LoadNextSong()
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xEFE310", Offset = "0xEFE310", VA = "0xEFE310")]
		public VisualizerScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D8")]
	public enum ControllerStyle
	{
		[Token(Token = "0x4002C24")]
		Unset,
		[Token(Token = "0x4002C25")]
		None,
		[Token(Token = "0x4002C26")]
		InitializingSteamVR,
		[Token(Token = "0x4002C27")]
		Vive,
		[Token(Token = "0x4002C28")]
		Knuckles,
		[Token(Token = "0x4002C29")]
		OculusTouch,
		[Token(Token = "0x4002C2A")]
		Wmr,
		[Token(Token = "0x4002C2B")]
		Gvr,
		[Token(Token = "0x4002C2C")]
		LogitechPen,
		[Token(Token = "0x4002C2D")]
		Cosmos,
		[Token(Token = "0x4002C2E")]
		PicoNeo,
		[Token(Token = "0x4002C2F")]
		AR,
		[Token(Token = "0x4002C30")]
		XrPlugin
	}
	[Token(Token = "0x20006D9")]
	public class VrSdk : MonoBehaviour
	{
		[Token(Token = "0x20006DA")]
		private enum OverlayMode
		{
			[Token(Token = "0x4002C52")]
			None,
			[Token(Token = "0x4002C53")]
			Steam,
			[Token(Token = "0x4002C54")]
			OVR,
			[Token(Token = "0x4002C55")]
			Mobile
		}

		[Token(Token = "0x20006DB")]
		public enum DoF
		{
			[Token(Token = "0x4002C57")]
			None,
			[Token(Token = "0x4002C58")]
			Two,
			[Token(Token = "0x4002C59")]
			Six
		}

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_AnalogGripBinaryThreshold_Rift;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GvrOverlay m_GvrOverlayPrefab;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_OverlayMaxAlpha;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_OverlayMaxSize;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_VrSystem;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_SteamUninitializedControlsPrefab;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_SteamViveControlsPrefab;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_SteamRiftControlsPrefab;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_SteamQuestControlsPrefab;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_SteamWmrControlsPrefab;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_SteamKnucklesControlsPrefab;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_SteamCosmoControlsPrefab;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_OculusRiftControlsPrefab;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_OculusQuestControlsPrefab;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_GvrPointerControlsPrefab;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_NonVrControlsPrefab;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject m_PicoNeoControlsPrefab;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject m_ArFoundationControlsPrefab;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject m_ArFoundationCanvasPrefab;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_DissonancePrefab;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Camera m_VrCamera;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private VrControllers m_VrControls;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_HasVrFocus;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private OverlayMode m_OverlayMode;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private OVROverlay m_OVROverlay;

		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_MobileOverlayOn;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GvrOverlay m_MobileOverlay;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Bounds? m_RoomBoundsAabbCached;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Action[] m_OldOnPoseApplied;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_NeedsToAttachConsoleScript;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private TrTransform? m_TrackingBackupXf;

		[Token(Token = "0x17000722")]
		public VrControllers VrControls
		{
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0xF003D0", Offset = "0xF003D0", VA = "0xF003D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000723")]
		public float AnalogGripBinaryThreshold_Rift
		{
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xF00520", Offset = "0xF00520", VA = "0xF00520")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000724")]
		public bool OverlayIsOVR
		{
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xF00528", Offset = "0xF00528", VA = "0xF00528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000725")]
		public bool IsInitializingSteamVr
		{
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xF00538", Offset = "0xF00538", VA = "0xF00538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000726")]
		public bool OverlayEnabled
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xF02E60", Offset = "0xF02E60", VA = "0xF02E60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xF02E20", Offset = "0xF02E20", VA = "0xF02E20")]
			set
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event Action NewControllerPosesApplied
		{
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xF003D8", Offset = "0xF003D8", VA = "0xF003D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45734", Offset = "0xB45734")]
			add
			{
			}
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xF0047C", Offset = "0xF0047C", VA = "0xF0047C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45744", Offset = "0xB45744")]
			remove
			{
			}
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xF00574", Offset = "0xF00574", VA = "0xF00574")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xF01508", Offset = "0xF01508", VA = "0xF01508")]
		private void Start()
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0xF0173C", Offset = "0xF0173C", VA = "0xF0173C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xF01860", Offset = "0xF01860", VA = "0xF01860")]
		private void OnInputFocus(params object[] args)
		{
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0xF01974", Offset = "0xF01974", VA = "0xF01974")]
		private void OnNewPoses()
		{
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0xF01988", Offset = "0xF01988", VA = "0xF01988")]
		private void OnInputFocusSteam(bool arg)
		{
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0xF01A60", Offset = "0xF01A60", VA = "0xF01A60")]
		public Camera GetVrCamera()
		{
			return null;
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0xEFB8CC", Offset = "0xEFB8CC", VA = "0xEFB8CC")]
		public void SetScreenMirroring(bool enabled)
		{
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0xF01A68", Offset = "0xF01A68", VA = "0xF01A68")]
		public string GetDisplayIdentifier()
		{
			return null;
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0xF01B80", Offset = "0xF01B80", VA = "0xF01B80")]
		public int? GetDroppedFrames()
		{
			return null;
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0xF01CA0", Offset = "0xF01CA0", VA = "0xF01CA0")]
		public void ResetPerfStats()
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xF01D34", Offset = "0xF01D34", VA = "0xF01D34")]
		public bool HasRoomBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xEFB388", Offset = "0xEFB388", VA = "0xEFB388")]
		public Vector3 GetRoomExtents()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xF01E48", Offset = "0xF01E48", VA = "0xF01E48")]
		public Bounds GetRoomBoundsAabb()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0xF01EDC", Offset = "0xF01EDC", VA = "0xF01EDC")]
		private void RefreshRoomBoundsCache()
		{
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xF01FC4", Offset = "0xF01FC4", VA = "0xF01FC4")]
		private static Bounds FromPoints(IEnumerable<Vector3> points)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0xF023E0", Offset = "0xF023E0", VA = "0xF023E0")]
		private static bool IsClockwiseConvex(Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xF024FC", Offset = "0xF024FC", VA = "0xF024FC")]
		private static Vector3 UnityFromOculus(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xF02510", Offset = "0xF02510", VA = "0xF02510")]
		public float SwipeScaleAdjustment(InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xF02538", Offset = "0xF02538", VA = "0xF02538")]
		public bool AnalogIsStick(InputManager.ControllerName name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0xF01038", Offset = "0xF01038", VA = "0xF01038")]
		public void SetControllerStyle(ControllerStyle style)
		{
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xF025A8", Offset = "0xF025A8", VA = "0xF025A8")]
		public void SetControllerStyleForPico(GameObject controllers)
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xF02790", Offset = "0xF02790", VA = "0xF02790")]
		public ControllerInfo CreateControllerInfo(BaseControllerBehavior behavior, bool isLeftHand)
		{
			return null;
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0xF02950", Offset = "0xF02950", VA = "0xF02950")]
		public bool TrySwapLeftRightTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0xF02B28", Offset = "0xF02B28", VA = "0xF02B28")]
		public DoF GetControllerDof()
		{
			return default(DoF);
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0xF02B98", Offset = "0xF02B98", VA = "0xF02B98")]
		public void SetOverlayAlpha(float ratio)
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0xF02EAC", Offset = "0xF02EAC", VA = "0xF02EAC")]
		public void SetOverlayTexture(Texture tex)
		{
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0xF02F68", Offset = "0xF02F68", VA = "0xF02F68")]
		public void PositionOverlay(float distance, float height)
		{
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0xF0307C", Offset = "0xF0307C", VA = "0xF0307C")]
		public void FadeToCompositor(float fadeTime)
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0xF030AC", Offset = "0xF030AC", VA = "0xF030AC")]
		public void FadeFromCompositor(float fadeTime)
		{
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0xF03094", Offset = "0xF03094", VA = "0xF03094")]
		private void FadeToCompositor(float fadeTime, bool fadeToCompositor)
		{
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xF031B4", Offset = "0xF031B4", VA = "0xF031B4")]
		public void PauseRendering(bool bPause)
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xF031B8", Offset = "0xF031B8", VA = "0xF031B8")]
		public void FadeToBlack(float fadeTime)
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0xF031C0", Offset = "0xF031C0", VA = "0xF031C0")]
		public void FadeFromBlack(float fadeTime)
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0xF030C4", Offset = "0xF030C4", VA = "0xF030C4")]
		private void FadeBlack(float fadeTime, bool fadeToBlack)
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xF031C8", Offset = "0xF031C8", VA = "0xF031C8")]
		public bool IsHmdInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0xF0327C", Offset = "0xF0327C", VA = "0xF0327C")]
		public int GetHmdTargetFrameRate()
		{
			return default(int);
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xF03338", Offset = "0xF03338", VA = "0xF03338")]
		public DoF GetHmdDof()
		{
			return default(DoF);
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xF033BC", Offset = "0xF033BC", VA = "0xF033BC")]
		public bool IsAppFocusBlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xEF9DCC", Offset = "0xEF9DCC", VA = "0xEF9DCC")]
		public void SetHmdScalingFactor(float scale)
		{
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0xF033CC", Offset = "0xF033CC", VA = "0xF033CC")]
		public void DisablePoseTracking()
		{
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xF03518", Offset = "0xF03518", VA = "0xF03518")]
		public void RestorePoseTracking()
		{
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0xF038F4", Offset = "0xF038F4", VA = "0xF038F4")]
		public void SetFixedFoveation(int level)
		{
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0xF039E0", Offset = "0xF039E0", VA = "0xF039E0")]
		public float GetGpuUtilization()
		{
			return default(float);
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0xF03A9C", Offset = "0xF03A9C", VA = "0xF03A9C")]
		public void SetGpuClockLevel(int level)
		{
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xF03B7C", Offset = "0xF03B7C", VA = "0xF03B7C")]
		public VrSdk()
		{
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xF03B98", Offset = "0xF03B98", VA = "0xF03B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45754", Offset = "0xB45754")]
		private void <Start>b__45_0()
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xF03C70", Offset = "0xF03C70", VA = "0xF03C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45764", Offset = "0xB45764")]
		private void <Start>b__45_1()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB2ADA8", Offset = "0xB2ADA8")]
	public class WatermarkEffect : MonoBehaviour
	{
		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture m_overlayTexture;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_uvDestination;

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Size;

		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader shader;

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material m_Material;

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xF03D4C", Offset = "0xF03D4C", VA = "0xF03D4C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xF03DFC", Offset = "0xF03DFC", VA = "0xF03DFC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xF03E00", Offset = "0xF03E00", VA = "0xF03E00")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0xF040C4", Offset = "0xF040C4", VA = "0xF040C4")]
		public WatermarkEffect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006DD")]
	public enum StencilType
	{
		[Token(Token = "0x4002C60")]
		Plane,
		[Token(Token = "0x4002C61")]
		Cube,
		[Token(Token = "0x4002C62")]
		Sphere,
		[Token(Token = "0x4002C63")]
		Capsule,
		[Token(Token = "0x4002C64")]
		Cone,
		[Token(Token = "0x4002C65")]
		Cylinder,
		[Token(Token = "0x4002C66")]
		InteriorDome,
		[Token(Token = "0x4002C67")]
		Pyramid,
		[Token(Token = "0x4002C68")]
		Ellipsoid
	}
	[Serializable]
	[Token(Token = "0x20006DE")]
	public struct StencilMapKey
	{
		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StencilType m_Type;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public StencilWidget m_StencilPrefab;
	}
	[Token(Token = "0x20006DF")]
	public struct StencilContactInfo
	{
		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StencilWidget widget;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 pos;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normal;
	}
	[Token(Token = "0x20006E0")]
	public class GrabWidgetData
	{
		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly GameObject m_WidgetObject;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly GrabWidget m_WidgetScript;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_NearController;

		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_ControllerScore;

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0xFAC10C", Offset = "0xFAC10C", VA = "0xFAC10C")]
		public GrabWidgetData(GrabWidget widget)
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0xFAC150", Offset = "0xFAC150", VA = "0xFAC150", Slot = "4")]
		public virtual GrabWidgetData Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20006E1")]
	public class TypedWidgetData<T> : GrabWidgetData where T : GrabWidget
	{
		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T m_typedWidget;

		[Token(Token = "0x17000727")]
		public T WidgetScript
		{
			[Token(Token = "0x6002D0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0D")]
		public TypedWidgetData(T widget)
		{
		}

		[Token(Token = "0x6002D0E")]
		public override GrabWidgetData Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20006E2")]
	public class WidgetManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2ADF4", Offset = "0xB2ADF4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TypedWidgetData<VideoWidget>, bool> <>9__82_0;

			[Token(Token = "0x4002CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TypedWidgetData<CameraPathWidget>, bool> <>9__84_0;

			[Token(Token = "0x4002CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GrabWidgetData, bool> <>9__110_0;

			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<TypedWidgetData<CameraPathWidget>, bool> <>9__115_0;

			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<TypedWidgetData<CameraPathWidget>, bool> <>9__121_0;

			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ModelWidget, bool> <>9__131_0;

			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ImageWidget, bool> <>9__131_1;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ModelWidget, bool> <>9__131_2;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<VideoWidget, bool> <>9__132_0;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ModelWidget, bool> <>9__132_1;

			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ImageWidget, bool> <>9__132_2;

			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<VideoWidget, bool> <>9__132_3;

			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<GrabWidgetData, bool> <>9__161_0;

			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<TypedWidgetData<ModelWidget>, ModelWidget> <>9__163_0;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<ModelWidget, bool> <>9__163_1;

			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<TypedWidgetData<VideoWidget>, VideoWidget> <>9__165_0;

			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<VideoWidget, bool> <>9__165_1;

			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<TypedWidgetData<ModelWidget>, ModelWidget> <>9__167_0;

			[Token(Token = "0x4002CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<ModelWidget, bool> <>9__167_1;

			[Token(Token = "0x4002CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static Func<ModelWidget, bool> <>9__167_2;

			[Token(Token = "0x4002CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static Func<TypedWidgetData<ModelWidget>, ModelWidget> <>9__169_0;

			[Token(Token = "0x4002CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static Func<ModelWidget, bool> <>9__169_1;

			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static Func<ModelWidget, bool> <>9__169_2;

			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static Func<TypedWidgetData<StencilWidget>, StencilWidget> <>9__171_0;

			[Token(Token = "0x4002CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static Func<StencilWidget, bool> <>9__171_1;

			[Token(Token = "0x4002CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static Func<TypedWidgetData<ImageWidget>, ImageWidget> <>9__174_0;

			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static Func<ImageWidget, bool> <>9__174_1;

			[Token(Token = "0x4002CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static Func<ImageWidget, bool> <>9__181_0;

			[Token(Token = "0x4002CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public static Func<TiltModels75, string> <>9__186_0;

			[Token(Token = "0x4002CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public static Func<string, bool> <>9__186_1;

			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public static Func<GrabWidgetData, bool> <>9__191_0;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public static Func<GrabWidgetData, global::<>f__AnonymousType0<float, GrabWidget>> <>9__191_1;

			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public static Func<global::<>f__AnonymousType0<float, GrabWidget>, bool> <>9__191_2;

			[Token(Token = "0x4002CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public static Func<global::<>f__AnonymousType0<float, GrabWidget>, float> <>9__191_3;

			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0x2106658", Offset = "0x2106658", VA = "0x2106658")]
			public <>c()
			{
			}

			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0x2106660", Offset = "0x2106660", VA = "0x2106660")]
			internal bool <get_AnyVideoWidgetActive>b__82_0(TypedWidgetData<VideoWidget> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0x2106684", Offset = "0x2106684", VA = "0x2106684")]
			internal bool <get_AnyCameraPathWidgetsActive>b__84_0(TypedWidgetData<CameraPathWidget> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0x21066A8", Offset = "0x21066A8", VA = "0x21066A8")]
			internal bool <get_ActiveGrabWidgets>b__110_0(GrabWidgetData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D80")]
			[Address(RVA = "0x21066CC", Offset = "0x21066CC", VA = "0x21066CC")]
			internal bool <get_CameraPathWidgets>b__115_0(TypedWidgetData<CameraPathWidget> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0x21066F0", Offset = "0x21066F0", VA = "0x21066F0")]
			internal bool <GetNthActiveCameraPath>b__121_0(TypedWidgetData<CameraPathWidget> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D82")]
			[Address(RVA = "0x2106714", Offset = "0x2106714", VA = "0x2106714")]
			internal bool <HasExportableContent>b__131_0(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0x2106740", Offset = "0x2106740", VA = "0x2106740")]
			internal bool <HasExportableContent>b__131_1(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D84")]
			[Address(RVA = "0x210676C", Offset = "0x210676C", VA = "0x210676C")]
			internal bool <HasExportableContent>b__131_2(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0x21067C8", Offset = "0x21067C8", VA = "0x21067C8")]
			internal bool <HasNonExportableContent>b__132_0(VideoWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D86")]
			[Address(RVA = "0x21067F4", Offset = "0x21067F4", VA = "0x21067F4")]
			internal bool <HasNonExportableContent>b__132_1(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0x2106820", Offset = "0x2106820", VA = "0x2106820")]
			internal bool <HasNonExportableContent>b__132_2(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D88")]
			[Address(RVA = "0x210684C", Offset = "0x210684C", VA = "0x210684C")]
			internal bool <HasNonExportableContent>b__132_3(VideoWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0x2106878", Offset = "0x2106878", VA = "0x2106878")]
			internal bool <ShouldUpdateCollisions>b__161_0(GrabWidgetData elt)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0x21068A4", Offset = "0x21068A4", VA = "0x21068A4")]
			internal ModelWidget <get_ModelWidgets>b__163_0(TypedWidgetData<ModelWidget> w)
			{
				return null;
			}

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0x21068F0", Offset = "0x21068F0", VA = "0x21068F0")]
			internal bool <get_ModelWidgets>b__163_1(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0x2106958", Offset = "0x2106958", VA = "0x2106958")]
			internal VideoWidget <get_VideoWidgets>b__165_0(TypedWidgetData<VideoWidget> w)
			{
				return null;
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0x21069A4", Offset = "0x21069A4", VA = "0x21069A4")]
			internal bool <get_VideoWidgets>b__165_1(VideoWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0x2106A0C", Offset = "0x2106A0C", VA = "0x2106A0C")]
			internal ModelWidget <get_NonExportableModelWidgets>b__167_0(TypedWidgetData<ModelWidget> w)
			{
				return null;
			}

			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0x2106A58", Offset = "0x2106A58", VA = "0x2106A58")]
			internal bool <get_NonExportableModelWidgets>b__167_1(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D90")]
			[Address(RVA = "0x2106AC0", Offset = "0x2106AC0", VA = "0x2106AC0")]
			internal bool <get_NonExportableModelWidgets>b__167_2(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D91")]
			[Address(RVA = "0x2106AEC", Offset = "0x2106AEC", VA = "0x2106AEC")]
			internal ModelWidget <get_ExportableModelWidgets>b__169_0(TypedWidgetData<ModelWidget> w)
			{
				return null;
			}

			[Token(Token = "0x6002D92")]
			[Address(RVA = "0x2106B38", Offset = "0x2106B38", VA = "0x2106B38")]
			internal bool <get_ExportableModelWidgets>b__169_1(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D93")]
			[Address(RVA = "0x2106BA0", Offset = "0x2106BA0", VA = "0x2106BA0")]
			internal bool <get_ExportableModelWidgets>b__169_2(ModelWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D94")]
			[Address(RVA = "0x2106BC4", Offset = "0x2106BC4", VA = "0x2106BC4")]
			internal StencilWidget <get_StencilWidgets>b__171_0(TypedWidgetData<StencilWidget> d)
			{
				return null;
			}

			[Token(Token = "0x6002D95")]
			[Address(RVA = "0x2106C10", Offset = "0x2106C10", VA = "0x2106C10")]
			internal bool <get_StencilWidgets>b__171_1(StencilWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D96")]
			[Address(RVA = "0x2106C78", Offset = "0x2106C78", VA = "0x2106C78")]
			internal ImageWidget <get_ImageWidgets>b__174_0(TypedWidgetData<ImageWidget> d)
			{
				return null;
			}

			[Token(Token = "0x6002D97")]
			[Address(RVA = "0x2106CFC", Offset = "0x2106CFC", VA = "0x2106CFC")]
			internal bool <get_ImageWidgets>b__174_1(ImageWidget w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D98")]
			[Address(RVA = "0x2106D64", Offset = "0x2106D64", VA = "0x2106D64")]
			internal bool <GetNearestImage>b__181_0(ImageWidget i)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D99")]
			[Address(RVA = "0x2106D90", Offset = "0x2106D90", VA = "0x2106D90")]
			internal string <CreateMediaWidgetsFromLoadDataCoroutine>b__186_0(TiltModels75 tm)
			{
				return null;
			}

			[Token(Token = "0x6002D9A")]
			[Address(RVA = "0x2106DA8", Offset = "0x2106DA8", VA = "0x2106DA8")]
			internal bool <CreateMediaWidgetsFromLoadDataCoroutine>b__186_1(string aid)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9B")]
			[Address(RVA = "0x2106DB4", Offset = "0x2106DB4", VA = "0x2106DB4")]
			internal bool <TossNearestWidget>b__191_0(GrabWidgetData w)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0x2106DD8", Offset = "0x2106DD8", VA = "0x2106DD8")]
			internal global::<>f__AnonymousType0<float, GrabWidget> <TossNearestWidget>b__191_1(GrabWidgetData w)
			{
				return null;
			}

			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0x2106EA0", Offset = "0x2106EA0", VA = "0x2106EA0")]
			internal bool <TossNearestWidget>b__191_2(global::<>f__AnonymousType0<float, GrabWidget> data)
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0x2106EF0", Offset = "0x2106EF0", VA = "0x2106EF0")]
			internal float <TossNearestWidget>b__191_3(global::<>f__AnonymousType0<float, GrabWidget> data)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE04", Offset = "0xB2AE04")]
		private sealed class <GetAllActiveGrabWidgets>d__111 : IEnumerable<GrabWidgetData>, IEnumerable, IEnumerator<GrabWidgetData>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GrabWidgetData <>2__current;

			[Token(Token = "0x4002CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WidgetManager <>4__this;

			[Token(Token = "0x4002CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700074E")]
			private GrabWidgetData System.Collections.Generic.IEnumerator<TiltBrush.GrabWidgetData>.Current
			{
				[Token(Token = "0x6002DA2")]
				[Address(RVA = "0x2107A48", Offset = "0x2107A48", VA = "0x2107A48", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DA4")]
				[Address(RVA = "0x2107A90", Offset = "0x2107A90", VA = "0x2107A90", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D9F")]
			[Address(RVA = "0x2107508", Offset = "0x2107508", VA = "0x2107508")]
			[DebuggerHidden]
			public <GetAllActiveGrabWidgets>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0x2107540", Offset = "0x2107540", VA = "0x2107540", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0x2107544", Offset = "0x2107544", VA = "0x2107544", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DA3")]
			[Address(RVA = "0x2107A50", Offset = "0x2107A50", VA = "0x2107A50", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0x2107A98", Offset = "0x2107A98", VA = "0x2107A98", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<GrabWidgetData> System.Collections.Generic.IEnumerable<TiltBrush.GrabWidgetData>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0x2107B40", Offset = "0x2107B40", VA = "0x2107B40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE14", Offset = "0xB2AE14")]
		private struct <>c__DisplayClass175_0
		{
			[Token(Token = "0x4002CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<GrabWidget> widgets;
		}

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE24", Offset = "0xB2AE24")]
		private sealed class <>c__DisplayClass179_0<T> where T : GrabWidgetData
		{
			[Token(Token = "0x4002CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject rWidget;

			[Token(Token = "0x6002DA7")]
			public <>c__DisplayClass179_0()
			{
			}

			[Token(Token = "0x6002DA8")]
			internal bool <RemoveFrom>b__0(T data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE34", Offset = "0xB2AE34")]
		private sealed class <CreateMediaWidgetsFromLoadDataCoroutine>d__186 : IEnumerator<Null>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Null <>2__current;

			[Token(Token = "0x4002CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WidgetManager <>4__this;

			[Token(Token = "0x4002CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string[] <assetIds>5__2;

			[Token(Token = "0x17000750")]
			private Null System.Collections.Generic.IEnumerator<TiltBrush.Null>.Current
			{
				[Token(Token = "0x6002DAC")]
				[Address(RVA = "0x21074B8", Offset = "0x21074B8", VA = "0x21074B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000751")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DAE")]
				[Address(RVA = "0x2107500", Offset = "0x2107500", VA = "0x2107500", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0x2106F38", Offset = "0x2106F38", VA = "0x2106F38")]
			[DebuggerHidden]
			public <CreateMediaWidgetsFromLoadDataCoroutine>d__186(int <>1__state)
			{
			}

			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0x2106F64", Offset = "0x2106F64", VA = "0x2106F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0x2106F68", Offset = "0x2106F68", VA = "0x2106F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0x21074C0", Offset = "0x21074C0", VA = "0x21074C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WidgetManager m_Instance;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModelWidget m_ModelWidgetPrefab;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_WidgetPinPrefab;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ImageWidget m_ImageWidgetPrefab;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VideoWidget m_VideoWidgetPrefab;

		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CameraPathWidget m_CameraPathWidgetPrefab;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_CameraPathPositionKnotPrefab;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_CameraPathRotationKnotPrefab;

		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_CameraPathSpeedKnotPrefab;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_CameraPathFovKnotPrefab;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_CameraPathKnotSegmentPrefab;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GrabWidgetHome m_Home;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_HomeHintLinePrefab;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_WidgetSnapAngle;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_GazeMaxAngleFromFacing;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_PanelFocusActivationScore;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_ModelVertCountScalar;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36C74", Offset = "0xB36C74")]
		private StencilMapKey[] m_StencilMap;

		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_StencilAttractDist;

		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_StencilAttachHysteresis;

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string m_StencilLayerName;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string m_PinnedStencilLayerName;

		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_WidgetsDormant;

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_InhibitGrabWhileLoading;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject m_HomeHintLine;

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MeshFilter m_HomeHintLineMeshFilter;

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_HomeHintLineBaseScale;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private StencilContactInfo[] m_StencilContactInfos;

		[Token(Token = "0x4002C8F")]
		private const int m_StencilBucketSize = 16;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private StencilWidget m_ActiveStencil;

		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_StencilsDisabled;

		[Token(Token = "0x4002C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GrabWidgetData> m_GrabWidgets;

		[Token(Token = "0x4002C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<TypedWidgetData<ModelWidget>> m_ModelWidgets;

		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<TypedWidgetData<StencilWidget>> m_StencilWidgets;

		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<TypedWidgetData<ImageWidget>> m_ImageWidgets;

		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<TypedWidgetData<VideoWidget>> m_VideoWidgets;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<TypedWidgetData<CameraPathWidget>> m_CameraPathWidgets;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<GrabWidget> m_CanBePinnedWidgets;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<GrabWidget> m_CanBeUnpinnedWidgets;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private TiltModels75[] m_loadingTiltModels75;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TiltImages75[] m_loadingTiltImages75;

		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TiltVideo[] m_loadingTiltVideos;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<GrabWidgetData> m_WidgetsNearBrush;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<GrabWidgetData> m_WidgetsNearWand;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_ModelVertCount;

		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int m_ImageVertCount;

		[NonSerialized]
		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool FollowingPath;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private TypedWidgetData<CameraPathWidget> m_CurrentCameraPath;

		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool m_CameraPathsVisible;

		[Token(Token = "0x4002CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private CameraPathTinter m_CameraPathTinter;

		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<ushort, GrabWidget> sm_BatchMap;

		[Token(Token = "0x17000728")]
		public StencilWidget ActiveStencil
		{
			[Token(Token = "0x6002D11")]
			[Address(RVA = "0xF06554", Offset = "0xF06554", VA = "0xF06554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000729")]
		public int StencilLayerIndex
		{
			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xF06564", Offset = "0xF06564", VA = "0xF06564")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700072A")]
		public int PinnedStencilLayerIndex
		{
			[Token(Token = "0x6002D14")]
			[Address(RVA = "0xF06570", Offset = "0xF06570", VA = "0xF06570")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700072B")]
		public LayerMask PinnedStencilLayerMask
		{
			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xF0657C", Offset = "0xF0657C", VA = "0xF0657C")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x1700072C")]
		public LayerMask StencilLayerMask
		{
			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xF06630", Offset = "0xF06630", VA = "0xF06630")]
			get
			{
				return default(LayerMask);
			}
		}

		[Token(Token = "0x1700072D")]
		public List<GrabWidgetData> WidgetsNearBrush
		{
			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xF066E4", Offset = "0xF066E4", VA = "0xF066E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072E")]
		public List<GrabWidgetData> WidgetsNearWand
		{
			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xF066EC", Offset = "0xF066EC", VA = "0xF066EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072F")]
		public bool AnyWidgetsToPin
		{
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xF066F4", Offset = "0xF066F4", VA = "0xF066F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000730")]
		public bool AnyWidgetsToUnpin
		{
			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xF06748", Offset = "0xF06748", VA = "0xF06748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000731")]
		public float ModelVertCountScalar
		{
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xF0679C", Offset = "0xF0679C", VA = "0xF0679C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000732")]
		public int ImageVertCount
		{
			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xF067A4", Offset = "0xF067A4", VA = "0xF067A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000733")]
		public int WidgetsVertCount
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xF067CC", Offset = "0xF067CC", VA = "0xF067CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000734")]
		public bool AnyVideoWidgetActive
		{
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xF067DC", Offset = "0xF067DC", VA = "0xF067DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000735")]
		public bool AnyCameraPathWidgetsActive
		{
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xF068F8", Offset = "0xF068F8", VA = "0xF068F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000736")]
		public CameraPathTinter PathTinter
		{
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xF06A14", Offset = "0xF06A14", VA = "0xF06A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000737")]
		public ModelWidget ModelWidgetPrefab
		{
			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xF06FC4", Offset = "0xF06FC4", VA = "0xF06FC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000738")]
		public ImageWidget ImageWidgetPrefab
		{
			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xF06FCC", Offset = "0xF06FCC", VA = "0xF06FCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000739")]
		public VideoWidget VideoWidgetPrefab
		{
			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xF06FD4", Offset = "0xF06FD4", VA = "0xF06FD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073A")]
		public CameraPathWidget CameraPathWidgetPrefab
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xF06FDC", Offset = "0xF06FDC", VA = "0xF06FDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073B")]
		public GameObject CameraPathPositionKnotPrefab
		{
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0xF06FE4", Offset = "0xF06FE4", VA = "0xF06FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073C")]
		public GameObject CameraPathRotationKnotPrefab
		{
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xF06FEC", Offset = "0xF06FEC", VA = "0xF06FEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073D")]
		public GameObject CameraPathSpeedKnotPrefab
		{
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xF06FF4", Offset = "0xF06FF4", VA = "0xF06FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073E")]
		public GameObject CameraPathFovKnotPrefab
		{
			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xF06FFC", Offset = "0xF06FFC", VA = "0xF06FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073F")]
		public GameObject CameraPathKnotSegmentPrefab
		{
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xF07004", Offset = "0xF07004", VA = "0xF07004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000740")]
		public IEnumerable<GrabWidgetData> ActiveGrabWidgets
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xF0700C", Offset = "0xF0700C", VA = "0xF0700C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000741")]
		public IEnumerable<GrabWidgetData> MediaWidgets
		{
			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xF071B0", Offset = "0xF071B0", VA = "0xF071B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000742")]
		public IEnumerable<TypedWidgetData<CameraPathWidget>> CameraPathWidgets
		{
			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xF0720C", Offset = "0xF0720C", VA = "0xF0720C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000743")]
		public bool CameraPathsVisible
		{
			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xF084B8", Offset = "0xF084B8", VA = "0xF084B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xF084C0", Offset = "0xF084C0", VA = "0xF084C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000744")]
		public bool StencilsDisabled
		{
			[Token(Token = "0x6002D44")]
			[Address(RVA = "0xF097E8", Offset = "0xF097E8", VA = "0xF097E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D45")]
			[Address(RVA = "0xF097F0", Offset = "0xF097F0", VA = "0xF097F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000745")]
		public bool WidgetsDormant
		{
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xF09F18", Offset = "0xF09F18", VA = "0xF09F18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D51")]
			[Address(RVA = "0xF09F20", Offset = "0xF09F20", VA = "0xF09F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000746")]
		public float WidgetSnapAngle
		{
			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xF09F90", Offset = "0xF09F90", VA = "0xF09F90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000747")]
		public IEnumerable<ModelWidget> ModelWidgets
		{
			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0xF0AC28", Offset = "0xF0AC28", VA = "0xF0AC28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000748")]
		public IEnumerable<VideoWidget> VideoWidgets
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xF09340", Offset = "0xF09340", VA = "0xF09340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000749")]
		public IEnumerable<ModelWidget> NonExportableModelWidgets
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xF09538", Offset = "0xF09538", VA = "0xF09538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074A")]
		public IEnumerable<ModelWidget> ExportableModelWidgets
		{
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xF08ABC", Offset = "0xF08ABC", VA = "0xF08ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074B")]
		public IEnumerable<StencilWidget> StencilWidgets
		{
			[Token(Token = "0x6002D62")]
			[Address(RVA = "0xF0AE20", Offset = "0xF0AE20", VA = "0xF0AE20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074C")]
		public IEnumerable<ImageWidget> ImageWidgets
		{
			[Token(Token = "0x6002D64")]
			[Address(RVA = "0xF08D6C", Offset = "0xF08D6C", VA = "0xF08D6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700074D")]
		public bool CreatingMediaWidgets
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xF0D5C0", Offset = "0xF0D5C0", VA = "0xF0D5C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000AC")]
		public event Action RefreshPinAndUnpinAction
		{
			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xF0640C", Offset = "0xF0640C", VA = "0xF0640C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45774", Offset = "0xB45774")]
			add
			{
			}
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xF064B0", Offset = "0xF064B0", VA = "0xF064B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45784", Offset = "0xB45784")]
			remove
			{
			}
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xF0655C", Offset = "0xF0655C", VA = "0xF0655C")]
		public void ResetActiveStencil()
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xF067AC", Offset = "0xF067AC", VA = "0xF067AC")]
		public void AdjustModelVertCount(int amount)
		{
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0xF067BC", Offset = "0xF067BC", VA = "0xF067BC")]
		public void AdjustImageVertCount(int amount)
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xF06A1C", Offset = "0xF06A1C", VA = "0xF06A1C")]
		public GrabWidget GetBatch(ushort batchId)
		{
			return null;
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0xF06B00", Offset = "0xF06B00", VA = "0xF06B00")]
		public void AddWidgetToBatchMap(GrabWidget widget, ushort batchId)
		{
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0xF06B9C", Offset = "0xF06B9C", VA = "0xF06B9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0xF06C04", Offset = "0xF06C04", VA = "0xF06C04")]
		public void Init()
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0xF07144", Offset = "0xF07144", VA = "0xF07144")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45794", Offset = "0xB45794")]
		private IEnumerable<GrabWidgetData> GetAllActiveGrabWidgets()
		{
			return null;
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0xF07328", Offset = "0xF07328", VA = "0xF07328")]
		public TypedWidgetData<CameraPathWidget> GetCurrentCameraPath()
		{
			return null;
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0xF07330", Offset = "0xF07330", VA = "0xF07330")]
		public void SetCurrentCameraPath(CameraPathWidget path)
		{
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0xF075D8", Offset = "0xF075D8", VA = "0xF075D8")]
		public void ValidateCurrentCameraPath()
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0xF074BC", Offset = "0xF074BC", VA = "0xF074BC")]
		private void SetCurrentCameraPath_Internal(TypedWidgetData<CameraPathWidget> cp)
		{
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0xF07778", Offset = "0xF07778", VA = "0xF07778")]
		public bool CanRecordCurrentCameraPath()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0xF07880", Offset = "0xF07880", VA = "0xF07880")]
		public CameraPathWidget GetNthActiveCameraPath(int nth)
		{
			return null;
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0xF07C6C", Offset = "0xF07C6C", VA = "0xF07C6C")]
		public bool IsCameraPathAtIndexCurrent(int pathIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0xF07D60", Offset = "0xF07D60", VA = "0xF07D60")]
		public int? GetIndexOfCameraPath(CameraPathWidget path)
		{
			return null;
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xF07ED8", Offset = "0xF07ED8", VA = "0xF07ED8")]
		public CameraPathWidget CreatePathWidget()
		{
			return null;
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0xF0800C", Offset = "0xF0800C", VA = "0xF0800C")]
		public bool AnyActivePathHasAKnot()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xF08340", Offset = "0xF08340", VA = "0xF08340")]
		public void DeleteCameraPath(GrabWidget cameraPathWidgetScript)
		{
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xF08678", Offset = "0xF08678", VA = "0xF08678")]
		public bool HasSelectableWidgets()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0xF08744", Offset = "0xF08744", VA = "0xF08744")]
		public bool HasExportableContent(Cloud cloud)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xF08F64", Offset = "0xF08F64", VA = "0xF08F64")]
		public bool HasNonExportableContent(Cloud cloud)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xF09A30", Offset = "0xF09A30", VA = "0xF09A30")]
		private static string CanonicalizeForCompare(string path)
		{
			return null;
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xF09AAC", Offset = "0xF09AAC", VA = "0xF09AAC")]
		public static string GetPathRootedAtMedia(string path)
		{
			return null;
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0xF09C24", Offset = "0xF09C24", VA = "0xF09C24")]
		public static string GetModelSubpath(string fullPath)
		{
			return null;
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xF09CDC", Offset = "0xF09CDC", VA = "0xF09CDC")]
		public void SetDataFromTilt(TiltModels75[] value)
		{
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0xF09CE4", Offset = "0xF09CE4", VA = "0xF09CE4")]
		public void SetDataFromTilt(TiltImages75[] value)
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0xF09CEC", Offset = "0xF09CEC", VA = "0xF09CEC")]
		public void SetDataFromTilt(CameraPathMetadata[] cameraPaths)
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0xF09D60", Offset = "0xF09D60", VA = "0xF09D60")]
		public void SetDataFromTilt(TiltVideo[] value)
		{
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0xF09D68", Offset = "0xF09D68", VA = "0xF09D68")]
		public WidgetPinScript GetWidgetPin()
		{
			return null;
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0xF09E44", Offset = "0xF09E44", VA = "0xF09E44")]
		public void DestroyWidgetPin(WidgetPinScript pin)
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0xF09EFC", Offset = "0xF09EFC", VA = "0xF09EFC")]
		public void SetHomePosition(Vector3 position)
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0xF09F98", Offset = "0xF09F98", VA = "0xF09F98")]
		public bool IsOriginHomeWithinSnapRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xF09FB4", Offset = "0xF09FB4", VA = "0xF09FB4")]
		public Transform GetHomeXf()
		{
			return null;
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0xF09FD0", Offset = "0xF09FD0", VA = "0xF09FD0")]
		public void SetHomeOwner(Transform owner)
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0xF0A00C", Offset = "0xF0A00C", VA = "0xF0A00C")]
		public void ClearHomeOwner()
		{
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0xF0A070", Offset = "0xF0A070", VA = "0xF0A070")]
		public void EnableHome(bool bEnable)
		{
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0xF0A0D4", Offset = "0xF0A0D4", VA = "0xF0A0D4")]
		public void LoadingState(bool bEnter)
		{
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0xF0A0E0", Offset = "0xF0A0E0", VA = "0xF0A0E0")]
		public void UpdateHomeHintLine(Vector3 vModelSnapPos)
		{
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0xF0A2E8", Offset = "0xF0A2E8", VA = "0xF0A2E8")]
		public void MagnetizeToStencils(ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0xF0AA94", Offset = "0xF0AA94", VA = "0xF0AA94")]
		private bool FindClosestPointOnCollider(Ray rRay, Collider collider, out RaycastHit rHitInfo, float fDist)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0xF0AA68", Offset = "0xF0AA68", VA = "0xF0AA68")]
		private void FindClosestPointOnWidgetSurface(Vector3 pos, ref StencilContactInfo info)
		{
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0xF0AAFC", Offset = "0xF0AAFC", VA = "0xF0AAFC")]
		public bool ShouldUpdateCollisions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0xF0B018", Offset = "0xF0B018", VA = "0xF0B018")]
		public StencilWidget GetStencilPrefab(StencilType type)
		{
			return null;
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0xF0B10C", Offset = "0xF0B10C", VA = "0xF0B10C")]
		public List<GrabWidget> GetAllUnselectedActiveWidgets()
		{
			return null;
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xF09918", Offset = "0xF09918", VA = "0xF09918")]
		public void RefreshPinAndUnpinLists()
		{
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xF0B26C", Offset = "0xF0B26C", VA = "0xF0B26C")]
		public void RegisterHighlightsForPinnableWidgets(bool pinnable)
		{
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xF0B3C4", Offset = "0xF0B3C4", VA = "0xF0B3C4")]
		public void RegisterGrabWidget(GameObject rWidget)
		{
		}

		[Token(Token = "0x6002D69")]
		private static bool RemoveFrom<T>(List<T> list, GameObject rWidget) where T : GrabWidgetData
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xF0B8E8", Offset = "0xF0B8E8", VA = "0xF0B8E8")]
		public void UnregisterGrabWidget(GameObject rWidget)
		{
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0xF0BCA8", Offset = "0xF0BCA8", VA = "0xF0BCA8")]
		public ImageWidget GetNearestImage(Vector3 pos, float maxDepth, ref Vector3 sampleLoc)
		{
			return null;
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0xF0C19C", Offset = "0xF0C19C", VA = "0xF0C19C")]
		public void RefreshNearestWidgetLists(Ray currentGazeRay, int currentGazeObject)
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0xF0C7C8", Offset = "0xF0C7C8", VA = "0xF0C7C8")]
		private void UpdateNearestGrabsFor(InputManager.ControllerName name, Ray currentGazeRay, int currentGazeObject)
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xF0D0F4", Offset = "0xF0D0F4", VA = "0xF0D0F4")]
		public float DistanceToNearestWidget(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0xF0D43C", Offset = "0xF0D43C", VA = "0xF0D43C")]
		public void DestroyAllWidgets()
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xF0D554", Offset = "0xF0D554", VA = "0xF0D554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB457F4", Offset = "0xB457F4")]
		public IEnumerator<Null> CreateMediaWidgetsFromLoadDataCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xF0D5E8", Offset = "0xF0D5E8", VA = "0xF0D5E8")]
		public bool AreMediaWidgetsStillLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0xF0D7F0", Offset = "0xF0D7F0", VA = "0xF0D7F0")]
		private static float ScoreByAngleAndDistance(GrabWidgetData data)
		{
			return default(float);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xF0D8F4", Offset = "0xF0D8F4", VA = "0xF0D8F4")]
		public void TossNearestWidget()
		{
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xF0E040", Offset = "0xF0E040", VA = "0xF0E040")]
		public WidgetManager()
		{
		}

		[Token(Token = "0x6002D77")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45854", Offset = "0xB45854")]
		internal static void <GetAllUnselectedActiveWidgets>g__GetUnselectedActiveWidgetsInList|175_0<T>(List<TypedWidgetData<T>> list, ref <>c__DisplayClass175_0 P_1) where T : GrabWidget
		{
		}

		[Token(Token = "0x6002D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45864", Offset = "0xB45864")]
		private void <RefreshPinAndUnpinLists>g__RefreshPinUnpinWidgetList|176_0<T>(List<TypedWidgetData<T>> widgetList) where T : GrabWidget
		{
		}

		[Token(Token = "0x6002D79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45874", Offset = "0xB45874")]
		private void <DestroyAllWidgets>g__DestroyWidgetList|185_0<T>(List<TypedWidgetData<T>> widgetList, bool hideBeforeDestroy) where T : GrabWidget
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xF0E0F0", Offset = "0xF0E0F0", VA = "0xF0E0F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45884", Offset = "0xB45884")]
		internal static bool <CreateMediaWidgetsFromLoadDataCoroutine>g__IsLoading|186_2(string assetId)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006E8")]
	public class WidgetPinScript : MonoBehaviour
	{
		[Token(Token = "0x20006E9")]
		public enum PinState
		{
			[Token(Token = "0x4002CF7")]
			None,
			[Token(Token = "0x4002CF8")]
			Entering,
			[Token(Token = "0x4002CF9")]
			Wobbling,
			[Token(Token = "0x4002CFA")]
			Pinned,
			[Token(Token = "0x4002CFB")]
			Removing
		}

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_MeshXf;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_SpawnOffset;

		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector2 m_ScaleRange_RS;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_BaseEnterSpeed;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_PenetrationScalar;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_WobbleDuration;

		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_WobbleAngle;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_WobbleSpeed;

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DisplayDuration;

		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_UnpinPopForce;

		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_UnpinRotationSpeed;

		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_UnpinFallDuration;

		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_UnpinFallDrag;

		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_UnpinFallGravity;

		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PinState m_PinState;

		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_Parent;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GrabWidget m_ParentWidgetScript;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_EntranceTarget;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_BaseRotation;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_BaseMeshScale;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion m_BaseMeshRotation;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3? m_TransformedSpawnOffset;

		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_WobbleCountdown;

		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_DisplayCountdown;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 m_WobbleCurrent;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 m_WobbleTarget;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_UnpinVelocity;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 m_UnpinRotationAxis;

		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_UnpinFallCountdown;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_SpeedScalar;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_WorkingPenetrationScalar;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_DestroyOnStateComplete;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool m_SuppressAudio;

		[Token(Token = "0x17000752")]
		public bool SuppressAudio
		{
			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xF0E13C", Offset = "0xF0E13C", VA = "0xF0E13C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xF0E144", Offset = "0xF0E144", VA = "0xF0E144")]
			set
			{
			}
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xF0E150", Offset = "0xF0E150", VA = "0xF0E150")]
		public void SetPenetrationScalar(float scalar)
		{
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0xF0E158", Offset = "0xF0E158", VA = "0xF0E158")]
		public void DestroyOnStateComplete()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xF0E164", Offset = "0xF0E164", VA = "0xF0E164")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xF0E260", Offset = "0xF0E260", VA = "0xF0E260")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xF0E308", Offset = "0xF0E308", VA = "0xF0E308")]
		private void OnCanvasPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0xF0E37C", Offset = "0xF0E37C", VA = "0xF0E37C")]
		public void Init(Transform parent, GrabWidget parentWidget)
		{
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0xF0E46C", Offset = "0xF0E46C", VA = "0xF0E46C")]
		public void ShowWidgetAsPinned()
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0xF0E760", Offset = "0xF0E760", VA = "0xF0E760")]
		public void WobblePin(InputManager.ControllerName heldController)
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0xF0E828", Offset = "0xF0E828", VA = "0xF0E828")]
		public void PinWidget()
		{
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0xF0E850", Offset = "0xF0E850", VA = "0xF0E850")]
		public void UnpinWidget()
		{
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0xF0E880", Offset = "0xF0E880", VA = "0xF0E880")]
		public bool IsAnimating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0xF0E8BC", Offset = "0xF0E8BC", VA = "0xF0E8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0xF0E6F0", Offset = "0xF0E6F0", VA = "0xF0E6F0")]
		private void SwitchPinState(PinState desired)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0xF0E394", Offset = "0xF0E394", VA = "0xF0E394")]
		private void InitTransformedSpawnOffset()
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0xF0EE40", Offset = "0xF0EE40", VA = "0xF0EE40")]
		private void PrimeForEntering()
		{
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0xF0E49C", Offset = "0xF0E49C", VA = "0xF0E49C")]
		private void RefreshPositionAndScale()
		{
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0xF0EF7C", Offset = "0xF0EF7C", VA = "0xF0EF7C")]
		private void Wobble()
		{
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0xF0F050", Offset = "0xF0F050", VA = "0xF0F050")]
		private void Unpin()
		{
		}

		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0xF0F12C", Offset = "0xF0F12C", VA = "0xF0F12C")]
		public WidgetPinScript()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public class CameraPathPreviewWidget : GrabWidget
	{
		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private Color m_RecordColor;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private CameraPathWidget m_CurrentPathWidget;

		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3? m_LastRecordedInputXf;

		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private PathT m_PathT;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private PathT? m_OverridePathT;

		[Token(Token = "0x17000753")]
		public PathT? OverridePathT
		{
			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0x15ACAB0", Offset = "0x15ACAB0", VA = "0x15ACAB0")]
			set
			{
			}
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0x15ACABC", Offset = "0x15ACABC", VA = "0x15ACABC", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0x15ACD60", Offset = "0x15ACD60", VA = "0x15ACD60", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0x15ACC14", Offset = "0x15ACC14", VA = "0x15ACC14")]
		private void CacheCurrentPathWidget()
		{
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0x15ACCA4", Offset = "0x15ACCA4", VA = "0x15ACCA4")]
		private void ValidatePathT()
		{
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0x15AD194", Offset = "0x15AD194", VA = "0x15AD194", Slot = "27")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0x15AD3CC", Offset = "0x15AD3CC", VA = "0x15AD3CC", Slot = "48")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0x15AD3F4", Offset = "0x15AD3F4", VA = "0x15AD3F4", Slot = "31")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0x15AD3F8", Offset = "0x15AD3F8", VA = "0x15AD3F8", Slot = "36")]
		public override float GetActivationScore(Vector3 controllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0x15A9CB0", Offset = "0x15A9CB0", VA = "0x15A9CB0")]
		public void ResetToPathStart()
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0x15AD54C", Offset = "0x15AD54C", VA = "0x15AD54C")]
		public void SetPathT(PathT pathT)
		{
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0x15A9708", Offset = "0x15A9708", VA = "0x15A9708")]
		public void SetCompletionAlongPath(float completion)
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x15A980C", Offset = "0x15A980C", VA = "0x15A980C")]
		public float? GetCompletionAlongPath()
		{
			return null;
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x15A9D98", Offset = "0x15A9D98", VA = "0x15A9D98")]
		public void TintForRecording(bool record)
		{
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x15AD614", Offset = "0x15AD614", VA = "0x15AD614")]
		public CameraPathPreviewWidget()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public class CameraPathWidget : GrabWidget
	{
		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private float m_KnotSegmentRadius;

		[Token(Token = "0x4002D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private float m_EndRadius;

		[Token(Token = "0x4002D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private float m_DefaultSpeed;

		[Token(Token = "0x4002D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private float m_DefaultFov;

		[Token(Token = "0x4002D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private float m_KnotSnapDistanceToEnd;

		[Token(Token = "0x4002D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private CameraPath m_Path;

		[Token(Token = "0x4002D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private KnotDescriptor[] m_LastValidCollisionResults;

		[Token(Token = "0x4002D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private KnotDescriptor[] m_LastCollisionResults;

		[Token(Token = "0x4002D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private KnotDescriptor m_ActiveKnot;

		[Token(Token = "0x4002D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool m_EatInteractingInput;

		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private Vector3? m_KnotEditingLastInputXf;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float m_GrabControlInitialYDiff;

		[Token(Token = "0x17000754")]
		public CameraPath Path
		{
			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0x130F264", Offset = "0x130F264", VA = "0x130F264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000755")]
		public override Transform GrabTransform_GS
		{
			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0x130F26C", Offset = "0x130F26C", VA = "0x130F26C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0x130F2EC", Offset = "0x130F2EC", VA = "0x130F2EC", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0x130F5B8", Offset = "0x130F5B8", VA = "0x130F5B8", Slot = "45")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0x130F710", Offset = "0x130F710", VA = "0x130F710", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0x130F748", Offset = "0x130F748", VA = "0x130F748", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0x130F780", Offset = "0x130F780", VA = "0x130F780", Slot = "20")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0x130F818", Offset = "0x130F818", VA = "0x130F818")]
		private void OnPoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x130F878", Offset = "0x130F878", VA = "0x130F878", Slot = "59")]
		public override bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x130F880", Offset = "0x130F880", VA = "0x130F880")]
		public void SetAsActivePath(bool active)
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x130F934", Offset = "0x130F934", VA = "0x130F934", Slot = "21")]
		public override void RecordAndSetPosRot(TrTransform inputXf)
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x1310508", Offset = "0x1310508", VA = "0x1310508", Slot = "25")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0x13105E0", Offset = "0x13105E0", VA = "0x13105E0", Slot = "36")]
		public override float GetActivationScore(Vector3 point, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0x1310C80", Offset = "0x1310C80", VA = "0x1310C80")]
		public void TintSegments(Vector3 pos)
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0x1310DDC", Offset = "0x1310DDC", VA = "0x1310DDC", Slot = "30")]
		public override void Activate(bool active)
		{
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x1310F2C", Offset = "0x1310F2C", VA = "0x1310F2C", Slot = "31")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x131106C", Offset = "0x131106C", VA = "0x131106C", Slot = "32")]
		protected override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0x1311168", Offset = "0x1311168", VA = "0x1311168")]
		public void HighlightEntirePath()
		{
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0x1311488", Offset = "0x1311488", VA = "0x1311488", Slot = "35")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x1311564", Offset = "0x1311564", VA = "0x1311564", Slot = "47")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x131188C", Offset = "0x131188C", VA = "0x131188C", Slot = "48")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x1310380", Offset = "0x1310380", VA = "0x1310380")]
		private void CheckForPreviewWidgetOverride(PathT pathT)
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x1311DE8", Offset = "0x1311DE8", VA = "0x1311DE8")]
		public void ExtendPath(Vector3 pos, CameraPathTool.ExtendPathType extendType)
		{
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x1311F94", Offset = "0x1311F94", VA = "0x1311F94")]
		public void AddPathConstrainedKnot(CameraPathKnot.Type type, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0x1312140", Offset = "0x1312140", VA = "0x1312140")]
		public bool RemoveKnotAtPosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0x131261C", Offset = "0x131261C", VA = "0x131261C")]
		public bool ShouldSerialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0x1312678", Offset = "0x1312678", VA = "0x1312678")]
		public CameraPathMetadata AsSerializable()
		{
			return null;
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0x1312694", Offset = "0x1312694", VA = "0x1312694")]
		public static void CreateFromSaveData(CameraPathMetadata cameraPath)
		{
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0x13131F8", Offset = "0x13131F8", VA = "0x13131F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0x131320C", Offset = "0x131320C", VA = "0x131320C")]
		public CameraPathWidget()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class CapsuleStencil : StencilWidget
	{
		[Serializable]
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE44", Offset = "0xB2AE44")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, MeshFilter> <>9__19_0;

			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, MeshFilter> <>9__19_1;

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0x11250F8", Offset = "0x11250F8", VA = "0x11250F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E02")]
			[Address(RVA = "0x1125100", Offset = "0x1125100", VA = "0x1125100")]
			internal MeshFilter <Awake>b__19_0(Transform xf)
			{
				return null;
			}

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0x1125154", Offset = "0x1125154", VA = "0x1125154")]
			internal MeshFilter <Awake>b__19_1(Transform xf)
			{
				return null;
			}
		}

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Transform m_CapA;

		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Transform m_CapB;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private Transform m_Body;

		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private Transform[] m_CapXfs;

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Transform[] m_BodyXfs;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private MeshFilter[] m_CapMeshFilters;

		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private MeshFilter[] m_BodyMeshFilters;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3 m_CapDimensions;

		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private Vector3 m_BodyDimensions;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4002D17")]
		private const float CAPSULE_HEIGHT = 2f;

		[Token(Token = "0x17000756")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0x13141A4", Offset = "0x13141A4", VA = "0x13141A4", Slot = "62")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0x1314234", Offset = "0x1314234", VA = "0x1314234", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x17000757")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0x1314680", Offset = "0x1314680", VA = "0x1314680", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002DF4")]
			[Address(RVA = "0x13146EC", Offset = "0x13146EC", VA = "0x13146EC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000758")]
		private float BodyHeight
		{
			[Token(Token = "0x6002DF5")]
			[Address(RVA = "0x131474C", Offset = "0x131474C", VA = "0x131474C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0x13147A0", Offset = "0x13147A0", VA = "0x13147A0", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0x1314A48", Offset = "0x1314A48", VA = "0x1314A48", Slot = "64")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0x1314AE4", Offset = "0x1314AE4", VA = "0x1314AE4", Slot = "65")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x1314CB8", Offset = "0x1314CB8", VA = "0x1314CB8", Slot = "11")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x1314310", Offset = "0x1314310", VA = "0x1314310")]
		private void NormalizeHeight()
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x1314FC4", Offset = "0x1314FC4", VA = "0x1314FC4", Slot = "58")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0x13151A8", Offset = "0x13151A8", VA = "0x13151A8", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0x1315358", Offset = "0x1315358", VA = "0x1315358", Slot = "66")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0x1315588", Offset = "0x1315588", VA = "0x1315588", Slot = "12")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0x131590C", Offset = "0x131590C", VA = "0x131590C")]
		public CapsuleStencil()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class CubeStencil : StencilWidget
	{
		[Token(Token = "0x20006EF")]
		private enum CubeFace
		{
			[Token(Token = "0x4002D2B")]
			Up,
			[Token(Token = "0x4002D2C")]
			Down,
			[Token(Token = "0x4002D2D")]
			Left,
			[Token(Token = "0x4002D2E")]
			Right,
			[Token(Token = "0x4002D2F")]
			Forward,
			[Token(Token = "0x4002D30")]
			Back,
			[Token(Token = "0x4002D31")]
			None
		}

		[Serializable]
		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE54", Offset = "0xB2AE54")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, MeshFilter> <>9__24_0;

			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0x1126428", Offset = "0x1126428", VA = "0x1126428")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0x1126430", Offset = "0x1126430", VA = "0x1126430")]
			internal MeshFilter <Awake>b__24_0(Transform xf)
			{
				return null;
			}
		}

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private Transform[] m_Xxfs;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Transform[] m_Yxfs;

		[Token(Token = "0x4002D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private Transform[] m_Zxfs;

		[Token(Token = "0x4002D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private bool m_HardEdges;

		[Token(Token = "0x4002D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[SerializeField]
		private bool m_StayInsideEdges;

		[Token(Token = "0x4002D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		private float m_PreviewClampPreference;

		[Token(Token = "0x4002D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private float m_StickyFaceHalfWidthBloat;

		[Token(Token = "0x4002D22")]
		private const float cornerSnapDist = 0.15f;

		[Token(Token = "0x4002D23")]
		private const float maxUnitBrushSize = 0.725f;

		[Token(Token = "0x4002D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private Vector3 m_AspectRatio;

		[Token(Token = "0x4002D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Transform[][] m_FaceXfs;

		[Token(Token = "0x4002D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private MeshFilter[][] m_FaceMeshFilters;

		[Token(Token = "0x4002D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private CubeFace m_StickyFace;

		[Token(Token = "0x4002D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private CubeFace m_LastQueriedFace;

		[Token(Token = "0x4002D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int m_ClampedFace;

		[Token(Token = "0x17000759")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002E04")]
			[Address(RVA = "0x1599A4C", Offset = "0x1599A4C", VA = "0x1599A4C", Slot = "62")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E05")]
			[Address(RVA = "0x1599A6C", Offset = "0x1599A6C", VA = "0x1599A6C", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x1700075A")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002E06")]
			[Address(RVA = "0x1599A90", Offset = "0x1599A90", VA = "0x1599A90", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0x1599AA0", Offset = "0x1599AA0", VA = "0x1599AA0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700075B")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002E08")]
			[Address(RVA = "0x1599ABC", Offset = "0x1599ABC", VA = "0x1599ABC", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0x1599B3C", Offset = "0x1599B3C", VA = "0x1599B3C", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x1599EA8", Offset = "0x1599EA8", VA = "0x1599EA8", Slot = "64")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x1599F44", Offset = "0x1599F44", VA = "0x1599F44", Slot = "11")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x159A158", Offset = "0x159A158", VA = "0x159A158")]
		private CubeFace NormalToFaceMap(Vector3 norm)
		{
			return default(CubeFace);
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x159A1AC", Offset = "0x159A1AC", VA = "0x159A1AC", Slot = "58")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0x159A338", Offset = "0x159A338", VA = "0x159A338", Slot = "65")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x159A4BC", Offset = "0x159A4BC", VA = "0x159A4BC", Slot = "67")]
		public override void SetInUse(bool bInUse)
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x159A4FC", Offset = "0x159A4FC", VA = "0x159A4FC", Slot = "68")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x159A598", Offset = "0x159A598", VA = "0x159A598", Slot = "69")]
		protected override void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x159A5F4", Offset = "0x159A5F4", VA = "0x159A5F4", Slot = "66")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x159B284", Offset = "0x159B284", VA = "0x159B284", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0x159A8E4", Offset = "0x159A8E4", VA = "0x159A8E4")]
		private static void FindClosestPointWithStrokeInFace(Vector3 pos, Vector3 halfWidth, CubeFace face, bool preview, float size, Vector3 aspectRatio, out Vector3 surfacePos, out Vector3 surfaceNorm, ref int clampedSide, float previewClampPreference)
		{
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x159AD88", Offset = "0x159AD88", VA = "0x159AD88")]
		private static void FindClosestPointOnBoxFace(Vector3 pos, Vector3 halfWidth, CubeFace face, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x159AEBC", Offset = "0x159AEBC", VA = "0x159AEBC")]
		private void FindClosestPointOnBoxSurfaceHardEdges(Vector3 pos, Vector3 halfWidth, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0x159B0B0", Offset = "0x159B0B0", VA = "0x159B0B0")]
		public static void FindClosestPointOnBoxSurface(Vector3 pos, Vector3 halfWidth, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x159B2CC", Offset = "0x159B2CC", VA = "0x159B2CC", Slot = "23")]
		protected override void InitiateSnapping()
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0x159B394", Offset = "0x159B394", VA = "0x159B394", Slot = "24")]
		protected override void FinishSnapping()
		{
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0x159B450", Offset = "0x159B450", VA = "0x159B450", Slot = "25")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x159B550", Offset = "0x159B550", VA = "0x159B550")]
		public CubeStencil()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006F1")]
	public class FrustumBeam
	{
		[Token(Token = "0x4002D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Beam;

		[Token(Token = "0x4002D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer m_BeamMesh;

		[NonSerialized]
		[Token(Token = "0x4002D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_BaseScale;

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0x101E2DC", Offset = "0x101E2DC", VA = "0x101E2DC")]
		public FrustumBeam()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class DropCamWidget : GrabWidget
	{
		[Token(Token = "0x20006F3")]
		public enum Mode
		{
			[Token(Token = "0x4002D4D")]
			SlowFollow,
			[Token(Token = "0x4002D4E")]
			Stationary,
			[Token(Token = "0x4002D4F")]
			Wobble,
			[Token(Token = "0x4002D50")]
			Circular
		}

		[Token(Token = "0x4002D37")]
		public const Mode kDefaultMode = Mode.Stationary;

		[Token(Token = "0x4002D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private TextMeshPro m_TitleText;

		[Token(Token = "0x4002D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private GameObject m_HintText;

		[Token(Token = "0x4002D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private FrustumBeam[] m_FrustumBeams;

		[Token(Token = "0x4002D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Transform m_GhostMesh;

		[Token(Token = "0x4002D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36F50", Offset = "0xB36F50")]
		private float m_WobbleSpeed;

		[Token(Token = "0x4002D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private float m_WobbleScale;

		[Token(Token = "0x4002D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB36FAC", Offset = "0xB36FAC")]
		private float m_CircleSpeed;

		[Token(Token = "0x4002D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		private float m_CircleRadius;

		[Token(Token = "0x4002D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private GameObject m_GuideCircleObject;

		[Token(Token = "0x4002D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB37018", Offset = "0xB37018")]
		[SerializeField]
		private float m_SlowFollowSmoothing;

		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float m_GuideBeamShowRatio;

		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Renderer[] m_Renderers;

		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Mode m_CurrentMode;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3 m_vWobbleBase_RS;

		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 m_vCircleBase_RS;

		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float m_AnimatedPathTime;

		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Quaternion m_CircleOrientation;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float m_CircleRadians;

		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 m_SlowFollowMoveVel;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Vector3 m_SlowFollowRotVel;

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0xECF440", Offset = "0xECF440", VA = "0xECF440", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xECF9C4", Offset = "0xECF9C4", VA = "0xECF9C4", Slot = "27")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xECFA40", Offset = "0xECFA40", VA = "0xECFA40", Slot = "25")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xECFBC4", Offset = "0xECFBC4", VA = "0xECFBC4", Slot = "18")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xECFC88", Offset = "0xECFC88", VA = "0xECFC88", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xECFD7C", Offset = "0xECFD7C", VA = "0xECFD7C", Slot = "42")]
		protected override void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0xECFDC8", Offset = "0xECFDC8", VA = "0xECFDC8")]
		public static string GetModeName(Mode mode)
		{
			return null;
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xECF5CC", Offset = "0xECF5CC", VA = "0xECF5CC")]
		private void ResetCam()
		{
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0xECFE58", Offset = "0xECFE58", VA = "0xECFE58", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0xED0690", Offset = "0xED0690", VA = "0xED0690", Slot = "30")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0xED07A0", Offset = "0xED07A0", VA = "0xED07A0")]
		public void SetMode(Mode newMode)
		{
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0xED07C8", Offset = "0xED07C8", VA = "0xED07C8")]
		public Mode GetMode()
		{
			return default(Mode);
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0xECFBF4", Offset = "0xECFBF4", VA = "0xECFBF4")]
		private void RefreshRenderers()
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xED07D0", Offset = "0xED07D0", VA = "0xED07D0")]
		public bool ShouldHmdBeVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0xED07F0", Offset = "0xED07F0", VA = "0xED07F0")]
		public DropCamWidget()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class EllipsoidStencil : StencilWidget
	{
		[Token(Token = "0x20006F5")]
		private struct AxisDirection
		{
			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Axis axis;

			[Token(Token = "0x4002D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 direction;
		}

		[Token(Token = "0x4002D51")]
		private const float kInitialWidth = 0.7073f;

		[Token(Token = "0x4002D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AxisDirection[] sm_AxisDirections;

		[Token(Token = "0x4002D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 m_AspectRatio;

		[Token(Token = "0x4002D54")]
		private const float kRadiusInObjectSpace = 0.5f;

		[Token(Token = "0x4002D55")]
		private const float kMinAspectRatio = 0.2f;

		[Token(Token = "0x1700075C")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xED39EC", Offset = "0xED39EC", VA = "0xED39EC", Slot = "62")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xED3A0C", Offset = "0xED3A0C", VA = "0xED3A0C", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x1700075D")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xED3A30", Offset = "0xED3A30", VA = "0xED3A30", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E32")]
			[Address(RVA = "0xED3A40", Offset = "0xED3A40", VA = "0xED3A40", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700075E")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xED3A5C", Offset = "0xED3A5C", VA = "0xED3A5C", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0xED3A64", Offset = "0xED3A64", VA = "0xED3A64", Slot = "68")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0xED3C18", Offset = "0xED3C18", VA = "0xED3C18", Slot = "69")]
		protected override void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0xED3C80", Offset = "0xED3C80", VA = "0xED3C80", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xED3BA0", Offset = "0xED3BA0", VA = "0xED3BA0")]
		private static Vector3 CMax(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0xED3CD4", Offset = "0xED3CD4", VA = "0xED3CD4")]
		private static Vector3 CMul(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0xED3CE4", Offset = "0xED3CE4", VA = "0xED3CE4")]
		private static Vector3 CDiv(Vector3 va, Vector3 vb)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0xED3CF4", Offset = "0xED3CF4", VA = "0xED3CF4", Slot = "66")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0xED4028", Offset = "0xED4028", VA = "0xED4028", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0xED40D4", Offset = "0xED40D4", VA = "0xED40D4", Slot = "64")]
		protected override Axis GetInferredManipulationAxis(Vector3 primary, Vector3 secondary, bool secondaryInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0xED4290", Offset = "0xED4290", VA = "0xED4290", Slot = "11")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0xED46B0", Offset = "0xED46B0", VA = "0xED46B0", Slot = "58")]
		public override void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0xED4958", Offset = "0xED4958", VA = "0xED4958", Slot = "65")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0xED4A18", Offset = "0xED4A18", VA = "0xED4A18", Slot = "12")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0xED4DB8", Offset = "0xED4DB8", VA = "0xED4DB8")]
		public EllipsoidStencil()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class GrabWidget : MonoBehaviour
	{
		[Token(Token = "0x20006F7")]
		public enum State
		{
			[Token(Token = "0x4002DA1")]
			Showing,
			[Token(Token = "0x4002DA2")]
			Visible,
			[Token(Token = "0x4002DA3")]
			Tossed,
			[Token(Token = "0x4002DA4")]
			Hiding,
			[Token(Token = "0x4002DA5")]
			Invisible
		}

		[Token(Token = "0x20006F8")]
		public enum Axis
		{
			[Token(Token = "0x4002DA7")]
			Invalid = -1,
			[Token(Token = "0x4002DA8")]
			X,
			[Token(Token = "0x4002DA9")]
			Y,
			[Token(Token = "0x4002DAA")]
			Z,
			[Token(Token = "0x4002DAB")]
			YZ,
			[Token(Token = "0x4002DAC")]
			XZ,
			[Token(Token = "0x4002DAD")]
			XY
		}

		[Token(Token = "0x20006F9")]
		protected enum IntroAnimState
		{
			[Token(Token = "0x4002DAF")]
			Off,
			[Token(Token = "0x4002DB0")]
			In,
			[Token(Token = "0x4002DB1")]
			On
		}

		[Serializable]
		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE64", Offset = "0xB2AE64")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, MeshFilter> <>9__151_0;

			[Token(Token = "0x4002DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Renderer, Renderer> <>9__169_0;

			[Token(Token = "0x4002DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Renderer, Material[]> <>9__169_1;

			[Token(Token = "0x4002DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Renderer, Renderer> <>9__169_2;

			[Token(Token = "0x4002DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Renderer, Material[]> <>9__169_3;

			[Token(Token = "0x4002DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Renderer, Renderer> <>9__171_0;

			[Token(Token = "0x4002DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Renderer, Material[]> <>9__171_1;

			[Token(Token = "0x4002DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Renderer, Renderer> <>9__171_2;

			[Token(Token = "0x4002DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Renderer, Material[]> <>9__171_3;

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0xFF6BD0", Offset = "0xFF6BD0", VA = "0xFF6BD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xFF6BD8", Offset = "0xFF6BD8", VA = "0xFF6BD8")]
			internal MeshFilter <Awake>b__151_0(Transform x)
			{
				return null;
			}

			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0xFF6C2C", Offset = "0xFF6C2C", VA = "0xFF6C2C")]
			internal Renderer <EnableKeyword>b__169_0(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0xFF6C34", Offset = "0xFF6C34", VA = "0xFF6C34")]
			internal Material[] <EnableKeyword>b__169_1(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0xFF6C50", Offset = "0xFF6C50", VA = "0xFF6C50")]
			internal Renderer <EnableKeyword>b__169_2(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xFF6C58", Offset = "0xFF6C58", VA = "0xFF6C58")]
			internal Material[] <EnableKeyword>b__169_3(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0xFF6C74", Offset = "0xFF6C74", VA = "0xFF6C74")]
			internal Renderer <CloneInitialMaterials>b__171_0(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xFF6C7C", Offset = "0xFF6C7C", VA = "0xFF6C7C")]
			internal Material[] <CloneInitialMaterials>b__171_1(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0xFF6C98", Offset = "0xFF6C98", VA = "0xFF6C98")]
			internal Renderer <CloneInitialMaterials>b__171_2(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0xFF6CA0", Offset = "0xFF6CA0", VA = "0xFF6CA0")]
			internal Material[] <CloneInitialMaterials>b__171_3(Renderer x)
			{
				return null;
			}
		}

		[Token(Token = "0x4002D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color m_InactiveGrey;

		[Token(Token = "0x4002D59")]
		private const float m_LinVelDecayTime = 0.1f;

		[Token(Token = "0x4002D5A")]
		private const float m_AngVelDecayTime = 0.1f;

		[Token(Token = "0x4002D5B")]
		private const float m_LinVelEpsilonSqr = 0.001f;

		[Token(Token = "0x4002D5C")]
		private const float m_AngVelEpsilonSqr = 0.001f;

		[Token(Token = "0x4002D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float m_AngVelDampThreshold;

		[Token(Token = "0x4002D5E")]
		private const float m_LinVelInheritMin = 0.8f;

		[Token(Token = "0x4002D5F")]
		private const float m_AngVelInheritMin = 25f;

		[Token(Token = "0x4002D60")]
		private const float m_LinDistInheritMax = 1f;

		[Token(Token = "0x4002D61")]
		private const float m_AngDistInheritMax = 30f;

		[Token(Token = "0x4002D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_ShowDuration;

		[Token(Token = "0x4002D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_GrabDistance;

		[Token(Token = "0x4002D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_CollisionRadius;

		[Token(Token = "0x4002D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_AllowTwoHandGrab;

		[Token(Token = "0x4002D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_DestroyOnHide;

		[Token(Token = "0x4002D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool m_AllowHideWithToss;

		[Token(Token = "0x4002D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool m_DisableDrift;

		[Token(Token = "0x4002D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected bool m_RecordMovements;

		[Token(Token = "0x4002D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		protected bool m_AllowSnapping;

		[Token(Token = "0x4002D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_SnapDisabledDelay;

		[Token(Token = "0x4002D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_AllowPinning;

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool m_AllowDormancy;

		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_TossDuration;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Renderer[] m_TintableMeshes;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_SpawnPlacementOffset;

		[Token(Token = "0x4002D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_IntroAnimSpinAmount;

		[Token(Token = "0x4002D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected BoxCollider m_BoxCollider;

		[Token(Token = "0x4002D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected Transform m_Mesh;

		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Transform[] m_HighlightMeshXfs;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected float m_ValidSnapRotationStickyAngle;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected Material m_SnapGhostMaterial;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool m_Registered;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float m_ShowTimer;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected State m_CurrentState;

		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected Vector3 m_Velocity_LS;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 m_AngularVelocity_LS;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool m_UserInteracting;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		protected bool m_UserTwoHandGrabbing;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected InputManager.ControllerName m_InteractingController;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float m_SnapEnabledTimeStamp;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool m_SnappingToHome;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		protected bool m_SnapDriftCancel;

		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Quaternion m_BaseSnapRotation;

		[Token(Token = "0x4002D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected bool m_IsSpinningFreely;

		[Token(Token = "0x4002D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		protected bool m_Restoring;

		[Token(Token = "0x4002D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float m_TossTimer;

		[Token(Token = "0x4002D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected NonScaleChild m_NonScaleChild;

		[Token(Token = "0x4002D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected MeshFilter[] m_HighlightMeshFilters;

		[Token(Token = "0x4002D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Color m_ActiveTint;

		[Token(Token = "0x4002D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected int m_BackupLayer;

		[Token(Token = "0x4002D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected ushort m_BatchId;

		[Token(Token = "0x4002D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected TrTransform m_xfIntroAnimSpawn_LS;

		[Token(Token = "0x4002D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected TrTransform m_xfIntroAnimTarget_LS;

		[Token(Token = "0x4002D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected float m_IntroAnimValue;

		[Token(Token = "0x4002D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected float m_IntroAnimSpeed;

		[Token(Token = "0x4002D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected bool m_Pinned;

		[Token(Token = "0x4002D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected WidgetPinScript m_Pin;

		[Token(Token = "0x4002D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected float m_PinScalar;

		[Token(Token = "0x4002D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected List<Quaternion> m_ValidSnapRotations_SS;

		[Token(Token = "0x4002D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected int m_PrevValidSnapRotationIndex;

		[Token(Token = "0x4002D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Transform m_SnapGhost;

		[Token(Token = "0x4002D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected bool m_bWasSnapping;

		[Token(Token = "0x4002D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		protected bool m_CustomShowHide;

		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Collider m_GrabCollider;

		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected Dictionary<Renderer, Material[]> m_InitialMaterials;

		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected Dictionary<Renderer, Material[]> m_NewMaterials;

		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected Renderer[] m_WidgetRenderers;

		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected List<string> m_Keywords;

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected bool m_Highlighted;

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		protected bool m_OldHighlighted;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private SketchGroupTag m_Group;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected IntroAnimState m_IntroAnimState;

		[Token(Token = "0x1700075F")]
		public CanvasScript Canvas
		{
			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xFA4F1C", Offset = "0xFA4F1C", VA = "0xFA4F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000760")]
		public bool AllowTwoHandGrab
		{
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xFA4F84", Offset = "0xFA4F84", VA = "0xFA4F84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000761")]
		public bool AllowPinning
		{
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0xFA4F8C", Offset = "0xFA4F8C", VA = "0xFA4F8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000762")]
		public virtual bool AllowDormancy
		{
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xFA4FFC", Offset = "0xFA4FFC", VA = "0xFA4FFC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000763")]
		public float PinScalar
		{
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0xFA5004", Offset = "0xFA5004", VA = "0xFA5004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000764")]
		public bool IsSpinningFreely
		{
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xFA500C", Offset = "0xFA500C", VA = "0xFA500C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000765")]
		public bool Restoring
		{
			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xFA5014", Offset = "0xFA5014", VA = "0xFA5014")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xFA501C", Offset = "0xFA501C", VA = "0xFA501C")]
			set
			{
			}
		}

		[Token(Token = "0x17000766")]
		public bool Pinned
		{
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0xFA5028", Offset = "0xFA5028", VA = "0xFA5028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000767")]
		public virtual float HapticDuration
		{
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0xFA5030", Offset = "0xFA5030", VA = "0xFA5030", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000768")]
		public ushort BatchId
		{
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0xFA503C", Offset = "0xFA503C", VA = "0xFA503C")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000769")]
		public SketchGroupTag Group
		{
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xFA5044", Offset = "0xFA5044", VA = "0xFA5044")]
			get
			{
				return default(SketchGroupTag);
			}
			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0xFA504C", Offset = "0xFA504C", VA = "0xFA504C")]
			set
			{
			}
		}

		[Token(Token = "0x1700076A")]
		protected bool SnapEnabled
		{
			[Token(Token = "0x6002E51")]
			[Address(RVA = "0xFA50E4", Offset = "0xFA50E4", VA = "0xFA50E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xFA511C", Offset = "0xFA511C", VA = "0xFA511C")]
			set
			{
			}
		}

		[Token(Token = "0x1700076B")]
		public bool Showing
		{
			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xFA5148", Offset = "0xFA5148", VA = "0xFA5148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700076C")]
		public virtual bool SupportsNegativeSize
		{
			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xFA5158", Offset = "0xFA5158", VA = "0xFA5158", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700076D")]
		public static Color InactiveGrey
		{
			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xFA5160", Offset = "0xFA5160", VA = "0xFA5160")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700076E")]
		protected Vector3 Velocity_GS
		{
			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xFA51C8", Offset = "0xFA51C8", VA = "0xFA51C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xFA5380", Offset = "0xFA5380", VA = "0xFA5380")]
			set
			{
			}
		}

		[Token(Token = "0x1700076F")]
		protected Vector3 AngularVelocity_GS
		{
			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xFA5408", Offset = "0xFA5408", VA = "0xFA5408")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xFA5448", Offset = "0xFA5448", VA = "0xFA5448")]
			set
			{
			}
		}

		[Token(Token = "0x17000770")]
		public Collider GrabCollider
		{
			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xFA54D8", Offset = "0xFA54D8", VA = "0xFA54D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000771")]
		protected Transform CenterOfMassTransform
		{
			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xFA5578", Offset = "0xFA5578", VA = "0xFA5578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000772")]
		protected TrTransform CenterOfMassPose_OS
		{
			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xFA5600", Offset = "0xFA5600", VA = "0xFA5600")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000773")]
		protected TrTransform CenterOfMassPose_LS
		{
			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xFA5768", Offset = "0xFA5768", VA = "0xFA5768")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000774")]
		public virtual float MaxAxisScale
		{
			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0xFA5958", Offset = "0xFA5958", VA = "0xFA5958", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000775")]
		public virtual Transform GrabTransform_GS
		{
			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0xFA59E8", Offset = "0xFA59E8", VA = "0xFA59E8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000776")]
		private TrTransform ParentTransform
		{
			[Token(Token = "0x6002E60")]
			[Address(RVA = "0xFA5210", Offset = "0xFA5210", VA = "0xFA5210")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000777")]
		public TrTransform LocalTransform
		{
			[Token(Token = "0x6002E61")]
			[Address(RVA = "0xFA581C", Offset = "0xFA581C", VA = "0xFA581C")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xFA59F0", Offset = "0xFA59F0", VA = "0xFA59F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000778")]
		public virtual Vector3 CustomDimension
		{
			[Token(Token = "0x6002E63")]
			[Address(RVA = "0xFA5BA8", Offset = "0xFA5BA8", VA = "0xFA5BA8", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xFA5BB0", Offset = "0xFA5BB0", VA = "0xFA5BB0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000779")]
		public bool UserTwoHandGrabbing
		{
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xFA6040", Offset = "0xFA6040", VA = "0xFA6040")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700077A")]
		protected virtual Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xFAAF60", Offset = "0xFAAF60", VA = "0xFAAF60", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0xFA50DC", Offset = "0xFA50DC", VA = "0xFA50DC")]
		private void ForceSnapDisabled()
		{
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0xFA5BB4", Offset = "0xFA5BB4", VA = "0xFA5BB4", Slot = "11")]
		public virtual Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisDirection, out float axisExtent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0xFA5BC8", Offset = "0xFA5BC8", VA = "0xFA5BC8", Slot = "12")]
		public virtual Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0xFA5F1C", Offset = "0xFA5F1C", VA = "0xFA5F1C")]
		public bool IsUserInteracting(InputManager.ControllerName interactionController)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0xFA5F3C", Offset = "0xFA5F3C", VA = "0xFA5F3C")]
		public void UserInteracting(bool interacting, InputManager.ControllerName controller = InputManager.ControllerName.None)
		{
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0xFA6048", Offset = "0xFA6048", VA = "0xFA6048")]
		public void SetUserTwoHandGrabbing(bool value, InputManager.ControllerName primary = InputManager.ControllerName.None, InputManager.ControllerName secondary = InputManager.ControllerName.None, bool secondaryInObject = false)
		{
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0xFA61D8", Offset = "0xFA61D8", VA = "0xFA61D8", Slot = "13")]
		public virtual int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0xFA61E0", Offset = "0xFA61E0", VA = "0xFA61E0", Slot = "14")]
		public virtual bool IsCollisionEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0xFA61E4", Offset = "0xFA61E4", VA = "0xFA61E4")]
		public bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0xFA6230", Offset = "0xFA6230", VA = "0xFA6230")]
		private bool IsHideToss(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6F")]
		[Address(RVA = "0xFA6404", Offset = "0xFA6404", VA = "0xFA6404")]
		public void SetCanvas(CanvasScript newCanvas)
		{
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0xFA7090", Offset = "0xFA7090", VA = "0xFA7090")]
		public void TrySetCanvasKeywordsFromObject(Transform xf)
		{
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0xFA7294", Offset = "0xFA7294", VA = "0xFA7294")]
		public void SetVelocities(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0xFA7790", Offset = "0xFA7790", VA = "0xFA7790")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0xFA77C0", Offset = "0xFA77C0", VA = "0xFA77C0")]
		protected float GetShowRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0xFA77D0", Offset = "0xFA77D0", VA = "0xFA77D0", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0xFA7B6C", Offset = "0xFA7B6C", VA = "0xFA7B6C", Slot = "16")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0xFA7A60", Offset = "0xFA7A60", VA = "0xFA7A60")]
		private void RegisterWithWidgetManager()
		{
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0xFA7B70", Offset = "0xFA7B70", VA = "0xFA7B70", Slot = "17")]
		protected virtual void OnHideStart()
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0xFA7B74", Offset = "0xFA7B74", VA = "0xFA7B74", Slot = "18")]
		public virtual void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0xFA7CE0", Offset = "0xFA7CE0", VA = "0xFA7CE0", Slot = "19")]
		public virtual GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0xFA7E30", Offset = "0xFA7E30", VA = "0xFA7E30")]
		public void HaltDrift()
		{
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0xFA7E60", Offset = "0xFA7E60", VA = "0xFA7E60")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0xFA764C", Offset = "0xFA764C", VA = "0xFA764C")]
		private void StartHideToss(Vector3 vLinVel, Vector3 vAngVel, Vector3 vPivot)
		{
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0xFA7E70", Offset = "0xFA7E70", VA = "0xFA7E70")]
		public bool IsTossed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0xFA7E80", Offset = "0xFA7E80", VA = "0xFA7E80")]
		public bool IsHiding()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0xFA7E90", Offset = "0xFA7E90", VA = "0xFA7E90")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0xFA7ED8", Offset = "0xFA7ED8", VA = "0xFA7ED8", Slot = "20")]
		public virtual void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0xFA7F14", Offset = "0xFA7F14", VA = "0xFA7F14")]
		public bool VerifyVisibleState(MoveWidgetCommand comm)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0xFA7FC4", Offset = "0xFA7FC4", VA = "0xFA7FC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0xFA8648", Offset = "0xFA8648", VA = "0xFA8648")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0xFA86D0", Offset = "0xFA86D0", VA = "0xFA86D0")]
		private void AddKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0xFA8740", Offset = "0xFA8740", VA = "0xFA8740")]
		private void RemoveKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0xFA6AE8", Offset = "0xFA6AE8", VA = "0xFA6AE8")]
		private void EnableKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0xFA6F18", Offset = "0xFA6F18", VA = "0xFA6F18")]
		private void DisableKeyword(string keyword)
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0xFA8904", Offset = "0xFA8904", VA = "0xFA8904")]
		protected void CloneInitialMaterials(GrabWidget other)
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0xFA87E4", Offset = "0xFA87E4", VA = "0xFA87E4")]
		private void RestoreSharedMaterials()
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xFA8C48", Offset = "0xFA8C48", VA = "0xFA8C48")]
		public void HideNow()
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xFA8CA8", Offset = "0xFA8CA8", VA = "0xFA8CA8")]
		protected static TrTransform WithUnitScale(TrTransform xf)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0xFA818C", Offset = "0xFA818C", VA = "0xFA818C")]
		private void UpdatePositionAndVelocities()
		{
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0xFA8D7C", Offset = "0xFA8D7C", VA = "0xFA8D7C")]
		public void RecordAndSetSize(float value)
		{
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xFA8F84", Offset = "0xFA8F84", VA = "0xFA8F84", Slot = "21")]
		public virtual void RecordAndSetPosRot(TrTransform inputXf)
		{
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0xFA94D4", Offset = "0xFA94D4", VA = "0xFA94D4", Slot = "22")]
		public virtual TrTransform GetGrabbedTrTransform()
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xFA95DC", Offset = "0xFA95DC", VA = "0xFA95DC", Slot = "23")]
		protected virtual void InitiateSnapping()
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0xFA9718", Offset = "0xFA9718", VA = "0xFA9718", Slot = "24")]
		protected virtual void FinishSnapping()
		{
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xFA97FC", Offset = "0xFA97FC", VA = "0xFA97FC", Slot = "25")]
		protected virtual TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0xFA9B10", Offset = "0xFA9B10", VA = "0xFA9B10")]
		protected int GetBestSnapRotationIndex(Quaternion rot)
		{
			return default(int);
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0xFA9C78", Offset = "0xFA9C78", VA = "0xFA9C78")]
		protected void InitSnapGhost(Transform media, Transform parent)
		{
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0xFA9E1C", Offset = "0xFA9E1C", VA = "0xFA9E1C", Slot = "26")]
		protected virtual Vector3 GetHomeSnapLocation(Quaternion snapOrient)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0xFA9F94", Offset = "0xFA9F94", VA = "0xFA9F94", Slot = "27")]
		protected virtual TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0xFAA350", Offset = "0xFAA350", VA = "0xFAA350", Slot = "28")]
		protected virtual void OnEndUpdateWithDesiredTransform()
		{
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0xFAA354", Offset = "0xFAA354", VA = "0xFAA354")]
		public void PinFromSave()
		{
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0xFAA5A8", Offset = "0xFAA5A8", VA = "0xFAA5A8")]
		public void SetPinned(bool bPin, bool fromSave = false)
		{
		}

		[Token(Token = "0x6002E9A")]
		[Address(RVA = "0xFAA3CC", Offset = "0xFAA3CC", VA = "0xFAA3CC")]
		public void Pin(bool bPin, bool fromSave = false)
		{
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0xFAA740", Offset = "0xFAA740", VA = "0xFAA740")]
		public void VisualizePinState()
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0xFAA8AC", Offset = "0xFAA8AC", VA = "0xFAA8AC", Slot = "29")]
		protected virtual void InitPin()
		{
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0xFAA8EC", Offset = "0xFAA8EC", VA = "0xFAA8EC", Slot = "30")]
		public virtual void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0xFAAAFC", Offset = "0xFAAAFC", VA = "0xFAAAFC", Slot = "31")]
		public virtual void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002E9F")]
		[Address(RVA = "0xFAAB08", Offset = "0xFAAB08", VA = "0xFAAB08", Slot = "32")]
		protected virtual void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002EA0")]
		[Address(RVA = "0xFAAB10", Offset = "0xFAAB10", VA = "0xFAAB10", Slot = "33")]
		public virtual bool HasHoverInteractions()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0xFAAB18", Offset = "0xFAAB18", VA = "0xFAAB18", Slot = "34")]
		public virtual void AssignHoverControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0xFAAB1C", Offset = "0xFAAB1C", VA = "0xFAAB1C", Slot = "35")]
		public virtual void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0xFAABF8", Offset = "0xFAABF8", VA = "0xFAABF8")]
		protected bool PointInCollider(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0xFAAD38", Offset = "0xFAAD38", VA = "0xFAAD38", Slot = "36")]
		public virtual float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0xFAB078", Offset = "0xFAB078", VA = "0xFAB078", Slot = "38")]
		protected virtual Transform GetOriginHomeXf()
		{
			return null;
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0xFAB0E8", Offset = "0xFAB0E8", VA = "0xFAB0E8", Slot = "39")]
		protected virtual void OnShow()
		{
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xFAB0EC", Offset = "0xFAB0EC", VA = "0xFAB0EC", Slot = "40")]
		protected virtual void OnHide()
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0xFAB200", Offset = "0xFAB200", VA = "0xFAB200", Slot = "41")]
		protected virtual void OnTossComplete()
		{
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0xFAB204", Offset = "0xFAB204", VA = "0xFAB204")]
		public void InitIntroAnim(TrTransform xfSpawn, TrTransform xfTarget, bool bFaceUser, [Optional] Quaternion? endForward)
		{
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0xFAB5B8", Offset = "0xFAB5B8", VA = "0xFAB5B8", Slot = "42")]
		protected virtual void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0xFAB634", Offset = "0xFAB634", VA = "0xFAB634", Slot = "43")]
		protected virtual void UpdateIntroAnim()
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xFAB87C", Offset = "0xFAB87C", VA = "0xFAB87C", Slot = "44")]
		public virtual void OnPreDestroy()
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xFAB880", Offset = "0xFAB880", VA = "0xFAB880", Slot = "45")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0xFAB90C", Offset = "0xFAB90C", VA = "0xFAB90C", Slot = "46")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xFAB910", Offset = "0xFAB910", VA = "0xFAB910", Slot = "47")]
		protected virtual void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0xFABB50", Offset = "0xFABB50", VA = "0xFABB50", Slot = "48")]
		protected virtual void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002EB2")]
		[Address(RVA = "0xFABEAC", Offset = "0xFABEAC", VA = "0xFABEAC", Slot = "49")]
		protected virtual void OnUserBeginTwoHandGrab(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInObject)
		{
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0xFABEB0", Offset = "0xFABEB0", VA = "0xFABEB0", Slot = "50")]
		protected virtual void OnUserEndTwoHandGrab()
		{
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0xFABEB4", Offset = "0xFABEB4", VA = "0xFABEB4", Slot = "51")]
		public virtual Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0xFABEC8", Offset = "0xFABEC8", VA = "0xFABEC8", Slot = "52")]
		public virtual float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0xFA5AF0", Offset = "0xFA5AF0", VA = "0xFA5AF0")]
		public void SetSignedWidgetSize(float fScale)
		{
		}

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0xFABED0", Offset = "0xFABED0", VA = "0xFABED0", Slot = "53")]
		protected virtual void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002EB8")]
		[Address(RVA = "0xFABED4", Offset = "0xFABED4", VA = "0xFABED4", Slot = "54")]
		public virtual bool HasGPUIntersectionObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0xFABEDC", Offset = "0xFABEDC", VA = "0xFABEDC", Slot = "55")]
		public virtual void SetGPUIntersectionObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0xFABEE0", Offset = "0xFABEE0", VA = "0xFABEE0", Slot = "56")]
		public virtual void RestoreGPUIntersectionObjectLayer()
		{
		}

		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0xFABEE4", Offset = "0xFABEE4", VA = "0xFABEE4", Slot = "57")]
		public virtual bool CanGrabDuringDeselection()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBC")]
		[Address(RVA = "0xFABEEC", Offset = "0xFABEEC", VA = "0xFABEEC", Slot = "58")]
		public virtual void RecordAndApplyScaleToAxis(float deltaScale, Axis axis)
		{
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0xFABEF0", Offset = "0xFABEF0", VA = "0xFABEF0", Slot = "59")]
		public virtual bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBE")]
		[Address(RVA = "0xFABEF8", Offset = "0xFABEF8", VA = "0xFABEF8", Slot = "60")]
		public virtual void RestoreGameObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0xFABF24", Offset = "0xFABF24", VA = "0xFABF24", Slot = "61")]
		public virtual bool DistanceToCollider(Ray ray, out float fDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0xFABF30", Offset = "0xFABF30", VA = "0xFABF30")]
		public void AllowHideWithToss(bool bAllowHide)
		{
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0xFABF94", Offset = "0xFABF94", VA = "0xFABF94")]
		public GrabWidget()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class GrabWidgetHome : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrTransform m_Transform_SS;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SnapHomeDistance;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_ScaleInSpeed;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_UseOrientationOfOwner;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_HintDistance;

		[Token(Token = "0x4002DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_InHomeRange;

		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_Owner;

		[Token(Token = "0x4002DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Renderer m_Renderer;

		[Token(Token = "0x4002DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter m_MeshFilter;

		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_BaseScale;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_ScaleValue;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IsFixedPosition;

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xFAC1D0", Offset = "0xFAC1D0", VA = "0xFAC1D0")]
		public bool ShouldSnapHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xFAC1D8", Offset = "0xFAC1D8", VA = "0xFAC1D8")]
		public void Init()
		{
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xFAC300", Offset = "0xFAC300", VA = "0xFAC300")]
		public void SetOwner(Transform owner)
		{
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0xFAC30C", Offset = "0xFAC30C", VA = "0xFAC30C")]
		public void SetFixedPosition(Vector3 vPos_SS)
		{
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0xFAC3C0", Offset = "0xFAC3C0", VA = "0xFAC3C0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0xFAC40C", Offset = "0xFAC40C", VA = "0xFAC40C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002ED4")]
		[Address(RVA = "0xFAC638", Offset = "0xFAC638", VA = "0xFAC638")]
		public bool WithinRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xFAC6C4", Offset = "0xFAC6C4", VA = "0xFAC6C4")]
		public bool WithinHintRange(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xFAC750", Offset = "0xFAC750", VA = "0xFAC750")]
		public void RenderHighlight()
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xFAC7B8", Offset = "0xFAC7B8", VA = "0xFAC7B8")]
		public GrabWidgetHome()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	public class ImageWidget : Media2dWidget
	{
		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private float m_VertCountScalar;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private bool m_UseLegacyTint;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private ReferenceImage m_ReferenceImage;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private bool m_TextureAcquired;

		[Token(Token = "0x1700077B")]
		public string FileName
		{
			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0x13CEDE8", Offset = "0x13CEDE8", VA = "0x13CEDE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700077C")]
		public override float? AspectRatio
		{
			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0x13CEE88", Offset = "0x13CEE88", VA = "0x13CEE88", Slot = "64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700077D")]
		public bool UseLegacyTint
		{
			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0x13CEF28", Offset = "0x13CEF28", VA = "0x13CEF28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0x13CEF30", Offset = "0x13CEF30", VA = "0x13CEF30")]
			set
			{
			}
		}

		[Token(Token = "0x1700077E")]
		public ReferenceImage ReferenceImage
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0x13CF738", Offset = "0x13CF738", VA = "0x13CF738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0x13CF2BC", Offset = "0x13CF2BC", VA = "0x13CF2BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002ED8")]
		private static T Unused<T>(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x13CEFC4", Offset = "0x13CEFC4", VA = "0x13CEFC4", Slot = "45")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x13CF028", Offset = "0x13CF028", VA = "0x13CF028", Slot = "19")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0x13CF5E0", Offset = "0x13CF5E0", VA = "0x13CF5E0", Slot = "20")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x13CF684", Offset = "0x13CF684", VA = "0x13CF684", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x13CF6AC", Offset = "0x13CF6AC", VA = "0x13CF6AC", Slot = "63")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x13CF608", Offset = "0x13CF608", VA = "0x13CF608")]
		private void AcquireTexture()
		{
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x13CEFEC", Offset = "0x13CEFEC", VA = "0x13CEFEC")]
		private void ReleaseTexture()
		{
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x13CF740", Offset = "0x13CF740", VA = "0x13CF740")]
		public bool IsImageValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x13CF754", Offset = "0x13CF754", VA = "0x13CF754")]
		public bool GetPixel(float u, float v, out Color pixelColor)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x13CF7DC", Offset = "0x13CF7DC", VA = "0x13CF7DC")]
		public static void FromTiltImage(TiltImages75 tiltImage)
		{
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x13CFBA8", Offset = "0x13CFBA8", VA = "0x13CFBA8")]
		public ImageWidget()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	public abstract class Media2dWidget : MediaWidget
	{
		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		protected Texture2D m_NoImageTexture;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		protected float m_StartScale;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		protected float m_ColliderBloat;

		[Token(Token = "0x4002DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected float m_MeshScalar;

		[Token(Token = "0x4002DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		protected Transform m_Background;

		[Token(Token = "0x4002DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		protected Transform m_Missing;

		[Token(Token = "0x4002DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		protected TextMesh m_MissingText;

		[Token(Token = "0x4002DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		protected GameObject m_MissingQuestionMark;

		[Token(Token = "0x4002DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		protected float m_QuestionMarkScalar;

		[Token(Token = "0x4002DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		protected float m_MinTextSize;

		[Token(Token = "0x4002DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		protected int m_TiltMeterCost;

		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Renderer m_ImageQuad;

		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected Renderer m_TextRenderer;

		[Token(Token = "0x4002DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected Vector3 m_BaseScale;

		[Token(Token = "0x4002DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		protected float m_TransitionScale;

		[Token(Token = "0x4002DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		protected float m_BGThickness;

		[Token(Token = "0x4002DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		protected float m_BGDist;

		[Token(Token = "0x4002DDD")]
		protected const float m_MaxHomeSnapDistance = 0.001f;

		[Token(Token = "0x4002DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		protected float m_HomeZFightingOffset;

		[Token(Token = "0x4002DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		protected int m_NumVertsTrackedByWidgetManager;

		[Token(Token = "0x4002DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB37284", Offset = "0xB37284")]
		protected (string, float)? m_MissingInfo;

		[Token(Token = "0x1700077F")]
		public abstract float? AspectRatio
		{
			[Token(Token = "0x6002EEA")]
			get;
		}

		[Token(Token = "0x17000780")]
		public Texture ImageTexture
		{
			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0x10DF9E8", Offset = "0x10DF9E8", VA = "0x10DF9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0x10DFA14", Offset = "0x10DFA14", VA = "0x10DFA14")]
			set
			{
			}
		}

		[Token(Token = "0x17000781")]
		public TrTransform SaveTransform
		{
			[Token(Token = "0x6002EED")]
			[Address(RVA = "0x10DFA50", Offset = "0x10DFA50", VA = "0x10DFA50")]
			get
			{
				return default(TrTransform);
			}
		}

		[Token(Token = "0x17000782")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0x10DFB28", Offset = "0x10DFB28", VA = "0x10DFB28", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000783")]
		public override float MaxAxisScale
		{
			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0x10DFBF4", Offset = "0x10DFBF4", VA = "0x10DFBF4", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000784")]
		public int NumVertsTrackedByWidgetManager
		{
			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0x10DFC70", Offset = "0x10DFC70", VA = "0x10DFC70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x10DFC78", Offset = "0x10DFC78", VA = "0x10DFC78", Slot = "13")]
		public override int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x10DFC80", Offset = "0x10DFC80", VA = "0x10DFC80", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x10DFF9C", Offset = "0x10DFF9C", VA = "0x10DFF9C", Slot = "30")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x10E0208", Offset = "0x10E0208", VA = "0x10E0208", Slot = "38")]
		protected override Transform GetOriginHomeXf()
		{
			return null;
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x10E0334", Offset = "0x10E0334", VA = "0x10E0334", Slot = "29")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x10E03AC", Offset = "0x10E03AC", VA = "0x10E03AC", Slot = "53")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x10E0478", Offset = "0x10E0478", VA = "0x10E0478", Slot = "62")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x10E06EC", Offset = "0x10E06EC", VA = "0x10E06EC", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x10E0754", Offset = "0x10E0754", VA = "0x10E0754", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0x10E07A4", Offset = "0x10E07A4", VA = "0x10E07A4")]
		public void SetMissing(float aspectRatio, string fileName)
		{
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x10E0A54", Offset = "0x10E0A54", VA = "0x10E0A54", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0x10E0BE8", Offset = "0x10E0BE8", VA = "0x10E0BE8")]
		protected Media2dWidget()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public abstract class MediaWidget : GrabWidget
	{
		[Token(Token = "0x4002DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		protected Renderer m_SelectionIndicatorRenderer;

		[Token(Token = "0x4002DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		protected Vector3 m_ContainerBloat;

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		protected bool m_UngrabbableFromInside;

		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected float m_MinSize_CS;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		protected float m_MaxSize_CS;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected float m_Size;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		protected bool m_LoadingFromSketch;

		[Token(Token = "0x17000785")]
		public bool LoadingFromSketch
		{
			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0x10E0C70", Offset = "0x10E0C70", VA = "0x10E0C70")]
			set
			{
			}
		}

		[Token(Token = "0x17000786")]
		public override bool SupportsNegativeSize
		{
			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x10E0C7C", Offset = "0x10E0C7C", VA = "0x10E0C7C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x10DFEA8", Offset = "0x10DFEA8", VA = "0x10DFEA8", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0x10E0C84", Offset = "0x10E0C84", VA = "0x10E0C84", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x10E0364", Offset = "0x10E0364", VA = "0x10E0364", Slot = "29")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002F02")]
		protected abstract void UpdateScale();

		[Token(Token = "0x6002F03")]
		public abstract string GetExportName();

		[Token(Token = "0x6002F04")]
		[Address(RVA = "0x10E0D30", Offset = "0x10E0D30", VA = "0x10E0D30", Slot = "52")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0x10E0D38", Offset = "0x10E0D38", VA = "0x10E0D38", Slot = "51")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0x10E0DAC", Offset = "0x10E0DAC", VA = "0x10E0DAC", Slot = "20")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0x10E0DBC", Offset = "0x10E0DBC", VA = "0x10E0DBC")]
		private void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x10E03F4", Offset = "0x10E03F4", VA = "0x10E03F4", Slot = "53")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x10E0090", Offset = "0x10E0090", VA = "0x10E0090", Slot = "30")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x10E0C04", Offset = "0x10E0C04", VA = "0x10E0C04")]
		protected MediaWidget()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	public class ModelWidget : MediaWidget
	{
		[Serializable]
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE74", Offset = "0xB2AE74")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Renderer, IEnumerable<Material>> <>9__29_0;

			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x1002BB0", Offset = "0x1002BB0", VA = "0x1002BB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x1002BB8", Offset = "0x1002BB8", VA = "0x1002BB8")]
			internal IEnumerable<Material> <Clone>b__29_0(Renderer x)
			{
				return null;
			}
		}

		[Token(Token = "0x4002DE8")]
		private const float kInitialSizeMeters_RS = 0.25f;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float m_MinContainerRatio;

		[Token(Token = "0x4002DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		private float m_MaxBloat;

		[Token(Token = "0x4002DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Model m_Model;

		[Token(Token = "0x4002DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform m_ModelInstance;

		[Token(Token = "0x4002DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private ObjModelScript m_ObjModelScript;

		[Token(Token = "0x4002DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float m_InitSize_CS;

		[Token(Token = "0x4002DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_HideSize_CS;

		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool m_PolyCallbackActive;

		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private int m_NumVertsTrackedByWidgetManager;

		[Token(Token = "0x17000787")]
		public string AssetId
		{
			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0xF39F74", Offset = "0xF39F74", VA = "0xF39F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000788")]
		public Model Model
		{
			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0xF39FAC", Offset = "0xF39FAC", VA = "0xF39FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F0E")]
			[Address(RVA = "0xF380FC", Offset = "0xF380FC", VA = "0xF380FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000789")]
		protected override Vector3 HomeSnapOffset
		{
			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0xF3A5CC", Offset = "0xF3A5CC", VA = "0xF3A5CC", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700078A")]
		public override float MaxAxisScale
		{
			[Token(Token = "0x6002F11")]
			[Address(RVA = "0xF3A794", Offset = "0xF3A794", VA = "0xF3A794", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700078B")]
		public Bounds WorldSpaceBounds
		{
			[Token(Token = "0x6002F12")]
			[Address(RVA = "0xF3A878", Offset = "0xF3A878", VA = "0xF3A878")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700078C")]
		public int NumVertsTrackedByWidgetManager
		{
			[Token(Token = "0x6002F13")]
			[Address(RVA = "0xF3A8C4", Offset = "0xF3A8C4", VA = "0xF3A8C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0xF39F90", Offset = "0xF39F90", VA = "0xF39F90")]
		public MeshFilter[] GetMeshes()
		{
			return null;
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0xF3A6B0", Offset = "0xF3A6B0", VA = "0xF3A6B0", Slot = "26")]
		protected override Vector3 GetHomeSnapLocation(Quaternion snapOrient)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0xF3A8CC", Offset = "0xF3A8CC", VA = "0xF3A8CC", Slot = "13")]
		public override int GetTiltMeterCost()
		{
			return default(int);
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0xF3A960", Offset = "0xF3A960", VA = "0xF3A960")]
		public int GetNumVertsInModel()
		{
			return default(int);
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0xF3A9F4", Offset = "0xF3A9F4", VA = "0xF3A9F4", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0xF3AAB0", Offset = "0xF3AAB0", VA = "0xF3AAB0", Slot = "44")]
		public override void OnPreDestroy()
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0xF3AB88", Offset = "0xF3AB88", VA = "0xF3AB88", Slot = "19")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0xF3B3CC", Offset = "0xF3B3CC", VA = "0xF3B3CC", Slot = "17")]
		protected override void OnHideStart()
		{
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0xF3B3D8", Offset = "0xF3B3D8", VA = "0xF3B3D8")]
		public void OnPacCatalogChanged()
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0xF3B4E8", Offset = "0xF3B4E8", VA = "0xF3B4E8", Slot = "63")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0xF39FB4", Offset = "0xF39FB4", VA = "0xF39FB4")]
		private void LoadModel()
		{
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0xF3B5C0", Offset = "0xF3B5C0", VA = "0xF3B5C0", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0xF3B500", Offset = "0xF3B500", VA = "0xF3B500")]
		private static Vector3 GetBoundsRatios(Bounds bounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0xF3B724", Offset = "0xF3B724", VA = "0xF3B724", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0xF3B7AC", Offset = "0xF3B7AC", VA = "0xF3B7AC", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0xF3BA7C", Offset = "0xF3BA7C", VA = "0xF3BA7C", Slot = "43")]
		protected override void UpdateIntroAnim()
		{
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0xF3BAC4", Offset = "0xF3BAC4", VA = "0xF3BAC4", Slot = "62")]
		protected override void UpdateScale()
		{
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0xF3BB68", Offset = "0xF3BB68", VA = "0xF3BB68", Slot = "29")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0xF3BBA0", Offset = "0xF3BBA0", VA = "0xF3BBA0", Slot = "31")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0xF3BBA8", Offset = "0xF3BBA8", VA = "0xF3BBA8", Slot = "32")]
		protected override void UnregisterHighlight()
		{
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0xF3BBB0", Offset = "0xF3BBB0", VA = "0xF3BBB0")]
		public TrTransform GetSaveTransform()
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0xF3BC88", Offset = "0xF3BC88", VA = "0xF3BC88", Slot = "51")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0xF3BD4C", Offset = "0xF3BD4C", VA = "0xF3BD4C")]
		public void SetWidgetSizeNonRaw(float fScale)
		{
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0xF3B7F4", Offset = "0xF3B7F4", VA = "0xF3B7F4")]
		protected void SetWidgetSizeAboutCenterOfMass(float size)
		{
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0xF3BDD4", Offset = "0xF3BDD4", VA = "0xF3BDD4")]
		public static void CreateFromSaveData(TiltModels75 modelDatas)
		{
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0xF39ABC", Offset = "0xF39ABC", VA = "0xF39ABC")]
		public static bool CreateModelsFromRelativePath(string relativePath, TrTransform[] xfs, TrTransform[] rawXfs, bool[] pinStates, uint[] groupIds)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0xF3C09C", Offset = "0xF3C09C", VA = "0xF3C09C")]
		private static void CreateModel(Model model, TrTransform xf, bool pin, bool isNonRawTransform, uint groupId, [Optional] string assetId)
		{
		}

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0xF3BEC4", Offset = "0xF3BEC4", VA = "0xF3BEC4")]
		private static void CreateModelsFromAssetId(string assetId, TrTransform[] rawXfs, bool[] pinStates, uint[] groupIds)
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0xF3C3E4", Offset = "0xF3C3E4", VA = "0xF3C3E4", Slot = "54")]
		public override bool HasGPUIntersectionObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0xF3C450", Offset = "0xF3C450", VA = "0xF3C450", Slot = "55")]
		public override void SetGPUIntersectionObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0xF3C45C", Offset = "0xF3C45C", VA = "0xF3C45C", Slot = "56")]
		public override void RestoreGPUIntersectionObjectLayer()
		{
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0xF3C470", Offset = "0xF3C470", VA = "0xF3C470", Slot = "59")]
		public override bool CanSnapToHome()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0xF3C4D8", Offset = "0xF3C4D8", VA = "0xF3C4D8")]
		public ModelWidget()
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class PanelWidget : GrabWidget
	{
		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE84", Offset = "0xB2AE84")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshRenderer[] meshes;

			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x10E8BC4", Offset = "0x10E8BC4", VA = "0x10E8BC4")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x10E8BCC", Offset = "0x10E8BCC", VA = "0x10E8BCC")]
			internal bool <RemovePromoMeshesFromTintable>b__0(Renderer m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Transform m_Border;

		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private float m_GrabFixedMaxFacingAngle;

		[Token(Token = "0x4002DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private BasePanel m_PanelSibling;

		[Token(Token = "0x4002DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float m_PreviousShowRatio;

		[Token(Token = "0x1700078D")]
		public BasePanel PanelSibling
		{
			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x113F948", Offset = "0x113F948", VA = "0x113F948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x113F950", Offset = "0x113F950", VA = "0x113F950")]
		public bool IsAnimating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x11379AC", Offset = "0x11379AC", VA = "0x11379AC")]
		public void ForceVisibleForInit()
		{
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x113799C", Offset = "0x113799C", VA = "0x113799C")]
		public void ForceInvisibleForInit()
		{
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x113FA20", Offset = "0x113FA20", VA = "0x113FA20", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x113FB78", Offset = "0x113FB78", VA = "0x113FB78", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x113FC50", Offset = "0x113FC50", VA = "0x113FC50", Slot = "42")]
		protected override void UpdateIntroAnimState()
		{
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x113FD08", Offset = "0x113FD08", VA = "0x113FD08", Slot = "14")]
		public override bool IsCollisionEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x113FD44", Offset = "0x113FD44", VA = "0x113FD44", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x113FE78", Offset = "0x113FE78", VA = "0x113FE78", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x113FF34", Offset = "0x113FF34", VA = "0x113FF34", Slot = "41")]
		protected override void OnTossComplete()
		{
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x113F960", Offset = "0x113F960", VA = "0x113F960")]
		private void UpdatePanelScale(float fShowRatio)
		{
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x113B880", Offset = "0x113B880", VA = "0x113B880")]
		public void SetActiveTintToShowError(bool bError)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x113FF58", Offset = "0x113FF58", VA = "0x113FF58", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x11400B0", Offset = "0x11400B0", VA = "0x11400B0")]
		public void RemovePromoMeshesFromTintable(MeshRenderer[] meshes)
		{
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x11401C0", Offset = "0x11401C0", VA = "0x11401C0")]
		public void AddPromoMeshesToTintable(MeshRenderer[] meshes)
		{
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x1140240", Offset = "0x1140240", VA = "0x1140240", Slot = "27")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x1140328", Offset = "0x1140328", VA = "0x1140328", Slot = "47")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0x11403B8", Offset = "0x11403B8", VA = "0x11403B8", Slot = "48")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x114042C", Offset = "0x114042C", VA = "0x114042C", Slot = "31")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0x1140430", Offset = "0x1140430", VA = "0x1140430", Slot = "57")]
		public override bool CanGrabDuringDeselection()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x1140438", Offset = "0x1140438", VA = "0x1140438")]
		public PanelWidget()
		{
		}
	}
	[Token(Token = "0x2000703")]
	public class PlanarWidget : GrabWidget
	{
		[Token(Token = "0x4002DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		protected Transform m_LeftBorder;

		[Token(Token = "0x4002DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		protected Transform m_RightBorder;

		[Token(Token = "0x4002DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		protected Transform m_Title;

		[Token(Token = "0x4002DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected Transform m_DismissMessage;

		[Token(Token = "0x4002DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		protected float m_MeshScalar;

		[Token(Token = "0x4002DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		protected float m_BorderOffset;

		[Token(Token = "0x4002E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		protected float m_BorderScale;

		[Token(Token = "0x4002E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		protected Vector2 m_ScaleRange;

		[Token(Token = "0x4002E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		protected float m_SpawnPlacementHeightPercent;

		[Token(Token = "0x4002E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected float m_SpawnPlacementDistance;

		[Token(Token = "0x4002E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		protected float m_ColliderBloat;

		[Token(Token = "0x4002E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Vector2 m_DismissTextSize;

		[Token(Token = "0x4002E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float m_CurrentScale;

		[Token(Token = "0x4002E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3 m_BaseScale;

		[Token(Token = "0x4002E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float m_TransitionScale;

		[Token(Token = "0x4002E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		protected float m_AspectRatio;

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0x10276E4", Offset = "0x10276E4", VA = "0x10276E4", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x1027A68", Offset = "0x1027A68", VA = "0x1027A68", Slot = "18")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0x1027BD8", Offset = "0x1027BD8", VA = "0x1027BD8", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0x10277DC", Offset = "0x10277DC", VA = "0x10277DC")]
		protected void UpdateScale()
		{
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0x1027C1C", Offset = "0x1027C1C", VA = "0x1027C1C", Slot = "51")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x1027C28", Offset = "0x1027C28", VA = "0x1027C28", Slot = "52")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0x1027C30", Offset = "0x1027C30", VA = "0x1027C30", Slot = "53")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x1027C64", Offset = "0x1027C64", VA = "0x1027C64")]
		public PlanarWidget()
		{
		}
	}
	[Token(Token = "0x2000704")]
	public class SelectionWidget : GrabWidget
	{
		[Token(Token = "0x4002E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private CanvasScript m_SelectionCanvas;

		[Token(Token = "0x4002E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private TrTransform m_xfOriginal_SS;

		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Bounds? m_SelectionBounds_CS;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private InputManager.ControllerName? m_CurrentIntersectionController;

		[Token(Token = "0x4002E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private InputManager.ControllerName? m_NextIntersectionController;

		[Token(Token = "0x4002E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private GpuIntersector.FutureBatchResult m_IntersectionFuture;

		[Token(Token = "0x4002E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<InputManager.ControllerName, float> m_LastIntersectionResult;

		[Token(Token = "0x4002E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int m_IntersectionFrame;

		[Token(Token = "0x4002E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector2 m_SizeRange;

		[Token(Token = "0x1700078E")]
		public override bool AllowDormancy
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0xE7B010", Offset = "0xE7B010", VA = "0xE7B010", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700078F")]
		public override float HapticDuration
		{
			[Token(Token = "0x6002F59")]
			[Address(RVA = "0xE7B07C", Offset = "0xE7B07C", VA = "0xE7B07C", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000790")]
		public TrTransform SelectionTransform
		{
			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0xE7B2A8", Offset = "0xE7B2A8", VA = "0xE7B2A8")]
			get
			{
				return default(TrTransform);
			}
			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0xE74230", Offset = "0xE74230", VA = "0xE74230")]
			set
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public event Action<TrTransform> SelectionTransformed
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0xE731E8", Offset = "0xE731E8", VA = "0xE731E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45954", Offset = "0xB45954")]
			add
			{
			}
			[Token(Token = "0x6002F57")]
			[Address(RVA = "0xE7AF6C", Offset = "0xE7AF6C", VA = "0xE7AF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45964", Offset = "0xB45964")]
			remove
			{
			}
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0xE7B088", Offset = "0xE7B088", VA = "0xE7B088", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0xE7B170", Offset = "0xE7B170", VA = "0xE7B170", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0xE7B1FC", Offset = "0xE7B1FC", VA = "0xE7B1FC", Slot = "16")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0xE7B398", Offset = "0xE7B398", VA = "0xE7B398", Slot = "35")]
		public override void AssignControllerMaterials(InputManager.ControllerName controller)
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0xE744BC", Offset = "0xE744BC", VA = "0xE744BC")]
		public void SetSelectionBounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0xE74610", Offset = "0xE74610", VA = "0xE74610")]
		public void SelectionCleared()
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0xE7B86C", Offset = "0xE7B86C", VA = "0xE7B86C", Slot = "52")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0xE7B898", Offset = "0xE7B898", VA = "0xE7B898", Slot = "53")]
		protected override void SetWidgetSizeInternal(float fSize)
		{
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0xE7B998", Offset = "0xE7B998", VA = "0xE7B998", Slot = "51")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0xE745B4", Offset = "0xE745B4", VA = "0xE745B4")]
		public void UpdateSizeRange(Vector2 range)
		{
		}

		[Token(Token = "0x6002F66")]
		[Address(RVA = "0xE74588", Offset = "0xE74588", VA = "0xE74588")]
		public void ResetSizeRange()
		{
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0xE7B9A4", Offset = "0xE7B9A4", VA = "0xE7B9A4", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos_GS, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0xE7BD38", Offset = "0xE7BD38", VA = "0xE7BD38", Slot = "28")]
		protected override void OnEndUpdateWithDesiredTransform()
		{
		}

		[Token(Token = "0x6002F69")]
		[Address(RVA = "0xE7BDBC", Offset = "0xE7BDBC", VA = "0xE7BDBC", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0xE7BE40", Offset = "0xE7BE40", VA = "0xE7BE40")]
		private void OnScenePoseChanged(TrTransform prev, TrTransform current)
		{
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0xE7B55C", Offset = "0xE7B55C", VA = "0xE7B55C")]
		private void UpdateBoxCollider()
		{
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0xE7BE44", Offset = "0xE7BE44", VA = "0xE7BE44")]
		public void PreventSelectionFromMoving(bool preventMoving)
		{
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0xE7BE50", Offset = "0xE7BE50", VA = "0xE7BE50", Slot = "47")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0xE7BF6C", Offset = "0xE7BF6C", VA = "0xE7BF6C")]
		public SelectionWidget()
		{
		}
	}
	[Token(Token = "0x2000705")]
	public class SphereStencil : StencilWidget
	{
		[Token(Token = "0x17000791")]
		public override Vector3 Extents
		{
			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0x11AB928", Offset = "0x11AB928", VA = "0x11AB928", Slot = "62")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x11AB958", Offset = "0x11AB958", VA = "0x11AB958", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x11AB9C4", Offset = "0x11AB9C4", VA = "0x11AB9C4", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x11ABE28", Offset = "0x11ABE28", VA = "0x11ABE28", Slot = "66")]
		public override void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x11ABF88", Offset = "0x11ABF88", VA = "0x11ABF88", Slot = "36")]
		public override float GetActivationScore(Vector3 vControllerPos, InputManager.ControllerName name)
		{
			return default(float);
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x11AC0B8", Offset = "0x11AC0B8", VA = "0x11AC0B8", Slot = "64")]
		protected override Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0x11AC0C0", Offset = "0x11AC0C0", VA = "0x11AC0C0", Slot = "65")]
		protected override void RegisterHighlightForSpecificAxis(Axis highlightAxis)
		{
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x11AC100", Offset = "0x11AC100", VA = "0x11AC100", Slot = "11")]
		public override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent)
		{
			return default(Axis);
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x11AC20C", Offset = "0x11AC20C", VA = "0x11AC20C", Slot = "12")]
		public override Bounds GetBounds_SelectionCanvasSpace()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x11AC5BC", Offset = "0x11AC5BC", VA = "0x11AC5BC")]
		public SphereStencil()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public class StencilRaycastHint : MonoBehaviour
	{
		[Token(Token = "0x4002E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_RaycastHint;

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x11B17D0", Offset = "0x11B17D0", VA = "0x11B17D0")]
		public StencilRaycastHint()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public abstract class StencilWidget : GrabWidget
	{
		[Serializable]
		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AE94", Offset = "0xB2AE94")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Renderer, MeshFilter> <>9__26_0;

			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Renderer, IEnumerable<Material>> <>9__27_0;

			[Token(Token = "0x6002F9E")]
			[Address(RVA = "0xF2270C", Offset = "0xF2270C", VA = "0xF2270C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0xF22714", Offset = "0xF22714", VA = "0xF22714")]
			internal MeshFilter <Awake>b__26_0(Renderer x)
			{
				return null;
			}

			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0xF22768", Offset = "0xF22768", VA = "0xF22768")]
			internal IEnumerable<Material> <Clone>b__27_0(Renderer x)
			{
				return null;
			}
		}

		[Token(Token = "0x4002E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		protected float m_MinSize_CS;

		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		protected float m_MaxSize_CS;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private Color m_TintColor;

		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		protected float m_StencilGrabDistance;

		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		protected float m_PointerLiftSlope;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected Collider m_Collider;

		[Token(Token = "0x4002E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected float m_Size;

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		protected StencilType m_Type;

		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool m_SkipIntroAnim;

		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private float m_PreviousShowRatio;

		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected Vector3 m_KahanSummationC;

		[Token(Token = "0x4002E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		protected bool m_StickyTransformEnabled;

		[Token(Token = "0x4002E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected TrTransform m_StickyTransformBreakDelta;

		[Token(Token = "0x4002E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected Axis? m_LockedManipulationAxis;

		[Token(Token = "0x17000792")]
		public abstract Vector3 Extents
		{
			[Token(Token = "0x6002F7A")]
			get;
			[Token(Token = "0x6002F7B")]
			set;
		}

		[Token(Token = "0x17000793")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0x11B17D8", Offset = "0x11B17D8", VA = "0x11B17D8", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0x11B17E0", Offset = "0x11B17E0", VA = "0x11B17E0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000794")]
		public Guides.State SaveState
		{
			[Token(Token = "0x6002F7F")]
			[Address(RVA = "0x11B196C", Offset = "0x11B196C", VA = "0x11B196C")]
			set
			{
			}
		}

		[Token(Token = "0x17000795")]
		public StencilType Type
		{
			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x11B2BE8", Offset = "0x11B2BE8", VA = "0x11B2BE8")]
			get
			{
				return default(StencilType);
			}
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x11B17E4", Offset = "0x11B17E4", VA = "0x11B17E4")]
		public Guides.State GetSaveState(GroupIdMapping groupIdMapping)
		{
			return null;
		}

		[Token(Token = "0x6002F80")]
		protected abstract Axis GetInferredManipulationAxis(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInside);

		[Token(Token = "0x6002F81")]
		protected abstract void RegisterHighlightForSpecificAxis(Axis highlightAxis);

		[Token(Token = "0x6002F82")]
		public abstract override Axis GetScaleAxis(Vector3 handA, Vector3 handB, out Vector3 axisVec, out float extent);

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x11AB9EC", Offset = "0x11AB9EC", VA = "0x11AB9EC", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x11B1A24", Offset = "0x11B1A24", VA = "0x11B1A24", Slot = "19")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x11B21A4", Offset = "0x11B21A4", VA = "0x11B21A4", Slot = "66")]
		public virtual void FindClosestPointOnSurface(Vector3 pos, out Vector3 surfacePos, out Vector3 surfaceNorm)
		{
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0x11B2210", Offset = "0x11B2210", VA = "0x11B2210", Slot = "51")]
		public override Vector2 GetWidgetSizeRange()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0x11B221C", Offset = "0x11B221C", VA = "0x11B221C", Slot = "49")]
		protected override void OnUserBeginTwoHandGrab(Vector3 primaryHand, Vector3 secondaryHand, bool secondaryHandInObject)
		{
		}

		[Token(Token = "0x6002F88")]
		[Address(RVA = "0x11B2314", Offset = "0x11B2314", VA = "0x11B2314", Slot = "50")]
		protected override void OnUserEndTwoHandGrab()
		{
		}

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0x11B233C", Offset = "0x11B233C", VA = "0x11B233C", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0x11B267C", Offset = "0x11B267C", VA = "0x11B267C", Slot = "20")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0x11B268C", Offset = "0x11B268C", VA = "0x11B268C", Slot = "67")]
		public virtual void SetInUse(bool bInUse)
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x11B2428", Offset = "0x11B2428", VA = "0x11B2428")]
		public void RefreshVisibility(bool bStencilDisabled)
		{
		}

		[MethodImpl(64)]
		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x11B27F8", Offset = "0x11B27F8", VA = "0x11B27F8")]
		public void AdjustLift(float fDistance_CS)
		{
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x11B2B6C", Offset = "0x11B2B6C", VA = "0x11B2B6C", Slot = "68")]
		protected virtual void UpdateScale()
		{
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x11B2BCC", Offset = "0x11B2BCC", VA = "0x11B2BCC", Slot = "52")]
		public override float GetSignedWidgetSize()
		{
			return default(float);
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x11B2BD4", Offset = "0x11B2BD4", VA = "0x11B2BD4", Slot = "53")]
		protected override void SetWidgetSizeInternal(float fScale)
		{
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x11B2BF0", Offset = "0x11B2BF0", VA = "0x11B2BF0")]
		public static void FromGuideIndex(Guides guide)
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x11B24A8", Offset = "0x11B24A8", VA = "0x11B24A8")]
		protected void UpdateMaterialScale()
		{
		}

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x11B2ED0", Offset = "0x11B2ED0", VA = "0x11B2ED0", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x11B2F24", Offset = "0x11B2F24", VA = "0x11B2F24", Slot = "69")]
		protected virtual void SpoofScaleForShowAnim(float showRatio)
		{
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x11B2F84", Offset = "0x11B2F84", VA = "0x11B2F84", Slot = "47")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0x11B2FF8", Offset = "0x11B2FF8", VA = "0x11B2FF8", Slot = "48")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0x11B3068", Offset = "0x11B3068", VA = "0x11B3068", Slot = "31")]
		public override void RegisterHighlight()
		{
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x11B32EC", Offset = "0x11B32EC", VA = "0x11B32EC", Slot = "60")]
		public override void RestoreGameObjectLayer(int layer)
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x11B3478", Offset = "0x11B3478", VA = "0x11B3478", Slot = "29")]
		protected override void InitPin()
		{
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x11AC5C0", Offset = "0x11AC5C0", VA = "0x11AC5C0")]
		protected StencilWidget()
		{
		}

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x11B2EC0", Offset = "0x11B2EC0", VA = "0x11B2EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45974", Offset = "0xB45974")]
		internal static Vector3 <UpdateMaterialScale>g__Mul|43_0(Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000709")]
	public class GuideBeam
	{
		[Token(Token = "0x4002E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Beam;

		[Token(Token = "0x4002E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SymmetryWidget.BeamDirection m_Direction;

		[NonSerialized]
		[Token(Token = "0x4002E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_BeamRenderer;

		[NonSerialized]
		[Token(Token = "0x4002E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_Offset;

		[NonSerialized]
		[Token(Token = "0x4002E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_BaseScale;

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0xFADDBC", Offset = "0xFADDBC", VA = "0xFADDBC")]
		public GuideBeam()
		{
		}
	}
	[Token(Token = "0x200070A")]
	public class SymmetryWidget : GrabWidget
	{
		[Token(Token = "0x200070B")]
		public enum BeamDirection
		{
			[Token(Token = "0x4002E3B")]
			Up,
			[Token(Token = "0x4002E3C")]
			Down,
			[Token(Token = "0x4002E3D")]
			Left,
			[Token(Token = "0x4002E3E")]
			Right,
			[Token(Token = "0x4002E3F")]
			Front,
			[Token(Token = "0x4002E40")]
			Back
		}

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Renderer m_LeftRightMesh;

		[Token(Token = "0x4002E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private TextMeshPro m_TitleText;

		[Token(Token = "0x4002E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private GameObject m_HintText;

		[Token(Token = "0x4002E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private GrabWidgetHome m_Home;

		[Token(Token = "0x4002E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private GuideBeam[] m_GuideBeams;

		[Token(Token = "0x4002E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float m_GuideBeamLength;

		[Token(Token = "0x4002E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float m_GuideBeamShowRatio;

		[Token(Token = "0x4002E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Color m_SnapColor;

		[Token(Token = "0x4002E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private float m_SnapOrientationSpeed;

		[Token(Token = "0x4002E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float m_SnapAngleXZPlane;

		[Token(Token = "0x4002E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private float m_SnapXZPlaneStickyAmount;

		[Token(Token = "0x4002E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float m_SnapQuantizeAmount;

		[Token(Token = "0x4002E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float m_SnapStickyAngle;

		[Token(Token = "0x4002E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private float m_JumpToUserControllerOffsetDistance;

		[Token(Token = "0x4002E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private float m_JumpToUserControllerYOffset;

		[Token(Token = "0x17000796")]
		public Plane ReflectionPlane
		{
			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0x11B9D6C", Offset = "0x11B9D6C", VA = "0x11B9D6C")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x17000797")]
		public override Vector3 CustomDimension
		{
			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0x11B9E0C", Offset = "0x11B9E0C", VA = "0x11B9E0C", Slot = "9")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0x11B9E18", Offset = "0x11B9E18", VA = "0x11B9E18", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x11B9E68", Offset = "0x11B9E68", VA = "0x11B9E68", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x11BA09C", Offset = "0x11BA09C", VA = "0x11BA09C")]
		public void SetMode(PointerManager.SymmetryMode rMode)
		{
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x11BA1B0", Offset = "0x11BA1B0", VA = "0x11BA1B0", Slot = "27")]
		protected override TrTransform GetDesiredTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x11BA22C", Offset = "0x11BA22C", VA = "0x11BA22C", Slot = "46")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x11BAA18", Offset = "0x11BAA18", VA = "0x11BAA18", Slot = "25")]
		protected override TrTransform GetSnappedTransform(TrTransform xf_GS)
		{
			return default(TrTransform);
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0x11BAE9C", Offset = "0x11BAE9C", VA = "0x11BAE9C", Slot = "30")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x11BA94C", Offset = "0x11BA94C", VA = "0x11BA94C")]
		private Vector3 GetBeamDirection(BeamDirection rDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x11BAF9C", Offset = "0x11BAF9C", VA = "0x11BAF9C", Slot = "47")]
		protected override void OnUserBeginInteracting()
		{
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x11BAFF0", Offset = "0x11BAFF0", VA = "0x11BAFF0", Slot = "48")]
		protected override void OnUserEndInteracting()
		{
		}

		[Token(Token = "0x6002FAE")]
		[Address(RVA = "0x11BB158", Offset = "0x11BB158", VA = "0x11BB158")]
		public Mirror ToMirror()
		{
			return null;
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x11BB224", Offset = "0x11BB224", VA = "0x11BB224")]
		public void FromMirror(Mirror data)
		{
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0x11BB058", Offset = "0x11BB058", VA = "0x11BB058")]
		public void ResetToHome()
		{
		}

		[Token(Token = "0x6002FB1")]
		[Address(RVA = "0x11BB308", Offset = "0x11BB308", VA = "0x11BB308")]
		public void BringToUser()
		{
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x11BB608", Offset = "0x11BB608", VA = "0x11BB608", Slot = "18")]
		public override void Show(bool bShow, bool bPlayAudio = true)
		{
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x11BB6B4", Offset = "0x11BB6B4", VA = "0x11BB6B4")]
		public SymmetryWidget()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class VideoWidget : Media2dWidget
	{
		[Token(Token = "0x200070D")]
		private class VideoState
		{
			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Paused;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Volume;

			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float? Time;

			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0xF2B44C", Offset = "0xF2B44C", VA = "0xF2B44C")]
			public VideoState()
			{
			}
		}

		[Token(Token = "0x4002E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private ReferenceVideo m_Video;

		[Token(Token = "0x4002E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private VideoState m_InitialState;

		[Token(Token = "0x4002E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB37578", Offset = "0xB37578")]
		private ReferenceVideo.Controller <VideoController>k__BackingField;

		[Token(Token = "0x17000798")]
		public ReferenceVideo Video
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0xEFA2D4", Offset = "0xEFA2D4", VA = "0xEFA2D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000799")]
		public ReferenceVideo.Controller VideoController
		{
			[Token(Token = "0x6002FB5")]
			[Address(RVA = "0xEFA2DC", Offset = "0xEFA2DC", VA = "0xEFA2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45984", Offset = "0xB45984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0xEFA2E4", Offset = "0xEFA2E4", VA = "0xEFA2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45994", Offset = "0xB45994")]
			private set
			{
			}
		}

		[Token(Token = "0x1700079A")]
		public override float? AspectRatio
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0xEFA588", Offset = "0xEFA588", VA = "0xEFA588", Slot = "64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0xEFA2EC", Offset = "0xEFA2EC", VA = "0xEFA2EC")]
		public void SetVideo(ReferenceVideo video)
		{
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0xEFA600", Offset = "0xEFA600", VA = "0xEFA600", Slot = "39")]
		protected override void OnShow()
		{
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0xEFA628", Offset = "0xEFA628", VA = "0xEFA628", Slot = "20")]
		public override void RestoreFromToss()
		{
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0xEFA650", Offset = "0xEFA650", VA = "0xEFA650", Slot = "40")]
		protected override void OnHide()
		{
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0xEFA750", Offset = "0xEFA750", VA = "0xEFA750", Slot = "45")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0xEFA4B0", Offset = "0xEFA4B0", VA = "0xEFA4B0")]
		private void Play()
		{
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0xEFA788", Offset = "0xEFA788", VA = "0xEFA788")]
		private void OnVideoInitialized()
		{
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0xEFA884", Offset = "0xEFA884", VA = "0xEFA884")]
		public static void FromTiltVideo(TiltVideo tiltVideo)
		{
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0xEFAD74", Offset = "0xEFAD74", VA = "0xEFAD74", Slot = "19")]
		public override GrabWidget Clone()
		{
			return null;
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0xEFAFE8", Offset = "0xEFAFE8", VA = "0xEFAFE8", Slot = "30")]
		public override void Activate(bool bActive)
		{
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0xEFB03C", Offset = "0xEFB03C", VA = "0xEFB03C", Slot = "63")]
		public override string GetExportName()
		{
			return null;
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0xEFB0B0", Offset = "0xEFB0B0", VA = "0xEFB0B0")]
		public VideoWidget()
		{
		}
	}
	[Token(Token = "0x200070E")]
	public class WrappedStream : Stream
	{
		[Token(Token = "0x4002E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream m_wrapped;

		[Token(Token = "0x4002E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_ownsStream;

		[Token(Token = "0x1700079B")]
		public override bool CanRead
		{
			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0xF0F354", Offset = "0xF0F354", VA = "0xF0F354", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700079C")]
		public override bool CanSeek
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0xF0F374", Offset = "0xF0F374", VA = "0xF0F374", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700079D")]
		public override bool CanWrite
		{
			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0xF0F394", Offset = "0xF0F394", VA = "0xF0F394", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700079E")]
		public override long Length
		{
			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0xF0F3D8", Offset = "0xF0F3D8", VA = "0xF0F3D8", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700079F")]
		public override long Position
		{
			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xF0F3F8", Offset = "0xF0F3F8", VA = "0xF0F3F8", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0xF0F418", Offset = "0xF0F418", VA = "0xF0F418", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0xF0F26C", Offset = "0xF0F26C", VA = "0xF0F26C")]
		public void SetWrapped(Stream wrapped, bool ownsStream)
		{
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0xF0F27C", Offset = "0xF0F27C", VA = "0xF0F27C", Slot = "19")]
		public override void Close()
		{
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0xF0F2C4", Offset = "0xF0F2C4", VA = "0xF0F2C4", Slot = "31")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0xF0F2E8", Offset = "0xF0F2E8", VA = "0xF0F2E8", Slot = "32")]
		public override int ReadByte()
		{
			return default(int);
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0xF0F30C", Offset = "0xF0F30C", VA = "0xF0F30C", Slot = "33")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0xF0F330", Offset = "0xF0F330", VA = "0xF0F330", Slot = "34")]
		public override void WriteByte(byte value)
		{
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0xF0F3B4", Offset = "0xF0F3B4", VA = "0xF0F3B4", Slot = "21")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0xF0F43C", Offset = "0xF0F43C", VA = "0xF0F43C", Slot = "29")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0xF0F460", Offset = "0xF0F460", VA = "0xF0F460", Slot = "30")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0xF0F484", Offset = "0xF0F484", VA = "0xF0F484")]
		public WrappedStream()
		{
		}
	}
	[Token(Token = "0x200070F")]
	public class YouTubeLiveChat : BaseChatScript
	{
		[Token(Token = "0x2000710")]
		private enum ConnectionState
		{
			[Token(Token = "0x4002E52")]
			Connect_Start,
			[Token(Token = "0x4002E53")]
			OK,
			[Token(Token = "0x4002E54")]
			Failed_NoChannel,
			[Token(Token = "0x4002E55")]
			Failed_NoVideoID,
			[Token(Token = "0x4002E56")]
			Failed_NoChatID,
			[Token(Token = "0x4002E57")]
			Failed_NoMessages
		}

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AEA4", Offset = "0xB2AEA4")]
		private sealed class <GetActiveLiveChatIDForChannel>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTubeLiveChat <>4__this;

			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <videoIDRequest>5__2;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <chatIDRequest>5__3;

			[Token(Token = "0x170007A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FDF")]
				[Address(RVA = "0x210AA88", Offset = "0x210AA88", VA = "0x210AA88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE1")]
				[Address(RVA = "0x210AAD0", Offset = "0x210AAD0", VA = "0x210AAD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0x210A2F8", Offset = "0x210A2F8", VA = "0x210A2F8")]
			[DebuggerHidden]
			public <GetActiveLiveChatIDForChannel>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002FDD")]
			[Address(RVA = "0x210A324", Offset = "0x210A324", VA = "0x210A324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0x210A328", Offset = "0x210A328", VA = "0x210A328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE0")]
			[Address(RVA = "0x210AA90", Offset = "0x210AA90", VA = "0x210AA90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AEB4", Offset = "0xB2AEB4")]
		private sealed class <GetMessageList>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YouTubeLiveChat <>4__this;

			[Token(Token = "0x4002E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <messagesRequest>5__2;

			[Token(Token = "0x170007A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FE5")]
				[Address(RVA = "0x210B418", Offset = "0x210B418", VA = "0x210B418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE7")]
				[Address(RVA = "0x210B460", Offset = "0x210B460", VA = "0x210B460", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FE2")]
			[Address(RVA = "0x210AAD8", Offset = "0x210AAD8", VA = "0x210AAD8")]
			[DebuggerHidden]
			public <GetMessageList>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002FE3")]
			[Address(RVA = "0x210AB04", Offset = "0x210AB04", VA = "0x210AB04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x210AB08", Offset = "0x210AB08", VA = "0x210AB08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0x210B420", Offset = "0x210B420", VA = "0x210B420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_RequestMessagesInterval;

		[Token(Token = "0x4002E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_RequestMessagesCountdown;

		[Token(Token = "0x4002E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_ChannelID;

		[Token(Token = "0x4002E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string m_VideoId;

		[Token(Token = "0x4002E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_ActiveLiveChatId;

		[Token(Token = "0x4002E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_NextPageToken;

		[Token(Token = "0x4002E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_OutGatheringMessages;

		[Token(Token = "0x4002E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private ConnectionState m_ConnectionState;

		[Token(Token = "0x170007A0")]
		private static string kYouTubeApiKey
		{
			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0x111F100", Offset = "0x111F100", VA = "0x111F100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x111F164", Offset = "0x111F164", VA = "0x111F164")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x111F204", Offset = "0x111F204", VA = "0x111F204")]
		private void ConnectionFailed(ConnectionState reason)
		{
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x111F518", Offset = "0x111F518", VA = "0x111F518")]
		private void Update()
		{
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x111F5C4", Offset = "0x111F5C4", VA = "0x111F5C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB459A4", Offset = "0xB459A4")]
		private IEnumerator GetActiveLiveChatIDForChannel()
		{
			return null;
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x111F630", Offset = "0x111F630", VA = "0x111F630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45A04", Offset = "0xB45A04")]
		private IEnumerator GetMessageList()
		{
			return null;
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x111F69C", Offset = "0x111F69C", VA = "0x111F69C")]
		public YouTubeLiveChat()
		{
		}
	}
	[Token(Token = "0x2000713")]
	public sealed class ZipOutputStreamWrapper_SharpZipLib : WrappedStream
	{
		[Token(Token = "0x4002E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICSharpCode.SharpZipLibUnityPort.Zip.ZipOutputStream m_wrappedZip;

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x111F6E4", Offset = "0x111F6E4", VA = "0x111F6E4")]
		public ZipOutputStreamWrapper_SharpZipLib(ICSharpCode.SharpZipLibUnityPort.Zip.ZipOutputStream wrapped, ICSharpCode.SharpZipLibUnityPort.Zip.ZipEntry entry)
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x111F744", Offset = "0x111F744", VA = "0x111F744", Slot = "19")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000714")]
	public sealed class ZipOutputStreamWrapper_DotNetZip : WrappedStream
	{
		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x111F6AC", Offset = "0x111F6AC", VA = "0x111F6AC")]
		public ZipOutputStreamWrapper_DotNetZip(Ionic.Zip.ZipOutputStream wrapped)
		{
		}
	}
	[Token(Token = "0x2000715")]
	public sealed class ZipSubfileReader_SharpZipLib : WrappedStream
	{
		[Token(Token = "0x4002E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICSharpCode.SharpZipLibUnityPort.Zip.ZipFile m_file;

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x111F8F4", Offset = "0x111F8F4", VA = "0x111F8F4")]
		public ZipSubfileReader_SharpZipLib(string zipPath, string subPath)
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x111FA3C", Offset = "0x111FA3C", VA = "0x111FA3C", Slot = "19")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000716")]
	public sealed class ZipSubfileReader_DotNetZip : WrappedStream
	{
		[Token(Token = "0x4002E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Ionic.Zip.ZipFile m_file;

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x111F77C", Offset = "0x111F77C", VA = "0x111F77C")]
		public ZipSubfileReader_DotNetZip(string zipPath, string subPath)
		{
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x111F8BC", Offset = "0x111F8BC", VA = "0x111F8BC", Slot = "19")]
		public override void Close()
		{
		}
	}
	[Token(Token = "0x2000717")]
	public static class MathEllipsoidEberly
	{
		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x10DC20C", Offset = "0x10DC20C", VA = "0x10DC20C")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc, Vector3 point, int numIters = 20)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x10DC3E0", Offset = "0x10DC3E0", VA = "0x10DC3E0")]
		private static Matrix4x4 CreateShuffleMatrix(Vector3 unsorted)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x10DC5C8", Offset = "0x10DC5C8", VA = "0x10DC5C8")]
		private static Matrix4x4 CreateFlipMatrix(Vector3 maybeNegative)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x10DCAD4", Offset = "0x10DCAD4", VA = "0x10DCAD4")]
		private static double Sqr(double x)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x10DCADC", Offset = "0x10DCADC", VA = "0x10DCADC")]
		private static double MaxAbs(double v0, double v1, double v2)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x10DCB6C", Offset = "0x10DCB6C", VA = "0x10DCB6C")]
		private static double RobustLength(double v0, double v1)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x10DCB84", Offset = "0x10DCB84", VA = "0x10DCB84")]
		private static double RobustLength(double v0, double v1, double v2)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x10DCC50", Offset = "0x10DCC50", VA = "0x10DCC50")]
		private static double GetRoot(double r0, double z0, double z1, double g, int numIters)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x10DCD34", Offset = "0x10DCD34", VA = "0x10DCD34")]
		private static (double, double, double) DistancePointEllipse(double e0, double e1, double y0, double y1, int numIters)
		{
			return default((double, double, double));
		}

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x10DCF50", Offset = "0x10DCF50", VA = "0x10DCF50")]
		private static double GetRoot(double r0, double r1, double z0, double z1, double z2, double g, int numIters)
		{
			return default(double);
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x10DC678", Offset = "0x10DC678", VA = "0x10DC678")]
		private static (double, double, double, double) DistancePointEllipsoid(double e0, double e1, double e2, double y0, double y1, double y2, int numIters)
		{
			return default((double, double, double, double));
		}
	}
	[Token(Token = "0x2000718")]
	public class JPEGMarkerFoundException : Exception
	{
		[Token(Token = "0x4002E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public byte Marker;

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x12DBF74", Offset = "0x12DBF74", VA = "0x12DBF74")]
		public JPEGMarkerFoundException(byte marker)
		{
		}
	}
	[Token(Token = "0x2000719")]
	public class JPEGBinaryReader : BinaryReader
	{
		[Token(Token = "0x4002E65")]
		private const byte kJpegMarkerXFF = byte.MaxValue;

		[Token(Token = "0x4002E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		private byte marker;

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x12DBE30", Offset = "0x12DBE30", VA = "0x12DBE30")]
		public JPEGBinaryReader(Stream input)
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x12DBE38", Offset = "0x12DBE38", VA = "0x12DBE38")]
		public byte GetNextMarker()
		{
			return default(byte);
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x12DBEDC", Offset = "0x12DBEDC", VA = "0x12DBEDC")]
		protected byte ReadJpegByte()
		{
			return default(byte);
		}
	}
	[Token(Token = "0x200071A")]
	public static class MathEllipsoidAnton
	{
		[Token(Token = "0x200071B")]
		public struct Stereo
		{
			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double x;

			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double y;

			[Token(Token = "0x6003008")]
			[Address(RVA = "0x1000714", Offset = "0x1000714", VA = "0x1000714")]
			public static Stereo FromCartesian(ComponentwiseVectors.vec3 cartesian, ComponentwiseVectors.vec3 abc)
			{
				return default(Stereo);
			}

			[Token(Token = "0x6003009")]
			[Address(RVA = "0x1000734", Offset = "0x1000734", VA = "0x1000734")]
			public static Stereo operator *(double s, Stereo uv)
			{
				return default(Stereo);
			}

			[Token(Token = "0x600300A")]
			[Address(RVA = "0x1000744", Offset = "0x1000744", VA = "0x1000744")]
			public static Stereo operator -(Stereo a, Stereo b)
			{
				return default(Stereo);
			}

			[Token(Token = "0x600300B")]
			[Address(RVA = "0x1000750", Offset = "0x1000750", VA = "0x1000750")]
			public ComponentwiseVectors.vec3 ToCartesian(ComponentwiseVectors.vec3 abc)
			{
				return default(ComponentwiseVectors.vec3);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AEC4", Offset = "0xB2AEC4")]
		private struct <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComponentwiseVectors.vec3 p;
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x10DB404", Offset = "0x10DB404", VA = "0x10DB404")]
		public static Vector3 ClosestPointEllipsoid(Vector3 abc_, Vector3 p_, int numIters = 30, double threshold = 0.0)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x10DBA50", Offset = "0x10DBA50", VA = "0x10DBA50")]
		private static double QuadraticPositive(double a, double b, double c)
		{
			return default(double);
		}

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x10DBB54", Offset = "0x10DBB54", VA = "0x10DBB54")]
		private static ComponentwiseVectors.vec3 GuessProjectOnSphere(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x10DBBA0", Offset = "0x10DBBA0", VA = "0x10DBBA0")]
		private static ComponentwiseVectors.vec3 GuessOrthogonal(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x10DBE24", Offset = "0x10DBE24", VA = "0x10DBE24")]
		private static ComponentwiseVectors.vec3 GuessDiagonal2d(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x10DC08C", Offset = "0x10DC08C", VA = "0x10DC08C")]
		private static ComponentwiseVectors.vec3 GuessDiagonal3d(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x10DB638", Offset = "0x10DB638", VA = "0x10DB638")]
		private static ComponentwiseVectors.vec3 InitialGuessClosestPointToEllipsoid(ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(ComponentwiseVectors.vec3);
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x10DB7E4", Offset = "0x10DB7E4", VA = "0x10DB7E4")]
		private static Stereo Iterate_Stereographic(Stereo uv, ComponentwiseVectors.vec3 p, ComponentwiseVectors.vec3 abc)
		{
			return default(Stereo);
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x10DBE14", Offset = "0x10DBE14", VA = "0x10DBE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45B04", Offset = "0xB45B04")]
		internal static double <GuessOrthogonal>g__FixSign|3_0(double _sign, double _val)
		{
			return default(double);
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x10DC178", Offset = "0x10DC178", VA = "0x10DC178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB45B14", Offset = "0xB45B14")]
		internal static ComponentwiseVectors.vec3 <InitialGuessClosestPointToEllipsoid>g__NearerToP|6_0(ComponentwiseVectors.vec3 _a, ComponentwiseVectors.vec3 _b, ref <>c__DisplayClass6_0 P_2)
		{
			return default(ComponentwiseVectors.vec3);
		}
	}
	[Token(Token = "0x200071D")]
	public class KeyboardButton : MonoBehaviour
	{
		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_KeyText;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_IsBackspace;

		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActionButton _ActionBtn;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyboardPanel _keyboardPanel;

		[Token(Token = "0x600300C")]
		[Address(RVA = "0x12E9378", Offset = "0x12E9378", VA = "0x12E9378")]
		private void Awake()
		{
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x12E9448", Offset = "0x12E9448", VA = "0x12E9448")]
		public void OnButtonPressed()
		{
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x12E9720", Offset = "0x12E9720", VA = "0x12E9720")]
		public KeyboardButton()
		{
		}
	}
	[Token(Token = "0x200071E")]
	public class KeyboardPopup : PopUpWindow
	{
		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float m_ColorTransitionDuration;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_ColorTransitionValue;

		[Token(Token = "0x4002E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material m_ColorBackground;

		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private KeyboardPanel _KeyboardPanel;

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x12E9E4C", Offset = "0x12E9E4C", VA = "0x12E9E4C", Slot = "4")]
		public override void Init(GameObject rParent, string sText)
		{
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x12E9EFC", Offset = "0x12E9EFC", VA = "0x12E9EFC", Slot = "7")]
		protected override void BaseUpdate()
		{
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x12EA028", Offset = "0x12EA028", VA = "0x12EA028", Slot = "11")]
		protected override void UpdateOpening()
		{
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0x12EA0CC", Offset = "0x12EA0CC", VA = "0x12EA0CC", Slot = "12")]
		protected override void UpdateClosing()
		{
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x12EA19C", Offset = "0x12EA19C", VA = "0x12EA19C", Slot = "14")]
		public override void UpdateUIComponents(Ray rCastRay, bool inputValid, Collider parentCollider)
		{
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0x12EA230", Offset = "0x12EA230", VA = "0x12EA230", Slot = "5")]
		public override void SetPopupCommandParameters(int commandParam, int commandParam2)
		{
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x12EA248", Offset = "0x12EA248", VA = "0x12EA248")]
		public void TryClose()
		{
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0x12EA258", Offset = "0x12EA258", VA = "0x12EA258")]
		public KeyboardPopup()
		{
		}
	}
}
namespace GleyLocalization
{
	[Serializable]
	[Token(Token = "0x200071F")]
	public class AllAppTexts
	{
		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TranslatedWord> allText;

		[Token(Token = "0x6003017")]
		[Address(RVA = "0xFE1E0C", Offset = "0xFE1E0C", VA = "0xFE1E0C")]
		public AllAppTexts()
		{
		}
	}
	[Token(Token = "0x2000720")]
	public class CSVLoader
	{
		[Serializable]
		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AED4", Offset = "0xB2AED4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Translation, SupportedLanguages> <>9__0_0;

			[Token(Token = "0x600301F")]
			[Address(RVA = "0x1124940", Offset = "0x1124940", VA = "0x1124940")]
			public <>c()
			{
			}

			[Token(Token = "0x6003020")]
			[Address(RVA = "0x1124948", Offset = "0x1124948", VA = "0x1124948")]
			internal SupportedLanguages <SaveJson>b__0_0(Translation cond)
			{
				return default(SupportedLanguages);
			}
		}

		[Token(Token = "0x6003018")]
		[Address(RVA = "0x1283424", Offset = "0x1283424", VA = "0x1283424")]
		public static void SaveJson(AllAppTexts allWords)
		{
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x1283A74", Offset = "0x1283A74", VA = "0x1283A74")]
		public static AllAppTexts LoadJson()
		{
			return null;
		}

		[Token(Token = "0x600301A")]
		[Address(RVA = "0x1283BB4", Offset = "0x1283BB4", VA = "0x1283BB4")]
		public static void SaveCSV(AllAppTexts allWords, string path)
		{
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0x1283BE0", Offset = "0x1283BE0", VA = "0x1283BE0")]
		private static string ConvertToCSV(AllAppTexts allWords)
		{
			return null;
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0x128427C", Offset = "0x128427C", VA = "0x128427C")]
		public static AllAppTexts LoadCSV(string path)
		{
			return null;
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0x1284AFC", Offset = "0x1284AFC", VA = "0x1284AFC")]
		public CSVLoader()
		{
		}
	}
	[Token(Token = "0x2000722")]
	public static class LocalizationEnums
	{
		[Token(Token = "0x4002E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<ClientState, WordIDs> m_PhotonClientStateToWordIDs;
	}
	[Token(Token = "0x2000723")]
	public class MultiBrushLocalizationController : MonoBehaviour
	{
		[Token(Token = "0x4002E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_FontAsset m_StandardFont;

		[Token(Token = "0x4002E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset m_CjkFont;

		[Token(Token = "0x4002E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MultiBrushLocalizationController _Instance;

		[Token(Token = "0x170007A5")]
		public static MultiBrushLocalizationController Instance
		{
			[Token(Token = "0x6003022")]
			[Address(RVA = "0xF43448", Offset = "0xF43448", VA = "0xF43448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0xF43528", Offset = "0xF43528", VA = "0xF43528")]
		public static void SetupTextMeshProForId(TMP_Text text, string originalId)
		{
		}

		[Token(Token = "0x6003024")]
		[Address(RVA = "0xF438B8", Offset = "0xF438B8", VA = "0xF438B8")]
		public static void SetupTextMeshForId(TextMesh text, string originalId)
		{
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0xF43BCC", Offset = "0xF43BCC", VA = "0xF43BCC")]
		public static void SetupTextMeshForId(TextMesh text, WordIDs wordId)
		{
		}

		[Token(Token = "0x6003026")]
		[Address(RVA = "0xF43808", Offset = "0xF43808", VA = "0xF43808")]
		public static void SetupTextMeshProForId(TMP_Text text, WordIDs wordId)
		{
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0xF43C6C", Offset = "0xF43C6C", VA = "0xF43C6C")]
		public static void SetupTextMeshProFont(TMP_Text text)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0xF43CFC", Offset = "0xF43CFC", VA = "0xF43CFC")]
		public MultiBrushLocalizationController()
		{
		}
	}
	[Token(Token = "0x2000724")]
	public class UnityUILocalizationComponent : MonoBehaviour, ILocalizationComponent
	{
		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WordIDs wordID;

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x1248700", Offset = "0x1248700", VA = "0x1248700", Slot = "4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x1248788", Offset = "0x1248788", VA = "0x1248788")]
		private void Start()
		{
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x124878C", Offset = "0x124878C", VA = "0x124878C")]
		public UnityUILocalizationComponent()
		{
		}
	}
	[Token(Token = "0x2000725")]
	public class LocalizationManager : MonoBehaviour
	{
		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AEE4", Offset = "0xB2AEE4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WordIDs wordID;

			[Token(Token = "0x6003037")]
			[Address(RVA = "0x10006E8", Offset = "0x10006E8", VA = "0x10006E8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003038")]
			[Address(RVA = "0x10006F0", Offset = "0x10006F0", VA = "0x10006F0")]
			internal bool <GetText>b__0(TranslatedWord cond)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SupportedLanguages> supportedLanguages;

		[Token(Token = "0x4002E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SupportedLanguages currentLanguage;

		[Token(Token = "0x4002E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AllAppTexts allWords;

		[Token(Token = "0x4002E7D")]
		private const string languageSaveFile = "LanguageSaveFile";

		[Token(Token = "0x4002E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LocalizationManager instance;

		[Token(Token = "0x170007A6")]
		public static LocalizationManager Instance
		{
			[Token(Token = "0x600302C")]
			[Address(RVA = "0x10D5D44", Offset = "0x10D5D44", VA = "0x10D5D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x10D5E9C", Offset = "0x10D5E9C", VA = "0x10D5E9C")]
		public string GetText(WordIDs wordID)
		{
			return null;
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0x10D8578", Offset = "0x10D8578", VA = "0x10D8578")]
		public SupportedLanguages GetCurrentLanguage()
		{
			return default(SupportedLanguages);
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0x10D8580", Offset = "0x10D8580", VA = "0x10D8580")]
		public void SetCurrentLanguage(SupportedLanguages currentLang)
		{
		}

		[Token(Token = "0x6003030")]
		[Address(RVA = "0x10D8974", Offset = "0x10D8974", VA = "0x10D8974")]
		public void NextLanguage()
		{
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0x10D8A60", Offset = "0x10D8A60", VA = "0x10D8A60")]
		public void PreviousLanguage()
		{
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0x10D8374", Offset = "0x10D8374", VA = "0x10D8374")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0x10D8B48", Offset = "0x10D8B48", VA = "0x10D8B48")]
		private int LoadLanguage()
		{
			return default(int);
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x10D8BC4", Offset = "0x10D8BC4", VA = "0x10D8BC4")]
		private SupportedLanguages GetDeviceLanguage(SupportedLanguages defaultLanguage)
		{
			return default(SupportedLanguages);
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x10D85EC", Offset = "0x10D85EC", VA = "0x10D85EC")]
		private void RefreshComponents()
		{
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x10D8C54", Offset = "0x10D8C54", VA = "0x10D8C54")]
		public LocalizationManager()
		{
		}
	}
	[Token(Token = "0x2000727")]
	public class LocalizationSettings : ScriptableObject
	{
		[Token(Token = "0x4002E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SupportedLanguages defaultLanguage;

		[Token(Token = "0x4002E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int currentLanguage;

		[Token(Token = "0x4002E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableTMProSupport;

		[Token(Token = "0x4002E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool enableNGUISupport;

		[Token(Token = "0x4002E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool usePlaymaker;

		[Token(Token = "0x4002E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool useBolt;

		[Token(Token = "0x6003039")]
		[Address(RVA = "0x10D8C5C", Offset = "0x10D8C5C", VA = "0x10D8C5C")]
		public LocalizationSettings()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public class Manager
	{
		[Token(Token = "0x600303A")]
		[Address(RVA = "0x10DA5E0", Offset = "0x10DA5E0", VA = "0x10DA5E0")]
		public static string GetText(WordIDs wordID)
		{
			return null;
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x10DA60C", Offset = "0x10DA60C", VA = "0x10DA60C")]
		public static string GetText(string wordID)
		{
			return null;
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x10DA81C", Offset = "0x10DA81C", VA = "0x10DA81C")]
		public static SupportedLanguages GetCurrentLanguage()
		{
			return default(SupportedLanguages);
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x10DA83C", Offset = "0x10DA83C", VA = "0x10DA83C")]
		public static void NextLanguage()
		{
		}

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x10DA858", Offset = "0x10DA858", VA = "0x10DA858")]
		public static void PreviousLanguage()
		{
		}

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x10D050C", Offset = "0x10D050C", VA = "0x10D050C")]
		public static void SetCurrentLanguage(SupportedLanguages language)
		{
		}

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x10DA874", Offset = "0x10DA874", VA = "0x10DA874")]
		public Manager()
		{
		}
	}
	[Token(Token = "0x2000729")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4002E87")]
		Array = 1,
		[Token(Token = "0x4002E88")]
		Object = 2,
		[Token(Token = "0x4002E89")]
		String = 3,
		[Token(Token = "0x4002E8A")]
		Number = 4,
		[Token(Token = "0x4002E8B")]
		NullValue = 5,
		[Token(Token = "0x4002E8C")]
		Boolean = 6,
		[Token(Token = "0x4002E8D")]
		None = 7,
		[Token(Token = "0x4002E8E")]
		Custom = 255
	}
	[Token(Token = "0x200072A")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4002E90")]
		Compact,
		[Token(Token = "0x4002E91")]
		Indent
	}
	[Token(Token = "0x200072B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AEF4", Offset = "0xB2AEF4")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200072C")]
		public struct Enumerator
		{
			[Token(Token = "0x200072D")]
			private enum Type
			{
				[Token(Token = "0x4002E98")]
				None,
				[Token(Token = "0x4002E99")]
				Array,
				[Token(Token = "0x4002E9A")]
				Object
			}

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4002E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170007BF")]
			public bool IsValid
			{
				[Token(Token = "0x600307E")]
				[Address(RVA = "0xFFD758", Offset = "0xFFD758", VA = "0xFFD758")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170007C0")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6003081")]
				[Address(RVA = "0xFFD7B4", Offset = "0xFFD7B4", VA = "0xFFD7B4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0xFFD768", Offset = "0xFFD768", VA = "0xFFD768")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6003080")]
			[Address(RVA = "0xFFD790", Offset = "0xFFD790", VA = "0xFFD790")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6003082")]
			[Address(RVA = "0xFFD888", Offset = "0xFFD888", VA = "0xFFD888")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200072E")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4002E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170007C1")]
			public JSONNode Current
			{
				[Token(Token = "0x6003086")]
				[Address(RVA = "0xFFDDF4", Offset = "0xFFDDF4", VA = "0xFFDDF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003083")]
			[Address(RVA = "0xFFDD48", Offset = "0xFFDD48", VA = "0xFFDD48")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6003084")]
			[Address(RVA = "0xFFDD90", Offset = "0xFFDD90", VA = "0xFFDD90")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0xFFDDDC", Offset = "0xFFDDDC", VA = "0xFFDDDC")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6003087")]
			[Address(RVA = "0xFFDE3C", Offset = "0xFFDE3C", VA = "0xFFDE3C")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003088")]
			[Address(RVA = "0xFFDE40", Offset = "0xFFDE40", VA = "0xFFDE40")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x200072F")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4002E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170007C2")]
			public JSONNode Current
			{
				[Token(Token = "0x600308C")]
				[Address(RVA = "0xFFD9CC", Offset = "0xFFD9CC", VA = "0xFFD9CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0xFFD920", Offset = "0xFFD920", VA = "0xFFD920")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600308A")]
			[Address(RVA = "0xFFD968", Offset = "0xFFD968", VA = "0xFFD968")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600308B")]
			[Address(RVA = "0xFFD9B4", Offset = "0xFFD9B4", VA = "0xFFD9B4")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600308D")]
			[Address(RVA = "0xFFDA4C", Offset = "0xFFDA4C", VA = "0xFFDA4C")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600308E")]
			[Address(RVA = "0xFFDA50", Offset = "0xFFDA50", VA = "0xFFDA50")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x2000730")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4002E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x4002E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170007C3")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6003090")]
				[Address(RVA = "0xFFDB34", Offset = "0xFFDB34", VA = "0xFFDB34", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170007C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003091")]
				[Address(RVA = "0xFFDB3C", Offset = "0xFFDB3C", VA = "0xFFDB3C", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600308F")]
			[Address(RVA = "0xFFDA60", Offset = "0xFFDA60", VA = "0xFFDA60")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6003092")]
			[Address(RVA = "0xFFDBA4", Offset = "0xFFDBA4", VA = "0xFFDBA4", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003093")]
			[Address(RVA = "0xFFDBAC", Offset = "0xFFDBAC", VA = "0xFFDBAC", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6003094")]
			[Address(RVA = "0xFFDBCC", Offset = "0xFFDBCC", VA = "0xFFDBCC", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003095")]
			[Address(RVA = "0xFFDC2C", Offset = "0xFFDC2C", VA = "0xFFDC2C", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6003096")]
			[Address(RVA = "0xFFDCE8", Offset = "0xFFDCE8", VA = "0xFFDCE8", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AF2C", Offset = "0xB2AF2C")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170007C5")]
			private JSONNode System.Collections.Generic.IEnumerator<GleyLocalization.JSONNode>.Current
			{
				[Token(Token = "0x600309A")]
				[Address(RVA = "0xFFCEFC", Offset = "0xFFCEFC", VA = "0xFFCEFC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600309C")]
				[Address(RVA = "0xFFCF44", Offset = "0xFFCF44", VA = "0xFFCF44", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003097")]
			[Address(RVA = "0xFFCEA8", Offset = "0xFFCEA8", VA = "0xFFCEA8")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6003098")]
			[Address(RVA = "0xFFCEE0", Offset = "0xFFCEE0", VA = "0xFFCEE0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003099")]
			[Address(RVA = "0xFFCEE4", Offset = "0xFFCEE4", VA = "0xFFCEE4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600309B")]
			[Address(RVA = "0xFFCF04", Offset = "0xFFCF04", VA = "0xFFCF04", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600309D")]
			[Address(RVA = "0xFFCF4C", Offset = "0xFFCF4C", VA = "0xFFCF4C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<GleyLocalization.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600309E")]
			[Address(RVA = "0xFFCFE0", Offset = "0xFFCFE0", VA = "0xFFCFE0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AF3C", Offset = "0xB2AF3C")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170007C7")]
			private JSONNode System.Collections.Generic.IEnumerator<GleyLocalization.JSONNode>.Current
			{
				[Token(Token = "0x60030A4")]
				[Address(RVA = "0xFFD65C", Offset = "0xFFD65C", VA = "0xFFD65C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030A6")]
				[Address(RVA = "0xFFD6A4", Offset = "0xFFD6A4", VA = "0xFFD6A4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600309F")]
			[Address(RVA = "0xFFCFE4", Offset = "0xFFCFE4", VA = "0xFFCFE4")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60030A0")]
			[Address(RVA = "0xFFD01C", Offset = "0xFFD01C", VA = "0xFFD01C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0xFFD224", Offset = "0xFFD224", VA = "0xFFD224", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030A2")]
			[Address(RVA = "0xFFD168", Offset = "0xFFD168", VA = "0xFFD168")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0xFFD0AC", Offset = "0xFFD0AC", VA = "0xFFD0AC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60030A5")]
			[Address(RVA = "0xFFD664", Offset = "0xFFD664", VA = "0xFFD664", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60030A7")]
			[Address(RVA = "0xFFD6AC", Offset = "0xFFD6AC", VA = "0xFFD6AC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<GleyLocalization.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60030A8")]
			[Address(RVA = "0xFFD754", Offset = "0xFFD754", VA = "0xFFD754", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4002E93")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170007A7")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6003041")]
			get;
		}

		[Token(Token = "0x170007A8")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6003042")]
			[Address(RVA = "0x12E1B3C", Offset = "0x12E1B3C", VA = "0x12E1B3C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003043")]
			[Address(RVA = "0x12E1B44", Offset = "0x12E1B44", VA = "0x12E1B44", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170007A9")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6003044")]
			[Address(RVA = "0x12E1B48", Offset = "0x12E1B48", VA = "0x12E1B48", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003045")]
			[Address(RVA = "0x12E1B50", Offset = "0x12E1B50", VA = "0x12E1B50", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170007AA")]
		public virtual string Value
		{
			[Token(Token = "0x6003046")]
			[Address(RVA = "0x12E1B54", Offset = "0x12E1B54", VA = "0x12E1B54", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003047")]
			[Address(RVA = "0x12E1B98", Offset = "0x12E1B98", VA = "0x12E1B98", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170007AB")]
		public virtual int Count
		{
			[Token(Token = "0x6003048")]
			[Address(RVA = "0x12E1B9C", Offset = "0x12E1B9C", VA = "0x12E1B9C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007AC")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6003049")]
			[Address(RVA = "0x12E1BA4", Offset = "0x12E1BA4", VA = "0x12E1BA4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007AD")]
		public virtual bool IsString
		{
			[Token(Token = "0x600304A")]
			[Address(RVA = "0x12E1BAC", Offset = "0x12E1BAC", VA = "0x12E1BAC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007AE")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x600304B")]
			[Address(RVA = "0x12E1BB4", Offset = "0x12E1BB4", VA = "0x12E1BB4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007AF")]
		public virtual bool IsNull
		{
			[Token(Token = "0x600304C")]
			[Address(RVA = "0x12E1BBC", Offset = "0x12E1BBC", VA = "0x12E1BBC", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B0")]
		public virtual bool IsArray
		{
			[Token(Token = "0x600304D")]
			[Address(RVA = "0x12E1BC4", Offset = "0x12E1BC4", VA = "0x12E1BC4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B1")]
		public virtual bool IsObject
		{
			[Token(Token = "0x600304E")]
			[Address(RVA = "0x12E1BCC", Offset = "0x12E1BCC", VA = "0x12E1BCC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007B2")]
		public virtual bool Inline
		{
			[Token(Token = "0x600304F")]
			[Address(RVA = "0x12E1BD4", Offset = "0x12E1BD4", VA = "0x12E1BD4", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003050")]
			[Address(RVA = "0x12E1BDC", Offset = "0x12E1BDC", VA = "0x12E1BDC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170007B3")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x12E1C64", Offset = "0x12E1C64", VA = "0x12E1C64", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45B24", Offset = "0xB45B24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B4")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6003057")]
			[Address(RVA = "0x12E1CC0", Offset = "0x12E1CC0", VA = "0x12E1CC0")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45B84", Offset = "0xB45B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B5")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x600305C")]
			[Address(RVA = "0x12E1E58", Offset = "0x12E1E58", VA = "0x12E1E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007B6")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x600305D")]
			[Address(RVA = "0x12E1EB8", Offset = "0x12E1EB8", VA = "0x12E1EB8")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170007B7")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x600305E")]
			[Address(RVA = "0x12E1F00", Offset = "0x12E1F00", VA = "0x12E1F00")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170007B8")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600305F")]
			[Address(RVA = "0x12E1F48", Offset = "0x12E1F48", VA = "0x12E1F48", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6003060")]
			[Address(RVA = "0x12E1FE8", Offset = "0x12E1FE8", VA = "0x12E1FE8", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170007B9")]
		public virtual int AsInt
		{
			[Token(Token = "0x6003061")]
			[Address(RVA = "0x12E2028", Offset = "0x12E2028", VA = "0x12E2028", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003062")]
			[Address(RVA = "0x12E2060", Offset = "0x12E2060", VA = "0x12E2060", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170007BA")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6003063")]
			[Address(RVA = "0x12E2078", Offset = "0x12E2078", VA = "0x12E2078", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003064")]
			[Address(RVA = "0x12E209C", Offset = "0x12E209C", VA = "0x12E209C", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170007BB")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6003065")]
			[Address(RVA = "0x12E20B0", Offset = "0x12E20B0", VA = "0x12E20B0", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003066")]
			[Address(RVA = "0x12E2174", Offset = "0x12E2174", VA = "0x12E2174", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170007BC")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6003067")]
			[Address(RVA = "0x12E21F8", Offset = "0x12E21F8", VA = "0x12E21F8", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007BD")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6003068")]
			[Address(RVA = "0x12E2274", Offset = "0x12E2274", VA = "0x12E2274", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007BE")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6003078")]
			[Address(RVA = "0x12E28F4", Offset = "0x12E28F4", VA = "0x12E28F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x12E1BE0", Offset = "0x12E1BE0", VA = "0x12E1BE0", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x12E1BE4", Offset = "0x12E1BE4", VA = "0x12E1BE4", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0x12E1C4C", Offset = "0x12E1C4C", VA = "0x12E1C4C", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x12E1C54", Offset = "0x12E1C54", VA = "0x12E1C54", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0x12E1C5C", Offset = "0x12E1C5C", VA = "0x12E1C5C", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6003058")]
		[Address(RVA = "0x12E1D2C", Offset = "0x12E1D2C", VA = "0x12E1D2C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003059")]
		[Address(RVA = "0x12E1DBC", Offset = "0x12E1DBC", VA = "0x12E1DBC", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x600305A")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x600305B")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x12E22F0", Offset = "0x12E22F0", VA = "0x12E22F0")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x12E23C4", Offset = "0x12E23C4", VA = "0x12E23C4")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x12E2454", Offset = "0x12E2454", VA = "0x12E2454")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x12E24B8", Offset = "0x12E24B8", VA = "0x12E24B8")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x12E254C", Offset = "0x12E254C", VA = "0x12E254C")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0x12E25B0", Offset = "0x12E25B0", VA = "0x12E25B0")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x12E2644", Offset = "0x12E2644", VA = "0x12E2644")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x12E26A0", Offset = "0x12E26A0", VA = "0x12E26A0")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x12E2734", Offset = "0x12E2734", VA = "0x12E2734")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6003072")]
		[Address(RVA = "0x12E2790", Offset = "0x12E2790", VA = "0x12E2790")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x12E2824", Offset = "0x12E2824", VA = "0x12E2824")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x12DD00C", Offset = "0x12DD00C", VA = "0x12DD00C")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x12E2864", Offset = "0x12E2864", VA = "0x12E2864")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x12E28E0", Offset = "0x12E28E0", VA = "0x12E28E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x12E28EC", Offset = "0x12E28EC", VA = "0x12E28EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x12E29CC", Offset = "0x12E29CC", VA = "0x12E29CC")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x12E2CD4", Offset = "0x12E2CD4", VA = "0x12E2CD4")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x12DC04C", Offset = "0x12DC04C", VA = "0x12DC04C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x12DD84C", Offset = "0x12DD84C", VA = "0x12DD84C")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000733")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AF4C", Offset = "0xB2AF4C")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AF84", Offset = "0xB2AF84")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170007D0")]
			private JSONNode System.Collections.Generic.IEnumerator<GleyLocalization.JSONNode>.Current
			{
				[Token(Token = "0x60030BD")]
				[Address(RVA = "0xFFC218", Offset = "0xFFC218", VA = "0xFFC218", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030BF")]
				[Address(RVA = "0xFFC260", Offset = "0xFFC260", VA = "0xFFC260", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B9")]
			[Address(RVA = "0xFFBFFC", Offset = "0xFFBFFC", VA = "0xFFBFFC")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60030BA")]
			[Address(RVA = "0xFFC034", Offset = "0xFFC034", VA = "0xFFC034", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030BB")]
			[Address(RVA = "0xFFC0A4", Offset = "0xFFC0A4", VA = "0xFFC0A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030BC")]
			[Address(RVA = "0xFFC050", Offset = "0xFFC050", VA = "0xFFC050")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0xFFC220", Offset = "0xFFC220", VA = "0xFFC220", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60030C0")]
			[Address(RVA = "0xFFC268", Offset = "0xFFC268", VA = "0xFFC268", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<GleyLocalization.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0xFFC310", Offset = "0xFFC310", VA = "0xFFC310", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4002EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170007C9")]
		public override bool Inline
		{
			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x12DCD00", Offset = "0x12DCD00", VA = "0x12DCD00", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030AA")]
			[Address(RVA = "0x12DCD08", Offset = "0x12DCD08", VA = "0x12DCD08", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170007CA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x12DCD14", Offset = "0x12DCD14", VA = "0x12DCD14", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007CB")]
		public override bool IsArray
		{
			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x12DCD1C", Offset = "0x12DCD1C", VA = "0x12DCD1C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007CC")]
		public override JSONNode Item
		{
			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x12DCDB4", Offset = "0x12DCDB4", VA = "0x12DCDB4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x12DCEE4", Offset = "0x12DCEE4", VA = "0x12DCEE4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170007CD")]
		public override JSONNode Item
		{
			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x12DD240", Offset = "0x12DD240", VA = "0x12DD240", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x12DD29C", Offset = "0x12DD29C", VA = "0x12DD29C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170007CE")]
		public override int Count
		{
			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x12DD370", Offset = "0x12DD370", VA = "0x12DD370", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007CF")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60030B6")]
			[Address(RVA = "0x12DD5BC", Offset = "0x12DD5BC", VA = "0x12DD5BC", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45CC4", Offset = "0xB45CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x12DCD24", Offset = "0x12DCD24", VA = "0x12DCD24", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x12DD3BC", Offset = "0x12DD3BC", VA = "0x12DD3BC", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x12DD490", Offset = "0x12DD490", VA = "0x12DD490", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x12DD550", Offset = "0x12DD550", VA = "0x12DD550", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x12DD628", Offset = "0x12DD628", VA = "0x12DD628", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x12DD7A8", Offset = "0x12DD7A8", VA = "0x12DD7A8")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AF94", Offset = "0xB2AF94")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AFCC", Offset = "0xB2AFCC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x60030D3")]
			[Address(RVA = "0xFFE700", Offset = "0xFFE700", VA = "0xFFE700")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0xFFE708", Offset = "0xFFE708", VA = "0xFFE708")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2AFDC", Offset = "0xB2AFDC")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170007D9")]
			private JSONNode System.Collections.Generic.IEnumerator<GleyLocalization.JSONNode>.Current
			{
				[Token(Token = "0x60030D9")]
				[Address(RVA = "0xFFE9BC", Offset = "0xFFE9BC", VA = "0xFFE9BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170007DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030DB")]
				[Address(RVA = "0xFFEA04", Offset = "0xFFEA04", VA = "0xFFEA04", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0xFFE78C", Offset = "0xFFE78C", VA = "0xFFE78C")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0xFFE7C4", Offset = "0xFFE7C4", VA = "0xFFE7C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0xFFE834", Offset = "0xFFE834", VA = "0xFFE834", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030D8")]
			[Address(RVA = "0xFFE7E0", Offset = "0xFFE7E0", VA = "0xFFE7E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60030DA")]
			[Address(RVA = "0xFFE9C4", Offset = "0xFFE9C4", VA = "0xFFE9C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xFFEA0C", Offset = "0xFFEA0C", VA = "0xFFEA0C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<GleyLocalization.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60030DD")]
			[Address(RVA = "0xFFEAB4", Offset = "0xFFEAB4", VA = "0xFFEAB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170007D2")]
		public override bool Inline
		{
			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x12E4E78", Offset = "0x12E4E78", VA = "0x12E4E78", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x12E4E80", Offset = "0x12E4E80", VA = "0x12E4E80", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170007D3")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x12E4E8C", Offset = "0x12E4E8C", VA = "0x12E4E8C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007D4")]
		public override bool IsObject
		{
			[Token(Token = "0x60030C5")]
			[Address(RVA = "0x12E4E94", Offset = "0x12E4E94", VA = "0x12E4E94", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007D5")]
		public override JSONNode Item
		{
			[Token(Token = "0x60030C7")]
			[Address(RVA = "0x12E4F2C", Offset = "0x12E4F2C", VA = "0x12E4F2C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030C8")]
			[Address(RVA = "0x12E4FFC", Offset = "0x12E4FFC", VA = "0x12E4FFC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170007D6")]
		public override JSONNode Item
		{
			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x12E513C", Offset = "0x12E513C", VA = "0x12E513C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030CA")]
			[Address(RVA = "0x12E51E8", Offset = "0x12E51E8", VA = "0x12E51E8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170007D7")]
		public override int Count
		{
			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x12E533C", Offset = "0x12E533C", VA = "0x12E533C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007D8")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60030D0")]
			[Address(RVA = "0x12E58D0", Offset = "0x12E58D0", VA = "0x12E58D0", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB45D94", Offset = "0xB45D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x12E4E9C", Offset = "0x12E4E9C", VA = "0x12E4E9C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x12E5390", Offset = "0x12E5390", VA = "0x12E5390", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60030CD")]
		[Address(RVA = "0x12E554C", Offset = "0x12E554C", VA = "0x12E554C", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x12E561C", Offset = "0x12E561C", VA = "0x12E561C", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x12E5704", Offset = "0x12E5704", VA = "0x12E5704", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x12E593C", Offset = "0x12E593C", VA = "0x12E593C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x12E0A40", Offset = "0x12E0A40", VA = "0x12E0A40")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000738")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4002EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170007DB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60030DE")]
			[Address(RVA = "0x12E5C5C", Offset = "0x12E5C5C", VA = "0x12E5C5C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007DC")]
		public override bool IsString
		{
			[Token(Token = "0x60030DF")]
			[Address(RVA = "0x12E5C64", Offset = "0x12E5C64", VA = "0x12E5C64", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007DD")]
		public override string Value
		{
			[Token(Token = "0x60030E1")]
			[Address(RVA = "0x12E5C8C", Offset = "0x12E5C8C", VA = "0x12E5C8C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030E2")]
			[Address(RVA = "0x12E5C94", Offset = "0x12E5C94", VA = "0x12E5C94", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x12E5C6C", Offset = "0x12E5C6C", VA = "0x12E5C6C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x12E234C", Offset = "0x12E234C", VA = "0x12E234C")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0x12E5C9C", Offset = "0x12E5C9C", VA = "0x12E5C9C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0x12E5D50", Offset = "0x12E5D50", VA = "0x12E5D50", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x12E5E78", Offset = "0x12E5E78", VA = "0x12E5E78", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000739")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4002EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170007DE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60030E7")]
			[Address(RVA = "0x12E4A10", Offset = "0x12E4A10", VA = "0x12E4A10", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007DF")]
		public override bool IsNumber
		{
			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x12E4A18", Offset = "0x12E4A18", VA = "0x12E4A18", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007E0")]
		public override string Value
		{
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x12E4A40", Offset = "0x12E4A40", VA = "0x12E4A40", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030EB")]
			[Address(RVA = "0x12E4A4C", Offset = "0x12E4A4C", VA = "0x12E4A4C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170007E1")]
		public override double AsDouble
		{
			[Token(Token = "0x60030EC")]
			[Address(RVA = "0x12E4AD4", Offset = "0x12E4AD4", VA = "0x12E4AD4", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x12E4ADC", Offset = "0x12E4ADC", VA = "0x12E4ADC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x12E4A20", Offset = "0x12E4A20", VA = "0x12E4A20", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0x12E0CB4", Offset = "0x12E0CB4", VA = "0x12E0CB4")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x12E4AE4", Offset = "0x12E4AE4", VA = "0x12E4AE4")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x12E4B68", Offset = "0x12E4B68", VA = "0x12E4B68", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0x12E4B88", Offset = "0x12E4B88", VA = "0x12E4B88")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60030F2")]
		[Address(RVA = "0x12E4D2C", Offset = "0x12E4D2C", VA = "0x12E4D2C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0x12E4E6C", Offset = "0x12E4E6C", VA = "0x12E4E6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200073A")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4002EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170007E2")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x12DE544", Offset = "0x12DE544", VA = "0x12DE544", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007E3")]
		public override bool IsBoolean
		{
			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x12DE54C", Offset = "0x12DE54C", VA = "0x12DE54C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007E4")]
		public override string Value
		{
			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x12DE574", Offset = "0x12DE574", VA = "0x12DE574", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x12DE580", Offset = "0x12DE580", VA = "0x12DE580", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170007E5")]
		public override bool AsBool
		{
			[Token(Token = "0x60030F9")]
			[Address(RVA = "0x12DE608", Offset = "0x12DE608", VA = "0x12DE608", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030FA")]
			[Address(RVA = "0x12DE610", Offset = "0x12DE610", VA = "0x12DE610", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0x12DE554", Offset = "0x12DE554", VA = "0x12DE554", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x12DE61C", Offset = "0x12DE61C", VA = "0x12DE61C")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0x12DE698", Offset = "0x12DE698", VA = "0x12DE698")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x12DE71C", Offset = "0x12DE71C", VA = "0x12DE71C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x12DE7A0", Offset = "0x12DE7A0", VA = "0x12DE7A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x12DE824", Offset = "0x12DE824", VA = "0x12DE824", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200073B")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4002EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4002EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x170007E6")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6003102")]
			[Address(RVA = "0x12E4828", Offset = "0x12E4828", VA = "0x12E4828", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007E7")]
		public override bool IsNull
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0x12E4830", Offset = "0x12E4830", VA = "0x12E4830", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170007E8")]
		public override string Value
		{
			[Token(Token = "0x6003105")]
			[Address(RVA = "0x12E4858", Offset = "0x12E4858", VA = "0x12E4858", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003106")]
			[Address(RVA = "0x12E489C", Offset = "0x12E489C", VA = "0x12E489C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170007E9")]
		public override bool AsBool
		{
			[Token(Token = "0x6003107")]
			[Address(RVA = "0x12E48A0", Offset = "0x12E48A0", VA = "0x12E48A0", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003108")]
			[Address(RVA = "0x12E48A8", Offset = "0x12E48A8", VA = "0x12E48A8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0x12DD1A4", Offset = "0x12DD1A4", VA = "0x12DD1A4")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6003101")]
		[Address(RVA = "0x12E47C4", Offset = "0x12E47C4", VA = "0x12E47C4")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6003104")]
		[Address(RVA = "0x12E4838", Offset = "0x12E4838", VA = "0x12E4838", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0x12E48AC", Offset = "0x12E48AC", VA = "0x12E48AC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x12E4944", Offset = "0x12E4944", VA = "0x12E4944", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x12E494C", Offset = "0x12E494C", VA = "0x12E494C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB2AFEC", Offset = "0xB2AFEC")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4002EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170007EA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600310D")]
			[Address(RVA = "0x12E0754", Offset = "0x12E0754", VA = "0x12E0754", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170007EB")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003112")]
			[Address(RVA = "0x12E0860", Offset = "0x12E0860", VA = "0x12E0860", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003113")]
			[Address(RVA = "0x12E08BC", Offset = "0x12E08BC", VA = "0x12E08BC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170007EC")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003114")]
			[Address(RVA = "0x12E0944", Offset = "0x12E0944", VA = "0x12E0944", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003115")]
			[Address(RVA = "0x12E09B0", Offset = "0x12E09B0", VA = "0x12E09B0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170007ED")]
		public override int AsInt
		{
			[Token(Token = "0x600311C")]
			[Address(RVA = "0x12E0C4C", Offset = "0x12E0C4C", VA = "0x12E0C4C", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600311D")]
			[Address(RVA = "0x12E0D2C", Offset = "0x12E0D2C", VA = "0x12E0D2C", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170007EE")]
		public override float AsFloat
		{
			[Token(Token = "0x600311E")]
			[Address(RVA = "0x12E0D98", Offset = "0x12E0D98", VA = "0x12E0D98", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600311F")]
			[Address(RVA = "0x12E0E00", Offset = "0x12E0E00", VA = "0x12E0E00", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170007EF")]
		public override double AsDouble
		{
			[Token(Token = "0x6003120")]
			[Address(RVA = "0x12E0E6C", Offset = "0x12E0E6C", VA = "0x12E0E6C", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6003121")]
			[Address(RVA = "0x12E0ED4", Offset = "0x12E0ED4", VA = "0x12E0ED4", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170007F0")]
		public override bool AsBool
		{
			[Token(Token = "0x6003122")]
			[Address(RVA = "0x12E0F40", Offset = "0x12E0F40", VA = "0x12E0F40", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003123")]
			[Address(RVA = "0x12E0FA8", Offset = "0x12E0FA8", VA = "0x12E0FA8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170007F1")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6003124")]
			[Address(RVA = "0x12E1014", Offset = "0x12E1014", VA = "0x12E1014", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007F2")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6003125")]
			[Address(RVA = "0x12E1078", Offset = "0x12E1078", VA = "0x12E1078", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600310E")]
		[Address(RVA = "0x12E075C", Offset = "0x12E075C", VA = "0x12E075C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0x12DCE6C", Offset = "0x12DCE6C", VA = "0x12DCE6C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x12E077C", Offset = "0x12E077C", VA = "0x12E077C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0x12E07F8", Offset = "0x12E07F8", VA = "0x12E07F8")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0x12E0AE4", Offset = "0x12E0AE4", VA = "0x12E0AE4", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0x12E0B6C", Offset = "0x12E0B6C", VA = "0x12E0B6C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6003118")]
		[Address(RVA = "0x12E0BFC", Offset = "0x12E0BFC", VA = "0x12E0BFC")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003119")]
		[Address(RVA = "0x12E0C14", Offset = "0x12E0C14", VA = "0x12E0C14")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0x12E0C2C", Offset = "0x12E0C2C", VA = "0x12E0C2C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x12E0C44", Offset = "0x12E0C44", VA = "0x12E0C44", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003126")]
		[Address(RVA = "0x12E10DC", Offset = "0x12E10DC", VA = "0x12E10DC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200073D")]
	public static class JSON
	{
		[Token(Token = "0x6003127")]
		[Address(RVA = "0x12DBFEC", Offset = "0x12DBFEC", VA = "0x12DBFEC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200073E")]
	public class Translation
	{
		[Token(Token = "0x4002EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SupportedLanguages language;

		[Token(Token = "0x4002EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string word;

		[Token(Token = "0x6003128")]
		[Address(RVA = "0x1176CE0", Offset = "0x1176CE0", VA = "0x1176CE0")]
		public Translation(SupportedLanguages language, string word)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200073F")]
	public class TranslatedWord
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B024", Offset = "0xB2B024")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SupportedLanguages language;

			[Token(Token = "0x600312D")]
			[Address(RVA = "0xF26E6C", Offset = "0xF26E6C", VA = "0xF26E6C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600312E")]
			[Address(RVA = "0xF26E74", Offset = "0xF26E74", VA = "0xF26E74")]
			internal bool <GetWord>b__0(Translation cond)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB2B034", Offset = "0xB2B034")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SupportedLanguages language;

			[Token(Token = "0x600312F")]
			[Address(RVA = "0xF26E98", Offset = "0xF26E98", VA = "0xF26E98")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6003130")]
			[Address(RVA = "0xF26EA0", Offset = "0xF26EA0", VA = "0xF26EA0")]
			internal bool <SetWord>b__0(Translation cond)
			{
				return default(bool);
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool folded;

		[Token(Token = "0x4002EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ID;

		[Token(Token = "0x4002EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int enumID;

		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Translation> translations;

		[Token(Token = "0x6003129")]
		[Address(RVA = "0x1176B58", Offset = "0x1176B58", VA = "0x1176B58")]
		public TranslatedWord(List<SystemLanguage> supportedLanguages, bool folded)
		{
		}

		[Token(Token = "0x600312A")]
		[Address(RVA = "0x1176D1C", Offset = "0x1176D1C", VA = "0x1176D1C")]
		public TranslatedWord()
		{
		}

		[Token(Token = "0x600312B")]
		[Address(RVA = "0x1176D98", Offset = "0x1176D98", VA = "0x1176D98")]
		public string GetWord(SupportedLanguages language)
		{
			return null;
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0x1176EAC", Offset = "0x1176EAC", VA = "0x1176EAC")]
		public void SetWord(string word, SupportedLanguages language)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000742")]
	public class LanguageAdjustments
	{
		[Serializable]
		[Token(Token = "0x2000743")]
		public class Adjustment
		{
			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SupportedLanguages m_Language;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB375B8", Offset = "0xB375B8")]
			public int m_FontSize;

			[Token(Token = "0x6003133")]
			[Address(RVA = "0xFFEAB8", Offset = "0xFFEAB8", VA = "0xFFEAB8")]
			public Adjustment()
			{
			}
		}

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Adjustment[] m_Adjustments;

		[Token(Token = "0x6003131")]
		[Address(RVA = "0x12EACA0", Offset = "0x12EACA0", VA = "0x12EACA0")]
		public bool TryGetCurrentAdjustment(out Adjustment result)
		{
			return default(bool);
		}

		[Token(Token = "0x6003132")]
		[Address(RVA = "0x12EAD40", Offset = "0x12EAD40", VA = "0x12EAD40")]
		public LanguageAdjustments()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[DisallowMultipleComponent]
	public class TMPTextLocalizationComponent : MonoBehaviour, ILocalizationComponent
	{
		[Token(Token = "0x4002EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _OriginalValue;

		[Token(Token = "0x4002ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_Automatic;

		[Token(Token = "0x4002ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WordIDs wordID;

		[Token(Token = "0x4002ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageAdjustments m_LanguageAdjustments;

		[Token(Token = "0x6003134")]
		[Address(RVA = "0x11BBBA4", Offset = "0x11BBBA4", VA = "0x11BBBA4", Slot = "4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6003135")]
		[Address(RVA = "0x11BBDC4", Offset = "0x11BBDC4", VA = "0x11BBDC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6003136")]
		[Address(RVA = "0x11BBDC8", Offset = "0x11BBDC8", VA = "0x11BBDC8")]
		public TMPTextLocalizationComponent()
		{
		}
	}
	[Token(Token = "0x2000745")]
	[DisallowMultipleComponent]
	public class TextMeshLocalizationComponent : MonoBehaviour, ILocalizationComponent
	{
		[Token(Token = "0x4002ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _OriginalValue;

		[Token(Token = "0x4002ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_Automatic;

		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WordIDs wordID;

		[Token(Token = "0x4002ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LanguageAdjustments m_LanguageAdjustments;

		[Token(Token = "0x6003137")]
		[Address(RVA = "0x1166BBC", Offset = "0x1166BBC", VA = "0x1166BBC", Slot = "4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0x1166DB4", Offset = "0x1166DB4", VA = "0x1166DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0x1166DB8", Offset = "0x1166DB8", VA = "0x1166DB8")]
		public TextMeshLocalizationComponent()
		{
		}
	}
}
namespace AppLauncherPlugin
{
	[Token(Token = "0x2000746")]
	public class AppLauncher
	{
		[Token(Token = "0x2000747")]
		public enum GalleryContent
		{
			[Token(Token = "0x4002ED3")]
			DEFAULT,
			[Token(Token = "0x4002ED4")]
			IMAGE,
			[Token(Token = "0x4002ED5")]
			VIDEO
		}

		[Token(Token = "0x4002ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass _plugin;

		[Token(Token = "0x600313A")]
		[Address(RVA = "0xFEDA00", Offset = "0xFEDA00", VA = "0xFEDA00")]
		static AppLauncher()
		{
		}

		[Token(Token = "0x600313B")]
		[Address(RVA = "0xFEDA9C", Offset = "0xFEDA9C", VA = "0xFEDA9C")]
		public static bool LaunchLinkedInApp(string profileId, LinkedInProfileType profileType, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x600313C")]
		[Address(RVA = "0xFEDC58", Offset = "0xFEDC58", VA = "0xFEDC58")]
		public static bool LaunchFacebookApp(string id, FacebookProfileType pageType, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0xFEDE14", Offset = "0xFEDE14", VA = "0xFEDE14")]
		public static bool LaunchTwitter(string screenName, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x600313E")]
		[Address(RVA = "0xFEDF78", Offset = "0xFEDF78", VA = "0xFEDF78")]
		public static bool LaunchSMS(string phoneNo, string message, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x600313F")]
		[Address(RVA = "0xFEE114", Offset = "0xFEE114", VA = "0xFEE114")]
		public static bool LaunchEmailApp(string emailId, string subject, string message, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0xFEE2DC", Offset = "0xFEE2DC", VA = "0xFEE2DC")]
		public static bool LaunchSettings(SettingType type, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0xFEE46C", Offset = "0xFEE46C", VA = "0xFEE46C")]
		public static bool LaunchApp(string packageName, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6003142")]
		[Address(RVA = "0xFEE5D0", Offset = "0xFEE5D0", VA = "0xFEE5D0")]
		public static bool LaunchWhatsApp(string msg, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6003143")]
		[Address(RVA = "0xFEE7B8", Offset = "0xFEE7B8", VA = "0xFEE7B8")]
		public static bool LaunchAppWithParameters(string packageName, Dictionary<string, string> parameters, string callback)
		{
			return default(bool);
		}

		[Token(Token = "0x6003144")]
		[Address(RVA = "0xFEEC58", Offset = "0xFEEC58", VA = "0xFEEC58")]
		public AppLauncher()
		{
		}
	}
	[Token(Token = "0x2000748")]
	public enum SettingType
	{
		[Token(Token = "0x4002ED7")]
		DEFAULT,
		[Token(Token = "0x4002ED8")]
		SOUND_SETTING,
		[Token(Token = "0x4002ED9")]
		ACCESSBILITY_SETTING,
		[Token(Token = "0x4002EDA")]
		AIRPLANE_MODE_SETTING,
		[Token(Token = "0x4002EDB")]
		DATE_SETTING,
		[Token(Token = "0x4002EDC")]
		BLUETOOTH_SETTING,
		[Token(Token = "0x4002EDD")]
		WIFI,
		[Token(Token = "0x4002EDE")]
		KEYBOARD
	}
	[Token(Token = "0x2000749")]
	public enum LinkedInProfileType
	{
		[Token(Token = "0x4002EE0")]
		INDIVIDUAL,
		[Token(Token = "0x4002EE1")]
		COMPANY
	}
	[Token(Token = "0x200074A")]
	public enum FacebookProfileType
	{
		[Token(Token = "0x4002EE3")]
		PROFILE,
		[Token(Token = "0x4002EE4")]
		PAGE,
		[Token(Token = "0x4002EE5")]
		GROUP
	}
	[Token(Token = "0x200074B")]
	public class AppLauncherEvent : MonoBehaviour
	{
		[Token(Token = "0x4002EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string log;

		[Token(Token = "0x6003145")]
		[Address(RVA = "0xFEEC60", Offset = "0xFEEC60", VA = "0xFEEC60")]
		private void OnSuccess(string message)
		{
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0xFEECC8", Offset = "0xFEECC8", VA = "0xFEECC8")]
		private void OnError(string message)
		{
		}

		[Token(Token = "0x6003147")]
		[Address(RVA = "0xFEED30", Offset = "0xFEED30", VA = "0xFEED30")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6003148")]
		[Address(RVA = "0xFEEE0C", Offset = "0xFEEE0C", VA = "0xFEEE0C")]
		public AppLauncherEvent()
		{
		}
	}
}
